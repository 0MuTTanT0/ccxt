declare function logTemplate(exchange: any, method: any, entry: any): string;
declare function assertStructureKeys(exchange: any, method: any, entry: any, format: any, emptyNotAllowedFor?: any[]): void;
declare function assertCommonTimestamp(exchange: any, method: any, entry: any, nowToCheck?: any, keyName?: any): void;
declare function assertCurrencyCode(exchange: any, method: any, entry: any, actualCode: any, expectedCode?: any): void;
declare function assertSymbol(exchange: any, method: any, entry: any, key: any, expectedSymbol?: any): void;
declare function assertGreater(exchange: any, method: any, entry: any, key: any, compareTo: any): void;
declare function assertGreaterOrEqual(exchange: any, method: any, entry: any, key: any, compareTo: any): void;
declare function assertLess(exchange: any, method: any, entry: any, key: any, compareTo: any): void;
declare function assertLessOrEqual(exchange: any, method: any, entry: any, key: any, compareTo: any): void;
declare function assertAgainstArray(exchange: any, method: any, entry: any, key: any, expectedArray: any): void;
declare function reviseFeeObject(exchange: any, method: any, entry: any): void;
declare function reviseFeesObject(exchange: any, method: any, entry: any): void;
declare function reviseSortedTimestamps(exchange: any, method: any, codeOrSymbol: any, items: any, ascending?: boolean): void;
declare const _default: {
    logTemplate: typeof logTemplate;
    assertCommonTimestamp: typeof assertCommonTimestamp;
    assertStructureKeys: typeof assertStructureKeys;
    assertSymbol: typeof assertSymbol;
    assertCurrencyCode: typeof assertCurrencyCode;
    assertAgainstArray: typeof assertAgainstArray;
    reviseFeeObject: typeof reviseFeeObject;
    reviseFeesObject: typeof reviseFeesObject;
    reviseSortedTimestamps: typeof reviseSortedTimestamps;
    assertGreater: typeof assertGreater;
    assertGreaterOrEqual: typeof assertGreaterOrEqual;
    assertLess: typeof assertLess;
    assertLessOrEqual: typeof assertLessOrEqual;
};
export default _default;
