import { Exchange } from './base/Exchange.js';
export default class binance extends Exchange {
    describe(): any;
    isInverse(type: any, subType?: any): boolean;
    isLinear(type: any, subType?: any): boolean;
    setSandboxMode(enable: any): void;
    convertExpireDate(date: any): string;
    createExpiredOptionMarket(symbol: any): {
        id: string;
        symbol: string;
        base: any;
        quote: string;
        baseId: any;
        quoteId: string;
        active: any;
        type: string;
        linear: any;
        inverse: any;
        spot: boolean;
        swap: boolean;
        future: boolean;
        option: boolean;
        margin: boolean;
        contract: boolean;
        contractSize: any;
        expiry: number;
        expiryDatetime: string;
        optionType: string;
        strike: string;
        settle: string;
        settleId: string;
        precision: {
            amount: any;
            price: any;
        };
        limits: {
            amount: {
                min: any;
                max: any;
            };
            price: {
                min: any;
                max: any;
            };
            cost: {
                min: any;
                max: any;
            };
        };
        info: any;
    };
    market(symbol: any): any;
    safeMarket(marketId?: any, market?: any, delimiter?: any, marketType?: any): any;
    costToPrecision(symbol: any, cost: any): any;
    currencyToPrecision(code: any, fee: any, networkCode?: any): any;
    nonce(): number;
    fetchTime(params?: {}): Promise<number>;
    fetchCurrencies(params?: {}): Promise<{}>;
    fetchMarkets(params?: {}): Promise<any[]>;
    parseMarket(market: any): {
        id: string;
        lowercaseId: string;
        symbol: string;
        base: any;
        quote: any;
        settle: any;
        baseId: string;
        quoteId: string;
        settleId: string;
        type: any;
        spot: boolean;
        margin: any;
        swap: boolean;
        future: boolean;
        option: boolean;
        active: boolean;
        contract: boolean;
        linear: any;
        inverse: any;
        taker: any;
        maker: any;
        contractSize: any;
        expiry: number;
        expiryDatetime: string;
        strike: number;
        optionType: string;
        precision: {
            amount: number;
            price: number;
            base: number;
            quote: number;
        };
        limits: {
            leverage: {
                min: any;
                max: any;
            };
            amount: {
                min: number;
                max: number;
            };
            price: {
                min: any;
                max: any;
            };
            cost: {
                min: any;
                max: any;
            };
        };
        info: any;
    };
    parseBalanceHelper(entry: any): import("./base/types.js").Balance;
    parseBalance(response: any, type?: any, marginMode?: any): {
        info: any;
    };
    fetchBalance(params?: {}): Promise<{
        info: any;
    }>;
    fetchOrderBook(symbol: any, limit?: any, params?: {}): Promise<import("./base/types.js").OrderBook>;
    parseTicker(ticker: any, market?: any): import("./base/types.js").Ticker;
    fetchStatus(params?: {}): Promise<{
        status: string;
        updated: any;
        eta: any;
        url: any;
        info: any;
    }>;
    fetchTicker(symbol: any, params?: {}): Promise<import("./base/types.js").Ticker>;
    fetchBidsAsks(symbols?: string[], params?: {}): Promise<any>;
    fetchLastPrices(symbols?: string[], params?: {}): Promise<any>;
    parseLastPrice(info: any, market?: any): {
        symbol: any;
        timestamp: number;
        datetime: string;
        price: number;
        side: any;
        baseVolume: any;
        quoteVolume: any;
        info: any;
    };
    fetchTickers(symbols?: string[], params?: {}): Promise<any>;
    parseOHLCV(ohlcv: any, market?: any): number[];
    fetchOHLCV(symbol: any, timeframe?: string, since?: any, limit?: any, params?: {}): Promise<import("./base/types.js").OHLCV[]>;
    parseTrade(trade: any, market?: any): import("./base/types.js").Trade | {
        id: any;
        timestamp: number;
        datetime: string;
        symbol: any;
        order: string;
        type: any;
        takerOrMaker: any;
        side: any;
        amount: number;
        price: number;
        cost: number;
        fee: {
            currency: any;
            cost: number;
        };
        info: any;
    };
    fetchTrades(symbol: any, since?: any, limit?: any, params?: {}): Promise<import("./base/types.js").Trade[]>;
    editOrder(id: any, symbol: any, type: any, side: any, amount: any, price?: any, params?: {}): Promise<any>;
    parseOrderStatus(status: any): string;
    parseOrder(order: any, market?: any): any;
    createOrder(symbol: any, type: any, side: any, amount: any, price?: any, params?: {}): Promise<any>;
    fetchOrder(id: any, symbol?: string, params?: {}): Promise<any>;
    fetchOrders(symbol?: string, since?: any, limit?: any, params?: {}): Promise<import("./base/types.js").Order[]>;
    fetchOpenOrders(symbol?: string, since?: any, limit?: any, params?: {}): Promise<import("./base/types.js").Order[]>;
    fetchClosedOrders(symbol?: string, since?: any, limit?: any, params?: {}): Promise<any[]>;
    cancelOrder(id: any, symbol?: string, params?: {}): Promise<any>;
    cancelAllOrders(symbol?: string, params?: {}): Promise<any>;
    fetchOrderTrades(id: any, symbol?: string, since?: any, limit?: any, params?: {}): Promise<import("./base/types.js").Trade[]>;
    fetchMyTrades(symbol?: string, since?: any, limit?: any, params?: {}): Promise<import("./base/types.js").Trade[]>;
    fetchMyDustTrades(symbol?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    parseDustTrade(trade: any, market?: any): {
        id: any;
        timestamp: number;
        datetime: string;
        symbol: any;
        order: string;
        type: any;
        takerOrMaker: any;
        side: any;
        amount: number;
        price: number;
        cost: number;
        fee: {
            currency: any;
            cost: number;
        };
        info: any;
    };
    fetchDeposits(code?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    fetchWithdrawals(code?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    parseTransactionStatusByType(status: any, type?: any): string;
    parseTransaction(transaction: any, currency?: any): {
        info: any;
        id: string;
        txid: string;
        timestamp: any;
        datetime: string;
        network: string;
        address: string;
        addressTo: string;
        addressFrom: any;
        tag: string;
        tagTo: string;
        tagFrom: any;
        type: string;
        amount: number;
        currency: any;
        status: string;
        updated: number;
        internal: number;
        fee: any;
    };
    parseTransferStatus(status: any): string;
    parseTransfer(transfer: any, currency?: any): {
        info: any;
        id: string;
        timestamp: number;
        datetime: string;
        currency: any;
        amount: number;
        fromAccount: any;
        toAccount: any;
        status: string;
    };
    parseIncome(income: any, market?: any): {
        info: any;
        symbol: any;
        code: any;
        timestamp: number;
        datetime: string;
        id: string;
        amount: number;
    };
    transfer(code: any, amount: any, fromAccount: any, toAccount: any, params?: {}): Promise<{
        info: any;
        id: string;
        timestamp: number;
        datetime: string;
        currency: any;
        amount: number;
        fromAccount: any;
        toAccount: any;
        status: string;
    }>;
    fetchTransfers(code?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    fetchDepositAddress(code: any, params?: {}): Promise<{
        currency: any;
        address: string;
        tag: string;
        network: any;
        info: any;
    }>;
    fetchTransactionFees(codes?: string[], params?: {}): Promise<{
        withdraw: {};
        deposit: {};
        info: any;
    }>;
    fetchDepositWithdrawFees(codes?: string[], params?: {}): Promise<any>;
    parseDepositWithdrawFee(fee: any, currency?: any): any;
    withdraw(code: any, amount: any, address: any, tag?: any, params?: {}): Promise<{
        info: any;
        id: string;
        txid: string;
        timestamp: any;
        datetime: string;
        network: string;
        address: string;
        addressTo: string;
        addressFrom: any;
        tag: string;
        tagTo: string;
        tagFrom: any;
        type: string;
        amount: number;
        currency: any;
        status: string;
        updated: number;
        internal: number;
        fee: any;
    }>;
    parseTradingFee(fee: any, market?: any): {
        info: any;
        symbol: any;
        maker: number;
        taker: number;
    };
    fetchTradingFee(symbol: any, params?: {}): Promise<{
        info: any;
        symbol: any;
        maker: number;
        taker: number;
    }>;
    fetchTradingFees(params?: {}): Promise<{}>;
    futuresTransfer(code: any, amount: any, type: any, params?: {}): Promise<{
        info: any;
        id: string;
        timestamp: number;
        datetime: string;
        currency: any;
        amount: number;
        fromAccount: any;
        toAccount: any;
        status: string;
    }>;
    fetchFundingRate(symbol: any, params?: {}): Promise<{
        info: any;
        symbol: any;
        markPrice: number;
        indexPrice: number;
        interestRate: number;
        estimatedSettlePrice: number;
        timestamp: number;
        datetime: string;
        fundingRate: number;
        fundingTimestamp: number;
        fundingDatetime: string;
        nextFundingRate: any;
        nextFundingTimestamp: any;
        nextFundingDatetime: any;
        previousFundingRate: any;
        previousFundingTimestamp: any;
        previousFundingDatetime: any;
    }>;
    fetchFundingRateHistory(symbol?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    fetchFundingRates(symbols?: string[], params?: {}): Promise<any>;
    parseFundingRate(contract: any, market?: any): {
        info: any;
        symbol: any;
        markPrice: number;
        indexPrice: number;
        interestRate: number;
        estimatedSettlePrice: number;
        timestamp: number;
        datetime: string;
        fundingRate: number;
        fundingTimestamp: number;
        fundingDatetime: string;
        nextFundingRate: any;
        nextFundingTimestamp: any;
        nextFundingDatetime: any;
        previousFundingRate: any;
        previousFundingTimestamp: any;
        previousFundingDatetime: any;
    };
    parseAccountPositions(account: any): any[];
    parseAccountPosition(position: any, market?: any): {
        info: any;
        id: any;
        symbol: string;
        timestamp: number;
        datetime: string;
        initialMargin: number;
        initialMarginPercentage: number;
        maintenanceMargin: number;
        maintenanceMarginPercentage: number;
        entryPrice: number;
        notional: number;
        leverage: number;
        unrealizedPnl: number;
        contracts: number;
        contractSize: any;
        marginRatio: any;
        liquidationPrice: any;
        markPrice: any;
        collateral: number;
        marginMode: any;
        side: any;
        hedged: boolean;
        percentage: any;
    };
    parsePositionRisk(position: any, market?: any): {
        info: any;
        id: any;
        symbol: string;
        contracts: number;
        contractSize: any;
        unrealizedPnl: number;
        leverage: number;
        liquidationPrice: number;
        collateral: number;
        notional: number;
        markPrice: number;
        entryPrice: number;
        timestamp: number;
        initialMargin: number;
        initialMarginPercentage: number;
        maintenanceMargin: number;
        maintenanceMarginPercentage: number;
        marginRatio: any;
        datetime: string;
        marginMode: string;
        marginType: string;
        side: any;
        hedged: boolean;
        percentage: any;
    };
    loadLeverageBrackets(reload?: boolean, params?: {}): Promise<any>;
    fetchLeverageTiers(symbols?: string[], params?: {}): Promise<{}>;
    parseMarketLeverageTiers(info: any, market?: any): any[];
    fetchPositions(symbols?: string[], params?: {}): Promise<any>;
    fetchAccountPositions(symbols?: string[], params?: {}): Promise<any>;
    fetchPositionsRisk(symbols?: string[], params?: {}): Promise<any>;
    fetchFundingHistory(symbol?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    setLeverage(leverage: any, symbol?: string, params?: {}): Promise<any>;
    setMarginMode(marginMode: any, symbol?: string, params?: {}): Promise<any>;
    setPositionMode(hedged: any, symbol?: string, params?: {}): Promise<any>;
    fetchSettlementHistory(symbol?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    parseSettlement(settlement: any, market: any): {
        info: any;
        symbol: any;
        price: number;
        timestamp: number;
        datetime: string;
    };
    parseSettlements(settlements: any, market: any): any[];
    fetchLedger(code?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    parseLedgerEntry(item: any, currency?: any): {
        id: string;
        direction: any;
        account: any;
        referenceAccount: any;
        referenceId: string;
        type: string;
        currency: any;
        amount: number;
        timestamp: number;
        datetime: string;
        before: any;
        after: any;
        status: any;
        fee: any;
        info: any;
    };
    parseLedgerEntryType(type: any): string;
    sign(path: any, api?: any, method?: string, params?: {}, headers?: any, body?: any): {
        url: any;
        method: string;
        body: any;
        headers: any;
    };
    handleErrors(code: any, reason: any, url: any, method: any, headers: any, body: any, response: any, requestHeaders: any, requestBody: any): any;
    calculateRateLimiterCost(api: any, method: any, path: any, params: any, config?: {}, context?: {}): any;
    request(path: any, api?: any, method?: string, params?: {}, headers?: any, body?: any, config?: {}, context?: {}): Promise<any>;
    modifyMarginHelper(symbol: any, amount: any, addOrReduce: any, params?: {}): Promise<any>;
    parseMarginModification(data: any, market?: any): {
        info: any;
        type: string;
        amount: number;
        code: any;
        symbol: any;
        status: string;
    };
    reduceMargin(symbol: any, amount: any, params?: {}): Promise<any>;
    addMargin(symbol: any, amount: any, params?: {}): Promise<any>;
    fetchBorrowRate(code: any, params?: {}): Promise<{
        currency: any;
        rate: number;
        period: number;
        timestamp: number;
        datetime: string;
        info: any;
    }>;
    fetchBorrowRateHistory(code: any, since?: any, limit?: any, params?: {}): Promise<any>;
    parseBorrowRateHistory(response: any, code: any, since: any, limit: any): any;
    parseBorrowRate(info: any, currency?: any): {
        currency: any;
        rate: number;
        period: number;
        timestamp: number;
        datetime: string;
        info: any;
    };
    createGiftCode(code: any, amount: any, params?: {}): Promise<{
        info: any;
        id: string;
        code: string;
        currency: any;
        amount: any;
    }>;
    redeemGiftCode(giftcardCode: any, params?: {}): Promise<any>;
    verifyGiftCode(id: any, params?: {}): Promise<any>;
    fetchBorrowInterest(code?: string, symbol?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    parseBorrowInterest(info: any, market?: any): {
        account: string;
        symbol: string;
        marginMode: string;
        currency: any;
        interest: number;
        interestRate: number;
        amountBorrowed: number;
        timestamp: number;
        datetime: string;
        info: any;
    };
    repayMargin(code: any, amount: any, symbol?: string, params?: {}): Promise<{
        id: number;
        currency: any;
        amount: any;
        symbol: any;
        timestamp: any;
        datetime: any;
        info: any;
    }>;
    borrowMargin(code: any, amount: any, symbol?: string, params?: {}): Promise<{
        id: number;
        currency: any;
        amount: any;
        symbol: any;
        timestamp: any;
        datetime: any;
        info: any;
    }>;
    parseMarginLoan(info: any, currency?: any): {
        id: number;
        currency: any;
        amount: any;
        symbol: any;
        timestamp: any;
        datetime: any;
        info: any;
    };
    fetchOpenInterestHistory(symbol: any, timeframe?: string, since?: any, limit?: any, params?: {}): Promise<any>;
    fetchOpenInterest(symbol: any, params?: {}): Promise<any>;
    parseOpenInterest(interest: any, market?: any): {
        symbol: any;
        baseVolume: number;
        quoteVolume: number;
        openInterestAmount: number;
        openInterestValue: number;
        timestamp: number;
        datetime: string;
        info: any;
    };
    sapiGetSystemStatus (params?: {}): Promise<{} | string>;
    sapiGetAccountSnapshot (params?: {}): Promise<{} | string>;
    sapiGetMarginAsset (params?: {}): Promise<{} | string>;
    sapiGetMarginPair (params?: {}): Promise<{} | string>;
    sapiGetMarginAllAssets (params?: {}): Promise<{} | string>;
    sapiGetMarginAllPairs (params?: {}): Promise<{} | string>;
    sapiGetMarginPriceIndex (params?: {}): Promise<{} | string>;
    sapiGetAssetAssetDividend (params?: {}): Promise<{} | string>;
    sapiGetAssetDribblet (params?: {}): Promise<{} | string>;
    sapiGetAssetTransfer (params?: {}): Promise<{} | string>;
    sapiGetAssetAssetDetail (params?: {}): Promise<{} | string>;
    sapiGetAssetTradeFee (params?: {}): Promise<{} | string>;
    sapiGetAssetLedgerTransferCloudMiningQueryByPage (params?: {}): Promise<{} | string>;
    sapiGetMarginLoan (params?: {}): Promise<{} | string>;
    sapiGetMarginRepay (params?: {}): Promise<{} | string>;
    sapiGetMarginAccount (params?: {}): Promise<{} | string>;
    sapiGetMarginTransfer (params?: {}): Promise<{} | string>;
    sapiGetMarginInterestHistory (params?: {}): Promise<{} | string>;
    sapiGetMarginForceLiquidationRec (params?: {}): Promise<{} | string>;
    sapiGetMarginOrder (params?: {}): Promise<{} | string>;
    sapiGetMarginOpenOrders (params?: {}): Promise<{} | string>;
    sapiGetMarginAllOrders (params?: {}): Promise<{} | string>;
    sapiGetMarginMyTrades (params?: {}): Promise<{} | string>;
    sapiGetMarginMaxBorrowable (params?: {}): Promise<{} | string>;
    sapiGetMarginMaxTransferable (params?: {}): Promise<{} | string>;
    sapiGetMarginTradeCoeff (params?: {}): Promise<{} | string>;
    sapiGetMarginIsolatedTransfer (params?: {}): Promise<{} | string>;
    sapiGetMarginIsolatedAccount (params?: {}): Promise<{} | string>;
    sapiGetMarginIsolatedPair (params?: {}): Promise<{} | string>;
    sapiGetMarginIsolatedAllPairs (params?: {}): Promise<{} | string>;
    sapiGetMarginIsolatedAccountLimit (params?: {}): Promise<{} | string>;
    sapiGetMarginInterestRateHistory (params?: {}): Promise<{} | string>;
    sapiGetMarginOrderList (params?: {}): Promise<{} | string>;
    sapiGetMarginAllOrderList (params?: {}): Promise<{} | string>;
    sapiGetMarginOpenOrderList (params?: {}): Promise<{} | string>;
    sapiGetMarginCrossMarginData (params?: {}): Promise<{} | string>;
    sapiGetMarginIsolatedMarginData (params?: {}): Promise<{} | string>;
    sapiGetMarginIsolatedMarginTier (params?: {}): Promise<{} | string>;
    sapiGetMarginRateLimitOrder (params?: {}): Promise<{} | string>;
    sapiGetMarginDribblet (params?: {}): Promise<{} | string>;
    sapiGetMarginCrossMarginCollateralRatio (params?: {}): Promise<{} | string>;
    sapiGetMarginExchangeSmallLiability (params?: {}): Promise<{} | string>;
    sapiGetMarginExchangeSmallLiabilityHistory (params?: {}): Promise<{} | string>;
    sapiGetMarginNextHourlyInterestRate (params?: {}): Promise<{} | string>;
    sapiGetLoanIncome (params?: {}): Promise<{} | string>;
    sapiGetLoanOngoingOrders (params?: {}): Promise<{} | string>;
    sapiGetLoanLtvAdjustmentHistory (params?: {}): Promise<{} | string>;
    sapiGetLoanBorrowHistory (params?: {}): Promise<{} | string>;
    sapiGetLoanRepayHistory (params?: {}): Promise<{} | string>;
    sapiGetLoanLoanableData (params?: {}): Promise<{} | string>;
    sapiGetLoanCollateralData (params?: {}): Promise<{} | string>;
    sapiGetLoanRepayCollateralRate (params?: {}): Promise<{} | string>;
    sapiGetLoanVipOngoingOrders (params?: {}): Promise<{} | string>;
    sapiGetLoanVipRepayHistory (params?: {}): Promise<{} | string>;
    sapiGetLoanVipCollateralAccount (params?: {}): Promise<{} | string>;
    sapiGetFiatOrders (params?: {}): Promise<{} | string>;
    sapiGetFiatPayments (params?: {}): Promise<{} | string>;
    sapiGetFuturesTransfer (params?: {}): Promise<{} | string>;
    sapiGetFuturesLoanBorrowHistory (params?: {}): Promise<{} | string>;
    sapiGetFuturesLoanRepayHistory (params?: {}): Promise<{} | string>;
    sapiGetFuturesLoanWallet (params?: {}): Promise<{} | string>;
    sapiGetFuturesLoanAdjustCollateralHistory (params?: {}): Promise<{} | string>;
    sapiGetFuturesLoanLiquidationHistory (params?: {}): Promise<{} | string>;
    sapiGetRebateTaxQuery (params?: {}): Promise<{} | string>;
    sapiGetCapitalConfigGetall (params?: {}): Promise<{} | string>;
    sapiGetCapitalDepositAddress (params?: {}): Promise<{} | string>;
    sapiGetCapitalDepositHisrec (params?: {}): Promise<{} | string>;
    sapiGetCapitalDepositSubAddress (params?: {}): Promise<{} | string>;
    sapiGetCapitalDepositSubHisrec (params?: {}): Promise<{} | string>;
    sapiGetCapitalWithdrawHistory (params?: {}): Promise<{} | string>;
    sapiGetCapitalContractConvertibleCoins (params?: {}): Promise<{} | string>;
    sapiGetConvertTradeFlow (params?: {}): Promise<{} | string>;
    sapiGetConvertExchangeInfo (params?: {}): Promise<{} | string>;
    sapiGetConvertAssetInfo (params?: {}): Promise<{} | string>;
    sapiGetConvertOrderStatus (params?: {}): Promise<{} | string>;
    sapiGetAccountStatus (params?: {}): Promise<{} | string>;
    sapiGetAccountApiTradingStatus (params?: {}): Promise<{} | string>;
    sapiGetAccountApiRestrictionsIpRestriction (params?: {}): Promise<{} | string>;
    sapiGetBnbBurn (params?: {}): Promise<{} | string>;
    sapiGetSubAccountFuturesAccount (params?: {}): Promise<{} | string>;
    sapiGetSubAccountFuturesAccountSummary (params?: {}): Promise<{} | string>;
    sapiGetSubAccountFuturesPositionRisk (params?: {}): Promise<{} | string>;
    sapiGetSubAccountFuturesInternalTransfer (params?: {}): Promise<{} | string>;
    sapiGetSubAccountList (params?: {}): Promise<{} | string>;
    sapiGetSubAccountMarginAccount (params?: {}): Promise<{} | string>;
    sapiGetSubAccountMarginAccountSummary (params?: {}): Promise<{} | string>;
    sapiGetSubAccountSpotSummary (params?: {}): Promise<{} | string>;
    sapiGetSubAccountStatus (params?: {}): Promise<{} | string>;
    sapiGetSubAccountSubTransferHistory (params?: {}): Promise<{} | string>;
    sapiGetSubAccountTransferSubUserHistory (params?: {}): Promise<{} | string>;
    sapiGetSubAccountUniversalTransfer (params?: {}): Promise<{} | string>;
    sapiGetSubAccountApiRestrictionsIpRestrictionThirdPartyList (params?: {}): Promise<{} | string>;
    sapiGetManagedSubaccountAsset (params?: {}): Promise<{} | string>;
    sapiGetManagedSubaccountAccountSnapshot (params?: {}): Promise<{} | string>;
    sapiGetManagedSubaccountQueryTransLogForInvestor (params?: {}): Promise<{} | string>;
    sapiGetManagedSubaccountQueryTransLogForTradeParent (params?: {}): Promise<{} | string>;
    sapiGetManagedSubaccountFetchFutureAsset (params?: {}): Promise<{} | string>;
    sapiGetManagedSubaccountMarginAsset (params?: {}): Promise<{} | string>;
    sapiGetLendingDailyProductList (params?: {}): Promise<{} | string>;
    sapiGetLendingDailyUserLeftQuota (params?: {}): Promise<{} | string>;
    sapiGetLendingDailyUserRedemptionQuota (params?: {}): Promise<{} | string>;
    sapiGetLendingDailyTokenPosition (params?: {}): Promise<{} | string>;
    sapiGetLendingUnionAccount (params?: {}): Promise<{} | string>;
    sapiGetLendingUnionPurchaseRecord (params?: {}): Promise<{} | string>;
    sapiGetLendingUnionRedemptionRecord (params?: {}): Promise<{} | string>;
    sapiGetLendingUnionInterestHistory (params?: {}): Promise<{} | string>;
    sapiGetLendingProjectList (params?: {}): Promise<{} | string>;
    sapiGetLendingProjectPositionList (params?: {}): Promise<{} | string>;
    sapiGetMiningPubAlgoList (params?: {}): Promise<{} | string>;
    sapiGetMiningPubCoinList (params?: {}): Promise<{} | string>;
    sapiGetMiningWorkerDetail (params?: {}): Promise<{} | string>;
    sapiGetMiningWorkerList (params?: {}): Promise<{} | string>;
    sapiGetMiningPaymentList (params?: {}): Promise<{} | string>;
    sapiGetMiningStatisticsUserStatus (params?: {}): Promise<{} | string>;
    sapiGetMiningStatisticsUserList (params?: {}): Promise<{} | string>;
    sapiGetMiningPaymentUid (params?: {}): Promise<{} | string>;
    sapiGetBswapPools (params?: {}): Promise<{} | string>;
    sapiGetBswapLiquidity (params?: {}): Promise<{} | string>;
    sapiGetBswapLiquidityOps (params?: {}): Promise<{} | string>;
    sapiGetBswapQuote (params?: {}): Promise<{} | string>;
    sapiGetBswapSwap (params?: {}): Promise<{} | string>;
    sapiGetBswapPoolConfigure (params?: {}): Promise<{} | string>;
    sapiGetBswapAddLiquidityPreview (params?: {}): Promise<{} | string>;
    sapiGetBswapRemoveLiquidityPreview (params?: {}): Promise<{} | string>;
    sapiGetBswapUnclaimedRewards (params?: {}): Promise<{} | string>;
    sapiGetBswapClaimedHistory (params?: {}): Promise<{} | string>;
    sapiGetBlvtTokenInfo (params?: {}): Promise<{} | string>;
    sapiGetBlvtSubscribeRecord (params?: {}): Promise<{} | string>;
    sapiGetBlvtRedeemRecord (params?: {}): Promise<{} | string>;
    sapiGetBlvtUserLimit (params?: {}): Promise<{} | string>;
    sapiGetApiReferralIfNewUser (params?: {}): Promise<{} | string>;
    sapiGetApiReferralCustomization (params?: {}): Promise<{} | string>;
    sapiGetApiReferralUserCustomization (params?: {}): Promise<{} | string>;
    sapiGetApiReferralRebateRecentRecord (params?: {}): Promise<{} | string>;
    sapiGetApiReferralRebateHistoricalRecord (params?: {}): Promise<{} | string>;
    sapiGetApiReferralKickbackRecentRecord (params?: {}): Promise<{} | string>;
    sapiGetApiReferralKickbackHistoricalRecord (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountApi (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccount (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountApiCommissionFutures (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountApiCommissionCoinFutures (params?: {}): Promise<{} | string>;
    sapiGetBrokerInfo (params?: {}): Promise<{} | string>;
    sapiGetBrokerTransfer (params?: {}): Promise<{} | string>;
    sapiGetBrokerTransferFutures (params?: {}): Promise<{} | string>;
    sapiGetBrokerRebateRecentRecord (params?: {}): Promise<{} | string>;
    sapiGetBrokerRebateHistoricalRecord (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountBnbBurnStatus (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountDepositHist (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountSpotSummary (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountMarginSummary (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountFuturesSummary (params?: {}): Promise<{} | string>;
    sapiGetBrokerRebateFuturesRecentRecord (params?: {}): Promise<{} | string>;
    sapiGetBrokerSubAccountApiIpRestriction (params?: {}): Promise<{} | string>;
    sapiGetBrokerUniversalTransfer (params?: {}): Promise<{} | string>;
    sapiGetAccountApiRestrictions (params?: {}): Promise<{} | string>;
    sapiGetC2cOrderMatchListUserOrderHistory (params?: {}): Promise<{} | string>;
    sapiGetNftHistoryTransactions (params?: {}): Promise<{} | string>;
    sapiGetNftHistoryDeposit (params?: {}): Promise<{} | string>;
    sapiGetNftHistoryWithdraw (params?: {}): Promise<{} | string>;
    sapiGetNftUserGetAsset (params?: {}): Promise<{} | string>;
    sapiGetPayTransactions (params?: {}): Promise<{} | string>;
    sapiGetGiftcardVerify (params?: {}): Promise<{} | string>;
    sapiGetGiftcardCryptographyRsaPublicKey (params?: {}): Promise<{} | string>;
    sapiGetGiftcardBuyCodeTokenLimit (params?: {}): Promise<{} | string>;
    sapiGetAlgoFuturesOpenOrders (params?: {}): Promise<{} | string>;
    sapiGetAlgoFuturesHistoricalOrders (params?: {}): Promise<{} | string>;
    sapiGetAlgoFuturesSubOrders (params?: {}): Promise<{} | string>;
    sapiGetPortfolioAccount (params?: {}): Promise<{} | string>;
    sapiGetPortfolioCollateralRate (params?: {}): Promise<{} | string>;
    sapiGetPortfolioPmLoan (params?: {}): Promise<{} | string>;
    sapiGetPortfolioInterestHistory (params?: {}): Promise<{} | string>;
    sapiGetPortfolioInterestRate (params?: {}): Promise<{} | string>;
    sapiGetStakingProductList (params?: {}): Promise<{} | string>;
    sapiGetStakingPosition (params?: {}): Promise<{} | string>;
    sapiGetStakingStakingRecord (params?: {}): Promise<{} | string>;
    sapiGetStakingPersonalLeftQuota (params?: {}): Promise<{} | string>;
    sapiPostAssetDust (params?: {}): Promise<{} | string>;
    sapiPostAssetDustBtc (params?: {}): Promise<{} | string>;
    sapiPostAssetTransfer (params?: {}): Promise<{} | string>;
    sapiPostAssetGetFundingAsset (params?: {}): Promise<{} | string>;
    sapiPostAssetConvertTransfer (params?: {}): Promise<{} | string>;
    sapiPostAssetConvertTransferQueryByPage (params?: {}): Promise<{} | string>;
    sapiPostAccountDisableFastWithdrawSwitch (params?: {}): Promise<{} | string>;
    sapiPostAccountEnableFastWithdrawSwitch (params?: {}): Promise<{} | string>;
    sapiPostCapitalWithdrawApply (params?: {}): Promise<{} | string>;
    sapiPostCapitalContractConvertibleCoins (params?: {}): Promise<{} | string>;
    sapiPostMarginTransfer (params?: {}): Promise<{} | string>;
    sapiPostMarginLoan (params?: {}): Promise<{} | string>;
    sapiPostMarginRepay (params?: {}): Promise<{} | string>;
    sapiPostMarginOrder (params?: {}): Promise<{} | string>;
    sapiPostMarginOrderOco (params?: {}): Promise<{} | string>;
    sapiPostMarginExchangeSmallLiability (params?: {}): Promise<{} | string>;
    sapiPostMarginIsolatedTransfer (params?: {}): Promise<{} | string>;
    sapiPostMarginIsolatedAccount (params?: {}): Promise<{} | string>;
    sapiPostBnbBurn (params?: {}): Promise<{} | string>;
    sapiPostSubAccountVirtualSubAccount (params?: {}): Promise<{} | string>;
    sapiPostSubAccountMarginTransfer (params?: {}): Promise<{} | string>;
    sapiPostSubAccountMarginEnable (params?: {}): Promise<{} | string>;
    sapiPostSubAccountFuturesEnable (params?: {}): Promise<{} | string>;
    sapiPostSubAccountFuturesTransfer (params?: {}): Promise<{} | string>;
    sapiPostSubAccountFuturesInternalTransfer (params?: {}): Promise<{} | string>;
    sapiPostSubAccountTransferSubToSub (params?: {}): Promise<{} | string>;
    sapiPostSubAccountTransferSubToMaster (params?: {}): Promise<{} | string>;
    sapiPostSubAccountUniversalTransfer (params?: {}): Promise<{} | string>;
    sapiPostManagedSubaccountDeposit (params?: {}): Promise<{} | string>;
    sapiPostManagedSubaccountWithdraw (params?: {}): Promise<{} | string>;
    sapiPostUserDataStream (params?: {}): Promise<{} | string>;
    sapiPostUserDataStreamIsolated (params?: {}): Promise<{} | string>;
    sapiPostFuturesTransfer (params?: {}): Promise<{} | string>;
    sapiPostLendingCustomizedFixedPurchase (params?: {}): Promise<{} | string>;
    sapiPostLendingDailyPurchase (params?: {}): Promise<{} | string>;
    sapiPostLendingDailyRedeem (params?: {}): Promise<{} | string>;
    sapiPostBswapLiquidityAdd (params?: {}): Promise<{} | string>;
    sapiPostBswapLiquidityRemove (params?: {}): Promise<{} | string>;
    sapiPostBswapSwap (params?: {}): Promise<{} | string>;
    sapiPostBswapClaimRewards (params?: {}): Promise<{} | string>;
    sapiPostBlvtSubscribe (params?: {}): Promise<{} | string>;
    sapiPostBlvtRedeem (params?: {}): Promise<{} | string>;
    sapiPostApiReferralCustomization (params?: {}): Promise<{} | string>;
    sapiPostApiReferralUserCustomization (params?: {}): Promise<{} | string>;
    sapiPostApiReferralRebateHistoricalRecord (params?: {}): Promise<{} | string>;
    sapiPostApiReferralKickbackHistoricalRecord (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccount (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountMargin (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountFutures (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApi (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApiPermission (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApiCommission (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApiCommissionFutures (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApiCommissionCoinFutures (params?: {}): Promise<{} | string>;
    sapiPostBrokerTransfer (params?: {}): Promise<{} | string>;
    sapiPostBrokerTransferFutures (params?: {}): Promise<{} | string>;
    sapiPostBrokerRebateHistoricalRecord (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountBnbBurnSpot (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountBnbBurnMarginInterest (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountBlvt (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApiIpRestriction (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApiIpRestrictionIpList (params?: {}): Promise<{} | string>;
    sapiPostBrokerUniversalTransfer (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApiPermissionUniversalTransfer (params?: {}): Promise<{} | string>;
    sapiPostBrokerSubAccountApiPermissionVanillaOptions (params?: {}): Promise<{} | string>;
    sapiPostGiftcardCreateCode (params?: {}): Promise<{} | string>;
    sapiPostGiftcardRedeemCode (params?: {}): Promise<{} | string>;
    sapiPostGiftcardBuyCode (params?: {}): Promise<{} | string>;
    sapiPostAlgoFuturesNewOrderVp (params?: {}): Promise<{} | string>;
    sapiPostAlgoFuturesNewOrderTwap (params?: {}): Promise<{} | string>;
    sapiPostStakingPurchase (params?: {}): Promise<{} | string>;
    sapiPostStakingRedeem (params?: {}): Promise<{} | string>;
    sapiPostStakingSetAutoStaking (params?: {}): Promise<{} | string>;
    sapiPostPortfolioRepay (params?: {}): Promise<{} | string>;
    sapiPostLoanBorrow (params?: {}): Promise<{} | string>;
    sapiPostLoanRepay (params?: {}): Promise<{} | string>;
    sapiPostLoanAdjustLtv (params?: {}): Promise<{} | string>;
    sapiPostLoanCustomizeMarginCall (params?: {}): Promise<{} | string>;
    sapiPostLoanVipRepay (params?: {}): Promise<{} | string>;
    sapiPostConvertGetQuote (params?: {}): Promise<{} | string>;
    sapiPostConvertAcceptQuote (params?: {}): Promise<{} | string>;
    sapiPutUserDataStream (params?: {}): Promise<{} | string>;
    sapiPutUserDataStreamIsolated (params?: {}): Promise<{} | string>;
    sapiDeleteMarginOpenOrders (params?: {}): Promise<{} | string>;
    sapiDeleteMarginOrder (params?: {}): Promise<{} | string>;
    sapiDeleteMarginOrderList (params?: {}): Promise<{} | string>;
    sapiDeleteMarginIsolatedAccount (params?: {}): Promise<{} | string>;
    sapiDeleteUserDataStream (params?: {}): Promise<{} | string>;
    sapiDeleteUserDataStreamIsolated (params?: {}): Promise<{} | string>;
    sapiDeleteBrokerSubAccountApi (params?: {}): Promise<{} | string>;
    sapiDeleteBrokerSubAccountApiIpRestrictionIpList (params?: {}): Promise<{} | string>;
    sapiDeleteAlgoFuturesOrder (params?: {}): Promise<{} | string>;
    sapiV2GetSubAccountFuturesAccount (params?: {}): Promise<{} | string>;
    sapiV2GetSubAccountFuturesPositionRisk (params?: {}): Promise<{} | string>;
    sapiV3GetSubAccountAssets (params?: {}): Promise<{} | string>;
    sapiV3PostAssetGetUserAsset (params?: {}): Promise<{} | string>;
    sapiV4GetSubAccountAssets (params?: {}): Promise<{} | string>;
    wapiPostWithdraw (params?: {}): Promise<{} | string>;
    wapiPostSubAccountTransfer (params?: {}): Promise<{} | string>;
    wapiGetDepositHistory (params?: {}): Promise<{} | string>;
    wapiGetWithdrawHistory (params?: {}): Promise<{} | string>;
    wapiGetDepositAddress (params?: {}): Promise<{} | string>;
    wapiGetAccountStatus (params?: {}): Promise<{} | string>;
    wapiGetSystemStatus (params?: {}): Promise<{} | string>;
    wapiGetApiTradingStatus (params?: {}): Promise<{} | string>;
    wapiGetUserAssetDribbletLog (params?: {}): Promise<{} | string>;
    wapiGetTradeFee (params?: {}): Promise<{} | string>;
    wapiGetAssetDetail (params?: {}): Promise<{} | string>;
    wapiGetSubAccountList (params?: {}): Promise<{} | string>;
    wapiGetSubAccountTransferHistory (params?: {}): Promise<{} | string>;
    wapiGetSubAccountAssets (params?: {}): Promise<{} | string>;
    dapiPublicGetPing (params?: {}): Promise<{} | string>;
    dapiPublicGetTime (params?: {}): Promise<{} | string>;
    dapiPublicGetExchangeInfo (params?: {}): Promise<{} | string>;
    dapiPublicGetDepth (params?: {}): Promise<{} | string>;
    dapiPublicGetTrades (params?: {}): Promise<{} | string>;
    dapiPublicGetHistoricalTrades (params?: {}): Promise<{} | string>;
    dapiPublicGetAggTrades (params?: {}): Promise<{} | string>;
    dapiPublicGetPremiumIndex (params?: {}): Promise<{} | string>;
    dapiPublicGetFundingRate (params?: {}): Promise<{} | string>;
    dapiPublicGetKlines (params?: {}): Promise<{} | string>;
    dapiPublicGetContinuousKlines (params?: {}): Promise<{} | string>;
    dapiPublicGetIndexPriceKlines (params?: {}): Promise<{} | string>;
    dapiPublicGetMarkPriceKlines (params?: {}): Promise<{} | string>;
    dapiPublicGetTicker24hr (params?: {}): Promise<{} | string>;
    dapiPublicGetTickerPrice (params?: {}): Promise<{} | string>;
    dapiPublicGetTickerBookTicker (params?: {}): Promise<{} | string>;
    dapiPublicGetOpenInterest (params?: {}): Promise<{} | string>;
    dapiPublicGetPmExchangeInfo (params?: {}): Promise<{} | string>;
    dapiDataGetOpenInterestHist (params?: {}): Promise<{} | string>;
    dapiDataGetTopLongShortAccountRatio (params?: {}): Promise<{} | string>;
    dapiDataGetTopLongShortPositionRatio (params?: {}): Promise<{} | string>;
    dapiDataGetGlobalLongShortAccountRatio (params?: {}): Promise<{} | string>;
    dapiDataGetTakerBuySellVol (params?: {}): Promise<{} | string>;
    dapiDataGetBasis (params?: {}): Promise<{} | string>;
    dapiPrivateGetPositionSideDual (params?: {}): Promise<{} | string>;
    dapiPrivateGetOrder (params?: {}): Promise<{} | string>;
    dapiPrivateGetOpenOrder (params?: {}): Promise<{} | string>;
    dapiPrivateGetOpenOrders (params?: {}): Promise<{} | string>;
    dapiPrivateGetAllOrders (params?: {}): Promise<{} | string>;
    dapiPrivateGetBalance (params?: {}): Promise<{} | string>;
    dapiPrivateGetAccount (params?: {}): Promise<{} | string>;
    dapiPrivateGetPositionMarginHistory (params?: {}): Promise<{} | string>;
    dapiPrivateGetPositionRisk (params?: {}): Promise<{} | string>;
    dapiPrivateGetUserTrades (params?: {}): Promise<{} | string>;
    dapiPrivateGetIncome (params?: {}): Promise<{} | string>;
    dapiPrivateGetLeverageBracket (params?: {}): Promise<{} | string>;
    dapiPrivateGetForceOrders (params?: {}): Promise<{} | string>;
    dapiPrivateGetAdlQuantile (params?: {}): Promise<{} | string>;
    dapiPrivateGetOrderAmendment (params?: {}): Promise<{} | string>;
    dapiPrivateGetPmAccountInfo (params?: {}): Promise<{} | string>;
    dapiPrivatePostPositionSideDual (params?: {}): Promise<{} | string>;
    dapiPrivatePostOrder (params?: {}): Promise<{} | string>;
    dapiPrivatePostBatchOrders (params?: {}): Promise<{} | string>;
    dapiPrivatePostCountdownCancelAll (params?: {}): Promise<{} | string>;
    dapiPrivatePostLeverage (params?: {}): Promise<{} | string>;
    dapiPrivatePostMarginType (params?: {}): Promise<{} | string>;
    dapiPrivatePostPositionMargin (params?: {}): Promise<{} | string>;
    dapiPrivatePostListenKey (params?: {}): Promise<{} | string>;
    dapiPrivatePutListenKey (params?: {}): Promise<{} | string>;
    dapiPrivatePutOrder (params?: {}): Promise<{} | string>;
    dapiPrivatePutBatchOrders (params?: {}): Promise<{} | string>;
    dapiPrivateDeleteOrder (params?: {}): Promise<{} | string>;
    dapiPrivateDeleteAllOpenOrders (params?: {}): Promise<{} | string>;
    dapiPrivateDeleteBatchOrders (params?: {}): Promise<{} | string>;
    dapiPrivateDeleteListenKey (params?: {}): Promise<{} | string>;
    dapiPrivateV2GetLeverageBracket (params?: {}): Promise<{} | string>;
    fapiPublicGetPing (params?: {}): Promise<{} | string>;
    fapiPublicGetTime (params?: {}): Promise<{} | string>;
    fapiPublicGetExchangeInfo (params?: {}): Promise<{} | string>;
    fapiPublicGetDepth (params?: {}): Promise<{} | string>;
    fapiPublicGetTrades (params?: {}): Promise<{} | string>;
    fapiPublicGetHistoricalTrades (params?: {}): Promise<{} | string>;
    fapiPublicGetAggTrades (params?: {}): Promise<{} | string>;
    fapiPublicGetKlines (params?: {}): Promise<{} | string>;
    fapiPublicGetContinuousKlines (params?: {}): Promise<{} | string>;
    fapiPublicGetMarkPriceKlines (params?: {}): Promise<{} | string>;
    fapiPublicGetIndexPriceKlines (params?: {}): Promise<{} | string>;
    fapiPublicGetFundingRate (params?: {}): Promise<{} | string>;
    fapiPublicGetPremiumIndex (params?: {}): Promise<{} | string>;
    fapiPublicGetTicker24hr (params?: {}): Promise<{} | string>;
    fapiPublicGetTickerPrice (params?: {}): Promise<{} | string>;
    fapiPublicGetTickerBookTicker (params?: {}): Promise<{} | string>;
    fapiPublicGetOpenInterest (params?: {}): Promise<{} | string>;
    fapiPublicGetIndexInfo (params?: {}): Promise<{} | string>;
    fapiPublicGetApiTradingStatus (params?: {}): Promise<{} | string>;
    fapiPublicGetLvtKlines (params?: {}): Promise<{} | string>;
    fapiPublicGetPmExchangeInfo (params?: {}): Promise<{} | string>;
    fapiDataGetOpenInterestHist (params?: {}): Promise<{} | string>;
    fapiDataGetTopLongShortAccountRatio (params?: {}): Promise<{} | string>;
    fapiDataGetTopLongShortPositionRatio (params?: {}): Promise<{} | string>;
    fapiDataGetGlobalLongShortAccountRatio (params?: {}): Promise<{} | string>;
    fapiDataGetTakerlongshortRatio (params?: {}): Promise<{} | string>;
    fapiPrivateGetForceOrders (params?: {}): Promise<{} | string>;
    fapiPrivateGetAllOrders (params?: {}): Promise<{} | string>;
    fapiPrivateGetOpenOrder (params?: {}): Promise<{} | string>;
    fapiPrivateGetOpenOrders (params?: {}): Promise<{} | string>;
    fapiPrivateGetOrder (params?: {}): Promise<{} | string>;
    fapiPrivateGetAccount (params?: {}): Promise<{} | string>;
    fapiPrivateGetBalance (params?: {}): Promise<{} | string>;
    fapiPrivateGetLeverageBracket (params?: {}): Promise<{} | string>;
    fapiPrivateGetPositionMarginHistory (params?: {}): Promise<{} | string>;
    fapiPrivateGetPositionRisk (params?: {}): Promise<{} | string>;
    fapiPrivateGetPositionSideDual (params?: {}): Promise<{} | string>;
    fapiPrivateGetUserTrades (params?: {}): Promise<{} | string>;
    fapiPrivateGetIncome (params?: {}): Promise<{} | string>;
    fapiPrivateGetCommissionRate (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiTradingStatus (params?: {}): Promise<{} | string>;
    fapiPrivateGetMultiAssetsMargin (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiReferralIfNewUser (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiReferralCustomization (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiReferralUserCustomization (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiReferralTraderNum (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiReferralOverview (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiReferralTradeVol (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiReferralRebateVol (params?: {}): Promise<{} | string>;
    fapiPrivateGetApiReferralTraderSummary (params?: {}): Promise<{} | string>;
    fapiPrivateGetAdlQuantile (params?: {}): Promise<{} | string>;
    fapiPrivateGetPmAccountInfo (params?: {}): Promise<{} | string>;
    fapiPrivatePostBatchOrders (params?: {}): Promise<{} | string>;
    fapiPrivatePostPositionSideDual (params?: {}): Promise<{} | string>;
    fapiPrivatePostPositionMargin (params?: {}): Promise<{} | string>;
    fapiPrivatePostMarginType (params?: {}): Promise<{} | string>;
    fapiPrivatePostOrder (params?: {}): Promise<{} | string>;
    fapiPrivatePostLeverage (params?: {}): Promise<{} | string>;
    fapiPrivatePostListenKey (params?: {}): Promise<{} | string>;
    fapiPrivatePostCountdownCancelAll (params?: {}): Promise<{} | string>;
    fapiPrivatePostMultiAssetsMargin (params?: {}): Promise<{} | string>;
    fapiPrivatePostApiReferralCustomization (params?: {}): Promise<{} | string>;
    fapiPrivatePostApiReferralUserCustomization (params?: {}): Promise<{} | string>;
    fapiPrivatePutListenKey (params?: {}): Promise<{} | string>;
    fapiPrivateDeleteBatchOrders (params?: {}): Promise<{} | string>;
    fapiPrivateDeleteOrder (params?: {}): Promise<{} | string>;
    fapiPrivateDeleteAllOpenOrders (params?: {}): Promise<{} | string>;
    fapiPrivateDeleteListenKey (params?: {}): Promise<{} | string>;
    fapiPrivateV2GetAccount (params?: {}): Promise<{} | string>;
    fapiPrivateV2GetBalance (params?: {}): Promise<{} | string>;
    fapiPrivateV2GetPositionRisk (params?: {}): Promise<{} | string>;
    eapiPublicGetPing (params?: {}): Promise<{} | string>;
    eapiPublicGetTime (params?: {}): Promise<{} | string>;
    eapiPublicGetExchangeInfo (params?: {}): Promise<{} | string>;
    eapiPublicGetIndex (params?: {}): Promise<{} | string>;
    eapiPublicGetTicker (params?: {}): Promise<{} | string>;
    eapiPublicGetMark (params?: {}): Promise<{} | string>;
    eapiPublicGetDepth (params?: {}): Promise<{} | string>;
    eapiPublicGetKlines (params?: {}): Promise<{} | string>;
    eapiPublicGetTrades (params?: {}): Promise<{} | string>;
    eapiPublicGetHistoricalTrades (params?: {}): Promise<{} | string>;
    eapiPublicGetExerciseHistory (params?: {}): Promise<{} | string>;
    eapiPublicGetOpenInterest (params?: {}): Promise<{} | string>;
    eapiPrivateGetAccount (params?: {}): Promise<{} | string>;
    eapiPrivateGetPosition (params?: {}): Promise<{} | string>;
    eapiPrivateGetOpenOrders (params?: {}): Promise<{} | string>;
    eapiPrivateGetHistoryOrders (params?: {}): Promise<{} | string>;
    eapiPrivateGetUserTrades (params?: {}): Promise<{} | string>;
    eapiPrivateGetExerciseRecord (params?: {}): Promise<{} | string>;
    eapiPrivateGetBill (params?: {}): Promise<{} | string>;
    eapiPrivateGetMarginAccount (params?: {}): Promise<{} | string>;
    eapiPrivateGetMmp (params?: {}): Promise<{} | string>;
    eapiPrivateGetCountdownCancelAll (params?: {}): Promise<{} | string>;
    eapiPrivateGetOrder (params?: {}): Promise<{} | string>;
    eapiPrivatePostOrder (params?: {}): Promise<{} | string>;
    eapiPrivatePostBatchOrders (params?: {}): Promise<{} | string>;
    eapiPrivatePostListenKey (params?: {}): Promise<{} | string>;
    eapiPrivatePostMmpSet (params?: {}): Promise<{} | string>;
    eapiPrivatePostMmpReset (params?: {}): Promise<{} | string>;
    eapiPrivatePostCountdownCancelAll (params?: {}): Promise<{} | string>;
    eapiPrivatePostCountdownCancelAllHeartBeat (params?: {}): Promise<{} | string>;
    eapiPrivatePutListenKey (params?: {}): Promise<{} | string>;
    eapiPrivateDeleteOrder (params?: {}): Promise<{} | string>;
    eapiPrivateDeleteBatchOrders (params?: {}): Promise<{} | string>;
    eapiPrivateDeleteAllOpenOrders (params?: {}): Promise<{} | string>;
    eapiPrivateDeleteAllOpenOrdersByUnderlying (params?: {}): Promise<{} | string>;
    eapiPrivateDeleteListenKey (params?: {}): Promise<{} | string>;
    publicGetPing (params?: {}): Promise<{} | string>;
    publicGetTime (params?: {}): Promise<{} | string>;
    publicGetDepth (params?: {}): Promise<{} | string>;
    publicGetTrades (params?: {}): Promise<{} | string>;
    publicGetAggTrades (params?: {}): Promise<{} | string>;
    publicGetHistoricalTrades (params?: {}): Promise<{} | string>;
    publicGetKlines (params?: {}): Promise<{} | string>;
    publicGetTicker24hr (params?: {}): Promise<{} | string>;
    publicGetTickerPrice (params?: {}): Promise<{} | string>;
    publicGetTickerBookTicker (params?: {}): Promise<{} | string>;
    publicGetExchangeInfo (params?: {}): Promise<{} | string>;
    publicPutUserDataStream (params?: {}): Promise<{} | string>;
    publicPostUserDataStream (params?: {}): Promise<{} | string>;
    publicDeleteUserDataStream (params?: {}): Promise<{} | string>;
    privateGetAllOrderList (params?: {}): Promise<{} | string>;
    privateGetOpenOrderList (params?: {}): Promise<{} | string>;
    privateGetOrderList (params?: {}): Promise<{} | string>;
    privateGetOrder (params?: {}): Promise<{} | string>;
    privateGetOpenOrders (params?: {}): Promise<{} | string>;
    privateGetAllOrders (params?: {}): Promise<{} | string>;
    privateGetAccount (params?: {}): Promise<{} | string>;
    privateGetMyTrades (params?: {}): Promise<{} | string>;
    privateGetRateLimitOrder (params?: {}): Promise<{} | string>;
    privateGetMyPreventedMatches (params?: {}): Promise<{} | string>;
    privatePostOrderOco (params?: {}): Promise<{} | string>;
    privatePostOrder (params?: {}): Promise<{} | string>;
    privatePostOrderCancelReplace (params?: {}): Promise<{} | string>;
    privatePostOrderTest (params?: {}): Promise<{} | string>;
    privateDeleteOpenOrders (params?: {}): Promise<{} | string>;
    privateDeleteOrderList (params?: {}): Promise<{} | string>;
    privateDeleteOrder (params?: {}): Promise<{} | string>;
}