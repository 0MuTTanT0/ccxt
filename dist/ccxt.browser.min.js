/*! For license information please see ccxt.browser.min.js.LICENSE.txt */
(()=>{"use strict";var e={6696:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetOapiV2ListTradePrice(e){return this.publicGetOapiV2ListTradePrice(e)}publicGetOapiV2ListMarketPair(e){return this.publicGetOapiV2ListMarketPair(e)}publicGetOpenV2PublicGetOrderBook(e){return this.publicGetOpenV2PublicGetOrderBook(e)}privatePostV2CoinCustomerAccount(e){return this.privatePostV2CoinCustomerAccount(e)}privatePostV2KlineGetKline(e){return this.privatePostV2KlineGetKline(e)}privatePostV2OrderOrder(e){return this.privatePostV2OrderOrder(e)}privatePostV2OrderCancel(e){return this.privatePostV2OrderCancel(e)}privatePostV2OrderGetOrderList(e){return this.privatePostV2OrderGetOrderList(e)}privatePostV2OrderShowOrderStatus(e){return this.privatePostV2OrderShowOrderStatus(e)}privatePostV2OrderShowOrderHistory(e){return this.privatePostV2OrderShowOrderHistory(e)}privatePostV2OrderGetTradeList(e){return this.privatePostV2OrderGetTradeList(e)}}},9650:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{marketsGetAssetsPublicBeta(e){return this.marketsGetAssetsPublicBeta(e)}privateGetAccount(e){return this.privateGetAccount(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersOrderId(e){return this.privateGetOrdersOrderId(e)}privateGetPositions(e){return this.privateGetPositions(e)}privateGetPositionsSymbol(e){return this.privateGetPositionsSymbol(e)}privateGetAccountActivitiesActivityType(e){return this.privateGetAccountActivitiesActivityType(e)}privatePostOrders(e){return this.privatePostOrders(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrdersOrderId(e){return this.privateDeleteOrdersOrderId(e)}cryptoPublicGetCryptoLatestOrderbooks(e){return this.cryptoPublicGetCryptoLatestOrderbooks(e)}cryptoPublicGetCryptoTrades(e){return this.cryptoPublicGetCryptoTrades(e)}cryptoPublicGetCryptoQuotes(e){return this.cryptoPublicGetCryptoQuotes(e)}cryptoPublicGetCryptoLatestQuotes(e){return this.cryptoPublicGetCryptoLatestQuotes(e)}cryptoPublicGetCryptoBars(e){return this.cryptoPublicGetCryptoBars(e)}cryptoPublicGetCryptoSnapshots(e){return this.cryptoPublicGetCryptoSnapshots(e)}}},1359:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{v1PublicGetAssets(e){return this.v1PublicGetAssets(e)}v1PublicGetProducts(e){return this.v1PublicGetProducts(e)}v1PublicGetTicker(e){return this.v1PublicGetTicker(e)}v1PublicGetBarhistInfo(e){return this.v1PublicGetBarhistInfo(e)}v1PublicGetBarhist(e){return this.v1PublicGetBarhist(e)}v1PublicGetDepth(e){return this.v1PublicGetDepth(e)}v1PublicGetTrades(e){return this.v1PublicGetTrades(e)}v1PublicGetCashAssets(e){return this.v1PublicGetCashAssets(e)}v1PublicGetCashProducts(e){return this.v1PublicGetCashProducts(e)}v1PublicGetMarginAssets(e){return this.v1PublicGetMarginAssets(e)}v1PublicGetMarginProducts(e){return this.v1PublicGetMarginProducts(e)}v1PublicGetFuturesCollateral(e){return this.v1PublicGetFuturesCollateral(e)}v1PublicGetFuturesContracts(e){return this.v1PublicGetFuturesContracts(e)}v1PublicGetFuturesRefPx(e){return this.v1PublicGetFuturesRefPx(e)}v1PublicGetFuturesMarketData(e){return this.v1PublicGetFuturesMarketData(e)}v1PublicGetFuturesFundingRates(e){return this.v1PublicGetFuturesFundingRates(e)}v1PublicGetRiskLimitInfo(e){return this.v1PublicGetRiskLimitInfo(e)}v1PublicGetExchangeInfo(e){return this.v1PublicGetExchangeInfo(e)}v1PrivateGetInfo(e){return this.v1PrivateGetInfo(e)}v1PrivateGetWalletTransactions(e){return this.v1PrivateGetWalletTransactions(e)}v1PrivateGetWalletDepositAddress(e){return this.v1PrivateGetWalletDepositAddress(e)}v1PrivateGetDataBalanceSnapshot(e){return this.v1PrivateGetDataBalanceSnapshot(e)}v1PrivateGetDataBalanceHistory(e){return this.v1PrivateGetDataBalanceHistory(e)}v1PrivateAccountCategoryGetBalance(e){return this.v1PrivateAccountCategoryGetBalance(e)}v1PrivateAccountCategoryGetOrderOpen(e){return this.v1PrivateAccountCategoryGetOrderOpen(e)}v1PrivateAccountCategoryGetOrderStatus(e){return this.v1PrivateAccountCategoryGetOrderStatus(e)}v1PrivateAccountCategoryGetOrderHistCurrent(e){return this.v1PrivateAccountCategoryGetOrderHistCurrent(e)}v1PrivateAccountCategoryGetRisk(e){return this.v1PrivateAccountCategoryGetRisk(e)}v1PrivateAccountCategoryPostOrder(e){return this.v1PrivateAccountCategoryPostOrder(e)}v1PrivateAccountCategoryPostOrderBatch(e){return this.v1PrivateAccountCategoryPostOrderBatch(e)}v1PrivateAccountCategoryDeleteOrder(e){return this.v1PrivateAccountCategoryDeleteOrder(e)}v1PrivateAccountCategoryDeleteOrderAll(e){return this.v1PrivateAccountCategoryDeleteOrderAll(e)}v1PrivateAccountCategoryDeleteOrderBatch(e){return this.v1PrivateAccountCategoryDeleteOrderBatch(e)}v1PrivateAccountGroupGetCashBalance(e){return this.v1PrivateAccountGroupGetCashBalance(e)}v1PrivateAccountGroupGetMarginBalance(e){return this.v1PrivateAccountGroupGetMarginBalance(e)}v1PrivateAccountGroupGetMarginRisk(e){return this.v1PrivateAccountGroupGetMarginRisk(e)}v1PrivateAccountGroupGetFuturesCollateralBalance(e){return this.v1PrivateAccountGroupGetFuturesCollateralBalance(e)}v1PrivateAccountGroupGetFuturesPosition(e){return this.v1PrivateAccountGroupGetFuturesPosition(e)}v1PrivateAccountGroupGetFuturesRisk(e){return this.v1PrivateAccountGroupGetFuturesRisk(e)}v1PrivateAccountGroupGetFuturesFundingPayments(e){return this.v1PrivateAccountGroupGetFuturesFundingPayments(e)}v1PrivateAccountGroupGetOrderHist(e){return this.v1PrivateAccountGroupGetOrderHist(e)}v1PrivateAccountGroupGetSpotFee(e){return this.v1PrivateAccountGroupGetSpotFee(e)}v1PrivateAccountGroupPostTransfer(e){return this.v1PrivateAccountGroupPostTransfer(e)}v1PrivateAccountGroupPostFuturesTransferDeposit(e){return this.v1PrivateAccountGroupPostFuturesTransferDeposit(e)}v1PrivateAccountGroupPostFuturesTransferWithdraw(e){return this.v1PrivateAccountGroupPostFuturesTransferWithdraw(e)}v2PublicGetAssets(e){return this.v2PublicGetAssets(e)}v2PublicGetFuturesContract(e){return this.v2PublicGetFuturesContract(e)}v2PublicGetFuturesCollateral(e){return this.v2PublicGetFuturesCollateral(e)}v2PublicGetFuturesPricingData(e){return this.v2PublicGetFuturesPricingData(e)}v2PublicGetFuturesTicker(e){return this.v2PublicGetFuturesTicker(e)}v2PrivateGetAccountInfo(e){return this.v2PrivateGetAccountInfo(e)}v2PrivateAccountGroupGetOrderHist(e){return this.v2PrivateAccountGroupGetOrderHist(e)}v2PrivateAccountGroupGetFuturesPosition(e){return this.v2PrivateAccountGroupGetFuturesPosition(e)}v2PrivateAccountGroupGetFuturesFreeMargin(e){return this.v2PrivateAccountGroupGetFuturesFreeMargin(e)}v2PrivateAccountGroupGetFuturesOrderHistCurrent(e){return this.v2PrivateAccountGroupGetFuturesOrderHistCurrent(e)}v2PrivateAccountGroupGetFuturesOrderOpen(e){return this.v2PrivateAccountGroupGetFuturesOrderOpen(e)}v2PrivateAccountGroupGetFuturesOrderStatus(e){return this.v2PrivateAccountGroupGetFuturesOrderStatus(e)}v2PrivateAccountGroupPostFuturesIsolatedPositionMargin(e){return this.v2PrivateAccountGroupPostFuturesIsolatedPositionMargin(e)}v2PrivateAccountGroupPostFuturesMarginType(e){return this.v2PrivateAccountGroupPostFuturesMarginType(e)}v2PrivateAccountGroupPostFuturesLeverage(e){return this.v2PrivateAccountGroupPostFuturesLeverage(e)}v2PrivateAccountGroupPostFuturesTransferDeposit(e){return this.v2PrivateAccountGroupPostFuturesTransferDeposit(e)}v2PrivateAccountGroupPostFuturesTransferWithdraw(e){return this.v2PrivateAccountGroupPostFuturesTransferWithdraw(e)}v2PrivateAccountGroupPostFuturesOrder(e){return this.v2PrivateAccountGroupPostFuturesOrder(e)}v2PrivateAccountGroupPostFuturesOrderBatch(e){return this.v2PrivateAccountGroupPostFuturesOrderBatch(e)}v2PrivateAccountGroupPostFuturesOrderOpen(e){return this.v2PrivateAccountGroupPostFuturesOrderOpen(e)}v2PrivateAccountGroupPostSubuserSubuserTransfer(e){return this.v2PrivateAccountGroupPostSubuserSubuserTransfer(e)}v2PrivateAccountGroupPostSubuserSubuserTransferHist(e){return this.v2PrivateAccountGroupPostSubuserSubuserTransferHist(e)}v2PrivateAccountGroupDeleteFuturesOrder(e){return this.v2PrivateAccountGroupDeleteFuturesOrder(e)}v2PrivateAccountGroupDeleteFuturesOrderBatch(e){return this.v2PrivateAccountGroupDeleteFuturesOrderBatch(e)}v2PrivateAccountGroupDeleteFuturesOrderAll(e){return this.v2PrivateAccountGroupDeleteFuturesOrderAll(e)}}},4890:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetPing(e){return this.publicGetPing(e)}publicGetAssetPairs(e){return this.publicGetAssetPairs(e)}publicGetAssetPairsAssetPairNameDepth(e){return this.publicGetAssetPairsAssetPairNameDepth(e)}publicGetAssetPairsAssetPairNameTrades(e){return this.publicGetAssetPairsAssetPairNameTrades(e)}publicGetAssetPairsAssetPairNameTicker(e){return this.publicGetAssetPairsAssetPairNameTicker(e)}publicGetAssetPairsAssetPairNameCandles(e){return this.publicGetAssetPairsAssetPairNameCandles(e)}publicGetAssetPairsTickers(e){return this.publicGetAssetPairsTickers(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetFundAccounts(e){return this.privateGetFundAccounts(e)}privateGetAssetsAssetSymbolAddress(e){return this.privateGetAssetsAssetSymbolAddress(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersId(e){return this.privateGetOrdersId(e)}privateGetOrdersMulti(e){return this.privateGetOrdersMulti(e)}privateGetTrades(e){return this.privateGetTrades(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersIdCancel(e){return this.privatePostOrdersIdCancel(e)}privatePostOrdersCancel(e){return this.privatePostOrdersCancel(e)}privatePostWithdrawals(e){return this.privatePostWithdrawals(e)}privatePostTransfer(e){return this.privatePostTransfer(e)}}},4611:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{sapiGetSystemStatus(e){return this.sapiGetSystemStatus(e)}sapiGetAccountSnapshot(e){return this.sapiGetAccountSnapshot(e)}sapiGetMarginAsset(e){return this.sapiGetMarginAsset(e)}sapiGetMarginPair(e){return this.sapiGetMarginPair(e)}sapiGetMarginAllAssets(e){return this.sapiGetMarginAllAssets(e)}sapiGetMarginAllPairs(e){return this.sapiGetMarginAllPairs(e)}sapiGetMarginPriceIndex(e){return this.sapiGetMarginPriceIndex(e)}sapiGetAssetAssetDividend(e){return this.sapiGetAssetAssetDividend(e)}sapiGetAssetDribblet(e){return this.sapiGetAssetDribblet(e)}sapiGetAssetTransfer(e){return this.sapiGetAssetTransfer(e)}sapiGetAssetAssetDetail(e){return this.sapiGetAssetAssetDetail(e)}sapiGetAssetTradeFee(e){return this.sapiGetAssetTradeFee(e)}sapiGetAssetLedgerTransferCloudMiningQueryByPage(e){return this.sapiGetAssetLedgerTransferCloudMiningQueryByPage(e)}sapiGetAssetConvertTransferQueryByPage(e){return this.sapiGetAssetConvertTransferQueryByPage(e)}sapiGetMarginLoan(e){return this.sapiGetMarginLoan(e)}sapiGetMarginRepay(e){return this.sapiGetMarginRepay(e)}sapiGetMarginAccount(e){return this.sapiGetMarginAccount(e)}sapiGetMarginTransfer(e){return this.sapiGetMarginTransfer(e)}sapiGetMarginInterestHistory(e){return this.sapiGetMarginInterestHistory(e)}sapiGetMarginForceLiquidationRec(e){return this.sapiGetMarginForceLiquidationRec(e)}sapiGetMarginOrder(e){return this.sapiGetMarginOrder(e)}sapiGetMarginOpenOrders(e){return this.sapiGetMarginOpenOrders(e)}sapiGetMarginAllOrders(e){return this.sapiGetMarginAllOrders(e)}sapiGetMarginMyTrades(e){return this.sapiGetMarginMyTrades(e)}sapiGetMarginMaxBorrowable(e){return this.sapiGetMarginMaxBorrowable(e)}sapiGetMarginMaxTransferable(e){return this.sapiGetMarginMaxTransferable(e)}sapiGetMarginTradeCoeff(e){return this.sapiGetMarginTradeCoeff(e)}sapiGetMarginIsolatedTransfer(e){return this.sapiGetMarginIsolatedTransfer(e)}sapiGetMarginIsolatedAccount(e){return this.sapiGetMarginIsolatedAccount(e)}sapiGetMarginIsolatedPair(e){return this.sapiGetMarginIsolatedPair(e)}sapiGetMarginIsolatedAllPairs(e){return this.sapiGetMarginIsolatedAllPairs(e)}sapiGetMarginIsolatedAccountLimit(e){return this.sapiGetMarginIsolatedAccountLimit(e)}sapiGetMarginInterestRateHistory(e){return this.sapiGetMarginInterestRateHistory(e)}sapiGetMarginOrderList(e){return this.sapiGetMarginOrderList(e)}sapiGetMarginAllOrderList(e){return this.sapiGetMarginAllOrderList(e)}sapiGetMarginOpenOrderList(e){return this.sapiGetMarginOpenOrderList(e)}sapiGetMarginCrossMarginData(e){return this.sapiGetMarginCrossMarginData(e)}sapiGetMarginIsolatedMarginData(e){return this.sapiGetMarginIsolatedMarginData(e)}sapiGetMarginIsolatedMarginTier(e){return this.sapiGetMarginIsolatedMarginTier(e)}sapiGetMarginRateLimitOrder(e){return this.sapiGetMarginRateLimitOrder(e)}sapiGetMarginDribblet(e){return this.sapiGetMarginDribblet(e)}sapiGetMarginCrossMarginCollateralRatio(e){return this.sapiGetMarginCrossMarginCollateralRatio(e)}sapiGetMarginExchangeSmallLiability(e){return this.sapiGetMarginExchangeSmallLiability(e)}sapiGetMarginExchangeSmallLiabilityHistory(e){return this.sapiGetMarginExchangeSmallLiabilityHistory(e)}sapiGetMarginNextHourlyInterestRate(e){return this.sapiGetMarginNextHourlyInterestRate(e)}sapiGetLoanIncome(e){return this.sapiGetLoanIncome(e)}sapiGetLoanOngoingOrders(e){return this.sapiGetLoanOngoingOrders(e)}sapiGetLoanLtvAdjustmentHistory(e){return this.sapiGetLoanLtvAdjustmentHistory(e)}sapiGetLoanBorrowHistory(e){return this.sapiGetLoanBorrowHistory(e)}sapiGetLoanRepayHistory(e){return this.sapiGetLoanRepayHistory(e)}sapiGetLoanLoanableData(e){return this.sapiGetLoanLoanableData(e)}sapiGetLoanCollateralData(e){return this.sapiGetLoanCollateralData(e)}sapiGetLoanRepayCollateralRate(e){return this.sapiGetLoanRepayCollateralRate(e)}sapiGetLoanVipOngoingOrders(e){return this.sapiGetLoanVipOngoingOrders(e)}sapiGetLoanVipRepayHistory(e){return this.sapiGetLoanVipRepayHistory(e)}sapiGetLoanVipCollateralAccount(e){return this.sapiGetLoanVipCollateralAccount(e)}sapiGetFiatOrders(e){return this.sapiGetFiatOrders(e)}sapiGetFiatPayments(e){return this.sapiGetFiatPayments(e)}sapiGetFuturesTransfer(e){return this.sapiGetFuturesTransfer(e)}sapiGetFuturesLoanBorrowHistory(e){return this.sapiGetFuturesLoanBorrowHistory(e)}sapiGetFuturesLoanRepayHistory(e){return this.sapiGetFuturesLoanRepayHistory(e)}sapiGetFuturesLoanWallet(e){return this.sapiGetFuturesLoanWallet(e)}sapiGetFuturesLoanAdjustCollateralHistory(e){return this.sapiGetFuturesLoanAdjustCollateralHistory(e)}sapiGetFuturesLoanLiquidationHistory(e){return this.sapiGetFuturesLoanLiquidationHistory(e)}sapiGetRebateTaxQuery(e){return this.sapiGetRebateTaxQuery(e)}sapiGetCapitalConfigGetall(e){return this.sapiGetCapitalConfigGetall(e)}sapiGetCapitalDepositAddress(e){return this.sapiGetCapitalDepositAddress(e)}sapiGetCapitalDepositHisrec(e){return this.sapiGetCapitalDepositHisrec(e)}sapiGetCapitalDepositSubAddress(e){return this.sapiGetCapitalDepositSubAddress(e)}sapiGetCapitalDepositSubHisrec(e){return this.sapiGetCapitalDepositSubHisrec(e)}sapiGetCapitalWithdrawHistory(e){return this.sapiGetCapitalWithdrawHistory(e)}sapiGetCapitalContractConvertibleCoins(e){return this.sapiGetCapitalContractConvertibleCoins(e)}sapiGetConvertTradeFlow(e){return this.sapiGetConvertTradeFlow(e)}sapiGetConvertExchangeInfo(e){return this.sapiGetConvertExchangeInfo(e)}sapiGetConvertAssetInfo(e){return this.sapiGetConvertAssetInfo(e)}sapiGetConvertOrderStatus(e){return this.sapiGetConvertOrderStatus(e)}sapiGetAccountStatus(e){return this.sapiGetAccountStatus(e)}sapiGetAccountApiTradingStatus(e){return this.sapiGetAccountApiTradingStatus(e)}sapiGetAccountApiRestrictionsIpRestriction(e){return this.sapiGetAccountApiRestrictionsIpRestriction(e)}sapiGetBnbBurn(e){return this.sapiGetBnbBurn(e)}sapiGetSubAccountFuturesAccount(e){return this.sapiGetSubAccountFuturesAccount(e)}sapiGetSubAccountFuturesAccountSummary(e){return this.sapiGetSubAccountFuturesAccountSummary(e)}sapiGetSubAccountFuturesPositionRisk(e){return this.sapiGetSubAccountFuturesPositionRisk(e)}sapiGetSubAccountFuturesInternalTransfer(e){return this.sapiGetSubAccountFuturesInternalTransfer(e)}sapiGetSubAccountList(e){return this.sapiGetSubAccountList(e)}sapiGetSubAccountMarginAccount(e){return this.sapiGetSubAccountMarginAccount(e)}sapiGetSubAccountMarginAccountSummary(e){return this.sapiGetSubAccountMarginAccountSummary(e)}sapiGetSubAccountSpotSummary(e){return this.sapiGetSubAccountSpotSummary(e)}sapiGetSubAccountStatus(e){return this.sapiGetSubAccountStatus(e)}sapiGetSubAccountSubTransferHistory(e){return this.sapiGetSubAccountSubTransferHistory(e)}sapiGetSubAccountTransferSubUserHistory(e){return this.sapiGetSubAccountTransferSubUserHistory(e)}sapiGetSubAccountUniversalTransfer(e){return this.sapiGetSubAccountUniversalTransfer(e)}sapiGetSubAccountApiRestrictionsIpRestrictionThirdPartyList(e){return this.sapiGetSubAccountApiRestrictionsIpRestrictionThirdPartyList(e)}sapiGetSubAccountTransactionTatistics(e){return this.sapiGetSubAccountTransactionTatistics(e)}sapiGetManagedSubaccountAsset(e){return this.sapiGetManagedSubaccountAsset(e)}sapiGetManagedSubaccountAccountSnapshot(e){return this.sapiGetManagedSubaccountAccountSnapshot(e)}sapiGetManagedSubaccountQueryTransLogForInvestor(e){return this.sapiGetManagedSubaccountQueryTransLogForInvestor(e)}sapiGetManagedSubaccountQueryTransLogForTradeParent(e){return this.sapiGetManagedSubaccountQueryTransLogForTradeParent(e)}sapiGetManagedSubaccountFetchFutureAsset(e){return this.sapiGetManagedSubaccountFetchFutureAsset(e)}sapiGetManagedSubaccountMarginAsset(e){return this.sapiGetManagedSubaccountMarginAsset(e)}sapiGetManagedSubaccountInfo(e){return this.sapiGetManagedSubaccountInfo(e)}sapiGetLendingDailyProductList(e){return this.sapiGetLendingDailyProductList(e)}sapiGetLendingDailyUserLeftQuota(e){return this.sapiGetLendingDailyUserLeftQuota(e)}sapiGetLendingDailyUserRedemptionQuota(e){return this.sapiGetLendingDailyUserRedemptionQuota(e)}sapiGetLendingDailyTokenPosition(e){return this.sapiGetLendingDailyTokenPosition(e)}sapiGetLendingUnionAccount(e){return this.sapiGetLendingUnionAccount(e)}sapiGetLendingUnionPurchaseRecord(e){return this.sapiGetLendingUnionPurchaseRecord(e)}sapiGetLendingUnionRedemptionRecord(e){return this.sapiGetLendingUnionRedemptionRecord(e)}sapiGetLendingUnionInterestHistory(e){return this.sapiGetLendingUnionInterestHistory(e)}sapiGetLendingProjectList(e){return this.sapiGetLendingProjectList(e)}sapiGetLendingProjectPositionList(e){return this.sapiGetLendingProjectPositionList(e)}sapiGetMiningPubAlgoList(e){return this.sapiGetMiningPubAlgoList(e)}sapiGetMiningPubCoinList(e){return this.sapiGetMiningPubCoinList(e)}sapiGetMiningWorkerDetail(e){return this.sapiGetMiningWorkerDetail(e)}sapiGetMiningWorkerList(e){return this.sapiGetMiningWorkerList(e)}sapiGetMiningPaymentList(e){return this.sapiGetMiningPaymentList(e)}sapiGetMiningStatisticsUserStatus(e){return this.sapiGetMiningStatisticsUserStatus(e)}sapiGetMiningStatisticsUserList(e){return this.sapiGetMiningStatisticsUserList(e)}sapiGetMiningPaymentUid(e){return this.sapiGetMiningPaymentUid(e)}sapiGetBswapPools(e){return this.sapiGetBswapPools(e)}sapiGetBswapLiquidity(e){return this.sapiGetBswapLiquidity(e)}sapiGetBswapLiquidityOps(e){return this.sapiGetBswapLiquidityOps(e)}sapiGetBswapQuote(e){return this.sapiGetBswapQuote(e)}sapiGetBswapSwap(e){return this.sapiGetBswapSwap(e)}sapiGetBswapPoolConfigure(e){return this.sapiGetBswapPoolConfigure(e)}sapiGetBswapAddLiquidityPreview(e){return this.sapiGetBswapAddLiquidityPreview(e)}sapiGetBswapRemoveLiquidityPreview(e){return this.sapiGetBswapRemoveLiquidityPreview(e)}sapiGetBswapUnclaimedRewards(e){return this.sapiGetBswapUnclaimedRewards(e)}sapiGetBswapClaimedHistory(e){return this.sapiGetBswapClaimedHistory(e)}sapiGetBlvtTokenInfo(e){return this.sapiGetBlvtTokenInfo(e)}sapiGetBlvtSubscribeRecord(e){return this.sapiGetBlvtSubscribeRecord(e)}sapiGetBlvtRedeemRecord(e){return this.sapiGetBlvtRedeemRecord(e)}sapiGetBlvtUserLimit(e){return this.sapiGetBlvtUserLimit(e)}sapiGetApiReferralIfNewUser(e){return this.sapiGetApiReferralIfNewUser(e)}sapiGetApiReferralCustomization(e){return this.sapiGetApiReferralCustomization(e)}sapiGetApiReferralUserCustomization(e){return this.sapiGetApiReferralUserCustomization(e)}sapiGetApiReferralRebateRecentRecord(e){return this.sapiGetApiReferralRebateRecentRecord(e)}sapiGetApiReferralRebateHistoricalRecord(e){return this.sapiGetApiReferralRebateHistoricalRecord(e)}sapiGetApiReferralKickbackRecentRecord(e){return this.sapiGetApiReferralKickbackRecentRecord(e)}sapiGetApiReferralKickbackHistoricalRecord(e){return this.sapiGetApiReferralKickbackHistoricalRecord(e)}sapiGetBrokerSubAccountApi(e){return this.sapiGetBrokerSubAccountApi(e)}sapiGetBrokerSubAccount(e){return this.sapiGetBrokerSubAccount(e)}sapiGetBrokerSubAccountApiCommissionFutures(e){return this.sapiGetBrokerSubAccountApiCommissionFutures(e)}sapiGetBrokerSubAccountApiCommissionCoinFutures(e){return this.sapiGetBrokerSubAccountApiCommissionCoinFutures(e)}sapiGetBrokerInfo(e){return this.sapiGetBrokerInfo(e)}sapiGetBrokerTransfer(e){return this.sapiGetBrokerTransfer(e)}sapiGetBrokerTransferFutures(e){return this.sapiGetBrokerTransferFutures(e)}sapiGetBrokerRebateRecentRecord(e){return this.sapiGetBrokerRebateRecentRecord(e)}sapiGetBrokerRebateHistoricalRecord(e){return this.sapiGetBrokerRebateHistoricalRecord(e)}sapiGetBrokerSubAccountBnbBurnStatus(e){return this.sapiGetBrokerSubAccountBnbBurnStatus(e)}sapiGetBrokerSubAccountDepositHist(e){return this.sapiGetBrokerSubAccountDepositHist(e)}sapiGetBrokerSubAccountSpotSummary(e){return this.sapiGetBrokerSubAccountSpotSummary(e)}sapiGetBrokerSubAccountMarginSummary(e){return this.sapiGetBrokerSubAccountMarginSummary(e)}sapiGetBrokerSubAccountFuturesSummary(e){return this.sapiGetBrokerSubAccountFuturesSummary(e)}sapiGetBrokerRebateFuturesRecentRecord(e){return this.sapiGetBrokerRebateFuturesRecentRecord(e)}sapiGetBrokerSubAccountApiIpRestriction(e){return this.sapiGetBrokerSubAccountApiIpRestriction(e)}sapiGetBrokerUniversalTransfer(e){return this.sapiGetBrokerUniversalTransfer(e)}sapiGetAccountApiRestrictions(e){return this.sapiGetAccountApiRestrictions(e)}sapiGetC2cOrderMatchListUserOrderHistory(e){return this.sapiGetC2cOrderMatchListUserOrderHistory(e)}sapiGetNftHistoryTransactions(e){return this.sapiGetNftHistoryTransactions(e)}sapiGetNftHistoryDeposit(e){return this.sapiGetNftHistoryDeposit(e)}sapiGetNftHistoryWithdraw(e){return this.sapiGetNftHistoryWithdraw(e)}sapiGetNftUserGetAsset(e){return this.sapiGetNftUserGetAsset(e)}sapiGetPayTransactions(e){return this.sapiGetPayTransactions(e)}sapiGetGiftcardVerify(e){return this.sapiGetGiftcardVerify(e)}sapiGetGiftcardCryptographyRsaPublicKey(e){return this.sapiGetGiftcardCryptographyRsaPublicKey(e)}sapiGetGiftcardBuyCodeTokenLimit(e){return this.sapiGetGiftcardBuyCodeTokenLimit(e)}sapiGetAlgoFuturesOpenOrders(e){return this.sapiGetAlgoFuturesOpenOrders(e)}sapiGetAlgoFuturesHistoricalOrders(e){return this.sapiGetAlgoFuturesHistoricalOrders(e)}sapiGetAlgoFuturesSubOrders(e){return this.sapiGetAlgoFuturesSubOrders(e)}sapiGetPortfolioAccount(e){return this.sapiGetPortfolioAccount(e)}sapiGetPortfolioCollateralRate(e){return this.sapiGetPortfolioCollateralRate(e)}sapiGetPortfolioPmLoan(e){return this.sapiGetPortfolioPmLoan(e)}sapiGetPortfolioInterestHistory(e){return this.sapiGetPortfolioInterestHistory(e)}sapiGetPortfolioInterestRate(e){return this.sapiGetPortfolioInterestRate(e)}sapiGetStakingProductList(e){return this.sapiGetStakingProductList(e)}sapiGetStakingPosition(e){return this.sapiGetStakingPosition(e)}sapiGetStakingStakingRecord(e){return this.sapiGetStakingStakingRecord(e)}sapiGetStakingPersonalLeftQuota(e){return this.sapiGetStakingPersonalLeftQuota(e)}sapiPostAssetDust(e){return this.sapiPostAssetDust(e)}sapiPostAssetDustBtc(e){return this.sapiPostAssetDustBtc(e)}sapiPostAssetTransfer(e){return this.sapiPostAssetTransfer(e)}sapiPostAssetGetFundingAsset(e){return this.sapiPostAssetGetFundingAsset(e)}sapiPostAssetConvertTransfer(e){return this.sapiPostAssetConvertTransfer(e)}sapiPostAccountDisableFastWithdrawSwitch(e){return this.sapiPostAccountDisableFastWithdrawSwitch(e)}sapiPostAccountEnableFastWithdrawSwitch(e){return this.sapiPostAccountEnableFastWithdrawSwitch(e)}sapiPostCapitalWithdrawApply(e){return this.sapiPostCapitalWithdrawApply(e)}sapiPostCapitalContractConvertibleCoins(e){return this.sapiPostCapitalContractConvertibleCoins(e)}sapiPostMarginTransfer(e){return this.sapiPostMarginTransfer(e)}sapiPostMarginLoan(e){return this.sapiPostMarginLoan(e)}sapiPostMarginRepay(e){return this.sapiPostMarginRepay(e)}sapiPostMarginOrder(e){return this.sapiPostMarginOrder(e)}sapiPostMarginOrderOco(e){return this.sapiPostMarginOrderOco(e)}sapiPostMarginExchangeSmallLiability(e){return this.sapiPostMarginExchangeSmallLiability(e)}sapiPostMarginIsolatedTransfer(e){return this.sapiPostMarginIsolatedTransfer(e)}sapiPostMarginIsolatedAccount(e){return this.sapiPostMarginIsolatedAccount(e)}sapiPostBnbBurn(e){return this.sapiPostBnbBurn(e)}sapiPostSubAccountVirtualSubAccount(e){return this.sapiPostSubAccountVirtualSubAccount(e)}sapiPostSubAccountMarginTransfer(e){return this.sapiPostSubAccountMarginTransfer(e)}sapiPostSubAccountMarginEnable(e){return this.sapiPostSubAccountMarginEnable(e)}sapiPostSubAccountFuturesEnable(e){return this.sapiPostSubAccountFuturesEnable(e)}sapiPostSubAccountFuturesTransfer(e){return this.sapiPostSubAccountFuturesTransfer(e)}sapiPostSubAccountFuturesInternalTransfer(e){return this.sapiPostSubAccountFuturesInternalTransfer(e)}sapiPostSubAccountTransferSubToSub(e){return this.sapiPostSubAccountTransferSubToSub(e)}sapiPostSubAccountTransferSubToMaster(e){return this.sapiPostSubAccountTransferSubToMaster(e)}sapiPostSubAccountUniversalTransfer(e){return this.sapiPostSubAccountUniversalTransfer(e)}sapiPostManagedSubaccountDeposit(e){return this.sapiPostManagedSubaccountDeposit(e)}sapiPostManagedSubaccountWithdraw(e){return this.sapiPostManagedSubaccountWithdraw(e)}sapiPostUserDataStream(e){return this.sapiPostUserDataStream(e)}sapiPostUserDataStreamIsolated(e){return this.sapiPostUserDataStreamIsolated(e)}sapiPostFuturesTransfer(e){return this.sapiPostFuturesTransfer(e)}sapiPostLendingCustomizedFixedPurchase(e){return this.sapiPostLendingCustomizedFixedPurchase(e)}sapiPostLendingDailyPurchase(e){return this.sapiPostLendingDailyPurchase(e)}sapiPostLendingDailyRedeem(e){return this.sapiPostLendingDailyRedeem(e)}sapiPostBswapLiquidityAdd(e){return this.sapiPostBswapLiquidityAdd(e)}sapiPostBswapLiquidityRemove(e){return this.sapiPostBswapLiquidityRemove(e)}sapiPostBswapSwap(e){return this.sapiPostBswapSwap(e)}sapiPostBswapClaimRewards(e){return this.sapiPostBswapClaimRewards(e)}sapiPostBlvtSubscribe(e){return this.sapiPostBlvtSubscribe(e)}sapiPostBlvtRedeem(e){return this.sapiPostBlvtRedeem(e)}sapiPostApiReferralCustomization(e){return this.sapiPostApiReferralCustomization(e)}sapiPostApiReferralUserCustomization(e){return this.sapiPostApiReferralUserCustomization(e)}sapiPostApiReferralRebateHistoricalRecord(e){return this.sapiPostApiReferralRebateHistoricalRecord(e)}sapiPostApiReferralKickbackHistoricalRecord(e){return this.sapiPostApiReferralKickbackHistoricalRecord(e)}sapiPostBrokerSubAccount(e){return this.sapiPostBrokerSubAccount(e)}sapiPostBrokerSubAccountMargin(e){return this.sapiPostBrokerSubAccountMargin(e)}sapiPostBrokerSubAccountFutures(e){return this.sapiPostBrokerSubAccountFutures(e)}sapiPostBrokerSubAccountApi(e){return this.sapiPostBrokerSubAccountApi(e)}sapiPostBrokerSubAccountApiPermission(e){return this.sapiPostBrokerSubAccountApiPermission(e)}sapiPostBrokerSubAccountApiCommission(e){return this.sapiPostBrokerSubAccountApiCommission(e)}sapiPostBrokerSubAccountApiCommissionFutures(e){return this.sapiPostBrokerSubAccountApiCommissionFutures(e)}sapiPostBrokerSubAccountApiCommissionCoinFutures(e){return this.sapiPostBrokerSubAccountApiCommissionCoinFutures(e)}sapiPostBrokerTransfer(e){return this.sapiPostBrokerTransfer(e)}sapiPostBrokerTransferFutures(e){return this.sapiPostBrokerTransferFutures(e)}sapiPostBrokerRebateHistoricalRecord(e){return this.sapiPostBrokerRebateHistoricalRecord(e)}sapiPostBrokerSubAccountBnbBurnSpot(e){return this.sapiPostBrokerSubAccountBnbBurnSpot(e)}sapiPostBrokerSubAccountBnbBurnMarginInterest(e){return this.sapiPostBrokerSubAccountBnbBurnMarginInterest(e)}sapiPostBrokerSubAccountBlvt(e){return this.sapiPostBrokerSubAccountBlvt(e)}sapiPostBrokerSubAccountApiIpRestriction(e){return this.sapiPostBrokerSubAccountApiIpRestriction(e)}sapiPostBrokerSubAccountApiIpRestrictionIpList(e){return this.sapiPostBrokerSubAccountApiIpRestrictionIpList(e)}sapiPostBrokerUniversalTransfer(e){return this.sapiPostBrokerUniversalTransfer(e)}sapiPostBrokerSubAccountApiPermissionUniversalTransfer(e){return this.sapiPostBrokerSubAccountApiPermissionUniversalTransfer(e)}sapiPostBrokerSubAccountApiPermissionVanillaOptions(e){return this.sapiPostBrokerSubAccountApiPermissionVanillaOptions(e)}sapiPostGiftcardCreateCode(e){return this.sapiPostGiftcardCreateCode(e)}sapiPostGiftcardRedeemCode(e){return this.sapiPostGiftcardRedeemCode(e)}sapiPostGiftcardBuyCode(e){return this.sapiPostGiftcardBuyCode(e)}sapiPostAlgoFuturesNewOrderVp(e){return this.sapiPostAlgoFuturesNewOrderVp(e)}sapiPostAlgoFuturesNewOrderTwap(e){return this.sapiPostAlgoFuturesNewOrderTwap(e)}sapiPostStakingPurchase(e){return this.sapiPostStakingPurchase(e)}sapiPostStakingRedeem(e){return this.sapiPostStakingRedeem(e)}sapiPostStakingSetAutoStaking(e){return this.sapiPostStakingSetAutoStaking(e)}sapiPostPortfolioRepay(e){return this.sapiPostPortfolioRepay(e)}sapiPostLoanBorrow(e){return this.sapiPostLoanBorrow(e)}sapiPostLoanRepay(e){return this.sapiPostLoanRepay(e)}sapiPostLoanAdjustLtv(e){return this.sapiPostLoanAdjustLtv(e)}sapiPostLoanCustomizeMarginCall(e){return this.sapiPostLoanCustomizeMarginCall(e)}sapiPostLoanVipRepay(e){return this.sapiPostLoanVipRepay(e)}sapiPostConvertGetQuote(e){return this.sapiPostConvertGetQuote(e)}sapiPostConvertAcceptQuote(e){return this.sapiPostConvertAcceptQuote(e)}sapiPutUserDataStream(e){return this.sapiPutUserDataStream(e)}sapiPutUserDataStreamIsolated(e){return this.sapiPutUserDataStreamIsolated(e)}sapiDeleteMarginOpenOrders(e){return this.sapiDeleteMarginOpenOrders(e)}sapiDeleteMarginOrder(e){return this.sapiDeleteMarginOrder(e)}sapiDeleteMarginOrderList(e){return this.sapiDeleteMarginOrderList(e)}sapiDeleteMarginIsolatedAccount(e){return this.sapiDeleteMarginIsolatedAccount(e)}sapiDeleteUserDataStream(e){return this.sapiDeleteUserDataStream(e)}sapiDeleteUserDataStreamIsolated(e){return this.sapiDeleteUserDataStreamIsolated(e)}sapiDeleteBrokerSubAccountApi(e){return this.sapiDeleteBrokerSubAccountApi(e)}sapiDeleteBrokerSubAccountApiIpRestrictionIpList(e){return this.sapiDeleteBrokerSubAccountApiIpRestrictionIpList(e)}sapiDeleteAlgoFuturesOrder(e){return this.sapiDeleteAlgoFuturesOrder(e)}sapiV2GetSubAccountFuturesAccount(e){return this.sapiV2GetSubAccountFuturesAccount(e)}sapiV2GetSubAccountFuturesPositionRisk(e){return this.sapiV2GetSubAccountFuturesPositionRisk(e)}sapiV3GetSubAccountAssets(e){return this.sapiV3GetSubAccountAssets(e)}sapiV3PostAssetGetUserAsset(e){return this.sapiV3PostAssetGetUserAsset(e)}sapiV4GetSubAccountAssets(e){return this.sapiV4GetSubAccountAssets(e)}wapiPostWithdraw(e){return this.wapiPostWithdraw(e)}wapiPostSubAccountTransfer(e){return this.wapiPostSubAccountTransfer(e)}wapiGetDepositHistory(e){return this.wapiGetDepositHistory(e)}wapiGetWithdrawHistory(e){return this.wapiGetWithdrawHistory(e)}wapiGetDepositAddress(e){return this.wapiGetDepositAddress(e)}wapiGetAccountStatus(e){return this.wapiGetAccountStatus(e)}wapiGetSystemStatus(e){return this.wapiGetSystemStatus(e)}wapiGetApiTradingStatus(e){return this.wapiGetApiTradingStatus(e)}wapiGetUserAssetDribbletLog(e){return this.wapiGetUserAssetDribbletLog(e)}wapiGetTradeFee(e){return this.wapiGetTradeFee(e)}wapiGetAssetDetail(e){return this.wapiGetAssetDetail(e)}wapiGetSubAccountList(e){return this.wapiGetSubAccountList(e)}wapiGetSubAccountTransferHistory(e){return this.wapiGetSubAccountTransferHistory(e)}wapiGetSubAccountAssets(e){return this.wapiGetSubAccountAssets(e)}dapiPublicGetPing(e){return this.dapiPublicGetPing(e)}dapiPublicGetTime(e){return this.dapiPublicGetTime(e)}dapiPublicGetExchangeInfo(e){return this.dapiPublicGetExchangeInfo(e)}dapiPublicGetDepth(e){return this.dapiPublicGetDepth(e)}dapiPublicGetTrades(e){return this.dapiPublicGetTrades(e)}dapiPublicGetHistoricalTrades(e){return this.dapiPublicGetHistoricalTrades(e)}dapiPublicGetAggTrades(e){return this.dapiPublicGetAggTrades(e)}dapiPublicGetPremiumIndex(e){return this.dapiPublicGetPremiumIndex(e)}dapiPublicGetFundingRate(e){return this.dapiPublicGetFundingRate(e)}dapiPublicGetKlines(e){return this.dapiPublicGetKlines(e)}dapiPublicGetContinuousKlines(e){return this.dapiPublicGetContinuousKlines(e)}dapiPublicGetIndexPriceKlines(e){return this.dapiPublicGetIndexPriceKlines(e)}dapiPublicGetMarkPriceKlines(e){return this.dapiPublicGetMarkPriceKlines(e)}dapiPublicGetTicker24hr(e){return this.dapiPublicGetTicker24hr(e)}dapiPublicGetTickerPrice(e){return this.dapiPublicGetTickerPrice(e)}dapiPublicGetTickerBookTicker(e){return this.dapiPublicGetTickerBookTicker(e)}dapiPublicGetOpenInterest(e){return this.dapiPublicGetOpenInterest(e)}dapiPublicGetPmExchangeInfo(e){return this.dapiPublicGetPmExchangeInfo(e)}dapiDataGetOpenInterestHist(e){return this.dapiDataGetOpenInterestHist(e)}dapiDataGetTopLongShortAccountRatio(e){return this.dapiDataGetTopLongShortAccountRatio(e)}dapiDataGetTopLongShortPositionRatio(e){return this.dapiDataGetTopLongShortPositionRatio(e)}dapiDataGetGlobalLongShortAccountRatio(e){return this.dapiDataGetGlobalLongShortAccountRatio(e)}dapiDataGetTakerBuySellVol(e){return this.dapiDataGetTakerBuySellVol(e)}dapiDataGetBasis(e){return this.dapiDataGetBasis(e)}dapiPrivateGetPositionSideDual(e){return this.dapiPrivateGetPositionSideDual(e)}dapiPrivateGetOrder(e){return this.dapiPrivateGetOrder(e)}dapiPrivateGetOpenOrder(e){return this.dapiPrivateGetOpenOrder(e)}dapiPrivateGetOpenOrders(e){return this.dapiPrivateGetOpenOrders(e)}dapiPrivateGetAllOrders(e){return this.dapiPrivateGetAllOrders(e)}dapiPrivateGetBalance(e){return this.dapiPrivateGetBalance(e)}dapiPrivateGetAccount(e){return this.dapiPrivateGetAccount(e)}dapiPrivateGetPositionMarginHistory(e){return this.dapiPrivateGetPositionMarginHistory(e)}dapiPrivateGetPositionRisk(e){return this.dapiPrivateGetPositionRisk(e)}dapiPrivateGetUserTrades(e){return this.dapiPrivateGetUserTrades(e)}dapiPrivateGetIncome(e){return this.dapiPrivateGetIncome(e)}dapiPrivateGetLeverageBracket(e){return this.dapiPrivateGetLeverageBracket(e)}dapiPrivateGetForceOrders(e){return this.dapiPrivateGetForceOrders(e)}dapiPrivateGetAdlQuantile(e){return this.dapiPrivateGetAdlQuantile(e)}dapiPrivateGetOrderAmendment(e){return this.dapiPrivateGetOrderAmendment(e)}dapiPrivateGetPmAccountInfo(e){return this.dapiPrivateGetPmAccountInfo(e)}dapiPrivatePostPositionSideDual(e){return this.dapiPrivatePostPositionSideDual(e)}dapiPrivatePostOrder(e){return this.dapiPrivatePostOrder(e)}dapiPrivatePostBatchOrders(e){return this.dapiPrivatePostBatchOrders(e)}dapiPrivatePostCountdownCancelAll(e){return this.dapiPrivatePostCountdownCancelAll(e)}dapiPrivatePostLeverage(e){return this.dapiPrivatePostLeverage(e)}dapiPrivatePostMarginType(e){return this.dapiPrivatePostMarginType(e)}dapiPrivatePostPositionMargin(e){return this.dapiPrivatePostPositionMargin(e)}dapiPrivatePostListenKey(e){return this.dapiPrivatePostListenKey(e)}dapiPrivatePutListenKey(e){return this.dapiPrivatePutListenKey(e)}dapiPrivatePutOrder(e){return this.dapiPrivatePutOrder(e)}dapiPrivatePutBatchOrders(e){return this.dapiPrivatePutBatchOrders(e)}dapiPrivateDeleteOrder(e){return this.dapiPrivateDeleteOrder(e)}dapiPrivateDeleteAllOpenOrders(e){return this.dapiPrivateDeleteAllOpenOrders(e)}dapiPrivateDeleteBatchOrders(e){return this.dapiPrivateDeleteBatchOrders(e)}dapiPrivateDeleteListenKey(e){return this.dapiPrivateDeleteListenKey(e)}dapiPrivateV2GetLeverageBracket(e){return this.dapiPrivateV2GetLeverageBracket(e)}fapiPublicGetPing(e){return this.fapiPublicGetPing(e)}fapiPublicGetTime(e){return this.fapiPublicGetTime(e)}fapiPublicGetExchangeInfo(e){return this.fapiPublicGetExchangeInfo(e)}fapiPublicGetDepth(e){return this.fapiPublicGetDepth(e)}fapiPublicGetTrades(e){return this.fapiPublicGetTrades(e)}fapiPublicGetHistoricalTrades(e){return this.fapiPublicGetHistoricalTrades(e)}fapiPublicGetAggTrades(e){return this.fapiPublicGetAggTrades(e)}fapiPublicGetKlines(e){return this.fapiPublicGetKlines(e)}fapiPublicGetContinuousKlines(e){return this.fapiPublicGetContinuousKlines(e)}fapiPublicGetMarkPriceKlines(e){return this.fapiPublicGetMarkPriceKlines(e)}fapiPublicGetIndexPriceKlines(e){return this.fapiPublicGetIndexPriceKlines(e)}fapiPublicGetFundingRate(e){return this.fapiPublicGetFundingRate(e)}fapiPublicGetPremiumIndex(e){return this.fapiPublicGetPremiumIndex(e)}fapiPublicGetTicker24hr(e){return this.fapiPublicGetTicker24hr(e)}fapiPublicGetTickerPrice(e){return this.fapiPublicGetTickerPrice(e)}fapiPublicGetTickerBookTicker(e){return this.fapiPublicGetTickerBookTicker(e)}fapiPublicGetOpenInterest(e){return this.fapiPublicGetOpenInterest(e)}fapiPublicGetIndexInfo(e){return this.fapiPublicGetIndexInfo(e)}fapiPublicGetApiTradingStatus(e){return this.fapiPublicGetApiTradingStatus(e)}fapiPublicGetLvtKlines(e){return this.fapiPublicGetLvtKlines(e)}fapiPublicGetPmExchangeInfo(e){return this.fapiPublicGetPmExchangeInfo(e)}fapiDataGetOpenInterestHist(e){return this.fapiDataGetOpenInterestHist(e)}fapiDataGetTopLongShortAccountRatio(e){return this.fapiDataGetTopLongShortAccountRatio(e)}fapiDataGetTopLongShortPositionRatio(e){return this.fapiDataGetTopLongShortPositionRatio(e)}fapiDataGetGlobalLongShortAccountRatio(e){return this.fapiDataGetGlobalLongShortAccountRatio(e)}fapiDataGetTakerlongshortRatio(e){return this.fapiDataGetTakerlongshortRatio(e)}fapiPrivateGetForceOrders(e){return this.fapiPrivateGetForceOrders(e)}fapiPrivateGetAllOrders(e){return this.fapiPrivateGetAllOrders(e)}fapiPrivateGetOpenOrder(e){return this.fapiPrivateGetOpenOrder(e)}fapiPrivateGetOpenOrders(e){return this.fapiPrivateGetOpenOrders(e)}fapiPrivateGetOrder(e){return this.fapiPrivateGetOrder(e)}fapiPrivateGetAccount(e){return this.fapiPrivateGetAccount(e)}fapiPrivateGetBalance(e){return this.fapiPrivateGetBalance(e)}fapiPrivateGetLeverageBracket(e){return this.fapiPrivateGetLeverageBracket(e)}fapiPrivateGetPositionMarginHistory(e){return this.fapiPrivateGetPositionMarginHistory(e)}fapiPrivateGetPositionRisk(e){return this.fapiPrivateGetPositionRisk(e)}fapiPrivateGetPositionSideDual(e){return this.fapiPrivateGetPositionSideDual(e)}fapiPrivateGetUserTrades(e){return this.fapiPrivateGetUserTrades(e)}fapiPrivateGetIncome(e){return this.fapiPrivateGetIncome(e)}fapiPrivateGetCommissionRate(e){return this.fapiPrivateGetCommissionRate(e)}fapiPrivateGetApiTradingStatus(e){return this.fapiPrivateGetApiTradingStatus(e)}fapiPrivateGetMultiAssetsMargin(e){return this.fapiPrivateGetMultiAssetsMargin(e)}fapiPrivateGetApiReferralIfNewUser(e){return this.fapiPrivateGetApiReferralIfNewUser(e)}fapiPrivateGetApiReferralCustomization(e){return this.fapiPrivateGetApiReferralCustomization(e)}fapiPrivateGetApiReferralUserCustomization(e){return this.fapiPrivateGetApiReferralUserCustomization(e)}fapiPrivateGetApiReferralTraderNum(e){return this.fapiPrivateGetApiReferralTraderNum(e)}fapiPrivateGetApiReferralOverview(e){return this.fapiPrivateGetApiReferralOverview(e)}fapiPrivateGetApiReferralTradeVol(e){return this.fapiPrivateGetApiReferralTradeVol(e)}fapiPrivateGetApiReferralRebateVol(e){return this.fapiPrivateGetApiReferralRebateVol(e)}fapiPrivateGetApiReferralTraderSummary(e){return this.fapiPrivateGetApiReferralTraderSummary(e)}fapiPrivateGetAdlQuantile(e){return this.fapiPrivateGetAdlQuantile(e)}fapiPrivateGetPmAccountInfo(e){return this.fapiPrivateGetPmAccountInfo(e)}fapiPrivatePostBatchOrders(e){return this.fapiPrivatePostBatchOrders(e)}fapiPrivatePostPositionSideDual(e){return this.fapiPrivatePostPositionSideDual(e)}fapiPrivatePostPositionMargin(e){return this.fapiPrivatePostPositionMargin(e)}fapiPrivatePostMarginType(e){return this.fapiPrivatePostMarginType(e)}fapiPrivatePostOrder(e){return this.fapiPrivatePostOrder(e)}fapiPrivatePostLeverage(e){return this.fapiPrivatePostLeverage(e)}fapiPrivatePostListenKey(e){return this.fapiPrivatePostListenKey(e)}fapiPrivatePostCountdownCancelAll(e){return this.fapiPrivatePostCountdownCancelAll(e)}fapiPrivatePostMultiAssetsMargin(e){return this.fapiPrivatePostMultiAssetsMargin(e)}fapiPrivatePostApiReferralCustomization(e){return this.fapiPrivatePostApiReferralCustomization(e)}fapiPrivatePostApiReferralUserCustomization(e){return this.fapiPrivatePostApiReferralUserCustomization(e)}fapiPrivatePutListenKey(e){return this.fapiPrivatePutListenKey(e)}fapiPrivateDeleteBatchOrders(e){return this.fapiPrivateDeleteBatchOrders(e)}fapiPrivateDeleteOrder(e){return this.fapiPrivateDeleteOrder(e)}fapiPrivateDeleteAllOpenOrders(e){return this.fapiPrivateDeleteAllOpenOrders(e)}fapiPrivateDeleteListenKey(e){return this.fapiPrivateDeleteListenKey(e)}fapiPrivateV2GetAccount(e){return this.fapiPrivateV2GetAccount(e)}fapiPrivateV2GetBalance(e){return this.fapiPrivateV2GetBalance(e)}fapiPrivateV2GetPositionRisk(e){return this.fapiPrivateV2GetPositionRisk(e)}eapiPublicGetPing(e){return this.eapiPublicGetPing(e)}eapiPublicGetTime(e){return this.eapiPublicGetTime(e)}eapiPublicGetExchangeInfo(e){return this.eapiPublicGetExchangeInfo(e)}eapiPublicGetIndex(e){return this.eapiPublicGetIndex(e)}eapiPublicGetTicker(e){return this.eapiPublicGetTicker(e)}eapiPublicGetMark(e){return this.eapiPublicGetMark(e)}eapiPublicGetDepth(e){return this.eapiPublicGetDepth(e)}eapiPublicGetKlines(e){return this.eapiPublicGetKlines(e)}eapiPublicGetTrades(e){return this.eapiPublicGetTrades(e)}eapiPublicGetHistoricalTrades(e){return this.eapiPublicGetHistoricalTrades(e)}eapiPublicGetExerciseHistory(e){return this.eapiPublicGetExerciseHistory(e)}eapiPublicGetOpenInterest(e){return this.eapiPublicGetOpenInterest(e)}eapiPrivateGetAccount(e){return this.eapiPrivateGetAccount(e)}eapiPrivateGetPosition(e){return this.eapiPrivateGetPosition(e)}eapiPrivateGetOpenOrders(e){return this.eapiPrivateGetOpenOrders(e)}eapiPrivateGetHistoryOrders(e){return this.eapiPrivateGetHistoryOrders(e)}eapiPrivateGetUserTrades(e){return this.eapiPrivateGetUserTrades(e)}eapiPrivateGetExerciseRecord(e){return this.eapiPrivateGetExerciseRecord(e)}eapiPrivateGetBill(e){return this.eapiPrivateGetBill(e)}eapiPrivateGetMarginAccount(e){return this.eapiPrivateGetMarginAccount(e)}eapiPrivateGetMmp(e){return this.eapiPrivateGetMmp(e)}eapiPrivateGetCountdownCancelAll(e){return this.eapiPrivateGetCountdownCancelAll(e)}eapiPrivateGetOrder(e){return this.eapiPrivateGetOrder(e)}eapiPrivatePostOrder(e){return this.eapiPrivatePostOrder(e)}eapiPrivatePostBatchOrders(e){return this.eapiPrivatePostBatchOrders(e)}eapiPrivatePostListenKey(e){return this.eapiPrivatePostListenKey(e)}eapiPrivatePostMmpSet(e){return this.eapiPrivatePostMmpSet(e)}eapiPrivatePostMmpReset(e){return this.eapiPrivatePostMmpReset(e)}eapiPrivatePostCountdownCancelAll(e){return this.eapiPrivatePostCountdownCancelAll(e)}eapiPrivatePostCountdownCancelAllHeartBeat(e){return this.eapiPrivatePostCountdownCancelAllHeartBeat(e)}eapiPrivatePutListenKey(e){return this.eapiPrivatePutListenKey(e)}eapiPrivateDeleteOrder(e){return this.eapiPrivateDeleteOrder(e)}eapiPrivateDeleteBatchOrders(e){return this.eapiPrivateDeleteBatchOrders(e)}eapiPrivateDeleteAllOpenOrders(e){return this.eapiPrivateDeleteAllOpenOrders(e)}eapiPrivateDeleteAllOpenOrdersByUnderlying(e){return this.eapiPrivateDeleteAllOpenOrdersByUnderlying(e)}eapiPrivateDeleteListenKey(e){return this.eapiPrivateDeleteListenKey(e)}publicGetPing(e){return this.publicGetPing(e)}publicGetTime(e){return this.publicGetTime(e)}publicGetDepth(e){return this.publicGetDepth(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetAggTrades(e){return this.publicGetAggTrades(e)}publicGetHistoricalTrades(e){return this.publicGetHistoricalTrades(e)}publicGetKlines(e){return this.publicGetKlines(e)}publicGetTicker24hr(e){return this.publicGetTicker24hr(e)}publicGetTickerPrice(e){return this.publicGetTickerPrice(e)}publicGetTickerBookTicker(e){return this.publicGetTickerBookTicker(e)}publicGetExchangeInfo(e){return this.publicGetExchangeInfo(e)}publicPutUserDataStream(e){return this.publicPutUserDataStream(e)}publicPostUserDataStream(e){return this.publicPostUserDataStream(e)}publicDeleteUserDataStream(e){return this.publicDeleteUserDataStream(e)}privateGetAllOrderList(e){return this.privateGetAllOrderList(e)}privateGetOpenOrderList(e){return this.privateGetOpenOrderList(e)}privateGetOrderList(e){return this.privateGetOrderList(e)}privateGetOrder(e){return this.privateGetOrder(e)}privateGetOpenOrders(e){return this.privateGetOpenOrders(e)}privateGetAllOrders(e){return this.privateGetAllOrders(e)}privateGetAccount(e){return this.privateGetAccount(e)}privateGetMyTrades(e){return this.privateGetMyTrades(e)}privateGetRateLimitOrder(e){return this.privateGetRateLimitOrder(e)}privateGetMyPreventedMatches(e){return this.privateGetMyPreventedMatches(e)}privatePostOrderOco(e){return this.privatePostOrderOco(e)}privatePostOrder(e){return this.privatePostOrder(e)}privatePostOrderCancelReplace(e){return this.privatePostOrderCancelReplace(e)}privatePostOrderTest(e){return this.privatePostOrderTest(e)}privateDeleteOpenOrders(e){return this.privateDeleteOpenOrders(e)}privateDeleteOrderList(e){return this.privateDeleteOrderList(e)}privateDeleteOrder(e){return this.privateDeleteOrder(e)}}},3108:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetExchangesPairTicker(e){return this.publicGetExchangesPairTicker(e)}publicGetExchangesPairOrderbook(e){return this.publicGetExchangesPairOrderbook(e)}publicGetExchangesPairTrades(e){return this.publicGetExchangesPairTrades(e)}publicGetExchangesPairLasttrades(e){return this.publicGetExchangesPairLasttrades(e)}privatePostMerchantCreateCheckout(e){return this.privatePostMerchantCreateCheckout(e)}privatePostFundsAddCoinFundsRequest(e){return this.privatePostFundsAddCoinFundsRequest(e)}privatePostOrderAddFund(e){return this.privatePostOrderAddFund(e)}privatePostOrderAddOrder(e){return this.privatePostOrderAddOrder(e)}privatePostOrderGetById(e){return this.privatePostOrderGetById(e)}privatePostOrderAddOrderMarketPriceBuy(e){return this.privatePostOrderAddOrderMarketPriceBuy(e)}privatePostOrderAddOrderMarketPriceSell(e){return this.privatePostOrderAddOrderMarketPriceSell(e)}privatePostOrderCancelOrder(e){return this.privatePostOrderCancelOrder(e)}privatePostOrderAddCoinFundsRequest(e){return this.privatePostOrderAddCoinFundsRequest(e)}privatePostOrderAddStopOrder(e){return this.privatePostOrderAddStopOrder(e)}privatePostPaymentGetMyId(e){return this.privatePostPaymentGetMyId(e)}privatePostPaymentSend(e){return this.privatePostPaymentSend(e)}privatePostPaymentPay(e){return this.privatePostPaymentPay(e)}privateGetAccountBalance(e){return this.privateGetAccountBalance(e)}privateGetAccountBalanceV2(e){return this.privateGetAccountBalanceV2(e)}privateGetOrderMyOrders(e){return this.privateGetOrderMyOrders(e)}privateGetOrderGetById(e){return this.privateGetOrderGetById(e)}privateGetOrderAccountHistory(e){return this.privateGetOrderAccountHistory(e)}privateGetOrderOrderHistory(e){return this.privateGetOrderOrderHistory(e)}}},1868:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetPairTicker(e){return this.publicGetPairTicker(e)}publicGetPairDepth(e){return this.publicGetPairDepth(e)}publicGetPairTransactions(e){return this.publicGetPairTransactions(e)}publicGetPairTransactionsYyyymmdd(e){return this.publicGetPairTransactionsYyyymmdd(e)}publicGetPairCandlestickCandletypeYyyymmdd(e){return this.publicGetPairCandlestickCandletypeYyyymmdd(e)}privateGetUserAssets(e){return this.privateGetUserAssets(e)}privateGetUserSpotOrder(e){return this.privateGetUserSpotOrder(e)}privateGetUserSpotActiveOrders(e){return this.privateGetUserSpotActiveOrders(e)}privateGetUserSpotTradeHistory(e){return this.privateGetUserSpotTradeHistory(e)}privateGetUserWithdrawalAccount(e){return this.privateGetUserWithdrawalAccount(e)}privatePostUserSpotOrder(e){return this.privatePostUserSpotOrder(e)}privatePostUserSpotCancelOrder(e){return this.privatePostUserSpotCancelOrder(e)}privatePostUserSpotCancelOrders(e){return this.privatePostUserSpotCancelOrders(e)}privatePostUserSpotOrdersInfo(e){return this.privatePostUserSpotOrdersInfo(e)}privatePostUserRequestWithdrawal(e){return this.privatePostUserRequestWithdrawal(e)}marketsGetSpotPairs(e){return this.marketsGetSpotPairs(e)}}},657:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{wwwGetOrderFetchMarkets(e){return this.wwwGetOrderFetchMarkets(e)}wwwGetOrderFetchTickers(e){return this.wwwGetOrderFetchTickers(e)}wwwGetOrderFetchOrderbook(e){return this.wwwGetOrderFetchOrderbook(e)}wwwGetOrderGetTickerWithVolume(e){return this.wwwGetOrderGetTickerWithVolume(e)}wwwGetExchangeDataOhlc(e){return this.wwwGetExchangeDataOhlc(e)}wwwGetExchangeDataOrderBook(e){return this.wwwGetExchangeDataOrderBook(e)}wwwGetExchangeDataTradedetails(e){return this.wwwGetExchangeDataTradedetails(e)}v1GetPlatformStatus(e){return this.v1GetPlatformStatus(e)}v1GetTickers(e){return this.v1GetTickers(e)}v1GetOrderbookSellSymbol(e){return this.v1GetOrderbookSellSymbol(e)}v1GetOrderbookBuySymbol(e){return this.v1GetOrderbookBuySymbol(e)}v1PostCurrentCoinBalanceEVERYTHING(e){return this.v1PostCurrentCoinBalanceEVERYTHING(e)}v1PostGetApiUsageStatusUSAGE(e){return this.v1PostGetApiUsageStatusUSAGE(e)}v1PostGetOrderSocketTokenUSAGE(e){return this.v1PostGetOrderSocketTokenUSAGE(e)}v1PostCurrentCoinBalanceSymbol(e){return this.v1PostCurrentCoinBalanceSymbol(e)}v1PostOrderStatusSymbol(e){return this.v1PostOrderStatusSymbol(e)}v1PostDepositHistorySymbol(e){return this.v1PostDepositHistorySymbol(e)}v1PostWithdrawHistorySymbol(e){return this.v1PostWithdrawHistorySymbol(e)}v1PostWithdrawHistoryAllSymbol(e){return this.v1PostWithdrawHistoryAllSymbol(e)}v1PostDepositHistoryAllSymbol(e){return this.v1PostDepositHistoryAllSymbol(e)}v1PostListOpenOrdersSymbol(e){return this.v1PostListOpenOrdersSymbol(e)}v1PostListOpenStopOrdersSymbol(e){return this.v1PostListOpenStopOrdersSymbol(e)}v1PostGetCoinAddressSymbol(e){return this.v1PostGetCoinAddressSymbol(e)}v1PostPlaceSellOrderSymbol(e){return this.v1PostPlaceSellOrderSymbol(e)}v1PostPlaceBuyOrderSymbol(e){return this.v1PostPlaceBuyOrderSymbol(e)}v1PostBuyStopLossSymbol(e){return this.v1PostBuyStopLossSymbol(e)}v1PostSellStopLossSymbol(e){return this.v1PostSellStopLossSymbol(e)}v1PostCancelOrderSymbol(e){return this.v1PostCancelOrderSymbol(e)}v1PostCancelStopLossOrderSymbol(e){return this.v1PostCancelStopLossOrderSymbol(e)}v1PostListExecutedOrdersSymbol(e){return this.v1PostListExecutedOrdersSymbol(e)}v1PostPlaceMarketOrderSymbol(e){return this.v1PostPlaceMarketOrderSymbol(e)}v1PostPlaceMarketOrderQntySymbol(e){return this.v1PostPlaceMarketOrderQntySymbol(e)}v2PostOrders(e){return this.v2PostOrders(e)}v2PostCancel(e){return this.v2PostCancel(e)}v2PostGetordersnew(e){return this.v2PostGetordersnew(e)}v2PostMarginOrders(e){return this.v2PostMarginOrders(e)}}},4928:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{v2GetPlatformStatus(e){return this.v2GetPlatformStatus(e)}v2GetTickers(e){return this.v2GetTickers(e)}v2GetTickerSymbol(e){return this.v2GetTickerSymbol(e)}v2GetTickersHist(e){return this.v2GetTickersHist(e)}v2GetTradesSymbolHist(e){return this.v2GetTradesSymbolHist(e)}v2GetBookSymbolPrecision(e){return this.v2GetBookSymbolPrecision(e)}v2GetBookSymbolP0(e){return this.v2GetBookSymbolP0(e)}v2GetBookSymbolP1(e){return this.v2GetBookSymbolP1(e)}v2GetBookSymbolP2(e){return this.v2GetBookSymbolP2(e)}v2GetBookSymbolP3(e){return this.v2GetBookSymbolP3(e)}v2GetBookSymbolR0(e){return this.v2GetBookSymbolR0(e)}v2GetStats1KeySizeSymbolSideSection(e){return this.v2GetStats1KeySizeSymbolSideSection(e)}v2GetStats1KeySizeSymbolSection(e){return this.v2GetStats1KeySizeSymbolSection(e)}v2GetStats1KeySizeSymbolLongLast(e){return this.v2GetStats1KeySizeSymbolLongLast(e)}v2GetStats1KeySizeSymbolLongHist(e){return this.v2GetStats1KeySizeSymbolLongHist(e)}v2GetStats1KeySizeSymbolShortLast(e){return this.v2GetStats1KeySizeSymbolShortLast(e)}v2GetStats1KeySizeSymbolShortHist(e){return this.v2GetStats1KeySizeSymbolShortHist(e)}v2GetCandlesTradeTimeframeSymbolSection(e){return this.v2GetCandlesTradeTimeframeSymbolSection(e)}v2GetCandlesTradeTimeframeSymbolLast(e){return this.v2GetCandlesTradeTimeframeSymbolLast(e)}v2GetCandlesTradeTimeframeSymbolHist(e){return this.v2GetCandlesTradeTimeframeSymbolHist(e)}publicGetBookSymbol(e){return this.publicGetBookSymbol(e)}publicGetLendbookCurrency(e){return this.publicGetLendbookCurrency(e)}publicGetLendsCurrency(e){return this.publicGetLendsCurrency(e)}publicGetPubtickerSymbol(e){return this.publicGetPubtickerSymbol(e)}publicGetStatsSymbol(e){return this.publicGetStatsSymbol(e)}publicGetSymbols(e){return this.publicGetSymbols(e)}publicGetSymbolsDetails(e){return this.publicGetSymbolsDetails(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetTradesSymbol(e){return this.publicGetTradesSymbol(e)}privatePostAccountFees(e){return this.privatePostAccountFees(e)}privatePostAccountInfos(e){return this.privatePostAccountInfos(e)}privatePostBalances(e){return this.privatePostBalances(e)}privatePostBasketManage(e){return this.privatePostBasketManage(e)}privatePostCredits(e){return this.privatePostCredits(e)}privatePostDepositNew(e){return this.privatePostDepositNew(e)}privatePostFundingClose(e){return this.privatePostFundingClose(e)}privatePostHistory(e){return this.privatePostHistory(e)}privatePostHistoryMovements(e){return this.privatePostHistoryMovements(e)}privatePostKeyInfo(e){return this.privatePostKeyInfo(e)}privatePostMarginInfos(e){return this.privatePostMarginInfos(e)}privatePostMytrades(e){return this.privatePostMytrades(e)}privatePostMytradesFunding(e){return this.privatePostMytradesFunding(e)}privatePostOfferCancel(e){return this.privatePostOfferCancel(e)}privatePostOfferNew(e){return this.privatePostOfferNew(e)}privatePostOfferStatus(e){return this.privatePostOfferStatus(e)}privatePostOffers(e){return this.privatePostOffers(e)}privatePostOffersHist(e){return this.privatePostOffersHist(e)}privatePostOrderCancel(e){return this.privatePostOrderCancel(e)}privatePostOrderCancelAll(e){return this.privatePostOrderCancelAll(e)}privatePostOrderCancelMulti(e){return this.privatePostOrderCancelMulti(e)}privatePostOrderCancelReplace(e){return this.privatePostOrderCancelReplace(e)}privatePostOrderNew(e){return this.privatePostOrderNew(e)}privatePostOrderNewMulti(e){return this.privatePostOrderNewMulti(e)}privatePostOrderStatus(e){return this.privatePostOrderStatus(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersHist(e){return this.privatePostOrdersHist(e)}privatePostPositionClaim(e){return this.privatePostPositionClaim(e)}privatePostPositionClose(e){return this.privatePostPositionClose(e)}privatePostPositions(e){return this.privatePostPositions(e)}privatePostSummary(e){return this.privatePostSummary(e)}privatePostTakenFunds(e){return this.privatePostTakenFunds(e)}privatePostTotalTakenFunds(e){return this.privatePostTotalTakenFunds(e)}privatePostTransfer(e){return this.privatePostTransfer(e)}privatePostUnusedTakenFunds(e){return this.privatePostUnusedTakenFunds(e)}privatePostWithdraw(e){return this.privatePostWithdraw(e)}}},3420:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetConfConfig(e){return this.publicGetConfConfig(e)}publicGetConfPubActionObject(e){return this.publicGetConfPubActionObject(e)}publicGetConfPubActionObjectDetail(e){return this.publicGetConfPubActionObjectDetail(e)}publicGetConfPubMapObject(e){return this.publicGetConfPubMapObject(e)}publicGetConfPubMapObjectDetail(e){return this.publicGetConfPubMapObjectDetail(e)}publicGetConfPubMapCurrencyDetail(e){return this.publicGetConfPubMapCurrencyDetail(e)}publicGetConfPubMapCurrencySym(e){return this.publicGetConfPubMapCurrencySym(e)}publicGetConfPubMapCurrencyLabel(e){return this.publicGetConfPubMapCurrencyLabel(e)}publicGetConfPubMapCurrencyUnit(e){return this.publicGetConfPubMapCurrencyUnit(e)}publicGetConfPubMapCurrencyUndl(e){return this.publicGetConfPubMapCurrencyUndl(e)}publicGetConfPubMapCurrencyPool(e){return this.publicGetConfPubMapCurrencyPool(e)}publicGetConfPubMapCurrencyExplorer(e){return this.publicGetConfPubMapCurrencyExplorer(e)}publicGetConfPubMapCurrencyTxFee(e){return this.publicGetConfPubMapCurrencyTxFee(e)}publicGetConfPubMapTxMethod(e){return this.publicGetConfPubMapTxMethod(e)}publicGetConfPubListObject(e){return this.publicGetConfPubListObject(e)}publicGetConfPubListObjectDetail(e){return this.publicGetConfPubListObjectDetail(e)}publicGetConfPubListCurrency(e){return this.publicGetConfPubListCurrency(e)}publicGetConfPubListPairExchange(e){return this.publicGetConfPubListPairExchange(e)}publicGetConfPubListPairMargin(e){return this.publicGetConfPubListPairMargin(e)}publicGetConfPubListPairFutures(e){return this.publicGetConfPubListPairFutures(e)}publicGetConfPubListCompetitions(e){return this.publicGetConfPubListCompetitions(e)}publicGetConfPubInfoObject(e){return this.publicGetConfPubInfoObject(e)}publicGetConfPubInfoObjectDetail(e){return this.publicGetConfPubInfoObjectDetail(e)}publicGetConfPubInfoPair(e){return this.publicGetConfPubInfoPair(e)}publicGetConfPubInfoPairFutures(e){return this.publicGetConfPubInfoPairFutures(e)}publicGetConfPubInfoTxStatus(e){return this.publicGetConfPubInfoTxStatus(e)}publicGetConfPubFees(e){return this.publicGetConfPubFees(e)}publicGetPlatformStatus(e){return this.publicGetPlatformStatus(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetTickerSymbol(e){return this.publicGetTickerSymbol(e)}publicGetTickersHist(e){return this.publicGetTickersHist(e)}publicGetTradesSymbolHist(e){return this.publicGetTradesSymbolHist(e)}publicGetBookSymbolPrecision(e){return this.publicGetBookSymbolPrecision(e)}publicGetBookSymbolP0(e){return this.publicGetBookSymbolP0(e)}publicGetBookSymbolP1(e){return this.publicGetBookSymbolP1(e)}publicGetBookSymbolP2(e){return this.publicGetBookSymbolP2(e)}publicGetBookSymbolP3(e){return this.publicGetBookSymbolP3(e)}publicGetBookSymbolR0(e){return this.publicGetBookSymbolR0(e)}publicGetStats1KeySizeSymbolSideSection(e){return this.publicGetStats1KeySizeSymbolSideSection(e)}publicGetStats1KeySizeSymbolSideLast(e){return this.publicGetStats1KeySizeSymbolSideLast(e)}publicGetStats1KeySizeSymbolSideHist(e){return this.publicGetStats1KeySizeSymbolSideHist(e)}publicGetStats1KeySizeSymbolSection(e){return this.publicGetStats1KeySizeSymbolSection(e)}publicGetStats1KeySizeSymbolLast(e){return this.publicGetStats1KeySizeSymbolLast(e)}publicGetStats1KeySizeSymbolHist(e){return this.publicGetStats1KeySizeSymbolHist(e)}publicGetStats1KeySizeSymbolLongLast(e){return this.publicGetStats1KeySizeSymbolLongLast(e)}publicGetStats1KeySizeSymbolLongHist(e){return this.publicGetStats1KeySizeSymbolLongHist(e)}publicGetStats1KeySizeSymbolShortLast(e){return this.publicGetStats1KeySizeSymbolShortLast(e)}publicGetStats1KeySizeSymbolShortHist(e){return this.publicGetStats1KeySizeSymbolShortHist(e)}publicGetCandlesTradeTimeframeSymbolPeriodSection(e){return this.publicGetCandlesTradeTimeframeSymbolPeriodSection(e)}publicGetCandlesTradeTimeframeSymbolSection(e){return this.publicGetCandlesTradeTimeframeSymbolSection(e)}publicGetCandlesTradeTimeframeSymbolLast(e){return this.publicGetCandlesTradeTimeframeSymbolLast(e)}publicGetCandlesTradeTimeframeSymbolHist(e){return this.publicGetCandlesTradeTimeframeSymbolHist(e)}publicGetStatusType(e){return this.publicGetStatusType(e)}publicGetStatusDeriv(e){return this.publicGetStatusDeriv(e)}publicGetLiquidationsHist(e){return this.publicGetLiquidationsHist(e)}publicGetRankingsKeyTimeframeSymbolSection(e){return this.publicGetRankingsKeyTimeframeSymbolSection(e)}publicGetRankingsKeyTimeframeSymbolHist(e){return this.publicGetRankingsKeyTimeframeSymbolHist(e)}publicGetPulseHist(e){return this.publicGetPulseHist(e)}publicGetPulseProfileNickname(e){return this.publicGetPulseProfileNickname(e)}publicGetFundingStatsSymbolHist(e){return this.publicGetFundingStatsSymbolHist(e)}publicPostCalcTradeAvg(e){return this.publicPostCalcTradeAvg(e)}publicPostCalcFx(e){return this.publicPostCalcFx(e)}privatePostAuthRWallets(e){return this.privatePostAuthRWallets(e)}privatePostAuthRWalletsHist(e){return this.privatePostAuthRWalletsHist(e)}privatePostAuthROrders(e){return this.privatePostAuthROrders(e)}privatePostAuthROrdersSymbol(e){return this.privatePostAuthROrdersSymbol(e)}privatePostAuthWOrderSubmit(e){return this.privatePostAuthWOrderSubmit(e)}privatePostAuthWOrderUpdate(e){return this.privatePostAuthWOrderUpdate(e)}privatePostAuthWOrderCancel(e){return this.privatePostAuthWOrderCancel(e)}privatePostAuthWOrderMulti(e){return this.privatePostAuthWOrderMulti(e)}privatePostAuthWOrderCancelMulti(e){return this.privatePostAuthWOrderCancelMulti(e)}privatePostAuthROrdersSymbolHist(e){return this.privatePostAuthROrdersSymbolHist(e)}privatePostAuthROrdersHist(e){return this.privatePostAuthROrdersHist(e)}privatePostAuthROrderSymbolIdTrades(e){return this.privatePostAuthROrderSymbolIdTrades(e)}privatePostAuthRTradesSymbolHist(e){return this.privatePostAuthRTradesSymbolHist(e)}privatePostAuthRTradesHist(e){return this.privatePostAuthRTradesHist(e)}privatePostAuthRLedgersCurrencyHist(e){return this.privatePostAuthRLedgersCurrencyHist(e)}privatePostAuthRLedgersHist(e){return this.privatePostAuthRLedgersHist(e)}privatePostAuthRInfoMarginKey(e){return this.privatePostAuthRInfoMarginKey(e)}privatePostAuthRInfoMarginBase(e){return this.privatePostAuthRInfoMarginBase(e)}privatePostAuthRInfoMarginSymAll(e){return this.privatePostAuthRInfoMarginSymAll(e)}privatePostAuthRPositions(e){return this.privatePostAuthRPositions(e)}privatePostAuthWPositionClaim(e){return this.privatePostAuthWPositionClaim(e)}privatePostAuthWPositionIncrease(e){return this.privatePostAuthWPositionIncrease(e)}privatePostAuthRPositionIncreaseInfo(e){return this.privatePostAuthRPositionIncreaseInfo(e)}privatePostAuthRPositionsHist(e){return this.privatePostAuthRPositionsHist(e)}privatePostAuthRPositionsAudit(e){return this.privatePostAuthRPositionsAudit(e)}privatePostAuthRPositionsSnap(e){return this.privatePostAuthRPositionsSnap(e)}privatePostAuthWDerivCollateralSet(e){return this.privatePostAuthWDerivCollateralSet(e)}privatePostAuthWDerivCollateralLimits(e){return this.privatePostAuthWDerivCollateralLimits(e)}privatePostAuthRFundingOffers(e){return this.privatePostAuthRFundingOffers(e)}privatePostAuthRFundingOffersSymbol(e){return this.privatePostAuthRFundingOffersSymbol(e)}privatePostAuthWFundingOfferSubmit(e){return this.privatePostAuthWFundingOfferSubmit(e)}privatePostAuthWFundingOfferCancel(e){return this.privatePostAuthWFundingOfferCancel(e)}privatePostAuthWFundingOfferCancelAll(e){return this.privatePostAuthWFundingOfferCancelAll(e)}privatePostAuthWFundingClose(e){return this.privatePostAuthWFundingClose(e)}privatePostAuthWFundingAuto(e){return this.privatePostAuthWFundingAuto(e)}privatePostAuthWFundingKeep(e){return this.privatePostAuthWFundingKeep(e)}privatePostAuthRFundingOffersSymbolHist(e){return this.privatePostAuthRFundingOffersSymbolHist(e)}privatePostAuthRFundingOffersHist(e){return this.privatePostAuthRFundingOffersHist(e)}privatePostAuthRFundingLoans(e){return this.privatePostAuthRFundingLoans(e)}privatePostAuthRFundingLoansHist(e){return this.privatePostAuthRFundingLoansHist(e)}privatePostAuthRFundingLoansSymbol(e){return this.privatePostAuthRFundingLoansSymbol(e)}privatePostAuthRFundingLoansSymbolHist(e){return this.privatePostAuthRFundingLoansSymbolHist(e)}privatePostAuthRFundingCredits(e){return this.privatePostAuthRFundingCredits(e)}privatePostAuthRFundingCreditsHist(e){return this.privatePostAuthRFundingCreditsHist(e)}privatePostAuthRFundingCreditsSymbol(e){return this.privatePostAuthRFundingCreditsSymbol(e)}privatePostAuthRFundingCreditsSymbolHist(e){return this.privatePostAuthRFundingCreditsSymbolHist(e)}privatePostAuthRFundingTradesSymbolHist(e){return this.privatePostAuthRFundingTradesSymbolHist(e)}privatePostAuthRFundingTradesHist(e){return this.privatePostAuthRFundingTradesHist(e)}privatePostAuthRInfoFundingKey(e){return this.privatePostAuthRInfoFundingKey(e)}privatePostAuthRInfoUser(e){return this.privatePostAuthRInfoUser(e)}privatePostAuthRSummary(e){return this.privatePostAuthRSummary(e)}privatePostAuthRLoginsHist(e){return this.privatePostAuthRLoginsHist(e)}privatePostAuthRPermissions(e){return this.privatePostAuthRPermissions(e)}privatePostAuthWToken(e){return this.privatePostAuthWToken(e)}privatePostAuthRAuditHist(e){return this.privatePostAuthRAuditHist(e)}privatePostAuthWTransfer(e){return this.privatePostAuthWTransfer(e)}privatePostAuthWDepositAddress(e){return this.privatePostAuthWDepositAddress(e)}privatePostAuthWDepositInvoice(e){return this.privatePostAuthWDepositInvoice(e)}privatePostAuthWWithdraw(e){return this.privatePostAuthWWithdraw(e)}privatePostAuthRMovementsCurrencyHist(e){return this.privatePostAuthRMovementsCurrencyHist(e)}privatePostAuthRMovementsHist(e){return this.privatePostAuthRMovementsHist(e)}privatePostAuthRAlerts(e){return this.privatePostAuthRAlerts(e)}privatePostAuthWAlertSet(e){return this.privatePostAuthWAlertSet(e)}privatePostAuthWAlertPriceSymbolPriceDel(e){return this.privatePostAuthWAlertPriceSymbolPriceDel(e)}privatePostAuthWAlertTypeSymbolPriceDel(e){return this.privatePostAuthWAlertTypeSymbolPriceDel(e)}privatePostAuthCalcOrderAvail(e){return this.privatePostAuthCalcOrderAvail(e)}privatePostAuthWSettingsSet(e){return this.privatePostAuthWSettingsSet(e)}privatePostAuthRSettings(e){return this.privatePostAuthRSettings(e)}privatePostAuthWSettingsDel(e){return this.privatePostAuthWSettingsDel(e)}privatePostAuthRPulseHist(e){return this.privatePostAuthRPulseHist(e)}privatePostAuthWPulseAdd(e){return this.privatePostAuthWPulseAdd(e)}privatePostAuthWPulseDel(e){return this.privatePostAuthWPulseDel(e)}}},2787:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetGetmarketsUsa(e){return this.publicGetGetmarketsUsa(e)}publicGetGetmarketsEu(e){return this.publicGetGetmarketsEu(e)}publicGetGetmarkets(e){return this.publicGetGetmarkets(e)}publicGetGetboard(e){return this.publicGetGetboard(e)}publicGetGetticker(e){return this.publicGetGetticker(e)}publicGetGetexecutions(e){return this.publicGetGetexecutions(e)}publicGetGethealth(e){return this.publicGetGethealth(e)}publicGetGetboardstate(e){return this.publicGetGetboardstate(e)}publicGetGetchats(e){return this.publicGetGetchats(e)}privateGetGetpermissions(e){return this.privateGetGetpermissions(e)}privateGetGetbalance(e){return this.privateGetGetbalance(e)}privateGetGetbalancehistory(e){return this.privateGetGetbalancehistory(e)}privateGetGetcollateral(e){return this.privateGetGetcollateral(e)}privateGetGetcollateralhistory(e){return this.privateGetGetcollateralhistory(e)}privateGetGetcollateralaccounts(e){return this.privateGetGetcollateralaccounts(e)}privateGetGetaddresses(e){return this.privateGetGetaddresses(e)}privateGetGetcoinins(e){return this.privateGetGetcoinins(e)}privateGetGetcoinouts(e){return this.privateGetGetcoinouts(e)}privateGetGetbankaccounts(e){return this.privateGetGetbankaccounts(e)}privateGetGetdeposits(e){return this.privateGetGetdeposits(e)}privateGetGetwithdrawals(e){return this.privateGetGetwithdrawals(e)}privateGetGetchildorders(e){return this.privateGetGetchildorders(e)}privateGetGetparentorders(e){return this.privateGetGetparentorders(e)}privateGetGetparentorder(e){return this.privateGetGetparentorder(e)}privateGetGetexecutions(e){return this.privateGetGetexecutions(e)}privateGetGetpositions(e){return this.privateGetGetpositions(e)}privateGetGettradingcommission(e){return this.privateGetGettradingcommission(e)}privatePostSendcoin(e){return this.privatePostSendcoin(e)}privatePostWithdraw(e){return this.privatePostWithdraw(e)}privatePostSendchildorder(e){return this.privatePostSendchildorder(e)}privatePostCancelchildorder(e){return this.privatePostCancelchildorder(e)}privatePostSendparentorder(e){return this.privatePostSendparentorder(e)}privatePostCancelparentorder(e){return this.privatePostCancelparentorder(e)}privatePostCancelallchildorders(e){return this.privatePostCancelallchildorders(e)}}},491:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetApiV1MarketSymbols(e){return this.publicGetApiV1MarketSymbols(e)}publicGetApiV1MarketTicker(e){return this.publicGetApiV1MarketTicker(e)}publicGetApiV1MarketTickerAll(e){return this.publicGetApiV1MarketTickerAll(e)}publicGetApiV1MarketDepth(e){return this.publicGetApiV1MarketDepth(e)}publicGetApiV1MarketDepthAll(e){return this.publicGetApiV1MarketDepthAll(e)}publicGetApiV1MarketTrades(e){return this.publicGetApiV1MarketTrades(e)}publicGetApiV1MarketKline(e){return this.publicGetApiV1MarketKline(e)}privatePostApiV1FundMainAccount(e){return this.privatePostApiV1FundMainAccount(e)}privatePostApiV1FundAllAccount(e){return this.privatePostApiV1FundAllAccount(e)}privatePostApiV1TradePlaceOrder(e){return this.privatePostApiV1TradePlaceOrder(e)}privatePostApiV1TradePlaceMultiOrder(e){return this.privatePostApiV1TradePlaceMultiOrder(e)}privatePostApiV1TradeCancelOrder(e){return this.privatePostApiV1TradeCancelOrder(e)}privatePostApiV1TradeCancelMultiOrder(e){return this.privatePostApiV1TradeCancelMultiOrder(e)}privatePostApiV1TradeCancelAllOrder(e){return this.privatePostApiV1TradeCancelAllOrder(e)}privatePostApiV1TradeOrderInfo(e){return this.privatePostApiV1TradeOrderInfo(e)}privatePostApiV1TradeMultiOrderInfo(e){return this.privatePostApiV1TradeMultiOrderInfo(e)}privatePostApiV1TradeOrderInfos(e){return this.privatePostApiV1TradeOrderInfos(e)}}},2065:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicSpotGetPublicTime(e){return this.publicSpotGetPublicTime(e)}publicSpotGetPublicCurrencies(e){return this.publicSpotGetPublicCurrencies(e)}publicSpotGetPublicProducts(e){return this.publicSpotGetPublicProducts(e)}publicSpotGetPublicProduct(e){return this.publicSpotGetPublicProduct(e)}publicSpotGetMarketTicker(e){return this.publicSpotGetMarketTicker(e)}publicSpotGetMarketTickers(e){return this.publicSpotGetMarketTickers(e)}publicSpotGetMarketFills(e){return this.publicSpotGetMarketFills(e)}publicSpotGetMarketCandles(e){return this.publicSpotGetMarketCandles(e)}publicSpotGetMarketDepth(e){return this.publicSpotGetMarketDepth(e)}publicSpotGetMarketSpotVipLevel(e){return this.publicSpotGetMarketSpotVipLevel(e)}publicMixGetMarketContracts(e){return this.publicMixGetMarketContracts(e)}publicMixGetMarketDepth(e){return this.publicMixGetMarketDepth(e)}publicMixGetMarketTicker(e){return this.publicMixGetMarketTicker(e)}publicMixGetMarketTickers(e){return this.publicMixGetMarketTickers(e)}publicMixGetMarketFills(e){return this.publicMixGetMarketFills(e)}publicMixGetMarketCandles(e){return this.publicMixGetMarketCandles(e)}publicMixGetMarketIndex(e){return this.publicMixGetMarketIndex(e)}publicMixGetMarketFundingTime(e){return this.publicMixGetMarketFundingTime(e)}publicMixGetMarketHistoryFundRate(e){return this.publicMixGetMarketHistoryFundRate(e)}publicMixGetMarketCurrentFundRate(e){return this.publicMixGetMarketCurrentFundRate(e)}publicMixGetMarketOpenInterest(e){return this.publicMixGetMarketOpenInterest(e)}publicMixGetMarketMarkPrice(e){return this.publicMixGetMarketMarkPrice(e)}publicMixGetMarketSymbolLeverage(e){return this.publicMixGetMarketSymbolLeverage(e)}publicMixGetMarketContractVipLevel(e){return this.publicMixGetMarketContractVipLevel(e)}privateSpotGetAccountGetInfo(e){return this.privateSpotGetAccountGetInfo(e)}privateSpotGetAccountAssets(e){return this.privateSpotGetAccountAssets(e)}privateSpotGetAccountTransferRecords(e){return this.privateSpotGetAccountTransferRecords(e)}privateSpotGetWalletDepositAddress(e){return this.privateSpotGetWalletDepositAddress(e)}privateSpotGetWalletWithdrawalInner(e){return this.privateSpotGetWalletWithdrawalInner(e)}privateSpotGetWalletWithdrawalList(e){return this.privateSpotGetWalletWithdrawalList(e)}privateSpotGetWalletDepositList(e){return this.privateSpotGetWalletDepositList(e)}privateSpotPostAccountBills(e){return this.privateSpotPostAccountBills(e)}privateSpotPostAccountSubAccountSpotAssets(e){return this.privateSpotPostAccountSubAccountSpotAssets(e)}privateSpotPostTradeOrders(e){return this.privateSpotPostTradeOrders(e)}privateSpotPostTradeBatchOrders(e){return this.privateSpotPostTradeBatchOrders(e)}privateSpotPostTradeCancelOrder(e){return this.privateSpotPostTradeCancelOrder(e)}privateSpotPostTradeCancelBatchOrders(e){return this.privateSpotPostTradeCancelBatchOrders(e)}privateSpotPostTradeOrderInfo(e){return this.privateSpotPostTradeOrderInfo(e)}privateSpotPostTradeOpenOrders(e){return this.privateSpotPostTradeOpenOrders(e)}privateSpotPostTradeHistory(e){return this.privateSpotPostTradeHistory(e)}privateSpotPostTradeFills(e){return this.privateSpotPostTradeFills(e)}privateSpotPostWalletTransfer(e){return this.privateSpotPostWalletTransfer(e)}privateSpotPostWalletWithdrawal(e){return this.privateSpotPostWalletWithdrawal(e)}privateSpotPostWalletSubTransfer(e){return this.privateSpotPostWalletSubTransfer(e)}privateSpotPostPlanPlacePlan(e){return this.privateSpotPostPlanPlacePlan(e)}privateSpotPostPlanModifyPlan(e){return this.privateSpotPostPlanModifyPlan(e)}privateSpotPostPlanCancelPlan(e){return this.privateSpotPostPlanCancelPlan(e)}privateSpotPostPlanCurrentPlan(e){return this.privateSpotPostPlanCurrentPlan(e)}privateSpotPostPlanHistoryPlan(e){return this.privateSpotPostPlanHistoryPlan(e)}privateMixGetAccountAccount(e){return this.privateMixGetAccountAccount(e)}privateMixGetAccountAccounts(e){return this.privateMixGetAccountAccounts(e)}privateMixGetAccountAccountBill(e){return this.privateMixGetAccountAccountBill(e)}privateMixGetAccountAccountBusinessBill(e){return this.privateMixGetAccountAccountBusinessBill(e)}privateMixGetAccountOpenCount(e){return this.privateMixGetAccountOpenCount(e)}privateMixGetOrderCurrent(e){return this.privateMixGetOrderCurrent(e)}privateMixGetOrderHistory(e){return this.privateMixGetOrderHistory(e)}privateMixGetOrderDetail(e){return this.privateMixGetOrderDetail(e)}privateMixGetOrderFills(e){return this.privateMixGetOrderFills(e)}privateMixGetOrderHistoryProductType(e){return this.privateMixGetOrderHistoryProductType(e)}privateMixGetOrderAllFills(e){return this.privateMixGetOrderAllFills(e)}privateMixGetPlanCurrentPlan(e){return this.privateMixGetPlanCurrentPlan(e)}privateMixGetPlanHistoryPlan(e){return this.privateMixGetPlanHistoryPlan(e)}privateMixGetPositionSinglePosition(e){return this.privateMixGetPositionSinglePosition(e)}privateMixGetPositionAllPosition(e){return this.privateMixGetPositionAllPosition(e)}privateMixGetTraceCurrentTrack(e){return this.privateMixGetTraceCurrentTrack(e)}privateMixGetTraceFollowerOrder(e){return this.privateMixGetTraceFollowerOrder(e)}privateMixGetTraceHistoryTrack(e){return this.privateMixGetTraceHistoryTrack(e)}privateMixGetTraceSummary(e){return this.privateMixGetTraceSummary(e)}privateMixGetTraceProfitSettleTokenIdGroup(e){return this.privateMixGetTraceProfitSettleTokenIdGroup(e)}privateMixGetTraceProfitDateGroupList(e){return this.privateMixGetTraceProfitDateGroupList(e)}privateMixGetTradeProfitDateList(e){return this.privateMixGetTradeProfitDateList(e)}privateMixGetTraceWaitProfitDateList(e){return this.privateMixGetTraceWaitProfitDateList(e)}privateMixGetTraceTraderSymbols(e){return this.privateMixGetTraceTraderSymbols(e)}privateMixGetOrderMarginCoinCurrent(e){return this.privateMixGetOrderMarginCoinCurrent(e)}privateMixPostAccountSetLeverage(e){return this.privateMixPostAccountSetLeverage(e)}privateMixPostAccountSetMargin(e){return this.privateMixPostAccountSetMargin(e)}privateMixPostAccountSetMarginMode(e){return this.privateMixPostAccountSetMarginMode(e)}privateMixPostAccountSetPositionMode(e){return this.privateMixPostAccountSetPositionMode(e)}privateMixPostOrderPlaceOrder(e){return this.privateMixPostOrderPlaceOrder(e)}privateMixPostOrderBatchOrders(e){return this.privateMixPostOrderBatchOrders(e)}privateMixPostOrderCancelOrder(e){return this.privateMixPostOrderCancelOrder(e)}privateMixPostOrderCancelAllOrders(e){return this.privateMixPostOrderCancelAllOrders(e)}privateMixPostOrderCancelBatchOrders(e){return this.privateMixPostOrderCancelBatchOrders(e)}privateMixPostPlanPlacePlan(e){return this.privateMixPostPlanPlacePlan(e)}privateMixPostPlanModifyPlan(e){return this.privateMixPostPlanModifyPlan(e)}privateMixPostPlanModifyPlanPreset(e){return this.privateMixPostPlanModifyPlanPreset(e)}privateMixPostPlanPlaceTPSL(e){return this.privateMixPostPlanPlaceTPSL(e)}privateMixPostPlanPlaceTrailStop(e){return this.privateMixPostPlanPlaceTrailStop(e)}privateMixPostPlanPlacePositionsTPSL(e){return this.privateMixPostPlanPlacePositionsTPSL(e)}privateMixPostPlanModifyTPSLPlan(e){return this.privateMixPostPlanModifyTPSLPlan(e)}privateMixPostPlanCancelPlan(e){return this.privateMixPostPlanCancelPlan(e)}privateMixPostPlanCancelAllPlan(e){return this.privateMixPostPlanCancelAllPlan(e)}privateMixPostTraceCloseTrackOrder(e){return this.privateMixPostTraceCloseTrackOrder(e)}privateMixPostTraceSetUpCopySymbols(e){return this.privateMixPostTraceSetUpCopySymbols(e)}}},5823:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetTickerCurrency(e){return this.publicGetTickerCurrency(e)}publicGetTickerAll(e){return this.publicGetTickerAll(e)}publicGetTickerALLBTC(e){return this.publicGetTickerALLBTC(e)}publicGetTickerALLKRW(e){return this.publicGetTickerALLKRW(e)}publicGetOrderbookCurrency(e){return this.publicGetOrderbookCurrency(e)}publicGetOrderbookAll(e){return this.publicGetOrderbookAll(e)}publicGetTransactionHistoryCurrency(e){return this.publicGetTransactionHistoryCurrency(e)}publicGetTransactionHistoryAll(e){return this.publicGetTransactionHistoryAll(e)}publicGetCandlestickCurrencyInterval(e){return this.publicGetCandlestickCurrencyInterval(e)}privatePostInfoAccount(e){return this.privatePostInfoAccount(e)}privatePostInfoBalance(e){return this.privatePostInfoBalance(e)}privatePostInfoWalletAddress(e){return this.privatePostInfoWalletAddress(e)}privatePostInfoTicker(e){return this.privatePostInfoTicker(e)}privatePostInfoOrders(e){return this.privatePostInfoOrders(e)}privatePostInfoUserTransactions(e){return this.privatePostInfoUserTransactions(e)}privatePostInfoOrderDetail(e){return this.privatePostInfoOrderDetail(e)}privatePostTradePlace(e){return this.privatePostTradePlace(e)}privatePostTradeCancel(e){return this.privatePostTradeCancel(e)}privatePostTradeBtcWithdrawal(e){return this.privatePostTradeBtcWithdrawal(e)}privatePostTradeKrwDeposit(e){return this.privatePostTradeKrwDeposit(e)}privatePostTradeKrwWithdrawal(e){return this.privatePostTradeKrwWithdrawal(e)}privatePostTradeMarketBuy(e){return this.privatePostTradeMarketBuy(e)}privatePostTradeMarketSell(e){return this.privatePostTradeMarketSell(e)}}},4993:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetSystemTime(e){return this.publicGetSystemTime(e)}publicGetSystemService(e){return this.publicGetSystemService(e)}publicGetSpotV1Currencies(e){return this.publicGetSpotV1Currencies(e)}publicGetSpotV1Symbols(e){return this.publicGetSpotV1Symbols(e)}publicGetSpotV1SymbolsDetails(e){return this.publicGetSpotV1SymbolsDetails(e)}publicGetSpotV1Ticker(e){return this.publicGetSpotV1Ticker(e)}publicGetSpotV2Ticker(e){return this.publicGetSpotV2Ticker(e)}publicGetSpotV1Steps(e){return this.publicGetSpotV1Steps(e)}publicGetSpotV1SymbolsKline(e){return this.publicGetSpotV1SymbolsKline(e)}publicGetSpotV1SymbolsBook(e){return this.publicGetSpotV1SymbolsBook(e)}publicGetSpotV1SymbolsTrades(e){return this.publicGetSpotV1SymbolsTrades(e)}publicGetContractV1Tickers(e){return this.publicGetContractV1Tickers(e)}publicGetContractPublicDetails(e){return this.publicGetContractPublicDetails(e)}publicGetContractPublicDepth(e){return this.publicGetContractPublicDepth(e)}publicGetContractPublicOpenInterest(e){return this.publicGetContractPublicOpenInterest(e)}publicGetContractPublicFundingRate(e){return this.publicGetContractPublicFundingRate(e)}publicGetContractPublicKline(e){return this.publicGetContractPublicKline(e)}privateGetAccountSubAccountV1TransferList(e){return this.privateGetAccountSubAccountV1TransferList(e)}privateGetAccountSubAccountV1TransferHistory(e){return this.privateGetAccountSubAccountV1TransferHistory(e)}privateGetAccountSubAccountMainV1Wallet(e){return this.privateGetAccountSubAccountMainV1Wallet(e)}privateGetAccountSubAccountMainV1SubaccountList(e){return this.privateGetAccountSubAccountMainV1SubaccountList(e)}privateGetAccountV1Wallet(e){return this.privateGetAccountV1Wallet(e)}privateGetAccountV1Currencies(e){return this.privateGetAccountV1Currencies(e)}privateGetSpotV1Wallet(e){return this.privateGetSpotV1Wallet(e)}privateGetAccountV1DepositAddress(e){return this.privateGetAccountV1DepositAddress(e)}privateGetAccountV1WithdrawCharge(e){return this.privateGetAccountV1WithdrawCharge(e)}privateGetAccountV2DepositWithdrawHistory(e){return this.privateGetAccountV2DepositWithdrawHistory(e)}privateGetAccountV1DepositWithdrawDetail(e){return this.privateGetAccountV1DepositWithdrawDetail(e)}privateGetSpotV1OrderDetail(e){return this.privateGetSpotV1OrderDetail(e)}privateGetSpotV2Orders(e){return this.privateGetSpotV2Orders(e)}privateGetSpotV1Trades(e){return this.privateGetSpotV1Trades(e)}privateGetSpotV2Trades(e){return this.privateGetSpotV2Trades(e)}privateGetSpotV3Orders(e){return this.privateGetSpotV3Orders(e)}privateGetSpotV2OrderDetail(e){return this.privateGetSpotV2OrderDetail(e)}privateGetSpotV1MarginIsolatedBorrowRecord(e){return this.privateGetSpotV1MarginIsolatedBorrowRecord(e)}privateGetSpotV1MarginIsolatedRepayRecord(e){return this.privateGetSpotV1MarginIsolatedRepayRecord(e)}privateGetSpotV1MarginIsolatedPairs(e){return this.privateGetSpotV1MarginIsolatedPairs(e)}privateGetSpotV1MarginIsolatedAccount(e){return this.privateGetSpotV1MarginIsolatedAccount(e)}privateGetSpotV1TradeFee(e){return this.privateGetSpotV1TradeFee(e)}privateGetSpotV1UserFee(e){return this.privateGetSpotV1UserFee(e)}privateGetContractPrivateAssetsDetail(e){return this.privateGetContractPrivateAssetsDetail(e)}privateGetContractPrivateOrder(e){return this.privateGetContractPrivateOrder(e)}privateGetContractPrivateOrderHistory(e){return this.privateGetContractPrivateOrderHistory(e)}privateGetContractPrivatePosition(e){return this.privateGetContractPrivatePosition(e)}privatePostAccountSubAccountMainV1SubToMain(e){return this.privatePostAccountSubAccountMainV1SubToMain(e)}privatePostAccountSubAccountSubV1SubToMain(e){return this.privatePostAccountSubAccountSubV1SubToMain(e)}privatePostAccountSubAccountMainV1MainToSub(e){return this.privatePostAccountSubAccountMainV1MainToSub(e)}privatePostAccountSubAccountSubV1SubToSub(e){return this.privatePostAccountSubAccountSubV1SubToSub(e)}privatePostAccountSubAccountMainV1SubToSub(e){return this.privatePostAccountSubAccountMainV1SubToSub(e)}privatePostAccountV1WithdrawApply(e){return this.privatePostAccountV1WithdrawApply(e)}privatePostSpotV1SubmitOrder(e){return this.privatePostSpotV1SubmitOrder(e)}privatePostSpotV1BatchOrders(e){return this.privatePostSpotV1BatchOrders(e)}privatePostSpotV2CancelOrder(e){return this.privatePostSpotV2CancelOrder(e)}privatePostSpotV1CancelOrders(e){return this.privatePostSpotV1CancelOrders(e)}privatePostSpotV3CancelOrder(e){return this.privatePostSpotV3CancelOrder(e)}privatePostSpotV2BatchOrders(e){return this.privatePostSpotV2BatchOrders(e)}privatePostSpotV2SubmitOrder(e){return this.privatePostSpotV2SubmitOrder(e)}privatePostSpotV1MarginSubmitOrder(e){return this.privatePostSpotV1MarginSubmitOrder(e)}privatePostSpotV1MarginIsolatedBorrow(e){return this.privatePostSpotV1MarginIsolatedBorrow(e)}privatePostSpotV1MarginIsolatedRepay(e){return this.privatePostSpotV1MarginIsolatedRepay(e)}privatePostSpotV1MarginIsolatedTransfer(e){return this.privatePostSpotV1MarginIsolatedTransfer(e)}privatePostContractPrivateTrades(e){return this.privatePostContractPrivateTrades(e)}}},8154:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetAnnouncement(e){return this.publicGetAnnouncement(e)}publicGetAnnouncementUrgent(e){return this.publicGetAnnouncementUrgent(e)}publicGetFunding(e){return this.publicGetFunding(e)}publicGetInstrument(e){return this.publicGetInstrument(e)}publicGetInstrumentActive(e){return this.publicGetInstrumentActive(e)}publicGetInstrumentActiveAndIndices(e){return this.publicGetInstrumentActiveAndIndices(e)}publicGetInstrumentActiveIntervals(e){return this.publicGetInstrumentActiveIntervals(e)}publicGetInstrumentCompositeIndex(e){return this.publicGetInstrumentCompositeIndex(e)}publicGetInstrumentIndices(e){return this.publicGetInstrumentIndices(e)}publicGetInsurance(e){return this.publicGetInsurance(e)}publicGetLeaderboard(e){return this.publicGetLeaderboard(e)}publicGetLiquidation(e){return this.publicGetLiquidation(e)}publicGetOrderBook(e){return this.publicGetOrderBook(e)}publicGetOrderBookL2(e){return this.publicGetOrderBookL2(e)}publicGetQuote(e){return this.publicGetQuote(e)}publicGetQuoteBucketed(e){return this.publicGetQuoteBucketed(e)}publicGetSchema(e){return this.publicGetSchema(e)}publicGetSchemaWebsocketHelp(e){return this.publicGetSchemaWebsocketHelp(e)}publicGetSettlement(e){return this.publicGetSettlement(e)}publicGetStats(e){return this.publicGetStats(e)}publicGetStatsHistory(e){return this.publicGetStatsHistory(e)}publicGetTrade(e){return this.publicGetTrade(e)}publicGetTradeBucketed(e){return this.publicGetTradeBucketed(e)}publicGetWalletAssets(e){return this.publicGetWalletAssets(e)}publicGetWalletNetworks(e){return this.publicGetWalletNetworks(e)}privateGetApiKey(e){return this.privateGetApiKey(e)}privateGetChat(e){return this.privateGetChat(e)}privateGetChatChannels(e){return this.privateGetChatChannels(e)}privateGetChatConnected(e){return this.privateGetChatConnected(e)}privateGetExecution(e){return this.privateGetExecution(e)}privateGetExecutionTradeHistory(e){return this.privateGetExecutionTradeHistory(e)}privateGetNotification(e){return this.privateGetNotification(e)}privateGetOrder(e){return this.privateGetOrder(e)}privateGetPosition(e){return this.privateGetPosition(e)}privateGetUser(e){return this.privateGetUser(e)}privateGetUserAffiliateStatus(e){return this.privateGetUserAffiliateStatus(e)}privateGetUserCheckReferralCode(e){return this.privateGetUserCheckReferralCode(e)}privateGetUserCommission(e){return this.privateGetUserCommission(e)}privateGetUserDepositAddress(e){return this.privateGetUserDepositAddress(e)}privateGetUserExecutionHistory(e){return this.privateGetUserExecutionHistory(e)}privateGetUserMargin(e){return this.privateGetUserMargin(e)}privateGetUserMinWithdrawalFee(e){return this.privateGetUserMinWithdrawalFee(e)}privateGetUserWallet(e){return this.privateGetUserWallet(e)}privateGetUserWalletHistory(e){return this.privateGetUserWalletHistory(e)}privateGetUserWalletSummary(e){return this.privateGetUserWalletSummary(e)}privateGetWalletAssets(e){return this.privateGetWalletAssets(e)}privateGetWalletNetworks(e){return this.privateGetWalletNetworks(e)}privateGetUserEvent(e){return this.privateGetUserEvent(e)}privatePostApiKey(e){return this.privatePostApiKey(e)}privatePostApiKeyDisable(e){return this.privatePostApiKeyDisable(e)}privatePostApiKeyEnable(e){return this.privatePostApiKeyEnable(e)}privatePostChat(e){return this.privatePostChat(e)}privatePostOrder(e){return this.privatePostOrder(e)}privatePostOrderBulk(e){return this.privatePostOrderBulk(e)}privatePostOrderCancelAllAfter(e){return this.privatePostOrderCancelAllAfter(e)}privatePostOrderClosePosition(e){return this.privatePostOrderClosePosition(e)}privatePostPositionIsolate(e){return this.privatePostPositionIsolate(e)}privatePostPositionLeverage(e){return this.privatePostPositionLeverage(e)}privatePostPositionRiskLimit(e){return this.privatePostPositionRiskLimit(e)}privatePostPositionTransferMargin(e){return this.privatePostPositionTransferMargin(e)}privatePostUserCancelWithdrawal(e){return this.privatePostUserCancelWithdrawal(e)}privatePostUserConfirmEmail(e){return this.privatePostUserConfirmEmail(e)}privatePostUserConfirmEnableTFA(e){return this.privatePostUserConfirmEnableTFA(e)}privatePostUserConfirmWithdrawal(e){return this.privatePostUserConfirmWithdrawal(e)}privatePostUserDisableTFA(e){return this.privatePostUserDisableTFA(e)}privatePostUserLogout(e){return this.privatePostUserLogout(e)}privatePostUserLogoutAll(e){return this.privatePostUserLogoutAll(e)}privatePostUserPreferences(e){return this.privatePostUserPreferences(e)}privatePostUserRequestEnableTFA(e){return this.privatePostUserRequestEnableTFA(e)}privatePostUserRequestWithdrawal(e){return this.privatePostUserRequestWithdrawal(e)}privatePutOrder(e){return this.privatePutOrder(e)}privatePutOrderBulk(e){return this.privatePutOrderBulk(e)}privatePutUser(e){return this.privatePutUser(e)}privateDeleteApiKey(e){return this.privateDeleteApiKey(e)}privateDeleteOrder(e){return this.privateDeleteOrder(e)}privateDeleteOrderAll(e){return this.privateDeleteOrderAll(e)}}},3813:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetOrderBookPair(e){return this.publicGetOrderBookPair(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetTickersPair(e){return this.publicGetTickersPair(e)}publicGetTradesPair(e){return this.publicGetTradesPair(e)}publicGetProvisioningCurrencies(e){return this.publicGetProvisioningCurrencies(e)}publicGetProvisioningTradingPairs(e){return this.publicGetProvisioningTradingPairs(e)}publicGetProvisioningLimitationsAndFees(e){return this.publicGetProvisioningLimitationsAndFees(e)}publicGetTradingHistoryPair(e){return this.publicGetTradingHistoryPair(e)}privateGetAccountsBalance(e){return this.privateGetAccountsBalance(e)}privateGetOrdersHistory(e){return this.privateGetOrdersHistory(e)}privateGetOrdersAllPair(e){return this.privateGetOrdersAllPair(e)}privateGetOrdersTradesPair(e){return this.privateGetOrdersTradesPair(e)}privateGetOrdersPairOrderId(e){return this.privateGetOrdersPairOrderId(e)}privateGetWalletWithdrawCurrencySerial(e){return this.privateGetWalletWithdrawCurrencySerial(e)}privateGetWalletWithdrawCurrencyIdId(e){return this.privateGetWalletWithdrawCurrencyIdId(e)}privateGetWalletDepositHistoryCurrency(e){return this.privateGetWalletDepositHistoryCurrency(e)}privateGetWalletWithdrawHistoryCurrency(e){return this.privateGetWalletWithdrawHistoryCurrency(e)}privatePostOrdersPair(e){return this.privatePostOrdersPair(e)}privatePostOrdersBatch(e){return this.privatePostOrdersBatch(e)}privatePostWalletWithdrawCurrency(e){return this.privatePostWalletWithdrawCurrency(e)}privatePutOrders(e){return this.privatePutOrders(e)}privateDeleteOrdersPairId(e){return this.privateDeleteOrdersPairId(e)}privateDeleteOrdersAll(e){return this.privateDeleteOrdersAll(e)}privateDeleteOrdersPair(e){return this.privateDeleteOrdersPair(e)}}},8365:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetCandlesticksInstrumentCode(e){return this.publicGetCandlesticksInstrumentCode(e)}publicGetFees(e){return this.publicGetFees(e)}publicGetInstruments(e){return this.publicGetInstruments(e)}publicGetOrderBookInstrumentCode(e){return this.publicGetOrderBookInstrumentCode(e)}publicGetMarketTicker(e){return this.publicGetMarketTicker(e)}publicGetMarketTickerInstrumentCode(e){return this.publicGetMarketTickerInstrumentCode(e)}publicGetPriceTicksInstrumentCode(e){return this.publicGetPriceTicksInstrumentCode(e)}publicGetTime(e){return this.publicGetTime(e)}privateGetAccountBalances(e){return this.privateGetAccountBalances(e)}privateGetAccountDepositCryptoCurrencyCode(e){return this.privateGetAccountDepositCryptoCurrencyCode(e)}privateGetAccountDepositFiatEUR(e){return this.privateGetAccountDepositFiatEUR(e)}privateGetAccountDeposits(e){return this.privateGetAccountDeposits(e)}privateGetAccountDepositsBitpanda(e){return this.privateGetAccountDepositsBitpanda(e)}privateGetAccountWithdrawals(e){return this.privateGetAccountWithdrawals(e)}privateGetAccountWithdrawalsBitpanda(e){return this.privateGetAccountWithdrawalsBitpanda(e)}privateGetAccountFees(e){return this.privateGetAccountFees(e)}privateGetAccountOrders(e){return this.privateGetAccountOrders(e)}privateGetAccountOrdersOrderId(e){return this.privateGetAccountOrdersOrderId(e)}privateGetAccountOrdersOrderIdTrades(e){return this.privateGetAccountOrdersOrderIdTrades(e)}privateGetAccountTrades(e){return this.privateGetAccountTrades(e)}privateGetAccountTradesTradeId(e){return this.privateGetAccountTradesTradeId(e)}privateGetAccountTradingVolume(e){return this.privateGetAccountTradingVolume(e)}privatePostAccountDepositCrypto(e){return this.privatePostAccountDepositCrypto(e)}privatePostAccountWithdrawCrypto(e){return this.privatePostAccountWithdrawCrypto(e)}privatePostAccountWithdrawFiat(e){return this.privatePostAccountWithdrawFiat(e)}privatePostAccountFees(e){return this.privatePostAccountFees(e)}privatePostAccountOrders(e){return this.privatePostAccountOrders(e)}privateDeleteAccountOrders(e){return this.privateDeleteAccountOrders(e)}privateDeleteAccountOrdersOrderId(e){return this.privateDeleteAccountOrdersOrderId(e)}privateDeleteAccountOrdersClientClientId(e){return this.privateDeleteAccountOrdersClientClientId(e)}}},7317:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{klinePublicGetPublicJson(e){return this.klinePublicGetPublicJson(e)}klinePublicGetPublicCurrencyJson(e){return this.klinePublicGetPublicCurrencyJson(e)}v1PublicGetPing(e){return this.v1PublicGetPing(e)}v1PublicGetTime(e){return this.v1PublicGetTime(e)}v1PublicGetExchangeInfo(e){return this.v1PublicGetExchangeInfo(e)}v1PublicGetDepth(e){return this.v1PublicGetDepth(e)}v1PublicGetTrades(e){return this.v1PublicGetTrades(e)}v1PublicGetHistoricalTrades(e){return this.v1PublicGetHistoricalTrades(e)}v1PublicGetAggTrades(e){return this.v1PublicGetAggTrades(e)}v1PublicGetTicker24hr(e){return this.v1PublicGetTicker24hr(e)}v1PublicGetTickerPrice(e){return this.v1PublicGetTickerPrice(e)}v1PublicGetTickerBookTicker(e){return this.v1PublicGetTickerBookTicker(e)}v1PublicGetMarketKline(e){return this.v1PublicGetMarketKline(e)}v1PrivateGetOrder(e){return this.v1PrivateGetOrder(e)}v1PrivateGetOpenOrders(e){return this.v1PrivateGetOpenOrders(e)}v1PrivateGetAllOrders(e){return this.v1PrivateGetAllOrders(e)}v1PrivateGetAccount(e){return this.v1PrivateGetAccount(e)}v1PrivateGetMyTrades(e){return this.v1PrivateGetMyTrades(e)}v1PrivateGetEtfNetValueSymbol(e){return this.v1PrivateGetEtfNetValueSymbol(e)}v1PrivateGetWithdrawHistory(e){return this.v1PrivateGetWithdrawHistory(e)}v1PrivateGetDepositHistory(e){return this.v1PrivateGetDepositHistory(e)}v1PrivatePostOrder(e){return this.v1PrivatePostOrder(e)}v1PrivatePostWithdrawCommit(e){return this.v1PrivatePostWithdrawCommit(e)}v1PrivateDeleteOrder(e){return this.v1PrivateDeleteOrder(e)}v2PrivateGetMyTrades(e){return this.v2PrivateGetMyTrades(e)}openPrivatePostPoseidonApiV1ListenKey(e){return this.openPrivatePostPoseidonApiV1ListenKey(e)}openPrivatePutPoseidonApiV1ListenKeyListenKey(e){return this.openPrivatePutPoseidonApiV1ListenKeyListenKey(e)}openPrivateDeletePoseidonApiV1ListenKeyListenKey(e){return this.openPrivateDeletePoseidonApiV1ListenKeyListenKey(e)}}},9581:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetAvailableBooks(e){return this.publicGetAvailableBooks(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetOrderBook(e){return this.publicGetOrderBook(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetOhlc(e){return this.publicGetOhlc(e)}privateGetAccountStatus(e){return this.privateGetAccountStatus(e)}privateGetBalance(e){return this.privateGetBalance(e)}privateGetFees(e){return this.privateGetFees(e)}privateGetFundings(e){return this.privateGetFundings(e)}privateGetFundingsFid(e){return this.privateGetFundingsFid(e)}privateGetFundingDestination(e){return this.privateGetFundingDestination(e)}privateGetKycDocuments(e){return this.privateGetKycDocuments(e)}privateGetLedger(e){return this.privateGetLedger(e)}privateGetLedgerTrades(e){return this.privateGetLedgerTrades(e)}privateGetLedgerFees(e){return this.privateGetLedgerFees(e)}privateGetLedgerFundings(e){return this.privateGetLedgerFundings(e)}privateGetLedgerWithdrawals(e){return this.privateGetLedgerWithdrawals(e)}privateGetMxBankCodes(e){return this.privateGetMxBankCodes(e)}privateGetOpenOrders(e){return this.privateGetOpenOrders(e)}privateGetOrderTradesOid(e){return this.privateGetOrderTradesOid(e)}privateGetOrdersOid(e){return this.privateGetOrdersOid(e)}privateGetUserTrades(e){return this.privateGetUserTrades(e)}privateGetUserTradesTid(e){return this.privateGetUserTradesTid(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetWithdrawalsWid(e){return this.privateGetWithdrawalsWid(e)}privatePostBitcoinWithdrawal(e){return this.privatePostBitcoinWithdrawal(e)}privatePostDebitCardWithdrawal(e){return this.privatePostDebitCardWithdrawal(e)}privatePostEtherWithdrawal(e){return this.privatePostEtherWithdrawal(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostPhoneNumber(e){return this.privatePostPhoneNumber(e)}privatePostPhoneVerification(e){return this.privatePostPhoneVerification(e)}privatePostPhoneWithdrawal(e){return this.privatePostPhoneWithdrawal(e)}privatePostSpeiWithdrawal(e){return this.privatePostSpeiWithdrawal(e)}privatePostRippleWithdrawal(e){return this.privatePostRippleWithdrawal(e)}privatePostBcashWithdrawal(e){return this.privatePostBcashWithdrawal(e)}privatePostLitecoinWithdrawal(e){return this.privatePostLitecoinWithdrawal(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrdersOid(e){return this.privateDeleteOrdersOid(e)}privateDeleteOrdersAll(e){return this.privateDeleteOrdersAll(e)}}},1573:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetOhlcPair(e){return this.publicGetOhlcPair(e)}publicGetOrderBookPair(e){return this.publicGetOrderBookPair(e)}publicGetTickerHourPair(e){return this.publicGetTickerHourPair(e)}publicGetTickerPair(e){return this.publicGetTickerPair(e)}publicGetTransactionsPair(e){return this.publicGetTransactionsPair(e)}publicGetTradingPairsInfo(e){return this.publicGetTradingPairsInfo(e)}privatePostBalance(e){return this.privatePostBalance(e)}privatePostBalancePair(e){return this.privatePostBalancePair(e)}privatePostBchWithdrawal(e){return this.privatePostBchWithdrawal(e)}privatePostBchAddress(e){return this.privatePostBchAddress(e)}privatePostUserTransactions(e){return this.privatePostUserTransactions(e)}privatePostUserTransactionsPair(e){return this.privatePostUserTransactionsPair(e)}privatePostOpenOrdersAll(e){return this.privatePostOpenOrdersAll(e)}privatePostOpenOrdersPair(e){return this.privatePostOpenOrdersPair(e)}privatePostOrderStatus(e){return this.privatePostOrderStatus(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostCancelAllOrders(e){return this.privatePostCancelAllOrders(e)}privatePostCancelAllOrdersPair(e){return this.privatePostCancelAllOrdersPair(e)}privatePostBuyPair(e){return this.privatePostBuyPair(e)}privatePostBuyMarketPair(e){return this.privatePostBuyMarketPair(e)}privatePostBuyInstantPair(e){return this.privatePostBuyInstantPair(e)}privatePostSellPair(e){return this.privatePostSellPair(e)}privatePostSellMarketPair(e){return this.privatePostSellMarketPair(e)}privatePostSellInstantPair(e){return this.privatePostSellInstantPair(e)}privatePostTransferToMain(e){return this.privatePostTransferToMain(e)}privatePostTransferFromMain(e){return this.privatePostTransferFromMain(e)}privatePostWithdrawalRequests(e){return this.privatePostWithdrawalRequests(e)}privatePostWithdrawalOpen(e){return this.privatePostWithdrawalOpen(e)}privatePostWithdrawalStatus(e){return this.privatePostWithdrawalStatus(e)}privatePostWithdrawalCancel(e){return this.privatePostWithdrawalCancel(e)}privatePostLiquidationAddressNew(e){return this.privatePostLiquidationAddressNew(e)}privatePostLiquidationAddressInfo(e){return this.privatePostLiquidationAddressInfo(e)}privatePostBtcUnconfirmed(e){return this.privatePostBtcUnconfirmed(e)}privatePostWebsocketsToken(e){return this.privatePostWebsocketsToken(e)}privatePostBtcWithdrawal(e){return this.privatePostBtcWithdrawal(e)}privatePostBtcAddress(e){return this.privatePostBtcAddress(e)}privatePostRippleWithdrawal(e){return this.privatePostRippleWithdrawal(e)}privatePostRippleAddress(e){return this.privatePostRippleAddress(e)}privatePostLtcWithdrawal(e){return this.privatePostLtcWithdrawal(e)}privatePostLtcAddress(e){return this.privatePostLtcAddress(e)}privatePostEthWithdrawal(e){return this.privatePostEthWithdrawal(e)}privatePostEthAddress(e){return this.privatePostEthAddress(e)}privatePostXrpWithdrawal(e){return this.privatePostXrpWithdrawal(e)}privatePostXrpAddress(e){return this.privatePostXrpAddress(e)}privatePostXlmWithdrawal(e){return this.privatePostXlmWithdrawal(e)}privatePostXlmAddress(e){return this.privatePostXlmAddress(e)}privatePostPaxWithdrawal(e){return this.privatePostPaxWithdrawal(e)}privatePostPaxAddress(e){return this.privatePostPaxAddress(e)}privatePostLinkWithdrawal(e){return this.privatePostLinkWithdrawal(e)}privatePostLinkAddress(e){return this.privatePostLinkAddress(e)}privatePostUsdcWithdrawal(e){return this.privatePostUsdcWithdrawal(e)}privatePostUsdcAddress(e){return this.privatePostUsdcAddress(e)}privatePostOmgWithdrawal(e){return this.privatePostOmgWithdrawal(e)}privatePostOmgAddress(e){return this.privatePostOmgAddress(e)}privatePostDaiWithdrawal(e){return this.privatePostDaiWithdrawal(e)}privatePostDaiAddress(e){return this.privatePostDaiAddress(e)}privatePostKncWithdrawal(e){return this.privatePostKncWithdrawal(e)}privatePostKncAddress(e){return this.privatePostKncAddress(e)}privatePostMkrWithdrawal(e){return this.privatePostMkrWithdrawal(e)}privatePostMkrAddress(e){return this.privatePostMkrAddress(e)}privatePostZrxWithdrawal(e){return this.privatePostZrxWithdrawal(e)}privatePostZrxAddress(e){return this.privatePostZrxAddress(e)}privatePostGusdWithdrawal(e){return this.privatePostGusdWithdrawal(e)}privatePostGusdAddress(e){return this.privatePostGusdAddress(e)}privatePostAaveWithdrawal(e){return this.privatePostAaveWithdrawal(e)}privatePostAaveAddress(e){return this.privatePostAaveAddress(e)}privatePostBatWithdrawal(e){return this.privatePostBatWithdrawal(e)}privatePostBatAddress(e){return this.privatePostBatAddress(e)}privatePostUmaWithdrawal(e){return this.privatePostUmaWithdrawal(e)}privatePostUmaAddress(e){return this.privatePostUmaAddress(e)}privatePostSnxWithdrawal(e){return this.privatePostSnxWithdrawal(e)}privatePostSnxAddress(e){return this.privatePostSnxAddress(e)}privatePostUniWithdrawal(e){return this.privatePostUniWithdrawal(e)}privatePostUniAddress(e){return this.privatePostUniAddress(e)}privatePostYfiWithdrawal(e){return this.privatePostYfiWithdrawal(e)}privatePostYfiAddress(e){return this.privatePostYfiAddress(e)}privatePostAudioWithdrawal(e){return this.privatePostAudioWithdrawal(e)}privatePostAudioAddress(e){return this.privatePostAudioAddress(e)}privatePostCrvWithdrawal(e){return this.privatePostCrvWithdrawal(e)}privatePostCrvAddress(e){return this.privatePostCrvAddress(e)}privatePostAlgoWithdrawal(e){return this.privatePostAlgoWithdrawal(e)}privatePostAlgoAddress(e){return this.privatePostAlgoAddress(e)}privatePostCompWithdrawal(e){return this.privatePostCompWithdrawal(e)}privatePostCompAddress(e){return this.privatePostCompAddress(e)}privatePostGrtWithdrawal(e){return this.privatePostGrtWithdrawal(e)}privatePostGrtAddress(e){return this.privatePostGrtAddress(e)}privatePostUsdtWithdrawal(e){return this.privatePostUsdtWithdrawal(e)}privatePostUsdtAddress(e){return this.privatePostUsdtAddress(e)}privatePostEurtWithdrawal(e){return this.privatePostEurtWithdrawal(e)}privatePostEurtAddress(e){return this.privatePostEurtAddress(e)}privatePostMaticWithdrawal(e){return this.privatePostMaticWithdrawal(e)}privatePostMaticAddress(e){return this.privatePostMaticAddress(e)}privatePostSushiWithdrawal(e){return this.privatePostSushiWithdrawal(e)}privatePostSushiAddress(e){return this.privatePostSushiAddress(e)}privatePostChzWithdrawal(e){return this.privatePostChzWithdrawal(e)}privatePostChzAddress(e){return this.privatePostChzAddress(e)}privatePostEnjWithdrawal(e){return this.privatePostEnjWithdrawal(e)}privatePostEnjAddress(e){return this.privatePostEnjAddress(e)}privatePostAlphaWithdrawal(e){return this.privatePostAlphaWithdrawal(e)}privatePostAlphaAddress(e){return this.privatePostAlphaAddress(e)}privatePostFttWithdrawal(e){return this.privatePostFttWithdrawal(e)}privatePostFttAddress(e){return this.privatePostFttAddress(e)}privatePostStorjWithdrawal(e){return this.privatePostStorjWithdrawal(e)}privatePostStorjAddress(e){return this.privatePostStorjAddress(e)}privatePostAxsWithdrawal(e){return this.privatePostAxsWithdrawal(e)}privatePostAxsAddress(e){return this.privatePostAxsAddress(e)}privatePostSandWithdrawal(e){return this.privatePostSandWithdrawal(e)}privatePostSandAddress(e){return this.privatePostSandAddress(e)}privatePostHbarWithdrawal(e){return this.privatePostHbarWithdrawal(e)}privatePostHbarAddress(e){return this.privatePostHbarAddress(e)}privatePostRgtWithdrawal(e){return this.privatePostRgtWithdrawal(e)}privatePostRgtAddress(e){return this.privatePostRgtAddress(e)}privatePostFetWithdrawal(e){return this.privatePostFetWithdrawal(e)}privatePostFetAddress(e){return this.privatePostFetAddress(e)}privatePostSklWithdrawal(e){return this.privatePostSklWithdrawal(e)}privatePostSklAddress(e){return this.privatePostSklAddress(e)}privatePostCelWithdrawal(e){return this.privatePostCelWithdrawal(e)}privatePostCelAddress(e){return this.privatePostCelAddress(e)}privatePostSxpWithdrawal(e){return this.privatePostSxpWithdrawal(e)}privatePostSxpAddress(e){return this.privatePostSxpAddress(e)}privatePostAdaWithdrawal(e){return this.privatePostAdaWithdrawal(e)}privatePostAdaAddress(e){return this.privatePostAdaAddress(e)}privatePostSlpWithdrawal(e){return this.privatePostSlpWithdrawal(e)}privatePostSlpAddress(e){return this.privatePostSlpAddress(e)}privatePostFtmWithdrawal(e){return this.privatePostFtmWithdrawal(e)}privatePostFtmAddress(e){return this.privatePostFtmAddress(e)}privatePostPerpWithdrawal(e){return this.privatePostPerpWithdrawal(e)}privatePostPerpAddress(e){return this.privatePostPerpAddress(e)}privatePostDydxWithdrawal(e){return this.privatePostDydxWithdrawal(e)}privatePostDydxAddress(e){return this.privatePostDydxAddress(e)}privatePostGalaWithdrawal(e){return this.privatePostGalaWithdrawal(e)}privatePostGalaAddress(e){return this.privatePostGalaAddress(e)}privatePostShibWithdrawal(e){return this.privatePostShibWithdrawal(e)}privatePostShibAddress(e){return this.privatePostShibAddress(e)}privatePostAmpWithdrawal(e){return this.privatePostAmpWithdrawal(e)}privatePostAmpAddress(e){return this.privatePostAmpAddress(e)}privatePostSgbWithdrawal(e){return this.privatePostSgbWithdrawal(e)}privatePostSgbAddress(e){return this.privatePostSgbAddress(e)}privatePostAvaxWithdrawal(e){return this.privatePostAvaxWithdrawal(e)}privatePostAvaxAddress(e){return this.privatePostAvaxAddress(e)}privatePostWbtcWithdrawal(e){return this.privatePostWbtcWithdrawal(e)}privatePostWbtcAddress(e){return this.privatePostWbtcAddress(e)}privatePostCtsiWithdrawal(e){return this.privatePostCtsiWithdrawal(e)}privatePostCtsiAddress(e){return this.privatePostCtsiAddress(e)}privatePostCvxWithdrawal(e){return this.privatePostCvxWithdrawal(e)}privatePostCvxAddress(e){return this.privatePostCvxAddress(e)}privatePostImxWithdrawal(e){return this.privatePostImxWithdrawal(e)}privatePostImxAddress(e){return this.privatePostImxAddress(e)}privatePostNexoWithdrawal(e){return this.privatePostNexoWithdrawal(e)}privatePostNexoAddress(e){return this.privatePostNexoAddress(e)}privatePostUstWithdrawal(e){return this.privatePostUstWithdrawal(e)}privatePostUstAddress(e){return this.privatePostUstAddress(e)}privatePostAntWithdrawal(e){return this.privatePostAntWithdrawal(e)}privatePostAntAddress(e){return this.privatePostAntAddress(e)}privatePostGodsWithdrawal(e){return this.privatePostGodsWithdrawal(e)}privatePostGodsAddress(e){return this.privatePostGodsAddress(e)}privatePostRadWithdrawal(e){return this.privatePostRadWithdrawal(e)}privatePostRadAddress(e){return this.privatePostRadAddress(e)}privatePostBandWithdrawal(e){return this.privatePostBandWithdrawal(e)}privatePostBandAddress(e){return this.privatePostBandAddress(e)}privatePostInjWithdrawal(e){return this.privatePostInjWithdrawal(e)}privatePostInjAddress(e){return this.privatePostInjAddress(e)}privatePostRlyWithdrawal(e){return this.privatePostRlyWithdrawal(e)}privatePostRlyAddress(e){return this.privatePostRlyAddress(e)}privatePostRndrWithdrawal(e){return this.privatePostRndrWithdrawal(e)}privatePostRndrAddress(e){return this.privatePostRndrAddress(e)}privatePostVegaWithdrawal(e){return this.privatePostVegaWithdrawal(e)}privatePostVegaAddress(e){return this.privatePostVegaAddress(e)}privatePost1inchWithdrawal(e){return this.privatePost1inchWithdrawal(e)}privatePost1inchAddress(e){return this.privatePost1inchAddress(e)}privatePostEnsWithdrawal(e){return this.privatePostEnsWithdrawal(e)}privatePostEnsAddress(e){return this.privatePostEnsAddress(e)}privatePostManaWithdrawal(e){return this.privatePostManaWithdrawal(e)}privatePostManaAddress(e){return this.privatePostManaAddress(e)}privatePostLrcWithdrawal(e){return this.privatePostLrcWithdrawal(e)}privatePostLrcAddress(e){return this.privatePostLrcAddress(e)}privatePostApeWithdrawal(e){return this.privatePostApeWithdrawal(e)}privatePostApeAddress(e){return this.privatePostApeAddress(e)}privatePostMplWithdrawal(e){return this.privatePostMplWithdrawal(e)}privatePostMplAddress(e){return this.privatePostMplAddress(e)}privatePostEurocWithdrawal(e){return this.privatePostEurocWithdrawal(e)}privatePostEurocAddress(e){return this.privatePostEurocAddress(e)}privatePostSolWithdrawal(e){return this.privatePostSolWithdrawal(e)}privatePostSolAddress(e){return this.privatePostSolAddress(e)}privatePostDotWithdrawal(e){return this.privatePostDotWithdrawal(e)}privatePostDotAddress(e){return this.privatePostDotAddress(e)}privatePostNearWithdrawal(e){return this.privatePostNearWithdrawal(e)}privatePostNearAddress(e){return this.privatePostNearAddress(e)}privatePostDogeWithdrawal(e){return this.privatePostDogeWithdrawal(e)}privatePostDogeAddress(e){return this.privatePostDogeAddress(e)}privatePostFlrWithdrawal(e){return this.privatePostFlrWithdrawal(e)}privatePostFlrAddress(e){return this.privatePostFlrAddress(e)}}},3768:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetTicker(e){return this.publicGetTicker(e)}publicGetTickerHour(e){return this.publicGetTickerHour(e)}publicGetOrderBook(e){return this.publicGetOrderBook(e)}publicGetTransactions(e){return this.publicGetTransactions(e)}publicGetEurUsd(e){return this.publicGetEurUsd(e)}privatePostBalance(e){return this.privatePostBalance(e)}privatePostUserTransactions(e){return this.privatePostUserTransactions(e)}privatePostOpenOrders(e){return this.privatePostOpenOrders(e)}privatePostOrderStatus(e){return this.privatePostOrderStatus(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostCancelAllOrders(e){return this.privatePostCancelAllOrders(e)}privatePostBuy(e){return this.privatePostBuy(e)}privatePostSell(e){return this.privatePostSell(e)}privatePostBitcoinDepositAddress(e){return this.privatePostBitcoinDepositAddress(e)}privatePostUnconfirmedBtc(e){return this.privatePostUnconfirmedBtc(e)}privatePostRippleWithdrawal(e){return this.privatePostRippleWithdrawal(e)}privatePostRippleAddress(e){return this.privatePostRippleAddress(e)}privatePostWithdrawalRequests(e){return this.privatePostWithdrawalRequests(e)}privatePostBitcoinWithdrawal(e){return this.privatePostBitcoinWithdrawal(e)}}},5414:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetPing(e){return this.publicGetPing(e)}publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetCurrenciesSymbol(e){return this.publicGetCurrenciesSymbol(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetMarketsTickers(e){return this.publicGetMarketsTickers(e)}publicGetMarketsSummaries(e){return this.publicGetMarketsSummaries(e)}publicGetMarketsMarketSymbol(e){return this.publicGetMarketsMarketSymbol(e)}publicGetMarketsMarketSymbolSummary(e){return this.publicGetMarketsMarketSymbolSummary(e)}publicGetMarketsMarketSymbolOrderbook(e){return this.publicGetMarketsMarketSymbolOrderbook(e)}publicGetMarketsMarketSymbolTrades(e){return this.publicGetMarketsMarketSymbolTrades(e)}publicGetMarketsMarketSymbolTicker(e){return this.publicGetMarketsMarketSymbolTicker(e)}publicGetMarketsMarketSymbolCandlesCandleIntervalRecent(e){return this.publicGetMarketsMarketSymbolCandlesCandleIntervalRecent(e)}publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonthDay(e){return this.publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonthDay(e)}publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonth(e){return this.publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonth(e)}publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYear(e){return this.publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYear(e)}privateGetAccount(e){return this.privateGetAccount(e)}privateGetAccountFeesFiat(e){return this.privateGetAccountFeesFiat(e)}privateGetAccountFeesFiatCurrencySymbol(e){return this.privateGetAccountFeesFiatCurrencySymbol(e)}privateGetAccountFeesTrading(e){return this.privateGetAccountFeesTrading(e)}privateGetAccountFeesTradingMarketSymbol(e){return this.privateGetAccountFeesTradingMarketSymbol(e)}privateGetAccountVolume(e){return this.privateGetAccountVolume(e)}privateGetAccountPermissionsMarkets(e){return this.privateGetAccountPermissionsMarkets(e)}privateGetAccountPermissionsMarketsMarketSymbol(e){return this.privateGetAccountPermissionsMarketsMarketSymbol(e)}privateGetAccountPermissionsCurrencies(e){return this.privateGetAccountPermissionsCurrencies(e)}privateGetAccountPermissionsCurrenciesCurrencySymbol(e){return this.privateGetAccountPermissionsCurrenciesCurrencySymbol(e)}privateGetAddresses(e){return this.privateGetAddresses(e)}privateGetAddressesCurrencySymbol(e){return this.privateGetAddressesCurrencySymbol(e)}privateGetBalances(e){return this.privateGetBalances(e)}privateGetBalancesCurrencySymbol(e){return this.privateGetBalancesCurrencySymbol(e)}privateGetDepositsOpen(e){return this.privateGetDepositsOpen(e)}privateGetDepositsClosed(e){return this.privateGetDepositsClosed(e)}privateGetDepositsByTxIdTxId(e){return this.privateGetDepositsByTxIdTxId(e)}privateGetDepositsDepositId(e){return this.privateGetDepositsDepositId(e)}privateGetExecutions(e){return this.privateGetExecutions(e)}privateGetExecutionsLastId(e){return this.privateGetExecutionsLastId(e)}privateGetExecutionsExecutionId(e){return this.privateGetExecutionsExecutionId(e)}privateGetOrdersClosed(e){return this.privateGetOrdersClosed(e)}privateGetOrdersOpen(e){return this.privateGetOrdersOpen(e)}privateGetOrdersOrderId(e){return this.privateGetOrdersOrderId(e)}privateGetOrdersOrderIdExecutions(e){return this.privateGetOrdersOrderIdExecutions(e)}privateGetPing(e){return this.privateGetPing(e)}privateGetSubaccountsSubaccountId(e){return this.privateGetSubaccountsSubaccountId(e)}privateGetSubaccounts(e){return this.privateGetSubaccounts(e)}privateGetSubaccountsWithdrawalsOpen(e){return this.privateGetSubaccountsWithdrawalsOpen(e)}privateGetSubaccountsWithdrawalsClosed(e){return this.privateGetSubaccountsWithdrawalsClosed(e)}privateGetSubaccountsDepositsOpen(e){return this.privateGetSubaccountsDepositsOpen(e)}privateGetSubaccountsDepositsClosed(e){return this.privateGetSubaccountsDepositsClosed(e)}privateGetWithdrawalsOpen(e){return this.privateGetWithdrawalsOpen(e)}privateGetWithdrawalsClosed(e){return this.privateGetWithdrawalsClosed(e)}privateGetWithdrawalsByTxIdTxId(e){return this.privateGetWithdrawalsByTxIdTxId(e)}privateGetWithdrawalsWithdrawalId(e){return this.privateGetWithdrawalsWithdrawalId(e)}privateGetWithdrawalsAllowedAddresses(e){return this.privateGetWithdrawalsAllowedAddresses(e)}privateGetConditionalOrdersConditionalOrderId(e){return this.privateGetConditionalOrdersConditionalOrderId(e)}privateGetConditionalOrdersClosed(e){return this.privateGetConditionalOrdersClosed(e)}privateGetConditionalOrdersOpen(e){return this.privateGetConditionalOrdersOpen(e)}privateGetTransfersSent(e){return this.privateGetTransfersSent(e)}privateGetTransfersReceived(e){return this.privateGetTransfersReceived(e)}privateGetTransfersTransferId(e){return this.privateGetTransfersTransferId(e)}privateGetFundsTransferMethodsFundsTransferMethodId(e){return this.privateGetFundsTransferMethodsFundsTransferMethodId(e)}privatePostAddresses(e){return this.privatePostAddresses(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostSubaccounts(e){return this.privatePostSubaccounts(e)}privatePostWithdrawals(e){return this.privatePostWithdrawals(e)}privatePostConditionalOrders(e){return this.privatePostConditionalOrders(e)}privatePostTransfers(e){return this.privatePostTransfers(e)}privatePostBatch(e){return this.privatePostBatch(e)}privateDeleteOrdersOpen(e){return this.privateDeleteOrdersOpen(e)}privateDeleteOrdersOrderId(e){return this.privateDeleteOrdersOrderId(e)}privateDeleteWithdrawalsWithdrawalId(e){return this.privateDeleteWithdrawalsWithdrawalId(e)}privateDeleteConditionalOrdersConditionalOrderId(e){return this.privateDeleteConditionalOrdersConditionalOrderId(e)}signalrGetNegotiate(e){return this.signalrGetNegotiate(e)}signalrGetStart(e){return this.signalrGetStart(e)}}},15:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetTime(e){return this.publicGetTime(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetAssets(e){return this.publicGetAssets(e)}publicGetMarketBook(e){return this.publicGetMarketBook(e)}publicGetMarketTrades(e){return this.publicGetMarketTrades(e)}publicGetMarketCandles(e){return this.publicGetMarketCandles(e)}publicGetTickerPrice(e){return this.publicGetTickerPrice(e)}publicGetTickerBook(e){return this.publicGetTickerBook(e)}publicGetTicker24h(e){return this.publicGetTicker24h(e)}privateGetAccount(e){return this.privateGetAccount(e)}privateGetOrder(e){return this.privateGetOrder(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersOpen(e){return this.privateGetOrdersOpen(e)}privateGetTrades(e){return this.privateGetTrades(e)}privateGetBalance(e){return this.privateGetBalance(e)}privateGetDeposit(e){return this.privateGetDeposit(e)}privateGetDepositHistory(e){return this.privateGetDepositHistory(e)}privateGetWithdrawalHistory(e){return this.privateGetWithdrawalHistory(e)}privatePostOrder(e){return this.privatePostOrder(e)}privatePostWithdrawal(e){return this.privatePostWithdrawal(e)}privatePutOrder(e){return this.privatePutOrder(e)}privateDeleteOrder(e){return this.privateDeleteOrder(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}}},5569:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicSpotGetCommonSymbols(e){return this.publicSpotGetCommonSymbols(e)}publicSpotGetCommonCurrencys(e){return this.publicSpotGetCommonCurrencys(e)}publicSpotGetCommonTimestamp(e){return this.publicSpotGetCommonTimestamp(e)}publicSpotGetQKline(e){return this.publicSpotGetQKline(e)}publicSpotGetQTickers(e){return this.publicSpotGetQTickers(e)}publicSpotGetQTickerPrice(e){return this.publicSpotGetQTickerPrice(e)}publicSpotGetQDepth(e){return this.publicSpotGetQDepth(e)}publicSpotGetQDeals(e){return this.publicSpotGetQDeals(e)}publicSwapGetMarketCandle(e){return this.publicSwapGetMarketCandle(e)}publicSwapGetMarketDeals(e){return this.publicSwapGetMarketDeals(e)}publicSwapGetMarketDepth(e){return this.publicSwapGetMarketDepth(e)}publicSwapGetMarketFundingRate(e){return this.publicSwapGetMarketFundingRate(e)}publicSwapGetMarketIndex(e){return this.publicSwapGetMarketIndex(e)}publicSwapGetMarketRiskLimit(e){return this.publicSwapGetMarketRiskLimit(e)}publicSwapGetMarketSymbols(e){return this.publicSwapGetMarketSymbols(e)}publicSwapGetMarketTickerPrice(e){return this.publicSwapGetMarketTickerPrice(e)}publicSwapGetMarketTickers(e){return this.publicSwapGetMarketTickers(e)}publicSwapGetServerPing(e){return this.publicSwapGetServerPing(e)}privateSpotGetUApiInfo(e){return this.privateSpotGetUApiInfo(e)}privateSpotGetUAccountBalance(e){return this.privateSpotGetUAccountBalance(e)}privateSpotGetUWalletAddress(e){return this.privateSpotGetUWalletAddress(e)}privateSpotGetUWalletDepositRecord(e){return this.privateSpotGetUWalletDepositRecord(e)}privateSpotGetUWalletWithdrawRecord(e){return this.privateSpotGetUWalletWithdrawRecord(e)}privateSpotGetUOrderOpenOrders(e){return this.privateSpotGetUOrderOpenOrders(e)}privateSpotGetUOrderOpenOrderDetail(e){return this.privateSpotGetUOrderOpenOrderDetail(e)}privateSpotGetUOrderHistoryOrders(e){return this.privateSpotGetUOrderHistoryOrders(e)}privateSpotPostUAccountTransfer(e){return this.privateSpotPostUAccountTransfer(e)}privateSpotPostUWalletWithdraw(e){return this.privateSpotPostUWalletWithdraw(e)}privateSpotPostUOrderCreate(e){return this.privateSpotPostUOrderCreate(e)}privateSpotPostUOrderCancel(e){return this.privateSpotPostUOrderCancel(e)}privateSpotPostUOrderBatchCreate(e){return this.privateSpotPostUOrderBatchCreate(e)}privateSpotPostUOrderBatchCancel(e){return this.privateSpotPostUOrderBatchCancel(e)}privateSwapGetAccountBalance(e){return this.privateSwapGetAccountBalance(e)}privateSwapGetAccountBalanceRecord(e){return this.privateSwapGetAccountBalanceRecord(e)}privateSwapGetAccountOrder(e){return this.privateSwapGetAccountOrder(e)}privateSwapGetAccountOrderForced(e){return this.privateSwapGetAccountOrderForced(e)}privateSwapGetAccountPosition(e){return this.privateSwapGetAccountPosition(e)}privateSwapGetEntrustFinished(e){return this.privateSwapGetEntrustFinished(e)}privateSwapGetEntrustUnFinish(e){return this.privateSwapGetEntrustUnFinish(e)}privateSwapGetOrderFinished(e){return this.privateSwapGetOrderFinished(e)}privateSwapGetOrderFinishedInfo(e){return this.privateSwapGetOrderFinishedInfo(e)}privateSwapGetOrderUnFinish(e){return this.privateSwapGetOrderUnFinish(e)}privateSwapGetPositionInfo(e){return this.privateSwapGetPositionInfo(e)}privateSwapPostAccountSetLeverage(e){return this.privateSwapPostAccountSetLeverage(e)}privateSwapPostEntrustAdd(e){return this.privateSwapPostEntrustAdd(e)}privateSwapPostEntrustCancel(e){return this.privateSwapPostEntrustCancel(e)}privateSwapPostOrderBatchCancel(e){return this.privateSwapPostOrderBatchCancel(e)}privateSwapPostOrderBatchOpen(e){return this.privateSwapPostOrderBatchOpen(e)}privateSwapPostOrderCancel(e){return this.privateSwapPostOrderCancel(e)}privateSwapPostOrderClose(e){return this.privateSwapPostOrderClose(e)}privateSwapPostOrderCloseAll(e){return this.privateSwapPostOrderCloseAll(e)}privateSwapPostOrderOpen(e){return this.privateSwapPostOrderOpen(e)}privateSwapPostPositionSetSpSl(e){return this.privateSwapPostPositionSetSpSl(e)}privateSwapPostPositionUpdate(e){return this.privateSwapPostPositionUpdate(e)}}},858:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarketTicker(e){return this.publicGetMarketTicker(e)}publicGetMarketOrderbook(e){return this.publicGetMarketOrderbook(e)}publicGetMarketTrades(e){return this.publicGetMarketTrades(e)}privatePostMarketMoneyDepthFull(e){return this.privatePostMarketMoneyDepthFull(e)}privatePostMarketMoneyOrderAdd(e){return this.privatePostMarketMoneyOrderAdd(e)}privatePostMarketMoneyOrderCancel(e){return this.privatePostMarketMoneyOrderCancel(e)}privatePostMarketMoneyOrderResult(e){return this.privatePostMarketMoneyOrderResult(e)}privatePostMarketMoneyOrders(e){return this.privatePostMarketMoneyOrders(e)}privatePostMarketMoneyOrdersHistory(e){return this.privatePostMarketMoneyOrdersHistory(e)}privatePostMarketMoneyTradesFetch(e){return this.privatePostMarketMoneyTradesFetch(e)}privatePostGENMKTMoneyInfo(e){return this.privatePostGENMKTMoneyInfo(e)}privatePostGENMKTMoneyDepositAddress(e){return this.privatePostGENMKTMoneyDepositAddress(e)}privatePostGENMKTMoneyNewDepositAddress(e){return this.privatePostGENMKTMoneyNewDepositAddress(e)}privatePostGENMKTMoneyWalletHistory(e){return this.privatePostGENMKTMoneyWalletHistory(e)}privatePostGENMKTMoneyWithdraw(e){return this.privatePostGENMKTMoneyWithdraw(e)}}},3617:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetTickers(e){return this.publicGetTickers(e)}publicGetTickersSymbol(e){return this.publicGetTickersSymbol(e)}publicGetSymbols(e){return this.publicGetSymbols(e)}publicGetSymbolsSymbol(e){return this.publicGetSymbolsSymbol(e)}publicGetL2Symbol(e){return this.publicGetL2Symbol(e)}publicGetL3Symbol(e){return this.publicGetL3Symbol(e)}privateGetFees(e){return this.privateGetFees(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersOrderId(e){return this.privateGetOrdersOrderId(e)}privateGetTrades(e){return this.privateGetTrades(e)}privateGetFills(e){return this.privateGetFills(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetDepositsDepositId(e){return this.privateGetDepositsDepositId(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetAccountsAccountCurrency(e){return this.privateGetAccountsAccountCurrency(e)}privateGetWhitelist(e){return this.privateGetWhitelist(e)}privateGetWhitelistCurrency(e){return this.privateGetWhitelistCurrency(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetWithdrawalsWithdrawalId(e){return this.privateGetWithdrawalsWithdrawalId(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostDepositsCurrency(e){return this.privatePostDepositsCurrency(e)}privatePostWithdrawals(e){return this.privatePostWithdrawals(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrdersOrderId(e){return this.privateDeleteOrdersOrderId(e)}}},5489:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetPairs(e){return this.publicGetPairs(e)}publicGetOrderbookPairName(e){return this.publicGetOrderbookPairName(e)}publicGetExchanges(e){return this.publicGetExchanges(e)}publicGetChartsPairTypeChart(e){return this.publicGetChartsPairTypeChart(e)}publicGetTicker(e){return this.publicGetTicker(e)}privateGetWallets(e){return this.privateGetWallets(e)}privateGetOrdersOwn(e){return this.privateGetOrdersOwn(e)}privateGetOrderId(e){return this.privateGetOrderId(e)}privateGetExchangesOwn(e){return this.privateGetExchangesOwn(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetWithdraws(e){return this.privateGetWithdraws(e)}privatePostOrder(e){return this.privatePostOrder(e)}privatePostOrderCancel(e){return this.privatePostOrderCancel(e)}}},6851:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetDepth(e){return this.publicGetDepth(e)}publicGetOrders(e){return this.publicGetOrders(e)}publicGetTicker(e){return this.publicGetTicker(e)}privatePostBalance(e){return this.privatePostBalance(e)}privatePostTradeAdd(e){return this.privatePostTradeAdd(e)}privatePostTradeCancel(e){return this.privatePostTradeCancel(e)}privatePostTradeList(e){return this.privatePostTradeList(e)}privatePostTradeView(e){return this.privatePostTradeView(e)}privatePostWallet(e){return this.privatePostWallet(e)}}},8256:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetGetLastTradesByCurrency(e){return this.publicGetGetLastTradesByCurrency(e)}publicGetGetLastTradesByInstrument(e){return this.publicGetGetLastTradesByInstrument(e)}publicGetGetOrderBook(e){return this.publicGetGetOrderBook(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetGetInstruments(e){return this.publicGetGetInstruments(e)}publicGetGetTradingviewChartData(e){return this.publicGetGetTradingviewChartData(e)}publicGetCmcSpotSummary(e){return this.publicGetCmcSpotSummary(e)}publicGetCmcSpotTicker(e){return this.publicGetCmcSpotTicker(e)}publicGetCmcSpotOrderbook(e){return this.publicGetCmcSpotOrderbook(e)}publicGetCmcMarketTrades(e){return this.publicGetCmcMarketTrades(e)}publicGetCmcContracts(e){return this.publicGetCmcContracts(e)}publicGetCmcContractOrderbook(e){return this.publicGetCmcContractOrderbook(e)}publicGetCoinGeckoSpotPairs(e){return this.publicGetCoinGeckoSpotPairs(e)}publicGetCoinGeckoSpotTicker(e){return this.publicGetCoinGeckoSpotTicker(e)}publicGetCoinGeckoSpotOrderbook(e){return this.publicGetCoinGeckoSpotOrderbook(e)}publicGetCoinGeckoMarketTrades(e){return this.publicGetCoinGeckoMarketTrades(e)}publicGetCoinGeckoContracts(e){return this.publicGetCoinGeckoContracts(e)}publicGetCoinGeckoContractOrderbook(e){return this.publicGetCoinGeckoContractOrderbook(e)}publicGetGetPerpetualLeverageBracket(e){return this.publicGetGetPerpetualLeverageBracket(e)}publicGetGetPerpetualLeverageBracketAll(e){return this.publicGetGetPerpetualLeverageBracketAll(e)}publicPostAuth(e){return this.publicPostAuth(e)}privateGetGetDepositRecord(e){return this.privateGetGetDepositRecord(e)}privateGetGetWithdrawRecord(e){return this.privateGetGetWithdrawRecord(e)}privateGetGetPosition(e){return this.privateGetGetPosition(e)}privateGetGetPositions(e){return this.privateGetGetPositions(e)}privateGetGetOpenOrdersByCurrency(e){return this.privateGetGetOpenOrdersByCurrency(e)}privateGetGetOpenOrdersByInstrument(e){return this.privateGetGetOpenOrdersByInstrument(e)}privateGetGetOrderHistoryByCurrency(e){return this.privateGetGetOrderHistoryByCurrency(e)}privateGetGetOrderHistoryByInstrument(e){return this.privateGetGetOrderHistoryByInstrument(e)}privateGetGetOrderState(e){return this.privateGetGetOrderState(e)}privateGetGetUserTradesByCurrency(e){return this.privateGetGetUserTradesByCurrency(e)}privateGetGetUserTradesByInstrument(e){return this.privateGetGetUserTradesByInstrument(e)}privateGetGetUserTradesByOrder(e){return this.privateGetGetUserTradesByOrder(e)}privateGetGetPerpetualUserConfig(e){return this.privateGetGetPerpetualUserConfig(e)}privatePostLogout(e){return this.privatePostLogout(e)}privatePostGetAssetsInfo(e){return this.privatePostGetAssetsInfo(e)}privatePostAddWithdrawAddress(e){return this.privatePostAddWithdrawAddress(e)}privatePostBuy(e){return this.privatePostBuy(e)}privatePostSell(e){return this.privatePostSell(e)}privatePostCancel(e){return this.privatePostCancel(e)}privatePostCancelAllByCurrency(e){return this.privatePostCancelAllByCurrency(e)}privatePostCancelAllByInstrument(e){return this.privatePostCancelAllByInstrument(e)}privatePostClosePosition(e){return this.privatePostClosePosition(e)}privatePostAdjustPerpetualLeverage(e){return this.privatePostAdjustPerpetualLeverage(e)}privatePostAdjustPerpetualMarginType(e){return this.privatePostAdjustPerpetualMarginType(e)}privatePostSubmitTransfer(e){return this.privatePostSubmitTransfer(e)}}},806:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetMarketsMarketIdTicker(e){return this.publicGetMarketsMarketIdTicker(e)}publicGetMarketsMarketIdTrades(e){return this.publicGetMarketsMarketIdTrades(e)}publicGetMarketsMarketIdOrderbook(e){return this.publicGetMarketsMarketIdOrderbook(e)}publicGetMarketsMarketIdCandles(e){return this.publicGetMarketsMarketIdCandles(e)}publicGetMarketsTickers(e){return this.publicGetMarketsTickers(e)}publicGetMarketsOrderbooks(e){return this.publicGetMarketsOrderbooks(e)}publicGetTime(e){return this.publicGetTime(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersId(e){return this.privateGetOrdersId(e)}privateGetBatchordersIds(e){return this.privateGetBatchordersIds(e)}privateGetTrades(e){return this.privateGetTrades(e)}privateGetTradesId(e){return this.privateGetTradesId(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetWithdrawalsId(e){return this.privateGetWithdrawalsId(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetDepositsId(e){return this.privateGetDepositsId(e)}privateGetTransfers(e){return this.privateGetTransfers(e)}privateGetTransfersId(e){return this.privateGetTransfersId(e)}privateGetAddresses(e){return this.privateGetAddresses(e)}privateGetWithdrawalFees(e){return this.privateGetWithdrawalFees(e)}privateGetAssets(e){return this.privateGetAssets(e)}privateGetAccountsMeTradingFees(e){return this.privateGetAccountsMeTradingFees(e)}privateGetAccountsMeWithdrawalLimits(e){return this.privateGetAccountsMeWithdrawalLimits(e)}privateGetAccountsMeBalances(e){return this.privateGetAccountsMeBalances(e)}privateGetAccountsMeTransactions(e){return this.privateGetAccountsMeTransactions(e)}privateGetReportsId(e){return this.privateGetReportsId(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostBatchorders(e){return this.privatePostBatchorders(e)}privatePostWithdrawals(e){return this.privatePostWithdrawals(e)}privatePostReports(e){return this.privatePostReports(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrdersId(e){return this.privateDeleteOrdersId(e)}privateDeleteBatchordersIds(e){return this.privateDeleteBatchordersIds(e)}privatePutOrdersId(e){return this.privatePutOrdersId(e)}}},2003:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetDealsSymbol(e){return this.publicGetDealsSymbol(e)}publicGetTradesSellSymbol(e){return this.publicGetTradesSellSymbol(e)}publicGetTradesBuySymbol(e){return this.publicGetTradesBuySymbol(e)}publicGetJapanStatHighSymbol(e){return this.publicGetJapanStatHighSymbol(e)}privatePostAuth(e){return this.privatePostAuth(e)}privatePostAskSymbol(e){return this.privatePostAskSymbol(e)}privatePostBalance(e){return this.privatePostBalance(e)}privatePostBidSymbol(e){return this.privatePostBidSymbol(e)}privatePostBuySymbol(e){return this.privatePostBuySymbol(e)}privatePostMyOrdersSymbol(e){return this.privatePostMyOrdersSymbol(e)}privatePostOrderStatusId(e){return this.privatePostOrderStatusId(e)}privatePostRemoveOrderId(e){return this.privatePostRemoveOrderId(e)}privatePostSellSymbol(e){return this.privatePostSellSymbol(e)}}},1698:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetOrderbook(e){return this.publicGetOrderbook(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetServerExchangeinfo(e){return this.publicGetServerExchangeinfo(e)}privateGetUsersBalances(e){return this.privateGetUsersBalances(e)}privateGetOpenOrders(e){return this.privateGetOpenOrders(e)}privateGetAllOrders(e){return this.privateGetAllOrders(e)}privateGetUsersTransactionsTrade(e){return this.privateGetUsersTransactionsTrade(e)}privatePostOrder(e){return this.privatePostOrder(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privateDeleteOrder(e){return this.privateDeleteOrder(e)}graphGetOhlcs(e){return this.graphGetOhlcs(e)}graphGetKlinesHistory(e){return this.graphGetKlinesHistory(e)}}},5740:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetPairs(e){return this.publicGetPairs(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetMarketsMarket(e){return this.publicGetMarketsMarket(e)}publicGetMarketsMarketTicker(e){return this.publicGetMarketsMarketTicker(e)}publicGetMarketsMarketVolume(e){return this.publicGetMarketsMarketVolume(e)}publicGetMarketsMarketOrderBook(e){return this.publicGetMarketsMarketOrderBook(e)}publicGetMarketsMarketTrades(e){return this.publicGetMarketsMarketTrades(e)}publicGetCurrenciesCurrencyFeesDeposit(e){return this.publicGetCurrenciesCurrencyFeesDeposit(e)}publicGetCurrenciesCurrencyFeesWithdrawal(e){return this.publicGetCurrenciesCurrencyFeesWithdrawal(e)}publicGetTvHistory(e){return this.publicGetTvHistory(e)}publicPostMarketsMarketQuotations(e){return this.publicPostMarketsMarketQuotations(e)}privateGetBalances(e){return this.privateGetBalances(e)}privateGetBalancesCurrency(e){return this.privateGetBalancesCurrency(e)}privateGetCurrenciesCurrencyBalances(e){return this.privateGetCurrenciesCurrencyBalances(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersId(e){return this.privateGetOrdersId(e)}privateGetMarketsMarketOrders(e){return this.privateGetMarketsMarketOrders(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetCurrenciesCurrencyDeposits(e){return this.privateGetCurrenciesCurrencyDeposits(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetCurrenciesCurrencyWithdrawals(e){return this.privateGetCurrenciesCurrencyWithdrawals(e)}privateGetCurrenciesCurrencyReceiveAddresses(e){return this.privateGetCurrenciesCurrencyReceiveAddresses(e)}privateGetCurrenciesCurrencyReceiveAddressesId(e){return this.privateGetCurrenciesCurrencyReceiveAddressesId(e)}privatePostMarketsMarketOrders(e){return this.privatePostMarketsMarketOrders(e)}privatePostCurrenciesCurrencyDeposits(e){return this.privatePostCurrenciesCurrencyDeposits(e)}privatePostCurrenciesCurrencyWithdrawals(e){return this.privatePostCurrenciesCurrencyWithdrawals(e)}privatePostCurrenciesCurrencySimulatedWithdrawals(e){return this.privatePostCurrenciesCurrencySimulatedWithdrawals(e)}privatePostCurrenciesCurrencyReceiveAddresses(e){return this.privatePostCurrenciesCurrencyReceiveAddresses(e)}privatePutOrdersId(e){return this.privatePutOrdersId(e)}}},2090:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetV2PublicOrderBookL2(e){return this.publicGetV2PublicOrderBookL2(e)}publicGetV2PublicKlineList(e){return this.publicGetV2PublicKlineList(e)}publicGetV2PublicTickers(e){return this.publicGetV2PublicTickers(e)}publicGetV2PublicTradingRecords(e){return this.publicGetV2PublicTradingRecords(e)}publicGetV2PublicSymbols(e){return this.publicGetV2PublicSymbols(e)}publicGetV2PublicMarkPriceKline(e){return this.publicGetV2PublicMarkPriceKline(e)}publicGetV2PublicIndexPriceKline(e){return this.publicGetV2PublicIndexPriceKline(e)}publicGetV2PublicPremiumIndexKline(e){return this.publicGetV2PublicPremiumIndexKline(e)}publicGetV2PublicOpenInterest(e){return this.publicGetV2PublicOpenInterest(e)}publicGetV2PublicBigDeal(e){return this.publicGetV2PublicBigDeal(e)}publicGetV2PublicAccountRatio(e){return this.publicGetV2PublicAccountRatio(e)}publicGetV2PublicFundingRate(e){return this.publicGetV2PublicFundingRate(e)}publicGetV2PublicEliteRatio(e){return this.publicGetV2PublicEliteRatio(e)}publicGetV2PublicFundingPrevFundingRate(e){return this.publicGetV2PublicFundingPrevFundingRate(e)}publicGetV2PublicRiskLimitList(e){return this.publicGetV2PublicRiskLimitList(e)}publicGetPublicLinearKline(e){return this.publicGetPublicLinearKline(e)}publicGetPublicLinearRecentTradingRecords(e){return this.publicGetPublicLinearRecentTradingRecords(e)}publicGetPublicLinearRiskLimit(e){return this.publicGetPublicLinearRiskLimit(e)}publicGetPublicLinearFundingPrevFundingRate(e){return this.publicGetPublicLinearFundingPrevFundingRate(e)}publicGetPublicLinearMarkPriceKline(e){return this.publicGetPublicLinearMarkPriceKline(e)}publicGetPublicLinearIndexPriceKline(e){return this.publicGetPublicLinearIndexPriceKline(e)}publicGetPublicLinearPremiumIndexKline(e){return this.publicGetPublicLinearPremiumIndexKline(e)}publicGetSpotV1Time(e){return this.publicGetSpotV1Time(e)}publicGetSpotV1Symbols(e){return this.publicGetSpotV1Symbols(e)}publicGetSpotQuoteV1Depth(e){return this.publicGetSpotQuoteV1Depth(e)}publicGetSpotQuoteV1DepthMerged(e){return this.publicGetSpotQuoteV1DepthMerged(e)}publicGetSpotQuoteV1Trades(e){return this.publicGetSpotQuoteV1Trades(e)}publicGetSpotQuoteV1Kline(e){return this.publicGetSpotQuoteV1Kline(e)}publicGetSpotQuoteV1Ticker24hr(e){return this.publicGetSpotQuoteV1Ticker24hr(e)}publicGetSpotQuoteV1TickerPrice(e){return this.publicGetSpotQuoteV1TickerPrice(e)}publicGetSpotQuoteV1TickerBookTicker(e){return this.publicGetSpotQuoteV1TickerBookTicker(e)}publicGetSpotV3PublicSymbols(e){return this.publicGetSpotV3PublicSymbols(e)}publicGetSpotV3PublicQuoteDepth(e){return this.publicGetSpotV3PublicQuoteDepth(e)}publicGetSpotV3PublicQuoteDepthMerged(e){return this.publicGetSpotV3PublicQuoteDepthMerged(e)}publicGetSpotV3PublicQuoteTrades(e){return this.publicGetSpotV3PublicQuoteTrades(e)}publicGetSpotV3PublicQuoteKline(e){return this.publicGetSpotV3PublicQuoteKline(e)}publicGetSpotV3PublicQuoteTicker24hr(e){return this.publicGetSpotV3PublicQuoteTicker24hr(e)}publicGetSpotV3PublicQuoteTickerPrice(e){return this.publicGetSpotV3PublicQuoteTickerPrice(e)}publicGetSpotV3PublicQuoteTickerBookTicker(e){return this.publicGetSpotV3PublicQuoteTickerBookTicker(e)}publicGetSpotV3PublicServerTime(e){return this.publicGetSpotV3PublicServerTime(e)}publicGetSpotV3PublicInfos(e){return this.publicGetSpotV3PublicInfos(e)}publicGetSpotV3PublicMarginProductInfos(e){return this.publicGetSpotV3PublicMarginProductInfos(e)}publicGetSpotV3PublicMarginEnsureTokens(e){return this.publicGetSpotV3PublicMarginEnsureTokens(e)}publicGetV2PublicTime(e){return this.publicGetV2PublicTime(e)}publicGetV3PublicTime(e){return this.publicGetV3PublicTime(e)}publicGetV2PublicAnnouncement(e){return this.publicGetV2PublicAnnouncement(e)}publicGetOptionUsdcOpenapiPublicV1OrderBook(e){return this.publicGetOptionUsdcOpenapiPublicV1OrderBook(e)}publicGetOptionUsdcOpenapiPublicV1Symbols(e){return this.publicGetOptionUsdcOpenapiPublicV1Symbols(e)}publicGetOptionUsdcOpenapiPublicV1Tick(e){return this.publicGetOptionUsdcOpenapiPublicV1Tick(e)}publicGetOptionUsdcOpenapiPublicV1DeliveryPrice(e){return this.publicGetOptionUsdcOpenapiPublicV1DeliveryPrice(e)}publicGetOptionUsdcOpenapiPublicV1QueryTradeLatest(e){return this.publicGetOptionUsdcOpenapiPublicV1QueryTradeLatest(e)}publicGetOptionUsdcOpenapiPublicV1QueryHistoricalVolatility(e){return this.publicGetOptionUsdcOpenapiPublicV1QueryHistoricalVolatility(e)}publicGetOptionUsdcOpenapiPublicV1AllTickers(e){return this.publicGetOptionUsdcOpenapiPublicV1AllTickers(e)}publicGetPerpetualUsdcOpenapiPublicV1OrderBook(e){return this.publicGetPerpetualUsdcOpenapiPublicV1OrderBook(e)}publicGetPerpetualUsdcOpenapiPublicV1Symbols(e){return this.publicGetPerpetualUsdcOpenapiPublicV1Symbols(e)}publicGetPerpetualUsdcOpenapiPublicV1Tick(e){return this.publicGetPerpetualUsdcOpenapiPublicV1Tick(e)}publicGetPerpetualUsdcOpenapiPublicV1KlineList(e){return this.publicGetPerpetualUsdcOpenapiPublicV1KlineList(e)}publicGetPerpetualUsdcOpenapiPublicV1MarkPriceKline(e){return this.publicGetPerpetualUsdcOpenapiPublicV1MarkPriceKline(e)}publicGetPerpetualUsdcOpenapiPublicV1IndexPriceKline(e){return this.publicGetPerpetualUsdcOpenapiPublicV1IndexPriceKline(e)}publicGetPerpetualUsdcOpenapiPublicV1PremiumIndexKline(e){return this.publicGetPerpetualUsdcOpenapiPublicV1PremiumIndexKline(e)}publicGetPerpetualUsdcOpenapiPublicV1OpenInterest(e){return this.publicGetPerpetualUsdcOpenapiPublicV1OpenInterest(e)}publicGetPerpetualUsdcOpenapiPublicV1BigDeal(e){return this.publicGetPerpetualUsdcOpenapiPublicV1BigDeal(e)}publicGetPerpetualUsdcOpenapiPublicV1AccountRatio(e){return this.publicGetPerpetualUsdcOpenapiPublicV1AccountRatio(e)}publicGetPerpetualUsdcOpenapiPublicV1PrevFundingRate(e){return this.publicGetPerpetualUsdcOpenapiPublicV1PrevFundingRate(e)}publicGetPerpetualUsdcOpenapiPublicV1RiskLimitList(e){return this.publicGetPerpetualUsdcOpenapiPublicV1RiskLimitList(e)}publicGetAssetV1PublicDepositAllowedDepositList(e){return this.publicGetAssetV1PublicDepositAllowedDepositList(e)}publicGetContractV3PublicCopytradingSymbolList(e){return this.publicGetContractV3PublicCopytradingSymbolList(e)}publicGetDerivativesV3PublicOrderBookL2(e){return this.publicGetDerivativesV3PublicOrderBookL2(e)}publicGetDerivativesV3PublicKline(e){return this.publicGetDerivativesV3PublicKline(e)}publicGetDerivativesV3PublicTickers(e){return this.publicGetDerivativesV3PublicTickers(e)}publicGetDerivativesV3PublicInstrumentsInfo(e){return this.publicGetDerivativesV3PublicInstrumentsInfo(e)}publicGetDerivativesV3PublicMarkPriceKline(e){return this.publicGetDerivativesV3PublicMarkPriceKline(e)}publicGetDerivativesV3PublicIndexPriceKline(e){return this.publicGetDerivativesV3PublicIndexPriceKline(e)}publicGetDerivativesV3PublicFundingHistoryFundingRate(e){return this.publicGetDerivativesV3PublicFundingHistoryFundingRate(e)}publicGetDerivativesV3PublicRiskLimitList(e){return this.publicGetDerivativesV3PublicRiskLimitList(e)}publicGetDerivativesV3PublicDeliveryPrice(e){return this.publicGetDerivativesV3PublicDeliveryPrice(e)}publicGetDerivativesV3PublicRecentTrade(e){return this.publicGetDerivativesV3PublicRecentTrade(e)}publicGetDerivativesV3PublicOpenInterest(e){return this.publicGetDerivativesV3PublicOpenInterest(e)}publicGetDerivativesV3PublicInsurance(e){return this.publicGetDerivativesV3PublicInsurance(e)}publicGetV5MarketKline(e){return this.publicGetV5MarketKline(e)}publicGetV5MarketMarkPriceKline(e){return this.publicGetV5MarketMarkPriceKline(e)}publicGetV5MarketIndexPriceKline(e){return this.publicGetV5MarketIndexPriceKline(e)}publicGetV5MarketPremiumIndexPriceKline(e){return this.publicGetV5MarketPremiumIndexPriceKline(e)}publicGetV5MarketInstrumentsInfo(e){return this.publicGetV5MarketInstrumentsInfo(e)}publicGetV5MarketOrderbook(e){return this.publicGetV5MarketOrderbook(e)}publicGetV5MarketTickers(e){return this.publicGetV5MarketTickers(e)}publicGetV5MarketFundingHistory(e){return this.publicGetV5MarketFundingHistory(e)}publicGetV5MarketRecentTrade(e){return this.publicGetV5MarketRecentTrade(e)}publicGetV5MarketOpenInterest(e){return this.publicGetV5MarketOpenInterest(e)}publicGetV5MarketHistoricalVolatility(e){return this.publicGetV5MarketHistoricalVolatility(e)}publicGetV5MarketInsurance(e){return this.publicGetV5MarketInsurance(e)}publicGetV5MarketRiskLimit(e){return this.publicGetV5MarketRiskLimit(e)}publicGetV5MarketDeliveryPrice(e){return this.publicGetV5MarketDeliveryPrice(e)}publicGetV5SpotLeverTokenInfo(e){return this.publicGetV5SpotLeverTokenInfo(e)}publicGetV5SpotLeverTokenReference(e){return this.publicGetV5SpotLeverTokenReference(e)}publicGetV5AnnouncementsIndex(e){return this.publicGetV5AnnouncementsIndex(e)}privateGetV2PrivateOrderList(e){return this.privateGetV2PrivateOrderList(e)}privateGetV2PrivateOrder(e){return this.privateGetV2PrivateOrder(e)}privateGetV2PrivateStopOrderList(e){return this.privateGetV2PrivateStopOrderList(e)}privateGetV2PrivateStopOrder(e){return this.privateGetV2PrivateStopOrder(e)}privateGetV2PrivatePositionList(e){return this.privateGetV2PrivatePositionList(e)}privateGetV2PrivatePositionFeeRate(e){return this.privateGetV2PrivatePositionFeeRate(e)}privateGetV2PrivateExecutionList(e){return this.privateGetV2PrivateExecutionList(e)}privateGetV2PrivateTradeClosedPnlList(e){return this.privateGetV2PrivateTradeClosedPnlList(e)}privateGetV2PublicRiskLimitList(e){return this.privateGetV2PublicRiskLimitList(e)}privateGetV2PublicFundingPrevFundingRate(e){return this.privateGetV2PublicFundingPrevFundingRate(e)}privateGetV2PrivateFundingPrevFunding(e){return this.privateGetV2PrivateFundingPrevFunding(e)}privateGetV2PrivateFundingPredictedFunding(e){return this.privateGetV2PrivateFundingPredictedFunding(e)}privateGetV2PrivateAccountApiKey(e){return this.privateGetV2PrivateAccountApiKey(e)}privateGetV2PrivateAccountLcp(e){return this.privateGetV2PrivateAccountLcp(e)}privateGetV2PrivateWalletBalance(e){return this.privateGetV2PrivateWalletBalance(e)}privateGetV2PrivateWalletFundRecords(e){return this.privateGetV2PrivateWalletFundRecords(e)}privateGetV2PrivateWalletWithdrawList(e){return this.privateGetV2PrivateWalletWithdrawList(e)}privateGetV2PrivateExchangeOrderList(e){return this.privateGetV2PrivateExchangeOrderList(e)}privateGetPrivateLinearOrderList(e){return this.privateGetPrivateLinearOrderList(e)}privateGetPrivateLinearOrderSearch(e){return this.privateGetPrivateLinearOrderSearch(e)}privateGetPrivateLinearStopOrderList(e){return this.privateGetPrivateLinearStopOrderList(e)}privateGetPrivateLinearStopOrderSearch(e){return this.privateGetPrivateLinearStopOrderSearch(e)}privateGetPrivateLinearPositionList(e){return this.privateGetPrivateLinearPositionList(e)}privateGetPrivateLinearTradeExecutionList(e){return this.privateGetPrivateLinearTradeExecutionList(e)}privateGetPrivateLinearTradeClosedPnlList(e){return this.privateGetPrivateLinearTradeClosedPnlList(e)}privateGetPublicLinearRiskLimit(e){return this.privateGetPublicLinearRiskLimit(e)}privateGetPrivateLinearFundingPredictedFunding(e){return this.privateGetPrivateLinearFundingPredictedFunding(e)}privateGetPrivateLinearFundingPrevFunding(e){return this.privateGetPrivateLinearFundingPrevFunding(e)}privateGetFuturesPrivateOrderList(e){return this.privateGetFuturesPrivateOrderList(e)}privateGetFuturesPrivateOrder(e){return this.privateGetFuturesPrivateOrder(e)}privateGetFuturesPrivateStopOrderList(e){return this.privateGetFuturesPrivateStopOrderList(e)}privateGetFuturesPrivateStopOrder(e){return this.privateGetFuturesPrivateStopOrder(e)}privateGetFuturesPrivatePositionList(e){return this.privateGetFuturesPrivatePositionList(e)}privateGetFuturesPrivateExecutionList(e){return this.privateGetFuturesPrivateExecutionList(e)}privateGetFuturesPrivateTradeClosedPnlList(e){return this.privateGetFuturesPrivateTradeClosedPnlList(e)}privateGetSpotV1Account(e){return this.privateGetSpotV1Account(e)}privateGetSpotV1Order(e){return this.privateGetSpotV1Order(e)}privateGetSpotV1OpenOrders(e){return this.privateGetSpotV1OpenOrders(e)}privateGetSpotV1HistoryOrders(e){return this.privateGetSpotV1HistoryOrders(e)}privateGetSpotV1MyTrades(e){return this.privateGetSpotV1MyTrades(e)}privateGetSpotV1CrossMarginOrder(e){return this.privateGetSpotV1CrossMarginOrder(e)}privateGetSpotV1CrossMarginAccountsBalance(e){return this.privateGetSpotV1CrossMarginAccountsBalance(e)}privateGetSpotV1CrossMarginLoanInfo(e){return this.privateGetSpotV1CrossMarginLoanInfo(e)}privateGetSpotV1CrossMarginRepayHistory(e){return this.privateGetSpotV1CrossMarginRepayHistory(e)}privateGetSpotV3PrivateOrder(e){return this.privateGetSpotV3PrivateOrder(e)}privateGetSpotV3PrivateOpenOrders(e){return this.privateGetSpotV3PrivateOpenOrders(e)}privateGetSpotV3PrivateHistoryOrders(e){return this.privateGetSpotV3PrivateHistoryOrders(e)}privateGetSpotV3PrivateMyTrades(e){return this.privateGetSpotV3PrivateMyTrades(e)}privateGetSpotV3PrivateAccount(e){return this.privateGetSpotV3PrivateAccount(e)}privateGetSpotV3PrivateReference(e){return this.privateGetSpotV3PrivateReference(e)}privateGetSpotV3PrivateRecord(e){return this.privateGetSpotV3PrivateRecord(e)}privateGetSpotV3PrivateCrossMarginOrders(e){return this.privateGetSpotV3PrivateCrossMarginOrders(e)}privateGetSpotV3PrivateCrossMarginAccount(e){return this.privateGetSpotV3PrivateCrossMarginAccount(e)}privateGetSpotV3PrivateCrossMarginLoanInfo(e){return this.privateGetSpotV3PrivateCrossMarginLoanInfo(e)}privateGetSpotV3PrivateCrossMarginRepayHistory(e){return this.privateGetSpotV3PrivateCrossMarginRepayHistory(e)}privateGetSpotV3PrivateMarginLoanInfos(e){return this.privateGetSpotV3PrivateMarginLoanInfos(e)}privateGetSpotV3PrivateMarginRepaidInfos(e){return this.privateGetSpotV3PrivateMarginRepaidInfos(e)}privateGetSpotV3PrivateMarginLtv(e){return this.privateGetSpotV3PrivateMarginLtv(e)}privateGetAssetV1PrivateTransferList(e){return this.privateGetAssetV1PrivateTransferList(e)}privateGetAssetV3PrivateTransferInterTransferListQuery(e){return this.privateGetAssetV3PrivateTransferInterTransferListQuery(e)}privateGetAssetV1PrivateSubMemberTransferList(e){return this.privateGetAssetV1PrivateSubMemberTransferList(e)}privateGetAssetV3PrivateTransferSubMemberListQuery(e){return this.privateGetAssetV3PrivateTransferSubMemberListQuery(e)}privateGetAssetV3PrivateTransferSubMemberTransferListQuery(e){return this.privateGetAssetV3PrivateTransferSubMemberTransferListQuery(e)}privateGetAssetV3PrivateTransferUniversalTransferListQuery(e){return this.privateGetAssetV3PrivateTransferUniversalTransferListQuery(e)}privateGetAssetV1PrivateSubMemberMemberIds(e){return this.privateGetAssetV1PrivateSubMemberMemberIds(e)}privateGetAssetV1PrivateDepositRecordQuery(e){return this.privateGetAssetV1PrivateDepositRecordQuery(e)}privateGetAssetV1PrivateWithdrawRecordQuery(e){return this.privateGetAssetV1PrivateWithdrawRecordQuery(e)}privateGetAssetV1PrivateCoinInfoQuery(e){return this.privateGetAssetV1PrivateCoinInfoQuery(e)}privateGetAssetV3PrivateCoinInfoQuery(e){return this.privateGetAssetV3PrivateCoinInfoQuery(e)}privateGetAssetV1PrivateAssetInfoQuery(e){return this.privateGetAssetV1PrivateAssetInfoQuery(e)}privateGetAssetV1PrivateDepositAddress(e){return this.privateGetAssetV1PrivateDepositAddress(e)}privateGetAssetV3PrivateDepositAddressQuery(e){return this.privateGetAssetV3PrivateDepositAddressQuery(e)}privateGetAssetV1PrivateUniversalTransferList(e){return this.privateGetAssetV1PrivateUniversalTransferList(e)}privateGetContractV3PrivateCopytradingOrderList(e){return this.privateGetContractV3PrivateCopytradingOrderList(e)}privateGetContractV3PrivateCopytradingPositionList(e){return this.privateGetContractV3PrivateCopytradingPositionList(e)}privateGetContractV3PrivateCopytradingWalletBalance(e){return this.privateGetContractV3PrivateCopytradingWalletBalance(e)}privateGetContractV3PrivatePositionLimitInfo(e){return this.privateGetContractV3PrivatePositionLimitInfo(e)}privateGetContractV3PrivateOrderUnfilledOrders(e){return this.privateGetContractV3PrivateOrderUnfilledOrders(e)}privateGetContractV3PrivateOrderList(e){return this.privateGetContractV3PrivateOrderList(e)}privateGetContractV3PrivatePositionList(e){return this.privateGetContractV3PrivatePositionList(e)}privateGetContractV3PrivateExecutionList(e){return this.privateGetContractV3PrivateExecutionList(e)}privateGetContractV3PrivatePositionClosedPnl(e){return this.privateGetContractV3PrivatePositionClosedPnl(e)}privateGetContractV3PrivateAccountWalletBalance(e){return this.privateGetContractV3PrivateAccountWalletBalance(e)}privateGetContractV3PrivateAccountFeeRate(e){return this.privateGetContractV3PrivateAccountFeeRate(e)}privateGetContractV3PrivateAccountWalletFundRecords(e){return this.privateGetContractV3PrivateAccountWalletFundRecords(e)}privateGetUnifiedV3PrivateOrderUnfilledOrders(e){return this.privateGetUnifiedV3PrivateOrderUnfilledOrders(e)}privateGetUnifiedV3PrivateOrderList(e){return this.privateGetUnifiedV3PrivateOrderList(e)}privateGetUnifiedV3PrivatePositionList(e){return this.privateGetUnifiedV3PrivatePositionList(e)}privateGetUnifiedV3PrivateExecutionList(e){return this.privateGetUnifiedV3PrivateExecutionList(e)}privateGetUnifiedV3PrivateDeliveryRecord(e){return this.privateGetUnifiedV3PrivateDeliveryRecord(e)}privateGetUnifiedV3PrivateSettlementRecord(e){return this.privateGetUnifiedV3PrivateSettlementRecord(e)}privateGetUnifiedV3PrivateAccountWalletBalance(e){return this.privateGetUnifiedV3PrivateAccountWalletBalance(e)}privateGetUnifiedV3PrivateAccountTransactionLog(e){return this.privateGetUnifiedV3PrivateAccountTransactionLog(e)}privateGetAssetV2PrivateExchangeExchangeOrderAll(e){return this.privateGetAssetV2PrivateExchangeExchangeOrderAll(e)}privateGetUnifiedV3PrivateAccountBorrowHistory(e){return this.privateGetUnifiedV3PrivateAccountBorrowHistory(e)}privateGetUnifiedV3PrivateAccountBorrowRate(e){return this.privateGetUnifiedV3PrivateAccountBorrowRate(e)}privateGetUnifiedV3PrivateAccountInfo(e){return this.privateGetUnifiedV3PrivateAccountInfo(e)}privateGetUserV3PrivateFrozenSubMember(e){return this.privateGetUserV3PrivateFrozenSubMember(e)}privateGetUserV3PrivateQuerySubMembers(e){return this.privateGetUserV3PrivateQuerySubMembers(e)}privateGetUserV3PrivateQueryApi(e){return this.privateGetUserV3PrivateQueryApi(e)}privateGetAssetV3PrivateTransferTransferCoinListQuery(e){return this.privateGetAssetV3PrivateTransferTransferCoinListQuery(e)}privateGetAssetV3PrivateTransferAccountCoinBalanceQuery(e){return this.privateGetAssetV3PrivateTransferAccountCoinBalanceQuery(e)}privateGetAssetV3PrivateTransferAccountCoinsBalanceQuery(e){return this.privateGetAssetV3PrivateTransferAccountCoinsBalanceQuery(e)}privateGetAssetV3PrivateTransferAssetInfoQuery(e){return this.privateGetAssetV3PrivateTransferAssetInfoQuery(e)}privateGetAssetV3PublicDepositAllowedDepositListQuery(e){return this.privateGetAssetV3PublicDepositAllowedDepositListQuery(e)}privateGetAssetV3PrivateDepositRecordQuery(e){return this.privateGetAssetV3PrivateDepositRecordQuery(e)}privateGetAssetV3PrivateWithdrawRecordQuery(e){return this.privateGetAssetV3PrivateWithdrawRecordQuery(e)}privateGetV5OrderHistory(e){return this.privateGetV5OrderHistory(e)}privateGetV5OrderSpotBorrowCheck(e){return this.privateGetV5OrderSpotBorrowCheck(e)}privateGetV5OrderRealtime(e){return this.privateGetV5OrderRealtime(e)}privateGetV5PositionList(e){return this.privateGetV5PositionList(e)}privateGetV5ExecutionList(e){return this.privateGetV5ExecutionList(e)}privateGetV5PositionClosedPnl(e){return this.privateGetV5PositionClosedPnl(e)}privateGetV5AccountWalletBalance(e){return this.privateGetV5AccountWalletBalance(e)}privateGetV5AccountBorrowHistory(e){return this.privateGetV5AccountBorrowHistory(e)}privateGetV5AccountCollateralInfo(e){return this.privateGetV5AccountCollateralInfo(e)}privateGetV5AccountMmpState(e){return this.privateGetV5AccountMmpState(e)}privateGetV5AssetCoinGreeks(e){return this.privateGetV5AssetCoinGreeks(e)}privateGetV5AccountInfo(e){return this.privateGetV5AccountInfo(e)}privateGetV5AccountTransactionLog(e){return this.privateGetV5AccountTransactionLog(e)}privateGetV5AccountFeeRate(e){return this.privateGetV5AccountFeeRate(e)}privateGetV5AssetExchangeOrderRecord(e){return this.privateGetV5AssetExchangeOrderRecord(e)}privateGetV5AssetDeliveryRecord(e){return this.privateGetV5AssetDeliveryRecord(e)}privateGetV5AssetSettlementRecord(e){return this.privateGetV5AssetSettlementRecord(e)}privateGetV5AssetTransferQueryAssetInfo(e){return this.privateGetV5AssetTransferQueryAssetInfo(e)}privateGetV5AssetTransferQueryAccountCoinBalance(e){return this.privateGetV5AssetTransferQueryAccountCoinBalance(e)}privateGetV5AssetTransferQueryTransferCoinList(e){return this.privateGetV5AssetTransferQueryTransferCoinList(e)}privateGetV5AssetTransferQueryInterTransferList(e){return this.privateGetV5AssetTransferQueryInterTransferList(e)}privateGetV5AssetTransferQuerySubMemberList(e){return this.privateGetV5AssetTransferQuerySubMemberList(e)}privateGetV5AssetTransferQueryUniversalTransferList(e){return this.privateGetV5AssetTransferQueryUniversalTransferList(e)}privateGetV5AssetDepositQueryAllowedList(e){return this.privateGetV5AssetDepositQueryAllowedList(e)}privateGetV5AssetDepositQueryRecord(e){return this.privateGetV5AssetDepositQueryRecord(e)}privateGetV5AssetDepositQuerySubMemberRecord(e){return this.privateGetV5AssetDepositQuerySubMemberRecord(e)}privateGetV5AssetDepositQueryAddress(e){return this.privateGetV5AssetDepositQueryAddress(e)}privateGetV5AssetDepositQuerySubMemberAddress(e){return this.privateGetV5AssetDepositQuerySubMemberAddress(e)}privateGetV5AssetDepositQueryInternalRecord(e){return this.privateGetV5AssetDepositQueryInternalRecord(e)}privateGetV5AssetCoinQueryInfo(e){return this.privateGetV5AssetCoinQueryInfo(e)}privateGetV5AssetWithdrawQueryRecord(e){return this.privateGetV5AssetWithdrawQueryRecord(e)}privateGetV5AssetWithdrawWithdrawableAmount(e){return this.privateGetV5AssetWithdrawWithdrawableAmount(e)}privateGetV5AssetTransferQueryAccountCoinsBalance(e){return this.privateGetV5AssetTransferQueryAccountCoinsBalance(e)}privateGetV5UserQuerySubMembers(e){return this.privateGetV5UserQuerySubMembers(e)}privateGetV5UserQueryApi(e){return this.privateGetV5UserQueryApi(e)}privatePostV2PrivateOrderCreate(e){return this.privatePostV2PrivateOrderCreate(e)}privatePostV2PrivateOrderCancel(e){return this.privatePostV2PrivateOrderCancel(e)}privatePostV2PrivateOrderCancelAll(e){return this.privatePostV2PrivateOrderCancelAll(e)}privatePostV2PrivateOrderReplace(e){return this.privatePostV2PrivateOrderReplace(e)}privatePostV2PrivateStopOrderCreate(e){return this.privatePostV2PrivateStopOrderCreate(e)}privatePostV2PrivateStopOrderCancel(e){return this.privatePostV2PrivateStopOrderCancel(e)}privatePostV2PrivateStopOrderCancelAll(e){return this.privatePostV2PrivateStopOrderCancelAll(e)}privatePostV2PrivateStopOrderReplace(e){return this.privatePostV2PrivateStopOrderReplace(e)}privatePostV2PrivatePositionChangePositionMargin(e){return this.privatePostV2PrivatePositionChangePositionMargin(e)}privatePostV2PrivatePositionTradingStop(e){return this.privatePostV2PrivatePositionTradingStop(e)}privatePostV2PrivatePositionLeverageSave(e){return this.privatePostV2PrivatePositionLeverageSave(e)}privatePostV2PrivateTpslSwitchMode(e){return this.privatePostV2PrivateTpslSwitchMode(e)}privatePostV2PrivatePositionSwitchIsolated(e){return this.privatePostV2PrivatePositionSwitchIsolated(e)}privatePostV2PrivatePositionRiskLimit(e){return this.privatePostV2PrivatePositionRiskLimit(e)}privatePostV2PrivatePositionSwitchMode(e){return this.privatePostV2PrivatePositionSwitchMode(e)}privatePostPrivateLinearOrderCreate(e){return this.privatePostPrivateLinearOrderCreate(e)}privatePostPrivateLinearOrderCancel(e){return this.privatePostPrivateLinearOrderCancel(e)}privatePostPrivateLinearOrderCancelAll(e){return this.privatePostPrivateLinearOrderCancelAll(e)}privatePostPrivateLinearOrderReplace(e){return this.privatePostPrivateLinearOrderReplace(e)}privatePostPrivateLinearStopOrderCreate(e){return this.privatePostPrivateLinearStopOrderCreate(e)}privatePostPrivateLinearStopOrderCancel(e){return this.privatePostPrivateLinearStopOrderCancel(e)}privatePostPrivateLinearStopOrderCancelAll(e){return this.privatePostPrivateLinearStopOrderCancelAll(e)}privatePostPrivateLinearStopOrderReplace(e){return this.privatePostPrivateLinearStopOrderReplace(e)}privatePostPrivateLinearPositionSetAutoAddMargin(e){return this.privatePostPrivateLinearPositionSetAutoAddMargin(e)}privatePostPrivateLinearPositionSwitchIsolated(e){return this.privatePostPrivateLinearPositionSwitchIsolated(e)}privatePostPrivateLinearPositionSwitchMode(e){return this.privatePostPrivateLinearPositionSwitchMode(e)}privatePostPrivateLinearTpslSwitchMode(e){return this.privatePostPrivateLinearTpslSwitchMode(e)}privatePostPrivateLinearPositionAddMargin(e){return this.privatePostPrivateLinearPositionAddMargin(e)}privatePostPrivateLinearPositionSetLeverage(e){return this.privatePostPrivateLinearPositionSetLeverage(e)}privatePostPrivateLinearPositionTradingStop(e){return this.privatePostPrivateLinearPositionTradingStop(e)}privatePostPrivateLinearPositionSetRisk(e){return this.privatePostPrivateLinearPositionSetRisk(e)}privatePostFuturesPrivateOrderCreate(e){return this.privatePostFuturesPrivateOrderCreate(e)}privatePostFuturesPrivateOrderCancel(e){return this.privatePostFuturesPrivateOrderCancel(e)}privatePostFuturesPrivateOrderCancelAll(e){return this.privatePostFuturesPrivateOrderCancelAll(e)}privatePostFuturesPrivateOrderReplace(e){return this.privatePostFuturesPrivateOrderReplace(e)}privatePostFuturesPrivateStopOrderCreate(e){return this.privatePostFuturesPrivateStopOrderCreate(e)}privatePostFuturesPrivateStopOrderCancel(e){return this.privatePostFuturesPrivateStopOrderCancel(e)}privatePostFuturesPrivateStopOrderCancelAll(e){return this.privatePostFuturesPrivateStopOrderCancelAll(e)}privatePostFuturesPrivateStopOrderReplace(e){return this.privatePostFuturesPrivateStopOrderReplace(e)}privatePostFuturesPrivatePositionChangePositionMargin(e){return this.privatePostFuturesPrivatePositionChangePositionMargin(e)}privatePostFuturesPrivatePositionTradingStop(e){return this.privatePostFuturesPrivatePositionTradingStop(e)}privatePostFuturesPrivatePositionLeverageSave(e){return this.privatePostFuturesPrivatePositionLeverageSave(e)}privatePostFuturesPrivatePositionSwitchMode(e){return this.privatePostFuturesPrivatePositionSwitchMode(e)}privatePostFuturesPrivateTpslSwitchMode(e){return this.privatePostFuturesPrivateTpslSwitchMode(e)}privatePostFuturesPrivatePositionSwitchIsolated(e){return this.privatePostFuturesPrivatePositionSwitchIsolated(e)}privatePostFuturesPrivatePositionRiskLimit(e){return this.privatePostFuturesPrivatePositionRiskLimit(e)}privatePostSpotV1Order(e){return this.privatePostSpotV1Order(e)}privatePostSpotV1CrossMarginLoan(e){return this.privatePostSpotV1CrossMarginLoan(e)}privatePostSpotV1CrossMarginRepay(e){return this.privatePostSpotV1CrossMarginRepay(e)}privatePostSpotV3PrivateOrder(e){return this.privatePostSpotV3PrivateOrder(e)}privatePostSpotV3PrivateCancelOrder(e){return this.privatePostSpotV3PrivateCancelOrder(e)}privatePostSpotV3PrivateCancelOrders(e){return this.privatePostSpotV3PrivateCancelOrders(e)}privatePostSpotV3PrivateCancelOrdersByIds(e){return this.privatePostSpotV3PrivateCancelOrdersByIds(e)}privatePostSpotV3PrivatePurchase(e){return this.privatePostSpotV3PrivatePurchase(e)}privatePostSpotV3PrivateRedeem(e){return this.privatePostSpotV3PrivateRedeem(e)}privatePostSpotV3PrivateCrossMarginLoan(e){return this.privatePostSpotV3PrivateCrossMarginLoan(e)}privatePostSpotV3PrivateCrossMarginRepay(e){return this.privatePostSpotV3PrivateCrossMarginRepay(e)}privatePostAssetV1PrivateTransfer(e){return this.privatePostAssetV1PrivateTransfer(e)}privatePostAssetV3PrivateTransferInterTransfer(e){return this.privatePostAssetV3PrivateTransferInterTransfer(e)}privatePostAssetV1PrivateSubMemberTransfer(e){return this.privatePostAssetV1PrivateSubMemberTransfer(e)}privatePostAssetV1PrivateWithdraw(e){return this.privatePostAssetV1PrivateWithdraw(e)}privatePostAssetV3PrivateWithdrawCreate(e){return this.privatePostAssetV3PrivateWithdrawCreate(e)}privatePostAssetV1PrivateWithdrawCancel(e){return this.privatePostAssetV1PrivateWithdrawCancel(e)}privatePostAssetV3PrivateWithdrawCancel(e){return this.privatePostAssetV3PrivateWithdrawCancel(e)}privatePostAssetV1PrivateTransferableSubsSave(e){return this.privatePostAssetV1PrivateTransferableSubsSave(e)}privatePostAssetV1PrivateUniversalTransfer(e){return this.privatePostAssetV1PrivateUniversalTransfer(e)}privatePostAssetV3PrivateTransferSubMemberTransfer(e){return this.privatePostAssetV3PrivateTransferSubMemberTransfer(e)}privatePostAssetV3PrivateTransferTransferSubMemberSave(e){return this.privatePostAssetV3PrivateTransferTransferSubMemberSave(e)}privatePostAssetV3PrivateTransferUniversalTransfer(e){return this.privatePostAssetV3PrivateTransferUniversalTransfer(e)}privatePostUserV3PrivateCreateSubMember(e){return this.privatePostUserV3PrivateCreateSubMember(e)}privatePostUserV3PrivateCreateSubApi(e){return this.privatePostUserV3PrivateCreateSubApi(e)}privatePostUserV3PrivateUpdateApi(e){return this.privatePostUserV3PrivateUpdateApi(e)}privatePostUserV3PrivateDeleteApi(e){return this.privatePostUserV3PrivateDeleteApi(e)}privatePostUserV3PrivateUpdateSubApi(e){return this.privatePostUserV3PrivateUpdateSubApi(e)}privatePostUserV3PrivateDeleteSubApi(e){return this.privatePostUserV3PrivateDeleteSubApi(e)}privatePostOptionUsdcOpenapiPrivateV1PlaceOrder(e){return this.privatePostOptionUsdcOpenapiPrivateV1PlaceOrder(e)}privatePostOptionUsdcOpenapiPrivateV1BatchPlaceOrder(e){return this.privatePostOptionUsdcOpenapiPrivateV1BatchPlaceOrder(e)}privatePostOptionUsdcOpenapiPrivateV1ReplaceOrder(e){return this.privatePostOptionUsdcOpenapiPrivateV1ReplaceOrder(e)}privatePostOptionUsdcOpenapiPrivateV1BatchReplaceOrders(e){return this.privatePostOptionUsdcOpenapiPrivateV1BatchReplaceOrders(e)}privatePostOptionUsdcOpenapiPrivateV1CancelOrder(e){return this.privatePostOptionUsdcOpenapiPrivateV1CancelOrder(e)}privatePostOptionUsdcOpenapiPrivateV1BatchCancelOrders(e){return this.privatePostOptionUsdcOpenapiPrivateV1BatchCancelOrders(e)}privatePostOptionUsdcOpenapiPrivateV1CancelAll(e){return this.privatePostOptionUsdcOpenapiPrivateV1CancelAll(e)}privatePostOptionUsdcOpenapiPrivateV1QueryActiveOrders(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryActiveOrders(e)}privatePostOptionUsdcOpenapiPrivateV1QueryOrderHistory(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryOrderHistory(e)}privatePostOptionUsdcOpenapiPrivateV1ExecutionList(e){return this.privatePostOptionUsdcOpenapiPrivateV1ExecutionList(e)}privatePostOptionUsdcOpenapiPrivateV1QueryTransactionLog(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryTransactionLog(e)}privatePostOptionUsdcOpenapiPrivateV1QueryWalletBalance(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryWalletBalance(e)}privatePostOptionUsdcOpenapiPrivateV1QueryAssetInfo(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryAssetInfo(e)}privatePostOptionUsdcOpenapiPrivateV1QueryMarginInfo(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryMarginInfo(e)}privatePostOptionUsdcOpenapiPrivateV1QueryPosition(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryPosition(e)}privatePostOptionUsdcOpenapiPrivateV1QueryDeliveryList(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryDeliveryList(e)}privatePostOptionUsdcOpenapiPrivateV1QueryPositionExpDate(e){return this.privatePostOptionUsdcOpenapiPrivateV1QueryPositionExpDate(e)}privatePostOptionUsdcOpenapiPrivateV1MmpModify(e){return this.privatePostOptionUsdcOpenapiPrivateV1MmpModify(e)}privatePostOptionUsdcOpenapiPrivateV1MmpReset(e){return this.privatePostOptionUsdcOpenapiPrivateV1MmpReset(e)}privatePostPerpetualUsdcOpenapiPrivateV1PlaceOrder(e){return this.privatePostPerpetualUsdcOpenapiPrivateV1PlaceOrder(e)}privatePostPerpetualUsdcOpenapiPrivateV1ReplaceOrder(e){return this.privatePostPerpetualUsdcOpenapiPrivateV1ReplaceOrder(e)}privatePostPerpetualUsdcOpenapiPrivateV1CancelOrder(e){return this.privatePostPerpetualUsdcOpenapiPrivateV1CancelOrder(e)}privatePostPerpetualUsdcOpenapiPrivateV1CancelAll(e){return this.privatePostPerpetualUsdcOpenapiPrivateV1CancelAll(e)}privatePostPerpetualUsdcOpenapiPrivateV1PositionLeverageSave(e){return this.privatePostPerpetualUsdcOpenapiPrivateV1PositionLeverageSave(e)}privatePostOptionUsdcOpenapiPrivateV1SessionSettlement(e){return this.privatePostOptionUsdcOpenapiPrivateV1SessionSettlement(e)}privatePostOptionUsdcPrivateAssetAccountSetMarginMode(e){return this.privatePostOptionUsdcPrivateAssetAccountSetMarginMode(e)}privatePostPerpetualUsdcOpenapiPublicV1RiskLimitList(e){return this.privatePostPerpetualUsdcOpenapiPublicV1RiskLimitList(e)}privatePostPerpetualUsdcOpenapiPrivateV1PositionSetRiskLimit(e){return this.privatePostPerpetualUsdcOpenapiPrivateV1PositionSetRiskLimit(e)}privatePostPerpetualUsdcOpenapiPrivateV1PredictedFunding(e){return this.privatePostPerpetualUsdcOpenapiPrivateV1PredictedFunding(e)}privatePostContractV3PrivateCopytradingOrderCreate(e){return this.privatePostContractV3PrivateCopytradingOrderCreate(e)}privatePostContractV3PrivateCopytradingOrderCancel(e){return this.privatePostContractV3PrivateCopytradingOrderCancel(e)}privatePostContractV3PrivateCopytradingOrderClose(e){return this.privatePostContractV3PrivateCopytradingOrderClose(e)}privatePostContractV3PrivateCopytradingPositionClose(e){return this.privatePostContractV3PrivateCopytradingPositionClose(e)}privatePostContractV3PrivateCopytradingPositionSetLeverage(e){return this.privatePostContractV3PrivateCopytradingPositionSetLeverage(e)}privatePostContractV3PrivateCopytradingWalletTransfer(e){return this.privatePostContractV3PrivateCopytradingWalletTransfer(e)}privatePostContractV3PrivateCopytradingOrderTradingStop(e){return this.privatePostContractV3PrivateCopytradingOrderTradingStop(e)}privatePostContractV3PrivateOrderCreate(e){return this.privatePostContractV3PrivateOrderCreate(e)}privatePostContractV3PrivateOrderCancel(e){return this.privatePostContractV3PrivateOrderCancel(e)}privatePostContractV3PrivateOrderCancelAll(e){return this.privatePostContractV3PrivateOrderCancelAll(e)}privatePostContractV3PrivateOrderReplace(e){return this.privatePostContractV3PrivateOrderReplace(e)}privatePostContractV3PrivatePositionSetAutoAddMargin(e){return this.privatePostContractV3PrivatePositionSetAutoAddMargin(e)}privatePostContractV3PrivatePositionSwitchIsolated(e){return this.privatePostContractV3PrivatePositionSwitchIsolated(e)}privatePostContractV3PrivatePositionSwitchMode(e){return this.privatePostContractV3PrivatePositionSwitchMode(e)}privatePostContractV3PrivatePositionSwitchTpslMode(e){return this.privatePostContractV3PrivatePositionSwitchTpslMode(e)}privatePostContractV3PrivatePositionSetLeverage(e){return this.privatePostContractV3PrivatePositionSetLeverage(e)}privatePostContractV3PrivatePositionTradingStop(e){return this.privatePostContractV3PrivatePositionTradingStop(e)}privatePostContractV3PrivatePositionSetRiskLimit(e){return this.privatePostContractV3PrivatePositionSetRiskLimit(e)}privatePostContractV3PrivateAccountSetMarginMode(e){return this.privatePostContractV3PrivateAccountSetMarginMode(e)}privatePostUnifiedV3PrivateOrderCreate(e){return this.privatePostUnifiedV3PrivateOrderCreate(e)}privatePostUnifiedV3PrivateOrderReplace(e){return this.privatePostUnifiedV3PrivateOrderReplace(e)}privatePostUnifiedV3PrivateOrderCancel(e){return this.privatePostUnifiedV3PrivateOrderCancel(e)}privatePostUnifiedV3PrivateOrderCreateBatch(e){return this.privatePostUnifiedV3PrivateOrderCreateBatch(e)}privatePostUnifiedV3PrivateOrderReplaceBatch(e){return this.privatePostUnifiedV3PrivateOrderReplaceBatch(e)}privatePostUnifiedV3PrivateOrderCancelBatch(e){return this.privatePostUnifiedV3PrivateOrderCancelBatch(e)}privatePostUnifiedV3PrivateOrderCancelAll(e){return this.privatePostUnifiedV3PrivateOrderCancelAll(e)}privatePostUnifiedV3PrivatePositionSetLeverage(e){return this.privatePostUnifiedV3PrivatePositionSetLeverage(e)}privatePostUnifiedV3PrivatePositionTpslSwitchMode(e){return this.privatePostUnifiedV3PrivatePositionTpslSwitchMode(e)}privatePostUnifiedV3PrivatePositionSetRiskLimit(e){return this.privatePostUnifiedV3PrivatePositionSetRiskLimit(e)}privatePostUnifiedV3PrivatePositionTradingStop(e){return this.privatePostUnifiedV3PrivatePositionTradingStop(e)}privatePostUnifiedV3PrivateAccountUpgradeUnifiedAccount(e){return this.privatePostUnifiedV3PrivateAccountUpgradeUnifiedAccount(e)}privatePostUnifiedV3PrivateAccountSetMarginMode(e){return this.privatePostUnifiedV3PrivateAccountSetMarginMode(e)}privatePostFhtComplianceTaxV3PrivateRegistertime(e){return this.privatePostFhtComplianceTaxV3PrivateRegistertime(e)}privatePostFhtComplianceTaxV3PrivateCreate(e){return this.privatePostFhtComplianceTaxV3PrivateCreate(e)}privatePostFhtComplianceTaxV3PrivateStatus(e){return this.privatePostFhtComplianceTaxV3PrivateStatus(e)}privatePostFhtComplianceTaxV3PrivateUrl(e){return this.privatePostFhtComplianceTaxV3PrivateUrl(e)}privatePostV5OrderCreate(e){return this.privatePostV5OrderCreate(e)}privatePostV5OrderAmend(e){return this.privatePostV5OrderAmend(e)}privatePostV5OrderCancel(e){return this.privatePostV5OrderCancel(e)}privatePostV5OrderCancelAll(e){return this.privatePostV5OrderCancelAll(e)}privatePostV5OrderCreateBatch(e){return this.privatePostV5OrderCreateBatch(e)}privatePostV5OrderAmendBatch(e){return this.privatePostV5OrderAmendBatch(e)}privatePostV5OrderCancelBatch(e){return this.privatePostV5OrderCancelBatch(e)}privatePostV5OrderDisconnectedCancelAll(e){return this.privatePostV5OrderDisconnectedCancelAll(e)}privatePostV5PositionSetLeverage(e){return this.privatePostV5PositionSetLeverage(e)}privatePostV5PositionSetTpslMode(e){return this.privatePostV5PositionSetTpslMode(e)}privatePostV5PositionSetRiskLimit(e){return this.privatePostV5PositionSetRiskLimit(e)}privatePostV5PositionTradingStop(e){return this.privatePostV5PositionTradingStop(e)}privatePostV5AccountUpgradeToUta(e){return this.privatePostV5AccountUpgradeToUta(e)}privatePostV5AccountSetMarginMode(e){return this.privatePostV5AccountSetMarginMode(e)}privatePostV5AssetTransferInterTransfer(e){return this.privatePostV5AssetTransferInterTransfer(e)}privatePostV5AssetTransferSaveTransferSubMember(e){return this.privatePostV5AssetTransferSaveTransferSubMember(e)}privatePostV5AssetTransferUniversalTransfer(e){return this.privatePostV5AssetTransferUniversalTransfer(e)}privatePostV5AssetDepositDepositToAccount(e){return this.privatePostV5AssetDepositDepositToAccount(e)}privatePostV5AssetWithdrawCreate(e){return this.privatePostV5AssetWithdrawCreate(e)}privatePostV5AssetWithdrawCancel(e){return this.privatePostV5AssetWithdrawCancel(e)}privatePostV5SpotLeverTokenPurchase(e){return this.privatePostV5SpotLeverTokenPurchase(e)}privatePostV5SpotLeverTokenRedeem(e){return this.privatePostV5SpotLeverTokenRedeem(e)}privatePostV5SpotLeverTokenOrderRecord(e){return this.privatePostV5SpotLeverTokenOrderRecord(e)}privatePostV5SpotMarginTradeSwitchMode(e){return this.privatePostV5SpotMarginTradeSwitchMode(e)}privatePostV5SpotMarginTradeSetLeverage(e){return this.privatePostV5SpotMarginTradeSetLeverage(e)}privatePostV5UserCreateSubMember(e){return this.privatePostV5UserCreateSubMember(e)}privatePostV5UserCreateSubApi(e){return this.privatePostV5UserCreateSubApi(e)}privatePostV5UserFrozenSubMember(e){return this.privatePostV5UserFrozenSubMember(e)}privatePostV5UserUpdateApi(e){return this.privatePostV5UserUpdateApi(e)}privatePostV5UserUpdateSubApi(e){return this.privatePostV5UserUpdateSubApi(e)}privatePostV5UserDeleteApi(e){return this.privatePostV5UserDeleteApi(e)}privatePostV5UserDeleteSubApi(e){return this.privatePostV5UserDeleteSubApi(e)}privateDeleteSpotV1Order(e){return this.privateDeleteSpotV1Order(e)}privateDeleteSpotV1OrderFast(e){return this.privateDeleteSpotV1OrderFast(e)}privateDeleteSpotOrderBatchCancel(e){return this.privateDeleteSpotOrderBatchCancel(e)}privateDeleteSpotOrderBatchFastCancel(e){return this.privateDeleteSpotOrderBatchFastCancel(e)}privateDeleteSpotOrderBatchCancelByIds(e){return this.privateDeleteSpotOrderBatchCancelByIds(e)}}},1006:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCurrencyProfile(e){return this.publicGetCurrencyProfile(e)}publicGetCurrencyLimits(e){return this.publicGetCurrencyLimits(e)}publicGetLastPricePair(e){return this.publicGetLastPricePair(e)}publicGetLastPricesCurrencies(e){return this.publicGetLastPricesCurrencies(e)}publicGetOhlcvHdYyyymmddPair(e){return this.publicGetOhlcvHdYyyymmddPair(e)}publicGetOrderBookPair(e){return this.publicGetOrderBookPair(e)}publicGetTickerPair(e){return this.publicGetTickerPair(e)}publicGetTickersCurrencies(e){return this.publicGetTickersCurrencies(e)}publicGetTradeHistoryPair(e){return this.publicGetTradeHistoryPair(e)}publicPostConvertPair(e){return this.publicPostConvertPair(e)}publicPostPriceStatsPair(e){return this.publicPostPriceStatsPair(e)}privatePostActiveOrdersStatus(e){return this.privatePostActiveOrdersStatus(e)}privatePostArchivedOrdersPair(e){return this.privatePostArchivedOrdersPair(e)}privatePostBalance(e){return this.privatePostBalance(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostCancelOrdersPair(e){return this.privatePostCancelOrdersPair(e)}privatePostCancelReplaceOrderPair(e){return this.privatePostCancelReplaceOrderPair(e)}privatePostClosePositionPair(e){return this.privatePostClosePositionPair(e)}privatePostGetAddress(e){return this.privatePostGetAddress(e)}privatePostGetCryptoAddress(e){return this.privatePostGetCryptoAddress(e)}privatePostGetMyfee(e){return this.privatePostGetMyfee(e)}privatePostGetOrder(e){return this.privatePostGetOrder(e)}privatePostGetOrderTx(e){return this.privatePostGetOrderTx(e)}privatePostOpenOrdersPair(e){return this.privatePostOpenOrdersPair(e)}privatePostOpenOrders(e){return this.privatePostOpenOrders(e)}privatePostOpenPositionPair(e){return this.privatePostOpenPositionPair(e)}privatePostOpenPositionsPair(e){return this.privatePostOpenPositionsPair(e)}privatePostPlaceOrderPair(e){return this.privatePostPlaceOrderPair(e)}privatePostRawTxHistory(e){return this.privatePostRawTxHistory(e)}}},2456:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{v2PublicGetCurrencies(e){return this.v2PublicGetCurrencies(e)}v2PublicGetTime(e){return this.v2PublicGetTime(e)}v2PublicGetExchangeRates(e){return this.v2PublicGetExchangeRates(e)}v2PublicGetUsersUserId(e){return this.v2PublicGetUsersUserId(e)}v2PublicGetPricesSymbolBuy(e){return this.v2PublicGetPricesSymbolBuy(e)}v2PublicGetPricesSymbolSell(e){return this.v2PublicGetPricesSymbolSell(e)}v2PublicGetPricesSymbolSpot(e){return this.v2PublicGetPricesSymbolSpot(e)}v2PrivateGetAccounts(e){return this.v2PrivateGetAccounts(e)}v2PrivateGetAccountsAccountId(e){return this.v2PrivateGetAccountsAccountId(e)}v2PrivateGetAccountsAccountIdAddresses(e){return this.v2PrivateGetAccountsAccountIdAddresses(e)}v2PrivateGetAccountsAccountIdAddressesAddressId(e){return this.v2PrivateGetAccountsAccountIdAddressesAddressId(e)}v2PrivateGetAccountsAccountIdAddressesAddressIdTransactions(e){return this.v2PrivateGetAccountsAccountIdAddressesAddressIdTransactions(e)}v2PrivateGetAccountsAccountIdTransactions(e){return this.v2PrivateGetAccountsAccountIdTransactions(e)}v2PrivateGetAccountsAccountIdTransactionsTransactionId(e){return this.v2PrivateGetAccountsAccountIdTransactionsTransactionId(e)}v2PrivateGetAccountsAccountIdBuys(e){return this.v2PrivateGetAccountsAccountIdBuys(e)}v2PrivateGetAccountsAccountIdBuysBuyId(e){return this.v2PrivateGetAccountsAccountIdBuysBuyId(e)}v2PrivateGetAccountsAccountIdSells(e){return this.v2PrivateGetAccountsAccountIdSells(e)}v2PrivateGetAccountsAccountIdSellsSellId(e){return this.v2PrivateGetAccountsAccountIdSellsSellId(e)}v2PrivateGetAccountsAccountIdDeposits(e){return this.v2PrivateGetAccountsAccountIdDeposits(e)}v2PrivateGetAccountsAccountIdDepositsDepositId(e){return this.v2PrivateGetAccountsAccountIdDepositsDepositId(e)}v2PrivateGetAccountsAccountIdWithdrawals(e){return this.v2PrivateGetAccountsAccountIdWithdrawals(e)}v2PrivateGetAccountsAccountIdWithdrawalsWithdrawalId(e){return this.v2PrivateGetAccountsAccountIdWithdrawalsWithdrawalId(e)}v2PrivateGetPaymentMethods(e){return this.v2PrivateGetPaymentMethods(e)}v2PrivateGetPaymentMethodsPaymentMethodId(e){return this.v2PrivateGetPaymentMethodsPaymentMethodId(e)}v2PrivateGetUser(e){return this.v2PrivateGetUser(e)}v2PrivateGetUserAuth(e){return this.v2PrivateGetUserAuth(e)}v2PrivatePostAccounts(e){return this.v2PrivatePostAccounts(e)}v2PrivatePostAccountsAccountIdPrimary(e){return this.v2PrivatePostAccountsAccountIdPrimary(e)}v2PrivatePostAccountsAccountIdAddresses(e){return this.v2PrivatePostAccountsAccountIdAddresses(e)}v2PrivatePostAccountsAccountIdTransactions(e){return this.v2PrivatePostAccountsAccountIdTransactions(e)}v2PrivatePostAccountsAccountIdTransactionsTransactionIdComplete(e){return this.v2PrivatePostAccountsAccountIdTransactionsTransactionIdComplete(e)}v2PrivatePostAccountsAccountIdTransactionsTransactionIdResend(e){return this.v2PrivatePostAccountsAccountIdTransactionsTransactionIdResend(e)}v2PrivatePostAccountsAccountIdBuys(e){return this.v2PrivatePostAccountsAccountIdBuys(e)}v2PrivatePostAccountsAccountIdBuysBuyIdCommit(e){return this.v2PrivatePostAccountsAccountIdBuysBuyIdCommit(e)}v2PrivatePostAccountsAccountIdSells(e){return this.v2PrivatePostAccountsAccountIdSells(e)}v2PrivatePostAccountsAccountIdSellsSellIdCommit(e){return this.v2PrivatePostAccountsAccountIdSellsSellIdCommit(e)}v2PrivatePostAccountsAccountIdDeposits(e){return this.v2PrivatePostAccountsAccountIdDeposits(e)}v2PrivatePostAccountsAccountIdDepositsDepositIdCommit(e){return this.v2PrivatePostAccountsAccountIdDepositsDepositIdCommit(e)}v2PrivatePostAccountsAccountIdWithdrawals(e){return this.v2PrivatePostAccountsAccountIdWithdrawals(e)}v2PrivatePostAccountsAccountIdWithdrawalsWithdrawalIdCommit(e){return this.v2PrivatePostAccountsAccountIdWithdrawalsWithdrawalIdCommit(e)}v2PrivatePutAccountsAccountId(e){return this.v2PrivatePutAccountsAccountId(e)}v2PrivatePutUser(e){return this.v2PrivatePutUser(e)}v2PrivateDeleteAccountsId(e){return this.v2PrivateDeleteAccountsId(e)}v2PrivateDeleteAccountsAccountIdTransactionsTransactionId(e){return this.v2PrivateDeleteAccountsAccountIdTransactionsTransactionId(e)}v3PrivateGetBrokerageAccounts(e){return this.v3PrivateGetBrokerageAccounts(e)}v3PrivateGetBrokerageAccountsAccountUuid(e){return this.v3PrivateGetBrokerageAccountsAccountUuid(e)}v3PrivateGetBrokerageOrdersHistoricalBatch(e){return this.v3PrivateGetBrokerageOrdersHistoricalBatch(e)}v3PrivateGetBrokerageOrdersHistoricalFills(e){return this.v3PrivateGetBrokerageOrdersHistoricalFills(e)}v3PrivateGetBrokerageOrdersHistoricalOrderId(e){return this.v3PrivateGetBrokerageOrdersHistoricalOrderId(e)}v3PrivateGetBrokerageProducts(e){return this.v3PrivateGetBrokerageProducts(e)}v3PrivateGetBrokerageProductsProductId(e){return this.v3PrivateGetBrokerageProductsProductId(e)}v3PrivateGetBrokerageProductsProductIdCandles(e){return this.v3PrivateGetBrokerageProductsProductIdCandles(e)}v3PrivateGetBrokerageProductsProductIdTicker(e){return this.v3PrivateGetBrokerageProductsProductIdTicker(e)}v3PrivateGetBrokerageTransactionSummary(e){return this.v3PrivateGetBrokerageTransactionSummary(e)}v3PrivatePostBrokerageOrders(e){return this.v3PrivatePostBrokerageOrders(e)}v3PrivatePostBrokerageOrdersBatchCancel(e){return this.v3PrivatePostBrokerageOrdersBatchCancel(e)}}},2925:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetProducts(e){return this.publicGetProducts(e)}publicGetProductsId(e){return this.publicGetProductsId(e)}publicGetProductsIdBook(e){return this.publicGetProductsIdBook(e)}publicGetProductsIdCandles(e){return this.publicGetProductsIdCandles(e)}publicGetProductsIdStats(e){return this.publicGetProductsIdStats(e)}publicGetProductsIdTicker(e){return this.publicGetProductsIdTicker(e)}publicGetProductsIdTrades(e){return this.publicGetProductsIdTrades(e)}publicGetTime(e){return this.publicGetTime(e)}publicGetProductsSparkLines(e){return this.publicGetProductsSparkLines(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetAccountsId(e){return this.privateGetAccountsId(e)}privateGetAccountsIdHolds(e){return this.privateGetAccountsIdHolds(e)}privateGetAccountsIdLedger(e){return this.privateGetAccountsIdLedger(e)}privateGetAccountsIdTransfers(e){return this.privateGetAccountsIdTransfers(e)}privateGetCoinbaseAccounts(e){return this.privateGetCoinbaseAccounts(e)}privateGetFills(e){return this.privateGetFills(e)}privateGetFunding(e){return this.privateGetFunding(e)}privateGetFees(e){return this.privateGetFees(e)}privateGetMarginProfileInformation(e){return this.privateGetMarginProfileInformation(e)}privateGetMarginBuyingPower(e){return this.privateGetMarginBuyingPower(e)}privateGetMarginWithdrawalPower(e){return this.privateGetMarginWithdrawalPower(e)}privateGetMarginWithdrawalPowerAll(e){return this.privateGetMarginWithdrawalPowerAll(e)}privateGetMarginExitPlan(e){return this.privateGetMarginExitPlan(e)}privateGetMarginLiquidationHistory(e){return this.privateGetMarginLiquidationHistory(e)}privateGetMarginPositionRefreshAmounts(e){return this.privateGetMarginPositionRefreshAmounts(e)}privateGetMarginStatus(e){return this.privateGetMarginStatus(e)}privateGetOracle(e){return this.privateGetOracle(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersId(e){return this.privateGetOrdersId(e)}privateGetOrdersClientClientOid(e){return this.privateGetOrdersClientClientOid(e)}privateGetOtcOrders(e){return this.privateGetOtcOrders(e)}privateGetPaymentMethods(e){return this.privateGetPaymentMethods(e)}privateGetPosition(e){return this.privateGetPosition(e)}privateGetProfiles(e){return this.privateGetProfiles(e)}privateGetProfilesId(e){return this.privateGetProfilesId(e)}privateGetReportsReportId(e){return this.privateGetReportsReportId(e)}privateGetTransfers(e){return this.privateGetTransfers(e)}privateGetTransfersTransferId(e){return this.privateGetTransfersTransferId(e)}privateGetUsersSelfExchangeLimits(e){return this.privateGetUsersSelfExchangeLimits(e)}privateGetUsersSelfHoldBalances(e){return this.privateGetUsersSelfHoldBalances(e)}privateGetUsersSelfTrailingVolume(e){return this.privateGetUsersSelfTrailingVolume(e)}privateGetWithdrawalsFeeEstimate(e){return this.privateGetWithdrawalsFeeEstimate(e)}privateGetConversionsConversionId(e){return this.privateGetConversionsConversionId(e)}privatePostConversions(e){return this.privatePostConversions(e)}privatePostDepositsCoinbaseAccount(e){return this.privatePostDepositsCoinbaseAccount(e)}privatePostDepositsPaymentMethod(e){return this.privatePostDepositsPaymentMethod(e)}privatePostCoinbaseAccountsIdAddresses(e){return this.privatePostCoinbaseAccountsIdAddresses(e)}privatePostFundingRepay(e){return this.privatePostFundingRepay(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostPositionClose(e){return this.privatePostPositionClose(e)}privatePostProfilesMarginTransfer(e){return this.privatePostProfilesMarginTransfer(e)}privatePostProfilesTransfer(e){return this.privatePostProfilesTransfer(e)}privatePostReports(e){return this.privatePostReports(e)}privatePostWithdrawalsCoinbase(e){return this.privatePostWithdrawalsCoinbase(e)}privatePostWithdrawalsCoinbaseAccount(e){return this.privatePostWithdrawalsCoinbaseAccount(e)}privatePostWithdrawalsCrypto(e){return this.privatePostWithdrawalsCrypto(e)}privatePostWithdrawalsPaymentMethod(e){return this.privatePostWithdrawalsPaymentMethod(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrdersClientClientOid(e){return this.privateDeleteOrdersClientClientOid(e)}privateDeleteOrdersId(e){return this.privateDeleteOrdersId(e)}}},7089:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetExchangeOrdersRate(e){return this.publicGetExchangeOrdersRate(e)}publicGetOrderBooks(e){return this.publicGetOrderBooks(e)}publicGetRatePair(e){return this.publicGetRatePair(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTrades(e){return this.publicGetTrades(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetAccountsBalance(e){return this.privateGetAccountsBalance(e)}privateGetAccountsLeverageBalance(e){return this.privateGetAccountsLeverageBalance(e)}privateGetBankAccounts(e){return this.privateGetBankAccounts(e)}privateGetDepositMoney(e){return this.privateGetDepositMoney(e)}privateGetExchangeOrdersOpens(e){return this.privateGetExchangeOrdersOpens(e)}privateGetExchangeOrdersTransactions(e){return this.privateGetExchangeOrdersTransactions(e)}privateGetExchangeOrdersTransactionsPagination(e){return this.privateGetExchangeOrdersTransactionsPagination(e)}privateGetExchangeLeveragePositions(e){return this.privateGetExchangeLeveragePositions(e)}privateGetLendingBorrowsMatches(e){return this.privateGetLendingBorrowsMatches(e)}privateGetSendMoney(e){return this.privateGetSendMoney(e)}privateGetWithdraws(e){return this.privateGetWithdraws(e)}privatePostBankAccounts(e){return this.privatePostBankAccounts(e)}privatePostDepositMoneyIdFast(e){return this.privatePostDepositMoneyIdFast(e)}privatePostExchangeOrders(e){return this.privatePostExchangeOrders(e)}privatePostExchangeTransfersToLeverage(e){return this.privatePostExchangeTransfersToLeverage(e)}privatePostExchangeTransfersFromLeverage(e){return this.privatePostExchangeTransfersFromLeverage(e)}privatePostLendingBorrows(e){return this.privatePostLendingBorrows(e)}privatePostLendingBorrowsIdRepay(e){return this.privatePostLendingBorrowsIdRepay(e)}privatePostSendMoney(e){return this.privatePostSendMoney(e)}privatePostWithdraws(e){return this.privatePostWithdraws(e)}privateDeleteBankAccountsId(e){return this.privateDeleteBankAccountsId(e)}privateDeleteExchangeOrdersId(e){return this.privateDeleteExchangeOrdersId(e)}privateDeleteWithdrawsId(e){return this.privateDeleteWithdrawsId(e)}}},8519:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetAmmMarket(e){return this.publicGetAmmMarket(e)}publicGetCommonCurrencyRate(e){return this.publicGetCommonCurrencyRate(e)}publicGetCommonAssetConfig(e){return this.publicGetCommonAssetConfig(e)}publicGetCommonMaintainInfo(e){return this.publicGetCommonMaintainInfo(e)}publicGetCommonTempMaintainInfo(e){return this.publicGetCommonTempMaintainInfo(e)}publicGetMarginMarket(e){return this.publicGetMarginMarket(e)}publicGetMarketInfo(e){return this.publicGetMarketInfo(e)}publicGetMarketList(e){return this.publicGetMarketList(e)}publicGetMarketTicker(e){return this.publicGetMarketTicker(e)}publicGetMarketTickerAll(e){return this.publicGetMarketTickerAll(e)}publicGetMarketDepth(e){return this.publicGetMarketDepth(e)}publicGetMarketDeals(e){return this.publicGetMarketDeals(e)}publicGetMarketKline(e){return this.publicGetMarketKline(e)}publicGetMarketDetail(e){return this.publicGetMarketDetail(e)}privateGetAccountAmmBalance(e){return this.privateGetAccountAmmBalance(e)}privateGetAccountInvestmentBalance(e){return this.privateGetAccountInvestmentBalance(e)}privateGetAccountBalanceHistory(e){return this.privateGetAccountBalanceHistory(e)}privateGetAccountMarketFee(e){return this.privateGetAccountMarketFee(e)}privateGetBalanceCoinDeposit(e){return this.privateGetBalanceCoinDeposit(e)}privateGetBalanceCoinWithdraw(e){return this.privateGetBalanceCoinWithdraw(e)}privateGetBalanceInfo(e){return this.privateGetBalanceInfo(e)}privateGetBalanceDepositAddressCoinType(e){return this.privateGetBalanceDepositAddressCoinType(e)}privateGetContractTransferHistory(e){return this.privateGetContractTransferHistory(e)}privateGetCreditInfo(e){return this.privateGetCreditInfo(e)}privateGetCreditBalance(e){return this.privateGetCreditBalance(e)}privateGetInvestmentTransferHistory(e){return this.privateGetInvestmentTransferHistory(e)}privateGetMarginAccount(e){return this.privateGetMarginAccount(e)}privateGetMarginConfig(e){return this.privateGetMarginConfig(e)}privateGetMarginLoanHistory(e){return this.privateGetMarginLoanHistory(e)}privateGetMarginTransferHistory(e){return this.privateGetMarginTransferHistory(e)}privateGetOrderDeals(e){return this.privateGetOrderDeals(e)}privateGetOrderFinished(e){return this.privateGetOrderFinished(e)}privateGetOrderPending(e){return this.privateGetOrderPending(e)}privateGetOrderStatus(e){return this.privateGetOrderStatus(e)}privateGetOrderStatusBatch(e){return this.privateGetOrderStatusBatch(e)}privateGetOrderUserDeals(e){return this.privateGetOrderUserDeals(e)}privateGetOrderStopFinished(e){return this.privateGetOrderStopFinished(e)}privateGetOrderStopPending(e){return this.privateGetOrderStopPending(e)}privateGetOrderUserTradeFee(e){return this.privateGetOrderUserTradeFee(e)}privateGetOrderMarketTradeInfo(e){return this.privateGetOrderMarketTradeInfo(e)}privateGetSubAccountBalance(e){return this.privateGetSubAccountBalance(e)}privateGetSubAccountTransferHistory(e){return this.privateGetSubAccountTransferHistory(e)}privateGetSubAccountAuthApiUserAuthId(e){return this.privateGetSubAccountAuthApiUserAuthId(e)}privatePostBalanceCoinWithdraw(e){return this.privatePostBalanceCoinWithdraw(e)}privatePostContractBalanceTransfer(e){return this.privatePostContractBalanceTransfer(e)}privatePostMarginFlat(e){return this.privatePostMarginFlat(e)}privatePostMarginLoan(e){return this.privatePostMarginLoan(e)}privatePostMarginTransfer(e){return this.privatePostMarginTransfer(e)}privatePostOrderLimitBatch(e){return this.privatePostOrderLimitBatch(e)}privatePostOrderIoc(e){return this.privatePostOrderIoc(e)}privatePostOrderLimit(e){return this.privatePostOrderLimit(e)}privatePostOrderMarket(e){return this.privatePostOrderMarket(e)}privatePostOrderModify(e){return this.privatePostOrderModify(e)}privatePostOrderStopLimit(e){return this.privatePostOrderStopLimit(e)}privatePostOrderStopMarket(e){return this.privatePostOrderStopMarket(e)}privatePostOrderStopModify(e){return this.privatePostOrderStopModify(e)}privatePostSubAccountTransfer(e){return this.privatePostSubAccountTransfer(e)}privatePostSubAccountRegister(e){return this.privatePostSubAccountRegister(e)}privatePostSubAccountUnfrozen(e){return this.privatePostSubAccountUnfrozen(e)}privatePostSubAccountFrozen(e){return this.privatePostSubAccountFrozen(e)}privatePostSubAccountAuthApi(e){return this.privatePostSubAccountAuthApi(e)}privatePutBalanceDepositAddressCoinType(e){return this.privatePutBalanceDepositAddressCoinType(e)}privatePutSubAccountAuthApiUserAuthId(e){return this.privatePutSubAccountAuthApiUserAuthId(e)}privatePutV1AccountSettings(e){return this.privatePutV1AccountSettings(e)}privateDeleteBalanceCoinWithdraw(e){return this.privateDeleteBalanceCoinWithdraw(e)}privateDeleteOrderPendingBatch(e){return this.privateDeleteOrderPendingBatch(e)}privateDeleteOrderPending(e){return this.privateDeleteOrderPending(e)}privateDeleteOrderStopPending(e){return this.privateDeleteOrderStopPending(e)}privateDeleteOrderStopPendingId(e){return this.privateDeleteOrderStopPendingId(e)}privateDeleteSubAccountAuthApiUserAuthId(e){return this.privateDeleteSubAccountAuthApiUserAuthId(e)}perpetualPublicGetPing(e){return this.perpetualPublicGetPing(e)}perpetualPublicGetTime(e){return this.perpetualPublicGetTime(e)}perpetualPublicGetMarketList(e){return this.perpetualPublicGetMarketList(e)}perpetualPublicGetMarketLimitConfig(e){return this.perpetualPublicGetMarketLimitConfig(e)}perpetualPublicGetMarketTicker(e){return this.perpetualPublicGetMarketTicker(e)}perpetualPublicGetMarketTickerAll(e){return this.perpetualPublicGetMarketTickerAll(e)}perpetualPublicGetMarketDepth(e){return this.perpetualPublicGetMarketDepth(e)}perpetualPublicGetMarketDeals(e){return this.perpetualPublicGetMarketDeals(e)}perpetualPublicGetMarketFundingHistory(e){return this.perpetualPublicGetMarketFundingHistory(e)}perpetualPublicGetMarketUserDeals(e){return this.perpetualPublicGetMarketUserDeals(e)}perpetualPublicGetMarketKline(e){return this.perpetualPublicGetMarketKline(e)}perpetualPrivateGetAssetQuery(e){return this.perpetualPrivateGetAssetQuery(e)}perpetualPrivateGetOrderPending(e){return this.perpetualPrivateGetOrderPending(e)}perpetualPrivateGetOrderFinished(e){return this.perpetualPrivateGetOrderFinished(e)}perpetualPrivateGetOrderStopFinished(e){return this.perpetualPrivateGetOrderStopFinished(e)}perpetualPrivateGetOrderStopPending(e){return this.perpetualPrivateGetOrderStopPending(e)}perpetualPrivateGetOrderStatus(e){return this.perpetualPrivateGetOrderStatus(e)}perpetualPrivateGetOrderStopStatus(e){return this.perpetualPrivateGetOrderStopStatus(e)}perpetualPrivateGetPositionPending(e){return this.perpetualPrivateGetPositionPending(e)}perpetualPrivateGetPositionFunding(e){return this.perpetualPrivateGetPositionFunding(e)}perpetualPrivatePostMarketAdjustLeverage(e){return this.perpetualPrivatePostMarketAdjustLeverage(e)}perpetualPrivatePostMarketPositionExpect(e){return this.perpetualPrivatePostMarketPositionExpect(e)}perpetualPrivatePostOrderPutLimit(e){return this.perpetualPrivatePostOrderPutLimit(e)}perpetualPrivatePostOrderPutMarket(e){return this.perpetualPrivatePostOrderPutMarket(e)}perpetualPrivatePostOrderPutStopLimit(e){return this.perpetualPrivatePostOrderPutStopLimit(e)}perpetualPrivatePostOrderPutStopMarket(e){return this.perpetualPrivatePostOrderPutStopMarket(e)}perpetualPrivatePostOrderModify(e){return this.perpetualPrivatePostOrderModify(e)}perpetualPrivatePostOrderModifyStop(e){return this.perpetualPrivatePostOrderModifyStop(e)}perpetualPrivatePostOrderCancel(e){return this.perpetualPrivatePostOrderCancel(e)}perpetualPrivatePostOrderCancelAll(e){return this.perpetualPrivatePostOrderCancelAll(e)}perpetualPrivatePostOrderCancelBatch(e){return this.perpetualPrivatePostOrderCancelBatch(e)}perpetualPrivatePostOrderCancelStop(e){return this.perpetualPrivatePostOrderCancelStop(e)}perpetualPrivatePostOrderCancelStopAll(e){return this.perpetualPrivatePostOrderCancelStopAll(e)}perpetualPrivatePostOrderCloseLimit(e){return this.perpetualPrivatePostOrderCloseLimit(e)}perpetualPrivatePostOrderCloseMarket(e){return this.perpetualPrivatePostOrderCloseMarket(e)}perpetualPrivatePostPositionAdjustMargin(e){return this.perpetualPrivatePostPositionAdjustMargin(e)}perpetualPrivatePostPositionStopLoss(e){return this.perpetualPrivatePostPositionStopLoss(e)}perpetualPrivatePostPositionTakeProfit(e){return this.perpetualPrivatePostPositionTakeProfit(e)}perpetualPrivatePostPositionMarketClose(e){return this.perpetualPrivatePostPositionMarketClose(e)}}},4507:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetMarketsMarket(e){return this.publicGetMarketsMarket(e)}publicGetMarketsMarketOrders(e){return this.publicGetMarketsMarketOrders(e)}publicGetMarketsMarketTrades(e){return this.publicGetMarketsMarketTrades(e)}privateGetUserAccounts(e){return this.privateGetUserAccounts(e)}privateGetUserOrders(e){return this.privateGetUserOrders(e)}privateGetUserOrdersId(e){return this.privateGetUserOrdersId(e)}privateGetUserOrdersIdTrades(e){return this.privateGetUserOrdersIdTrades(e)}privateGetUserTrades(e){return this.privateGetUserTrades(e)}privateGetUserFees(e){return this.privateGetUserFees(e)}privateGetAccountWithdrawalsId(e){return this.privateGetAccountWithdrawalsId(e)}privateGetAccountWithdrawals(e){return this.privateGetAccountWithdrawals(e)}privateGetAccountDepositId(e){return this.privateGetAccountDepositId(e)}privateGetAccountDeposits(e){return this.privateGetAccountDeposits(e)}privateGetAccountDepositAddress(e){return this.privateGetAccountDepositAddress(e)}privatePostUserOrders(e){return this.privatePostUserOrders(e)}privatePostAccountWithdraw(e){return this.privatePostAccountWithdraw(e)}privateDeleteUserOrdersId(e){return this.privateDeleteUserOrdersId(e)}privateDeleteAccountWithdrawalsId(e){return this.privateDeleteAccountWithdrawalsId(e)}}},7044:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetOrderBook(e){return this.publicGetOrderBook(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTransactions(e){return this.publicGetTransactions(e)}publicGetTradingPairs(e){return this.publicGetTradingPairs(e)}privatePostBalances(e){return this.privatePostBalances(e)}privatePostBitcoinCashWithdrawal(e){return this.privatePostBitcoinCashWithdrawal(e)}privatePostBitcoinCashDepositAddresses(e){return this.privatePostBitcoinCashDepositAddresses(e)}privatePostBitcoinDepositAddresses(e){return this.privatePostBitcoinDepositAddresses(e)}privatePostBitcoinWithdrawal(e){return this.privatePostBitcoinWithdrawal(e)}privatePostBitcoinWithdrawalFees(e){return this.privatePostBitcoinWithdrawalFees(e)}privatePostBuyInstant(e){return this.privatePostBuyInstant(e)}privatePostBuyLimit(e){return this.privatePostBuyLimit(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostCancelOrderWithInfo(e){return this.privatePostCancelOrderWithInfo(e)}privatePostCreateVoucher(e){return this.privatePostCreateVoucher(e)}privatePostDashDepositAddresses(e){return this.privatePostDashDepositAddresses(e)}privatePostDashWithdrawal(e){return this.privatePostDashWithdrawal(e)}privatePostEthereumWithdrawal(e){return this.privatePostEthereumWithdrawal(e)}privatePostEthereumDepositAddresses(e){return this.privatePostEthereumDepositAddresses(e)}privatePostLitecoinWithdrawal(e){return this.privatePostLitecoinWithdrawal(e)}privatePostLitecoinDepositAddresses(e){return this.privatePostLitecoinDepositAddresses(e)}privatePostOpenOrders(e){return this.privatePostOpenOrders(e)}privatePostOrder(e){return this.privatePostOrder(e)}privatePostOrderHistory(e){return this.privatePostOrderHistory(e)}privatePostOrderById(e){return this.privatePostOrderById(e)}privatePostPusherAuth(e){return this.privatePostPusherAuth(e)}privatePostRedeemVoucher(e){return this.privatePostRedeemVoucher(e)}privatePostReplaceByBuyLimit(e){return this.privatePostReplaceByBuyLimit(e)}privatePostReplaceByBuyInstant(e){return this.privatePostReplaceByBuyInstant(e)}privatePostReplaceBySellLimit(e){return this.privatePostReplaceBySellLimit(e)}privatePostReplaceBySellInstant(e){return this.privatePostReplaceBySellInstant(e)}privatePostRippleDepositAddresses(e){return this.privatePostRippleDepositAddresses(e)}privatePostRippleWithdrawal(e){return this.privatePostRippleWithdrawal(e)}privatePostSellInstant(e){return this.privatePostSellInstant(e)}privatePostSellLimit(e){return this.privatePostSellLimit(e)}privatePostTransactionHistory(e){return this.privatePostTransactionHistory(e)}privatePostTraderFees(e){return this.privatePostTraderFees(e)}privatePostTradeHistory(e){return this.privatePostTradeHistory(e)}privatePostTransfer(e){return this.privatePostTransfer(e)}privatePostTransferHistory(e){return this.privatePostTransferHistory(e)}privatePostUnconfirmedBitcoinDeposits(e){return this.privatePostUnconfirmedBitcoinDeposits(e)}privatePostUnconfirmedBitcoinCashDeposits(e){return this.privatePostUnconfirmedBitcoinCashDeposits(e)}privatePostUnconfirmedDashDeposits(e){return this.privatePostUnconfirmedDashDeposits(e)}privatePostUnconfirmedEthereumDeposits(e){return this.privatePostUnconfirmedEthereumDeposits(e)}privatePostUnconfirmedLitecoinDeposits(e){return this.privatePostUnconfirmedLitecoinDeposits(e)}privatePostUnconfirmedRippleDeposits(e){return this.privatePostUnconfirmedRippleDeposits(e)}}},3767:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetOrderbook(e){return this.publicGetOrderbook(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetTicker(e){return this.publicGetTicker(e)}privatePostAccountDepositAddress(e){return this.privatePostAccountDepositAddress(e)}privatePostAccountBtcDepositAddress(e){return this.privatePostAccountBtcDepositAddress(e)}privatePostAccountBalance(e){return this.privatePostAccountBalance(e)}privatePostAccountDailyBalance(e){return this.privatePostAccountDailyBalance(e)}privatePostAccountUserInfo(e){return this.privatePostAccountUserInfo(e)}privatePostAccountVirtualAccount(e){return this.privatePostAccountVirtualAccount(e)}privatePostOrderCancelAll(e){return this.privatePostOrderCancelAll(e)}privatePostOrderCancel(e){return this.privatePostOrderCancel(e)}privatePostOrderLimitBuy(e){return this.privatePostOrderLimitBuy(e)}privatePostOrderLimitSell(e){return this.privatePostOrderLimitSell(e)}privatePostOrderCompleteOrders(e){return this.privatePostOrderCompleteOrders(e)}privatePostOrderLimitOrders(e){return this.privatePostOrderLimitOrders(e)}privatePostOrderOrderInfo(e){return this.privatePostOrderOrderInfo(e)}privatePostTransactionAuthNumber(e){return this.privatePostTransactionAuthNumber(e)}privatePostTransactionHistory(e){return this.privatePostTransactionHistory(e)}privatePostTransactionKrwHistory(e){return this.privatePostTransactionKrwHistory(e)}privatePostTransactionBtc(e){return this.privatePostTransactionBtc(e)}privatePostTransactionCoin(e){return this.privatePostTransactionCoin(e)}}},435:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetOpenapiV1Ping(e){return this.publicGetOpenapiV1Ping(e)}publicGetOpenapiV1Time(e){return this.publicGetOpenapiV1Time(e)}publicGetOpenapiQuoteV1Ticker24hr(e){return this.publicGetOpenapiQuoteV1Ticker24hr(e)}publicGetOpenapiQuoteV1TickerPrice(e){return this.publicGetOpenapiQuoteV1TickerPrice(e)}publicGetOpenapiQuoteV1TickerBookTicker(e){return this.publicGetOpenapiQuoteV1TickerBookTicker(e)}publicGetOpenapiV1ExchangeInfo(e){return this.publicGetOpenapiV1ExchangeInfo(e)}publicGetOpenapiQuoteV1Depth(e){return this.publicGetOpenapiQuoteV1Depth(e)}publicGetOpenapiQuoteV1Klines(e){return this.publicGetOpenapiQuoteV1Klines(e)}publicGetOpenapiQuoteV1Trades(e){return this.publicGetOpenapiQuoteV1Trades(e)}publicGetOpenapiV1Pairs(e){return this.publicGetOpenapiV1Pairs(e)}publicGetOpenapiQuoteV1AvgPrice(e){return this.publicGetOpenapiQuoteV1AvgPrice(e)}privateGetOpenapiV1Account(e){return this.privateGetOpenapiV1Account(e)}privateGetOpenapiV1OpenOrders(e){return this.privateGetOpenapiV1OpenOrders(e)}privateGetOpenapiV1AssetTradeFee(e){return this.privateGetOpenapiV1AssetTradeFee(e)}privateGetOpenapiV1Order(e){return this.privateGetOpenapiV1Order(e)}privateGetOpenapiV1HistoryOrders(e){return this.privateGetOpenapiV1HistoryOrders(e)}privateGetOpenapiV1MyTrades(e){return this.privateGetOpenapiV1MyTrades(e)}privateGetOpenapiV1CapitalDepositHistory(e){return this.privateGetOpenapiV1CapitalDepositHistory(e)}privateGetOpenapiV1CapitalWithdrawHistory(e){return this.privateGetOpenapiV1CapitalWithdrawHistory(e)}privatePostOpenapiV1OrderTest(e){return this.privatePostOpenapiV1OrderTest(e)}privatePostOpenapiV1Order(e){return this.privatePostOpenapiV1Order(e)}privatePostOpenapiV1CapitalWithdrawApply(e){return this.privatePostOpenapiV1CapitalWithdrawApply(e)}privatePostOpenapiV1CapitalDepositApply(e){return this.privatePostOpenapiV1CapitalDepositApply(e)}privateDeleteOpenapiV1Order(e){return this.privateDeleteOpenapiV1Order(e)}privateDeleteOpenapiV1OpenOrders(e){return this.privateDeleteOpenapiV1OpenOrders(e)}}},4663:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetLatest(e){return this.publicGetLatest(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersHistory(e){return this.privatePostOrdersHistory(e)}privatePostMyCoinDeposit(e){return this.privatePostMyCoinDeposit(e)}privatePostMyCoinSend(e){return this.privatePostMyCoinSend(e)}privatePostQuoteBuy(e){return this.privatePostQuoteBuy(e)}privatePostQuoteSell(e){return this.privatePostQuoteSell(e)}privatePostMyBalances(e){return this.privatePostMyBalances(e)}privatePostMyOrders(e){return this.privatePostMyOrders(e)}privatePostMyBuy(e){return this.privatePostMyBuy(e)}privatePostMySell(e){return this.privatePostMySell(e)}privatePostMyBuyCancel(e){return this.privatePostMyBuyCancel(e)}privatePostMySellCancel(e){return this.privatePostMySellCancel(e)}privatePostRoMyBalances(e){return this.privatePostRoMyBalances(e)}privatePostRoMyBalancesCointype(e){return this.privatePostRoMyBalancesCointype(e)}privatePostRoMyDeposits(e){return this.privatePostRoMyDeposits(e)}privatePostRoMyWithdrawals(e){return this.privatePostRoMyWithdrawals(e)}privatePostRoMyTransactions(e){return this.privatePostRoMyTransactions(e)}privatePostRoMyTransactionsCointype(e){return this.privatePostRoMyTransactionsCointype(e)}privatePostRoMyTransactionsOpen(e){return this.privatePostRoMyTransactionsOpen(e)}privatePostRoMyTransactionsCointypeOpen(e){return this.privatePostRoMyTransactionsCointypeOpen(e)}privatePostRoMySendreceive(e){return this.privatePostRoMySendreceive(e)}privatePostRoMyAffiliatepayments(e){return this.privatePostRoMyAffiliatepayments(e)}privatePostRoMyReferralpayments(e){return this.privatePostRoMyReferralpayments(e)}}},6450:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{v1PublicGetPublicAuth(e){return this.v1PublicGetPublicAuth(e)}v1PublicGetPublicGetInstruments(e){return this.v1PublicGetPublicGetInstruments(e)}v1PublicGetPublicGetBook(e){return this.v1PublicGetPublicGetBook(e)}v1PublicGetPublicGetCandlestick(e){return this.v1PublicGetPublicGetCandlestick(e)}v1PublicGetPublicGetTrades(e){return this.v1PublicGetPublicGetTrades(e)}v1PublicGetPublicGetTickers(e){return this.v1PublicGetPublicGetTickers(e)}v1PublicGetPublicGetValuations(e){return this.v1PublicGetPublicGetValuations(e)}v1PublicGetPublicGetExpiredSettlementPrice(e){return this.v1PublicGetPublicGetExpiredSettlementPrice(e)}v1PublicGetPublicGetInsurance(e){return this.v1PublicGetPublicGetInsurance(e)}v1PrivatePostPrivateSetCancelOnDisconnect(e){return this.v1PrivatePostPrivateSetCancelOnDisconnect(e)}v1PrivatePostPrivateGetCancelOnDisconnect(e){return this.v1PrivatePostPrivateGetCancelOnDisconnect(e)}v1PrivatePostPrivateUserBalance(e){return this.v1PrivatePostPrivateUserBalance(e)}v1PrivatePostPrivateUserBalanceHistory(e){return this.v1PrivatePostPrivateUserBalanceHistory(e)}v1PrivatePostPrivateGetPositions(e){return this.v1PrivatePostPrivateGetPositions(e)}v1PrivatePostPrivateCreateOrder(e){return this.v1PrivatePostPrivateCreateOrder(e)}v1PrivatePostPrivateCreateOrderList(e){return this.v1PrivatePostPrivateCreateOrderList(e)}v1PrivatePostPrivateCancelOrder(e){return this.v1PrivatePostPrivateCancelOrder(e)}v1PrivatePostPrivateCancelOrderList(e){return this.v1PrivatePostPrivateCancelOrderList(e)}v1PrivatePostPrivateCancelAllOrders(e){return this.v1PrivatePostPrivateCancelAllOrders(e)}v1PrivatePostPrivateClosePosition(e){return this.v1PrivatePostPrivateClosePosition(e)}v1PrivatePostPrivateGetOrderHistory(e){return this.v1PrivatePostPrivateGetOrderHistory(e)}v1PrivatePostPrivateGetOpenOrders(e){return this.v1PrivatePostPrivateGetOpenOrders(e)}v1PrivatePostPrivateGetOrderDetail(e){return this.v1PrivatePostPrivateGetOrderDetail(e)}v1PrivatePostPrivateGetTrades(e){return this.v1PrivatePostPrivateGetTrades(e)}v1PrivatePostPrivateChangeAccountLeverage(e){return this.v1PrivatePostPrivateChangeAccountLeverage(e)}v1PrivatePostPrivateGetTransactions(e){return this.v1PrivatePostPrivateGetTransactions(e)}v1PrivatePostPrivateCreateSubaccountTransfer(e){return this.v1PrivatePostPrivateCreateSubaccountTransfer(e)}v1PrivatePostPrivateGetSubaccountBalances(e){return this.v1PrivatePostPrivateGetSubaccountBalances(e)}v1PrivatePostPrivateGetOrderList(e){return this.v1PrivatePostPrivateGetOrderList(e)}v1PrivatePostPrivateCreateWithdrawal(e){return this.v1PrivatePostPrivateCreateWithdrawal(e)}v1PrivatePostPrivateGetCurrencyNetworks(e){return this.v1PrivatePostPrivateGetCurrencyNetworks(e)}v1PrivatePostPrivateGetDepositAddress(e){return this.v1PrivatePostPrivateGetDepositAddress(e)}v1PrivatePostPrivateGetAccounts(e){return this.v1PrivatePostPrivateGetAccounts(e)}v2PublicGetPublicAuth(e){return this.v2PublicGetPublicAuth(e)}v2PublicGetPublicGetInstruments(e){return this.v2PublicGetPublicGetInstruments(e)}v2PublicGetPublicGetBook(e){return this.v2PublicGetPublicGetBook(e)}v2PublicGetPublicGetCandlestick(e){return this.v2PublicGetPublicGetCandlestick(e)}v2PublicGetPublicGetTicker(e){return this.v2PublicGetPublicGetTicker(e)}v2PublicGetPublicGetTrades(e){return this.v2PublicGetPublicGetTrades(e)}v2PublicGetPublicMarginGetTransferCurrencies(e){return this.v2PublicGetPublicMarginGetTransferCurrencies(e)}v2PublicGetPublicMarginGetLoadCurrenices(e){return this.v2PublicGetPublicMarginGetLoadCurrenices(e)}v2PublicGetPublicRespondHeartbeat(e){return this.v2PublicGetPublicRespondHeartbeat(e)}v2PrivatePostPrivateSetCancelOnDisconnect(e){return this.v2PrivatePostPrivateSetCancelOnDisconnect(e)}v2PrivatePostPrivateGetCancelOnDisconnect(e){return this.v2PrivatePostPrivateGetCancelOnDisconnect(e)}v2PrivatePostPrivateCreateWithdrawal(e){return this.v2PrivatePostPrivateCreateWithdrawal(e)}v2PrivatePostPrivateGetWithdrawalHistory(e){return this.v2PrivatePostPrivateGetWithdrawalHistory(e)}v2PrivatePostPrivateGetCurrencyNetworks(e){return this.v2PrivatePostPrivateGetCurrencyNetworks(e)}v2PrivatePostPrivateGetDepositHistory(e){return this.v2PrivatePostPrivateGetDepositHistory(e)}v2PrivatePostPrivateGetDepositAddress(e){return this.v2PrivatePostPrivateGetDepositAddress(e)}v2PrivatePostPrivateGetAccountSummary(e){return this.v2PrivatePostPrivateGetAccountSummary(e)}v2PrivatePostPrivateCreateOrder(e){return this.v2PrivatePostPrivateCreateOrder(e)}v2PrivatePostPrivateCancelOrder(e){return this.v2PrivatePostPrivateCancelOrder(e)}v2PrivatePostPrivateCancelAllOrders(e){return this.v2PrivatePostPrivateCancelAllOrders(e)}v2PrivatePostPrivateCreateOrderList(e){return this.v2PrivatePostPrivateCreateOrderList(e)}v2PrivatePostPrivateGetOrderHistory(e){return this.v2PrivatePostPrivateGetOrderHistory(e)}v2PrivatePostPrivateGetOpenOrders(e){return this.v2PrivatePostPrivateGetOpenOrders(e)}v2PrivatePostPrivateGetOrderDetail(e){return this.v2PrivatePostPrivateGetOrderDetail(e)}v2PrivatePostPrivateGetTrades(e){return this.v2PrivatePostPrivateGetTrades(e)}v2PrivatePostPrivateMarginGetUserConfig(e){return this.v2PrivatePostPrivateMarginGetUserConfig(e)}v2PrivatePostPrivateMarginGetAccountSummary(e){return this.v2PrivatePostPrivateMarginGetAccountSummary(e)}v2PrivatePostPrivateMarginTransfer(e){return this.v2PrivatePostPrivateMarginTransfer(e)}v2PrivatePostPrivateMarginBorrow(e){return this.v2PrivatePostPrivateMarginBorrow(e)}v2PrivatePostPrivateMarginRepay(e){return this.v2PrivatePostPrivateMarginRepay(e)}v2PrivatePostPrivateMarginGetTransferHistory(e){return this.v2PrivatePostPrivateMarginGetTransferHistory(e)}v2PrivatePostPrivateMarginGetBorrowHistory(e){return this.v2PrivatePostPrivateMarginGetBorrowHistory(e)}v2PrivatePostPrivateMarginGetInterestHistory(e){return this.v2PrivatePostPrivateMarginGetInterestHistory(e)}v2PrivatePostPrivateMarginGetRepayHistory(e){return this.v2PrivatePostPrivateMarginGetRepayHistory(e)}v2PrivatePostPrivateMarginGetLiquidationHistory(e){return this.v2PrivatePostPrivateMarginGetLiquidationHistory(e)}v2PrivatePostPrivateMarginGetLiquidationOrders(e){return this.v2PrivatePostPrivateMarginGetLiquidationOrders(e)}v2PrivatePostPrivateMarginCreateOrder(e){return this.v2PrivatePostPrivateMarginCreateOrder(e)}v2PrivatePostPrivateMarginCancelOrder(e){return this.v2PrivatePostPrivateMarginCancelOrder(e)}v2PrivatePostPrivateMarginCancelAllOrders(e){return this.v2PrivatePostPrivateMarginCancelAllOrders(e)}v2PrivatePostPrivateMarginGetOrderHistory(e){return this.v2PrivatePostPrivateMarginGetOrderHistory(e)}v2PrivatePostPrivateMarginGetOpenOrders(e){return this.v2PrivatePostPrivateMarginGetOpenOrders(e)}v2PrivatePostPrivateMarginGetOrderDetail(e){return this.v2PrivatePostPrivateMarginGetOrderDetail(e)}v2PrivatePostPrivateMarginGetTrades(e){return this.v2PrivatePostPrivateMarginGetTrades(e)}v2PrivatePostPrivateDerivTransfer(e){return this.v2PrivatePostPrivateDerivTransfer(e)}v2PrivatePostPrivateDerivGetTransferHistory(e){return this.v2PrivatePostPrivateDerivGetTransferHistory(e)}v2PrivatePostPrivateGetAccounts(e){return this.v2PrivatePostPrivateGetAccounts(e)}v2PrivatePostPrivateGetSubaccountBalances(e){return this.v2PrivatePostPrivateGetSubaccountBalances(e)}v2PrivatePostPrivateCreateSubaccountTransfer(e){return this.v2PrivatePostPrivateCreateSubaccountTransfer(e)}v2PrivatePostPrivateOtcGetOtcUser(e){return this.v2PrivatePostPrivateOtcGetOtcUser(e)}v2PrivatePostPrivateOtcGetInstruments(e){return this.v2PrivatePostPrivateOtcGetInstruments(e)}v2PrivatePostPrivateOtcRequestQuote(e){return this.v2PrivatePostPrivateOtcRequestQuote(e)}v2PrivatePostPrivateOtcAcceptQuote(e){return this.v2PrivatePostPrivateOtcAcceptQuote(e)}v2PrivatePostPrivateOtcGetQuoteHistory(e){return this.v2PrivatePostPrivateOtcGetQuoteHistory(e)}v2PrivatePostPrivateOtcGetTradeHistory(e){return this.v2PrivatePostPrivateOtcGetTradeHistory(e)}derivativesPublicGetPublicAuth(e){return this.derivativesPublicGetPublicAuth(e)}derivativesPublicGetPublicGetInstruments(e){return this.derivativesPublicGetPublicGetInstruments(e)}derivativesPublicGetPublicGetBook(e){return this.derivativesPublicGetPublicGetBook(e)}derivativesPublicGetPublicGetCandlestick(e){return this.derivativesPublicGetPublicGetCandlestick(e)}derivativesPublicGetPublicGetTrades(e){return this.derivativesPublicGetPublicGetTrades(e)}derivativesPublicGetPublicGetTickers(e){return this.derivativesPublicGetPublicGetTickers(e)}derivativesPublicGetPublicGetValuations(e){return this.derivativesPublicGetPublicGetValuations(e)}derivativesPublicGetPublicGetExpiredSettlementPrice(e){return this.derivativesPublicGetPublicGetExpiredSettlementPrice(e)}derivativesPublicGetPublicGetInsurance(e){return this.derivativesPublicGetPublicGetInsurance(e)}derivativesPrivatePostPrivateSetCancelOnDisconnect(e){return this.derivativesPrivatePostPrivateSetCancelOnDisconnect(e)}derivativesPrivatePostPrivateGetCancelOnDisconnect(e){return this.derivativesPrivatePostPrivateGetCancelOnDisconnect(e)}derivativesPrivatePostPrivateUserBalance(e){return this.derivativesPrivatePostPrivateUserBalance(e)}derivativesPrivatePostPrivateUserBalanceHistory(e){return this.derivativesPrivatePostPrivateUserBalanceHistory(e)}derivativesPrivatePostPrivateGetPositions(e){return this.derivativesPrivatePostPrivateGetPositions(e)}derivativesPrivatePostPrivateCreateOrder(e){return this.derivativesPrivatePostPrivateCreateOrder(e)}derivativesPrivatePostPrivateCreateOrderList(e){return this.derivativesPrivatePostPrivateCreateOrderList(e)}derivativesPrivatePostPrivateCancelOrder(e){return this.derivativesPrivatePostPrivateCancelOrder(e)}derivativesPrivatePostPrivateCancelOrderList(e){return this.derivativesPrivatePostPrivateCancelOrderList(e)}derivativesPrivatePostPrivateCancelAllOrders(e){return this.derivativesPrivatePostPrivateCancelAllOrders(e)}derivativesPrivatePostPrivateClosePosition(e){return this.derivativesPrivatePostPrivateClosePosition(e)}derivativesPrivatePostPrivateConvertCollateral(e){return this.derivativesPrivatePostPrivateConvertCollateral(e)}derivativesPrivatePostPrivateGetOrderHistory(e){return this.derivativesPrivatePostPrivateGetOrderHistory(e)}derivativesPrivatePostPrivateGetOpenOrders(e){return this.derivativesPrivatePostPrivateGetOpenOrders(e)}derivativesPrivatePostPrivateGetOrderDetail(e){return this.derivativesPrivatePostPrivateGetOrderDetail(e)}derivativesPrivatePostPrivateGetTrades(e){return this.derivativesPrivatePostPrivateGetTrades(e)}derivativesPrivatePostPrivateChangeAccountLeverage(e){return this.derivativesPrivatePostPrivateChangeAccountLeverage(e)}derivativesPrivatePostPrivateGetTransactions(e){return this.derivativesPrivatePostPrivateGetTransactions(e)}derivativesPrivatePostPrivateCreateSubaccountTransfer(e){return this.derivativesPrivatePostPrivateCreateSubaccountTransfer(e)}derivativesPrivatePostPrivateGetSubaccountBalances(e){return this.derivativesPrivatePostPrivateGetSubaccountBalances(e)}derivativesPrivatePostPrivateGetOrderList(e){return this.derivativesPrivatePostPrivateGetOrderList(e)}}},1304:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetV1Time(e){return this.publicGetV1Time(e)}publicGetV1ExchangeInfo(e){return this.publicGetV1ExchangeInfo(e)}publicGetV1Depth(e){return this.publicGetV1Depth(e)}publicGetV1AggTrades(e){return this.publicGetV1AggTrades(e)}publicGetV1Klines(e){return this.publicGetV1Klines(e)}publicGetV1Ticker24hr(e){return this.publicGetV1Ticker24hr(e)}publicGetV2Time(e){return this.publicGetV2Time(e)}publicGetV2ExchangeInfo(e){return this.publicGetV2ExchangeInfo(e)}publicGetV2Depth(e){return this.publicGetV2Depth(e)}publicGetV2AggTrades(e){return this.publicGetV2AggTrades(e)}publicGetV2Klines(e){return this.publicGetV2Klines(e)}publicGetV2Ticker24hr(e){return this.publicGetV2Ticker24hr(e)}marketcapGetV1Assets(e){return this.marketcapGetV1Assets(e)}marketcapGetV1Candles(e){return this.marketcapGetV1Candles(e)}marketcapGetV1Orderbook(e){return this.marketcapGetV1Orderbook(e)}marketcapGetV1Summary(e){return this.marketcapGetV1Summary(e)}marketcapGetV1Ticker(e){return this.marketcapGetV1Ticker(e)}marketcapGetV1TokenAssets(e){return this.marketcapGetV1TokenAssets(e)}marketcapGetV1TokenOrderbook(e){return this.marketcapGetV1TokenOrderbook(e)}marketcapGetV1TokenSummary(e){return this.marketcapGetV1TokenSummary(e)}marketcapGetV1TokenTicker(e){return this.marketcapGetV1TokenTicker(e)}marketcapGetV1TokenTrades(e){return this.marketcapGetV1TokenTrades(e)}marketcapGetV1TokenCryptoOHLC(e){return this.marketcapGetV1TokenCryptoOHLC(e)}marketcapGetV1TokenCryptoAssets(e){return this.marketcapGetV1TokenCryptoAssets(e)}marketcapGetV1TokenCryptoOrderbook(e){return this.marketcapGetV1TokenCryptoOrderbook(e)}marketcapGetV1TokenCryptoSummary(e){return this.marketcapGetV1TokenCryptoSummary(e)}marketcapGetV1TokenCryptoTicker(e){return this.marketcapGetV1TokenCryptoTicker(e)}marketcapGetV1TokenCryptoTrades(e){return this.marketcapGetV1TokenCryptoTrades(e)}marketcapGetV1Trades(e){return this.marketcapGetV1Trades(e)}privateGetV1Account(e){return this.privateGetV1Account(e)}privateGetV1Currencies(e){return this.privateGetV1Currencies(e)}privateGetV1Deposits(e){return this.privateGetV1Deposits(e)}privateGetV1DepositAddress(e){return this.privateGetV1DepositAddress(e)}privateGetV1Ledger(e){return this.privateGetV1Ledger(e)}privateGetV1LeverageSettings(e){return this.privateGetV1LeverageSettings(e)}privateGetV1MyTrades(e){return this.privateGetV1MyTrades(e)}privateGetV1OpenOrders(e){return this.privateGetV1OpenOrders(e)}privateGetV1TradingPositions(e){return this.privateGetV1TradingPositions(e)}privateGetV1TradingPositionsHistory(e){return this.privateGetV1TradingPositionsHistory(e)}privateGetV1Transactions(e){return this.privateGetV1Transactions(e)}privateGetV1Withdrawals(e){return this.privateGetV1Withdrawals(e)}privateGetV2Account(e){return this.privateGetV2Account(e)}privateGetV2Currencies(e){return this.privateGetV2Currencies(e)}privateGetV2Deposits(e){return this.privateGetV2Deposits(e)}privateGetV2DepositAddress(e){return this.privateGetV2DepositAddress(e)}privateGetV2Ledger(e){return this.privateGetV2Ledger(e)}privateGetV2LeverageSettings(e){return this.privateGetV2LeverageSettings(e)}privateGetV2MyTrades(e){return this.privateGetV2MyTrades(e)}privateGetV2OpenOrders(e){return this.privateGetV2OpenOrders(e)}privateGetV2TradingPositions(e){return this.privateGetV2TradingPositions(e)}privateGetV2TradingPositionsHistory(e){return this.privateGetV2TradingPositionsHistory(e)}privateGetV2Transactions(e){return this.privateGetV2Transactions(e)}privateGetV2Withdrawals(e){return this.privateGetV2Withdrawals(e)}privatePostV1Order(e){return this.privatePostV1Order(e)}privatePostV1UpdateTradingPosition(e){return this.privatePostV1UpdateTradingPosition(e)}privatePostV1UpdateTradingOrder(e){return this.privatePostV1UpdateTradingOrder(e)}privatePostV1CloseTradingPosition(e){return this.privatePostV1CloseTradingPosition(e)}privatePostV2Order(e){return this.privatePostV2Order(e)}privatePostV2UpdateTradingPosition(e){return this.privatePostV2UpdateTradingPosition(e)}privatePostV2UpdateTradingOrder(e){return this.privatePostV2UpdateTradingOrder(e)}privatePostV2CloseTradingPosition(e){return this.privatePostV2CloseTradingPosition(e)}privateDeleteV1Order(e){return this.privateDeleteV1Order(e)}privateDeleteV2Order(e){return this.privateDeleteV2Order(e)}}},2708:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetAssets(e){return this.publicGetAssets(e)}publicGetSettings(e){return this.publicGetSettings(e)}publicGetIndices(e){return this.publicGetIndices(e)}publicGetProducts(e){return this.publicGetProducts(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetTickersSymbol(e){return this.publicGetTickersSymbol(e)}publicGetL2orderbookSymbol(e){return this.publicGetL2orderbookSymbol(e)}publicGetTradesSymbol(e){return this.publicGetTradesSymbol(e)}publicGetHistoryCandles(e){return this.publicGetHistoryCandles(e)}publicGetHistorySparklines(e){return this.publicGetHistorySparklines(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersLeverage(e){return this.privateGetOrdersLeverage(e)}privateGetPositions(e){return this.privateGetPositions(e)}privateGetPositionsMargined(e){return this.privateGetPositionsMargined(e)}privateGetOrdersHistory(e){return this.privateGetOrdersHistory(e)}privateGetFills(e){return this.privateGetFills(e)}privateGetFillsHistoryDownloadCsv(e){return this.privateGetFillsHistoryDownloadCsv(e)}privateGetWalletBalances(e){return this.privateGetWalletBalances(e)}privateGetWalletTransactions(e){return this.privateGetWalletTransactions(e)}privateGetWalletTransactionsDownload(e){return this.privateGetWalletTransactionsDownload(e)}privateGetDepositsAddress(e){return this.privateGetDepositsAddress(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersBatch(e){return this.privatePostOrdersBatch(e)}privatePostOrdersLeverage(e){return this.privatePostOrdersLeverage(e)}privatePostPositionsChangeMargin(e){return this.privatePostPositionsChangeMargin(e)}privatePutOrders(e){return this.privatePutOrders(e)}privatePutOrdersBatch(e){return this.privatePutOrdersBatch(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrdersAll(e){return this.privateDeleteOrdersAll(e)}privateDeleteOrdersBatch(e){return this.privateDeleteOrdersBatch(e)}}},6563:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetAuth(e){return this.publicGetAuth(e)}publicGetExchangeToken(e){return this.publicGetExchangeToken(e)}publicGetForkToken(e){return this.publicGetForkToken(e)}publicGetSetHeartbeat(e){return this.publicGetSetHeartbeat(e)}publicGetDisableHeartbeat(e){return this.publicGetDisableHeartbeat(e)}publicGetGetTime(e){return this.publicGetGetTime(e)}publicGetHello(e){return this.publicGetHello(e)}publicGetStatus(e){return this.publicGetStatus(e)}publicGetTest(e){return this.publicGetTest(e)}publicGetSubscribe(e){return this.publicGetSubscribe(e)}publicGetUnsubscribe(e){return this.publicGetUnsubscribe(e)}publicGetUnsubscribeAll(e){return this.publicGetUnsubscribeAll(e)}publicGetGetAnnouncements(e){return this.publicGetGetAnnouncements(e)}publicGetGetBookSummaryByCurrency(e){return this.publicGetGetBookSummaryByCurrency(e)}publicGetGetBookSummaryByInstrument(e){return this.publicGetGetBookSummaryByInstrument(e)}publicGetGetContractSize(e){return this.publicGetGetContractSize(e)}publicGetGetCurrencies(e){return this.publicGetGetCurrencies(e)}publicGetGetDeliveryPrices(e){return this.publicGetGetDeliveryPrices(e)}publicGetGetFundingChartData(e){return this.publicGetGetFundingChartData(e)}publicGetGetFundingRateHistory(e){return this.publicGetGetFundingRateHistory(e)}publicGetGetFundingRateValue(e){return this.publicGetGetFundingRateValue(e)}publicGetGetHistoricalVolatility(e){return this.publicGetGetHistoricalVolatility(e)}publicGetGetIndex(e){return this.publicGetGetIndex(e)}publicGetGetIndexPrice(e){return this.publicGetGetIndexPrice(e)}publicGetGetIndexPriceNames(e){return this.publicGetGetIndexPriceNames(e)}publicGetGetInstrument(e){return this.publicGetGetInstrument(e)}publicGetGetInstruments(e){return this.publicGetGetInstruments(e)}publicGetGetLastSettlementsByCurrency(e){return this.publicGetGetLastSettlementsByCurrency(e)}publicGetGetLastSettlementsByInstrument(e){return this.publicGetGetLastSettlementsByInstrument(e)}publicGetGetLastTradesByCurrency(e){return this.publicGetGetLastTradesByCurrency(e)}publicGetGetLastTradesByCurrencyAndTime(e){return this.publicGetGetLastTradesByCurrencyAndTime(e)}publicGetGetLastTradesByInstrument(e){return this.publicGetGetLastTradesByInstrument(e)}publicGetGetLastTradesByInstrumentAndTime(e){return this.publicGetGetLastTradesByInstrumentAndTime(e)}publicGetGetMarkPriceHistory(e){return this.publicGetGetMarkPriceHistory(e)}publicGetGetOrderBook(e){return this.publicGetGetOrderBook(e)}publicGetGetTradeVolumes(e){return this.publicGetGetTradeVolumes(e)}publicGetGetTradingviewChartData(e){return this.publicGetGetTradingviewChartData(e)}publicGetGetVolatilityIndexData(e){return this.publicGetGetVolatilityIndexData(e)}publicGetTicker(e){return this.publicGetTicker(e)}privateGetLogout(e){return this.privateGetLogout(e)}privateGetEnableCancelOnDisconnect(e){return this.privateGetEnableCancelOnDisconnect(e)}privateGetDisableCancelOnDisconnect(e){return this.privateGetDisableCancelOnDisconnect(e)}privateGetGetCancelOnDisconnect(e){return this.privateGetGetCancelOnDisconnect(e)}privateGetSubscribe(e){return this.privateGetSubscribe(e)}privateGetUnsubscribe(e){return this.privateGetUnsubscribe(e)}privateGetUnsubscribeAll(e){return this.privateGetUnsubscribeAll(e)}privateGetChangeApiKeyName(e){return this.privateGetChangeApiKeyName(e)}privateGetChangeScopeInApiKey(e){return this.privateGetChangeScopeInApiKey(e)}privateGetChangeSubaccountName(e){return this.privateGetChangeSubaccountName(e)}privateGetCreateApiKey(e){return this.privateGetCreateApiKey(e)}privateGetCreateSubaccount(e){return this.privateGetCreateSubaccount(e)}privateGetDisableApiKey(e){return this.privateGetDisableApiKey(e)}privateGetDisableTfaForSubaccount(e){return this.privateGetDisableTfaForSubaccount(e)}privateGetEnableAffiliateProgram(e){return this.privateGetEnableAffiliateProgram(e)}privateGetEnableApiKey(e){return this.privateGetEnableApiKey(e)}privateGetGetAccessLog(e){return this.privateGetGetAccessLog(e)}privateGetGetAccountSummary(e){return this.privateGetGetAccountSummary(e)}privateGetGetAffiliateProgramInfo(e){return this.privateGetGetAffiliateProgramInfo(e)}privateGetGetEmailLanguage(e){return this.privateGetGetEmailLanguage(e)}privateGetGetNewAnnouncements(e){return this.privateGetGetNewAnnouncements(e)}privateGetGetPortfolioMargins(e){return this.privateGetGetPortfolioMargins(e)}privateGetGetPosition(e){return this.privateGetGetPosition(e)}privateGetGetPositions(e){return this.privateGetGetPositions(e)}privateGetGetSubaccounts(e){return this.privateGetGetSubaccounts(e)}privateGetGetSubaccountsDetails(e){return this.privateGetGetSubaccountsDetails(e)}privateGetGetTransactionLog(e){return this.privateGetGetTransactionLog(e)}privateGetListApiKeys(e){return this.privateGetListApiKeys(e)}privateGetRemoveApiKey(e){return this.privateGetRemoveApiKey(e)}privateGetRemoveSubaccount(e){return this.privateGetRemoveSubaccount(e)}privateGetResetApiKey(e){return this.privateGetResetApiKey(e)}privateGetSetAnnouncementAsRead(e){return this.privateGetSetAnnouncementAsRead(e)}privateGetSetApiKeyAsDefault(e){return this.privateGetSetApiKeyAsDefault(e)}privateGetSetEmailForSubaccount(e){return this.privateGetSetEmailForSubaccount(e)}privateGetSetEmailLanguage(e){return this.privateGetSetEmailLanguage(e)}privateGetSetPasswordForSubaccount(e){return this.privateGetSetPasswordForSubaccount(e)}privateGetToggleNotificationsFromSubaccount(e){return this.privateGetToggleNotificationsFromSubaccount(e)}privateGetToggleSubaccountLogin(e){return this.privateGetToggleSubaccountLogin(e)}privateGetExecuteBlockTrade(e){return this.privateGetExecuteBlockTrade(e)}privateGetGetBlockTrade(e){return this.privateGetGetBlockTrade(e)}privateGetGetLastBlockTradesByCurrency(e){return this.privateGetGetLastBlockTradesByCurrency(e)}privateGetInvalidateBlockTradeSignature(e){return this.privateGetInvalidateBlockTradeSignature(e)}privateGetVerifyBlockTrade(e){return this.privateGetVerifyBlockTrade(e)}privateGetBuy(e){return this.privateGetBuy(e)}privateGetSell(e){return this.privateGetSell(e)}privateGetEdit(e){return this.privateGetEdit(e)}privateGetEditByLabel(e){return this.privateGetEditByLabel(e)}privateGetCancel(e){return this.privateGetCancel(e)}privateGetCancelAll(e){return this.privateGetCancelAll(e)}privateGetCancelAllByCurrency(e){return this.privateGetCancelAllByCurrency(e)}privateGetCancelAllByInstrument(e){return this.privateGetCancelAllByInstrument(e)}privateGetCancelByLabel(e){return this.privateGetCancelByLabel(e)}privateGetClosePosition(e){return this.privateGetClosePosition(e)}privateGetGetMargins(e){return this.privateGetGetMargins(e)}privateGetGetMmpConfig(e){return this.privateGetGetMmpConfig(e)}privateGetGetOpenOrdersByCurrency(e){return this.privateGetGetOpenOrdersByCurrency(e)}privateGetGetOpenOrdersByInstrument(e){return this.privateGetGetOpenOrdersByInstrument(e)}privateGetGetOrderHistoryByCurrency(e){return this.privateGetGetOrderHistoryByCurrency(e)}privateGetGetOrderHistoryByInstrument(e){return this.privateGetGetOrderHistoryByInstrument(e)}privateGetGetOrderMarginByIds(e){return this.privateGetGetOrderMarginByIds(e)}privateGetGetOrderState(e){return this.privateGetGetOrderState(e)}privateGetGetStopOrderHistory(e){return this.privateGetGetStopOrderHistory(e)}privateGetGetTriggerOrderHistory(e){return this.privateGetGetTriggerOrderHistory(e)}privateGetGetUserTradesByCurrency(e){return this.privateGetGetUserTradesByCurrency(e)}privateGetGetUserTradesByCurrencyAndTime(e){return this.privateGetGetUserTradesByCurrencyAndTime(e)}privateGetGetUserTradesByInstrument(e){return this.privateGetGetUserTradesByInstrument(e)}privateGetGetUserTradesByInstrumentAndTime(e){return this.privateGetGetUserTradesByInstrumentAndTime(e)}privateGetGetUserTradesByOrder(e){return this.privateGetGetUserTradesByOrder(e)}privateGetResetMmp(e){return this.privateGetResetMmp(e)}privateGetSetMmpConfig(e){return this.privateGetSetMmpConfig(e)}privateGetGetSettlementHistoryByInstrument(e){return this.privateGetGetSettlementHistoryByInstrument(e)}privateGetGetSettlementHistoryByCurrency(e){return this.privateGetGetSettlementHistoryByCurrency(e)}privateGetCancelTransferById(e){return this.privateGetCancelTransferById(e)}privateGetCancelWithdrawal(e){return this.privateGetCancelWithdrawal(e)}privateGetCreateDepositAddress(e){return this.privateGetCreateDepositAddress(e)}privateGetGetCurrentDepositAddress(e){return this.privateGetGetCurrentDepositAddress(e)}privateGetGetDeposits(e){return this.privateGetGetDeposits(e)}privateGetGetTransfers(e){return this.privateGetGetTransfers(e)}privateGetGetWithdrawals(e){return this.privateGetGetWithdrawals(e)}privateGetSubmitTransferToSubaccount(e){return this.privateGetSubmitTransferToSubaccount(e)}privateGetSubmitTransferToUser(e){return this.privateGetSubmitTransferToUser(e)}privateGetWithdraw(e){return this.privateGetWithdraw(e)}}},823:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicSpotGetMarketSymbols(e){return this.publicSpotGetMarketSymbols(e)}publicSpotGetKline(e){return this.publicSpotGetKline(e)}publicSpotGetMarginCurrencies(e){return this.publicSpotGetMarginCurrencies(e)}publicSpotGetMarginSymbols(e){return this.publicSpotGetMarginSymbols(e)}publicSpotGetMarkets(e){return this.publicSpotGetMarkets(e)}publicSpotGetOrderBook(e){return this.publicSpotGetOrderBook(e)}publicSpotGetPing(e){return this.publicSpotGetPing(e)}publicSpotGetSpotSymbols(e){return this.publicSpotGetSpotSymbols(e)}publicSpotGetTime(e){return this.publicSpotGetTime(e)}publicSpotGetTrades(e){return this.publicSpotGetTrades(e)}publicSpotGetTradesSymbols(e){return this.publicSpotGetTradesSymbols(e)}publicSpotGetTicker(e){return this.publicSpotGetTicker(e)}publicSpotGetCurrencies(e){return this.publicSpotGetCurrencies(e)}publicSwapGetPublicApiWeight(e){return this.publicSwapGetPublicApiWeight(e)}publicSwapGetPublicCandles(e){return this.publicSwapGetPublicCandles(e)}publicSwapGetPublicCandlesHistory(e){return this.publicSwapGetPublicCandlesHistory(e)}publicSwapGetPublicDepth(e){return this.publicSwapGetPublicDepth(e)}publicSwapGetPublicFundingRate(e){return this.publicSwapGetPublicFundingRate(e)}publicSwapGetPublicFundingRateHistory(e){return this.publicSwapGetPublicFundingRateHistory(e)}publicSwapGetPublicInstrument(e){return this.publicSwapGetPublicInstrument(e)}publicSwapGetPublicInstruments(e){return this.publicSwapGetPublicInstruments(e)}publicSwapGetPublicTicker(e){return this.publicSwapGetPublicTicker(e)}publicSwapGetPublicTickers(e){return this.publicSwapGetPublicTickers(e)}publicSwapGetPublicTime(e){return this.publicSwapGetPublicTime(e)}publicSwapGetPublicTrades(e){return this.publicSwapGetPublicTrades(e)}privateSpotGetMarketFinancelog(e){return this.privateSpotGetMarketFinancelog(e)}privateSpotGetMarketMytrades(e){return this.privateSpotGetMarketMytrades(e)}privateSpotGetMarketOrder(e){return this.privateSpotGetMarketOrder(e)}privateSpotGetMarketOrderDetail(e){return this.privateSpotGetMarketOrderDetail(e)}privateSpotGetMarketOrderCurrent(e){return this.privateSpotGetMarketOrderCurrent(e)}privateSpotGetMarketOrderHistory(e){return this.privateSpotGetMarketOrderHistory(e)}privateSpotGetMarginAssets(e){return this.privateSpotGetMarginAssets(e)}privateSpotGetMarginFinancelog(e){return this.privateSpotGetMarginFinancelog(e)}privateSpotGetMarginMytrades(e){return this.privateSpotGetMarginMytrades(e)}privateSpotGetMarginOrder(e){return this.privateSpotGetMarginOrder(e)}privateSpotGetMarginOrderCurrent(e){return this.privateSpotGetMarginOrderCurrent(e)}privateSpotGetMarginOrderHistory(e){return this.privateSpotGetMarginOrderHistory(e)}privateSpotGetMarginPositions(e){return this.privateSpotGetMarginPositions(e)}privateSpotGetOtcFinancelog(e){return this.privateSpotGetOtcFinancelog(e)}privateSpotGetSpotAssets(e){return this.privateSpotGetSpotAssets(e)}privateSpotGetSpotFinancelog(e){return this.privateSpotGetSpotFinancelog(e)}privateSpotGetSpotMytrades(e){return this.privateSpotGetSpotMytrades(e)}privateSpotGetSpotOrder(e){return this.privateSpotGetSpotOrder(e)}privateSpotGetSpotOrderCurrent(e){return this.privateSpotGetSpotOrderCurrent(e)}privateSpotGetSpotOrderHistory(e){return this.privateSpotGetSpotOrderHistory(e)}privateSpotGetDepositAddress(e){return this.privateSpotGetDepositAddress(e)}privateSpotGetDepositHistory(e){return this.privateSpotGetDepositHistory(e)}privateSpotGetWithdrawHistory(e){return this.privateSpotGetWithdrawHistory(e)}privateSpotPostMarketOrderCancel(e){return this.privateSpotPostMarketOrderCancel(e)}privateSpotPostMarketOrderNew(e){return this.privateSpotPostMarketOrderNew(e)}privateSpotPostMarketOrderBatchNew(e){return this.privateSpotPostMarketOrderBatchNew(e)}privateSpotPostMarginOrderCancel(e){return this.privateSpotPostMarginOrderCancel(e)}privateSpotPostMarginOrderNew(e){return this.privateSpotPostMarginOrderNew(e)}privateSpotPostMarginPositionClose(e){return this.privateSpotPostMarginPositionClose(e)}privateSpotPostSpotOrderCancel(e){return this.privateSpotPostSpotOrderCancel(e)}privateSpotPostSpotOrderNew(e){return this.privateSpotPostSpotOrderNew(e)}privateSpotPostTransfer(e){return this.privateSpotPostTransfer(e)}privateSpotPostWithdrawNew(e){return this.privateSpotPostWithdrawNew(e)}privateSpotPostWithdrawCancel(e){return this.privateSpotPostWithdrawCancel(e)}privateSwapGetAccountBalance(e){return this.privateSwapGetAccountBalance(e)}privateSwapGetAccountPositions(e){return this.privateSwapGetAccountPositions(e)}privateSwapGetAccountFinanceRecord(e){return this.privateSwapGetAccountFinanceRecord(e)}privateSwapGetAccountTradingFeeRate(e){return this.privateSwapGetAccountTradingFeeRate(e)}privateSwapGetAccountTransferRecord(e){return this.privateSwapGetAccountTransferRecord(e)}privateSwapGetTradeHistoryOrders(e){return this.privateSwapGetTradeHistoryOrders(e)}privateSwapGetTradeHistoryTrades(e){return this.privateSwapGetTradeHistoryTrades(e)}privateSwapGetTradeOpenOrders(e){return this.privateSwapGetTradeOpenOrders(e)}privateSwapGetTradeOrderInfo(e){return this.privateSwapGetTradeOrderInfo(e)}privateSwapPostAccountLeverage(e){return this.privateSwapPostAccountLeverage(e)}privateSwapPostTradeBatchCancelOrder(e){return this.privateSwapPostTradeBatchCancelOrder(e)}privateSwapPostTradeBatchOrder(e){return this.privateSwapPostTradeBatchOrder(e)}privateSwapPostTradeCancelOrder(e){return this.privateSwapPostTradeCancelOrder(e)}privateSwapPostTradeOrderPlace(e){return this.privateSwapPostTradeOrderPlace(e)}}},4680:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{webGetCtrlFeesAndLimits(e){return this.webGetCtrlFeesAndLimits(e)}webGetEnDocsFees(e){return this.webGetEnDocsFees(e)}publicGetCurrency(e){return this.publicGetCurrency(e)}publicGetCurrencyListExtended(e){return this.publicGetCurrencyListExtended(e)}publicGetOrderBook(e){return this.publicGetOrderBook(e)}publicGetPairSettings(e){return this.publicGetPairSettings(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetCandlesHistory(e){return this.publicGetCandlesHistory(e)}publicGetRequiredAmount(e){return this.publicGetRequiredAmount(e)}publicGetPaymentsProvidersCryptoList(e){return this.publicGetPaymentsProvidersCryptoList(e)}privatePostUserInfo(e){return this.privatePostUserInfo(e)}privatePostOrderCreate(e){return this.privatePostOrderCreate(e)}privatePostOrderCancel(e){return this.privatePostOrderCancel(e)}privatePostStopMarketOrderCreate(e){return this.privatePostStopMarketOrderCreate(e)}privatePostStopMarketOrderCancel(e){return this.privatePostStopMarketOrderCancel(e)}privatePostUserOpenOrders(e){return this.privatePostUserOpenOrders(e)}privatePostUserTrades(e){return this.privatePostUserTrades(e)}privatePostUserCancelledOrders(e){return this.privatePostUserCancelledOrders(e)}privatePostOrderTrades(e){return this.privatePostOrderTrades(e)}privatePostDepositAddress(e){return this.privatePostDepositAddress(e)}privatePostWithdrawCrypt(e){return this.privatePostWithdrawCrypt(e)}privatePostWithdrawGetTxid(e){return this.privatePostWithdrawGetTxid(e)}privatePostExcodeCreate(e){return this.privatePostExcodeCreate(e)}privatePostExcodeLoad(e){return this.privatePostExcodeLoad(e)}privatePostCodeCheck(e){return this.privatePostCodeCheck(e)}privatePostWalletHistory(e){return this.privatePostWalletHistory(e)}privatePostWalletOperations(e){return this.privatePostWalletOperations(e)}privatePostMarginUserOrderCreate(e){return this.privatePostMarginUserOrderCreate(e)}privatePostMarginUserOrderUpdate(e){return this.privatePostMarginUserOrderUpdate(e)}privatePostMarginUserOrderCancel(e){return this.privatePostMarginUserOrderCancel(e)}privatePostMarginUserPositionClose(e){return this.privatePostMarginUserPositionClose(e)}privatePostMarginUserPositionMarginAdd(e){return this.privatePostMarginUserPositionMarginAdd(e)}privatePostMarginUserPositionMarginRemove(e){return this.privatePostMarginUserPositionMarginRemove(e)}privatePostMarginCurrencyList(e){return this.privatePostMarginCurrencyList(e)}privatePostMarginPairList(e){return this.privatePostMarginPairList(e)}privatePostMarginSettings(e){return this.privatePostMarginSettings(e)}privatePostMarginFundingList(e){return this.privatePostMarginFundingList(e)}privatePostMarginUserInfo(e){return this.privatePostMarginUserInfo(e)}privatePostMarginUserOrderList(e){return this.privatePostMarginUserOrderList(e)}privatePostMarginUserOrderHistory(e){return this.privatePostMarginUserOrderHistory(e)}privatePostMarginUserOrderTrades(e){return this.privatePostMarginUserOrderTrades(e)}privatePostMarginUserOrderMaxQuantity(e){return this.privatePostMarginUserOrderMaxQuantity(e)}privatePostMarginUserPositionList(e){return this.privatePostMarginUserPositionList(e)}privatePostMarginUserPositionMarginRemoveInfo(e){return this.privatePostMarginUserPositionMarginRemoveInfo(e)}privatePostMarginUserPositionMarginAddInfo(e){return this.privatePostMarginUserPositionMarginAddInfo(e)}privatePostMarginUserWalletList(e){return this.privatePostMarginUserWalletList(e)}privatePostMarginUserWalletHistory(e){return this.privatePostMarginUserWalletHistory(e)}privatePostMarginUserTradeList(e){return this.privatePostMarginUserTradeList(e)}privatePostMarginTrades(e){return this.privatePostMarginTrades(e)}privatePostMarginLiquidationFeed(e){return this.privatePostMarginLiquidationFeed(e)}}},2465:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicWalletGetCurrencyChains(e){return this.publicWalletGetCurrencyChains(e)}publicSpotGetCurrencies(e){return this.publicSpotGetCurrencies(e)}publicSpotGetCurrenciesCurrency(e){return this.publicSpotGetCurrenciesCurrency(e)}publicSpotGetCurrencyPairs(e){return this.publicSpotGetCurrencyPairs(e)}publicSpotGetCurrencyPairsCurrencyPair(e){return this.publicSpotGetCurrencyPairsCurrencyPair(e)}publicSpotGetTickers(e){return this.publicSpotGetTickers(e)}publicSpotGetOrderBook(e){return this.publicSpotGetOrderBook(e)}publicSpotGetTrades(e){return this.publicSpotGetTrades(e)}publicSpotGetCandlesticks(e){return this.publicSpotGetCandlesticks(e)}publicMarginGetCurrencyPairs(e){return this.publicMarginGetCurrencyPairs(e)}publicMarginGetCurrencyPairsCurrencyPair(e){return this.publicMarginGetCurrencyPairsCurrencyPair(e)}publicMarginGetCrossCurrencies(e){return this.publicMarginGetCrossCurrencies(e)}publicMarginGetCrossCurrenciesCurrency(e){return this.publicMarginGetCrossCurrenciesCurrency(e)}publicMarginGetFundingBook(e){return this.publicMarginGetFundingBook(e)}publicFuturesGetSettleContracts(e){return this.publicFuturesGetSettleContracts(e)}publicFuturesGetSettleContractsContract(e){return this.publicFuturesGetSettleContractsContract(e)}publicFuturesGetSettleOrderBook(e){return this.publicFuturesGetSettleOrderBook(e)}publicFuturesGetSettleTrades(e){return this.publicFuturesGetSettleTrades(e)}publicFuturesGetSettleCandlesticks(e){return this.publicFuturesGetSettleCandlesticks(e)}publicFuturesGetSettleTickers(e){return this.publicFuturesGetSettleTickers(e)}publicFuturesGetSettleFundingRate(e){return this.publicFuturesGetSettleFundingRate(e)}publicFuturesGetSettleInsurance(e){return this.publicFuturesGetSettleInsurance(e)}publicFuturesGetSettleContractStats(e){return this.publicFuturesGetSettleContractStats(e)}publicFuturesGetSettleLiqOrders(e){return this.publicFuturesGetSettleLiqOrders(e)}publicDeliveryGetSettleContracts(e){return this.publicDeliveryGetSettleContracts(e)}publicDeliveryGetSettleContractsContract(e){return this.publicDeliveryGetSettleContractsContract(e)}publicDeliveryGetSettleOrderBook(e){return this.publicDeliveryGetSettleOrderBook(e)}publicDeliveryGetSettleTrades(e){return this.publicDeliveryGetSettleTrades(e)}publicDeliveryGetSettleCandlesticks(e){return this.publicDeliveryGetSettleCandlesticks(e)}publicDeliveryGetSettleTickers(e){return this.publicDeliveryGetSettleTickers(e)}publicDeliveryGetSettleInsurance(e){return this.publicDeliveryGetSettleInsurance(e)}publicOptionsGetUnderlyings(e){return this.publicOptionsGetUnderlyings(e)}publicOptionsGetExpirations(e){return this.publicOptionsGetExpirations(e)}publicOptionsGetContracts(e){return this.publicOptionsGetContracts(e)}publicOptionsGetContractsContract(e){return this.publicOptionsGetContractsContract(e)}publicOptionsGetSettlements(e){return this.publicOptionsGetSettlements(e)}publicOptionsGetSettlementsContract(e){return this.publicOptionsGetSettlementsContract(e)}publicOptionsGetOrderBook(e){return this.publicOptionsGetOrderBook(e)}publicOptionsGetTickers(e){return this.publicOptionsGetTickers(e)}publicOptionsGetUnderlyingTickersUnderlying(e){return this.publicOptionsGetUnderlyingTickersUnderlying(e)}publicOptionsGetCandlesticks(e){return this.publicOptionsGetCandlesticks(e)}publicOptionsGetUnderlyingCandlesticks(e){return this.publicOptionsGetUnderlyingCandlesticks(e)}publicOptionsGetTrades(e){return this.publicOptionsGetTrades(e)}publicEarnGetUniCurrencies(e){return this.publicEarnGetUniCurrencies(e)}publicEarnGetUniCurrenciesCurrency(e){return this.publicEarnGetUniCurrenciesCurrency(e)}privateWithdrawalsPostWithdrawals(e){return this.privateWithdrawalsPostWithdrawals(e)}privateWithdrawalsDeleteWithdrawalsWithdrawalId(e){return this.privateWithdrawalsDeleteWithdrawalsWithdrawalId(e)}privateWalletGetDepositAddress(e){return this.privateWalletGetDepositAddress(e)}privateWalletGetWithdrawals(e){return this.privateWalletGetWithdrawals(e)}privateWalletGetDeposits(e){return this.privateWalletGetDeposits(e)}privateWalletGetSubAccountTransfers(e){return this.privateWalletGetSubAccountTransfers(e)}privateWalletGetWithdrawStatus(e){return this.privateWalletGetWithdrawStatus(e)}privateWalletGetSubAccountBalances(e){return this.privateWalletGetSubAccountBalances(e)}privateWalletGetFee(e){return this.privateWalletGetFee(e)}privateWalletGetTotalBalance(e){return this.privateWalletGetTotalBalance(e)}privateWalletPostTransfers(e){return this.privateWalletPostTransfers(e)}privateWalletPostSubAccountTransfers(e){return this.privateWalletPostSubAccountTransfers(e)}privateSubAccountsGetSubAccounts(e){return this.privateSubAccountsGetSubAccounts(e)}privateSubAccountsGetSubAccountsUserId(e){return this.privateSubAccountsGetSubAccountsUserId(e)}privateSubAccountsGetSubAccountsUserIdKeys(e){return this.privateSubAccountsGetSubAccountsUserIdKeys(e)}privateSubAccountsGetSubAccountsUserIdKeysKey(e){return this.privateSubAccountsGetSubAccountsUserIdKeysKey(e)}privateSubAccountsPostSubAccounts(e){return this.privateSubAccountsPostSubAccounts(e)}privateSubAccountsPostSubAccountsUserIdKeys(e){return this.privateSubAccountsPostSubAccountsUserIdKeys(e)}privateSubAccountsPostSubAccountsUserIdLock(e){return this.privateSubAccountsPostSubAccountsUserIdLock(e)}privateSubAccountsPostSubAccountsUserIdUnlock(e){return this.privateSubAccountsPostSubAccountsUserIdUnlock(e)}privateSubAccountsPutSubAccountsUserIdKeysKey(e){return this.privateSubAccountsPutSubAccountsUserIdKeysKey(e)}privateSubAccountsDeleteSubAccountsUserIdKeysKey(e){return this.privateSubAccountsDeleteSubAccountsUserIdKeysKey(e)}privateSpotGetAccounts(e){return this.privateSpotGetAccounts(e)}privateSpotGetOpenOrders(e){return this.privateSpotGetOpenOrders(e)}privateSpotGetOrders(e){return this.privateSpotGetOrders(e)}privateSpotGetOrdersOrderId(e){return this.privateSpotGetOrdersOrderId(e)}privateSpotGetMyTrades(e){return this.privateSpotGetMyTrades(e)}privateSpotGetPriceOrders(e){return this.privateSpotGetPriceOrders(e)}privateSpotGetPriceOrdersOrderId(e){return this.privateSpotGetPriceOrdersOrderId(e)}privateSpotPostBatchOrders(e){return this.privateSpotPostBatchOrders(e)}privateSpotPostOrders(e){return this.privateSpotPostOrders(e)}privateSpotPostCancelBatchOrders(e){return this.privateSpotPostCancelBatchOrders(e)}privateSpotPostPriceOrders(e){return this.privateSpotPostPriceOrders(e)}privateSpotDeleteOrders(e){return this.privateSpotDeleteOrders(e)}privateSpotDeleteOrdersOrderId(e){return this.privateSpotDeleteOrdersOrderId(e)}privateSpotDeletePriceOrders(e){return this.privateSpotDeletePriceOrders(e)}privateSpotDeletePriceOrdersOrderId(e){return this.privateSpotDeletePriceOrdersOrderId(e)}privateSpotPatchOrdersOrderId(e){return this.privateSpotPatchOrdersOrderId(e)}privateMarginGetAccounts(e){return this.privateMarginGetAccounts(e)}privateMarginGetAccountBook(e){return this.privateMarginGetAccountBook(e)}privateMarginGetFundingAccounts(e){return this.privateMarginGetFundingAccounts(e)}privateMarginGetLoans(e){return this.privateMarginGetLoans(e)}privateMarginGetLoansLoanId(e){return this.privateMarginGetLoansLoanId(e)}privateMarginGetLoansLoanIdRepayment(e){return this.privateMarginGetLoansLoanIdRepayment(e)}privateMarginGetLoanRecords(e){return this.privateMarginGetLoanRecords(e)}privateMarginGetLoanRecordsLoadRecordId(e){return this.privateMarginGetLoanRecordsLoadRecordId(e)}privateMarginGetAutoRepay(e){return this.privateMarginGetAutoRepay(e)}privateMarginGetTransferable(e){return this.privateMarginGetTransferable(e)}privateMarginGetCrossAccounts(e){return this.privateMarginGetCrossAccounts(e)}privateMarginGetCrossAccountBook(e){return this.privateMarginGetCrossAccountBook(e)}privateMarginGetCrossLoans(e){return this.privateMarginGetCrossLoans(e)}privateMarginGetCrossLoansLoanId(e){return this.privateMarginGetCrossLoansLoanId(e)}privateMarginGetCrossLoansRepayments(e){return this.privateMarginGetCrossLoansRepayments(e)}privateMarginGetCrossTransferable(e){return this.privateMarginGetCrossTransferable(e)}privateMarginGetLoanRecordsLoanRecordId(e){return this.privateMarginGetLoanRecordsLoanRecordId(e)}privateMarginGetBorrowable(e){return this.privateMarginGetBorrowable(e)}privateMarginGetCrossRepayments(e){return this.privateMarginGetCrossRepayments(e)}privateMarginGetCrossBorrowable(e){return this.privateMarginGetCrossBorrowable(e)}privateMarginPostLoans(e){return this.privateMarginPostLoans(e)}privateMarginPostMergedLoans(e){return this.privateMarginPostMergedLoans(e)}privateMarginPostLoansLoanIdRepayment(e){return this.privateMarginPostLoansLoanIdRepayment(e)}privateMarginPostAutoRepay(e){return this.privateMarginPostAutoRepay(e)}privateMarginPostCrossLoans(e){return this.privateMarginPostCrossLoans(e)}privateMarginPostCrossLoansRepayments(e){return this.privateMarginPostCrossLoansRepayments(e)}privateMarginPostCrossRepayments(e){return this.privateMarginPostCrossRepayments(e)}privateMarginPatchLoansLoanId(e){return this.privateMarginPatchLoansLoanId(e)}privateMarginPatchLoanRecordsLoanRecordId(e){return this.privateMarginPatchLoanRecordsLoanRecordId(e)}privateMarginDeleteLoansLoanId(e){return this.privateMarginDeleteLoansLoanId(e)}privateFuturesGetSettleAccounts(e){return this.privateFuturesGetSettleAccounts(e)}privateFuturesGetSettleAccountBook(e){return this.privateFuturesGetSettleAccountBook(e)}privateFuturesGetSettlePositions(e){return this.privateFuturesGetSettlePositions(e)}privateFuturesGetSettlePositionsContract(e){return this.privateFuturesGetSettlePositionsContract(e)}privateFuturesGetSettleOrders(e){return this.privateFuturesGetSettleOrders(e)}privateFuturesGetSettleOrdersOrderId(e){return this.privateFuturesGetSettleOrdersOrderId(e)}privateFuturesGetSettleMyTrades(e){return this.privateFuturesGetSettleMyTrades(e)}privateFuturesGetSettlePositionClose(e){return this.privateFuturesGetSettlePositionClose(e)}privateFuturesGetSettleLiquidates(e){return this.privateFuturesGetSettleLiquidates(e)}privateFuturesGetSettlePriceOrders(e){return this.privateFuturesGetSettlePriceOrders(e)}privateFuturesGetSettlePriceOrdersOrderId(e){return this.privateFuturesGetSettlePriceOrdersOrderId(e)}privateFuturesGetSettleDualCompPositionsContract(e){return this.privateFuturesGetSettleDualCompPositionsContract(e)}privateFuturesGetSettleAutoDeleverages(e){return this.privateFuturesGetSettleAutoDeleverages(e)}privateFuturesPostSettlePositionsContractMargin(e){return this.privateFuturesPostSettlePositionsContractMargin(e)}privateFuturesPostSettlePositionsContractLeverage(e){return this.privateFuturesPostSettlePositionsContractLeverage(e)}privateFuturesPostSettlePositionsContractRiskLimit(e){return this.privateFuturesPostSettlePositionsContractRiskLimit(e)}privateFuturesPostSettleDualMode(e){return this.privateFuturesPostSettleDualMode(e)}privateFuturesPostSettleDualCompPositionsContract(e){return this.privateFuturesPostSettleDualCompPositionsContract(e)}privateFuturesPostSettleDualCompPositionsContractMargin(e){return this.privateFuturesPostSettleDualCompPositionsContractMargin(e)}privateFuturesPostSettleDualCompPositionsContractLeverage(e){return this.privateFuturesPostSettleDualCompPositionsContractLeverage(e)}privateFuturesPostSettleDualCompPositionsContractRiskLimit(e){return this.privateFuturesPostSettleDualCompPositionsContractRiskLimit(e)}privateFuturesPostSettleOrders(e){return this.privateFuturesPostSettleOrders(e)}privateFuturesPostSettlePriceOrders(e){return this.privateFuturesPostSettlePriceOrders(e)}privateFuturesDeleteSettleOrders(e){return this.privateFuturesDeleteSettleOrders(e)}privateFuturesDeleteSettleOrdersOrderId(e){return this.privateFuturesDeleteSettleOrdersOrderId(e)}privateFuturesDeleteSettlePriceOrders(e){return this.privateFuturesDeleteSettlePriceOrders(e)}privateFuturesDeleteSettlePriceOrdersOrderId(e){return this.privateFuturesDeleteSettlePriceOrdersOrderId(e)}privateDeliveryGetSettleAccounts(e){return this.privateDeliveryGetSettleAccounts(e)}privateDeliveryGetSettleAccountBook(e){return this.privateDeliveryGetSettleAccountBook(e)}privateDeliveryGetSettlePositions(e){return this.privateDeliveryGetSettlePositions(e)}privateDeliveryGetSettlePositionsContract(e){return this.privateDeliveryGetSettlePositionsContract(e)}privateDeliveryGetSettleOrders(e){return this.privateDeliveryGetSettleOrders(e)}privateDeliveryGetSettleOrdersOrderId(e){return this.privateDeliveryGetSettleOrdersOrderId(e)}privateDeliveryGetSettleMyTrades(e){return this.privateDeliveryGetSettleMyTrades(e)}privateDeliveryGetSettlePositionClose(e){return this.privateDeliveryGetSettlePositionClose(e)}privateDeliveryGetSettleLiquidates(e){return this.privateDeliveryGetSettleLiquidates(e)}privateDeliveryGetSettlePriceOrders(e){return this.privateDeliveryGetSettlePriceOrders(e)}privateDeliveryGetSettlePriceOrdersOrderId(e){return this.privateDeliveryGetSettlePriceOrdersOrderId(e)}privateDeliveryGetSettleSettlements(e){return this.privateDeliveryGetSettleSettlements(e)}privateDeliveryPostSettlePositionsContractMargin(e){return this.privateDeliveryPostSettlePositionsContractMargin(e)}privateDeliveryPostSettlePositionsContractLeverage(e){return this.privateDeliveryPostSettlePositionsContractLeverage(e)}privateDeliveryPostSettlePositionsContractRiskLimit(e){return this.privateDeliveryPostSettlePositionsContractRiskLimit(e)}privateDeliveryPostSettleOrders(e){return this.privateDeliveryPostSettleOrders(e)}privateDeliveryPostSettlePriceOrders(e){return this.privateDeliveryPostSettlePriceOrders(e)}privateDeliveryDeleteSettleOrders(e){return this.privateDeliveryDeleteSettleOrders(e)}privateDeliveryDeleteSettleOrdersOrderId(e){return this.privateDeliveryDeleteSettleOrdersOrderId(e)}privateDeliveryDeleteSettlePriceOrders(e){return this.privateDeliveryDeleteSettlePriceOrders(e)}privateDeliveryDeleteSettlePriceOrdersOrderId(e){return this.privateDeliveryDeleteSettlePriceOrdersOrderId(e)}privateOptionsGetAccounts(e){return this.privateOptionsGetAccounts(e)}privateOptionsGetAccountBook(e){return this.privateOptionsGetAccountBook(e)}privateOptionsGetPositions(e){return this.privateOptionsGetPositions(e)}privateOptionsGetPositionsContract(e){return this.privateOptionsGetPositionsContract(e)}privateOptionsGetPositionClose(e){return this.privateOptionsGetPositionClose(e)}privateOptionsGetOrders(e){return this.privateOptionsGetOrders(e)}privateOptionsGetOrdersOrderId(e){return this.privateOptionsGetOrdersOrderId(e)}privateOptionsGetMyTrades(e){return this.privateOptionsGetMyTrades(e)}privateOptionsPostOrders(e){return this.privateOptionsPostOrders(e)}privateOptionsDeleteOrders(e){return this.privateOptionsDeleteOrders(e)}privateOptionsDeleteOrdersOrderId(e){return this.privateOptionsDeleteOrdersOrderId(e)}privateRebateGetAgencyTransactionHistory(e){return this.privateRebateGetAgencyTransactionHistory(e)}privateRebateGetAgencyCommissionHistory(e){return this.privateRebateGetAgencyCommissionHistory(e)}privateEarnGetUniLends(e){return this.privateEarnGetUniLends(e)}privateEarnGetUniLendRecords(e){return this.privateEarnGetUniLendRecords(e)}privateEarnGetUniInterestsCurrency(e){return this.privateEarnGetUniInterestsCurrency(e)}privateEarnGetUniInterestRecords(e){return this.privateEarnGetUniInterestRecords(e)}privateEarnPostUniLends(e){return this.privateEarnPostUniLends(e)}privateEarnPatchUniLends(e){return this.privateEarnPatchUniLends(e)}}},8185:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{webGetRestApi(e){return this.webGetRestApi(e)}publicGetV1Symbols(e){return this.publicGetV1Symbols(e)}publicGetV1SymbolsDetailsSymbol(e){return this.publicGetV1SymbolsDetailsSymbol(e)}publicGetV1StakingRates(e){return this.publicGetV1StakingRates(e)}publicGetV1PubtickerSymbol(e){return this.publicGetV1PubtickerSymbol(e)}publicGetV2TickerSymbol(e){return this.publicGetV2TickerSymbol(e)}publicGetV2CandlesSymbolTimeframe(e){return this.publicGetV2CandlesSymbolTimeframe(e)}publicGetV1TradesSymbol(e){return this.publicGetV1TradesSymbol(e)}publicGetV1AuctionSymbol(e){return this.publicGetV1AuctionSymbol(e)}publicGetV1AuctionSymbolHistory(e){return this.publicGetV1AuctionSymbolHistory(e)}publicGetV1Pricefeed(e){return this.publicGetV1Pricefeed(e)}publicGetV1BookSymbol(e){return this.publicGetV1BookSymbol(e)}publicGetV1EarnRates(e){return this.publicGetV1EarnRates(e)}privatePostV1StakingUnstake(e){return this.privatePostV1StakingUnstake(e)}privatePostV1StakingStake(e){return this.privatePostV1StakingStake(e)}privatePostV1StakingRewards(e){return this.privatePostV1StakingRewards(e)}privatePostV1StakingHistory(e){return this.privatePostV1StakingHistory(e)}privatePostV1OrderNew(e){return this.privatePostV1OrderNew(e)}privatePostV1OrderCancel(e){return this.privatePostV1OrderCancel(e)}privatePostV1WrapSymbol(e){return this.privatePostV1WrapSymbol(e)}privatePostV1OrderCancelSession(e){return this.privatePostV1OrderCancelSession(e)}privatePostV1OrderCancelAll(e){return this.privatePostV1OrderCancelAll(e)}privatePostV1OrderStatus(e){return this.privatePostV1OrderStatus(e)}privatePostV1Orders(e){return this.privatePostV1Orders(e)}privatePostV1Mytrades(e){return this.privatePostV1Mytrades(e)}privatePostV1Notionalvolume(e){return this.privatePostV1Notionalvolume(e)}privatePostV1Tradevolume(e){return this.privatePostV1Tradevolume(e)}privatePostV1ClearingNew(e){return this.privatePostV1ClearingNew(e)}privatePostV1ClearingStatus(e){return this.privatePostV1ClearingStatus(e)}privatePostV1ClearingCancel(e){return this.privatePostV1ClearingCancel(e)}privatePostV1ClearingConfirm(e){return this.privatePostV1ClearingConfirm(e)}privatePostV1Balances(e){return this.privatePostV1Balances(e)}privatePostV1BalancesStaking(e){return this.privatePostV1BalancesStaking(e)}privatePostV1NotionalbalancesCurrency(e){return this.privatePostV1NotionalbalancesCurrency(e)}privatePostV1Transfers(e){return this.privatePostV1Transfers(e)}privatePostV1AddressesNetwork(e){return this.privatePostV1AddressesNetwork(e)}privatePostV1DepositNetworkNewAddress(e){return this.privatePostV1DepositNetworkNewAddress(e)}privatePostV1DepositCurrencyNewAddress(e){return this.privatePostV1DepositCurrencyNewAddress(e)}privatePostV1WithdrawCurrency(e){return this.privatePostV1WithdrawCurrency(e)}privatePostV1AccountTransferCurrency(e){return this.privatePostV1AccountTransferCurrency(e)}privatePostV1PaymentsAddbank(e){return this.privatePostV1PaymentsAddbank(e)}privatePostV1PaymentsMethods(e){return this.privatePostV1PaymentsMethods(e)}privatePostV1PaymentsSenWithdraw(e){return this.privatePostV1PaymentsSenWithdraw(e)}privatePostV1BalancesEarn(e){return this.privatePostV1BalancesEarn(e)}privatePostV1EarnInterest(e){return this.privatePostV1EarnInterest(e)}privatePostV1EarnHistory(e){return this.privatePostV1EarnHistory(e)}privatePostV1ApprovedAddressesNetworkRequest(e){return this.privatePostV1ApprovedAddressesNetworkRequest(e)}privatePostV1ApprovedAddressesAccountNetwork(e){return this.privatePostV1ApprovedAddressesAccountNetwork(e)}privatePostV1ApprovedAddressesNetworkRemove(e){return this.privatePostV1ApprovedAddressesNetworkRemove(e)}privatePostV1Account(e){return this.privatePostV1Account(e)}privatePostV1AccountCreate(e){return this.privatePostV1AccountCreate(e)}privatePostV1AccountList(e){return this.privatePostV1AccountList(e)}privatePostV1Heartbeat(e){return this.privatePostV1Heartbeat(e)}}},9190:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCurrency(e){return this.publicGetCurrency(e)}publicGetCurrencyCurrency(e){return this.publicGetCurrencyCurrency(e)}publicGetSymbol(e){return this.publicGetSymbol(e)}publicGetSymbolSymbol(e){return this.publicGetSymbolSymbol(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTickerSymbol(e){return this.publicGetTickerSymbol(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetTradesSymbol(e){return this.publicGetTradesSymbol(e)}publicGetOrderbook(e){return this.publicGetOrderbook(e)}publicGetOrderbookSymbol(e){return this.publicGetOrderbookSymbol(e)}publicGetCandles(e){return this.publicGetCandles(e)}publicGetCandlesSymbol(e){return this.publicGetCandlesSymbol(e)}privateGetTradingBalance(e){return this.privateGetTradingBalance(e)}privateGetOrder(e){return this.privateGetOrder(e)}privateGetOrderClientOrderId(e){return this.privateGetOrderClientOrderId(e)}privateGetTradingFeeAll(e){return this.privateGetTradingFeeAll(e)}privateGetTradingFeeSymbol(e){return this.privateGetTradingFeeSymbol(e)}privateGetMarginAccount(e){return this.privateGetMarginAccount(e)}privateGetMarginAccountSymbol(e){return this.privateGetMarginAccountSymbol(e)}privateGetMarginPosition(e){return this.privateGetMarginPosition(e)}privateGetMarginPositionSymbol(e){return this.privateGetMarginPositionSymbol(e)}privateGetMarginOrder(e){return this.privateGetMarginOrder(e)}privateGetMarginOrderClientOrderId(e){return this.privateGetMarginOrderClientOrderId(e)}privateGetHistoryOrder(e){return this.privateGetHistoryOrder(e)}privateGetHistoryTrades(e){return this.privateGetHistoryTrades(e)}privateGetHistoryOrderOrderIdTrades(e){return this.privateGetHistoryOrderOrderIdTrades(e)}privateGetAccountBalance(e){return this.privateGetAccountBalance(e)}privateGetAccountCryptoAddressCurrency(e){return this.privateGetAccountCryptoAddressCurrency(e)}privateGetAccountCryptoAddressesCurrency(e){return this.privateGetAccountCryptoAddressesCurrency(e)}privateGetAccountCryptoUsedAddressesCurrency(e){return this.privateGetAccountCryptoUsedAddressesCurrency(e)}privateGetAccountCryptoEstimateWithdraw(e){return this.privateGetAccountCryptoEstimateWithdraw(e)}privateGetAccountCryptoIsMineAddress(e){return this.privateGetAccountCryptoIsMineAddress(e)}privateGetAccountTransactions(e){return this.privateGetAccountTransactions(e)}privateGetAccountTransactionsId(e){return this.privateGetAccountTransactionsId(e)}privateGetSubAcc(e){return this.privateGetSubAcc(e)}privateGetSubAccAcl(e){return this.privateGetSubAccAcl(e)}privateGetSubAccBalanceSubAccountUserID(e){return this.privateGetSubAccBalanceSubAccountUserID(e)}privateGetSubAccDepositAddressSubAccountUserIdCurrency(e){return this.privateGetSubAccDepositAddressSubAccountUserIdCurrency(e)}privatePostOrder(e){return this.privatePostOrder(e)}privatePostMarginOrder(e){return this.privatePostMarginOrder(e)}privatePostAccountCryptoAddressCurrency(e){return this.privatePostAccountCryptoAddressCurrency(e)}privatePostAccountCryptoWithdraw(e){return this.privatePostAccountCryptoWithdraw(e)}privatePostAccountCryptoTransferConvert(e){return this.privatePostAccountCryptoTransferConvert(e)}privatePostAccountTransfer(e){return this.privatePostAccountTransfer(e)}privatePostAccountTransferInternal(e){return this.privatePostAccountTransferInternal(e)}privatePostSubAccFreeze(e){return this.privatePostSubAccFreeze(e)}privatePostSubAccActivate(e){return this.privatePostSubAccActivate(e)}privatePostSubAccTransfer(e){return this.privatePostSubAccTransfer(e)}privatePutOrderClientOrderId(e){return this.privatePutOrderClientOrderId(e)}privatePutMarginAccountSymbol(e){return this.privatePutMarginAccountSymbol(e)}privatePutMarginOrderClientOrderId(e){return this.privatePutMarginOrderClientOrderId(e)}privatePutAccountCryptoWithdrawId(e){return this.privatePutAccountCryptoWithdrawId(e)}privatePutSubAccAclSubAccountUserId(e){return this.privatePutSubAccAclSubAccountUserId(e)}privateDeleteOrder(e){return this.privateDeleteOrder(e)}privateDeleteOrderClientOrderId(e){return this.privateDeleteOrderClientOrderId(e)}privateDeleteMarginAccount(e){return this.privateDeleteMarginAccount(e)}privateDeleteMarginAccountSymbol(e){return this.privateDeleteMarginAccountSymbol(e)}privateDeleteMarginPosition(e){return this.privateDeleteMarginPosition(e)}privateDeleteMarginPositionSymbol(e){return this.privateDeleteMarginPositionSymbol(e)}privateDeleteMarginOrder(e){return this.privateDeleteMarginOrder(e)}privateDeleteMarginOrderClientOrderId(e){return this.privateDeleteMarginOrderClientOrderId(e)}privateDeleteAccountCryptoWithdrawId(e){return this.privateDeleteAccountCryptoWithdrawId(e)}privatePatchOrderClientOrderId(e){return this.privatePatchOrderClientOrderId(e)}}},9426:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetPublicCurrency(e){return this.publicGetPublicCurrency(e)}publicGetPublicSymbol(e){return this.publicGetPublicSymbol(e)}publicGetPublicTicker(e){return this.publicGetPublicTicker(e)}publicGetPublicPriceRate(e){return this.publicGetPublicPriceRate(e)}publicGetPublicTrades(e){return this.publicGetPublicTrades(e)}publicGetPublicOrderbook(e){return this.publicGetPublicOrderbook(e)}publicGetPublicCandles(e){return this.publicGetPublicCandles(e)}publicGetPublicFuturesInfo(e){return this.publicGetPublicFuturesInfo(e)}publicGetPublicFuturesHistoryFunding(e){return this.publicGetPublicFuturesHistoryFunding(e)}publicGetPublicFuturesCandlesIndexPrice(e){return this.publicGetPublicFuturesCandlesIndexPrice(e)}publicGetPublicFuturesCandlesMarkPrice(e){return this.publicGetPublicFuturesCandlesMarkPrice(e)}publicGetPublicFuturesCandlesPremiumIndex(e){return this.publicGetPublicFuturesCandlesPremiumIndex(e)}publicGetPublicFuturesCandlesOpenInterest(e){return this.publicGetPublicFuturesCandlesOpenInterest(e)}privateGetSpotBalance(e){return this.privateGetSpotBalance(e)}privateGetSpotOrder(e){return this.privateGetSpotOrder(e)}privateGetSpotOrderClientOrderId(e){return this.privateGetSpotOrderClientOrderId(e)}privateGetSpotFee(e){return this.privateGetSpotFee(e)}privateGetSpotFeeSymbol(e){return this.privateGetSpotFeeSymbol(e)}privateGetSpotHistoryOrder(e){return this.privateGetSpotHistoryOrder(e)}privateGetSpotHistoryTrade(e){return this.privateGetSpotHistoryTrade(e)}privateGetMarginAccount(e){return this.privateGetMarginAccount(e)}privateGetMarginAccountIsolatedSymbol(e){return this.privateGetMarginAccountIsolatedSymbol(e)}privateGetMarginOrder(e){return this.privateGetMarginOrder(e)}privateGetMarginOrderClientOrderId(e){return this.privateGetMarginOrderClientOrderId(e)}privateGetMarginHistoryClearing(e){return this.privateGetMarginHistoryClearing(e)}privateGetMarginHistoryOrder(e){return this.privateGetMarginHistoryOrder(e)}privateGetMarginHistoryPositions(e){return this.privateGetMarginHistoryPositions(e)}privateGetMarginHistoryTrade(e){return this.privateGetMarginHistoryTrade(e)}privateGetFuturesBalance(e){return this.privateGetFuturesBalance(e)}privateGetFuturesAccount(e){return this.privateGetFuturesAccount(e)}privateGetFuturesAccountIsolatedSymbol(e){return this.privateGetFuturesAccountIsolatedSymbol(e)}privateGetFuturesOrder(e){return this.privateGetFuturesOrder(e)}privateGetFuturesOrderClientOrderId(e){return this.privateGetFuturesOrderClientOrderId(e)}privateGetFuturesFee(e){return this.privateGetFuturesFee(e)}privateGetFuturesFeeSymbol(e){return this.privateGetFuturesFeeSymbol(e)}privateGetFuturesHistoryClearing(e){return this.privateGetFuturesHistoryClearing(e)}privateGetFuturesHistoryOrder(e){return this.privateGetFuturesHistoryOrder(e)}privateGetFuturesHistoryPositions(e){return this.privateGetFuturesHistoryPositions(e)}privateGetFuturesHistoryTrade(e){return this.privateGetFuturesHistoryTrade(e)}privateGetWalletBalance(e){return this.privateGetWalletBalance(e)}privateGetWalletCryptoAddress(e){return this.privateGetWalletCryptoAddress(e)}privateGetWalletCryptoAddressRecentDeposit(e){return this.privateGetWalletCryptoAddressRecentDeposit(e)}privateGetWalletCryptoAddressRecentWithdraw(e){return this.privateGetWalletCryptoAddressRecentWithdraw(e)}privateGetWalletCryptoAddressCheckMine(e){return this.privateGetWalletCryptoAddressCheckMine(e)}privateGetWalletTransactions(e){return this.privateGetWalletTransactions(e)}privateGetWalletCryptoCheckOffchainAvailable(e){return this.privateGetWalletCryptoCheckOffchainAvailable(e)}privateGetWalletCryptoFeeEstimate(e){return this.privateGetWalletCryptoFeeEstimate(e)}privateGetSubAccount(e){return this.privateGetSubAccount(e)}privateGetSubAccountAcl(e){return this.privateGetSubAccountAcl(e)}privateGetSubAccountBalanceSubAccID(e){return this.privateGetSubAccountBalanceSubAccID(e)}privateGetSubAccountCryptoAddressSubAccIDCurrency(e){return this.privateGetSubAccountCryptoAddressSubAccIDCurrency(e)}privatePostSpotOrder(e){return this.privatePostSpotOrder(e)}privatePostMarginOrder(e){return this.privatePostMarginOrder(e)}privatePostFuturesOrder(e){return this.privatePostFuturesOrder(e)}privatePostWalletConvert(e){return this.privatePostWalletConvert(e)}privatePostWalletCryptoAddress(e){return this.privatePostWalletCryptoAddress(e)}privatePostWalletCryptoWithdraw(e){return this.privatePostWalletCryptoWithdraw(e)}privatePostWalletTransfer(e){return this.privatePostWalletTransfer(e)}privatePostSubAccountFreeze(e){return this.privatePostSubAccountFreeze(e)}privatePostSubAccountActivate(e){return this.privatePostSubAccountActivate(e)}privatePostSubAccountTransfer(e){return this.privatePostSubAccountTransfer(e)}privatePostSubAccountAcl(e){return this.privatePostSubAccountAcl(e)}privatePatchSpotOrderClientOrderId(e){return this.privatePatchSpotOrderClientOrderId(e)}privatePatchMarginOrderClientOrderId(e){return this.privatePatchMarginOrderClientOrderId(e)}privatePatchFuturesOrderClientOrderId(e){return this.privatePatchFuturesOrderClientOrderId(e)}privateDeleteSpotOrder(e){return this.privateDeleteSpotOrder(e)}privateDeleteSpotOrderClientOrderId(e){return this.privateDeleteSpotOrderClientOrderId(e)}privateDeleteMarginPosition(e){return this.privateDeleteMarginPosition(e)}privateDeleteMarginPositionIsolatedSymbol(e){return this.privateDeleteMarginPositionIsolatedSymbol(e)}privateDeleteMarginOrder(e){return this.privateDeleteMarginOrder(e)}privateDeleteMarginOrderClientOrderId(e){return this.privateDeleteMarginOrderClientOrderId(e)}privateDeleteFuturesPosition(e){return this.privateDeleteFuturesPosition(e)}privateDeleteFuturesPositionIsolatedSymbol(e){return this.privateDeleteFuturesPositionIsolatedSymbol(e)}privateDeleteFuturesOrder(e){return this.privateDeleteFuturesOrder(e)}privateDeleteFuturesOrderClientOrderId(e){return this.privateDeleteFuturesOrderClientOrderId(e)}privateDeleteWalletCryptoWithdrawId(e){return this.privateDeleteWalletCryptoWithdrawId(e)}privatePutMarginAccountIsolatedSymbol(e){return this.privatePutMarginAccountIsolatedSymbol(e)}privatePutFuturesAccountIsolatedSymbol(e){return this.privatePutFuturesAccountIsolatedSymbol(e)}privatePutWalletCryptoWithdrawId(e){return this.privatePutWalletCryptoWithdrawId(e)}}},3727:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetHealth(e){return this.publicGetHealth(e)}publicGetConstants(e){return this.publicGetConstants(e)}publicGetKit(e){return this.publicGetKit(e)}publicGetTiers(e){return this.publicGetTiers(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetOrderbook(e){return this.publicGetOrderbook(e)}publicGetOrderbooks(e){return this.publicGetOrderbooks(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetChart(e){return this.publicGetChart(e)}publicGetCharts(e){return this.publicGetCharts(e)}publicGetUdfConfig(e){return this.publicGetUdfConfig(e)}publicGetUdfHistory(e){return this.publicGetUdfHistory(e)}publicGetUdfSymbols(e){return this.publicGetUdfSymbols(e)}privateGetUser(e){return this.privateGetUser(e)}privateGetUserBalance(e){return this.privateGetUserBalance(e)}privateGetUserDeposits(e){return this.privateGetUserDeposits(e)}privateGetUserWithdrawals(e){return this.privateGetUserWithdrawals(e)}privateGetUserWithdrawalFee(e){return this.privateGetUserWithdrawalFee(e)}privateGetUserTrades(e){return this.privateGetUserTrades(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrder(e){return this.privateGetOrder(e)}privatePostUserWithdrawal(e){return this.privatePostUserWithdrawal(e)}privatePostOrder(e){return this.privatePostOrder(e)}privateDeleteOrderAll(e){return this.privateDeleteOrderAll(e)}privateDeleteOrder(e){return this.privateDeleteOrder(e)}}},2498:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{v2PublicGetReferenceCurrencies(e){return this.v2PublicGetReferenceCurrencies(e)}v2PublicGetMarketStatus(e){return this.v2PublicGetMarketStatus(e)}v2PrivateGetAccountLedger(e){return this.v2PrivateGetAccountLedger(e)}v2PrivateGetAccountWithdrawQuota(e){return this.v2PrivateGetAccountWithdrawQuota(e)}v2PrivateGetAccountWithdrawAddress(e){return this.v2PrivateGetAccountWithdrawAddress(e)}v2PrivateGetAccountDepositAddress(e){return this.v2PrivateGetAccountDepositAddress(e)}v2PrivateGetAccountRepayment(e){return this.v2PrivateGetAccountRepayment(e)}v2PrivateGetReferenceTransactFeeRate(e){return this.v2PrivateGetReferenceTransactFeeRate(e)}v2PrivateGetAccountAssetValuation(e){return this.v2PrivateGetAccountAssetValuation(e)}v2PrivateGetPointAccount(e){return this.v2PrivateGetPointAccount(e)}v2PrivateGetSubUserUserList(e){return this.v2PrivateGetSubUserUserList(e)}v2PrivateGetSubUserUserState(e){return this.v2PrivateGetSubUserUserState(e)}v2PrivateGetSubUserAccountList(e){return this.v2PrivateGetSubUserAccountList(e)}v2PrivateGetSubUserDepositAddress(e){return this.v2PrivateGetSubUserDepositAddress(e)}v2PrivateGetSubUserQueryDeposit(e){return this.v2PrivateGetSubUserQueryDeposit(e)}v2PrivateGetUserApiKey(e){return this.v2PrivateGetUserApiKey(e)}v2PrivateGetUserUid(e){return this.v2PrivateGetUserUid(e)}v2PrivateGetAlgoOrdersOpening(e){return this.v2PrivateGetAlgoOrdersOpening(e)}v2PrivateGetAlgoOrdersHistory(e){return this.v2PrivateGetAlgoOrdersHistory(e)}v2PrivateGetAlgoOrdersSpecific(e){return this.v2PrivateGetAlgoOrdersSpecific(e)}v2PrivateGetC2cOffers(e){return this.v2PrivateGetC2cOffers(e)}v2PrivateGetC2cOffer(e){return this.v2PrivateGetC2cOffer(e)}v2PrivateGetC2cTransactions(e){return this.v2PrivateGetC2cTransactions(e)}v2PrivateGetC2cRepayment(e){return this.v2PrivateGetC2cRepayment(e)}v2PrivateGetC2cAccount(e){return this.v2PrivateGetC2cAccount(e)}v2PrivateGetEtpReference(e){return this.v2PrivateGetEtpReference(e)}v2PrivateGetEtpTransactions(e){return this.v2PrivateGetEtpTransactions(e)}v2PrivateGetEtpTransaction(e){return this.v2PrivateGetEtpTransaction(e)}v2PrivateGetEtpRebalance(e){return this.v2PrivateGetEtpRebalance(e)}v2PrivateGetEtpLimit(e){return this.v2PrivateGetEtpLimit(e)}v2PrivatePostAccountTransfer(e){return this.v2PrivatePostAccountTransfer(e)}v2PrivatePostAccountRepayment(e){return this.v2PrivatePostAccountRepayment(e)}v2PrivatePostPointTransfer(e){return this.v2PrivatePostPointTransfer(e)}v2PrivatePostSubUserManagement(e){return this.v2PrivatePostSubUserManagement(e)}v2PrivatePostSubUserCreation(e){return this.v2PrivatePostSubUserCreation(e)}v2PrivatePostSubUserTradableMarket(e){return this.v2PrivatePostSubUserTradableMarket(e)}v2PrivatePostSubUserTransferability(e){return this.v2PrivatePostSubUserTransferability(e)}v2PrivatePostSubUserApiKeyGeneration(e){return this.v2PrivatePostSubUserApiKeyGeneration(e)}v2PrivatePostSubUserApiKeyModification(e){return this.v2PrivatePostSubUserApiKeyModification(e)}v2PrivatePostSubUserApiKeyDeletion(e){return this.v2PrivatePostSubUserApiKeyDeletion(e)}v2PrivatePostSubUserDeductMode(e){return this.v2PrivatePostSubUserDeductMode(e)}v2PrivatePostAlgoOrders(e){return this.v2PrivatePostAlgoOrders(e)}v2PrivatePostAlgoOrdersCancelAllAfter(e){return this.v2PrivatePostAlgoOrdersCancelAllAfter(e)}v2PrivatePostAlgoOrdersCancellation(e){return this.v2PrivatePostAlgoOrdersCancellation(e)}v2PrivatePostC2cOffer(e){return this.v2PrivatePostC2cOffer(e)}v2PrivatePostC2cCancellation(e){return this.v2PrivatePostC2cCancellation(e)}v2PrivatePostC2cCancelAll(e){return this.v2PrivatePostC2cCancelAll(e)}v2PrivatePostC2cRepayment(e){return this.v2PrivatePostC2cRepayment(e)}v2PrivatePostC2cTransfer(e){return this.v2PrivatePostC2cTransfer(e)}v2PrivatePostEtpCreation(e){return this.v2PrivatePostEtpCreation(e)}v2PrivatePostEtpRedemption(e){return this.v2PrivatePostEtpRedemption(e)}v2PrivatePostEtpTransactIdCancel(e){return this.v2PrivatePostEtpTransactIdCancel(e)}v2PrivatePostEtpBatchCancel(e){return this.v2PrivatePostEtpBatchCancel(e)}publicGetCommonSymbols(e){return this.publicGetCommonSymbols(e)}publicGetCommonCurrencys(e){return this.publicGetCommonCurrencys(e)}publicGetCommonTimestamp(e){return this.publicGetCommonTimestamp(e)}publicGetCommonExchange(e){return this.publicGetCommonExchange(e)}publicGetSettingsCurrencys(e){return this.publicGetSettingsCurrencys(e)}privateGetAccountAccounts(e){return this.privateGetAccountAccounts(e)}privateGetAccountAccountsIdBalance(e){return this.privateGetAccountAccountsIdBalance(e)}privateGetAccountAccountsSubUid(e){return this.privateGetAccountAccountsSubUid(e)}privateGetAccountHistory(e){return this.privateGetAccountHistory(e)}privateGetCrossMarginLoanInfo(e){return this.privateGetCrossMarginLoanInfo(e)}privateGetMarginLoanInfo(e){return this.privateGetMarginLoanInfo(e)}privateGetFeeFeeRateGet(e){return this.privateGetFeeFeeRateGet(e)}privateGetOrderOpenOrders(e){return this.privateGetOrderOpenOrders(e)}privateGetOrderOrders(e){return this.privateGetOrderOrders(e)}privateGetOrderOrdersId(e){return this.privateGetOrderOrdersId(e)}privateGetOrderOrdersIdMatchresults(e){return this.privateGetOrderOrdersIdMatchresults(e)}privateGetOrderOrdersGetClientOrder(e){return this.privateGetOrderOrdersGetClientOrder(e)}privateGetOrderHistory(e){return this.privateGetOrderHistory(e)}privateGetOrderMatchresults(e){return this.privateGetOrderMatchresults(e)}privateGetQueryDepositWithdraw(e){return this.privateGetQueryDepositWithdraw(e)}privateGetMarginLoanOrders(e){return this.privateGetMarginLoanOrders(e)}privateGetMarginAccountsBalance(e){return this.privateGetMarginAccountsBalance(e)}privateGetCrossMarginLoanOrders(e){return this.privateGetCrossMarginLoanOrders(e)}privateGetCrossMarginAccountsBalance(e){return this.privateGetCrossMarginAccountsBalance(e)}privateGetPointsActions(e){return this.privateGetPointsActions(e)}privateGetPointsOrders(e){return this.privateGetPointsOrders(e)}privateGetSubuserAggregateBalance(e){return this.privateGetSubuserAggregateBalance(e)}privateGetStableCoinExchangeRate(e){return this.privateGetStableCoinExchangeRate(e)}privateGetStableCoinQuote(e){return this.privateGetStableCoinQuote(e)}privatePostAccountTransfer(e){return this.privatePostAccountTransfer(e)}privatePostFuturesTransfer(e){return this.privatePostFuturesTransfer(e)}privatePostOrderBatchOrders(e){return this.privatePostOrderBatchOrders(e)}privatePostOrderOrdersPlace(e){return this.privatePostOrderOrdersPlace(e)}privatePostOrderOrdersSubmitCancelClientOrder(e){return this.privatePostOrderOrdersSubmitCancelClientOrder(e)}privatePostOrderOrdersBatchCancelOpenOrders(e){return this.privatePostOrderOrdersBatchCancelOpenOrders(e)}privatePostOrderOrdersIdSubmitcancel(e){return this.privatePostOrderOrdersIdSubmitcancel(e)}privatePostOrderOrdersBatchcancel(e){return this.privatePostOrderOrdersBatchcancel(e)}privatePostDwWithdrawApiCreate(e){return this.privatePostDwWithdrawApiCreate(e)}privatePostDwWithdrawVirtualIdCancel(e){return this.privatePostDwWithdrawVirtualIdCancel(e)}privatePostDwTransferInMargin(e){return this.privatePostDwTransferInMargin(e)}privatePostDwTransferOutMargin(e){return this.privatePostDwTransferOutMargin(e)}privatePostMarginOrders(e){return this.privatePostMarginOrders(e)}privatePostMarginOrdersIdRepay(e){return this.privatePostMarginOrdersIdRepay(e)}privatePostCrossMarginTransferIn(e){return this.privatePostCrossMarginTransferIn(e)}privatePostCrossMarginTransferOut(e){return this.privatePostCrossMarginTransferOut(e)}privatePostCrossMarginOrders(e){return this.privatePostCrossMarginOrders(e)}privatePostCrossMarginOrdersIdRepay(e){return this.privatePostCrossMarginOrdersIdRepay(e)}privatePostStableCoinExchange(e){return this.privatePostStableCoinExchange(e)}privatePostSubuserTransfer(e){return this.privatePostSubuserTransfer(e)}statusPublicSpotGetApiV2SummaryJson(e){return this.statusPublicSpotGetApiV2SummaryJson(e)}statusPublicFutureInverseGetApiV2SummaryJson(e){return this.statusPublicFutureInverseGetApiV2SummaryJson(e)}statusPublicFutureLinearGetApiV2SummaryJson(e){return this.statusPublicFutureLinearGetApiV2SummaryJson(e)}statusPublicSwapInverseGetApiV2SummaryJson(e){return this.statusPublicSwapInverseGetApiV2SummaryJson(e)}statusPublicSwapLinearGetApiV2SummaryJson(e){return this.statusPublicSwapLinearGetApiV2SummaryJson(e)}spotPublicGetV2MarketStatus(e){return this.spotPublicGetV2MarketStatus(e)}spotPublicGetV1CommonSymbols(e){return this.spotPublicGetV1CommonSymbols(e)}spotPublicGetV1CommonCurrencys(e){return this.spotPublicGetV1CommonCurrencys(e)}spotPublicGetV2SettingsCommonCurrencies(e){return this.spotPublicGetV2SettingsCommonCurrencies(e)}spotPublicGetV2ReferenceCurrencies(e){return this.spotPublicGetV2ReferenceCurrencies(e)}spotPublicGetV1CommonTimestamp(e){return this.spotPublicGetV1CommonTimestamp(e)}spotPublicGetV1CommonExchange(e){return this.spotPublicGetV1CommonExchange(e)}spotPublicGetV1SettingsCommonChains(e){return this.spotPublicGetV1SettingsCommonChains(e)}spotPublicGetV1SettingsCommonCurrencys(e){return this.spotPublicGetV1SettingsCommonCurrencys(e)}spotPublicGetV1SettingsCommonSymbols(e){return this.spotPublicGetV1SettingsCommonSymbols(e)}spotPublicGetV2SettingsCommonSymbols(e){return this.spotPublicGetV2SettingsCommonSymbols(e)}spotPublicGetV1SettingsCommonMarketSymbols(e){return this.spotPublicGetV1SettingsCommonMarketSymbols(e)}spotPublicGetMarketHistoryCandles(e){return this.spotPublicGetMarketHistoryCandles(e)}spotPublicGetMarketHistoryKline(e){return this.spotPublicGetMarketHistoryKline(e)}spotPublicGetMarketDetailMerged(e){return this.spotPublicGetMarketDetailMerged(e)}spotPublicGetMarketTickers(e){return this.spotPublicGetMarketTickers(e)}spotPublicGetMarketDetail(e){return this.spotPublicGetMarketDetail(e)}spotPublicGetMarketDepth(e){return this.spotPublicGetMarketDepth(e)}spotPublicGetMarketTrade(e){return this.spotPublicGetMarketTrade(e)}spotPublicGetMarketHistoryTrade(e){return this.spotPublicGetMarketHistoryTrade(e)}spotPublicGetMarketEtp(e){return this.spotPublicGetMarketEtp(e)}spotPublicGetV2EtpReference(e){return this.spotPublicGetV2EtpReference(e)}spotPublicGetV2EtpRebalance(e){return this.spotPublicGetV2EtpRebalance(e)}spotPrivateGetV1AccountAccounts(e){return this.spotPrivateGetV1AccountAccounts(e)}spotPrivateGetV1AccountAccountsAccountIdBalance(e){return this.spotPrivateGetV1AccountAccountsAccountIdBalance(e)}spotPrivateGetV2AccountValuation(e){return this.spotPrivateGetV2AccountValuation(e)}spotPrivateGetV2AccountAssetValuation(e){return this.spotPrivateGetV2AccountAssetValuation(e)}spotPrivateGetV1AccountHistory(e){return this.spotPrivateGetV1AccountHistory(e)}spotPrivateGetV2AccountLedger(e){return this.spotPrivateGetV2AccountLedger(e)}spotPrivateGetV2PointAccount(e){return this.spotPrivateGetV2PointAccount(e)}spotPrivateGetV2AccountDepositAddress(e){return this.spotPrivateGetV2AccountDepositAddress(e)}spotPrivateGetV2AccountWithdrawQuota(e){return this.spotPrivateGetV2AccountWithdrawQuota(e)}spotPrivateGetV2AccountWithdrawAddress(e){return this.spotPrivateGetV2AccountWithdrawAddress(e)}spotPrivateGetV2ReferenceCurrencies(e){return this.spotPrivateGetV2ReferenceCurrencies(e)}spotPrivateGetV1QueryDepositWithdraw(e){return this.spotPrivateGetV1QueryDepositWithdraw(e)}spotPrivateGetV1QueryWithdrawClientOrderId(e){return this.spotPrivateGetV1QueryWithdrawClientOrderId(e)}spotPrivateGetV2UserApiKey(e){return this.spotPrivateGetV2UserApiKey(e)}spotPrivateGetV2UserUid(e){return this.spotPrivateGetV2UserUid(e)}spotPrivateGetV2SubUserUserList(e){return this.spotPrivateGetV2SubUserUserList(e)}spotPrivateGetV2SubUserUserState(e){return this.spotPrivateGetV2SubUserUserState(e)}spotPrivateGetV2SubUserAccountList(e){return this.spotPrivateGetV2SubUserAccountList(e)}spotPrivateGetV2SubUserDepositAddress(e){return this.spotPrivateGetV2SubUserDepositAddress(e)}spotPrivateGetV2SubUserQueryDeposit(e){return this.spotPrivateGetV2SubUserQueryDeposit(e)}spotPrivateGetV1SubuserAggregateBalance(e){return this.spotPrivateGetV1SubuserAggregateBalance(e)}spotPrivateGetV1AccountAccountsSubUid(e){return this.spotPrivateGetV1AccountAccountsSubUid(e)}spotPrivateGetV1OrderOpenOrders(e){return this.spotPrivateGetV1OrderOpenOrders(e)}spotPrivateGetV1OrderOrdersOrderId(e){return this.spotPrivateGetV1OrderOrdersOrderId(e)}spotPrivateGetV1OrderOrdersGetClientOrder(e){return this.spotPrivateGetV1OrderOrdersGetClientOrder(e)}spotPrivateGetV1OrderOrdersOrderIdMatchresult(e){return this.spotPrivateGetV1OrderOrdersOrderIdMatchresult(e)}spotPrivateGetV1OrderOrdersOrderIdMatchresults(e){return this.spotPrivateGetV1OrderOrdersOrderIdMatchresults(e)}spotPrivateGetV1OrderOrders(e){return this.spotPrivateGetV1OrderOrders(e)}spotPrivateGetV1OrderHistory(e){return this.spotPrivateGetV1OrderHistory(e)}spotPrivateGetV1OrderMatchresults(e){return this.spotPrivateGetV1OrderMatchresults(e)}spotPrivateGetV2ReferenceTransactFeeRate(e){return this.spotPrivateGetV2ReferenceTransactFeeRate(e)}spotPrivateGetV2AlgoOrdersOpening(e){return this.spotPrivateGetV2AlgoOrdersOpening(e)}spotPrivateGetV2AlgoOrdersHistory(e){return this.spotPrivateGetV2AlgoOrdersHistory(e)}spotPrivateGetV2AlgoOrdersSpecific(e){return this.spotPrivateGetV2AlgoOrdersSpecific(e)}spotPrivateGetV1MarginLoanInfo(e){return this.spotPrivateGetV1MarginLoanInfo(e)}spotPrivateGetV1MarginLoanOrders(e){return this.spotPrivateGetV1MarginLoanOrders(e)}spotPrivateGetV1MarginAccountsBalance(e){return this.spotPrivateGetV1MarginAccountsBalance(e)}spotPrivateGetV1CrossMarginLoanInfo(e){return this.spotPrivateGetV1CrossMarginLoanInfo(e)}spotPrivateGetV1CrossMarginLoanOrders(e){return this.spotPrivateGetV1CrossMarginLoanOrders(e)}spotPrivateGetV1CrossMarginAccountsBalance(e){return this.spotPrivateGetV1CrossMarginAccountsBalance(e)}spotPrivateGetV2AccountRepayment(e){return this.spotPrivateGetV2AccountRepayment(e)}spotPrivateGetV1StableCoinQuote(e){return this.spotPrivateGetV1StableCoinQuote(e)}spotPrivateGetV1StableCoinExchangeRate(e){return this.spotPrivateGetV1StableCoinExchangeRate(e)}spotPrivateGetV2EtpTransactions(e){return this.spotPrivateGetV2EtpTransactions(e)}spotPrivateGetV2EtpTransaction(e){return this.spotPrivateGetV2EtpTransaction(e)}spotPrivateGetV2EtpLimit(e){return this.spotPrivateGetV2EtpLimit(e)}spotPrivatePostV1AccountTransfer(e){return this.spotPrivatePostV1AccountTransfer(e)}spotPrivatePostV1FuturesTransfer(e){return this.spotPrivatePostV1FuturesTransfer(e)}spotPrivatePostV2PointTransfer(e){return this.spotPrivatePostV2PointTransfer(e)}spotPrivatePostV2AccountTransfer(e){return this.spotPrivatePostV2AccountTransfer(e)}spotPrivatePostV1DwWithdrawApiCreate(e){return this.spotPrivatePostV1DwWithdrawApiCreate(e)}spotPrivatePostV1DwWithdrawVirtualWithdrawIdCancel(e){return this.spotPrivatePostV1DwWithdrawVirtualWithdrawIdCancel(e)}spotPrivatePostV2SubUserDeductMode(e){return this.spotPrivatePostV2SubUserDeductMode(e)}spotPrivatePostV2SubUserCreation(e){return this.spotPrivatePostV2SubUserCreation(e)}spotPrivatePostV2SubUserManagement(e){return this.spotPrivatePostV2SubUserManagement(e)}spotPrivatePostV2SubUserTradableMarket(e){return this.spotPrivatePostV2SubUserTradableMarket(e)}spotPrivatePostV2SubUserTransferability(e){return this.spotPrivatePostV2SubUserTransferability(e)}spotPrivatePostV2SubUserApiKeyGeneration(e){return this.spotPrivatePostV2SubUserApiKeyGeneration(e)}spotPrivatePostV2SubUserApiKeyModification(e){return this.spotPrivatePostV2SubUserApiKeyModification(e)}spotPrivatePostV2SubUserApiKeyDeletion(e){return this.spotPrivatePostV2SubUserApiKeyDeletion(e)}spotPrivatePostV1SubuserTransfer(e){return this.spotPrivatePostV1SubuserTransfer(e)}spotPrivatePostV1OrderOrdersPlace(e){return this.spotPrivatePostV1OrderOrdersPlace(e)}spotPrivatePostV1OrderBatchOrders(e){return this.spotPrivatePostV1OrderBatchOrders(e)}spotPrivatePostV1OrderOrdersOrderIdSubmitcancel(e){return this.spotPrivatePostV1OrderOrdersOrderIdSubmitcancel(e)}spotPrivatePostV1OrderOrdersSubmitCancelClientOrder(e){return this.spotPrivatePostV1OrderOrdersSubmitCancelClientOrder(e)}spotPrivatePostV1OrderOrdersBatchCancelOpenOrders(e){return this.spotPrivatePostV1OrderOrdersBatchCancelOpenOrders(e)}spotPrivatePostV1OrderOrdersBatchcancel(e){return this.spotPrivatePostV1OrderOrdersBatchcancel(e)}spotPrivatePostV2AlgoOrdersCancelAllAfter(e){return this.spotPrivatePostV2AlgoOrdersCancelAllAfter(e)}spotPrivatePostV2AlgoOrders(e){return this.spotPrivatePostV2AlgoOrders(e)}spotPrivatePostV2AlgoOrdersCancellation(e){return this.spotPrivatePostV2AlgoOrdersCancellation(e)}spotPrivatePostV2AccountRepayment(e){return this.spotPrivatePostV2AccountRepayment(e)}spotPrivatePostV1DwTransferInMargin(e){return this.spotPrivatePostV1DwTransferInMargin(e)}spotPrivatePostV1DwTransferOutMargin(e){return this.spotPrivatePostV1DwTransferOutMargin(e)}spotPrivatePostV1MarginOrders(e){return this.spotPrivatePostV1MarginOrders(e)}spotPrivatePostV1MarginOrdersOrderIdRepay(e){return this.spotPrivatePostV1MarginOrdersOrderIdRepay(e)}spotPrivatePostV1CrossMarginTransferIn(e){return this.spotPrivatePostV1CrossMarginTransferIn(e)}spotPrivatePostV1CrossMarginTransferOut(e){return this.spotPrivatePostV1CrossMarginTransferOut(e)}spotPrivatePostV1CrossMarginOrders(e){return this.spotPrivatePostV1CrossMarginOrders(e)}spotPrivatePostV1CrossMarginOrdersOrderIdRepay(e){return this.spotPrivatePostV1CrossMarginOrdersOrderIdRepay(e)}spotPrivatePostV1StableCoinExchange(e){return this.spotPrivatePostV1StableCoinExchange(e)}spotPrivatePostV2EtpCreation(e){return this.spotPrivatePostV2EtpCreation(e)}spotPrivatePostV2EtpRedemption(e){return this.spotPrivatePostV2EtpRedemption(e)}spotPrivatePostV2EtpTransactIdCancel(e){return this.spotPrivatePostV2EtpTransactIdCancel(e)}spotPrivatePostV2EtpBatchCancel(e){return this.spotPrivatePostV2EtpBatchCancel(e)}contractPublicGetApiV1Timestamp(e){return this.contractPublicGetApiV1Timestamp(e)}contractPublicGetHeartbeat(e){return this.contractPublicGetHeartbeat(e)}contractPublicGetApiV1ContractContractInfo(e){return this.contractPublicGetApiV1ContractContractInfo(e)}contractPublicGetApiV1ContractIndex(e){return this.contractPublicGetApiV1ContractIndex(e)}contractPublicGetApiV1ContractPriceLimit(e){return this.contractPublicGetApiV1ContractPriceLimit(e)}contractPublicGetApiV1ContractOpenInterest(e){return this.contractPublicGetApiV1ContractOpenInterest(e)}contractPublicGetApiV1ContractDeliveryPrice(e){return this.contractPublicGetApiV1ContractDeliveryPrice(e)}contractPublicGetMarketDepth(e){return this.contractPublicGetMarketDepth(e)}contractPublicGetMarketBbo(e){return this.contractPublicGetMarketBbo(e)}contractPublicGetMarketHistoryKline(e){return this.contractPublicGetMarketHistoryKline(e)}contractPublicGetIndexMarketHistoryMarkPriceKline(e){return this.contractPublicGetIndexMarketHistoryMarkPriceKline(e)}contractPublicGetMarketDetailMerged(e){return this.contractPublicGetMarketDetailMerged(e)}contractPublicGetMarketDetailBatchMerged(e){return this.contractPublicGetMarketDetailBatchMerged(e)}contractPublicGetV2MarketDetailBatchMerged(e){return this.contractPublicGetV2MarketDetailBatchMerged(e)}contractPublicGetMarketTrade(e){return this.contractPublicGetMarketTrade(e)}contractPublicGetMarketHistoryTrade(e){return this.contractPublicGetMarketHistoryTrade(e)}contractPublicGetApiV1ContractRiskInfo(e){return this.contractPublicGetApiV1ContractRiskInfo(e)}contractPublicGetApiV1ContractInsuranceFund(e){return this.contractPublicGetApiV1ContractInsuranceFund(e)}contractPublicGetApiV1ContractAdjustfactor(e){return this.contractPublicGetApiV1ContractAdjustfactor(e)}contractPublicGetApiV1ContractHisOpenInterest(e){return this.contractPublicGetApiV1ContractHisOpenInterest(e)}contractPublicGetApiV1ContractLadderMargin(e){return this.contractPublicGetApiV1ContractLadderMargin(e)}contractPublicGetApiV1ContractApiState(e){return this.contractPublicGetApiV1ContractApiState(e)}contractPublicGetApiV1ContractEliteAccountRatio(e){return this.contractPublicGetApiV1ContractEliteAccountRatio(e)}contractPublicGetApiV1ContractElitePositionRatio(e){return this.contractPublicGetApiV1ContractElitePositionRatio(e)}contractPublicGetApiV1ContractLiquidationOrders(e){return this.contractPublicGetApiV1ContractLiquidationOrders(e)}contractPublicGetApiV1ContractSettlementRecords(e){return this.contractPublicGetApiV1ContractSettlementRecords(e)}contractPublicGetIndexMarketHistoryIndex(e){return this.contractPublicGetIndexMarketHistoryIndex(e)}contractPublicGetIndexMarketHistoryBasis(e){return this.contractPublicGetIndexMarketHistoryBasis(e)}contractPublicGetApiV1ContractEstimatedSettlementPrice(e){return this.contractPublicGetApiV1ContractEstimatedSettlementPrice(e)}contractPublicGetApiV3ContractLiquidationOrders(e){return this.contractPublicGetApiV3ContractLiquidationOrders(e)}contractPublicGetSwapApiV1SwapContractInfo(e){return this.contractPublicGetSwapApiV1SwapContractInfo(e)}contractPublicGetSwapApiV1SwapIndex(e){return this.contractPublicGetSwapApiV1SwapIndex(e)}contractPublicGetSwapApiV1SwapPriceLimit(e){return this.contractPublicGetSwapApiV1SwapPriceLimit(e)}contractPublicGetSwapApiV1SwapOpenInterest(e){return this.contractPublicGetSwapApiV1SwapOpenInterest(e)}contractPublicGetSwapExMarketDepth(e){return this.contractPublicGetSwapExMarketDepth(e)}contractPublicGetSwapExMarketBbo(e){return this.contractPublicGetSwapExMarketBbo(e)}contractPublicGetSwapExMarketHistoryKline(e){return this.contractPublicGetSwapExMarketHistoryKline(e)}contractPublicGetIndexMarketHistorySwapMarkPriceKline(e){return this.contractPublicGetIndexMarketHistorySwapMarkPriceKline(e)}contractPublicGetSwapExMarketDetailMerged(e){return this.contractPublicGetSwapExMarketDetailMerged(e)}contractPublicGetV2SwapExMarketDetailBatchMerged(e){return this.contractPublicGetV2SwapExMarketDetailBatchMerged(e)}contractPublicGetIndexMarketHistorySwapPremiumIndexKline(e){return this.contractPublicGetIndexMarketHistorySwapPremiumIndexKline(e)}contractPublicGetSwapExMarketDetailBatchMerged(e){return this.contractPublicGetSwapExMarketDetailBatchMerged(e)}contractPublicGetSwapExMarketTrade(e){return this.contractPublicGetSwapExMarketTrade(e)}contractPublicGetSwapExMarketHistoryTrade(e){return this.contractPublicGetSwapExMarketHistoryTrade(e)}contractPublicGetSwapApiV1SwapRiskInfo(e){return this.contractPublicGetSwapApiV1SwapRiskInfo(e)}contractPublicGetSwapApiV1SwapInsuranceFund(e){return this.contractPublicGetSwapApiV1SwapInsuranceFund(e)}contractPublicGetSwapApiV1SwapAdjustfactor(e){return this.contractPublicGetSwapApiV1SwapAdjustfactor(e)}contractPublicGetSwapApiV1SwapHisOpenInterest(e){return this.contractPublicGetSwapApiV1SwapHisOpenInterest(e)}contractPublicGetSwapApiV1SwapLadderMargin(e){return this.contractPublicGetSwapApiV1SwapLadderMargin(e)}contractPublicGetSwapApiV1SwapApiState(e){return this.contractPublicGetSwapApiV1SwapApiState(e)}contractPublicGetSwapApiV1SwapEliteAccountRatio(e){return this.contractPublicGetSwapApiV1SwapEliteAccountRatio(e)}contractPublicGetSwapApiV1SwapElitePositionRatio(e){return this.contractPublicGetSwapApiV1SwapElitePositionRatio(e)}contractPublicGetSwapApiV1SwapEstimatedSettlementPrice(e){return this.contractPublicGetSwapApiV1SwapEstimatedSettlementPrice(e)}contractPublicGetSwapApiV1SwapLiquidationOrders(e){return this.contractPublicGetSwapApiV1SwapLiquidationOrders(e)}contractPublicGetSwapApiV1SwapSettlementRecords(e){return this.contractPublicGetSwapApiV1SwapSettlementRecords(e)}contractPublicGetSwapApiV1SwapFundingRate(e){return this.contractPublicGetSwapApiV1SwapFundingRate(e)}contractPublicGetSwapApiV1SwapBatchFundingRate(e){return this.contractPublicGetSwapApiV1SwapBatchFundingRate(e)}contractPublicGetSwapApiV1SwapHistoricalFundingRate(e){return this.contractPublicGetSwapApiV1SwapHistoricalFundingRate(e)}contractPublicGetSwapApiV3SwapLiquidationOrders(e){return this.contractPublicGetSwapApiV3SwapLiquidationOrders(e)}contractPublicGetIndexMarketHistorySwapEstimatedRateKline(e){return this.contractPublicGetIndexMarketHistorySwapEstimatedRateKline(e)}contractPublicGetIndexMarketHistorySwapBasis(e){return this.contractPublicGetIndexMarketHistorySwapBasis(e)}contractPublicGetLinearSwapApiV1SwapContractInfo(e){return this.contractPublicGetLinearSwapApiV1SwapContractInfo(e)}contractPublicGetLinearSwapApiV1SwapIndex(e){return this.contractPublicGetLinearSwapApiV1SwapIndex(e)}contractPublicGetLinearSwapApiV1SwapPriceLimit(e){return this.contractPublicGetLinearSwapApiV1SwapPriceLimit(e)}contractPublicGetLinearSwapApiV1SwapOpenInterest(e){return this.contractPublicGetLinearSwapApiV1SwapOpenInterest(e)}contractPublicGetLinearSwapExMarketDepth(e){return this.contractPublicGetLinearSwapExMarketDepth(e)}contractPublicGetLinearSwapExMarketBbo(e){return this.contractPublicGetLinearSwapExMarketBbo(e)}contractPublicGetLinearSwapExMarketHistoryKline(e){return this.contractPublicGetLinearSwapExMarketHistoryKline(e)}contractPublicGetIndexMarketHistoryLinearSwapMarkPriceKline(e){return this.contractPublicGetIndexMarketHistoryLinearSwapMarkPriceKline(e)}contractPublicGetLinearSwapExMarketDetailMerged(e){return this.contractPublicGetLinearSwapExMarketDetailMerged(e)}contractPublicGetLinearSwapExMarketDetailBatchMerged(e){return this.contractPublicGetLinearSwapExMarketDetailBatchMerged(e)}contractPublicGetV2LinearSwapExMarketDetailBatchMerged(e){return this.contractPublicGetV2LinearSwapExMarketDetailBatchMerged(e)}contractPublicGetLinearSwapExMarketTrade(e){return this.contractPublicGetLinearSwapExMarketTrade(e)}contractPublicGetLinearSwapExMarketHistoryTrade(e){return this.contractPublicGetLinearSwapExMarketHistoryTrade(e)}contractPublicGetLinearSwapApiV1SwapRiskInfo(e){return this.contractPublicGetLinearSwapApiV1SwapRiskInfo(e)}contractPublicGetSwapApiV1LinearSwapApiV1SwapInsuranceFund(e){return this.contractPublicGetSwapApiV1LinearSwapApiV1SwapInsuranceFund(e)}contractPublicGetLinearSwapApiV1SwapAdjustfactor(e){return this.contractPublicGetLinearSwapApiV1SwapAdjustfactor(e)}contractPublicGetLinearSwapApiV1SwapCrossAdjustfactor(e){return this.contractPublicGetLinearSwapApiV1SwapCrossAdjustfactor(e)}contractPublicGetLinearSwapApiV1SwapHisOpenInterest(e){return this.contractPublicGetLinearSwapApiV1SwapHisOpenInterest(e)}contractPublicGetLinearSwapApiV1SwapLadderMargin(e){return this.contractPublicGetLinearSwapApiV1SwapLadderMargin(e)}contractPublicGetLinearSwapApiV1SwapCrossLadderMargin(e){return this.contractPublicGetLinearSwapApiV1SwapCrossLadderMargin(e)}contractPublicGetLinearSwapApiV1SwapApiState(e){return this.contractPublicGetLinearSwapApiV1SwapApiState(e)}contractPublicGetLinearSwapApiV1SwapCrossTransferState(e){return this.contractPublicGetLinearSwapApiV1SwapCrossTransferState(e)}contractPublicGetLinearSwapApiV1SwapCrossTradeState(e){return this.contractPublicGetLinearSwapApiV1SwapCrossTradeState(e)}contractPublicGetLinearSwapApiV1SwapEliteAccountRatio(e){return this.contractPublicGetLinearSwapApiV1SwapEliteAccountRatio(e)}contractPublicGetLinearSwapApiV1SwapElitePositionRatio(e){return this.contractPublicGetLinearSwapApiV1SwapElitePositionRatio(e)}contractPublicGetLinearSwapApiV1SwapLiquidationOrders(e){return this.contractPublicGetLinearSwapApiV1SwapLiquidationOrders(e)}contractPublicGetLinearSwapApiV1SwapSettlementRecords(e){return this.contractPublicGetLinearSwapApiV1SwapSettlementRecords(e)}contractPublicGetLinearSwapApiV1SwapFundingRate(e){return this.contractPublicGetLinearSwapApiV1SwapFundingRate(e)}contractPublicGetLinearSwapApiV1SwapBatchFundingRate(e){return this.contractPublicGetLinearSwapApiV1SwapBatchFundingRate(e)}contractPublicGetLinearSwapApiV1SwapHistoricalFundingRate(e){return this.contractPublicGetLinearSwapApiV1SwapHistoricalFundingRate(e)}contractPublicGetLinearSwapApiV3SwapLiquidationOrders(e){return this.contractPublicGetLinearSwapApiV3SwapLiquidationOrders(e)}contractPublicGetIndexMarketHistoryLinearSwapPremiumIndexKline(e){return this.contractPublicGetIndexMarketHistoryLinearSwapPremiumIndexKline(e)}contractPublicGetIndexMarketHistoryLinearSwapEstimatedRateKline(e){return this.contractPublicGetIndexMarketHistoryLinearSwapEstimatedRateKline(e)}contractPublicGetIndexMarketHistoryLinearSwapBasis(e){return this.contractPublicGetIndexMarketHistoryLinearSwapBasis(e)}contractPublicGetLinearSwapApiV1SwapEstimatedSettlementPrice(e){return this.contractPublicGetLinearSwapApiV1SwapEstimatedSettlementPrice(e)}contractPrivateGetApiV1ContractApiTradingStatus(e){return this.contractPrivateGetApiV1ContractApiTradingStatus(e)}contractPrivateGetSwapApiV1SwapApiTradingStatus(e){return this.contractPrivateGetSwapApiV1SwapApiTradingStatus(e)}contractPrivateGetLinearSwapApiV1SwapApiTradingStatus(e){return this.contractPrivateGetLinearSwapApiV1SwapApiTradingStatus(e)}contractPrivateGetLinearSwapApiV3UnifiedAccountInfo(e){return this.contractPrivateGetLinearSwapApiV3UnifiedAccountInfo(e)}contractPrivateGetLinearSwapApiV3SwapUnifiedAccountType(e){return this.contractPrivateGetLinearSwapApiV3SwapUnifiedAccountType(e)}contractPrivatePostApiV1ContractBalanceValuation(e){return this.contractPrivatePostApiV1ContractBalanceValuation(e)}contractPrivatePostApiV1ContractAccountInfo(e){return this.contractPrivatePostApiV1ContractAccountInfo(e)}contractPrivatePostApiV1ContractPositionInfo(e){return this.contractPrivatePostApiV1ContractPositionInfo(e)}contractPrivatePostApiV1ContractSubAuth(e){return this.contractPrivatePostApiV1ContractSubAuth(e)}contractPrivatePostApiV1ContractSubAccountList(e){return this.contractPrivatePostApiV1ContractSubAccountList(e)}contractPrivatePostApiV1ContractSubAccountInfoList(e){return this.contractPrivatePostApiV1ContractSubAccountInfoList(e)}contractPrivatePostApiV1ContractSubAccountInfo(e){return this.contractPrivatePostApiV1ContractSubAccountInfo(e)}contractPrivatePostApiV1ContractSubPositionInfo(e){return this.contractPrivatePostApiV1ContractSubPositionInfo(e)}contractPrivatePostApiV1ContractFinancialRecord(e){return this.contractPrivatePostApiV1ContractFinancialRecord(e)}contractPrivatePostApiV1ContractFinancialRecordExact(e){return this.contractPrivatePostApiV1ContractFinancialRecordExact(e)}contractPrivatePostApiV1ContractUserSettlementRecords(e){return this.contractPrivatePostApiV1ContractUserSettlementRecords(e)}contractPrivatePostApiV1ContractOrderLimit(e){return this.contractPrivatePostApiV1ContractOrderLimit(e)}contractPrivatePostApiV1ContractFee(e){return this.contractPrivatePostApiV1ContractFee(e)}contractPrivatePostApiV1ContractTransferLimit(e){return this.contractPrivatePostApiV1ContractTransferLimit(e)}contractPrivatePostApiV1ContractPositionLimit(e){return this.contractPrivatePostApiV1ContractPositionLimit(e)}contractPrivatePostApiV1ContractAccountPositionInfo(e){return this.contractPrivatePostApiV1ContractAccountPositionInfo(e)}contractPrivatePostApiV1ContractMasterSubTransfer(e){return this.contractPrivatePostApiV1ContractMasterSubTransfer(e)}contractPrivatePostApiV1ContractMasterSubTransferRecord(e){return this.contractPrivatePostApiV1ContractMasterSubTransferRecord(e)}contractPrivatePostApiV1ContractAvailableLevelRate(e){return this.contractPrivatePostApiV1ContractAvailableLevelRate(e)}contractPrivatePostApiV3ContractFinancialRecord(e){return this.contractPrivatePostApiV3ContractFinancialRecord(e)}contractPrivatePostApiV3ContractFinancialRecordExact(e){return this.contractPrivatePostApiV3ContractFinancialRecordExact(e)}contractPrivatePostApiV1ContractOrder(e){return this.contractPrivatePostApiV1ContractOrder(e)}contractPrivatePostV1ContractBatchorder(e){return this.contractPrivatePostV1ContractBatchorder(e)}contractPrivatePostApiV1ContractCancel(e){return this.contractPrivatePostApiV1ContractCancel(e)}contractPrivatePostApiV1ContractCancelall(e){return this.contractPrivatePostApiV1ContractCancelall(e)}contractPrivatePostApiV1ContractSwitchLeverRate(e){return this.contractPrivatePostApiV1ContractSwitchLeverRate(e)}contractPrivatePostApiV1LightningClosePosition(e){return this.contractPrivatePostApiV1LightningClosePosition(e)}contractPrivatePostApiV1ContractOrderInfo(e){return this.contractPrivatePostApiV1ContractOrderInfo(e)}contractPrivatePostApiV1ContractOrderDetail(e){return this.contractPrivatePostApiV1ContractOrderDetail(e)}contractPrivatePostApiV1ContractOpenorders(e){return this.contractPrivatePostApiV1ContractOpenorders(e)}contractPrivatePostApiV1ContractHisorders(e){return this.contractPrivatePostApiV1ContractHisorders(e)}contractPrivatePostApiV1ContractHisordersExact(e){return this.contractPrivatePostApiV1ContractHisordersExact(e)}contractPrivatePostApiV1ContractMatchresults(e){return this.contractPrivatePostApiV1ContractMatchresults(e)}contractPrivatePostApiV1ContractMatchresultsExact(e){return this.contractPrivatePostApiV1ContractMatchresultsExact(e)}contractPrivatePostApiV3ContractHisorders(e){return this.contractPrivatePostApiV3ContractHisorders(e)}contractPrivatePostApiV3ContractHisordersExact(e){return this.contractPrivatePostApiV3ContractHisordersExact(e)}contractPrivatePostApiV3ContractMatchresults(e){return this.contractPrivatePostApiV3ContractMatchresults(e)}contractPrivatePostApiV3ContractMatchresultsExact(e){return this.contractPrivatePostApiV3ContractMatchresultsExact(e)}contractPrivatePostApiV1ContractTriggerOrder(e){return this.contractPrivatePostApiV1ContractTriggerOrder(e)}contractPrivatePostApiV1ContractTriggerCancel(e){return this.contractPrivatePostApiV1ContractTriggerCancel(e)}contractPrivatePostApiV1ContractTriggerCancelall(e){return this.contractPrivatePostApiV1ContractTriggerCancelall(e)}contractPrivatePostApiV1ContractTriggerOpenorders(e){return this.contractPrivatePostApiV1ContractTriggerOpenorders(e)}contractPrivatePostApiV1ContractTriggerHisorders(e){return this.contractPrivatePostApiV1ContractTriggerHisorders(e)}contractPrivatePostApiV1ContractTpslOrder(e){return this.contractPrivatePostApiV1ContractTpslOrder(e)}contractPrivatePostApiV1ContractTpslCancel(e){return this.contractPrivatePostApiV1ContractTpslCancel(e)}contractPrivatePostApiV1ContractTpslCancelall(e){return this.contractPrivatePostApiV1ContractTpslCancelall(e)}contractPrivatePostApiV1ContractTpslOpenorders(e){return this.contractPrivatePostApiV1ContractTpslOpenorders(e)}contractPrivatePostApiV1ContractTpslHisorders(e){return this.contractPrivatePostApiV1ContractTpslHisorders(e)}contractPrivatePostApiV1ContractRelationTpslOrder(e){return this.contractPrivatePostApiV1ContractRelationTpslOrder(e)}contractPrivatePostApiV1ContractTrackOrder(e){return this.contractPrivatePostApiV1ContractTrackOrder(e)}contractPrivatePostApiV1ContractTrackCancel(e){return this.contractPrivatePostApiV1ContractTrackCancel(e)}contractPrivatePostApiV1ContractTrackCancelall(e){return this.contractPrivatePostApiV1ContractTrackCancelall(e)}contractPrivatePostApiV1ContractTrackOpenorders(e){return this.contractPrivatePostApiV1ContractTrackOpenorders(e)}contractPrivatePostApiV1ContractTrackHisorders(e){return this.contractPrivatePostApiV1ContractTrackHisorders(e)}contractPrivatePostSwapApiV1SwapBalanceValuation(e){return this.contractPrivatePostSwapApiV1SwapBalanceValuation(e)}contractPrivatePostSwapApiV1SwapAccountInfo(e){return this.contractPrivatePostSwapApiV1SwapAccountInfo(e)}contractPrivatePostSwapApiV1SwapPositionInfo(e){return this.contractPrivatePostSwapApiV1SwapPositionInfo(e)}contractPrivatePostSwapApiV1SwapAccountPositionInfo(e){return this.contractPrivatePostSwapApiV1SwapAccountPositionInfo(e)}contractPrivatePostSwapApiV1SwapSubAuth(e){return this.contractPrivatePostSwapApiV1SwapSubAuth(e)}contractPrivatePostSwapApiV1SwapSubAccountList(e){return this.contractPrivatePostSwapApiV1SwapSubAccountList(e)}contractPrivatePostSwapApiV1SwapSubAccountInfoList(e){return this.contractPrivatePostSwapApiV1SwapSubAccountInfoList(e)}contractPrivatePostSwapApiV1SwapSubAccountInfo(e){return this.contractPrivatePostSwapApiV1SwapSubAccountInfo(e)}contractPrivatePostSwapApiV1SwapSubPositionInfo(e){return this.contractPrivatePostSwapApiV1SwapSubPositionInfo(e)}contractPrivatePostSwapApiV1SwapFinancialRecord(e){return this.contractPrivatePostSwapApiV1SwapFinancialRecord(e)}contractPrivatePostSwapApiV1SwapFinancialRecordExact(e){return this.contractPrivatePostSwapApiV1SwapFinancialRecordExact(e)}contractPrivatePostSwapApiV1SwapUserSettlementRecords(e){return this.contractPrivatePostSwapApiV1SwapUserSettlementRecords(e)}contractPrivatePostSwapApiV1SwapAvailableLevelRate(e){return this.contractPrivatePostSwapApiV1SwapAvailableLevelRate(e)}contractPrivatePostSwapApiV1SwapOrderLimit(e){return this.contractPrivatePostSwapApiV1SwapOrderLimit(e)}contractPrivatePostSwapApiV1SwapFee(e){return this.contractPrivatePostSwapApiV1SwapFee(e)}contractPrivatePostSwapApiV1SwapTransferLimit(e){return this.contractPrivatePostSwapApiV1SwapTransferLimit(e)}contractPrivatePostSwapApiV1SwapPositionLimit(e){return this.contractPrivatePostSwapApiV1SwapPositionLimit(e)}contractPrivatePostSwapApiV1SwapMasterSubTransfer(e){return this.contractPrivatePostSwapApiV1SwapMasterSubTransfer(e)}contractPrivatePostSwapApiV1SwapMasterSubTransferRecord(e){return this.contractPrivatePostSwapApiV1SwapMasterSubTransferRecord(e)}contractPrivatePostSwapApiV3SwapFinancialRecord(e){return this.contractPrivatePostSwapApiV3SwapFinancialRecord(e)}contractPrivatePostSwapApiV3SwapFinancialRecordExact(e){return this.contractPrivatePostSwapApiV3SwapFinancialRecordExact(e)}contractPrivatePostSwapApiV1SwapOrder(e){return this.contractPrivatePostSwapApiV1SwapOrder(e)}contractPrivatePostSwapApiV1SwapBatchorder(e){return this.contractPrivatePostSwapApiV1SwapBatchorder(e)}contractPrivatePostSwapApiV1SwapCancel(e){return this.contractPrivatePostSwapApiV1SwapCancel(e)}contractPrivatePostSwapApiV1SwapCancelall(e){return this.contractPrivatePostSwapApiV1SwapCancelall(e)}contractPrivatePostSwapApiV1SwapLightningClosePosition(e){return this.contractPrivatePostSwapApiV1SwapLightningClosePosition(e)}contractPrivatePostSwapApiV1SwapSwitchLeverRate(e){return this.contractPrivatePostSwapApiV1SwapSwitchLeverRate(e)}contractPrivatePostSwapApiV1SwapOrderInfo(e){return this.contractPrivatePostSwapApiV1SwapOrderInfo(e)}contractPrivatePostSwapApiV1SwapOrderDetail(e){return this.contractPrivatePostSwapApiV1SwapOrderDetail(e)}contractPrivatePostSwapApiV1SwapOpenorders(e){return this.contractPrivatePostSwapApiV1SwapOpenorders(e)}contractPrivatePostSwapApiV1SwapHisorders(e){return this.contractPrivatePostSwapApiV1SwapHisorders(e)}contractPrivatePostSwapApiV1SwapHisordersExact(e){return this.contractPrivatePostSwapApiV1SwapHisordersExact(e)}contractPrivatePostSwapApiV1SwapMatchresults(e){return this.contractPrivatePostSwapApiV1SwapMatchresults(e)}contractPrivatePostSwapApiV1SwapMatchresultsExact(e){return this.contractPrivatePostSwapApiV1SwapMatchresultsExact(e)}contractPrivatePostSwapApiV3SwapMatchresults(e){return this.contractPrivatePostSwapApiV3SwapMatchresults(e)}contractPrivatePostSwapApiV3SwapMatchresultsExact(e){return this.contractPrivatePostSwapApiV3SwapMatchresultsExact(e)}contractPrivatePostSwapApiV3SwapHisorders(e){return this.contractPrivatePostSwapApiV3SwapHisorders(e)}contractPrivatePostSwapApiV3SwapHisordersExact(e){return this.contractPrivatePostSwapApiV3SwapHisordersExact(e)}contractPrivatePostSwapApiV1SwapTriggerOrder(e){return this.contractPrivatePostSwapApiV1SwapTriggerOrder(e)}contractPrivatePostSwapApiV1SwapTriggerCancel(e){return this.contractPrivatePostSwapApiV1SwapTriggerCancel(e)}contractPrivatePostSwapApiV1SwapTriggerCancelall(e){return this.contractPrivatePostSwapApiV1SwapTriggerCancelall(e)}contractPrivatePostSwapApiV1SwapTriggerOpenorders(e){return this.contractPrivatePostSwapApiV1SwapTriggerOpenorders(e)}contractPrivatePostSwapApiV1SwapTriggerHisorders(e){return this.contractPrivatePostSwapApiV1SwapTriggerHisorders(e)}contractPrivatePostSwapApiV1SwapTpslOrder(e){return this.contractPrivatePostSwapApiV1SwapTpslOrder(e)}contractPrivatePostSwapApiV1SwapTpslCancel(e){return this.contractPrivatePostSwapApiV1SwapTpslCancel(e)}contractPrivatePostSwapApiV1SwapTpslCancelall(e){return this.contractPrivatePostSwapApiV1SwapTpslCancelall(e)}contractPrivatePostSwapApiV1SwapTpslOpenorders(e){return this.contractPrivatePostSwapApiV1SwapTpslOpenorders(e)}contractPrivatePostSwapApiV1SwapTpslHisorders(e){return this.contractPrivatePostSwapApiV1SwapTpslHisorders(e)}contractPrivatePostSwapApiV1SwapRelationTpslOrder(e){return this.contractPrivatePostSwapApiV1SwapRelationTpslOrder(e)}contractPrivatePostSwapApiV1SwapTrackOrder(e){return this.contractPrivatePostSwapApiV1SwapTrackOrder(e)}contractPrivatePostSwapApiV1SwapTrackCancel(e){return this.contractPrivatePostSwapApiV1SwapTrackCancel(e)}contractPrivatePostSwapApiV1SwapTrackCancelall(e){return this.contractPrivatePostSwapApiV1SwapTrackCancelall(e)}contractPrivatePostSwapApiV1SwapTrackOpenorders(e){return this.contractPrivatePostSwapApiV1SwapTrackOpenorders(e)}contractPrivatePostSwapApiV1SwapTrackHisorders(e){return this.contractPrivatePostSwapApiV1SwapTrackHisorders(e)}contractPrivatePostLinearSwapApiV1SwapLeverPositionLimit(e){return this.contractPrivatePostLinearSwapApiV1SwapLeverPositionLimit(e)}contractPrivatePostLinearSwapApiV1SwapCrossLeverPositionLimit(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossLeverPositionLimit(e)}contractPrivatePostLinearSwapApiV1SwapBalanceValuation(e){return this.contractPrivatePostLinearSwapApiV1SwapBalanceValuation(e)}contractPrivatePostLinearSwapApiV1SwapAccountInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapAccountInfo(e)}contractPrivatePostLinearSwapApiV1SwapCrossAccountInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossAccountInfo(e)}contractPrivatePostLinearSwapApiV1SwapPositionInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapPositionInfo(e)}contractPrivatePostLinearSwapApiV1SwapCrossPositionInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossPositionInfo(e)}contractPrivatePostLinearSwapApiV1SwapAccountPositionInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapAccountPositionInfo(e)}contractPrivatePostLinearSwapApiV1SwapCrossAccountPositionInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossAccountPositionInfo(e)}contractPrivatePostLinearSwapApiV1SwapSubAuth(e){return this.contractPrivatePostLinearSwapApiV1SwapSubAuth(e)}contractPrivatePostLinearSwapApiV1SwapSubAccountList(e){return this.contractPrivatePostLinearSwapApiV1SwapSubAccountList(e)}contractPrivatePostLinearSwapApiV1SwapCrossSubAccountList(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossSubAccountList(e)}contractPrivatePostLinearSwapApiV1SwapSubAccountInfoList(e){return this.contractPrivatePostLinearSwapApiV1SwapSubAccountInfoList(e)}contractPrivatePostLinearSwapApiV1SwapCrossSubAccountInfoList(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossSubAccountInfoList(e)}contractPrivatePostLinearSwapApiV1SwapSubAccountInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapSubAccountInfo(e)}contractPrivatePostLinearSwapApiV1SwapCrossSubAccountInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossSubAccountInfo(e)}contractPrivatePostLinearSwapApiV1SwapSubPositionInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapSubPositionInfo(e)}contractPrivatePostLinearSwapApiV1SwapCrossSubPositionInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossSubPositionInfo(e)}contractPrivatePostLinearSwapApiV1SwapFinancialRecord(e){return this.contractPrivatePostLinearSwapApiV1SwapFinancialRecord(e)}contractPrivatePostLinearSwapApiV1SwapFinancialRecordExact(e){return this.contractPrivatePostLinearSwapApiV1SwapFinancialRecordExact(e)}contractPrivatePostLinearSwapApiV1SwapUserSettlementRecords(e){return this.contractPrivatePostLinearSwapApiV1SwapUserSettlementRecords(e)}contractPrivatePostLinearSwapApiV1SwapCrossUserSettlementRecords(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossUserSettlementRecords(e)}contractPrivatePostLinearSwapApiV1SwapAvailableLevelRate(e){return this.contractPrivatePostLinearSwapApiV1SwapAvailableLevelRate(e)}contractPrivatePostLinearSwapApiV1SwapCrossAvailableLevelRate(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossAvailableLevelRate(e)}contractPrivatePostLinearSwapApiV1SwapOrderLimit(e){return this.contractPrivatePostLinearSwapApiV1SwapOrderLimit(e)}contractPrivatePostLinearSwapApiV1SwapFee(e){return this.contractPrivatePostLinearSwapApiV1SwapFee(e)}contractPrivatePostLinearSwapApiV1SwapTransferLimit(e){return this.contractPrivatePostLinearSwapApiV1SwapTransferLimit(e)}contractPrivatePostLinearSwapApiV1SwapCrossTransferLimit(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTransferLimit(e)}contractPrivatePostLinearSwapApiV1SwapPositionLimit(e){return this.contractPrivatePostLinearSwapApiV1SwapPositionLimit(e)}contractPrivatePostLinearSwapApiV1SwapCrossPositionLimit(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossPositionLimit(e)}contractPrivatePostLinearSwapApiV1SwapMasterSubTransfer(e){return this.contractPrivatePostLinearSwapApiV1SwapMasterSubTransfer(e)}contractPrivatePostLinearSwapApiV1SwapMasterSubTransferRecord(e){return this.contractPrivatePostLinearSwapApiV1SwapMasterSubTransferRecord(e)}contractPrivatePostLinearSwapApiV1SwapTransferInner(e){return this.contractPrivatePostLinearSwapApiV1SwapTransferInner(e)}contractPrivatePostLinearSwapApiV3SwapFinancialRecord(e){return this.contractPrivatePostLinearSwapApiV3SwapFinancialRecord(e)}contractPrivatePostLinearSwapApiV3SwapFinancialRecordExact(e){return this.contractPrivatePostLinearSwapApiV3SwapFinancialRecordExact(e)}contractPrivatePostLinearSwapApiV1SwapOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapOrder(e)}contractPrivatePostLinearSwapApiV1SwapCrossOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossOrder(e)}contractPrivatePostLinearSwapApiV1SwapBatchorder(e){return this.contractPrivatePostLinearSwapApiV1SwapBatchorder(e)}contractPrivatePostLinearSwapApiV1SwapCrossBatchorder(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossBatchorder(e)}contractPrivatePostLinearSwapApiV1SwapCancel(e){return this.contractPrivatePostLinearSwapApiV1SwapCancel(e)}contractPrivatePostLinearSwapApiV1SwapCrossCancel(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossCancel(e)}contractPrivatePostLinearSwapApiV1SwapCancelall(e){return this.contractPrivatePostLinearSwapApiV1SwapCancelall(e)}contractPrivatePostLinearSwapApiV1SwapCrossCancelall(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossCancelall(e)}contractPrivatePostLinearSwapApiV1SwapSwitchLeverRate(e){return this.contractPrivatePostLinearSwapApiV1SwapSwitchLeverRate(e)}contractPrivatePostLinearSwapApiV1SwapCrossSwitchLeverRate(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossSwitchLeverRate(e)}contractPrivatePostLinearSwapApiV1SwapLightningClosePosition(e){return this.contractPrivatePostLinearSwapApiV1SwapLightningClosePosition(e)}contractPrivatePostLinearSwapApiV1SwapCrossLightningClosePosition(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossLightningClosePosition(e)}contractPrivatePostLinearSwapApiV1SwapOrderInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapOrderInfo(e)}contractPrivatePostLinearSwapApiV1SwapCrossOrderInfo(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossOrderInfo(e)}contractPrivatePostLinearSwapApiV1SwapOrderDetail(e){return this.contractPrivatePostLinearSwapApiV1SwapOrderDetail(e)}contractPrivatePostLinearSwapApiV1SwapCrossOrderDetail(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossOrderDetail(e)}contractPrivatePostLinearSwapApiV1SwapOpenorders(e){return this.contractPrivatePostLinearSwapApiV1SwapOpenorders(e)}contractPrivatePostLinearSwapApiV1SwapCrossOpenorders(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossOpenorders(e)}contractPrivatePostLinearSwapApiV1SwapHisorders(e){return this.contractPrivatePostLinearSwapApiV1SwapHisorders(e)}contractPrivatePostLinearSwapApiV1SwapCrossHisorders(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossHisorders(e)}contractPrivatePostLinearSwapApiV1SwapHisordersExact(e){return this.contractPrivatePostLinearSwapApiV1SwapHisordersExact(e)}contractPrivatePostLinearSwapApiV1SwapCrossHisordersExact(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossHisordersExact(e)}contractPrivatePostLinearSwapApiV1SwapMatchresults(e){return this.contractPrivatePostLinearSwapApiV1SwapMatchresults(e)}contractPrivatePostLinearSwapApiV1SwapCrossMatchresults(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossMatchresults(e)}contractPrivatePostLinearSwapApiV1SwapMatchresultsExact(e){return this.contractPrivatePostLinearSwapApiV1SwapMatchresultsExact(e)}contractPrivatePostLinearSwapApiV1SwapCrossMatchresultsExact(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossMatchresultsExact(e)}contractPrivatePostLinearSwapApiV1SwapSwitchPositionMode(e){return this.contractPrivatePostLinearSwapApiV1SwapSwitchPositionMode(e)}contractPrivatePostLinearSwapApiV1SwapCrossSwitchPositionMode(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossSwitchPositionMode(e)}contractPrivatePostLinearSwapApiV3SwapMatchresults(e){return this.contractPrivatePostLinearSwapApiV3SwapMatchresults(e)}contractPrivatePostLinearSwapApiV3SwapCrossMatchresults(e){return this.contractPrivatePostLinearSwapApiV3SwapCrossMatchresults(e)}contractPrivatePostLinearSwapApiV3SwapMatchresultsExact(e){return this.contractPrivatePostLinearSwapApiV3SwapMatchresultsExact(e)}contractPrivatePostLinearSwapApiV3SwapCrossMatchresultsExact(e){return this.contractPrivatePostLinearSwapApiV3SwapCrossMatchresultsExact(e)}contractPrivatePostLinearSwapApiV3SwapHisorders(e){return this.contractPrivatePostLinearSwapApiV3SwapHisorders(e)}contractPrivatePostLinearSwapApiV3SwapCrossHisorders(e){return this.contractPrivatePostLinearSwapApiV3SwapCrossHisorders(e)}contractPrivatePostLinearSwapApiV3SwapHisordersExact(e){return this.contractPrivatePostLinearSwapApiV3SwapHisordersExact(e)}contractPrivatePostLinearSwapApiV3SwapCrossHisordersExact(e){return this.contractPrivatePostLinearSwapApiV3SwapCrossHisordersExact(e)}contractPrivatePostLinearSwapApiV3SwapSwitchAccountType(e){return this.contractPrivatePostLinearSwapApiV3SwapSwitchAccountType(e)}contractPrivatePostLinearSwapApiV1SwapTriggerOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapTriggerOrder(e)}contractPrivatePostLinearSwapApiV1SwapCrossTriggerOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTriggerOrder(e)}contractPrivatePostLinearSwapApiV1SwapTriggerCancel(e){return this.contractPrivatePostLinearSwapApiV1SwapTriggerCancel(e)}contractPrivatePostLinearSwapApiV1SwapCrossTriggerCancel(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTriggerCancel(e)}contractPrivatePostLinearSwapApiV1SwapTriggerCancelall(e){return this.contractPrivatePostLinearSwapApiV1SwapTriggerCancelall(e)}contractPrivatePostLinearSwapApiV1SwapCrossTriggerCancelall(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTriggerCancelall(e)}contractPrivatePostLinearSwapApiV1SwapTriggerOpenorders(e){return this.contractPrivatePostLinearSwapApiV1SwapTriggerOpenorders(e)}contractPrivatePostLinearSwapApiV1SwapCrossTriggerOpenorders(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTriggerOpenorders(e)}contractPrivatePostLinearSwapApiV1SwapTriggerHisorders(e){return this.contractPrivatePostLinearSwapApiV1SwapTriggerHisorders(e)}contractPrivatePostLinearSwapApiV1SwapCrossTriggerHisorders(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTriggerHisorders(e)}contractPrivatePostLinearSwapApiV1SwapTpslOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapTpslOrder(e)}contractPrivatePostLinearSwapApiV1SwapCrossTpslOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTpslOrder(e)}contractPrivatePostLinearSwapApiV1SwapTpslCancel(e){return this.contractPrivatePostLinearSwapApiV1SwapTpslCancel(e)}contractPrivatePostLinearSwapApiV1SwapCrossTpslCancel(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTpslCancel(e)}contractPrivatePostLinearSwapApiV1SwapTpslCancelall(e){return this.contractPrivatePostLinearSwapApiV1SwapTpslCancelall(e)}contractPrivatePostLinearSwapApiV1SwapCrossTpslCancelall(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTpslCancelall(e)}contractPrivatePostLinearSwapApiV1SwapTpslOpenorders(e){return this.contractPrivatePostLinearSwapApiV1SwapTpslOpenorders(e)}contractPrivatePostLinearSwapApiV1SwapCrossTpslOpenorders(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTpslOpenorders(e)}contractPrivatePostLinearSwapApiV1SwapTpslHisorders(e){return this.contractPrivatePostLinearSwapApiV1SwapTpslHisorders(e)}contractPrivatePostLinearSwapApiV1SwapCrossTpslHisorders(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTpslHisorders(e)}contractPrivatePostLinearSwapApiV1SwapRelationTpslOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapRelationTpslOrder(e)}contractPrivatePostLinearSwapApiV1SwapCrossRelationTpslOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossRelationTpslOrder(e)}contractPrivatePostLinearSwapApiV1SwapTrackOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapTrackOrder(e)}contractPrivatePostLinearSwapApiV1SwapCrossTrackOrder(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTrackOrder(e)}contractPrivatePostLinearSwapApiV1SwapTrackCancel(e){return this.contractPrivatePostLinearSwapApiV1SwapTrackCancel(e)}contractPrivatePostLinearSwapApiV1SwapCrossTrackCancel(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTrackCancel(e)}contractPrivatePostLinearSwapApiV1SwapTrackCancelall(e){return this.contractPrivatePostLinearSwapApiV1SwapTrackCancelall(e)}contractPrivatePostLinearSwapApiV1SwapCrossTrackCancelall(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTrackCancelall(e)}contractPrivatePostLinearSwapApiV1SwapTrackOpenorders(e){return this.contractPrivatePostLinearSwapApiV1SwapTrackOpenorders(e)}contractPrivatePostLinearSwapApiV1SwapCrossTrackOpenorders(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTrackOpenorders(e)}contractPrivatePostLinearSwapApiV1SwapTrackHisorders(e){return this.contractPrivatePostLinearSwapApiV1SwapTrackHisorders(e)}contractPrivatePostLinearSwapApiV1SwapCrossTrackHisorders(e){return this.contractPrivatePostLinearSwapApiV1SwapCrossTrackHisorders(e)}}},7758:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{v2PublicGetReferenceCurrencies(e){return this.v2PublicGetReferenceCurrencies(e)}v2PublicGetMarketStatus(e){return this.v2PublicGetMarketStatus(e)}v2PrivateGetAccountLedger(e){return this.v2PrivateGetAccountLedger(e)}v2PrivateGetAccountWithdrawQuota(e){return this.v2PrivateGetAccountWithdrawQuota(e)}v2PrivateGetAccountWithdrawAddress(e){return this.v2PrivateGetAccountWithdrawAddress(e)}v2PrivateGetAccountDepositAddress(e){return this.v2PrivateGetAccountDepositAddress(e)}v2PrivateGetAccountRepayment(e){return this.v2PrivateGetAccountRepayment(e)}v2PrivateGetReferenceTransactFeeRate(e){return this.v2PrivateGetReferenceTransactFeeRate(e)}v2PrivateGetAccountAssetValuation(e){return this.v2PrivateGetAccountAssetValuation(e)}v2PrivateGetPointAccount(e){return this.v2PrivateGetPointAccount(e)}v2PrivateGetSubUserUserList(e){return this.v2PrivateGetSubUserUserList(e)}v2PrivateGetSubUserUserState(e){return this.v2PrivateGetSubUserUserState(e)}v2PrivateGetSubUserAccountList(e){return this.v2PrivateGetSubUserAccountList(e)}v2PrivateGetSubUserDepositAddress(e){return this.v2PrivateGetSubUserDepositAddress(e)}v2PrivateGetSubUserQueryDeposit(e){return this.v2PrivateGetSubUserQueryDeposit(e)}v2PrivateGetUserApiKey(e){return this.v2PrivateGetUserApiKey(e)}v2PrivateGetUserUid(e){return this.v2PrivateGetUserUid(e)}v2PrivateGetAlgoOrdersOpening(e){return this.v2PrivateGetAlgoOrdersOpening(e)}v2PrivateGetAlgoOrdersHistory(e){return this.v2PrivateGetAlgoOrdersHistory(e)}v2PrivateGetAlgoOrdersSpecific(e){return this.v2PrivateGetAlgoOrdersSpecific(e)}v2PrivateGetC2cOffers(e){return this.v2PrivateGetC2cOffers(e)}v2PrivateGetC2cOffer(e){return this.v2PrivateGetC2cOffer(e)}v2PrivateGetC2cTransactions(e){return this.v2PrivateGetC2cTransactions(e)}v2PrivateGetC2cRepayment(e){return this.v2PrivateGetC2cRepayment(e)}v2PrivateGetC2cAccount(e){return this.v2PrivateGetC2cAccount(e)}v2PrivateGetEtpReference(e){return this.v2PrivateGetEtpReference(e)}v2PrivateGetEtpTransactions(e){return this.v2PrivateGetEtpTransactions(e)}v2PrivateGetEtpTransaction(e){return this.v2PrivateGetEtpTransaction(e)}v2PrivateGetEtpRebalance(e){return this.v2PrivateGetEtpRebalance(e)}v2PrivateGetEtpLimit(e){return this.v2PrivateGetEtpLimit(e)}v2PrivatePostAccountTransfer(e){return this.v2PrivatePostAccountTransfer(e)}v2PrivatePostAccountRepayment(e){return this.v2PrivatePostAccountRepayment(e)}v2PrivatePostPointTransfer(e){return this.v2PrivatePostPointTransfer(e)}v2PrivatePostSubUserManagement(e){return this.v2PrivatePostSubUserManagement(e)}v2PrivatePostSubUserCreation(e){return this.v2PrivatePostSubUserCreation(e)}v2PrivatePostSubUserTradableMarket(e){return this.v2PrivatePostSubUserTradableMarket(e)}v2PrivatePostSubUserTransferability(e){return this.v2PrivatePostSubUserTransferability(e)}v2PrivatePostSubUserApiKeyGeneration(e){return this.v2PrivatePostSubUserApiKeyGeneration(e)}v2PrivatePostSubUserApiKeyModification(e){return this.v2PrivatePostSubUserApiKeyModification(e)}v2PrivatePostSubUserApiKeyDeletion(e){return this.v2PrivatePostSubUserApiKeyDeletion(e)}v2PrivatePostSubUserDeductMode(e){return this.v2PrivatePostSubUserDeductMode(e)}v2PrivatePostAlgoOrders(e){return this.v2PrivatePostAlgoOrders(e)}v2PrivatePostAlgoOrdersCancelAllAfter(e){return this.v2PrivatePostAlgoOrdersCancelAllAfter(e)}v2PrivatePostAlgoOrdersCancellation(e){return this.v2PrivatePostAlgoOrdersCancellation(e)}v2PrivatePostC2cOffer(e){return this.v2PrivatePostC2cOffer(e)}v2PrivatePostC2cCancellation(e){return this.v2PrivatePostC2cCancellation(e)}v2PrivatePostC2cCancelAll(e){return this.v2PrivatePostC2cCancelAll(e)}v2PrivatePostC2cRepayment(e){return this.v2PrivatePostC2cRepayment(e)}v2PrivatePostC2cTransfer(e){return this.v2PrivatePostC2cTransfer(e)}v2PrivatePostEtpCreation(e){return this.v2PrivatePostEtpCreation(e)}v2PrivatePostEtpRedemption(e){return this.v2PrivatePostEtpRedemption(e)}v2PrivatePostEtpTransactIdCancel(e){return this.v2PrivatePostEtpTransactIdCancel(e)}v2PrivatePostEtpBatchCancel(e){return this.v2PrivatePostEtpBatchCancel(e)}marketGetHistoryKline(e){return this.marketGetHistoryKline(e)}marketGetDetailMerged(e){return this.marketGetDetailMerged(e)}marketGetDepth(e){return this.marketGetDepth(e)}marketGetTrade(e){return this.marketGetTrade(e)}marketGetHistoryTrade(e){return this.marketGetHistoryTrade(e)}marketGetDetail(e){return this.marketGetDetail(e)}marketGetTickers(e){return this.marketGetTickers(e)}marketGetEtp(e){return this.marketGetEtp(e)}publicGetCommonSymbols(e){return this.publicGetCommonSymbols(e)}publicGetCommonCurrencys(e){return this.publicGetCommonCurrencys(e)}publicGetCommonTimestamp(e){return this.publicGetCommonTimestamp(e)}publicGetCommonExchange(e){return this.publicGetCommonExchange(e)}publicGetSettingsCurrencys(e){return this.publicGetSettingsCurrencys(e)}privateGetAccountAccounts(e){return this.privateGetAccountAccounts(e)}privateGetAccountAccountsIdBalance(e){return this.privateGetAccountAccountsIdBalance(e)}privateGetAccountAccountsSubUid(e){return this.privateGetAccountAccountsSubUid(e)}privateGetAccountHistory(e){return this.privateGetAccountHistory(e)}privateGetCrossMarginLoanInfo(e){return this.privateGetCrossMarginLoanInfo(e)}privateGetMarginLoanInfo(e){return this.privateGetMarginLoanInfo(e)}privateGetFeeFeeRateGet(e){return this.privateGetFeeFeeRateGet(e)}privateGetOrderOpenOrders(e){return this.privateGetOrderOpenOrders(e)}privateGetOrderOrders(e){return this.privateGetOrderOrders(e)}privateGetOrderOrdersId(e){return this.privateGetOrderOrdersId(e)}privateGetOrderOrdersIdMatchresults(e){return this.privateGetOrderOrdersIdMatchresults(e)}privateGetOrderOrdersGetClientOrder(e){return this.privateGetOrderOrdersGetClientOrder(e)}privateGetOrderHistory(e){return this.privateGetOrderHistory(e)}privateGetOrderMatchresults(e){return this.privateGetOrderMatchresults(e)}privateGetQueryDepositWithdraw(e){return this.privateGetQueryDepositWithdraw(e)}privateGetMarginLoanOrders(e){return this.privateGetMarginLoanOrders(e)}privateGetMarginAccountsBalance(e){return this.privateGetMarginAccountsBalance(e)}privateGetCrossMarginLoanOrders(e){return this.privateGetCrossMarginLoanOrders(e)}privateGetCrossMarginAccountsBalance(e){return this.privateGetCrossMarginAccountsBalance(e)}privateGetPointsActions(e){return this.privateGetPointsActions(e)}privateGetPointsOrders(e){return this.privateGetPointsOrders(e)}privateGetSubuserAggregateBalance(e){return this.privateGetSubuserAggregateBalance(e)}privateGetStableCoinExchangeRate(e){return this.privateGetStableCoinExchangeRate(e)}privateGetStableCoinQuote(e){return this.privateGetStableCoinQuote(e)}privatePostAccountTransfer(e){return this.privatePostAccountTransfer(e)}privatePostFuturesTransfer(e){return this.privatePostFuturesTransfer(e)}privatePostOrderBatchOrders(e){return this.privatePostOrderBatchOrders(e)}privatePostOrderOrdersPlace(e){return this.privatePostOrderOrdersPlace(e)}privatePostOrderOrdersSubmitCancelClientOrder(e){return this.privatePostOrderOrdersSubmitCancelClientOrder(e)}privatePostOrderOrdersBatchCancelOpenOrders(e){return this.privatePostOrderOrdersBatchCancelOpenOrders(e)}privatePostOrderOrdersIdSubmitcancel(e){return this.privatePostOrderOrdersIdSubmitcancel(e)}privatePostOrderOrdersBatchcancel(e){return this.privatePostOrderOrdersBatchcancel(e)}privatePostDwWithdrawApiCreate(e){return this.privatePostDwWithdrawApiCreate(e)}privatePostDwWithdrawVirtualIdCancel(e){return this.privatePostDwWithdrawVirtualIdCancel(e)}privatePostDwTransferInMargin(e){return this.privatePostDwTransferInMargin(e)}privatePostDwTransferOutMargin(e){return this.privatePostDwTransferOutMargin(e)}privatePostMarginOrders(e){return this.privatePostMarginOrders(e)}privatePostMarginOrdersIdRepay(e){return this.privatePostMarginOrdersIdRepay(e)}privatePostCrossMarginTransferIn(e){return this.privatePostCrossMarginTransferIn(e)}privatePostCrossMarginTransferOut(e){return this.privatePostCrossMarginTransferOut(e)}privatePostCrossMarginOrders(e){return this.privatePostCrossMarginOrders(e)}privatePostCrossMarginOrdersIdRepay(e){return this.privatePostCrossMarginOrdersIdRepay(e)}privatePostStableCoinExchange(e){return this.privatePostStableCoinExchange(e)}privatePostSubuserTransfer(e){return this.privatePostSubuserTransfer(e)}}},5563:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetPing(e){return this.publicGetPing(e)}publicGetTime(e){return this.publicGetTime(e)}publicGetExchange(e){return this.publicGetExchange(e)}publicGetAssets(e){return this.publicGetAssets(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetCandles(e){return this.publicGetCandles(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetOrderbook(e){return this.publicGetOrderbook(e)}privateGetUser(e){return this.privateGetUser(e)}privateGetWallets(e){return this.privateGetWallets(e)}privateGetBalances(e){return this.privateGetBalances(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetFills(e){return this.privateGetFills(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetWsToken(e){return this.privateGetWsToken(e)}privatePostWallets(e){return this.privatePostWallets(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersTest(e){return this.privatePostOrdersTest(e)}privatePostWithdrawals(e){return this.privatePostWithdrawals(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}}},1106:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetGetValidPrimaryCurrencyCodes(e){return this.publicGetGetValidPrimaryCurrencyCodes(e)}publicGetGetValidSecondaryCurrencyCodes(e){return this.publicGetGetValidSecondaryCurrencyCodes(e)}publicGetGetValidLimitOrderTypes(e){return this.publicGetGetValidLimitOrderTypes(e)}publicGetGetValidMarketOrderTypes(e){return this.publicGetGetValidMarketOrderTypes(e)}publicGetGetValidOrderTypes(e){return this.publicGetGetValidOrderTypes(e)}publicGetGetValidTransactionTypes(e){return this.publicGetGetValidTransactionTypes(e)}publicGetGetMarketSummary(e){return this.publicGetGetMarketSummary(e)}publicGetGetOrderBook(e){return this.publicGetGetOrderBook(e)}publicGetGetAllOrders(e){return this.publicGetGetAllOrders(e)}publicGetGetTradeHistorySummary(e){return this.publicGetGetTradeHistorySummary(e)}publicGetGetRecentTrades(e){return this.publicGetGetRecentTrades(e)}publicGetGetFxRates(e){return this.publicGetGetFxRates(e)}publicGetGetOrderMinimumVolumes(e){return this.publicGetGetOrderMinimumVolumes(e)}publicGetGetCryptoWithdrawalFees(e){return this.publicGetGetCryptoWithdrawalFees(e)}privatePostGetOpenOrders(e){return this.privatePostGetOpenOrders(e)}privatePostGetClosedOrders(e){return this.privatePostGetClosedOrders(e)}privatePostGetClosedFilledOrders(e){return this.privatePostGetClosedFilledOrders(e)}privatePostGetOrderDetails(e){return this.privatePostGetOrderDetails(e)}privatePostGetAccounts(e){return this.privatePostGetAccounts(e)}privatePostGetTransactions(e){return this.privatePostGetTransactions(e)}privatePostGetFiatBankAccounts(e){return this.privatePostGetFiatBankAccounts(e)}privatePostGetDigitalCurrencyDepositAddress(e){return this.privatePostGetDigitalCurrencyDepositAddress(e)}privatePostGetDigitalCurrencyDepositAddresses(e){return this.privatePostGetDigitalCurrencyDepositAddresses(e)}privatePostGetTrades(e){return this.privatePostGetTrades(e)}privatePostGetBrokerageFees(e){return this.privatePostGetBrokerageFees(e)}privatePostGetDigitalCurrencyWithdrawal(e){return this.privatePostGetDigitalCurrencyWithdrawal(e)}privatePostPlaceLimitOrder(e){return this.privatePostPlaceLimitOrder(e)}privatePostPlaceMarketOrder(e){return this.privatePostPlaceMarketOrder(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostSynchDigitalCurrencyDepositAddressWithBlockchain(e){return this.privatePostSynchDigitalCurrencyDepositAddressWithBlockchain(e)}privatePostRequestFiatWithdrawal(e){return this.privatePostRequestFiatWithdrawal(e)}privatePostWithdrawFiatCurrency(e){return this.privatePostWithdrawFiatCurrency(e)}privatePostWithdrawDigitalCurrency(e){return this.privatePostWithdrawDigitalCurrency(e)}}},7872:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetServerTime(e){return this.publicGetServerTime(e)}publicGetPairs(e){return this.publicGetPairs(e)}publicGetPriceIncrements(e){return this.publicGetPriceIncrements(e)}publicGetSummaries(e){return this.publicGetSummaries(e)}publicGetTickerAll(e){return this.publicGetTickerAll(e)}publicGetPairTicker(e){return this.publicGetPairTicker(e)}publicGetPairTrades(e){return this.publicGetPairTrades(e)}publicGetPairDepth(e){return this.publicGetPairDepth(e)}privatePostGetInfo(e){return this.privatePostGetInfo(e)}privatePostTransHistory(e){return this.privatePostTransHistory(e)}privatePostTrade(e){return this.privatePostTrade(e)}privatePostTradeHistory(e){return this.privatePostTradeHistory(e)}privatePostOpenOrders(e){return this.privatePostOpenOrders(e)}privatePostOrderHistory(e){return this.privatePostOrderHistory(e)}privatePostGetOrder(e){return this.privatePostGetOrder(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostWithdrawFee(e){return this.privatePostWithdrawFee(e)}privatePostWithdrawCoin(e){return this.privatePostWithdrawCoin(e)}privatePostListDownline(e){return this.privatePostListDownline(e)}privatePostCheckDownline(e){return this.privatePostCheckDownline(e)}privatePostCreateVoucher(e){return this.privatePostCreateVoucher(e)}}},329:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarketsSymbolTicker(e){return this.publicGetMarketsSymbolTicker(e)}publicGetMarketsSymbolOrderBook(e){return this.publicGetMarketsSymbolOrderBook(e)}publicGetMarketsSymbolTrades(e){return this.publicGetMarketsSymbolTrades(e)}privateGetWallets(e){return this.privateGetWallets(e)}privateGetWalletsWalletId(e){return this.privateGetWalletsWalletId(e)}privateGetWalletsWalletIdBalancesCurrencyCode(e){return this.privateGetWalletsWalletIdBalancesCurrencyCode(e)}privateGetWalletsWalletIdFundingHistory(e){return this.privateGetWalletsWalletIdFundingHistory(e)}privateGetWalletsWalletIdTrades(e){return this.privateGetWalletsWalletIdTrades(e)}privateGetWalletsWalletIdOrders(e){return this.privateGetWalletsWalletIdOrders(e)}privateGetWalletsWalletIdOrdersId(e){return this.privateGetWalletsWalletIdOrdersId(e)}privatePostWalletTransfers(e){return this.privatePostWalletTransfers(e)}privatePostWallets(e){return this.privatePostWallets(e)}privatePostWalletsWalletIdCryptocurrencyDeposits(e){return this.privatePostWalletsWalletIdCryptocurrencyDeposits(e)}privatePostWalletsWalletIdCryptocurrencyWithdrawals(e){return this.privatePostWalletsWalletIdCryptocurrencyWithdrawals(e)}privatePostWalletsWalletIdOrders(e){return this.privatePostWalletsWalletIdOrders(e)}privatePostWireWithdrawal(e){return this.privatePostWireWithdrawal(e)}privateDeleteWalletsWalletIdOrdersId(e){return this.privateDeleteWalletsWalletIdOrdersId(e)}}},3203:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{zendeskGet360000292886(e){return this.zendeskGet360000292886(e)}zendeskGet201893608(e){return this.zendeskGet201893608(e)}publicGetAssets(e){return this.publicGetAssets(e)}publicGetAssetPairs(e){return this.publicGetAssetPairs(e)}publicGetDepth(e){return this.publicGetDepth(e)}publicGetOHLC(e){return this.publicGetOHLC(e)}publicGetSpread(e){return this.publicGetSpread(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTime(e){return this.publicGetTime(e)}publicGetTrades(e){return this.publicGetTrades(e)}privatePostAddOrder(e){return this.privatePostAddOrder(e)}privatePostAddOrderBatch(e){return this.privatePostAddOrderBatch(e)}privatePostAddExport(e){return this.privatePostAddExport(e)}privatePostBalance(e){return this.privatePostBalance(e)}privatePostCancelAll(e){return this.privatePostCancelAll(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostCancelOrderBatch(e){return this.privatePostCancelOrderBatch(e)}privatePostClosedOrders(e){return this.privatePostClosedOrders(e)}privatePostDepositAddresses(e){return this.privatePostDepositAddresses(e)}privatePostDepositMethods(e){return this.privatePostDepositMethods(e)}privatePostDepositStatus(e){return this.privatePostDepositStatus(e)}privatePostEditOrder(e){return this.privatePostEditOrder(e)}privatePostExportStatus(e){return this.privatePostExportStatus(e)}privatePostGetWebSocketsToken(e){return this.privatePostGetWebSocketsToken(e)}privatePostLedgers(e){return this.privatePostLedgers(e)}privatePostOpenOrders(e){return this.privatePostOpenOrders(e)}privatePostOpenPositions(e){return this.privatePostOpenPositions(e)}privatePostQueryLedgers(e){return this.privatePostQueryLedgers(e)}privatePostQueryOrders(e){return this.privatePostQueryOrders(e)}privatePostQueryTrades(e){return this.privatePostQueryTrades(e)}privatePostRetrieveExport(e){return this.privatePostRetrieveExport(e)}privatePostRemoveExport(e){return this.privatePostRemoveExport(e)}privatePostTradeBalance(e){return this.privatePostTradeBalance(e)}privatePostTradesHistory(e){return this.privatePostTradesHistory(e)}privatePostTradeVolume(e){return this.privatePostTradeVolume(e)}privatePostWithdraw(e){return this.privatePostWithdraw(e)}privatePostWithdrawCancel(e){return this.privatePostWithdrawCancel(e)}privatePostWithdrawInfo(e){return this.privatePostWithdrawInfo(e)}privatePostWithdrawStatus(e){return this.privatePostWithdrawStatus(e)}privatePostStake(e){return this.privatePostStake(e)}privatePostUnstake(e){return this.privatePostUnstake(e)}privatePostStakingAssets(e){return this.privatePostStakingAssets(e)}privatePostStakingPending(e){return this.privatePostStakingPending(e)}privatePostStakingTransactions(e){return this.privatePostStakingTransactions(e)}}},3931:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetInstruments(e){return this.publicGetInstruments(e)}publicGetOrderbook(e){return this.publicGetOrderbook(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetHistory(e){return this.publicGetHistory(e)}publicGetHistoricalfundingrates(e){return this.publicGetHistoricalfundingrates(e)}privateGetOpenpositions(e){return this.privateGetOpenpositions(e)}privateGetNotifications(e){return this.privateGetNotifications(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetOpenorders(e){return this.privateGetOpenorders(e)}privateGetRecentorders(e){return this.privateGetRecentorders(e)}privateGetFills(e){return this.privateGetFills(e)}privateGetTransfers(e){return this.privateGetTransfers(e)}privatePostSendorder(e){return this.privatePostSendorder(e)}privatePostEditorder(e){return this.privatePostEditorder(e)}privatePostCancelorder(e){return this.privatePostCancelorder(e)}privatePostTransfer(e){return this.privatePostTransfer(e)}privatePostBatchorder(e){return this.privatePostBatchorder(e)}privatePostCancelallorders(e){return this.privatePostCancelallorders(e)}privatePostCancelallordersafter(e){return this.privatePostCancelallordersafter(e)}privatePostWithdrawal(e){return this.privatePostWithdrawal(e)}chartsGetPriceTypeSymbolInterval(e){return this.chartsGetPriceTypeSymbolInterval(e)}historyGetOrders(e){return this.historyGetOrders(e)}historyGetExecutions(e){return this.historyGetExecutions(e)}historyGetTriggers(e){return this.historyGetTriggers(e)}historyGetAccountlogcsv(e){return this.historyGetAccountlogcsv(e)}historyGetMarketSymbolOrders(e){return this.historyGetMarketSymbolOrders(e)}historyGetMarketSymbolExecutions(e){return this.historyGetMarketSymbolExecutions(e)}feeschedulesGetVolumes(e){return this.feeschedulesGetVolumes(e)}}},5792:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetTimestamp(e){return this.publicGetTimestamp(e)}publicGetStatus(e){return this.publicGetStatus(e)}publicGetSymbols(e){return this.publicGetSymbols(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetMarketAllTickers(e){return this.publicGetMarketAllTickers(e)}publicGetMarketOrderbookLevelLevelLimit(e){return this.publicGetMarketOrderbookLevelLevelLimit(e)}publicGetMarketOrderbookLevel220(e){return this.publicGetMarketOrderbookLevel220(e)}publicGetMarketOrderbookLevel2100(e){return this.publicGetMarketOrderbookLevel2100(e)}publicGetMarketHistories(e){return this.publicGetMarketHistories(e)}publicGetMarketCandles(e){return this.publicGetMarketCandles(e)}publicGetMarketStats(e){return this.publicGetMarketStats(e)}publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetCurrenciesCurrency(e){return this.publicGetCurrenciesCurrency(e)}publicGetPrices(e){return this.publicGetPrices(e)}publicGetMarkPriceSymbolCurrent(e){return this.publicGetMarkPriceSymbolCurrent(e)}publicGetMarginConfig(e){return this.publicGetMarginConfig(e)}publicGetMarginTradeLast(e){return this.publicGetMarginTradeLast(e)}publicPostBulletPublic(e){return this.publicPostBulletPublic(e)}privateGetMarketOrderbookLevelLevel(e){return this.privateGetMarketOrderbookLevelLevel(e)}privateGetMarketOrderbookLevel2(e){return this.privateGetMarketOrderbookLevel2(e)}privateGetMarketOrderbookLevel3(e){return this.privateGetMarketOrderbookLevel3(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetAccountsAccountId(e){return this.privateGetAccountsAccountId(e)}privateGetAccountsLedgers(e){return this.privateGetAccountsLedgers(e)}privateGetAccountsAccountIdHolds(e){return this.privateGetAccountsAccountIdHolds(e)}privateGetAccountsTransferable(e){return this.privateGetAccountsTransferable(e)}privateGetBaseFee(e){return this.privateGetBaseFee(e)}privateGetSubUser(e){return this.privateGetSubUser(e)}privateGetUserInfo(e){return this.privateGetUserInfo(e)}privateGetSubApiKey(e){return this.privateGetSubApiKey(e)}privateGetSubAccounts(e){return this.privateGetSubAccounts(e)}privateGetSubAccountsSubUserId(e){return this.privateGetSubAccountsSubUserId(e)}privateGetDepositAddresses(e){return this.privateGetDepositAddresses(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetHistDeposits(e){return this.privateGetHistDeposits(e)}privateGetHistWithdrawals(e){return this.privateGetHistWithdrawals(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetWithdrawalsQuotas(e){return this.privateGetWithdrawalsQuotas(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrderClientOrderClientOid(e){return this.privateGetOrderClientOrderClientOid(e)}privateGetOrdersOrderId(e){return this.privateGetOrdersOrderId(e)}privateGetLimitOrders(e){return this.privateGetLimitOrders(e)}privateGetFills(e){return this.privateGetFills(e)}privateGetLimitFills(e){return this.privateGetLimitFills(e)}privateGetIsolatedAccounts(e){return this.privateGetIsolatedAccounts(e)}privateGetIsolatedAccountSymbol(e){return this.privateGetIsolatedAccountSymbol(e)}privateGetIsolatedBorrowOutstanding(e){return this.privateGetIsolatedBorrowOutstanding(e)}privateGetIsolatedBorrowRepaid(e){return this.privateGetIsolatedBorrowRepaid(e)}privateGetIsolatedSymbols(e){return this.privateGetIsolatedSymbols(e)}privateGetMarginAccount(e){return this.privateGetMarginAccount(e)}privateGetMarginBorrow(e){return this.privateGetMarginBorrow(e)}privateGetMarginBorrowOutstanding(e){return this.privateGetMarginBorrowOutstanding(e)}privateGetMarginBorrowRepaid(e){return this.privateGetMarginBorrowRepaid(e)}privateGetMarginLendActive(e){return this.privateGetMarginLendActive(e)}privateGetMarginLendDone(e){return this.privateGetMarginLendDone(e)}privateGetMarginLendTradeUnsettled(e){return this.privateGetMarginLendTradeUnsettled(e)}privateGetMarginLendTradeSettled(e){return this.privateGetMarginLendTradeSettled(e)}privateGetMarginLendAssets(e){return this.privateGetMarginLendAssets(e)}privateGetMarginMarket(e){return this.privateGetMarginMarket(e)}privateGetStopOrderOrderId(e){return this.privateGetStopOrderOrderId(e)}privateGetStopOrder(e){return this.privateGetStopOrder(e)}privateGetStopOrderQueryOrderByClientOid(e){return this.privateGetStopOrderQueryOrderByClientOid(e)}privateGetTradeFees(e){return this.privateGetTradeFees(e)}privatePostAccounts(e){return this.privatePostAccounts(e)}privatePostAccountsInnerTransfer(e){return this.privatePostAccountsInnerTransfer(e)}privatePostAccountsSubTransfer(e){return this.privatePostAccountsSubTransfer(e)}privatePostDepositAddresses(e){return this.privatePostDepositAddresses(e)}privatePostWithdrawals(e){return this.privatePostWithdrawals(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersMulti(e){return this.privatePostOrdersMulti(e)}privatePostIsolatedBorrow(e){return this.privatePostIsolatedBorrow(e)}privatePostIsolatedRepayAll(e){return this.privatePostIsolatedRepayAll(e)}privatePostIsolatedRepaySingle(e){return this.privatePostIsolatedRepaySingle(e)}privatePostMarginBorrow(e){return this.privatePostMarginBorrow(e)}privatePostMarginOrder(e){return this.privatePostMarginOrder(e)}privatePostMarginRepayAll(e){return this.privatePostMarginRepayAll(e)}privatePostMarginRepaySingle(e){return this.privatePostMarginRepaySingle(e)}privatePostMarginLend(e){return this.privatePostMarginLend(e)}privatePostMarginToggleAutoLend(e){return this.privatePostMarginToggleAutoLend(e)}privatePostBulletPrivate(e){return this.privatePostBulletPrivate(e)}privatePostStopOrder(e){return this.privatePostStopOrder(e)}privatePostSubUser(e){return this.privatePostSubUser(e)}privatePostSubApiKey(e){return this.privatePostSubApiKey(e)}privatePostSubApiKeyUpdate(e){return this.privatePostSubApiKeyUpdate(e)}privateDeleteWithdrawalsWithdrawalId(e){return this.privateDeleteWithdrawalsWithdrawalId(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrderClientOrderClientOid(e){return this.privateDeleteOrderClientOrderClientOid(e)}privateDeleteOrdersOrderId(e){return this.privateDeleteOrdersOrderId(e)}privateDeleteMarginLendOrderId(e){return this.privateDeleteMarginLendOrderId(e)}privateDeleteStopOrderCancelOrderByClientOid(e){return this.privateDeleteStopOrderCancelOrderByClientOid(e)}privateDeleteStopOrderOrderId(e){return this.privateDeleteStopOrderOrderId(e)}privateDeleteStopOrderCancel(e){return this.privateDeleteStopOrderCancel(e)}privateDeleteSubApiKey(e){return this.privateDeleteSubApiKey(e)}futuresPublicGetContractsActive(e){return this.futuresPublicGetContractsActive(e)}futuresPublicGetContractsSymbol(e){return this.futuresPublicGetContractsSymbol(e)}futuresPublicGetTicker(e){return this.futuresPublicGetTicker(e)}futuresPublicGetLevel2Snapshot(e){return this.futuresPublicGetLevel2Snapshot(e)}futuresPublicGetLevel2Depth20(e){return this.futuresPublicGetLevel2Depth20(e)}futuresPublicGetLevel2Depth100(e){return this.futuresPublicGetLevel2Depth100(e)}futuresPublicGetLevel2MessageQuery(e){return this.futuresPublicGetLevel2MessageQuery(e)}futuresPublicGetLevel3MessageQuery(e){return this.futuresPublicGetLevel3MessageQuery(e)}futuresPublicGetLevel3Snapshot(e){return this.futuresPublicGetLevel3Snapshot(e)}futuresPublicGetTradeHistory(e){return this.futuresPublicGetTradeHistory(e)}futuresPublicGetInterestQuery(e){return this.futuresPublicGetInterestQuery(e)}futuresPublicGetIndexQuery(e){return this.futuresPublicGetIndexQuery(e)}futuresPublicGetMarkPriceSymbolCurrent(e){return this.futuresPublicGetMarkPriceSymbolCurrent(e)}futuresPublicGetPremiumQuery(e){return this.futuresPublicGetPremiumQuery(e)}futuresPublicGetFundingRateSymbolCurrent(e){return this.futuresPublicGetFundingRateSymbolCurrent(e)}futuresPublicGetTimestamp(e){return this.futuresPublicGetTimestamp(e)}futuresPublicGetStatus(e){return this.futuresPublicGetStatus(e)}futuresPublicGetKlineQuery(e){return this.futuresPublicGetKlineQuery(e)}futuresPublicPostBulletPublic(e){return this.futuresPublicPostBulletPublic(e)}futuresPrivateGetAccountOverview(e){return this.futuresPrivateGetAccountOverview(e)}futuresPrivateGetTransactionHistory(e){return this.futuresPrivateGetTransactionHistory(e)}futuresPrivateGetDepositAddress(e){return this.futuresPrivateGetDepositAddress(e)}futuresPrivateGetDepositList(e){return this.futuresPrivateGetDepositList(e)}futuresPrivateGetWithdrawalsQuotas(e){return this.futuresPrivateGetWithdrawalsQuotas(e)}futuresPrivateGetWithdrawalList(e){return this.futuresPrivateGetWithdrawalList(e)}futuresPrivateGetTransferList(e){return this.futuresPrivateGetTransferList(e)}futuresPrivateGetOrders(e){return this.futuresPrivateGetOrders(e)}futuresPrivateGetStopOrders(e){return this.futuresPrivateGetStopOrders(e)}futuresPrivateGetRecentDoneOrders(e){return this.futuresPrivateGetRecentDoneOrders(e)}futuresPrivateGetOrdersOrderId(e){return this.futuresPrivateGetOrdersOrderId(e)}futuresPrivateGetOrdersByClientOid(e){return this.futuresPrivateGetOrdersByClientOid(e)}futuresPrivateGetFills(e){return this.futuresPrivateGetFills(e)}futuresPrivateGetRecentFills(e){return this.futuresPrivateGetRecentFills(e)}futuresPrivateGetOpenOrderStatistics(e){return this.futuresPrivateGetOpenOrderStatistics(e)}futuresPrivateGetPosition(e){return this.futuresPrivateGetPosition(e)}futuresPrivateGetPositions(e){return this.futuresPrivateGetPositions(e)}futuresPrivateGetFundingHistory(e){return this.futuresPrivateGetFundingHistory(e)}futuresPrivatePostWithdrawals(e){return this.futuresPrivatePostWithdrawals(e)}futuresPrivatePostTransferOut(e){return this.futuresPrivatePostTransferOut(e)}futuresPrivatePostOrders(e){return this.futuresPrivatePostOrders(e)}futuresPrivatePostPositionMarginAutoDepositStatus(e){return this.futuresPrivatePostPositionMarginAutoDepositStatus(e)}futuresPrivatePostPositionMarginDepositMargin(e){return this.futuresPrivatePostPositionMarginDepositMargin(e)}futuresPrivatePostBulletPrivate(e){return this.futuresPrivatePostBulletPrivate(e)}futuresPrivateDeleteWithdrawalsWithdrawalId(e){return this.futuresPrivateDeleteWithdrawalsWithdrawalId(e)}futuresPrivateDeleteCancelTransferOut(e){return this.futuresPrivateDeleteCancelTransferOut(e)}futuresPrivateDeleteOrdersOrderId(e){return this.futuresPrivateDeleteOrdersOrderId(e)}futuresPrivateDeleteOrders(e){return this.futuresPrivateDeleteOrders(e)}futuresPrivateDeleteStopOrders(e){return this.futuresPrivateDeleteStopOrders(e)}}},5667:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3583);class r extends s.Z{publicGetTimestamp(e){return this.publicGetTimestamp(e)}publicGetStatus(e){return this.publicGetStatus(e)}publicGetSymbols(e){return this.publicGetSymbols(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetMarketAllTickers(e){return this.publicGetMarketAllTickers(e)}publicGetMarketOrderbookLevelLevelLimit(e){return this.publicGetMarketOrderbookLevelLevelLimit(e)}publicGetMarketOrderbookLevel220(e){return this.publicGetMarketOrderbookLevel220(e)}publicGetMarketOrderbookLevel2100(e){return this.publicGetMarketOrderbookLevel2100(e)}publicGetMarketHistories(e){return this.publicGetMarketHistories(e)}publicGetMarketCandles(e){return this.publicGetMarketCandles(e)}publicGetMarketStats(e){return this.publicGetMarketStats(e)}publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetCurrenciesCurrency(e){return this.publicGetCurrenciesCurrency(e)}publicGetPrices(e){return this.publicGetPrices(e)}publicGetMarkPriceSymbolCurrent(e){return this.publicGetMarkPriceSymbolCurrent(e)}publicGetMarginConfig(e){return this.publicGetMarginConfig(e)}publicGetMarginTradeLast(e){return this.publicGetMarginTradeLast(e)}publicPostBulletPublic(e){return this.publicPostBulletPublic(e)}privateGetMarketOrderbookLevelLevel(e){return this.privateGetMarketOrderbookLevelLevel(e)}privateGetMarketOrderbookLevel2(e){return this.privateGetMarketOrderbookLevel2(e)}privateGetMarketOrderbookLevel3(e){return this.privateGetMarketOrderbookLevel3(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetAccountsAccountId(e){return this.privateGetAccountsAccountId(e)}privateGetAccountsLedgers(e){return this.privateGetAccountsLedgers(e)}privateGetAccountsAccountIdHolds(e){return this.privateGetAccountsAccountIdHolds(e)}privateGetAccountsTransferable(e){return this.privateGetAccountsTransferable(e)}privateGetBaseFee(e){return this.privateGetBaseFee(e)}privateGetSubUser(e){return this.privateGetSubUser(e)}privateGetUserInfo(e){return this.privateGetUserInfo(e)}privateGetSubApiKey(e){return this.privateGetSubApiKey(e)}privateGetSubAccounts(e){return this.privateGetSubAccounts(e)}privateGetSubAccountsSubUserId(e){return this.privateGetSubAccountsSubUserId(e)}privateGetDepositAddresses(e){return this.privateGetDepositAddresses(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetHistDeposits(e){return this.privateGetHistDeposits(e)}privateGetHistWithdrawals(e){return this.privateGetHistWithdrawals(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetWithdrawalsQuotas(e){return this.privateGetWithdrawalsQuotas(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrderClientOrderClientOid(e){return this.privateGetOrderClientOrderClientOid(e)}privateGetOrdersOrderId(e){return this.privateGetOrdersOrderId(e)}privateGetLimitOrders(e){return this.privateGetLimitOrders(e)}privateGetFills(e){return this.privateGetFills(e)}privateGetLimitFills(e){return this.privateGetLimitFills(e)}privateGetIsolatedAccounts(e){return this.privateGetIsolatedAccounts(e)}privateGetIsolatedAccountSymbol(e){return this.privateGetIsolatedAccountSymbol(e)}privateGetIsolatedBorrowOutstanding(e){return this.privateGetIsolatedBorrowOutstanding(e)}privateGetIsolatedBorrowRepaid(e){return this.privateGetIsolatedBorrowRepaid(e)}privateGetIsolatedSymbols(e){return this.privateGetIsolatedSymbols(e)}privateGetMarginAccount(e){return this.privateGetMarginAccount(e)}privateGetMarginBorrow(e){return this.privateGetMarginBorrow(e)}privateGetMarginBorrowOutstanding(e){return this.privateGetMarginBorrowOutstanding(e)}privateGetMarginBorrowRepaid(e){return this.privateGetMarginBorrowRepaid(e)}privateGetMarginLendActive(e){return this.privateGetMarginLendActive(e)}privateGetMarginLendDone(e){return this.privateGetMarginLendDone(e)}privateGetMarginLendTradeUnsettled(e){return this.privateGetMarginLendTradeUnsettled(e)}privateGetMarginLendTradeSettled(e){return this.privateGetMarginLendTradeSettled(e)}privateGetMarginLendAssets(e){return this.privateGetMarginLendAssets(e)}privateGetMarginMarket(e){return this.privateGetMarginMarket(e)}privateGetStopOrderOrderId(e){return this.privateGetStopOrderOrderId(e)}privateGetStopOrder(e){return this.privateGetStopOrder(e)}privateGetStopOrderQueryOrderByClientOid(e){return this.privateGetStopOrderQueryOrderByClientOid(e)}privateGetTradeFees(e){return this.privateGetTradeFees(e)}privatePostAccounts(e){return this.privatePostAccounts(e)}privatePostAccountsInnerTransfer(e){return this.privatePostAccountsInnerTransfer(e)}privatePostAccountsSubTransfer(e){return this.privatePostAccountsSubTransfer(e)}privatePostDepositAddresses(e){return this.privatePostDepositAddresses(e)}privatePostWithdrawals(e){return this.privatePostWithdrawals(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersMulti(e){return this.privatePostOrdersMulti(e)}privatePostIsolatedBorrow(e){return this.privatePostIsolatedBorrow(e)}privatePostIsolatedRepayAll(e){return this.privatePostIsolatedRepayAll(e)}privatePostIsolatedRepaySingle(e){return this.privatePostIsolatedRepaySingle(e)}privatePostMarginBorrow(e){return this.privatePostMarginBorrow(e)}privatePostMarginOrder(e){return this.privatePostMarginOrder(e)}privatePostMarginRepayAll(e){return this.privatePostMarginRepayAll(e)}privatePostMarginRepaySingle(e){return this.privatePostMarginRepaySingle(e)}privatePostMarginLend(e){return this.privatePostMarginLend(e)}privatePostMarginToggleAutoLend(e){return this.privatePostMarginToggleAutoLend(e)}privatePostBulletPrivate(e){return this.privatePostBulletPrivate(e)}privatePostStopOrder(e){return this.privatePostStopOrder(e)}privatePostSubUser(e){return this.privatePostSubUser(e)}privatePostSubApiKey(e){return this.privatePostSubApiKey(e)}privatePostSubApiKeyUpdate(e){return this.privatePostSubApiKeyUpdate(e)}privateDeleteWithdrawalsWithdrawalId(e){return this.privateDeleteWithdrawalsWithdrawalId(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrderClientOrderClientOid(e){return this.privateDeleteOrderClientOrderClientOid(e)}privateDeleteOrdersOrderId(e){return this.privateDeleteOrdersOrderId(e)}privateDeleteMarginLendOrderId(e){return this.privateDeleteMarginLendOrderId(e)}privateDeleteStopOrderCancelOrderByClientOid(e){return this.privateDeleteStopOrderCancelOrderByClientOid(e)}privateDeleteStopOrderOrderId(e){return this.privateDeleteStopOrderOrderId(e)}privateDeleteStopOrderCancel(e){return this.privateDeleteStopOrderCancel(e)}privateDeleteSubApiKey(e){return this.privateDeleteSubApiKey(e)}futuresPublicGetContractsActive(e){return this.futuresPublicGetContractsActive(e)}futuresPublicGetContractsSymbol(e){return this.futuresPublicGetContractsSymbol(e)}futuresPublicGetTicker(e){return this.futuresPublicGetTicker(e)}futuresPublicGetLevel2Snapshot(e){return this.futuresPublicGetLevel2Snapshot(e)}futuresPublicGetLevel2Depth20(e){return this.futuresPublicGetLevel2Depth20(e)}futuresPublicGetLevel2Depth100(e){return this.futuresPublicGetLevel2Depth100(e)}futuresPublicGetLevel2MessageQuery(e){return this.futuresPublicGetLevel2MessageQuery(e)}futuresPublicGetLevel3MessageQuery(e){return this.futuresPublicGetLevel3MessageQuery(e)}futuresPublicGetLevel3Snapshot(e){return this.futuresPublicGetLevel3Snapshot(e)}futuresPublicGetTradeHistory(e){return this.futuresPublicGetTradeHistory(e)}futuresPublicGetInterestQuery(e){return this.futuresPublicGetInterestQuery(e)}futuresPublicGetIndexQuery(e){return this.futuresPublicGetIndexQuery(e)}futuresPublicGetMarkPriceSymbolCurrent(e){return this.futuresPublicGetMarkPriceSymbolCurrent(e)}futuresPublicGetPremiumQuery(e){return this.futuresPublicGetPremiumQuery(e)}futuresPublicGetFundingRateSymbolCurrent(e){return this.futuresPublicGetFundingRateSymbolCurrent(e)}futuresPublicGetTimestamp(e){return this.futuresPublicGetTimestamp(e)}futuresPublicGetStatus(e){return this.futuresPublicGetStatus(e)}futuresPublicGetKlineQuery(e){return this.futuresPublicGetKlineQuery(e)}futuresPublicGetContractsRiskLimitSymbol(e){return this.futuresPublicGetContractsRiskLimitSymbol(e)}futuresPublicGetLevel2DepthLimit(e){return this.futuresPublicGetLevel2DepthLimit(e)}futuresPublicPostBulletPublic(e){return this.futuresPublicPostBulletPublic(e)}futuresPrivateGetAccountOverview(e){return this.futuresPrivateGetAccountOverview(e)}futuresPrivateGetTransactionHistory(e){return this.futuresPrivateGetTransactionHistory(e)}futuresPrivateGetDepositAddress(e){return this.futuresPrivateGetDepositAddress(e)}futuresPrivateGetDepositList(e){return this.futuresPrivateGetDepositList(e)}futuresPrivateGetWithdrawalsQuotas(e){return this.futuresPrivateGetWithdrawalsQuotas(e)}futuresPrivateGetWithdrawalList(e){return this.futuresPrivateGetWithdrawalList(e)}futuresPrivateGetTransferList(e){return this.futuresPrivateGetTransferList(e)}futuresPrivateGetOrders(e){return this.futuresPrivateGetOrders(e)}futuresPrivateGetStopOrders(e){return this.futuresPrivateGetStopOrders(e)}futuresPrivateGetRecentDoneOrders(e){return this.futuresPrivateGetRecentDoneOrders(e)}futuresPrivateGetOrdersOrderId(e){return this.futuresPrivateGetOrdersOrderId(e)}futuresPrivateGetOrdersByClientOid(e){return this.futuresPrivateGetOrdersByClientOid(e)}futuresPrivateGetFills(e){return this.futuresPrivateGetFills(e)}futuresPrivateGetRecentFills(e){return this.futuresPrivateGetRecentFills(e)}futuresPrivateGetOpenOrderStatistics(e){return this.futuresPrivateGetOpenOrderStatistics(e)}futuresPrivateGetPosition(e){return this.futuresPrivateGetPosition(e)}futuresPrivateGetPositions(e){return this.futuresPrivateGetPositions(e)}futuresPrivateGetFundingHistory(e){return this.futuresPrivateGetFundingHistory(e)}futuresPrivatePostWithdrawals(e){return this.futuresPrivatePostWithdrawals(e)}futuresPrivatePostTransferOut(e){return this.futuresPrivatePostTransferOut(e)}futuresPrivatePostOrders(e){return this.futuresPrivatePostOrders(e)}futuresPrivatePostPositionMarginAutoDepositStatus(e){return this.futuresPrivatePostPositionMarginAutoDepositStatus(e)}futuresPrivatePostPositionMarginDepositMargin(e){return this.futuresPrivatePostPositionMarginDepositMargin(e)}futuresPrivatePostBulletPrivate(e){return this.futuresPrivatePostBulletPrivate(e)}futuresPrivateDeleteWithdrawalsWithdrawalId(e){return this.futuresPrivateDeleteWithdrawalsWithdrawalId(e)}futuresPrivateDeleteCancelTransferOut(e){return this.futuresPrivateDeleteCancelTransferOut(e)}futuresPrivateDeleteOrdersOrderId(e){return this.futuresPrivateDeleteOrdersOrderId(e)}futuresPrivateDeleteOrders(e){return this.futuresPrivateDeleteOrders(e)}futuresPrivateDeleteStopOrders(e){return this.futuresPrivateDeleteStopOrders(e)}webFrontGetContractSymbolFundingRates(e){return this.webFrontGetContractSymbolFundingRates(e)}}},4722:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{xreserveGetNonce(e){return this.xreserveGetNonce(e)}xreserveGetFee(e){return this.xreserveGetFee(e)}xreserveGetDelegatedTransactions(e){return this.xreserveGetDelegatedTransactions(e)}xreservePostDelegateTransfer(e){return this.xreservePostDelegateTransfer(e)}v3PublicGetTimestamp(e){return this.v3PublicGetTimestamp(e)}v3PublicGetCurrencies(e){return this.v3PublicGetCurrencies(e)}v3PublicGetMarkets(e){return this.v3PublicGetMarkets(e)}v3PublicGetTickers(e){return this.v3PublicGetTickers(e)}v3PublicGetK(e){return this.v3PublicGetK(e)}v3PublicGetTradesHistory(e){return this.v3PublicGetTradesHistory(e)}v3PublicGetFees(e){return this.v3PublicGetFees(e)}v3PublicGetExchangeRates(e){return this.v3PublicGetExchangeRates(e)}v3PublicGetExchangeRatesCurrency(e){return this.v3PublicGetExchangeRatesCurrency(e)}v3PublicGetBookMarket(e){return this.v3PublicGetBookMarket(e)}v3PublicGetKunaCodesCodeCheck(e){return this.v3PublicGetKunaCodesCodeCheck(e)}v3PublicGetLandingPageStatistic(e){return this.v3PublicGetLandingPageStatistic(e)}v3PublicGetTranslationsLocale(e){return this.v3PublicGetTranslationsLocale(e)}v3PublicGetTradesMarketHist(e){return this.v3PublicGetTradesMarketHist(e)}v3PublicPostHttpTest(e){return this.v3PublicPostHttpTest(e)}v3PublicPostDepositChannels(e){return this.v3PublicPostDepositChannels(e)}v3PublicPostWithdrawChannels(e){return this.v3PublicPostWithdrawChannels(e)}v3PublicPostSubscriptionPlans(e){return this.v3PublicPostSubscriptionPlans(e)}v3PublicPostSendTo(e){return this.v3PublicPostSendTo(e)}v3PublicPostConfirmToken(e){return this.v3PublicPostConfirmToken(e)}v3PublicPostKunaid(e){return this.v3PublicPostKunaid(e)}v3PublicPostWithdrawPrerequest(e){return this.v3PublicPostWithdrawPrerequest(e)}v3PublicPostDepositPrerequest(e){return this.v3PublicPostDepositPrerequest(e)}v3PublicPostDepositExchangeRates(e){return this.v3PublicPostDepositExchangeRates(e)}v3SignGetResetPasswordToken(e){return this.v3SignGetResetPasswordToken(e)}v3SignPostSignupGoogle(e){return this.v3SignPostSignupGoogle(e)}v3SignPostSignupResendConfirmation(e){return this.v3SignPostSignupResendConfirmation(e)}v3SignPostSignup(e){return this.v3SignPostSignup(e)}v3SignPostSignin(e){return this.v3SignPostSignin(e)}v3SignPostSigninTwoFactor(e){return this.v3SignPostSigninTwoFactor(e)}v3SignPostSigninResendConfirmDevice(e){return this.v3SignPostSigninResendConfirmDevice(e)}v3SignPostSigninConfirmDevice(e){return this.v3SignPostSigninConfirmDevice(e)}v3SignPostResetPassword(e){return this.v3SignPostResetPassword(e)}v3SignPostCoolSignin(e){return this.v3SignPostCoolSignin(e)}v3SignPutResetPasswordToken(e){return this.v3SignPutResetPasswordToken(e)}v3SignPutSignupCodeConfirm(e){return this.v3SignPutSignupCodeConfirm(e)}v3PrivatePostAuthWOrderSubmit(e){return this.v3PrivatePostAuthWOrderSubmit(e)}v3PrivatePostAuthROrders(e){return this.v3PrivatePostAuthROrders(e)}v3PrivatePostAuthROrdersMarket(e){return this.v3PrivatePostAuthROrdersMarket(e)}v3PrivatePostAuthROrdersMarkets(e){return this.v3PrivatePostAuthROrdersMarkets(e)}v3PrivatePostAuthApiTokensDelete(e){return this.v3PrivatePostAuthApiTokensDelete(e)}v3PrivatePostAuthApiTokensCreate(e){return this.v3PrivatePostAuthApiTokensCreate(e)}v3PrivatePostAuthApiTokens(e){return this.v3PrivatePostAuthApiTokens(e)}v3PrivatePostAuthSigninHistoryUniq(e){return this.v3PrivatePostAuthSigninHistoryUniq(e)}v3PrivatePostAuthSigninHistory(e){return this.v3PrivatePostAuthSigninHistory(e)}v3PrivatePostAuthDisableWithdrawConfirmation(e){return this.v3PrivatePostAuthDisableWithdrawConfirmation(e)}v3PrivatePostAuthChangePassword(e){return this.v3PrivatePostAuthChangePassword(e)}v3PrivatePostAuthDepositAddress(e){return this.v3PrivatePostAuthDepositAddress(e)}v3PrivatePostAuthAnnouncementsAccept(e){return this.v3PrivatePostAuthAnnouncementsAccept(e)}v3PrivatePostAuthAnnouncementsUnaccepted(e){return this.v3PrivatePostAuthAnnouncementsUnaccepted(e)}v3PrivatePostAuthOtpDeactivate(e){return this.v3PrivatePostAuthOtpDeactivate(e)}v3PrivatePostAuthOtpActivate(e){return this.v3PrivatePostAuthOtpActivate(e)}v3PrivatePostAuthOtpSecret(e){return this.v3PrivatePostAuthOtpSecret(e)}v3PrivatePostAuthROrderMarketOrderIdTrades(e){return this.v3PrivatePostAuthROrderMarketOrderIdTrades(e)}v3PrivatePostAuthROrdersMarketHist(e){return this.v3PrivatePostAuthROrdersMarketHist(e)}v3PrivatePostAuthROrdersHist(e){return this.v3PrivatePostAuthROrdersHist(e)}v3PrivatePostAuthROrdersHistMarkets(e){return this.v3PrivatePostAuthROrdersHistMarkets(e)}v3PrivatePostAuthROrdersDetails(e){return this.v3PrivatePostAuthROrdersDetails(e)}v3PrivatePostAuthAssetsHistory(e){return this.v3PrivatePostAuthAssetsHistory(e)}v3PrivatePostAuthAssetsHistoryWithdraws(e){return this.v3PrivatePostAuthAssetsHistoryWithdraws(e)}v3PrivatePostAuthAssetsHistoryDeposits(e){return this.v3PrivatePostAuthAssetsHistoryDeposits(e)}v3PrivatePostAuthRWallets(e){return this.v3PrivatePostAuthRWallets(e)}v3PrivatePostAuthMarketsFavorites(e){return this.v3PrivatePostAuthMarketsFavorites(e)}v3PrivatePostAuthMarketsFavoritesList(e){return this.v3PrivatePostAuthMarketsFavoritesList(e)}v3PrivatePostAuthMeUpdate(e){return this.v3PrivatePostAuthMeUpdate(e)}v3PrivatePostAuthMe(e){return this.v3PrivatePostAuthMe(e)}v3PrivatePostAuthFundSources(e){return this.v3PrivatePostAuthFundSources(e)}v3PrivatePostAuthFundSourcesList(e){return this.v3PrivatePostAuthFundSourcesList(e)}v3PrivatePostAuthWithdrawResendConfirmation(e){return this.v3PrivatePostAuthWithdrawResendConfirmation(e)}v3PrivatePostAuthWithdraw(e){return this.v3PrivatePostAuthWithdraw(e)}v3PrivatePostAuthWithdrawDetails(e){return this.v3PrivatePostAuthWithdrawDetails(e)}v3PrivatePostAuthWithdrawInfo(e){return this.v3PrivatePostAuthWithdrawInfo(e)}v3PrivatePostAuthPaymentAddresses(e){return this.v3PrivatePostAuthPaymentAddresses(e)}v3PrivatePostAuthDepositPrerequest(e){return this.v3PrivatePostAuthDepositPrerequest(e)}v3PrivatePostAuthDepositExchangeRates(e){return this.v3PrivatePostAuthDepositExchangeRates(e)}v3PrivatePostAuthDeposit(e){return this.v3PrivatePostAuthDeposit(e)}v3PrivatePostAuthDepositDetails(e){return this.v3PrivatePostAuthDepositDetails(e)}v3PrivatePostAuthDepositInfo(e){return this.v3PrivatePostAuthDepositInfo(e)}v3PrivatePostAuthKunaCodesCount(e){return this.v3PrivatePostAuthKunaCodesCount(e)}v3PrivatePostAuthKunaCodesDetails(e){return this.v3PrivatePostAuthKunaCodesDetails(e)}v3PrivatePostAuthKunaCodesEdit(e){return this.v3PrivatePostAuthKunaCodesEdit(e)}v3PrivatePostAuthKunaCodesSendPdf(e){return this.v3PrivatePostAuthKunaCodesSendPdf(e)}v3PrivatePostAuthKunaCodes(e){return this.v3PrivatePostAuthKunaCodes(e)}v3PrivatePostAuthKunaCodesRedeemedByMe(e){return this.v3PrivatePostAuthKunaCodesRedeemedByMe(e)}v3PrivatePostAuthKunaCodesIssuedByMe(e){return this.v3PrivatePostAuthKunaCodesIssuedByMe(e)}v3PrivatePostAuthPaymentRequestsInvoice(e){return this.v3PrivatePostAuthPaymentRequestsInvoice(e)}v3PrivatePostAuthPaymentRequestsType(e){return this.v3PrivatePostAuthPaymentRequestsType(e)}v3PrivatePostAuthReferralProgramWeeklyEarnings(e){return this.v3PrivatePostAuthReferralProgramWeeklyEarnings(e)}v3PrivatePostAuthReferralProgramStats(e){return this.v3PrivatePostAuthReferralProgramStats(e)}v3PrivatePostAuthMerchantPayoutServices(e){return this.v3PrivatePostAuthMerchantPayoutServices(e)}v3PrivatePostAuthMerchantWithdraw(e){return this.v3PrivatePostAuthMerchantWithdraw(e)}v3PrivatePostAuthMerchantPaymentServices(e){return this.v3PrivatePostAuthMerchantPaymentServices(e)}v3PrivatePostAuthMerchantDeposit(e){return this.v3PrivatePostAuthMerchantDeposit(e)}v3PrivatePostAuthVerificationAuthToken(e){return this.v3PrivatePostAuthVerificationAuthToken(e)}v3PrivatePostAuthKunaidPurchaseCreate(e){return this.v3PrivatePostAuthKunaidPurchaseCreate(e)}v3PrivatePostAuthDevicesList(e){return this.v3PrivatePostAuthDevicesList(e)}v3PrivatePostAuthSessionsList(e){return this.v3PrivatePostAuthSessionsList(e)}v3PrivatePostAuthSubscriptionsReactivate(e){return this.v3PrivatePostAuthSubscriptionsReactivate(e)}v3PrivatePostAuthSubscriptionsCancel(e){return this.v3PrivatePostAuthSubscriptionsCancel(e)}v3PrivatePostAuthSubscriptionsProlong(e){return this.v3PrivatePostAuthSubscriptionsProlong(e)}v3PrivatePostAuthSubscriptionsCreate(e){return this.v3PrivatePostAuthSubscriptionsCreate(e)}v3PrivatePostAuthSubscriptionsList(e){return this.v3PrivatePostAuthSubscriptionsList(e)}v3PrivatePostAuthKunaIdsList(e){return this.v3PrivatePostAuthKunaIdsList(e)}v3PrivatePostOrderCancelMulti(e){return this.v3PrivatePostOrderCancelMulti(e)}v3PrivatePostOrderCancel(e){return this.v3PrivatePostOrderCancel(e)}v3PrivatePutAuthFundSourcesId(e){return this.v3PrivatePutAuthFundSourcesId(e)}v3PrivatePutAuthKunaCodesRedeem(e){return this.v3PrivatePutAuthKunaCodesRedeem(e)}v3PrivateDeleteAuthMarketsFavorites(e){return this.v3PrivateDeleteAuthMarketsFavorites(e)}v3PrivateDeleteAuthFundSources(e){return this.v3PrivateDeleteAuthFundSources(e)}v3PrivateDeleteAuthDevices(e){return this.v3PrivateDeleteAuthDevices(e)}v3PrivateDeleteAuthDevicesList(e){return this.v3PrivateDeleteAuthDevicesList(e)}v3PrivateDeleteAuthSessionsList(e){return this.v3PrivateDeleteAuthSessionsList(e)}v3PrivateDeleteAuthSessions(e){return this.v3PrivateDeleteAuthSessions(e)}publicGetDepth(e){return this.publicGetDepth(e)}publicGetKWithPendingTrades(e){return this.publicGetKWithPendingTrades(e)}publicGetK(e){return this.publicGetK(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetOrderBook(e){return this.publicGetOrderBook(e)}publicGetOrderBookMarket(e){return this.publicGetOrderBookMarket(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetTickersMarket(e){return this.publicGetTickersMarket(e)}publicGetTimestamp(e){return this.publicGetTimestamp(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetTradesMarket(e){return this.publicGetTradesMarket(e)}privateGetMembersMe(e){return this.privateGetMembersMe(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetDeposit(e){return this.privateGetDeposit(e)}privateGetDepositAddress(e){return this.privateGetDepositAddress(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrder(e){return this.privateGetOrder(e)}privateGetTradesMy(e){return this.privateGetTradesMy(e)}privateGetWithdraws(e){return this.privateGetWithdraws(e)}privateGetWithdraw(e){return this.privateGetWithdraw(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersMulti(e){return this.privatePostOrdersMulti(e)}privatePostOrdersClear(e){return this.privatePostOrdersClear(e)}privatePostOrderDelete(e){return this.privatePostOrderDelete(e)}privatePostWithdraw(e){return this.privatePostWithdraw(e)}}},9720:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetBookCurrencyQuote(e){return this.publicGetBookCurrencyQuote(e)}publicGetChartWeek(e){return this.publicGetChartWeek(e)}publicGetChartWeekCurrencyQuote(e){return this.publicGetChartWeekCurrencyQuote(e)}publicGetCurrency(e){return this.publicGetCurrency(e)}publicGetCurrencyAvailable(e){return this.publicGetCurrencyAvailable(e)}publicGetCurrencyQuotes(e){return this.publicGetCurrencyQuotes(e)}publicGetCurrencyCurrency(e){return this.publicGetCurrencyCurrency(e)}publicGetPair(e){return this.publicGetPair(e)}publicGetPairAvailable(e){return this.publicGetPairAvailable(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTickerBaseQuote(e){return this.publicGetTickerBaseQuote(e)}publicGetTime(e){return this.publicGetTime(e)}publicGetTradeHistoryCurrencyQuote(e){return this.publicGetTradeHistoryCurrencyQuote(e)}publicGetTradeFeeCurrencyQuote(e){return this.publicGetTradeFeeCurrencyQuote(e)}publicGetTradeFeeLevels(e){return this.publicGetTradeFeeLevels(e)}publicGetTransactionBindings(e){return this.publicGetTransactionBindings(e)}privateGetAuthAccount(e){return this.privateGetAuthAccount(e)}privateGetAuthAccountCurrencyCurrencyType(e){return this.privateGetAuthAccountCurrencyCurrencyType(e)}privateGetAuthOrder(e){return this.privateGetAuthOrder(e)}privateGetAuthOrderGetOrderId(e){return this.privateGetAuthOrderGetOrderId(e)}privateGetAuthOrderPairCurrencyQuote(e){return this.privateGetAuthOrderPairCurrencyQuote(e)}privateGetAuthOrderPairCurrencyQuoteActive(e){return this.privateGetAuthOrderPairCurrencyQuoteActive(e)}privateGetAuthStopOrder(e){return this.privateGetAuthStopOrder(e)}privateGetAuthStopOrderGetOrderId(e){return this.privateGetAuthStopOrderGetOrderId(e)}privateGetAuthStopOrderPairCurrencyQuote(e){return this.privateGetAuthStopOrderPairCurrencyQuote(e)}privateGetAuthStopOrderPairCurrencyQuoteActive(e){return this.privateGetAuthStopOrderPairCurrencyQuoteActive(e)}privateGetAuthTrade(e){return this.privateGetAuthTrade(e)}privateGetAuthTradePairCurrencyQuote(e){return this.privateGetAuthTradePairCurrencyQuote(e)}privateGetAuthTradeFeeCurrencyQuote(e){return this.privateGetAuthTradeFeeCurrencyQuote(e)}privateGetAuthTransaction(e){return this.privateGetAuthTransaction(e)}privateGetAuthTransactionBindings(e){return this.privateGetAuthTransactionBindings(e)}privateGetAuthTransactionBindingsCurrency(e){return this.privateGetAuthTransactionBindingsCurrency(e)}privateGetAuthTransactionId(e){return this.privateGetAuthTransactionId(e)}privateGetAuthTransfer(e){return this.privateGetAuthTransfer(e)}privatePostAuthOrderCancel(e){return this.privatePostAuthOrderCancel(e)}privatePostAuthOrderCancelAll(e){return this.privatePostAuthOrderCancelAll(e)}privatePostAuthOrderCancelAllCurrencyQuote(e){return this.privatePostAuthOrderCancelAllCurrencyQuote(e)}privatePostAuthOrderPlace(e){return this.privatePostAuthOrderPlace(e)}privatePostAuthSpotDeposit(e){return this.privatePostAuthSpotDeposit(e)}privatePostAuthSpotWithdraw(e){return this.privatePostAuthSpotWithdraw(e)}privatePostAuthStopOrderCancel(e){return this.privatePostAuthStopOrderCancel(e)}privatePostAuthStopOrderCancelAll(e){return this.privatePostAuthStopOrderCancelAll(e)}privatePostAuthStopOrderCancelAllCurrencyQuote(e){return this.privatePostAuthStopOrderCancelAllCurrencyQuote(e)}privatePostAuthStopOrderPlace(e){return this.privatePostAuthStopOrderPlace(e)}privatePostAuthTransactionDepositAddress(e){return this.privatePostAuthTransactionDepositAddress(e)}privatePostAuthTransactionWithdraw(e){return this.privatePostAuthTransactionWithdraw(e)}privatePostAuthTransactionWithdrawCancel(e){return this.privatePostAuthTransactionWithdrawCancel(e)}privatePostAuthTransactionWithdrawConfirm(e){return this.privatePostAuthTransactionWithdrawConfirm(e)}privatePostAuthTransactionWithdrawResendCode(e){return this.privatePostAuthTransactionWithdrawResendCode(e)}privatePostAuthTransferEmail(e){return this.privatePostAuthTransferEmail(e)}privatePostAuthTransferId(e){return this.privatePostAuthTransferId(e)}privatePostAuthTransferPhone(e){return this.privatePostAuthTransferPhone(e)}}},6168:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCurrencyPairs(e){return this.publicGetCurrencyPairs(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetDepth(e){return this.publicGetDepth(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetKline(e){return this.publicGetKline(e)}publicGetAccuracy(e){return this.publicGetAccuracy(e)}privatePostUserInfo(e){return this.privatePostUserInfo(e)}privatePostCreateOrder(e){return this.privatePostCreateOrder(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostOrdersInfo(e){return this.privatePostOrdersInfo(e)}privatePostOrdersInfoHistory(e){return this.privatePostOrdersInfoHistory(e)}privatePostWithdraw(e){return this.privatePostWithdraw(e)}privatePostWithdrawCancel(e){return this.privatePostWithdrawCancel(e)}privatePostWithdraws(e){return this.privatePostWithdraws(e)}privatePostWithdrawConfigs(e){return this.privatePostWithdrawConfigs(e)}}},7767:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCurrencyPairs(e){return this.publicGetCurrencyPairs(e)}publicGetAccuracy(e){return this.publicGetAccuracy(e)}publicGetUsdToCny(e){return this.publicGetUsdToCny(e)}publicGetWithdrawConfigs(e){return this.publicGetWithdrawConfigs(e)}publicGetTimestamp(e){return this.publicGetTimestamp(e)}publicGetTicker24hr(e){return this.publicGetTicker24hr(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetDepth(e){return this.publicGetDepth(e)}publicGetIncrDepth(e){return this.publicGetIncrDepth(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetKline(e){return this.publicGetKline(e)}publicGetSupplementSystemPing(e){return this.publicGetSupplementSystemPing(e)}publicGetSupplementIncrDepth(e){return this.publicGetSupplementIncrDepth(e)}publicGetSupplementTrades(e){return this.publicGetSupplementTrades(e)}publicGetSupplementTickerPrice(e){return this.publicGetSupplementTickerPrice(e)}publicGetSupplementTickerBookTicker(e){return this.publicGetSupplementTickerBookTicker(e)}publicPostSupplementSystemStatus(e){return this.publicPostSupplementSystemStatus(e)}privatePostUserInfo(e){return this.privatePostUserInfo(e)}privatePostSubscribeGetKey(e){return this.privatePostSubscribeGetKey(e)}privatePostSubscribeRefreshKey(e){return this.privatePostSubscribeRefreshKey(e)}privatePostSubscribeDestroyKey(e){return this.privatePostSubscribeDestroyKey(e)}privatePostGetDepositAddress(e){return this.privatePostGetDepositAddress(e)}privatePostDepositHistory(e){return this.privatePostDepositHistory(e)}privatePostCreateOrder(e){return this.privatePostCreateOrder(e)}privatePostBatchCreateOrder(e){return this.privatePostBatchCreateOrder(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostCancelClientOrders(e){return this.privatePostCancelClientOrders(e)}privatePostOrdersInfo(e){return this.privatePostOrdersInfo(e)}privatePostOrdersInfoHistory(e){return this.privatePostOrdersInfoHistory(e)}privatePostOrderTransactionDetail(e){return this.privatePostOrderTransactionDetail(e)}privatePostTransactionHistory(e){return this.privatePostTransactionHistory(e)}privatePostOrdersInfoNoDeal(e){return this.privatePostOrdersInfoNoDeal(e)}privatePostWithdraw(e){return this.privatePostWithdraw(e)}privatePostWithdrawCancel(e){return this.privatePostWithdrawCancel(e)}privatePostWithdraws(e){return this.privatePostWithdraws(e)}privatePostSupplementUserInfo(e){return this.privatePostSupplementUserInfo(e)}privatePostSupplementWithdraw(e){return this.privatePostSupplementWithdraw(e)}privatePostSupplementDepositHistory(e){return this.privatePostSupplementDepositHistory(e)}privatePostSupplementWithdraws(e){return this.privatePostSupplementWithdraws(e)}privatePostSupplementGetDepositAddress(e){return this.privatePostSupplementGetDepositAddress(e)}privatePostSupplementAssetDetail(e){return this.privatePostSupplementAssetDetail(e)}privatePostSupplementCustomerTradeFee(e){return this.privatePostSupplementCustomerTradeFee(e)}privatePostSupplementApiRestrictions(e){return this.privatePostSupplementApiRestrictions(e)}privatePostSupplementSystemPing(e){return this.privatePostSupplementSystemPing(e)}privatePostSupplementCreateOrderTest(e){return this.privatePostSupplementCreateOrderTest(e)}privatePostSupplementCreateOrder(e){return this.privatePostSupplementCreateOrder(e)}privatePostSupplementCancelOrder(e){return this.privatePostSupplementCancelOrder(e)}privatePostSupplementCancelOrderBySymbol(e){return this.privatePostSupplementCancelOrderBySymbol(e)}privatePostSupplementOrdersInfo(e){return this.privatePostSupplementOrdersInfo(e)}privatePostSupplementOrdersInfoNoDeal(e){return this.privatePostSupplementOrdersInfoNoDeal(e)}privatePostSupplementOrdersInfoHistory(e){return this.privatePostSupplementOrdersInfoHistory(e)}privatePostSupplementUserInfoAccount(e){return this.privatePostSupplementUserInfoAccount(e)}privatePostSupplementTransactionHistory(e){return this.privatePostSupplementTransactionHistory(e)}}},3148:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{exchangeGetMarkets(e){return this.exchangeGetMarkets(e)}publicGetOrderbook(e){return this.publicGetOrderbook(e)}publicGetOrderbookTop(e){return this.publicGetOrderbookTop(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetTrades(e){return this.publicGetTrades(e)}privateGetAccountsIdPending(e){return this.privateGetAccountsIdPending(e)}privateGetAccountsIdTransactions(e){return this.privateGetAccountsIdTransactions(e)}privateGetBalance(e){return this.privateGetBalance(e)}privateGetBeneficiaries(e){return this.privateGetBeneficiaries(e)}privateGetFeeInfo(e){return this.privateGetFeeInfo(e)}privateGetFundingAddress(e){return this.privateGetFundingAddress(e)}privateGetListorders(e){return this.privateGetListorders(e)}privateGetListtrades(e){return this.privateGetListtrades(e)}privateGetOrdersId(e){return this.privateGetOrdersId(e)}privateGetQuotesId(e){return this.privateGetQuotesId(e)}privateGetWithdrawals(e){return this.privateGetWithdrawals(e)}privateGetWithdrawalsId(e){return this.privateGetWithdrawalsId(e)}privateGetTransfers(e){return this.privateGetTransfers(e)}privatePostAccounts(e){return this.privatePostAccounts(e)}privatePostAccountsIdName(e){return this.privatePostAccountsIdName(e)}privatePostPostorder(e){return this.privatePostPostorder(e)}privatePostMarketorder(e){return this.privatePostMarketorder(e)}privatePostStoporder(e){return this.privatePostStoporder(e)}privatePostFundingAddress(e){return this.privatePostFundingAddress(e)}privatePostWithdrawals(e){return this.privatePostWithdrawals(e)}privatePostSend(e){return this.privatePostSend(e)}privatePostQuotes(e){return this.privatePostQuotes(e)}privatePostOauth2Grant(e){return this.privatePostOauth2Grant(e)}privatePutAccountsIdName(e){return this.privatePutAccountsIdName(e)}privatePutQuotesId(e){return this.privatePutQuotesId(e)}privateDeleteQuotesId(e){return this.privateDeleteQuotesId(e)}privateDeleteWithdrawalsId(e){return this.privateDeleteWithdrawalsId(e)}}},8850:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetAssetpairs(e){return this.publicGetAssetpairs(e)}publicGetAssetpairsId(e){return this.publicGetAssetpairsId(e)}publicGetAssets(e){return this.publicGetAssets(e)}publicGetAssetsId(e){return this.publicGetAssetsId(e)}publicGetIsalive(e){return this.publicGetIsalive(e)}publicGetOrderbooks(e){return this.publicGetOrderbooks(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetPrices(e){return this.publicGetPrices(e)}publicGetTradesPublicAssetPairId(e){return this.publicGetTradesPublicAssetPairId(e)}privateGetBalance(e){return this.privateGetBalance(e)}privateGetTrades(e){return this.privateGetTrades(e)}privateGetTradesOrderOrderId(e){return this.privateGetTradesOrderOrderId(e)}privateGetOrdersActive(e){return this.privateGetOrdersActive(e)}privateGetOrdersClosed(e){return this.privateGetOrdersClosed(e)}privateGetOrdersOrderId(e){return this.privateGetOrdersOrderId(e)}privateGetOperations(e){return this.privateGetOperations(e)}privateGetOperationsDepositsAddresses(e){return this.privateGetOperationsDepositsAddresses(e)}privateGetOperationsDepositsAddressesAssetId(e){return this.privateGetOperationsDepositsAddressesAssetId(e)}privatePostOrdersLimit(e){return this.privatePostOrdersLimit(e)}privatePostOrdersMarket(e){return this.privatePostOrdersMarket(e)}privatePostOrdersBulk(e){return this.privatePostOrdersBulk(e)}privatePostOperationsWithdrawals(e){return this.privatePostOperationsWithdrawals(e)}privatePostOperationsDepositsAddresses(e){return this.privatePostOperationsDepositsAddresses(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrdersOrderId(e){return this.privateDeleteOrdersOrderId(e)}}},2874:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCoins(e){return this.publicGetCoins(e)}publicGetCoinOrderbook(e){return this.publicGetCoinOrderbook(e)}publicGetCoinTicker(e){return this.publicGetCoinTicker(e)}publicGetCoinTrades(e){return this.publicGetCoinTrades(e)}publicGetCoinTradesFrom(e){return this.publicGetCoinTradesFrom(e)}publicGetCoinTradesFromTo(e){return this.publicGetCoinTradesFromTo(e)}publicGetCoinDaySummaryYearMonthDay(e){return this.publicGetCoinDaySummaryYearMonthDay(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostGetAccountInfo(e){return this.privatePostGetAccountInfo(e)}privatePostGetOrder(e){return this.privatePostGetOrder(e)}privatePostGetWithdrawal(e){return this.privatePostGetWithdrawal(e)}privatePostListSystemMessages(e){return this.privatePostListSystemMessages(e)}privatePostListOrders(e){return this.privatePostListOrders(e)}privatePostListOrderbook(e){return this.privatePostListOrderbook(e)}privatePostPlaceBuyOrder(e){return this.privatePostPlaceBuyOrder(e)}privatePostPlaceSellOrder(e){return this.privatePostPlaceSellOrder(e)}privatePostPlaceMarketBuyOrder(e){return this.privatePostPlaceMarketBuyOrder(e)}privatePostPlaceMarketSellOrder(e){return this.privatePostPlaceMarketSellOrder(e)}privatePostWithdrawCoin(e){return this.privatePostWithdrawCoin(e)}v4PublicGetCoinCandle(e){return this.v4PublicGetCoinCandle(e)}v4PublicNetGetCandles(e){return this.v4PublicNetGetCandles(e)}}},8240:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{contractPublicGetPing(e){return this.contractPublicGetPing(e)}contractPublicGetDetail(e){return this.contractPublicGetDetail(e)}contractPublicGetSupportCurrencies(e){return this.contractPublicGetSupportCurrencies(e)}contractPublicGetDepthSymbol(e){return this.contractPublicGetDepthSymbol(e)}contractPublicGetDepthCommitsSymbolLimit(e){return this.contractPublicGetDepthCommitsSymbolLimit(e)}contractPublicGetIndexPriceSymbol(e){return this.contractPublicGetIndexPriceSymbol(e)}contractPublicGetFairPriceSymbol(e){return this.contractPublicGetFairPriceSymbol(e)}contractPublicGetFundingRateSymbol(e){return this.contractPublicGetFundingRateSymbol(e)}contractPublicGetKlineSymbol(e){return this.contractPublicGetKlineSymbol(e)}contractPublicGetKlineIndexPriceSymbol(e){return this.contractPublicGetKlineIndexPriceSymbol(e)}contractPublicGetKlineFairPriceSymbol(e){return this.contractPublicGetKlineFairPriceSymbol(e)}contractPublicGetDealsSymbol(e){return this.contractPublicGetDealsSymbol(e)}contractPublicGetTicker(e){return this.contractPublicGetTicker(e)}contractPublicGetRiskReverse(e){return this.contractPublicGetRiskReverse(e)}contractPublicGetRiskReverseHistory(e){return this.contractPublicGetRiskReverseHistory(e)}contractPublicGetFundingRateHistory(e){return this.contractPublicGetFundingRateHistory(e)}contractPrivateGetAccountAssets(e){return this.contractPrivateGetAccountAssets(e)}contractPrivateGetAccountAssetCurrency(e){return this.contractPrivateGetAccountAssetCurrency(e)}contractPrivateGetAccountTransferRecord(e){return this.contractPrivateGetAccountTransferRecord(e)}contractPrivateGetPositionListHistoryPositions(e){return this.contractPrivateGetPositionListHistoryPositions(e)}contractPrivateGetPositionOpenPositions(e){return this.contractPrivateGetPositionOpenPositions(e)}contractPrivateGetPositionFundingRecords(e){return this.contractPrivateGetPositionFundingRecords(e)}contractPrivateGetPositionPositionMode(e){return this.contractPrivateGetPositionPositionMode(e)}contractPrivateGetOrderListOpenOrdersSymbol(e){return this.contractPrivateGetOrderListOpenOrdersSymbol(e)}contractPrivateGetOrderListHistoryOrders(e){return this.contractPrivateGetOrderListHistoryOrders(e)}contractPrivateGetOrderExternalSymbolExternalOid(e){return this.contractPrivateGetOrderExternalSymbolExternalOid(e)}contractPrivateGetOrderGetOrderId(e){return this.contractPrivateGetOrderGetOrderId(e)}contractPrivateGetOrderBatchQuery(e){return this.contractPrivateGetOrderBatchQuery(e)}contractPrivateGetOrderDealDetailsOrderId(e){return this.contractPrivateGetOrderDealDetailsOrderId(e)}contractPrivateGetOrderListOrderDeals(e){return this.contractPrivateGetOrderListOrderDeals(e)}contractPrivateGetPlanorderListOrders(e){return this.contractPrivateGetPlanorderListOrders(e)}contractPrivateGetStoporderListOrders(e){return this.contractPrivateGetStoporderListOrders(e)}contractPrivateGetStoporderOrderDetailsStopOrderId(e){return this.contractPrivateGetStoporderOrderDetailsStopOrderId(e)}contractPrivateGetAccountRiskLimit(e){return this.contractPrivateGetAccountRiskLimit(e)}contractPrivateGetAccountTieredFeeRate(e){return this.contractPrivateGetAccountTieredFeeRate(e)}contractPrivatePostPositionChangeMargin(e){return this.contractPrivatePostPositionChangeMargin(e)}contractPrivatePostPositionChangeLeverage(e){return this.contractPrivatePostPositionChangeLeverage(e)}contractPrivatePostPositionChangePositionMode(e){return this.contractPrivatePostPositionChangePositionMode(e)}contractPrivatePostOrderSubmit(e){return this.contractPrivatePostOrderSubmit(e)}contractPrivatePostOrderSubmitBatch(e){return this.contractPrivatePostOrderSubmitBatch(e)}contractPrivatePostOrderCancel(e){return this.contractPrivatePostOrderCancel(e)}contractPrivatePostOrderCancelWithExternal(e){return this.contractPrivatePostOrderCancelWithExternal(e)}contractPrivatePostOrderCancelAll(e){return this.contractPrivatePostOrderCancelAll(e)}contractPrivatePostAccountChangeRiskLevel(e){return this.contractPrivatePostAccountChangeRiskLevel(e)}contractPrivatePostPlanorderPlace(e){return this.contractPrivatePostPlanorderPlace(e)}contractPrivatePostPlanorderCancel(e){return this.contractPrivatePostPlanorderCancel(e)}contractPrivatePostPlanorderCancelAll(e){return this.contractPrivatePostPlanorderCancelAll(e)}contractPrivatePostStoporderCancel(e){return this.contractPrivatePostStoporderCancel(e)}contractPrivatePostStoporderCancelAll(e){return this.contractPrivatePostStoporderCancelAll(e)}contractPrivatePostStoporderChangePrice(e){return this.contractPrivatePostStoporderChangePrice(e)}contractPrivatePostStoporderChangePlanPrice(e){return this.contractPrivatePostStoporderChangePlanPrice(e)}spotPublicGetMarketSymbols(e){return this.spotPublicGetMarketSymbols(e)}spotPublicGetMarketCoinList(e){return this.spotPublicGetMarketCoinList(e)}spotPublicGetCommonTimestamp(e){return this.spotPublicGetCommonTimestamp(e)}spotPublicGetCommonPing(e){return this.spotPublicGetCommonPing(e)}spotPublicGetMarketTicker(e){return this.spotPublicGetMarketTicker(e)}spotPublicGetMarketDepth(e){return this.spotPublicGetMarketDepth(e)}spotPublicGetMarketDeals(e){return this.spotPublicGetMarketDeals(e)}spotPublicGetMarketKline(e){return this.spotPublicGetMarketKline(e)}spotPublicGetMarketApiDefaultSymbols(e){return this.spotPublicGetMarketApiDefaultSymbols(e)}spotPrivateGetAccountInfo(e){return this.spotPrivateGetAccountInfo(e)}spotPrivateGetOrderOpenOrders(e){return this.spotPrivateGetOrderOpenOrders(e)}spotPrivateGetOrderList(e){return this.spotPrivateGetOrderList(e)}spotPrivateGetOrderQuery(e){return this.spotPrivateGetOrderQuery(e)}spotPrivateGetOrderDeals(e){return this.spotPrivateGetOrderDeals(e)}spotPrivateGetOrderDealDetail(e){return this.spotPrivateGetOrderDealDetail(e)}spotPrivateGetAssetDepositAddressList(e){return this.spotPrivateGetAssetDepositAddressList(e)}spotPrivateGetAssetDepositList(e){return this.spotPrivateGetAssetDepositList(e)}spotPrivateGetAssetAddressList(e){return this.spotPrivateGetAssetAddressList(e)}spotPrivateGetAssetWithdrawList(e){return this.spotPrivateGetAssetWithdrawList(e)}spotPrivateGetAssetInternalTransferRecord(e){return this.spotPrivateGetAssetInternalTransferRecord(e)}spotPrivateGetAccountBalance(e){return this.spotPrivateGetAccountBalance(e)}spotPrivateGetAssetInternalTransferInfo(e){return this.spotPrivateGetAssetInternalTransferInfo(e)}spotPrivateGetMarketApiSymbols(e){return this.spotPrivateGetMarketApiSymbols(e)}spotPrivatePostOrderPlace(e){return this.spotPrivatePostOrderPlace(e)}spotPrivatePostOrderPlaceBatch(e){return this.spotPrivatePostOrderPlaceBatch(e)}spotPrivatePostAssetWithdraw(e){return this.spotPrivatePostAssetWithdraw(e)}spotPrivatePostAssetInternalTransfer(e){return this.spotPrivatePostAssetInternalTransfer(e)}spotPrivateDeleteOrderCancel(e){return this.spotPrivateDeleteOrderCancel(e)}spotPrivateDeleteOrderCancelBySymbol(e){return this.spotPrivateDeleteOrderCancelBySymbol(e)}spotPrivateDeleteAssetWithdraw(e){return this.spotPrivateDeleteAssetWithdraw(e)}}},8862:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{spotPublicGetPing(e){return this.spotPublicGetPing(e)}spotPublicGetTime(e){return this.spotPublicGetTime(e)}spotPublicGetExchangeInfo(e){return this.spotPublicGetExchangeInfo(e)}spotPublicGetDepth(e){return this.spotPublicGetDepth(e)}spotPublicGetTrades(e){return this.spotPublicGetTrades(e)}spotPublicGetHistoricalTrades(e){return this.spotPublicGetHistoricalTrades(e)}spotPublicGetAggTrades(e){return this.spotPublicGetAggTrades(e)}spotPublicGetKlines(e){return this.spotPublicGetKlines(e)}spotPublicGetAvgPrice(e){return this.spotPublicGetAvgPrice(e)}spotPublicGetTicker24hr(e){return this.spotPublicGetTicker24hr(e)}spotPublicGetTickerPrice(e){return this.spotPublicGetTickerPrice(e)}spotPublicGetTickerBookTicker(e){return this.spotPublicGetTickerBookTicker(e)}spotPublicGetEtfInfo(e){return this.spotPublicGetEtfInfo(e)}spotPrivateGetOrder(e){return this.spotPrivateGetOrder(e)}spotPrivateGetOpenOrders(e){return this.spotPrivateGetOpenOrders(e)}spotPrivateGetAllOrders(e){return this.spotPrivateGetAllOrders(e)}spotPrivateGetAccount(e){return this.spotPrivateGetAccount(e)}spotPrivateGetMyTrades(e){return this.spotPrivateGetMyTrades(e)}spotPrivateGetSubAccountList(e){return this.spotPrivateGetSubAccountList(e)}spotPrivateGetSubAccountApiKey(e){return this.spotPrivateGetSubAccountApiKey(e)}spotPrivateGetCapitalConfigGetall(e){return this.spotPrivateGetCapitalConfigGetall(e)}spotPrivateGetCapitalDepositHisrec(e){return this.spotPrivateGetCapitalDepositHisrec(e)}spotPrivateGetCapitalWithdrawHistory(e){return this.spotPrivateGetCapitalWithdrawHistory(e)}spotPrivateGetCapitalDepositAddress(e){return this.spotPrivateGetCapitalDepositAddress(e)}spotPrivateGetCapitalTransfer(e){return this.spotPrivateGetCapitalTransfer(e)}spotPrivateGetCapitalSubAccountUniversalTransfer(e){return this.spotPrivateGetCapitalSubAccountUniversalTransfer(e)}spotPrivateGetCapitalConvert(e){return this.spotPrivateGetCapitalConvert(e)}spotPrivateGetCapitalConvertList(e){return this.spotPrivateGetCapitalConvertList(e)}spotPrivateGetMarginLoan(e){return this.spotPrivateGetMarginLoan(e)}spotPrivateGetMarginAllOrders(e){return this.spotPrivateGetMarginAllOrders(e)}spotPrivateGetMarginMyTrades(e){return this.spotPrivateGetMarginMyTrades(e)}spotPrivateGetMarginOpenOrders(e){return this.spotPrivateGetMarginOpenOrders(e)}spotPrivateGetMarginMaxTransferable(e){return this.spotPrivateGetMarginMaxTransferable(e)}spotPrivateGetMarginPriceIndex(e){return this.spotPrivateGetMarginPriceIndex(e)}spotPrivateGetMarginOrder(e){return this.spotPrivateGetMarginOrder(e)}spotPrivateGetMarginIsolatedAccount(e){return this.spotPrivateGetMarginIsolatedAccount(e)}spotPrivateGetMarginMaxBorrowable(e){return this.spotPrivateGetMarginMaxBorrowable(e)}spotPrivateGetMarginRepay(e){return this.spotPrivateGetMarginRepay(e)}spotPrivateGetMarginIsolatedPair(e){return this.spotPrivateGetMarginIsolatedPair(e)}spotPrivateGetMarginForceLiquidationRec(e){return this.spotPrivateGetMarginForceLiquidationRec(e)}spotPrivateGetMarginIsolatedMarginData(e){return this.spotPrivateGetMarginIsolatedMarginData(e)}spotPrivateGetMarginIsolatedMarginTier(e){return this.spotPrivateGetMarginIsolatedMarginTier(e)}spotPrivateGetRebateTaxQuery(e){return this.spotPrivateGetRebateTaxQuery(e)}spotPrivateGetRebateDetail(e){return this.spotPrivateGetRebateDetail(e)}spotPrivateGetRebateDetailKickback(e){return this.spotPrivateGetRebateDetailKickback(e)}spotPrivateGetRebateReferCode(e){return this.spotPrivateGetRebateReferCode(e)}spotPrivateGetMxDeductEnable(e){return this.spotPrivateGetMxDeductEnable(e)}spotPrivatePostOrder(e){return this.spotPrivatePostOrder(e)}spotPrivatePostOrderTest(e){return this.spotPrivatePostOrderTest(e)}spotPrivatePostSubAccountVirtualSubAccount(e){return this.spotPrivatePostSubAccountVirtualSubAccount(e)}spotPrivatePostSubAccountApiKey(e){return this.spotPrivatePostSubAccountApiKey(e)}spotPrivatePostSubAccountFutures(e){return this.spotPrivatePostSubAccountFutures(e)}spotPrivatePostSubAccountMargin(e){return this.spotPrivatePostSubAccountMargin(e)}spotPrivatePostBatchOrders(e){return this.spotPrivatePostBatchOrders(e)}spotPrivatePostCapitalWithdrawApply(e){return this.spotPrivatePostCapitalWithdrawApply(e)}spotPrivatePostCapitalTransfer(e){return this.spotPrivatePostCapitalTransfer(e)}spotPrivatePostCapitalDepositAddress(e){return this.spotPrivatePostCapitalDepositAddress(e)}spotPrivatePostCapitalSubAccountUniversalTransfer(e){return this.spotPrivatePostCapitalSubAccountUniversalTransfer(e)}spotPrivatePostCapitalConvert(e){return this.spotPrivatePostCapitalConvert(e)}spotPrivatePostMarginTradeMode(e){return this.spotPrivatePostMarginTradeMode(e)}spotPrivatePostMarginOrder(e){return this.spotPrivatePostMarginOrder(e)}spotPrivatePostMarginLoan(e){return this.spotPrivatePostMarginLoan(e)}spotPrivatePostMarginRepay(e){return this.spotPrivatePostMarginRepay(e)}spotPrivatePostMxDeductEnable(e){return this.spotPrivatePostMxDeductEnable(e)}spotPrivateDeleteOrder(e){return this.spotPrivateDeleteOrder(e)}spotPrivateDeleteOpenOrders(e){return this.spotPrivateDeleteOpenOrders(e)}spotPrivateDeleteSubAccountApiKey(e){return this.spotPrivateDeleteSubAccountApiKey(e)}spotPrivateDeleteMarginOrder(e){return this.spotPrivateDeleteMarginOrder(e)}spotPrivateDeleteMarginOpenOrders(e){return this.spotPrivateDeleteMarginOpenOrders(e)}contractPublicGetPing(e){return this.contractPublicGetPing(e)}contractPublicGetDetail(e){return this.contractPublicGetDetail(e)}contractPublicGetSupportCurrencies(e){return this.contractPublicGetSupportCurrencies(e)}contractPublicGetDepthSymbol(e){return this.contractPublicGetDepthSymbol(e)}contractPublicGetDepthCommitsSymbolLimit(e){return this.contractPublicGetDepthCommitsSymbolLimit(e)}contractPublicGetIndexPriceSymbol(e){return this.contractPublicGetIndexPriceSymbol(e)}contractPublicGetFairPriceSymbol(e){return this.contractPublicGetFairPriceSymbol(e)}contractPublicGetFundingRateSymbol(e){return this.contractPublicGetFundingRateSymbol(e)}contractPublicGetKlineSymbol(e){return this.contractPublicGetKlineSymbol(e)}contractPublicGetKlineIndexPriceSymbol(e){return this.contractPublicGetKlineIndexPriceSymbol(e)}contractPublicGetKlineFairPriceSymbol(e){return this.contractPublicGetKlineFairPriceSymbol(e)}contractPublicGetDealsSymbol(e){return this.contractPublicGetDealsSymbol(e)}contractPublicGetTicker(e){return this.contractPublicGetTicker(e)}contractPublicGetRiskReverse(e){return this.contractPublicGetRiskReverse(e)}contractPublicGetRiskReverseHistory(e){return this.contractPublicGetRiskReverseHistory(e)}contractPublicGetFundingRateHistory(e){return this.contractPublicGetFundingRateHistory(e)}contractPrivateGetAccountAssets(e){return this.contractPrivateGetAccountAssets(e)}contractPrivateGetAccountAssetCurrency(e){return this.contractPrivateGetAccountAssetCurrency(e)}contractPrivateGetAccountTransferRecord(e){return this.contractPrivateGetAccountTransferRecord(e)}contractPrivateGetPositionListHistoryPositions(e){return this.contractPrivateGetPositionListHistoryPositions(e)}contractPrivateGetPositionOpenPositions(e){return this.contractPrivateGetPositionOpenPositions(e)}contractPrivateGetPositionFundingRecords(e){return this.contractPrivateGetPositionFundingRecords(e)}contractPrivateGetPositionPositionMode(e){return this.contractPrivateGetPositionPositionMode(e)}contractPrivateGetOrderListOpenOrdersSymbol(e){return this.contractPrivateGetOrderListOpenOrdersSymbol(e)}contractPrivateGetOrderListHistoryOrders(e){return this.contractPrivateGetOrderListHistoryOrders(e)}contractPrivateGetOrderExternalSymbolExternalOid(e){return this.contractPrivateGetOrderExternalSymbolExternalOid(e)}contractPrivateGetOrderGetOrderId(e){return this.contractPrivateGetOrderGetOrderId(e)}contractPrivateGetOrderBatchQuery(e){return this.contractPrivateGetOrderBatchQuery(e)}contractPrivateGetOrderDealDetailsOrderId(e){return this.contractPrivateGetOrderDealDetailsOrderId(e)}contractPrivateGetOrderListOrderDeals(e){return this.contractPrivateGetOrderListOrderDeals(e)}contractPrivateGetPlanorderListOrders(e){return this.contractPrivateGetPlanorderListOrders(e)}contractPrivateGetStoporderListOrders(e){return this.contractPrivateGetStoporderListOrders(e)}contractPrivateGetStoporderOrderDetailsStopOrderId(e){return this.contractPrivateGetStoporderOrderDetailsStopOrderId(e)}contractPrivateGetAccountRiskLimit(e){return this.contractPrivateGetAccountRiskLimit(e)}contractPrivateGetAccountTieredFeeRate(e){return this.contractPrivateGetAccountTieredFeeRate(e)}contractPrivateGetPositionLeverage(e){return this.contractPrivateGetPositionLeverage(e)}contractPrivatePostPositionChangeMargin(e){return this.contractPrivatePostPositionChangeMargin(e)}contractPrivatePostPositionChangeLeverage(e){return this.contractPrivatePostPositionChangeLeverage(e)}contractPrivatePostPositionChangePositionMode(e){return this.contractPrivatePostPositionChangePositionMode(e)}contractPrivatePostOrderSubmit(e){return this.contractPrivatePostOrderSubmit(e)}contractPrivatePostOrderSubmitBatch(e){return this.contractPrivatePostOrderSubmitBatch(e)}contractPrivatePostOrderCancel(e){return this.contractPrivatePostOrderCancel(e)}contractPrivatePostOrderCancelWithExternal(e){return this.contractPrivatePostOrderCancelWithExternal(e)}contractPrivatePostOrderCancelAll(e){return this.contractPrivatePostOrderCancelAll(e)}contractPrivatePostAccountChangeRiskLevel(e){return this.contractPrivatePostAccountChangeRiskLevel(e)}contractPrivatePostPlanorderPlace(e){return this.contractPrivatePostPlanorderPlace(e)}contractPrivatePostPlanorderCancel(e){return this.contractPrivatePostPlanorderCancel(e)}contractPrivatePostPlanorderCancelAll(e){return this.contractPrivatePostPlanorderCancelAll(e)}contractPrivatePostStoporderCancel(e){return this.contractPrivatePostStoporderCancel(e)}contractPrivatePostStoporderCancelAll(e){return this.contractPrivatePostStoporderCancelAll(e)}contractPrivatePostStoporderChangePrice(e){return this.contractPrivatePostStoporderChangePrice(e)}contractPrivatePostStoporderChangePlanPrice(e){return this.contractPrivatePostStoporderChangePlanPrice(e)}spot2PublicGetMarketSymbols(e){return this.spot2PublicGetMarketSymbols(e)}spot2PublicGetMarketCoinList(e){return this.spot2PublicGetMarketCoinList(e)}spot2PublicGetCommonTimestamp(e){return this.spot2PublicGetCommonTimestamp(e)}spot2PublicGetCommonPing(e){return this.spot2PublicGetCommonPing(e)}spot2PublicGetMarketTicker(e){return this.spot2PublicGetMarketTicker(e)}spot2PublicGetMarketDepth(e){return this.spot2PublicGetMarketDepth(e)}spot2PublicGetMarketDeals(e){return this.spot2PublicGetMarketDeals(e)}spot2PublicGetMarketKline(e){return this.spot2PublicGetMarketKline(e)}spot2PublicGetMarketApiDefaultSymbols(e){return this.spot2PublicGetMarketApiDefaultSymbols(e)}spot2PrivateGetAccountInfo(e){return this.spot2PrivateGetAccountInfo(e)}spot2PrivateGetOrderOpenOrders(e){return this.spot2PrivateGetOrderOpenOrders(e)}spot2PrivateGetOrderList(e){return this.spot2PrivateGetOrderList(e)}spot2PrivateGetOrderQuery(e){return this.spot2PrivateGetOrderQuery(e)}spot2PrivateGetOrderDeals(e){return this.spot2PrivateGetOrderDeals(e)}spot2PrivateGetOrderDealDetail(e){return this.spot2PrivateGetOrderDealDetail(e)}spot2PrivateGetAssetDepositAddressList(e){return this.spot2PrivateGetAssetDepositAddressList(e)}spot2PrivateGetAssetDepositList(e){return this.spot2PrivateGetAssetDepositList(e)}spot2PrivateGetAssetAddressList(e){return this.spot2PrivateGetAssetAddressList(e)}spot2PrivateGetAssetWithdrawList(e){return this.spot2PrivateGetAssetWithdrawList(e)}spot2PrivateGetAssetInternalTransferRecord(e){return this.spot2PrivateGetAssetInternalTransferRecord(e)}spot2PrivateGetAccountBalance(e){return this.spot2PrivateGetAccountBalance(e)}spot2PrivateGetAssetInternalTransferInfo(e){return this.spot2PrivateGetAssetInternalTransferInfo(e)}spot2PrivateGetMarketApiSymbols(e){return this.spot2PrivateGetMarketApiSymbols(e)}spot2PrivatePostOrderPlace(e){return this.spot2PrivatePostOrderPlace(e)}spot2PrivatePostOrderPlaceBatch(e){return this.spot2PrivatePostOrderPlaceBatch(e)}spot2PrivatePostOrderAdvancedPlaceBatch(e){return this.spot2PrivatePostOrderAdvancedPlaceBatch(e)}spot2PrivatePostAssetWithdraw(e){return this.spot2PrivatePostAssetWithdraw(e)}spot2PrivatePostAssetInternalTransfer(e){return this.spot2PrivatePostAssetInternalTransfer(e)}spot2PrivateDeleteOrderCancel(e){return this.spot2PrivateDeleteOrderCancel(e)}spot2PrivateDeleteOrderCancelBySymbol(e){return this.spot2PrivateDeleteOrderCancelBySymbol(e)}spot2PrivateDeleteAssetWithdraw(e){return this.spot2PrivateDeleteAssetWithdraw(e)}}},5491:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetActivate2FA(e){return this.publicGetActivate2FA(e)}publicGetAuthenticate2FA(e){return this.publicGetAuthenticate2FA(e)}publicGetAuthenticateUser(e){return this.publicGetAuthenticateUser(e)}publicGetGetL2Snapshot(e){return this.publicGetGetL2Snapshot(e)}publicGetGetLevel1(e){return this.publicGetGetLevel1(e)}publicGetGetValidate2FARequiredEndpoints(e){return this.publicGetGetValidate2FARequiredEndpoints(e)}publicGetLogOut(e){return this.publicGetLogOut(e)}publicGetGetTickerHistory(e){return this.publicGetGetTickerHistory(e)}publicGetGetProduct(e){return this.publicGetGetProduct(e)}publicGetGetProducts(e){return this.publicGetGetProducts(e)}publicGetGetInstrument(e){return this.publicGetGetInstrument(e)}publicGetGetInstruments(e){return this.publicGetGetInstruments(e)}publicGetPing(e){return this.publicGetPing(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetGetLastTrades(e){return this.publicGetGetLastTrades(e)}publicGetSubscribeLevel1(e){return this.publicGetSubscribeLevel1(e)}publicGetSubscribeLevel2(e){return this.publicGetSubscribeLevel2(e)}publicGetSubscribeTicker(e){return this.publicGetSubscribeTicker(e)}publicGetSubscribeTrades(e){return this.publicGetSubscribeTrades(e)}publicGetSubscribeBlockTrades(e){return this.publicGetSubscribeBlockTrades(e)}publicGetUnsubscribeBlockTrades(e){return this.publicGetUnsubscribeBlockTrades(e)}publicGetUnsubscribeLevel1(e){return this.publicGetUnsubscribeLevel1(e)}publicGetUnsubscribeLevel2(e){return this.publicGetUnsubscribeLevel2(e)}publicGetUnsubscribeTicker(e){return this.publicGetUnsubscribeTicker(e)}publicGetUnsubscribeTrades(e){return this.publicGetUnsubscribeTrades(e)}publicGetAuthenticate(e){return this.publicGetAuthenticate(e)}privateGetGetUserAccountInfos(e){return this.privateGetGetUserAccountInfos(e)}privateGetGetUserAccounts(e){return this.privateGetGetUserAccounts(e)}privateGetGetUserAffiliateCount(e){return this.privateGetGetUserAffiliateCount(e)}privateGetGetUserAffiliateTag(e){return this.privateGetGetUserAffiliateTag(e)}privateGetGetUserConfig(e){return this.privateGetGetUserConfig(e)}privateGetGetAllUnredactedUserConfigsForUser(e){return this.privateGetGetAllUnredactedUserConfigsForUser(e)}privateGetGetUnredactedUserConfigByKey(e){return this.privateGetGetUnredactedUserConfigByKey(e)}privateGetGetUserDevices(e){return this.privateGetGetUserDevices(e)}privateGetGetUserReportTickets(e){return this.privateGetGetUserReportTickets(e)}privateGetGetUserReportWriterResultRecords(e){return this.privateGetGetUserReportWriterResultRecords(e)}privateGetGetAccountInfo(e){return this.privateGetGetAccountInfo(e)}privateGetGetAccountPositions(e){return this.privateGetGetAccountPositions(e)}privateGetGetAllAccountConfigs(e){return this.privateGetGetAllAccountConfigs(e)}privateGetGetTreasuryProductsForAccount(e){return this.privateGetGetTreasuryProductsForAccount(e)}privateGetGetAccountTrades(e){return this.privateGetGetAccountTrades(e)}privateGetGetAccountTransactions(e){return this.privateGetGetAccountTransactions(e)}privateGetGetOpenTradeReports(e){return this.privateGetGetOpenTradeReports(e)}privateGetGetAllOpenTradeReports(e){return this.privateGetGetAllOpenTradeReports(e)}privateGetGetTradesHistory(e){return this.privateGetGetTradesHistory(e)}privateGetGetOpenOrders(e){return this.privateGetGetOpenOrders(e)}privateGetGetOpenQuotes(e){return this.privateGetGetOpenQuotes(e)}privateGetGetOrderFee(e){return this.privateGetGetOrderFee(e)}privateGetGetOrderHistory(e){return this.privateGetGetOrderHistory(e)}privateGetGetOrdersHistory(e){return this.privateGetGetOrdersHistory(e)}privateGetGetOrderStatus(e){return this.privateGetGetOrderStatus(e)}privateGetGetOmsFeeTiers(e){return this.privateGetGetOmsFeeTiers(e)}privateGetGetAccountDepositTransactions(e){return this.privateGetGetAccountDepositTransactions(e)}privateGetGetAccountWithdrawTransactions(e){return this.privateGetGetAccountWithdrawTransactions(e)}privateGetGetAllDepositRequestInfoTemplates(e){return this.privateGetGetAllDepositRequestInfoTemplates(e)}privateGetGetDepositInfo(e){return this.privateGetGetDepositInfo(e)}privateGetGetDepositRequestInfoTemplate(e){return this.privateGetGetDepositRequestInfoTemplate(e)}privateGetGetDeposits(e){return this.privateGetGetDeposits(e)}privateGetGetDepositTicket(e){return this.privateGetGetDepositTicket(e)}privateGetGetDepositTickets(e){return this.privateGetGetDepositTickets(e)}privateGetGetOMSWithdrawFees(e){return this.privateGetGetOMSWithdrawFees(e)}privateGetGetWithdrawFee(e){return this.privateGetGetWithdrawFee(e)}privateGetGetWithdraws(e){return this.privateGetGetWithdraws(e)}privateGetGetWithdrawTemplate(e){return this.privateGetGetWithdrawTemplate(e)}privateGetGetWithdrawTemplateTypes(e){return this.privateGetGetWithdrawTemplateTypes(e)}privateGetGetWithdrawTicket(e){return this.privateGetGetWithdrawTicket(e)}privateGetGetWithdrawTickets(e){return this.privateGetGetWithdrawTickets(e)}privatePostAddUserAffiliateTag(e){return this.privatePostAddUserAffiliateTag(e)}privatePostCancelUserReport(e){return this.privatePostCancelUserReport(e)}privatePostRegisterNewDevice(e){return this.privatePostRegisterNewDevice(e)}privatePostSubscribeAccountEvents(e){return this.privatePostSubscribeAccountEvents(e)}privatePostUpdateUserAffiliateTag(e){return this.privatePostUpdateUserAffiliateTag(e)}privatePostGenerateTradeActivityReport(e){return this.privatePostGenerateTradeActivityReport(e)}privatePostGenerateTransactionActivityReport(e){return this.privatePostGenerateTransactionActivityReport(e)}privatePostGenerateTreasuryActivityReport(e){return this.privatePostGenerateTreasuryActivityReport(e)}privatePostScheduleTradeActivityReport(e){return this.privatePostScheduleTradeActivityReport(e)}privatePostScheduleTransactionActivityReport(e){return this.privatePostScheduleTransactionActivityReport(e)}privatePostScheduleTreasuryActivityReport(e){return this.privatePostScheduleTreasuryActivityReport(e)}privatePostCancelAllOrders(e){return this.privatePostCancelAllOrders(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostCancelQuote(e){return this.privatePostCancelQuote(e)}privatePostCancelReplaceOrder(e){return this.privatePostCancelReplaceOrder(e)}privatePostCreateQuote(e){return this.privatePostCreateQuote(e)}privatePostModifyOrder(e){return this.privatePostModifyOrder(e)}privatePostSendOrder(e){return this.privatePostSendOrder(e)}privatePostSubmitBlockTrade(e){return this.privatePostSubmitBlockTrade(e)}privatePostUpdateQuote(e){return this.privatePostUpdateQuote(e)}privatePostCancelWithdraw(e){return this.privatePostCancelWithdraw(e)}privatePostCreateDepositTicket(e){return this.privatePostCreateDepositTicket(e)}privatePostCreateWithdrawTicket(e){return this.privatePostCreateWithdrawTicket(e)}privatePostSubmitDepositTicketComment(e){return this.privatePostSubmitDepositTicketComment(e)}privatePostSubmitWithdrawTicketComment(e){return this.privatePostSubmitWithdrawTicketComment(e)}privatePostGetOrderHistoryByOrderId(e){return this.privatePostGetOrderHistoryByOrderId(e)}}},6513:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCommonSymbol(e){return this.publicGetCommonSymbol(e)}publicGetCommonSymbols(e){return this.publicGetCommonSymbols(e)}publicGetCommonTimestamp(e){return this.publicGetCommonTimestamp(e)}publicGetMarketTickers(e){return this.publicGetMarketTickers(e)}publicGetMarketTicker(e){return this.publicGetMarketTicker(e)}publicGetMarketDepth(e){return this.publicGetMarketDepth(e)}publicGetMarketTrades(e){return this.publicGetMarketTrades(e)}publicGetMarketKlineHistory(e){return this.publicGetMarketKlineHistory(e)}privateGetOrdersGet(e){return this.privateGetOrdersGet(e)}privateGetOrdersList(e){return this.privateGetOrdersList(e)}privateGetOrdersFill(e){return this.privateGetOrdersFill(e)}privateGetOrdersFills(e){return this.privateGetOrdersFills(e)}privateGetAccountGetBalance(e){return this.privateGetAccountGetBalance(e)}privateGetAccountSubs(e){return this.privateGetAccountSubs(e)}privateGetAccountSubsBalance(e){return this.privateGetAccountSubsBalance(e)}privateGetAccountSubsTransferRecord(e){return this.privateGetAccountSubsTransferRecord(e)}privateGetWalletQueryDepositWithdraw(e){return this.privateGetWalletQueryDepositWithdraw(e)}privatePostOrdersCreate(e){return this.privatePostOrdersCreate(e)}privatePostOrdersCancel(e){return this.privatePostOrdersCancel(e)}privatePostAccountWithdrawCoin(e){return this.privatePostAccountWithdrawCoin(e)}privatePostAccountSubsTransfer(e){return this.privatePostAccountSubsTransfer(e)}}},3229:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetTickersPair(e){return this.publicGetTickersPair(e)}publicGetTickersMulti(e){return this.publicGetTickersMulti(e)}publicGetOrderBook(e){return this.publicGetOrderBook(e)}publicGetOrderBookMulti(e){return this.publicGetOrderBookMulti(e)}publicGetFeesTrading(e){return this.publicGetFeesTrading(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetTimestamp(e){return this.publicGetTimestamp(e)}publicPostK(e){return this.publicPostK(e)}privateGetKey(e){return this.privateGetKey(e)}privateGetMembersMe(e){return this.privateGetMembersMe(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersFilter(e){return this.privateGetOrdersFilter(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersMulti(e){return this.privatePostOrdersMulti(e)}privatePostOrderDelete(e){return this.privatePostOrderDelete(e)}privatePostOrderDeleteMulti(e){return this.privatePostOrderDeleteMulti(e)}privatePostOrdersClear(e){return this.privatePostOrdersClear(e)}}},5848:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{generalGetTime(e){return this.generalGetTime(e)}accountGetWallet(e){return this.accountGetWallet(e)}accountGetSubAccount(e){return this.accountGetSubAccount(e)}accountGetAssetValuation(e){return this.accountGetAssetValuation(e)}accountGetWalletCurrency(e){return this.accountGetWalletCurrency(e)}accountGetWithdrawalHistory(e){return this.accountGetWithdrawalHistory(e)}accountGetWithdrawalHistoryCurrency(e){return this.accountGetWithdrawalHistoryCurrency(e)}accountGetLedger(e){return this.accountGetLedger(e)}accountGetDepositAddress(e){return this.accountGetDepositAddress(e)}accountGetDepositHistory(e){return this.accountGetDepositHistory(e)}accountGetDepositHistoryCurrency(e){return this.accountGetDepositHistoryCurrency(e)}accountGetCurrencies(e){return this.accountGetCurrencies(e)}accountGetWithdrawalFee(e){return this.accountGetWithdrawalFee(e)}accountGetDepositLightning(e){return this.accountGetDepositLightning(e)}accountGetWithdrawalLightning(e){return this.accountGetWithdrawalLightning(e)}accountGetFiatDepositDetail(e){return this.accountGetFiatDepositDetail(e)}accountGetFiatDepositDetails(e){return this.accountGetFiatDepositDetails(e)}accountGetFiatWithdrawDetail(e){return this.accountGetFiatWithdrawDetail(e)}accountGetFiatWithdrawDetails(e){return this.accountGetFiatWithdrawDetails(e)}accountGetFiatChannel(e){return this.accountGetFiatChannel(e)}accountPostTransfer(e){return this.accountPostTransfer(e)}accountPostWithdrawal(e){return this.accountPostWithdrawal(e)}accountPostFiatCancelDeposit(e){return this.accountPostFiatCancelDeposit(e)}accountPostFiatDeposit(e){return this.accountPostFiatDeposit(e)}accountPostFiatWithdraw(e){return this.accountPostFiatWithdraw(e)}accountPostFiatCancelWithdrawal(e){return this.accountPostFiatCancelWithdrawal(e)}otcGetRfqInstruments(e){return this.otcGetRfqInstruments(e)}otcGetRfqTrade(e){return this.otcGetRfqTrade(e)}otcGetRfqHistory(e){return this.otcGetRfqHistory(e)}otcPostRfqQuote(e){return this.otcPostRfqQuote(e)}otcPostRfqTrade(e){return this.otcPostRfqTrade(e)}usersGetSubaccountInfo(e){return this.usersGetSubaccountInfo(e)}usersGetAccountInfo(e){return this.usersGetAccountInfo(e)}usersGetSubaccountApikey(e){return this.usersGetSubaccountApikey(e)}usersPostCreateSubaccount(e){return this.usersPostCreateSubaccount(e)}usersPostDeleteSubaccount(e){return this.usersPostDeleteSubaccount(e)}usersPostSubaccountApikey(e){return this.usersPostSubaccountApikey(e)}usersPostSubacountDeleteApikey(e){return this.usersPostSubacountDeleteApikey(e)}usersPostSubacountModifyApikey(e){return this.usersPostSubacountModifyApikey(e)}earningGetOffers(e){return this.earningGetOffers(e)}earningGetOrders(e){return this.earningGetOrders(e)}earningGetPositions(e){return this.earningGetPositions(e)}earningPostPurchase(e){return this.earningPostPurchase(e)}earningPostRedeem(e){return this.earningPostRedeem(e)}earningPostCancel(e){return this.earningPostCancel(e)}spotGetAccounts(e){return this.spotGetAccounts(e)}spotGetAccountsCurrency(e){return this.spotGetAccountsCurrency(e)}spotGetAccountsCurrencyLedger(e){return this.spotGetAccountsCurrencyLedger(e)}spotGetOrders(e){return this.spotGetOrders(e)}spotGetOrdersPending(e){return this.spotGetOrdersPending(e)}spotGetOrdersOrderId(e){return this.spotGetOrdersOrderId(e)}spotGetOrdersClientOid(e){return this.spotGetOrdersClientOid(e)}spotGetTradeFee(e){return this.spotGetTradeFee(e)}spotGetFills(e){return this.spotGetFills(e)}spotGetAlgo(e){return this.spotGetAlgo(e)}spotGetInstruments(e){return this.spotGetInstruments(e)}spotGetInstrumentsInstrumentIdBook(e){return this.spotGetInstrumentsInstrumentIdBook(e)}spotGetInstrumentsTicker(e){return this.spotGetInstrumentsTicker(e)}spotGetInstrumentsInstrumentIdTicker(e){return this.spotGetInstrumentsInstrumentIdTicker(e)}spotGetInstrumentsInstrumentIdTrades(e){return this.spotGetInstrumentsInstrumentIdTrades(e)}spotGetInstrumentsInstrumentIdCandles(e){return this.spotGetInstrumentsInstrumentIdCandles(e)}spotPostOrderAlgo(e){return this.spotPostOrderAlgo(e)}spotPostOrders(e){return this.spotPostOrders(e)}spotPostBatchOrders(e){return this.spotPostBatchOrders(e)}spotPostCancelOrdersOrderId(e){return this.spotPostCancelOrdersOrderId(e)}spotPostCancelOrdersClientOid(e){return this.spotPostCancelOrdersClientOid(e)}spotPostCancelBatchAlgos(e){return this.spotPostCancelBatchAlgos(e)}spotPostCancelBatchOrders(e){return this.spotPostCancelBatchOrders(e)}spotPostAmendOrderInstrumentId(e){return this.spotPostAmendOrderInstrumentId(e)}spotPostAmendBatchOrders(e){return this.spotPostAmendBatchOrders(e)}marginGetAccounts(e){return this.marginGetAccounts(e)}marginGetAccountsInstrumentId(e){return this.marginGetAccountsInstrumentId(e)}marginGetAccountsInstrumentIdLedger(e){return this.marginGetAccountsInstrumentIdLedger(e)}marginGetAccountsAvailability(e){return this.marginGetAccountsAvailability(e)}marginGetAccountsInstrumentIdAvailability(e){return this.marginGetAccountsInstrumentIdAvailability(e)}marginGetAccountsBorrowed(e){return this.marginGetAccountsBorrowed(e)}marginGetAccountsInstrumentIdBorrowed(e){return this.marginGetAccountsInstrumentIdBorrowed(e)}marginGetOrders(e){return this.marginGetOrders(e)}marginGetAccountsInstrumentIdLeverage(e){return this.marginGetAccountsInstrumentIdLeverage(e)}marginGetOrdersOrderId(e){return this.marginGetOrdersOrderId(e)}marginGetOrdersClientOid(e){return this.marginGetOrdersClientOid(e)}marginGetOrdersPending(e){return this.marginGetOrdersPending(e)}marginGetFills(e){return this.marginGetFills(e)}marginGetInstrumentsInstrumentIdMarkPrice(e){return this.marginGetInstrumentsInstrumentIdMarkPrice(e)}marginPostAccountsBorrow(e){return this.marginPostAccountsBorrow(e)}marginPostAccountsRepayment(e){return this.marginPostAccountsRepayment(e)}marginPostOrders(e){return this.marginPostOrders(e)}marginPostBatchOrders(e){return this.marginPostBatchOrders(e)}marginPostCancelOrders(e){return this.marginPostCancelOrders(e)}marginPostCancelOrdersOrderId(e){return this.marginPostCancelOrdersOrderId(e)}marginPostCancelOrdersClientOid(e){return this.marginPostCancelOrdersClientOid(e)}marginPostCancelBatchOrders(e){return this.marginPostCancelBatchOrders(e)}marginPostAmendOrderInstrumentId(e){return this.marginPostAmendOrderInstrumentId(e)}marginPostAmendBatchOrders(e){return this.marginPostAmendBatchOrders(e)}marginPostAccountsInstrumentIdLeverage(e){return this.marginPostAccountsInstrumentIdLeverage(e)}systemGetStatus(e){return this.systemGetStatus(e)}marketGetOracle(e){return this.marketGetOracle(e)}futuresGetPosition(e){return this.futuresGetPosition(e)}futuresGetInstrumentIdPosition(e){return this.futuresGetInstrumentIdPosition(e)}futuresGetAccounts(e){return this.futuresGetAccounts(e)}futuresGetAccountsUnderlying(e){return this.futuresGetAccountsUnderlying(e)}futuresGetAccountsUnderlyingLeverage(e){return this.futuresGetAccountsUnderlyingLeverage(e)}futuresGetAccountsUnderlyingLedger(e){return this.futuresGetAccountsUnderlyingLedger(e)}futuresGetOrderAlgoInstrumentId(e){return this.futuresGetOrderAlgoInstrumentId(e)}futuresGetOrdersInstrumentId(e){return this.futuresGetOrdersInstrumentId(e)}futuresGetOrdersInstrumentIdOrderId(e){return this.futuresGetOrdersInstrumentIdOrderId(e)}futuresGetOrdersInstrumentIdClientOid(e){return this.futuresGetOrdersInstrumentIdClientOid(e)}futuresGetFills(e){return this.futuresGetFills(e)}futuresGetTradeFee(e){return this.futuresGetTradeFee(e)}futuresGetAccountsInstrumentIdHolds(e){return this.futuresGetAccountsInstrumentIdHolds(e)}futuresGetInstruments(e){return this.futuresGetInstruments(e)}futuresGetInstrumentsInstrumentIdBook(e){return this.futuresGetInstrumentsInstrumentIdBook(e)}futuresGetInstrumentsTicker(e){return this.futuresGetInstrumentsTicker(e)}futuresGetInstrumentsInstrumentIdTicker(e){return this.futuresGetInstrumentsInstrumentIdTicker(e)}futuresGetInstrumentsInstrumentIdTrades(e){return this.futuresGetInstrumentsInstrumentIdTrades(e)}futuresGetInstrumentsInstrumentIdCandles(e){return this.futuresGetInstrumentsInstrumentIdCandles(e)}futuresGetInstrumentsInstrumentIdHistoryCandles(e){return this.futuresGetInstrumentsInstrumentIdHistoryCandles(e)}futuresGetInstrumentsInstrumentIdIndex(e){return this.futuresGetInstrumentsInstrumentIdIndex(e)}futuresGetRate(e){return this.futuresGetRate(e)}futuresGetInstrumentsInstrumentIdEstimatedPrice(e){return this.futuresGetInstrumentsInstrumentIdEstimatedPrice(e)}futuresGetInstrumentsInstrumentIdOpenInterest(e){return this.futuresGetInstrumentsInstrumentIdOpenInterest(e)}futuresGetInstrumentsInstrumentIdPriceLimit(e){return this.futuresGetInstrumentsInstrumentIdPriceLimit(e)}futuresGetInstrumentsInstrumentIdMarkPrice(e){return this.futuresGetInstrumentsInstrumentIdMarkPrice(e)}futuresGetInstrumentsInstrumentIdLiquidation(e){return this.futuresGetInstrumentsInstrumentIdLiquidation(e)}futuresPostAccountsUnderlyingLeverage(e){return this.futuresPostAccountsUnderlyingLeverage(e)}futuresPostOrder(e){return this.futuresPostOrder(e)}futuresPostAmendOrderInstrumentId(e){return this.futuresPostAmendOrderInstrumentId(e)}futuresPostOrders(e){return this.futuresPostOrders(e)}futuresPostCancelOrderInstrumentIdOrderId(e){return this.futuresPostCancelOrderInstrumentIdOrderId(e)}futuresPostCancelOrderInstrumentIdClientOid(e){return this.futuresPostCancelOrderInstrumentIdClientOid(e)}futuresPostCancelBatchOrdersInstrumentId(e){return this.futuresPostCancelBatchOrdersInstrumentId(e)}futuresPostAccountsMarginMode(e){return this.futuresPostAccountsMarginMode(e)}futuresPostClosePosition(e){return this.futuresPostClosePosition(e)}futuresPostCancelAll(e){return this.futuresPostCancelAll(e)}futuresPostOrderAlgo(e){return this.futuresPostOrderAlgo(e)}futuresPostCancelAlgos(e){return this.futuresPostCancelAlgos(e)}swapGetPosition(e){return this.swapGetPosition(e)}swapGetInstrumentIdPosition(e){return this.swapGetInstrumentIdPosition(e)}swapGetAccounts(e){return this.swapGetAccounts(e)}swapGetInstrumentIdAccounts(e){return this.swapGetInstrumentIdAccounts(e)}swapGetAccountsInstrumentIdSettings(e){return this.swapGetAccountsInstrumentIdSettings(e)}swapGetAccountsInstrumentIdLedger(e){return this.swapGetAccountsInstrumentIdLedger(e)}swapGetOrdersInstrumentId(e){return this.swapGetOrdersInstrumentId(e)}swapGetOrdersInstrumentIdOrderId(e){return this.swapGetOrdersInstrumentIdOrderId(e)}swapGetOrdersInstrumentIdClientOid(e){return this.swapGetOrdersInstrumentIdClientOid(e)}swapGetFills(e){return this.swapGetFills(e)}swapGetAccountsInstrumentIdHolds(e){return this.swapGetAccountsInstrumentIdHolds(e)}swapGetTradeFee(e){return this.swapGetTradeFee(e)}swapGetOrderAlgoInstrumentId(e){return this.swapGetOrderAlgoInstrumentId(e)}swapGetInstruments(e){return this.swapGetInstruments(e)}swapGetInstrumentsInstrumentIdDepth(e){return this.swapGetInstrumentsInstrumentIdDepth(e)}swapGetInstrumentsTicker(e){return this.swapGetInstrumentsTicker(e)}swapGetInstrumentsInstrumentIdTicker(e){return this.swapGetInstrumentsInstrumentIdTicker(e)}swapGetInstrumentsInstrumentIdTrades(e){return this.swapGetInstrumentsInstrumentIdTrades(e)}swapGetInstrumentsInstrumentIdCandles(e){return this.swapGetInstrumentsInstrumentIdCandles(e)}swapGetInstrumentsInstrumentIdHistoryCandles(e){return this.swapGetInstrumentsInstrumentIdHistoryCandles(e)}swapGetInstrumentsInstrumentIdIndex(e){return this.swapGetInstrumentsInstrumentIdIndex(e)}swapGetRate(e){return this.swapGetRate(e)}swapGetInstrumentsInstrumentIdOpenInterest(e){return this.swapGetInstrumentsInstrumentIdOpenInterest(e)}swapGetInstrumentsInstrumentIdPriceLimit(e){return this.swapGetInstrumentsInstrumentIdPriceLimit(e)}swapGetInstrumentsInstrumentIdLiquidation(e){return this.swapGetInstrumentsInstrumentIdLiquidation(e)}swapGetInstrumentsInstrumentIdFundingTime(e){return this.swapGetInstrumentsInstrumentIdFundingTime(e)}swapGetInstrumentsInstrumentIdMarkPrice(e){return this.swapGetInstrumentsInstrumentIdMarkPrice(e)}swapGetInstrumentsInstrumentIdHistoricalFundingRate(e){return this.swapGetInstrumentsInstrumentIdHistoricalFundingRate(e)}swapPostAccountsInstrumentIdLeverage(e){return this.swapPostAccountsInstrumentIdLeverage(e)}swapPostOrder(e){return this.swapPostOrder(e)}swapPostAmendOrderInstrumentId(e){return this.swapPostAmendOrderInstrumentId(e)}swapPostOrders(e){return this.swapPostOrders(e)}swapPostCancelOrderInstrumentIdOrderId(e){return this.swapPostCancelOrderInstrumentIdOrderId(e)}swapPostCancelOrderInstrumentIdClientOid(e){return this.swapPostCancelOrderInstrumentIdClientOid(e)}swapPostCancelBatchOrdersInstrumentId(e){return this.swapPostCancelBatchOrdersInstrumentId(e)}swapPostOrderAlgo(e){return this.swapPostOrderAlgo(e)}swapPostCancelAlgos(e){return this.swapPostCancelAlgos(e)}swapPostClosePosition(e){return this.swapPostClosePosition(e)}swapPostCancelAll(e){return this.swapPostCancelAll(e)}optionGetAccounts(e){return this.optionGetAccounts(e)}optionGetPosition(e){return this.optionGetPosition(e)}optionGetUnderlyingPosition(e){return this.optionGetUnderlyingPosition(e)}optionGetAccountsUnderlying(e){return this.optionGetAccountsUnderlying(e)}optionGetOrdersUnderlying(e){return this.optionGetOrdersUnderlying(e)}optionGetFillsUnderlying(e){return this.optionGetFillsUnderlying(e)}optionGetAccountsUnderlyingLedger(e){return this.optionGetAccountsUnderlyingLedger(e)}optionGetTradeFee(e){return this.optionGetTradeFee(e)}optionGetOrdersUnderlyingOrderId(e){return this.optionGetOrdersUnderlyingOrderId(e)}optionGetOrdersUnderlyingClientOid(e){return this.optionGetOrdersUnderlyingClientOid(e)}optionGetUnderlying(e){return this.optionGetUnderlying(e)}optionGetInstrumentsUnderlying(e){return this.optionGetInstrumentsUnderlying(e)}optionGetInstrumentsUnderlyingSummary(e){return this.optionGetInstrumentsUnderlyingSummary(e)}optionGetInstrumentsUnderlyingSummaryInstrumentId(e){return this.optionGetInstrumentsUnderlyingSummaryInstrumentId(e)}optionGetInstrumentsInstrumentIdBook(e){return this.optionGetInstrumentsInstrumentIdBook(e)}optionGetInstrumentsInstrumentIdTrades(e){return this.optionGetInstrumentsInstrumentIdTrades(e)}optionGetInstrumentsInstrumentIdTicker(e){return this.optionGetInstrumentsInstrumentIdTicker(e)}optionGetInstrumentsInstrumentIdCandles(e){return this.optionGetInstrumentsInstrumentIdCandles(e)}optionPostOrder(e){return this.optionPostOrder(e)}optionPostOrders(e){return this.optionPostOrders(e)}optionPostCancelOrderUnderlyingOrderId(e){return this.optionPostCancelOrderUnderlyingOrderId(e)}optionPostCancelOrderUnderlyingClientOid(e){return this.optionPostCancelOrderUnderlyingClientOid(e)}optionPostCancelBatchOrdersUnderlying(e){return this.optionPostCancelBatchOrdersUnderlying(e)}optionPostAmendOrderUnderlying(e){return this.optionPostAmendOrderUnderlying(e)}optionPostAmendBatchOrdersUnderlying(e){return this.optionPostAmendBatchOrdersUnderlying(e)}informationGetCurrencyLongShortRatio(e){return this.informationGetCurrencyLongShortRatio(e)}informationGetCurrencyVolume(e){return this.informationGetCurrencyVolume(e)}informationGetCurrencyTaker(e){return this.informationGetCurrencyTaker(e)}informationGetCurrencySentiment(e){return this.informationGetCurrencySentiment(e)}informationGetCurrencyMargin(e){return this.informationGetCurrencyMargin(e)}indexGetInstrumentIdConstituents(e){return this.indexGetInstrumentIdConstituents(e)}}},5190:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarketTickers(e){return this.publicGetMarketTickers(e)}publicGetMarketTicker(e){return this.publicGetMarketTicker(e)}publicGetMarketIndexTickers(e){return this.publicGetMarketIndexTickers(e)}publicGetMarketBooks(e){return this.publicGetMarketBooks(e)}publicGetMarketBooksLite(e){return this.publicGetMarketBooksLite(e)}publicGetMarketCandles(e){return this.publicGetMarketCandles(e)}publicGetMarketHistoryCandles(e){return this.publicGetMarketHistoryCandles(e)}publicGetMarketHistoryMarkPriceCandles(e){return this.publicGetMarketHistoryMarkPriceCandles(e)}publicGetMarketHistoryIndexCandles(e){return this.publicGetMarketHistoryIndexCandles(e)}publicGetMarketIndexCandles(e){return this.publicGetMarketIndexCandles(e)}publicGetMarketMarkPriceCandles(e){return this.publicGetMarketMarkPriceCandles(e)}publicGetMarketTrades(e){return this.publicGetMarketTrades(e)}publicGetMarketPlatform24Volume(e){return this.publicGetMarketPlatform24Volume(e)}publicGetMarketOpenOracle(e){return this.publicGetMarketOpenOracle(e)}publicGetMarketIndexComponents(e){return this.publicGetMarketIndexComponents(e)}publicGetMarketOptionInstrumentFamilyTrades(e){return this.publicGetMarketOptionInstrumentFamilyTrades(e)}publicGetPublicInstruments(e){return this.publicGetPublicInstruments(e)}publicGetPublicInstrumentTickBands(e){return this.publicGetPublicInstrumentTickBands(e)}publicGetPublicDeliveryExerciseHistory(e){return this.publicGetPublicDeliveryExerciseHistory(e)}publicGetPublicOpenInterest(e){return this.publicGetPublicOpenInterest(e)}publicGetPublicFundingRate(e){return this.publicGetPublicFundingRate(e)}publicGetPublicFundingRateHistory(e){return this.publicGetPublicFundingRateHistory(e)}publicGetPublicPriceLimit(e){return this.publicGetPublicPriceLimit(e)}publicGetPublicOptSummary(e){return this.publicGetPublicOptSummary(e)}publicGetPublicEstimatedPrice(e){return this.publicGetPublicEstimatedPrice(e)}publicGetPublicDiscountRateInterestFreeQuota(e){return this.publicGetPublicDiscountRateInterestFreeQuota(e)}publicGetPublicTime(e){return this.publicGetPublicTime(e)}publicGetPublicLiquidationOrders(e){return this.publicGetPublicLiquidationOrders(e)}publicGetPublicMarkPrice(e){return this.publicGetPublicMarkPrice(e)}publicGetPublicOptionTrades(e){return this.publicGetPublicOptionTrades(e)}publicGetPublicPositionTiers(e){return this.publicGetPublicPositionTiers(e)}publicGetPublicUnderlying(e){return this.publicGetPublicUnderlying(e)}publicGetPublicInterestRateLoanQuota(e){return this.publicGetPublicInterestRateLoanQuota(e)}publicGetPublicVipInterestRateLoanQuota(e){return this.publicGetPublicVipInterestRateLoanQuota(e)}publicGetRubikStatTradingDataSupportCoin(e){return this.publicGetRubikStatTradingDataSupportCoin(e)}publicGetRubikStatTakerVolume(e){return this.publicGetRubikStatTakerVolume(e)}publicGetRubikStatMarginLoanRatio(e){return this.publicGetRubikStatMarginLoanRatio(e)}publicGetRubikStatContractsLongShortAccountRatio(e){return this.publicGetRubikStatContractsLongShortAccountRatio(e)}publicGetRubikStatContractsOpenInterestVolume(e){return this.publicGetRubikStatContractsOpenInterestVolume(e)}publicGetRubikStatOptionOpenInterestVolume(e){return this.publicGetRubikStatOptionOpenInterestVolume(e)}publicGetRubikStatOptionOpenInterestVolumeRatio(e){return this.publicGetRubikStatOptionOpenInterestVolumeRatio(e)}publicGetRubikStatOptionOpenInterestVolumeExpiry(e){return this.publicGetRubikStatOptionOpenInterestVolumeExpiry(e)}publicGetRubikStatOptionOpenInterestVolumeStrike(e){return this.publicGetRubikStatOptionOpenInterestVolumeStrike(e)}publicGetRubikStatOptionTakerBlockVolume(e){return this.publicGetRubikStatOptionTakerBlockVolume(e)}publicGetSystemStatus(e){return this.publicGetSystemStatus(e)}publicGetFinanceSavingsLendingRateSummary(e){return this.publicGetFinanceSavingsLendingRateSummary(e)}publicGetFinanceSavingsLendingRateHistory(e){return this.publicGetFinanceSavingsLendingRateHistory(e)}publicGetMarketExchangeRate(e){return this.publicGetMarketExchangeRate(e)}privateGetAccountAccountPositionRisk(e){return this.privateGetAccountAccountPositionRisk(e)}privateGetAccountBalance(e){return this.privateGetAccountBalance(e)}privateGetAccountPositions(e){return this.privateGetAccountPositions(e)}privateGetAccountPositionsHistory(e){return this.privateGetAccountPositionsHistory(e)}privateGetAccountBills(e){return this.privateGetAccountBills(e)}privateGetAccountBillsArchive(e){return this.privateGetAccountBillsArchive(e)}privateGetAccountConfig(e){return this.privateGetAccountConfig(e)}privateGetAccountMaxSize(e){return this.privateGetAccountMaxSize(e)}privateGetAccountMaxAvailSize(e){return this.privateGetAccountMaxAvailSize(e)}privateGetAccountLeverageInfo(e){return this.privateGetAccountLeverageInfo(e)}privateGetAccountMaxLoan(e){return this.privateGetAccountMaxLoan(e)}privateGetAccountTradeFee(e){return this.privateGetAccountTradeFee(e)}privateGetAccountInterestAccrued(e){return this.privateGetAccountInterestAccrued(e)}privateGetAccountInterestRate(e){return this.privateGetAccountInterestRate(e)}privateGetAccountMaxWithdrawal(e){return this.privateGetAccountMaxWithdrawal(e)}privateGetAccountRiskState(e){return this.privateGetAccountRiskState(e)}privateGetAccountBorrowRepayHistory(e){return this.privateGetAccountBorrowRepayHistory(e)}privateGetAccountQuickMarginBorrowRepayHistory(e){return this.privateGetAccountQuickMarginBorrowRepayHistory(e)}privateGetAccountInterestLimits(e){return this.privateGetAccountInterestLimits(e)}privateGetAccountVipInterestAccrued(e){return this.privateGetAccountVipInterestAccrued(e)}privateGetAccountVipLoanOrderList(e){return this.privateGetAccountVipLoanOrderList(e)}privateGetAccountVipLoanOrderDetail(e){return this.privateGetAccountVipLoanOrderDetail(e)}privateGetAssetAssetValuation(e){return this.privateGetAssetAssetValuation(e)}privateGetAssetDepositAddress(e){return this.privateGetAssetDepositAddress(e)}privateGetAssetBalances(e){return this.privateGetAssetBalances(e)}privateGetAssetTransferState(e){return this.privateGetAssetTransferState(e)}privateGetAssetDepositHistory(e){return this.privateGetAssetDepositHistory(e)}privateGetAssetWithdrawalHistory(e){return this.privateGetAssetWithdrawalHistory(e)}privateGetAssetDepositWithdrawStatus(e){return this.privateGetAssetDepositWithdrawStatus(e)}privateGetAssetCurrencies(e){return this.privateGetAssetCurrencies(e)}privateGetAssetBills(e){return this.privateGetAssetBills(e)}privateGetAssetPiggyBalance(e){return this.privateGetAssetPiggyBalance(e)}privateGetAssetDepositLightning(e){return this.privateGetAssetDepositLightning(e)}privateGetAssetNonTradableAssets(e){return this.privateGetAssetNonTradableAssets(e)}privateGetTradeOrder(e){return this.privateGetTradeOrder(e)}privateGetTradeOrdersPending(e){return this.privateGetTradeOrdersPending(e)}privateGetTradeOrdersHistory(e){return this.privateGetTradeOrdersHistory(e)}privateGetTradeOrdersHistoryArchive(e){return this.privateGetTradeOrdersHistoryArchive(e)}privateGetTradeFills(e){return this.privateGetTradeFills(e)}privateGetTradeFillsHistory(e){return this.privateGetTradeFillsHistory(e)}privateGetTradeOrdersAlgoPending(e){return this.privateGetTradeOrdersAlgoPending(e)}privateGetTradeOrdersAlgoHistory(e){return this.privateGetTradeOrdersAlgoHistory(e)}privateGetTradeOrderAlgo(e){return this.privateGetTradeOrderAlgo(e)}privateGetAccountSubaccountBalances(e){return this.privateGetAccountSubaccountBalances(e)}privateGetAssetSubaccountBills(e){return this.privateGetAssetSubaccountBills(e)}privateGetUsersSubaccountList(e){return this.privateGetUsersSubaccountList(e)}privateGetUsersSubaccountApikey(e){return this.privateGetUsersSubaccountApikey(e)}privateGetUsersEntrustSubaccountList(e){return this.privateGetUsersEntrustSubaccountList(e)}privateGetBrokerNdInfo(e){return this.privateGetBrokerNdInfo(e)}privateGetBrokerNdSubaccountInfo(e){return this.privateGetBrokerNdSubaccountInfo(e)}privateGetAssetBrokerNdSubaccountDepositAddress(e){return this.privateGetAssetBrokerNdSubaccountDepositAddress(e)}privateGetAssetBrokerNdSubaccountDepositHistory(e){return this.privateGetAssetBrokerNdSubaccountDepositHistory(e)}privateGetBrokerNdRebateDaily(e){return this.privateGetBrokerNdRebateDaily(e)}privateGetBrokerNdSubaccountApikey(e){return this.privateGetBrokerNdSubaccountApikey(e)}privateGetBrokerNdRebatePerOrders(e){return this.privateGetBrokerNdRebatePerOrders(e)}privateGetAssetBrokerNdSubaccountWithdrawalHistory(e){return this.privateGetAssetBrokerNdSubaccountWithdrawalHistory(e)}privateGetAssetConvertCurrencies(e){return this.privateGetAssetConvertCurrencies(e)}privateGetAssetConvertCurrencyPair(e){return this.privateGetAssetConvertCurrencyPair(e)}privateGetAssetConvertEstimateQuote(e){return this.privateGetAssetConvertEstimateQuote(e)}privateGetAssetConvertTrade(e){return this.privateGetAssetConvertTrade(e)}privateGetAssetConvertHistory(e){return this.privateGetAssetConvertHistory(e)}privateGetAccountGreeks(e){return this.privateGetAccountGreeks(e)}privateGetFinanceStakingDefiOffers(e){return this.privateGetFinanceStakingDefiOffers(e)}privateGetFinanceStakingDefiOrdersActive(e){return this.privateGetFinanceStakingDefiOrdersActive(e)}privateGetFinanceStakingDefiOrdersHistory(e){return this.privateGetFinanceStakingDefiOrdersHistory(e)}privateGetFinanceSavingsBalance(e){return this.privateGetFinanceSavingsBalance(e)}privateGetFinanceSavingsLendingHistory(e){return this.privateGetFinanceSavingsLendingHistory(e)}privateGetRfqCounterparties(e){return this.privateGetRfqCounterparties(e)}privateGetRfqMakerInstrumentSettings(e){return this.privateGetRfqMakerInstrumentSettings(e)}privateGetRfqRfqs(e){return this.privateGetRfqRfqs(e)}privateGetRfqQuotes(e){return this.privateGetRfqQuotes(e)}privateGetRfqTrades(e){return this.privateGetRfqTrades(e)}privateGetRfqPublicTrades(e){return this.privateGetRfqPublicTrades(e)}privateGetCopytradingCurrentSubpositions(e){return this.privateGetCopytradingCurrentSubpositions(e)}privateGetCopytradingSubpositionsHistory(e){return this.privateGetCopytradingSubpositionsHistory(e)}privateGetCopytradingInstruments(e){return this.privateGetCopytradingInstruments(e)}privateGetCopytradingProfitSharingDetails(e){return this.privateGetCopytradingProfitSharingDetails(e)}privateGetCopytradingTotalProfitSharing(e){return this.privateGetCopytradingTotalProfitSharing(e)}privateGetCopytradingUnrealizedProfitSharingDetails(e){return this.privateGetCopytradingUnrealizedProfitSharingDetails(e)}privateGetTradingBotGridOrdersAlgoPending(e){return this.privateGetTradingBotGridOrdersAlgoPending(e)}privateGetTradingBotGridOrdersAlgoHistory(e){return this.privateGetTradingBotGridOrdersAlgoHistory(e)}privateGetTradingBotGridOrdersAlgoDetails(e){return this.privateGetTradingBotGridOrdersAlgoDetails(e)}privateGetTradingBotGridSubOrders(e){return this.privateGetTradingBotGridSubOrders(e)}privateGetTradingBotGridPositions(e){return this.privateGetTradingBotGridPositions(e)}privateGetTradingBotGridAiParam(e){return this.privateGetTradingBotGridAiParam(e)}privatePostAccountSetPositionMode(e){return this.privatePostAccountSetPositionMode(e)}privatePostAccountSetLeverage(e){return this.privatePostAccountSetLeverage(e)}privatePostAccountPositionMarginBalance(e){return this.privatePostAccountPositionMarginBalance(e)}privatePostAccountSetGreeks(e){return this.privatePostAccountSetGreeks(e)}privatePostAccountSetIsolatedMode(e){return this.privatePostAccountSetIsolatedMode(e)}privatePostAccountSetRiskOffsetType(e){return this.privatePostAccountSetRiskOffsetType(e)}privatePostAccountSimulatedMargin(e){return this.privatePostAccountSimulatedMargin(e)}privatePostAccountBorrowRepay(e){return this.privatePostAccountBorrowRepay(e)}privatePostAccountQuickMarginBorrowRepay(e){return this.privatePostAccountQuickMarginBorrowRepay(e)}privatePostAccountActivateOption(e){return this.privatePostAccountActivateOption(e)}privatePostAccountSetAutoLoan(e){return this.privatePostAccountSetAutoLoan(e)}privatePostAssetTransfer(e){return this.privatePostAssetTransfer(e)}privatePostAssetWithdrawal(e){return this.privatePostAssetWithdrawal(e)}privatePostAssetWithdrawalLightning(e){return this.privatePostAssetWithdrawalLightning(e)}privatePostAssetCancelWithdrawal(e){return this.privatePostAssetCancelWithdrawal(e)}privatePostAssetConvertDustAssets(e){return this.privatePostAssetConvertDustAssets(e)}privatePostTradeOrder(e){return this.privatePostTradeOrder(e)}privatePostTradeBatchOrders(e){return this.privatePostTradeBatchOrders(e)}privatePostTradeCancelOrder(e){return this.privatePostTradeCancelOrder(e)}privatePostTradeCancelBatchOrders(e){return this.privatePostTradeCancelBatchOrders(e)}privatePostTradeAmendOrder(e){return this.privatePostTradeAmendOrder(e)}privatePostTradeAmendBatchOrders(e){return this.privatePostTradeAmendBatchOrders(e)}privatePostTradeClosePosition(e){return this.privatePostTradeClosePosition(e)}privatePostTradeOrderAlgo(e){return this.privatePostTradeOrderAlgo(e)}privatePostTradeCancelAlgos(e){return this.privatePostTradeCancelAlgos(e)}privatePostTradeCancelAdvanceAlgos(e){return this.privatePostTradeCancelAdvanceAlgos(e)}privatePostUsersSubaccountDeleteApikey(e){return this.privatePostUsersSubaccountDeleteApikey(e)}privatePostUsersSubaccountModifyApikey(e){return this.privatePostUsersSubaccountModifyApikey(e)}privatePostUsersSubaccountApikey(e){return this.privatePostUsersSubaccountApikey(e)}privatePostUsersSubaccountSetTransferOut(e){return this.privatePostUsersSubaccountSetTransferOut(e)}privatePostAssetSubaccountTransfer(e){return this.privatePostAssetSubaccountTransfer(e)}privatePostBrokerNdCreateSubaccount(e){return this.privatePostBrokerNdCreateSubaccount(e)}privatePostBrokerNdDeleteSubaccount(e){return this.privatePostBrokerNdDeleteSubaccount(e)}privatePostBrokerNdSetSubaccountLevel(e){return this.privatePostBrokerNdSetSubaccountLevel(e)}privatePostBrokerNdSetSubaccountFeeRate(e){return this.privatePostBrokerNdSetSubaccountFeeRate(e)}privatePostAssetBrokerNdSubaccountDepositAddress(e){return this.privatePostAssetBrokerNdSubaccountDepositAddress(e)}privatePostBrokerNdSubaccountApikey(e){return this.privatePostBrokerNdSubaccountApikey(e)}privatePostBrokerNdSubaccountDeleteApikey(e){return this.privatePostBrokerNdSubaccountDeleteApikey(e)}privatePostBrokerNdSubaccountModifyApikey(e){return this.privatePostBrokerNdSubaccountModifyApikey(e)}privatePostBrokerNdRebatePerOrders(e){return this.privatePostBrokerNdRebatePerOrders(e)}privatePostFinanceStakingDefiPurchase(e){return this.privatePostFinanceStakingDefiPurchase(e)}privatePostFinanceStakingDefiRedeem(e){return this.privatePostFinanceStakingDefiRedeem(e)}privatePostFinanceStakingDefiCancel(e){return this.privatePostFinanceStakingDefiCancel(e)}privatePostFinanceSavingsPurchaseRedempt(e){return this.privatePostFinanceSavingsPurchaseRedempt(e)}privatePostFinanceSavingsSetLendingRate(e){return this.privatePostFinanceSavingsSetLendingRate(e)}privatePostRfqCreateRfq(e){return this.privatePostRfqCreateRfq(e)}privatePostRfqCancelRfq(e){return this.privatePostRfqCancelRfq(e)}privatePostRfqCancelBatchRfqs(e){return this.privatePostRfqCancelBatchRfqs(e)}privatePostRfqCancelAllRfqs(e){return this.privatePostRfqCancelAllRfqs(e)}privatePostRfqExecuteQuote(e){return this.privatePostRfqExecuteQuote(e)}privatePostRfqMakerInstrumentSettings(e){return this.privatePostRfqMakerInstrumentSettings(e)}privatePostRfqMmpReset(e){return this.privatePostRfqMmpReset(e)}privatePostRfqCreateQuote(e){return this.privatePostRfqCreateQuote(e)}privatePostRfqCancelQuote(e){return this.privatePostRfqCancelQuote(e)}privatePostRfqCancelBatchQuotes(e){return this.privatePostRfqCancelBatchQuotes(e)}privatePostRfqCancelAllQuotes(e){return this.privatePostRfqCancelAllQuotes(e)}privatePostCopytradingAlgoOrder(e){return this.privatePostCopytradingAlgoOrder(e)}privatePostCopytradingCloseSubposition(e){return this.privatePostCopytradingCloseSubposition(e)}privatePostCopytradingSetInstruments(e){return this.privatePostCopytradingSetInstruments(e)}privatePostTradingBotGridOrderAlgo(e){return this.privatePostTradingBotGridOrderAlgo(e)}privatePostTradingBotGridAmendOrderAlgo(e){return this.privatePostTradingBotGridAmendOrderAlgo(e)}privatePostTradingBotGridStopOrderAlgo(e){return this.privatePostTradingBotGridStopOrderAlgo(e)}privatePostTradingBotGridWithdrawIncome(e){return this.privatePostTradingBotGridWithdrawIncome(e)}privatePostTradingBotGridComputeMarginBalance(e){return this.privatePostTradingBotGridComputeMarginBalance(e)}privatePostTradingBotGridMarginBalance(e){return this.privatePostTradingBotGridMarginBalance(e)}}},6123:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCountries(e){return this.publicGetCountries(e)}publicGetDataCurrencyTicker(e){return this.publicGetDataCurrencyTicker(e)}publicGetDataCurrencyTrades(e){return this.publicGetDataCurrencyTrades(e)}publicGetDataCurrencyDepth(e){return this.publicGetDataCurrencyDepth(e)}publicGetBitcoinChartsIdTrades(e){return this.publicGetBitcoinChartsIdTrades(e)}publicGetBitcoinChartsIdDepth(e){return this.publicGetBitcoinChartsIdDepth(e)}privateGetUser(e){return this.privateGetUser(e)}privateGetUserAddresses(e){return this.privateGetUserAddresses(e)}privateGetUserAddressesAddress(e){return this.privateGetUserAddressesAddress(e)}privateGetUserOrders(e){return this.privateGetUserOrders(e)}privateGetUserOrdersUuid(e){return this.privateGetUserOrdersUuid(e)}privateGetUserPriceAlerts(e){return this.privateGetUserPriceAlerts(e)}privateGetMerchantGetPaymentUuid(e){return this.privateGetMerchantGetPaymentUuid(e)}privatePostUserAddresses(e){return this.privatePostUserAddresses(e)}privatePostUserOrders(e){return this.privatePostUserOrders(e)}privatePostUserWithdrawals(e){return this.privatePostUserWithdrawals(e)}privatePostUserEmailTransfers(e){return this.privatePostUserEmailTransfers(e)}privatePostUserPaymentRequests(e){return this.privatePostUserPaymentRequests(e)}privatePostUserPriceAlerts(e){return this.privatePostUserPriceAlerts(e)}privatePostMerchantCreatePayment(e){return this.privatePostMerchantCreatePayment(e)}privateDeleteUserOrdersUuid(e){return this.privateDeleteUserOrdersUuid(e)}privateDeleteUserOrdersUuidCancel(e){return this.privateDeleteUserOrdersUuidCancel(e)}privateDeleteUserPriceAlertsId(e){return this.privateDeleteUserPriceAlertsId(e)}}},9192:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCfgV2Products(e){return this.publicGetCfgV2Products(e)}publicGetCfgFundingRates(e){return this.publicGetCfgFundingRates(e)}publicGetProducts(e){return this.publicGetProducts(e)}publicGetNomicsTrades(e){return this.publicGetNomicsTrades(e)}publicGetMdKline(e){return this.publicGetMdKline(e)}publicGetMdV2KlineList(e){return this.publicGetMdV2KlineList(e)}publicGetMdV2Kline(e){return this.publicGetMdV2Kline(e)}publicGetMdV2KlineLast(e){return this.publicGetMdV2KlineLast(e)}v1GetMdOrderbook(e){return this.v1GetMdOrderbook(e)}v1GetMdTrade(e){return this.v1GetMdTrade(e)}v1GetMdTicker24hr(e){return this.v1GetMdTicker24hr(e)}v1GetMdTicker24hrAll(e){return this.v1GetMdTicker24hrAll(e)}v1GetMdSpotTicker24hr(e){return this.v1GetMdSpotTicker24hr(e)}v1GetMdSpotTicker24hrAll(e){return this.v1GetMdSpotTicker24hrAll(e)}v1GetExchangePublicProducts(e){return this.v1GetExchangePublicProducts(e)}v2GetMdV2Orderbook(e){return this.v2GetMdV2Orderbook(e)}v2GetMdV2Trade(e){return this.v2GetMdV2Trade(e)}v2GetMdV2Ticker24hr(e){return this.v2GetMdV2Ticker24hr(e)}v2GetMdV2Ticker24hrAll(e){return this.v2GetMdV2Ticker24hrAll(e)}privateGetSpotOrdersActive(e){return this.privateGetSpotOrdersActive(e)}privateGetSpotOrders(e){return this.privateGetSpotOrders(e)}privateGetSpotWallets(e){return this.privateGetSpotWallets(e)}privateGetExchangeSpotOrder(e){return this.privateGetExchangeSpotOrder(e)}privateGetExchangeSpotOrderTrades(e){return this.privateGetExchangeSpotOrderTrades(e)}privateGetExchangeOrderV2OrderList(e){return this.privateGetExchangeOrderV2OrderList(e)}privateGetExchangeOrderV2TradingList(e){return this.privateGetExchangeOrderV2TradingList(e)}privateGetAccountsAccountPositions(e){return this.privateGetAccountsAccountPositions(e)}privateGetGAccountsAccountPositions(e){return this.privateGetGAccountsAccountPositions(e)}privateGetAccountsPositions(e){return this.privateGetAccountsPositions(e)}privateGetApiDataFuturesFundingFees(e){return this.privateGetApiDataFuturesFundingFees(e)}privateGetApiDataGFuturesFundingFees(e){return this.privateGetApiDataGFuturesFundingFees(e)}privateGetApiDataFuturesOrders(e){return this.privateGetApiDataFuturesOrders(e)}privateGetApiDataGFuturesOrders(e){return this.privateGetApiDataGFuturesOrders(e)}privateGetApiDataFuturesOrdersByOrderId(e){return this.privateGetApiDataFuturesOrdersByOrderId(e)}privateGetApiDataGFuturesOrdersByOrderId(e){return this.privateGetApiDataGFuturesOrdersByOrderId(e)}privateGetApiDataFuturesTrades(e){return this.privateGetApiDataFuturesTrades(e)}privateGetApiDataGFuturesTrades(e){return this.privateGetApiDataGFuturesTrades(e)}privateGetApiDataFuturesTradingFees(e){return this.privateGetApiDataFuturesTradingFees(e)}privateGetApiDataGFuturesTradingFees(e){return this.privateGetApiDataGFuturesTradingFees(e)}privateGetGOrdersActiveList(e){return this.privateGetGOrdersActiveList(e)}privateGetOrdersActiveList(e){return this.privateGetOrdersActiveList(e)}privateGetExchangeOrderList(e){return this.privateGetExchangeOrderList(e)}privateGetExchangeOrder(e){return this.privateGetExchangeOrder(e)}privateGetExchangeOrderTrade(e){return this.privateGetExchangeOrderTrade(e)}privateGetPhemexUserUsersChildren(e){return this.privateGetPhemexUserUsersChildren(e)}privateGetPhemexUserWalletsV2DepositAddress(e){return this.privateGetPhemexUserWalletsV2DepositAddress(e)}privateGetPhemexUserWalletsTradeAccountDetail(e){return this.privateGetPhemexUserWalletsTradeAccountDetail(e)}privateGetPhemexUserOrderClosedPositionList(e){return this.privateGetPhemexUserOrderClosedPositionList(e)}privateGetExchangeMarginsTransfer(e){return this.privateGetExchangeMarginsTransfer(e)}privateGetExchangeWalletsConfirmWithdraw(e){return this.privateGetExchangeWalletsConfirmWithdraw(e)}privateGetExchangeWalletsWithdrawList(e){return this.privateGetExchangeWalletsWithdrawList(e)}privateGetExchangeWalletsDepositList(e){return this.privateGetExchangeWalletsDepositList(e)}privateGetExchangeWalletsV2DepositAddress(e){return this.privateGetExchangeWalletsV2DepositAddress(e)}privateGetApiDataSpotsFunds(e){return this.privateGetApiDataSpotsFunds(e)}privateGetAssetsConvert(e){return this.privateGetAssetsConvert(e)}privateGetAssetsTransfer(e){return this.privateGetAssetsTransfer(e)}privateGetAssetsSpotsSubAccountsTransfer(e){return this.privateGetAssetsSpotsSubAccountsTransfer(e)}privateGetAssetsFuturesSubAccountsTransfer(e){return this.privateGetAssetsFuturesSubAccountsTransfer(e)}privateGetAssetsQuote(e){return this.privateGetAssetsQuote(e)}privatePostSpotOrders(e){return this.privatePostSpotOrders(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostGOrders(e){return this.privatePostGOrders(e)}privatePostPositionsAssign(e){return this.privatePostPositionsAssign(e)}privatePostExchangeWalletsTransferOut(e){return this.privatePostExchangeWalletsTransferOut(e)}privatePostExchangeWalletsTransferIn(e){return this.privatePostExchangeWalletsTransferIn(e)}privatePostExchangeMargins(e){return this.privatePostExchangeMargins(e)}privatePostExchangeWalletsCreateWithdraw(e){return this.privatePostExchangeWalletsCreateWithdraw(e)}privatePostExchangeWalletsCancelWithdraw(e){return this.privatePostExchangeWalletsCancelWithdraw(e)}privatePostExchangeWalletsCreateWithdrawAddress(e){return this.privatePostExchangeWalletsCreateWithdrawAddress(e)}privatePostAssetsTransfer(e){return this.privatePostAssetsTransfer(e)}privatePostAssetsSpotsSubAccountsTransfer(e){return this.privatePostAssetsSpotsSubAccountsTransfer(e)}privatePostAssetsFuturesSubAccountsTransfer(e){return this.privatePostAssetsFuturesSubAccountsTransfer(e)}privatePostAssetsUniversalTransfer(e){return this.privatePostAssetsUniversalTransfer(e)}privatePostAssetsConvert(e){return this.privatePostAssetsConvert(e)}privatePutSpotOrders(e){return this.privatePutSpotOrders(e)}privatePutOrdersReplace(e){return this.privatePutOrdersReplace(e)}privatePutGOrdersReplace(e){return this.privatePutGOrdersReplace(e)}privatePutPositionsLeverage(e){return this.privatePutPositionsLeverage(e)}privatePutGPositionsLeverage(e){return this.privatePutGPositionsLeverage(e)}privatePutGPositionsSwitchPosModeSync(e){return this.privatePutGPositionsSwitchPosModeSync(e)}privatePutPositionsRiskLimit(e){return this.privatePutPositionsRiskLimit(e)}privateDeleteSpotOrders(e){return this.privateDeleteSpotOrders(e)}privateDeleteSpotOrdersAll(e){return this.privateDeleteSpotOrdersAll(e)}privateDeleteOrdersCancel(e){return this.privateDeleteOrdersCancel(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteOrdersAll(e){return this.privateDeleteOrdersAll(e)}privateDeleteGOrdersCancel(e){return this.privateDeleteGOrdersCancel(e)}privateDeleteGOrders(e){return this.privateDeleteGOrders(e)}privateDeleteGOrdersAll(e){return this.privateDeleteGOrdersAll(e)}}},2735:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetMarketsSymbol(e){return this.publicGetMarketsSymbol(e)}publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetCurrenciesCurrency(e){return this.publicGetCurrenciesCurrency(e)}publicGetTimestamp(e){return this.publicGetTimestamp(e)}publicGetMarketsPrice(e){return this.publicGetMarketsPrice(e)}publicGetMarketsSymbolPrice(e){return this.publicGetMarketsSymbolPrice(e)}publicGetMarketsSymbolOrderBook(e){return this.publicGetMarketsSymbolOrderBook(e)}publicGetMarketsSymbolCandles(e){return this.publicGetMarketsSymbolCandles(e)}publicGetMarketsSymbolTrades(e){return this.publicGetMarketsSymbolTrades(e)}publicGetMarketsTicker24h(e){return this.publicGetMarketsTicker24h(e)}publicGetMarketsSymbolTicker24h(e){return this.publicGetMarketsSymbolTicker24h(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetAccountsActivity(e){return this.privateGetAccountsActivity(e)}privateGetAccountsBalances(e){return this.privateGetAccountsBalances(e)}privateGetAccountsIdBalances(e){return this.privateGetAccountsIdBalances(e)}privateGetAccountsTransfer(e){return this.privateGetAccountsTransfer(e)}privateGetAccountsTransferId(e){return this.privateGetAccountsTransferId(e)}privateGetSubaccounts(e){return this.privateGetSubaccounts(e)}privateGetSubaccountsBalances(e){return this.privateGetSubaccountsBalances(e)}privateGetSubaccountsIdBalances(e){return this.privateGetSubaccountsIdBalances(e)}privateGetSubaccountsTransfer(e){return this.privateGetSubaccountsTransfer(e)}privateGetSubaccountsTransferId(e){return this.privateGetSubaccountsTransferId(e)}privateGetFeeinfo(e){return this.privateGetFeeinfo(e)}privateGetWalletsAddresses(e){return this.privateGetWalletsAddresses(e)}privateGetWalletsActivity(e){return this.privateGetWalletsActivity(e)}privateGetWalletsAddressesCurrency(e){return this.privateGetWalletsAddressesCurrency(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetOrdersId(e){return this.privateGetOrdersId(e)}privateGetOrdersHistory(e){return this.privateGetOrdersHistory(e)}privateGetOrdersKillSwitchStatus(e){return this.privateGetOrdersKillSwitchStatus(e)}privateGetSmartorders(e){return this.privateGetSmartorders(e)}privateGetSmartordersId(e){return this.privateGetSmartordersId(e)}privateGetSmartordersHistory(e){return this.privateGetSmartordersHistory(e)}privateGetTrades(e){return this.privateGetTrades(e)}privateGetOrdersIdTrades(e){return this.privateGetOrdersIdTrades(e)}privatePostAccountsTransfer(e){return this.privatePostAccountsTransfer(e)}privatePostSubaccountsTransfer(e){return this.privatePostSubaccountsTransfer(e)}privatePostWalletsAddress(e){return this.privatePostWalletsAddress(e)}privatePostWalletsWithdraw(e){return this.privatePostWalletsWithdraw(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostOrdersKillSwitch(e){return this.privatePostOrdersKillSwitch(e)}privatePostOrdersBatch(e){return this.privatePostOrdersBatch(e)}privatePostSmartorders(e){return this.privatePostSmartorders(e)}privateDeleteOrdersId(e){return this.privateDeleteOrdersId(e)}privateDeleteOrdersCancelByIds(e){return this.privateDeleteOrdersCancelByIds(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteSmartordersId(e){return this.privateDeleteSmartordersId(e)}privateDeleteSmartordersCancelByIds(e){return this.privateDeleteSmartordersCancelByIds(e)}privateDeleteSmartorders(e){return this.privateDeleteSmartorders(e)}privatePutOrdersId(e){return this.privatePutOrdersId(e)}privatePutSmartordersId(e){return this.privatePutSmartordersId(e)}}},3480:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetContractsActive(e){return this.publicGetContractsActive(e)}publicGetContractsSymbol(e){return this.publicGetContractsSymbol(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetLevel2Snapshot(e){return this.publicGetLevel2Snapshot(e)}publicGetLevel2Depth(e){return this.publicGetLevel2Depth(e)}publicGetLevel2MessageQuery(e){return this.publicGetLevel2MessageQuery(e)}publicGetLevel3Snapshot(e){return this.publicGetLevel3Snapshot(e)}publicGetTradeHistory(e){return this.publicGetTradeHistory(e)}publicGetInterestQuery(e){return this.publicGetInterestQuery(e)}publicGetIndexQuery(e){return this.publicGetIndexQuery(e)}publicGetMarkPriceSymbolCurrent(e){return this.publicGetMarkPriceSymbolCurrent(e)}publicGetPremiumQuery(e){return this.publicGetPremiumQuery(e)}publicGetFundingRateSymbolCurrent(e){return this.publicGetFundingRateSymbolCurrent(e)}publicGetTimestamp(e){return this.publicGetTimestamp(e)}publicGetStatus(e){return this.publicGetStatus(e)}publicGetKlineQuery(e){return this.publicGetKlineQuery(e)}publicPostBulletPublic(e){return this.publicPostBulletPublic(e)}privateGetAccountOverview(e){return this.privateGetAccountOverview(e)}privateGetTransactionHistory(e){return this.privateGetTransactionHistory(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetStopOrders(e){return this.privateGetStopOrders(e)}privateGetRecentDoneOrders(e){return this.privateGetRecentDoneOrders(e)}privateGetOrdersOrderId(e){return this.privateGetOrdersOrderId(e)}privateGetFills(e){return this.privateGetFills(e)}privateGetOpenOrderStatistics(e){return this.privateGetOpenOrderStatistics(e)}privateGetPosition(e){return this.privateGetPosition(e)}privateGetPositions(e){return this.privateGetPositions(e)}privateGetFundingHistory(e){return this.privateGetFundingHistory(e)}privateGetMarginTypeQuery(e){return this.privateGetMarginTypeQuery(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostBatchOrders(e){return this.privatePostBatchOrders(e)}privatePostPositionMarginAutoDepositStatus(e){return this.privatePostPositionMarginAutoDepositStatus(e)}privatePostPositionMarginDepositMargin(e){return this.privatePostPositionMarginDepositMargin(e)}privatePostBulletPrivate(e){return this.privatePostBulletPrivate(e)}privatePostMarginTypeChange(e){return this.privatePostMarginTypeChange(e)}privateDeleteOrdersOrderId(e){return this.privateDeleteOrdersOrderId(e)}privateDeleteOrders(e){return this.privateDeleteOrders(e)}privateDeleteStopOrders(e){return this.privateDeleteStopOrders(e)}}},7875:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarket(e){return this.publicGetMarket(e)}publicGetCurrency(e){return this.publicGetCurrency(e)}publicGetCurrencyWithPlatform(e){return this.publicGetCurrencyWithPlatform(e)}publicGetTime(e){return this.publicGetTime(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetOrderBook(e){return this.publicGetOrderBook(e)}publicGetTrade(e){return this.publicGetTrade(e)}publicGetCandle(e){return this.publicGetCandle(e)}privatePostNewOrder(e){return this.privatePostNewOrder(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostWithdrawal(e){return this.privatePostWithdrawal(e)}privateGetBalance(e){return this.privateGetBalance(e)}privateGetOrder(e){return this.privateGetOrder(e)}privateGetOpenOrder(e){return this.privateGetOpenOrder(e)}privateGetOrderHistory(e){return this.privateGetOrderHistory(e)}privateGetTradeHistory(e){return this.privateGetTradeHistory(e)}privateGetDepositAddress(e){return this.privateGetDepositAddress(e)}accountsPostToken(e){return this.accountsPostToken(e)}}},9433:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetRateAll(e){return this.publicGetRateAll(e)}publicGetRatePair(e){return this.publicGetRatePair(e)}publicGetOrderbookPair(e){return this.publicGetOrderbookPair(e)}publicGetTradehistoryPair(e){return this.publicGetTradehistoryPair(e)}publicGetPair(e){return this.publicGetPair(e)}publicGetCurrency(e){return this.publicGetCurrency(e)}publicGetOrderbookPairDepth(e){return this.publicGetOrderbookPairDepth(e)}privateGetBalancesExchangeBalances(e){return this.privateGetBalancesExchangeBalances(e)}privateGetOrderPairOrderId(e){return this.privateGetOrderPairOrderId(e)}privateGetOrderPair(e){return this.privateGetOrderPair(e)}privateGetTradePair(e){return this.privateGetTradePair(e)}privatePostOrderPair(e){return this.privatePostOrderPair(e)}privatePostOrderPairOrderIdCancel(e){return this.privatePostOrderPairOrderIdCancel(e)}}},4757:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetCurrenciesCurrencyId(e){return this.publicGetCurrenciesCurrencyId(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetPairsGroups(e){return this.publicGetPairsGroups(e)}publicGetCurrencyPairsListCode(e){return this.publicGetCurrencyPairsListCode(e)}publicGetCurrencyPairsGroupCurrencyPairGroupId(e){return this.publicGetCurrencyPairsGroupCurrencyPairGroupId(e)}publicGetCurrencyPairsCurrencyPairId(e){return this.publicGetCurrencyPairsCurrencyPairId(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetTickerCurrencyPairId(e){return this.publicGetTickerCurrencyPairId(e)}publicGetTradesCurrencyPairId(e){return this.publicGetTradesCurrencyPairId(e)}publicGetOrderbookCurrencyPairId(e){return this.publicGetOrderbookCurrencyPairId(e)}publicGetChartCurrencyPairIdCandlesType(e){return this.publicGetChartCurrencyPairIdCandlesType(e)}publicGetDepositStatuses(e){return this.publicGetDepositStatuses(e)}publicGetDepositStatusesStatusId(e){return this.publicGetDepositStatusesStatusId(e)}publicGetWithdrawalStatuses(e){return this.publicGetWithdrawalStatuses(e)}publicGetWithdrawalStatusesStatusId(e){return this.publicGetWithdrawalStatusesStatusId(e)}publicGetPing(e){return this.publicGetPing(e)}publicGetMobileVersions(e){return this.publicGetMobileVersions(e)}publicGetTwitter(e){return this.publicGetTwitter(e)}tradingGetFeesCurrencyPairId(e){return this.tradingGetFeesCurrencyPairId(e)}tradingGetOrders(e){return this.tradingGetOrders(e)}tradingGetOrdersCurrencyPairId(e){return this.tradingGetOrdersCurrencyPairId(e)}tradingGetOrderOrderId(e){return this.tradingGetOrderOrderId(e)}tradingPostOrdersCurrencyPairId(e){return this.tradingPostOrdersCurrencyPairId(e)}tradingPostOrdersBulkCurrencyPairId(e){return this.tradingPostOrdersBulkCurrencyPairId(e)}tradingDeleteOrders(e){return this.tradingDeleteOrders(e)}tradingDeleteOrdersCurrencyPairId(e){return this.tradingDeleteOrdersCurrencyPairId(e)}tradingDeleteOrderOrderId(e){return this.tradingDeleteOrderOrderId(e)}reportsGetCurrencies(e){return this.reportsGetCurrencies(e)}reportsGetCurrencyPairs(e){return this.reportsGetCurrencyPairs(e)}reportsGetOrders(e){return this.reportsGetOrders(e)}reportsGetOrdersOrderId(e){return this.reportsGetOrdersOrderId(e)}reportsGetTradesCurrencyPairId(e){return this.reportsGetTradesCurrencyPairId(e)}reportsGetBackgroundListMode(e){return this.reportsGetBackgroundListMode(e)}reportsGetBackgroundId(e){return this.reportsGetBackgroundId(e)}reportsGetBackgroundDownloadId(e){return this.reportsGetBackgroundDownloadId(e)}reportsPostBackgroundCreate(e){return this.reportsPostBackgroundCreate(e)}reportsDeleteBackgroundId(e){return this.reportsDeleteBackgroundId(e)}profileGetInfo(e){return this.profileGetInfo(e)}profileGetWallets(e){return this.profileGetWallets(e)}profileGetWalletsWalletId(e){return this.profileGetWalletsWalletId(e)}profileGetWalletsAddressWalletId(e){return this.profileGetWalletsAddressWalletId(e)}profileGetDeposits(e){return this.profileGetDeposits(e)}profileGetDepositsId(e){return this.profileGetDepositsId(e)}profileGetRewards(e){return this.profileGetRewards(e)}profileGetRewardsId(e){return this.profileGetRewardsId(e)}profileGetAddressbook(e){return this.profileGetAddressbook(e)}profileGetAddressbookItemId(e){return this.profileGetAddressbookItemId(e)}profileGetWithdrawals(e){return this.profileGetWithdrawals(e)}profileGetWithdrawalsId(e){return this.profileGetWithdrawalsId(e)}profileGetNotifications(e){return this.profileGetNotifications(e)}profileGetNotificationsPrice(e){return this.profileGetNotificationsPrice(e)}profileGetFavoriteCurrencyPairs(e){return this.profileGetFavoriteCurrencyPairs(e)}profileGetTokenScopes(e){return this.profileGetTokenScopes(e)}profilePostWalletsBurnWalletId(e){return this.profilePostWalletsBurnWalletId(e)}profilePostWalletsWalletIdHoldAmount(e){return this.profilePostWalletsWalletIdHoldAmount(e)}profilePostWalletsCurrencyId(e){return this.profilePostWalletsCurrencyId(e)}profilePostWalletsAddressWalletId(e){return this.profilePostWalletsAddressWalletId(e)}profilePostAddressbookDisableItemItemId(e){return this.profilePostAddressbookDisableItemItemId(e)}profilePostAddressbookEnableItemItemId(e){return this.profilePostAddressbookEnableItemItemId(e)}profilePostAddressbookEnableStrictWd(e){return this.profilePostAddressbookEnableStrictWd(e)}profilePostAddressbookDisableStrictWd(e){return this.profilePostAddressbookDisableStrictWd(e)}profilePostWithdraw(e){return this.profilePostWithdraw(e)}profilePostNotificationsPrice(e){return this.profilePostNotificationsPrice(e)}profilePostReferralProgram(e){return this.profilePostReferralProgram(e)}profilePostReferralInsertCode(e){return this.profilePostReferralInsertCode(e)}profilePostReferralBonusTransferCurrencyId(e){return this.profilePostReferralBonusTransferCurrencyId(e)}profilePutFavoriteCurrencyPairsSet(e){return this.profilePutFavoriteCurrencyPairsSet(e)}profileDeleteAddressbookItemId(e){return this.profileDeleteAddressbookItemId(e)}profileDeleteWithdrawWithdrawalId(e){return this.profileDeleteWithdrawWithdrawalId(e)}profileDeleteNotificationsPricePriceAlertId(e){return this.profileDeleteNotificationsPricePriceAlertId(e)}verificationGetCountries(e){return this.verificationGetCountries(e)}verificationGetStatus(e){return this.verificationGetStatus(e)}verificationGetFractalUrl(e){return this.verificationGetFractalUrl(e)}verificationGetSmartId(e){return this.verificationGetSmartId(e)}verificationGetStex(e){return this.verificationGetStex(e)}verificationGetCryptonomicaCode(e){return this.verificationGetCryptonomicaCode(e)}verificationPostSmartId(e){return this.verificationPostSmartId(e)}verificationPostStex(e){return this.verificationPostStex(e)}verificationPostCryptonomica(e){return this.verificationPostCryptonomica(e)}settingsGetNotificationsEvent(e){return this.settingsGetNotificationsEvent(e)}settingsGetNotifications(e){return this.settingsGetNotifications(e)}settingsPutNotifications(e){return this.settingsPutNotifications(e)}settingsPutNotificationsSet(e){return this.settingsPutNotificationsSet(e)}}},6057:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{webGetCurrency(e){return this.webGetCurrency(e)}webGetPairs(e){return this.webGetPairs(e)}webGetTickers(e){return this.webGetTickers(e)}webGetOrders(e){return this.webGetOrders(e)}webGetOrdershistory(e){return this.webGetOrdershistory(e)}webGetTradeData(e){return this.webGetTradeData(e)}webGetTradeDataId(e){return this.webGetTradeDataId(e)}publicGetInfo(e){return this.publicGetInfo(e)}publicGetTickerPair(e){return this.publicGetTickerPair(e)}publicGetDepthPair(e){return this.publicGetDepthPair(e)}publicGetTradesPair(e){return this.publicGetTradesPair(e)}privatePostGetInfoExt(e){return this.privatePostGetInfoExt(e)}privatePostGetInfo(e){return this.privatePostGetInfo(e)}privatePostTrade(e){return this.privatePostTrade(e)}privatePostActiveOrders(e){return this.privatePostActiveOrders(e)}privatePostOrderInfo(e){return this.privatePostOrderInfo(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostTradeHistory(e){return this.privatePostTradeHistory(e)}privatePostGetDepositAddress(e){return this.privatePostGetDepositAddress(e)}privatePostCreateWithdraw(e){return this.privatePostCreateWithdraw(e)}privatePostGetWithdraw(e){return this.privatePostGetWithdraw(e)}}},1696:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{addressbookGetMe(e){return this.addressbookGetMe(e)}addressbookPost(e){return this.addressbookPost(e)}addressbookPostIdId(e){return this.addressbookPostIdId(e)}addressbookPostIdIdRemove(e){return this.addressbookPostIdIdRemove(e)}custodyGetCredentials(e){return this.custodyGetCredentials(e)}custodyGetCredentialsHHash(e){return this.custodyGetCredentialsHHash(e)}custodyGetCredentialsKKey(e){return this.custodyGetCredentialsKKey(e)}custodyGetCredentialsMe(e){return this.custodyGetCredentialsMe(e)}custodyGetCredentialsMeAddress(e){return this.custodyGetCredentialsMeAddress(e)}custodyGetDepositAddresses(e){return this.custodyGetDepositAddresses(e)}custodyGetDepositAddressesHHash(e){return this.custodyGetDepositAddressesHHash(e)}historyGetOrders(e){return this.historyGetOrders(e)}historyGetOrdersDetails(e){return this.historyGetOrdersDetails(e)}historyGetOrdersExportCsv(e){return this.historyGetOrdersExportCsv(e)}historyGetTrades(e){return this.historyGetTrades(e)}historyGetTradesExportCsv(e){return this.historyGetTradesExportCsv(e)}currenciesGetAAddress(e){return this.currenciesGetAAddress(e)}currenciesGetIId(e){return this.currenciesGetIId(e)}currenciesGetSSymbol(e){return this.currenciesGetSSymbol(e)}currenciesPostPerform(e){return this.currenciesPostPerform(e)}currenciesPostPrepare(e){return this.currenciesPostPrepare(e)}currenciesPostRemovePerform(e){return this.currenciesPostRemovePerform(e)}currenciesPostSSymbolRemovePrepare(e){return this.currenciesPostSSymbolRemovePrepare(e)}currenciesPostSSymbolUpdatePerform(e){return this.currenciesPostSSymbolUpdatePerform(e)}currenciesPostSSymbolUpdatePrepare(e){return this.currenciesPostSSymbolUpdatePrepare(e)}managerGetDeposits(e){return this.managerGetDeposits(e)}managerGetTransfers(e){return this.managerGetTransfers(e)}managerGetWithdrawals(e){return this.managerGetWithdrawals(e)}marketsGetIId(e){return this.marketsGetIId(e)}marketsGetSSymbol(e){return this.marketsGetSSymbol(e)}marketsPostPerform(e){return this.marketsPostPerform(e)}marketsPostPrepare(e){return this.marketsPostPrepare(e)}marketsPostRemovePerform(e){return this.marketsPostRemovePerform(e)}marketsPostSSymbolRemovePrepare(e){return this.marketsPostSSymbolRemovePrepare(e)}marketsPostSSymbolUpdatePerform(e){return this.marketsPostSSymbolUpdatePerform(e)}marketsPostSSymbolUpdatePrepare(e){return this.marketsPostSSymbolUpdatePrepare(e)}publicGetCandles(e){return this.publicGetCandles(e)}publicGetCurrencies(e){return this.publicGetCurrencies(e)}publicGetMarkets(e){return this.publicGetMarkets(e)}publicGetOrderbook(e){return this.publicGetOrderbook(e)}publicGetOrderbookRaw(e){return this.publicGetOrderbookRaw(e)}publicGetOrderbookV2(e){return this.publicGetOrderbookV2(e)}publicGetTickers(e){return this.publicGetTickers(e)}publicGetTrades(e){return this.publicGetTrades(e)}statisticsGetAddress(e){return this.statisticsGetAddress(e)}tradingGetBalances(e){return this.tradingGetBalances(e)}tradingGetFees(e){return this.tradingGetFees(e)}tradingGetOrders(e){return this.tradingGetOrders(e)}tradingPostOrders(e){return this.tradingPostOrders(e)}tradingPostOrdersJson(e){return this.tradingPostOrdersJson(e)}tradingPutOrders(e){return this.tradingPutOrders(e)}tradingPutOrdersJson(e){return this.tradingPutOrdersJson(e)}tradingDeleteOrders(e){return this.tradingDeleteOrders(e)}tradingDeleteOrdersJson(e){return this.tradingDeleteOrdersJson(e)}tradingviewGetConfig(e){return this.tradingviewGetConfig(e)}tradingviewGetHistory(e){return this.tradingviewGetHistory(e)}tradingviewGetSymbolInfo(e){return this.tradingviewGetSymbolInfo(e)}tradingviewGetTime(e){return this.tradingviewGetTime(e)}}},58:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{binanceGetPing(e){return this.binanceGetPing(e)}binanceGetTime(e){return this.binanceGetTime(e)}binanceGetDepth(e){return this.binanceGetDepth(e)}binanceGetTrades(e){return this.binanceGetTrades(e)}binanceGetAggTrades(e){return this.binanceGetAggTrades(e)}binanceGetHistoricalTrades(e){return this.binanceGetHistoricalTrades(e)}binanceGetKlines(e){return this.binanceGetKlines(e)}binanceGetTicker24hr(e){return this.binanceGetTicker24hr(e)}binanceGetTickerPrice(e){return this.binanceGetTickerPrice(e)}binanceGetTickerBookTicker(e){return this.binanceGetTickerBookTicker(e)}binanceGetExchangeInfo(e){return this.binanceGetExchangeInfo(e)}binancePutUserDataStream(e){return this.binancePutUserDataStream(e)}binancePostUserDataStream(e){return this.binancePostUserDataStream(e)}binanceDeleteUserDataStream(e){return this.binanceDeleteUserDataStream(e)}publicGetOpenV1CommonTime(e){return this.publicGetOpenV1CommonTime(e)}publicGetOpenV1CommonSymbols(e){return this.publicGetOpenV1CommonSymbols(e)}publicGetOpenV1MarketDepth(e){return this.publicGetOpenV1MarketDepth(e)}publicGetOpenV1MarketTrades(e){return this.publicGetOpenV1MarketTrades(e)}publicGetOpenV1MarketAggTrades(e){return this.publicGetOpenV1MarketAggTrades(e)}publicGetOpenV1MarketKlines(e){return this.publicGetOpenV1MarketKlines(e)}privateGetOpenV1OrdersDetail(e){return this.privateGetOpenV1OrdersDetail(e)}privateGetOpenV1Orders(e){return this.privateGetOpenV1Orders(e)}privateGetOpenV1AccountSpot(e){return this.privateGetOpenV1AccountSpot(e)}privateGetOpenV1AccountSpotAsset(e){return this.privateGetOpenV1AccountSpotAsset(e)}privateGetOpenV1OrdersTrades(e){return this.privateGetOpenV1OrdersTrades(e)}privateGetOpenV1Withdraws(e){return this.privateGetOpenV1Withdraws(e)}privateGetOpenV1Deposits(e){return this.privateGetOpenV1Deposits(e)}privateGetOpenV1DepositsAddress(e){return this.privateGetOpenV1DepositsAddress(e)}privatePostOpenV1Orders(e){return this.privatePostOpenV1Orders(e)}privatePostOpenV1OrdersCancel(e){return this.privatePostOpenV1OrdersCancel(e)}privatePostOpenV1OrdersOco(e){return this.privatePostOpenV1OrdersOco(e)}privatePostOpenV1Withdraws(e){return this.privatePostOpenV1Withdraws(e)}privatePostOpenV1UserDataStream(e){return this.privatePostOpenV1UserDataStream(e)}}},2120:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetMarketAll(e){return this.publicGetMarketAll(e)}publicGetCandlesTimeframe(e){return this.publicGetCandlesTimeframe(e)}publicGetCandlesTimeframeUnit(e){return this.publicGetCandlesTimeframeUnit(e)}publicGetCandlesMinutesUnit(e){return this.publicGetCandlesMinutesUnit(e)}publicGetCandlesMinutes1(e){return this.publicGetCandlesMinutes1(e)}publicGetCandlesMinutes3(e){return this.publicGetCandlesMinutes3(e)}publicGetCandlesMinutes5(e){return this.publicGetCandlesMinutes5(e)}publicGetCandlesMinutes15(e){return this.publicGetCandlesMinutes15(e)}publicGetCandlesMinutes30(e){return this.publicGetCandlesMinutes30(e)}publicGetCandlesMinutes60(e){return this.publicGetCandlesMinutes60(e)}publicGetCandlesMinutes240(e){return this.publicGetCandlesMinutes240(e)}publicGetCandlesDays(e){return this.publicGetCandlesDays(e)}publicGetCandlesWeeks(e){return this.publicGetCandlesWeeks(e)}publicGetCandlesMonths(e){return this.publicGetCandlesMonths(e)}publicGetTradesTicks(e){return this.publicGetTradesTicks(e)}publicGetTicker(e){return this.publicGetTicker(e)}publicGetOrderbook(e){return this.publicGetOrderbook(e)}privateGetAccounts(e){return this.privateGetAccounts(e)}privateGetOrdersChance(e){return this.privateGetOrdersChance(e)}privateGetOrder(e){return this.privateGetOrder(e)}privateGetOrders(e){return this.privateGetOrders(e)}privateGetWithdraws(e){return this.privateGetWithdraws(e)}privateGetWithdraw(e){return this.privateGetWithdraw(e)}privateGetWithdrawsChance(e){return this.privateGetWithdrawsChance(e)}privateGetDeposits(e){return this.privateGetDeposits(e)}privateGetDeposit(e){return this.privateGetDeposit(e)}privateGetDepositsCoinAddresses(e){return this.privateGetDepositsCoinAddresses(e)}privateGetDepositsCoinAddress(e){return this.privateGetDepositsCoinAddress(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostWithdrawsCoin(e){return this.privatePostWithdrawsCoin(e)}privatePostWithdrawsKrw(e){return this.privatePostWithdrawsKrw(e)}privatePostDepositsGenerateCoinAddress(e){return this.privatePostDepositsGenerateCoinAddress(e)}privateDeleteOrder(e){return this.privateDeleteOrder(e)}}},8888:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{matcherGetMatcher(e){return this.matcherGetMatcher(e)}matcherGetMatcherSettings(e){return this.matcherGetMatcherSettings(e)}matcherGetMatcherSettingsRates(e){return this.matcherGetMatcherSettingsRates(e)}matcherGetMatcherBalanceReservedPublicKey(e){return this.matcherGetMatcherBalanceReservedPublicKey(e)}matcherGetMatcherDebugAllSnashotOffsets(e){return this.matcherGetMatcherDebugAllSnashotOffsets(e)}matcherGetMatcherDebugCurrentOffset(e){return this.matcherGetMatcherDebugCurrentOffset(e)}matcherGetMatcherDebugLastOffset(e){return this.matcherGetMatcherDebugLastOffset(e)}matcherGetMatcherDebugOldestSnapshotOffset(e){return this.matcherGetMatcherDebugOldestSnapshotOffset(e)}matcherGetMatcherOrderbook(e){return this.matcherGetMatcherOrderbook(e)}matcherGetMatcherOrderbookAmountAssetPriceAsset(e){return this.matcherGetMatcherOrderbookAmountAssetPriceAsset(e)}matcherGetMatcherOrderbookBaseIdQuoteIdPublicKeyPublicKey(e){return this.matcherGetMatcherOrderbookBaseIdQuoteIdPublicKeyPublicKey(e)}matcherGetMatcherOrderbookBaseIdQuoteIdOrderId(e){return this.matcherGetMatcherOrderbookBaseIdQuoteIdOrderId(e)}matcherGetMatcherOrderbookBaseIdQuoteIdInfo(e){return this.matcherGetMatcherOrderbookBaseIdQuoteIdInfo(e)}matcherGetMatcherOrderbookBaseIdQuoteIdStatus(e){return this.matcherGetMatcherOrderbookBaseIdQuoteIdStatus(e)}matcherGetMatcherOrderbookBaseIdQuoteIdTradeableBalanceAddress(e){return this.matcherGetMatcherOrderbookBaseIdQuoteIdTradeableBalanceAddress(e)}matcherGetMatcherOrderbookPublicKey(e){return this.matcherGetMatcherOrderbookPublicKey(e)}matcherGetMatcherOrderbookPublicKeyOrderId(e){return this.matcherGetMatcherOrderbookPublicKeyOrderId(e)}matcherGetMatcherOrdersAddress(e){return this.matcherGetMatcherOrdersAddress(e)}matcherGetMatcherOrdersAddressOrderId(e){return this.matcherGetMatcherOrdersAddressOrderId(e)}matcherGetMatcherTransactionsOrderId(e){return this.matcherGetMatcherTransactionsOrderId(e)}matcherPostMatcherOrderbook(e){return this.matcherPostMatcherOrderbook(e)}matcherPostMatcherOrderbookMarket(e){return this.matcherPostMatcherOrderbookMarket(e)}matcherPostMatcherOrderbookCancel(e){return this.matcherPostMatcherOrderbookCancel(e)}matcherPostMatcherOrderbookBaseIdQuoteIdCancel(e){return this.matcherPostMatcherOrderbookBaseIdQuoteIdCancel(e)}matcherPostMatcherOrderbookAmountAssetPriceAssetCalculateFee(e){return this.matcherPostMatcherOrderbookAmountAssetPriceAssetCalculateFee(e)}matcherPostMatcherDebugSaveSnapshots(e){return this.matcherPostMatcherDebugSaveSnapshots(e)}matcherPostMatcherOrdersAddressCancel(e){return this.matcherPostMatcherOrdersAddressCancel(e)}matcherPostMatcherOrdersCancelOrderId(e){return this.matcherPostMatcherOrdersCancelOrderId(e)}matcherDeleteMatcherOrderbookBaseIdQuoteId(e){return this.matcherDeleteMatcherOrderbookBaseIdQuoteId(e)}matcherDeleteMatcherSettingsRatesAssetId(e){return this.matcherDeleteMatcherSettingsRatesAssetId(e)}matcherPutMatcherSettingsRatesAssetId(e){return this.matcherPutMatcherSettingsRatesAssetId(e)}nodeGetAddresses(e){return this.nodeGetAddresses(e)}nodeGetAddressesBalanceAddress(e){return this.nodeGetAddressesBalanceAddress(e)}nodeGetAddressesBalanceAddressConfirmations(e){return this.nodeGetAddressesBalanceAddressConfirmations(e)}nodeGetAddressesBalanceDetailsAddress(e){return this.nodeGetAddressesBalanceDetailsAddress(e)}nodeGetAddressesDataAddress(e){return this.nodeGetAddressesDataAddress(e)}nodeGetAddressesDataAddressKey(e){return this.nodeGetAddressesDataAddressKey(e)}nodeGetAddressesEffectiveBalanceAddress(e){return this.nodeGetAddressesEffectiveBalanceAddress(e)}nodeGetAddressesEffectiveBalanceAddressConfirmations(e){return this.nodeGetAddressesEffectiveBalanceAddressConfirmations(e)}nodeGetAddressesPublicKeyPublicKey(e){return this.nodeGetAddressesPublicKeyPublicKey(e)}nodeGetAddressesScriptInfoAddress(e){return this.nodeGetAddressesScriptInfoAddress(e)}nodeGetAddressesScriptInfoAddressMeta(e){return this.nodeGetAddressesScriptInfoAddressMeta(e)}nodeGetAddressesSeedAddress(e){return this.nodeGetAddressesSeedAddress(e)}nodeGetAddressesSeqFromTo(e){return this.nodeGetAddressesSeqFromTo(e)}nodeGetAddressesValidateAddress(e){return this.nodeGetAddressesValidateAddress(e)}nodeGetAliasByAddressAddress(e){return this.nodeGetAliasByAddressAddress(e)}nodeGetAliasByAliasAlias(e){return this.nodeGetAliasByAliasAlias(e)}nodeGetAssetsAssetIdDistributionHeightLimit(e){return this.nodeGetAssetsAssetIdDistributionHeightLimit(e)}nodeGetAssetsBalanceAddress(e){return this.nodeGetAssetsBalanceAddress(e)}nodeGetAssetsBalanceAddressAssetId(e){return this.nodeGetAssetsBalanceAddressAssetId(e)}nodeGetAssetsDetailsAssetId(e){return this.nodeGetAssetsDetailsAssetId(e)}nodeGetAssetsNftAddressLimitLimit(e){return this.nodeGetAssetsNftAddressLimitLimit(e)}nodeGetBlockchainRewards(e){return this.nodeGetBlockchainRewards(e)}nodeGetBlockchainRewardsHeight(e){return this.nodeGetBlockchainRewardsHeight(e)}nodeGetBlocksAddressAddressFromTo(e){return this.nodeGetBlocksAddressAddressFromTo(e)}nodeGetBlocksAtHeight(e){return this.nodeGetBlocksAtHeight(e)}nodeGetBlocksDelaySignatureBlockNum(e){return this.nodeGetBlocksDelaySignatureBlockNum(e)}nodeGetBlocksFirst(e){return this.nodeGetBlocksFirst(e)}nodeGetBlocksHeadersLast(e){return this.nodeGetBlocksHeadersLast(e)}nodeGetBlocksHeadersSeqFromTo(e){return this.nodeGetBlocksHeadersSeqFromTo(e)}nodeGetBlocksHeight(e){return this.nodeGetBlocksHeight(e)}nodeGetBlocksHeightSignature(e){return this.nodeGetBlocksHeightSignature(e)}nodeGetBlocksLast(e){return this.nodeGetBlocksLast(e)}nodeGetBlocksSeqFromTo(e){return this.nodeGetBlocksSeqFromTo(e)}nodeGetBlocksSignatureSignature(e){return this.nodeGetBlocksSignatureSignature(e)}nodeGetConsensusAlgo(e){return this.nodeGetConsensusAlgo(e)}nodeGetConsensusBasetarget(e){return this.nodeGetConsensusBasetarget(e)}nodeGetConsensusBasetargetBlockId(e){return this.nodeGetConsensusBasetargetBlockId(e)}nodeGetConsensusGeneratingbalanceAddress(e){return this.nodeGetConsensusGeneratingbalanceAddress(e)}nodeGetConsensusGenerationsignature(e){return this.nodeGetConsensusGenerationsignature(e)}nodeGetConsensusGenerationsignatureBlockId(e){return this.nodeGetConsensusGenerationsignatureBlockId(e)}nodeGetDebugBalancesHistoryAddress(e){return this.nodeGetDebugBalancesHistoryAddress(e)}nodeGetDebugBlocksHowMany(e){return this.nodeGetDebugBlocksHowMany(e)}nodeGetDebugConfigInfo(e){return this.nodeGetDebugConfigInfo(e)}nodeGetDebugHistoryInfo(e){return this.nodeGetDebugHistoryInfo(e)}nodeGetDebugInfo(e){return this.nodeGetDebugInfo(e)}nodeGetDebugMinerInfo(e){return this.nodeGetDebugMinerInfo(e)}nodeGetDebugPortfoliosAddress(e){return this.nodeGetDebugPortfoliosAddress(e)}nodeGetDebugState(e){return this.nodeGetDebugState(e)}nodeGetDebugStateChangesAddressAddress(e){return this.nodeGetDebugStateChangesAddressAddress(e)}nodeGetDebugStateChangesInfoId(e){return this.nodeGetDebugStateChangesInfoId(e)}nodeGetDebugStateWavesHeight(e){return this.nodeGetDebugStateWavesHeight(e)}nodeGetLeasingActiveAddress(e){return this.nodeGetLeasingActiveAddress(e)}nodeGetNodeState(e){return this.nodeGetNodeState(e)}nodeGetNodeVersion(e){return this.nodeGetNodeVersion(e)}nodeGetPeersAll(e){return this.nodeGetPeersAll(e)}nodeGetPeersBlacklisted(e){return this.nodeGetPeersBlacklisted(e)}nodeGetPeersConnected(e){return this.nodeGetPeersConnected(e)}nodeGetPeersSuspended(e){return this.nodeGetPeersSuspended(e)}nodeGetTransactionsAddressAddressLimitLimit(e){return this.nodeGetTransactionsAddressAddressLimitLimit(e)}nodeGetTransactionsInfoId(e){return this.nodeGetTransactionsInfoId(e)}nodeGetTransactionsStatus(e){return this.nodeGetTransactionsStatus(e)}nodeGetTransactionsUnconfirmed(e){return this.nodeGetTransactionsUnconfirmed(e)}nodeGetTransactionsUnconfirmedInfoId(e){return this.nodeGetTransactionsUnconfirmedInfoId(e)}nodeGetTransactionsUnconfirmedSize(e){return this.nodeGetTransactionsUnconfirmedSize(e)}nodeGetUtilsSeed(e){return this.nodeGetUtilsSeed(e)}nodeGetUtilsSeedLength(e){return this.nodeGetUtilsSeedLength(e)}nodeGetUtilsTime(e){return this.nodeGetUtilsTime(e)}nodeGetWalletSeed(e){return this.nodeGetWalletSeed(e)}nodePostAddresses(e){return this.nodePostAddresses(e)}nodePostAddressesDataAddress(e){return this.nodePostAddressesDataAddress(e)}nodePostAddressesSignAddress(e){return this.nodePostAddressesSignAddress(e)}nodePostAddressesSignTextAddress(e){return this.nodePostAddressesSignTextAddress(e)}nodePostAddressesVerifyAddress(e){return this.nodePostAddressesVerifyAddress(e)}nodePostAddressesVerifyTextAddress(e){return this.nodePostAddressesVerifyTextAddress(e)}nodePostDebugBlacklist(e){return this.nodePostDebugBlacklist(e)}nodePostDebugPrint(e){return this.nodePostDebugPrint(e)}nodePostDebugRollback(e){return this.nodePostDebugRollback(e)}nodePostDebugValidate(e){return this.nodePostDebugValidate(e)}nodePostNodeStop(e){return this.nodePostNodeStop(e)}nodePostPeersClearblacklist(e){return this.nodePostPeersClearblacklist(e)}nodePostPeersConnect(e){return this.nodePostPeersConnect(e)}nodePostTransactionsBroadcast(e){return this.nodePostTransactionsBroadcast(e)}nodePostTransactionsCalculateFee(e){return this.nodePostTransactionsCalculateFee(e)}nodePostTranasctionsSign(e){return this.nodePostTranasctionsSign(e)}nodePostTransactionsSignSignerAddress(e){return this.nodePostTransactionsSignSignerAddress(e)}nodePostTranasctionsStatus(e){return this.nodePostTranasctionsStatus(e)}nodePostUtilsHashFast(e){return this.nodePostUtilsHashFast(e)}nodePostUtilsHashSecure(e){return this.nodePostUtilsHashSecure(e)}nodePostUtilsScriptCompileCode(e){return this.nodePostUtilsScriptCompileCode(e)}nodePostUtilsScriptCompileWithImports(e){return this.nodePostUtilsScriptCompileWithImports(e)}nodePostUtilsScriptDecompile(e){return this.nodePostUtilsScriptDecompile(e)}nodePostUtilsScriptEstimate(e){return this.nodePostUtilsScriptEstimate(e)}nodePostUtilsSignPrivateKey(e){return this.nodePostUtilsSignPrivateKey(e)}nodePostUtilsTransactionsSerialize(e){return this.nodePostUtilsTransactionsSerialize(e)}nodeDeleteAddressesAddress(e){return this.nodeDeleteAddressesAddress(e)}nodeDeleteDebugRollbackToSignature(e){return this.nodeDeleteDebugRollbackToSignature(e)}publicGetAssets(e){return this.publicGetAssets(e)}publicGetPairs(e){return this.publicGetPairs(e)}publicGetCandlesBaseIdQuoteId(e){return this.publicGetCandlesBaseIdQuoteId(e)}publicGetTransactionsExchange(e){return this.publicGetTransactionsExchange(e)}privateGetDepositAddressesCurrency(e){return this.privateGetDepositAddressesCurrency(e)}privateGetDepositAddressesCurrencyPlatform(e){return this.privateGetDepositAddressesCurrencyPlatform(e)}privateGetPlatforms(e){return this.privateGetPlatforms(e)}privateGetDepositCurrencies(e){return this.privateGetDepositCurrencies(e)}privateGetWithdrawCurrencies(e){return this.privateGetWithdrawCurrencies(e)}privateGetWithdrawAddressesCurrencyAddress(e){return this.privateGetWithdrawAddressesCurrencyAddress(e)}privatePostOauth2Token(e){return this.privatePostOauth2Token(e)}forwardGetMatcherOrdersAddress(e){return this.forwardGetMatcherOrdersAddress(e)}forwardGetMatcherOrdersAddressOrderId(e){return this.forwardGetMatcherOrdersAddressOrderId(e)}forwardPostMatcherOrdersWavesAddressCancel(e){return this.forwardPostMatcherOrdersWavesAddressCancel(e)}marketGetTickers(e){return this.marketGetTickers(e)}}},9564:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetExchangeInfo(e){return this.publicGetExchangeInfo(e)}publicGetDepth(e){return this.publicGetDepth(e)}publicGetPing(e){return this.publicGetPing(e)}publicGetSystemStatus(e){return this.publicGetSystemStatus(e)}publicGetTickers24hr(e){return this.publicGetTickers24hr(e)}publicGetTicker24hr(e){return this.publicGetTicker24hr(e)}publicGetTime(e){return this.publicGetTime(e)}publicGetTrades(e){return this.publicGetTrades(e)}publicGetKlines(e){return this.publicGetKlines(e)}privateGetAccount(e){return this.privateGetAccount(e)}privateGetAllOrders(e){return this.privateGetAllOrders(e)}privateGetFunds(e){return this.privateGetFunds(e)}privateGetHistoricalTrades(e){return this.privateGetHistoricalTrades(e)}privateGetOpenOrders(e){return this.privateGetOpenOrders(e)}privateGetOrder(e){return this.privateGetOrder(e)}privateGetMyTrades(e){return this.privateGetMyTrades(e)}privatePostOrder(e){return this.privatePostOrder(e)}privatePostOrderTest(e){return this.privatePostOrderTest(e)}privatePostCreateAuthToken(e){return this.privatePostCreateAuthToken(e)}privateDeleteOrder(e){return this.privateDeleteOrder(e)}privateDeleteOpenOrders(e){return this.privateDeleteOpenOrders(e)}}},5307:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{webGetV1Healthcheck(e){return this.webGetV1Healthcheck(e)}v1PublicGetMarkets(e){return this.v1PublicGetMarkets(e)}v1PublicGetTickers(e){return this.v1PublicGetTickers(e)}v1PublicGetTicker(e){return this.v1PublicGetTicker(e)}v1PublicGetSymbols(e){return this.v1PublicGetSymbols(e)}v1PublicGetDepthResult(e){return this.v1PublicGetDepthResult(e)}v1PublicGetHistory(e){return this.v1PublicGetHistory(e)}v1PublicGetKline(e){return this.v1PublicGetKline(e)}v1PrivatePostAccountBalance(e){return this.v1PrivatePostAccountBalance(e)}v1PrivatePostOrderNew(e){return this.v1PrivatePostOrderNew(e)}v1PrivatePostOrderCancel(e){return this.v1PrivatePostOrderCancel(e)}v1PrivatePostOrders(e){return this.v1PrivatePostOrders(e)}v1PrivatePostAccountOrderHistory(e){return this.v1PrivatePostAccountOrderHistory(e)}v1PrivatePostAccountExecutedHistory(e){return this.v1PrivatePostAccountExecutedHistory(e)}v1PrivatePostAccountExecutedHistoryAll(e){return this.v1PrivatePostAccountExecutedHistoryAll(e)}v1PrivatePostAccountOrder(e){return this.v1PrivatePostAccountOrder(e)}v2PublicGetMarkets(e){return this.v2PublicGetMarkets(e)}v2PublicGetTicker(e){return this.v2PublicGetTicker(e)}v2PublicGetAssets(e){return this.v2PublicGetAssets(e)}v2PublicGetFee(e){return this.v2PublicGetFee(e)}v2PublicGetDepthMarket(e){return this.v2PublicGetDepthMarket(e)}v2PublicGetTradesMarket(e){return this.v2PublicGetTradesMarket(e)}v4PublicGetAssets(e){return this.v4PublicGetAssets(e)}v4PublicGetCollateralMarkets(e){return this.v4PublicGetCollateralMarkets(e)}v4PublicGetFee(e){return this.v4PublicGetFee(e)}v4PublicGetOrderbookMarket(e){return this.v4PublicGetOrderbookMarket(e)}v4PublicGetTicker(e){return this.v4PublicGetTicker(e)}v4PublicGetTradesMarket(e){return this.v4PublicGetTradesMarket(e)}v4PublicGetTime(e){return this.v4PublicGetTime(e)}v4PublicGetPing(e){return this.v4PublicGetPing(e)}v4PublicGetMarkets(e){return this.v4PublicGetMarkets(e)}v4PrivatePostCollateralAccountBalance(e){return this.v4PrivatePostCollateralAccountBalance(e)}v4PrivatePostCollateralAccountPositionsHistory(e){return this.v4PrivatePostCollateralAccountPositionsHistory(e)}v4PrivatePostCollateralAccountLeverage(e){return this.v4PrivatePostCollateralAccountLeverage(e)}v4PrivatePostCollateralAccountPositionsOpen(e){return this.v4PrivatePostCollateralAccountPositionsOpen(e)}v4PrivatePostCollateralAccountSummary(e){return this.v4PrivatePostCollateralAccountSummary(e)}v4PrivatePostMainAccountAddress(e){return this.v4PrivatePostMainAccountAddress(e)}v4PrivatePostMainAccountBalance(e){return this.v4PrivatePostMainAccountBalance(e)}v4PrivatePostMainAccountCreateNewAddress(e){return this.v4PrivatePostMainAccountCreateNewAddress(e)}v4PrivatePostMainAccountCodes(e){return this.v4PrivatePostMainAccountCodes(e)}v4PrivatePostMainAccountCodesApply(e){return this.v4PrivatePostMainAccountCodesApply(e)}v4PrivatePostMainAccountCodesMy(e){return this.v4PrivatePostMainAccountCodesMy(e)}v4PrivatePostMainAccountCodesHistory(e){return this.v4PrivatePostMainAccountCodesHistory(e)}v4PrivatePostMainAccountFiatDepositUrl(e){return this.v4PrivatePostMainAccountFiatDepositUrl(e)}v4PrivatePostMainAccountHistory(e){return this.v4PrivatePostMainAccountHistory(e)}v4PrivatePostMainAccountWithdraw(e){return this.v4PrivatePostMainAccountWithdraw(e)}v4PrivatePostMainAccountWithdrawPay(e){return this.v4PrivatePostMainAccountWithdrawPay(e)}v4PrivatePostMainAccountTransfer(e){return this.v4PrivatePostMainAccountTransfer(e)}v4PrivatePostTradeAccountBalance(e){return this.v4PrivatePostTradeAccountBalance(e)}v4PrivatePostTradeAccountExecutedHistory(e){return this.v4PrivatePostTradeAccountExecutedHistory(e)}v4PrivatePostTradeAccountOrder(e){return this.v4PrivatePostTradeAccountOrder(e)}v4PrivatePostTradeAccountOrderHistory(e){return this.v4PrivatePostTradeAccountOrderHistory(e)}v4PrivatePostOrderCollateralLimit(e){return this.v4PrivatePostOrderCollateralLimit(e)}v4PrivatePostOrderCollateralMarket(e){return this.v4PrivatePostOrderCollateralMarket(e)}v4PrivatePostOrderCollateralTriggerMarket(e){return this.v4PrivatePostOrderCollateralTriggerMarket(e)}v4PrivatePostOrderNew(e){return this.v4PrivatePostOrderNew(e)}v4PrivatePostOrderMarket(e){return this.v4PrivatePostOrderMarket(e)}v4PrivatePostOrderStockMarket(e){return this.v4PrivatePostOrderStockMarket(e)}v4PrivatePostOrderStopLimit(e){return this.v4PrivatePostOrderStopLimit(e)}v4PrivatePostOrderStopMarket(e){return this.v4PrivatePostOrderStopMarket(e)}v4PrivatePostOrderCancel(e){return this.v4PrivatePostOrderCancel(e)}v4PrivatePostOrders(e){return this.v4PrivatePostOrders(e)}v4PrivatePostProfileWebsocketToken(e){return this.v4PrivatePostProfileWebsocketToken(e)}}},3771:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{v1PubGetHistKline(e){return this.v1PubGetHistKline(e)}v1PubGetHistTrades(e){return this.v1PubGetHistTrades(e)}v1PublicGetInfo(e){return this.v1PublicGetInfo(e)}v1PublicGetInfoSymbol(e){return this.v1PublicGetInfoSymbol(e)}v1PublicGetSystemInfo(e){return this.v1PublicGetSystemInfo(e)}v1PublicGetMarketTrades(e){return this.v1PublicGetMarketTrades(e)}v1PublicGetToken(e){return this.v1PublicGetToken(e)}v1PublicGetTokenNetwork(e){return this.v1PublicGetTokenNetwork(e)}v1PublicGetFundingRates(e){return this.v1PublicGetFundingRates(e)}v1PublicGetFundingRateSymbol(e){return this.v1PublicGetFundingRateSymbol(e)}v1PublicGetFundingRateHistory(e){return this.v1PublicGetFundingRateHistory(e)}v1PublicGetFutures(e){return this.v1PublicGetFutures(e)}v1PublicGetFuturesSymbol(e){return this.v1PublicGetFuturesSymbol(e)}v1PrivateGetClientToken(e){return this.v1PrivateGetClientToken(e)}v1PrivateGetOrderOid(e){return this.v1PrivateGetOrderOid(e)}v1PrivateGetClientOrderClientOrderId(e){return this.v1PrivateGetClientOrderClientOrderId(e)}v1PrivateGetOrders(e){return this.v1PrivateGetOrders(e)}v1PrivateGetOrderbookSymbol(e){return this.v1PrivateGetOrderbookSymbol(e)}v1PrivateGetKline(e){return this.v1PrivateGetKline(e)}v1PrivateGetClientTradeTid(e){return this.v1PrivateGetClientTradeTid(e)}v1PrivateGetOrderOidTrades(e){return this.v1PrivateGetOrderOidTrades(e)}v1PrivateGetClientTrades(e){return this.v1PrivateGetClientTrades(e)}v1PrivateGetClientInfo(e){return this.v1PrivateGetClientInfo(e)}v1PrivateGetAssetDeposit(e){return this.v1PrivateGetAssetDeposit(e)}v1PrivateGetAssetHistory(e){return this.v1PrivateGetAssetHistory(e)}v1PrivateGetSubAccountAll(e){return this.v1PrivateGetSubAccountAll(e)}v1PrivateGetSubAccountAssets(e){return this.v1PrivateGetSubAccountAssets(e)}v1PrivateGetTokenInterest(e){return this.v1PrivateGetTokenInterest(e)}v1PrivateGetTokenInterestToken(e){return this.v1PrivateGetTokenInterestToken(e)}v1PrivateGetInterestHistory(e){return this.v1PrivateGetInterestHistory(e)}v1PrivateGetInterestRepay(e){return this.v1PrivateGetInterestRepay(e)}v1PrivateGetFundingFeeHistory(e){return this.v1PrivateGetFundingFeeHistory(e)}v1PrivateGetPositions(e){return this.v1PrivateGetPositions(e)}v1PrivateGetPositionSymbol(e){return this.v1PrivateGetPositionSymbol(e)}v1PrivatePostOrder(e){return this.v1PrivatePostOrder(e)}v1PrivatePostAssetMainSubTransfer(e){return this.v1PrivatePostAssetMainSubTransfer(e)}v1PrivatePostAssetWithdraw(e){return this.v1PrivatePostAssetWithdraw(e)}v1PrivatePostInterestRepay(e){return this.v1PrivatePostInterestRepay(e)}v1PrivatePostClientAccountMode(e){return this.v1PrivatePostClientAccountMode(e)}v1PrivatePostClientLeverage(e){return this.v1PrivatePostClientLeverage(e)}v1PrivateDeleteOrder(e){return this.v1PrivateDeleteOrder(e)}v1PrivateDeleteClientOrder(e){return this.v1PrivateDeleteClientOrder(e)}v1PrivateDeleteOrders(e){return this.v1PrivateDeleteOrders(e)}v1PrivateDeleteAssetWithdraw(e){return this.v1PrivateDeleteAssetWithdraw(e)}v2PrivateGetClientHolding(e){return this.v2PrivateGetClientHolding(e)}v3PrivateGetAlgoOrderOid(e){return this.v3PrivateGetAlgoOrderOid(e)}v3PrivateGetAlgoOrders(e){return this.v3PrivateGetAlgoOrders(e)}v3PrivateGetBalances(e){return this.v3PrivateGetBalances(e)}v3PrivateGetAccountinfo(e){return this.v3PrivateGetAccountinfo(e)}v3PrivateGetPositions(e){return this.v3PrivateGetPositions(e)}v3PrivateGetBuypower(e){return this.v3PrivateGetBuypower(e)}v3PrivatePostAlgoOrder(e){return this.v3PrivatePostAlgoOrder(e)}v3PrivatePutOrderOid(e){return this.v3PrivatePutOrderOid(e)}v3PrivatePutOrderClientOid(e){return this.v3PrivatePutOrderClientOid(e)}v3PrivatePutAlgoOrderOid(e){return this.v3PrivatePutAlgoOrderOid(e)}v3PrivatePutAlgoOrderClientOid(e){return this.v3PrivatePutAlgoOrderClientOid(e)}v3PrivateDeleteAlgoOrderOid(e){return this.v3PrivateDeleteAlgoOrderOid(e)}v3PrivateDeleteAlgoOrdersPending(e){return this.v3PrivateDeleteAlgoOrdersPending(e)}v3PrivateDeleteAlgoOrdersPendingSymbol(e){return this.v3PrivateDeleteAlgoOrdersPendingSymbol(e)}v3PrivateDeleteOrdersPending(e){return this.v3PrivateDeleteOrdersPending(e)}}},5790:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetDepthPair(e){return this.publicGetDepthPair(e)}publicGetInfo(e){return this.publicGetInfo(e)}publicGetTickerPair(e){return this.publicGetTickerPair(e)}publicGetTradesPair(e){return this.publicGetTradesPair(e)}privatePostActiveOrders(e){return this.privatePostActiveOrders(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostGetDepositAddress(e){return this.privatePostGetDepositAddress(e)}privatePostGetInfo(e){return this.privatePostGetInfo(e)}privatePostOrderInfo(e){return this.privatePostOrderInfo(e)}privatePostTrade(e){return this.privatePostTrade(e)}privatePostTradeHistory(e){return this.privatePostTradeHistory(e)}privatePostWithdrawCoinsToAddress(e){return this.privatePostWithdrawCoinsToAddress(e)}}},5224:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetDepthPair(e){return this.publicGetDepthPair(e)}publicGetCurrenciesPair(e){return this.publicGetCurrenciesPair(e)}publicGetCurrenciesAll(e){return this.publicGetCurrenciesAll(e)}publicGetCurrencyPairsPair(e){return this.publicGetCurrencyPairsPair(e)}publicGetCurrencyPairsAll(e){return this.publicGetCurrencyPairsAll(e)}publicGetLastPricePair(e){return this.publicGetLastPricePair(e)}publicGetTickerPair(e){return this.publicGetTickerPair(e)}publicGetTradesPair(e){return this.publicGetTradesPair(e)}privatePostActiveOrders(e){return this.privatePostActiveOrders(e)}privatePostCancelOrder(e){return this.privatePostCancelOrder(e)}privatePostDepositHistory(e){return this.privatePostDepositHistory(e)}privatePostGetIdInfo(e){return this.privatePostGetIdInfo(e)}privatePostGetInfo(e){return this.privatePostGetInfo(e)}privatePostGetInfo2(e){return this.privatePostGetInfo2(e)}privatePostGetPersonalInfo(e){return this.privatePostGetPersonalInfo(e)}privatePostTrade(e){return this.privatePostTrade(e)}privatePostTradeHistory(e){return this.privatePostTradeHistory(e)}privatePostWithdraw(e){return this.privatePostWithdraw(e)}privatePostWithdrawHistory(e){return this.privatePostWithdrawHistory(e)}ecapiPostCreateInvoice(e){return this.ecapiPostCreateInvoice(e)}ecapiPostGetInvoice(e){return this.ecapiPostGetInvoice(e)}ecapiPostGetInvoiceIdsByOrderNumber(e){return this.ecapiPostGetInvoiceIdsByOrderNumber(e)}ecapiPostCancelInvoice(e){return this.ecapiPostCancelInvoice(e)}tlapiPostGetPositions(e){return this.tlapiPostGetPositions(e)}tlapiPostPositionHistory(e){return this.tlapiPostPositionHistory(e)}tlapiPostActivePositions(e){return this.tlapiPostActivePositions(e)}tlapiPostCreatePosition(e){return this.tlapiPostCreatePosition(e)}tlapiPostChangePosition(e){return this.tlapiPostChangePosition(e)}tlapiPostCancelPosition(e){return this.tlapiPostCancelPosition(e)}fapiGetGroupsGroupId(e){return this.fapiGetGroupsGroupId(e)}fapiGetLastPriceGroupIdPair(e){return this.fapiGetLastPriceGroupIdPair(e)}fapiGetTickerGroupIdPair(e){return this.fapiGetTickerGroupIdPair(e)}fapiGetTradesGroupIdPair(e){return this.fapiGetTradesGroupIdPair(e)}fapiGetDepthGroupIdPair(e){return this.fapiGetDepthGroupIdPair(e)}}},307:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{spotV1PublicGetMarkets(e){return this.spotV1PublicGetMarkets(e)}spotV1PublicGetTicker(e){return this.spotV1PublicGetTicker(e)}spotV1PublicGetAllTicker(e){return this.spotV1PublicGetAllTicker(e)}spotV1PublicGetDepth(e){return this.spotV1PublicGetDepth(e)}spotV1PublicGetTrades(e){return this.spotV1PublicGetTrades(e)}spotV1PublicGetKline(e){return this.spotV1PublicGetKline(e)}spotV1PublicGetGetGroupMarkets(e){return this.spotV1PublicGetGetGroupMarkets(e)}spotV1PublicGetGetFeeInfo(e){return this.spotV1PublicGetGetFeeInfo(e)}spotV1PrivateGetOrder(e){return this.spotV1PrivateGetOrder(e)}spotV1PrivateGetOrderMoreV2(e){return this.spotV1PrivateGetOrderMoreV2(e)}spotV1PrivateGetCancelOrder(e){return this.spotV1PrivateGetCancelOrder(e)}spotV1PrivateGetCancelAllOrdersAfter(e){return this.spotV1PrivateGetCancelAllOrdersAfter(e)}spotV1PrivateGetGetOrder(e){return this.spotV1PrivateGetGetOrder(e)}spotV1PrivateGetGetOrders(e){return this.spotV1PrivateGetGetOrders(e)}spotV1PrivateGetGetOrdersNew(e){return this.spotV1PrivateGetGetOrdersNew(e)}spotV1PrivateGetGetOrdersIgnoreTradeType(e){return this.spotV1PrivateGetGetOrdersIgnoreTradeType(e)}spotV1PrivateGetGetUnfinishedOrdersIgnoreTradeType(e){return this.spotV1PrivateGetGetUnfinishedOrdersIgnoreTradeType(e)}spotV1PrivateGetGetFinishedAndPartialOrders(e){return this.spotV1PrivateGetGetFinishedAndPartialOrders(e)}spotV1PrivateGetGetAccountInfo(e){return this.spotV1PrivateGetGetAccountInfo(e)}spotV1PrivateGetGetUserAddress(e){return this.spotV1PrivateGetGetUserAddress(e)}spotV1PrivateGetGetPayinAddress(e){return this.spotV1PrivateGetGetPayinAddress(e)}spotV1PrivateGetGetWithdrawAddress(e){return this.spotV1PrivateGetGetWithdrawAddress(e)}spotV1PrivateGetGetWithdrawRecord(e){return this.spotV1PrivateGetGetWithdrawRecord(e)}spotV1PrivateGetGetChargeRecord(e){return this.spotV1PrivateGetGetChargeRecord(e)}spotV1PrivateGetGetCnyWithdrawRecord(e){return this.spotV1PrivateGetGetCnyWithdrawRecord(e)}spotV1PrivateGetGetCnyChargeRecord(e){return this.spotV1PrivateGetGetCnyChargeRecord(e)}spotV1PrivateGetWithdraw(e){return this.spotV1PrivateGetWithdraw(e)}spotV1PrivateGetAddSubUser(e){return this.spotV1PrivateGetAddSubUser(e)}spotV1PrivateGetGetSubUserList(e){return this.spotV1PrivateGetGetSubUserList(e)}spotV1PrivateGetDoTransferFunds(e){return this.spotV1PrivateGetDoTransferFunds(e)}spotV1PrivateGetCreateSubUserKey(e){return this.spotV1PrivateGetCreateSubUserKey(e)}spotV1PrivateGetGetLeverAssetsInfo(e){return this.spotV1PrivateGetGetLeverAssetsInfo(e)}spotV1PrivateGetGetLeverBills(e){return this.spotV1PrivateGetGetLeverBills(e)}spotV1PrivateGetTransferInLever(e){return this.spotV1PrivateGetTransferInLever(e)}spotV1PrivateGetTransferOutLever(e){return this.spotV1PrivateGetTransferOutLever(e)}spotV1PrivateGetLoan(e){return this.spotV1PrivateGetLoan(e)}spotV1PrivateGetCancelLoan(e){return this.spotV1PrivateGetCancelLoan(e)}spotV1PrivateGetGetLoans(e){return this.spotV1PrivateGetGetLoans(e)}spotV1PrivateGetGetLoanRecords(e){return this.spotV1PrivateGetGetLoanRecords(e)}spotV1PrivateGetBorrow(e){return this.spotV1PrivateGetBorrow(e)}spotV1PrivateGetAutoBorrow(e){return this.spotV1PrivateGetAutoBorrow(e)}spotV1PrivateGetRepay(e){return this.spotV1PrivateGetRepay(e)}spotV1PrivateGetDoAllRepay(e){return this.spotV1PrivateGetDoAllRepay(e)}spotV1PrivateGetGetRepayments(e){return this.spotV1PrivateGetGetRepayments(e)}spotV1PrivateGetGetFinanceRecords(e){return this.spotV1PrivateGetGetFinanceRecords(e)}spotV1PrivateGetChangeInvestMark(e){return this.spotV1PrivateGetChangeInvestMark(e)}spotV1PrivateGetChangeLoop(e){return this.spotV1PrivateGetChangeLoop(e)}spotV1PrivateGetGetCrossAssets(e){return this.spotV1PrivateGetGetCrossAssets(e)}spotV1PrivateGetGetCrossBills(e){return this.spotV1PrivateGetGetCrossBills(e)}spotV1PrivateGetTransferInCross(e){return this.spotV1PrivateGetTransferInCross(e)}spotV1PrivateGetTransferOutCross(e){return this.spotV1PrivateGetTransferOutCross(e)}spotV1PrivateGetDoCrossLoan(e){return this.spotV1PrivateGetDoCrossLoan(e)}spotV1PrivateGetDoCrossRepay(e){return this.spotV1PrivateGetDoCrossRepay(e)}spotV1PrivateGetGetCrossRepayRecords(e){return this.spotV1PrivateGetGetCrossRepayRecords(e)}contractV1PublicGetDepth(e){return this.contractV1PublicGetDepth(e)}contractV1PublicGetFundingRate(e){return this.contractV1PublicGetFundingRate(e)}contractV1PublicGetIndexKline(e){return this.contractV1PublicGetIndexKline(e)}contractV1PublicGetIndexPrice(e){return this.contractV1PublicGetIndexPrice(e)}contractV1PublicGetKline(e){return this.contractV1PublicGetKline(e)}contractV1PublicGetMarkKline(e){return this.contractV1PublicGetMarkKline(e)}contractV1PublicGetMarkPrice(e){return this.contractV1PublicGetMarkPrice(e)}contractV1PublicGetTicker(e){return this.contractV1PublicGetTicker(e)}contractV1PublicGetTrade(e){return this.contractV1PublicGetTrade(e)}contractV2PublicGetAllForceOrders(e){return this.contractV2PublicGetAllForceOrders(e)}contractV2PublicGetConfigMarketList(e){return this.contractV2PublicGetConfigMarketList(e)}contractV2PublicGetTopLongShortAccountRatio(e){return this.contractV2PublicGetTopLongShortAccountRatio(e)}contractV2PublicGetTopLongShortPositionRatio(e){return this.contractV2PublicGetTopLongShortPositionRatio(e)}contractV2PublicGetFundingRate(e){return this.contractV2PublicGetFundingRate(e)}contractV2PublicGetPremiumIndex(e){return this.contractV2PublicGetPremiumIndex(e)}contractV2PrivateGetFundBalance(e){return this.contractV2PrivateGetFundBalance(e)}contractV2PrivateGetFundGetAccount(e){return this.contractV2PrivateGetFundGetAccount(e)}contractV2PrivateGetFundGetBill(e){return this.contractV2PrivateGetFundGetBill(e)}contractV2PrivateGetFundGetBillTypeList(e){return this.contractV2PrivateGetFundGetBillTypeList(e)}contractV2PrivateGetFundMarginHistory(e){return this.contractV2PrivateGetFundMarginHistory(e)}contractV2PrivateGetPositionsGetPositions(e){return this.contractV2PrivateGetPositionsGetPositions(e)}contractV2PrivateGetPositionsGetNominalValue(e){return this.contractV2PrivateGetPositionsGetNominalValue(e)}contractV2PrivateGetPositionsMarginInfo(e){return this.contractV2PrivateGetPositionsMarginInfo(e)}contractV2PrivateGetSettingGet(e){return this.contractV2PrivateGetSettingGet(e)}contractV2PrivateGetTradeGetAllOrders(e){return this.contractV2PrivateGetTradeGetAllOrders(e)}contractV2PrivateGetTradeGetOrder(e){return this.contractV2PrivateGetTradeGetOrder(e)}contractV2PrivateGetTradeGetOrderAlgos(e){return this.contractV2PrivateGetTradeGetOrderAlgos(e)}contractV2PrivateGetTradeGetTradeList(e){return this.contractV2PrivateGetTradeGetTradeList(e)}contractV2PrivateGetTradeGetUndoneOrders(e){return this.contractV2PrivateGetTradeGetUndoneOrders(e)}contractV2PrivateGetTradeTradeHistory(e){return this.contractV2PrivateGetTradeTradeHistory(e)}contractV2PrivatePostActivityBuyTicket(e){return this.contractV2PrivatePostActivityBuyTicket(e)}contractV2PrivatePostFundTransferFund(e){return this.contractV2PrivatePostFundTransferFund(e)}contractV2PrivatePostPositionsSetMarginCoins(e){return this.contractV2PrivatePostPositionsSetMarginCoins(e)}contractV2PrivatePostPositionsUpdateAppendUSDValue(e){return this.contractV2PrivatePostPositionsUpdateAppendUSDValue(e)}contractV2PrivatePostPositionsUpdateMargin(e){return this.contractV2PrivatePostPositionsUpdateMargin(e)}contractV2PrivatePostSettingSetLeverage(e){return this.contractV2PrivatePostSettingSetLeverage(e)}contractV2PrivatePostSettingSetPositionsMode(e){return this.contractV2PrivatePostSettingSetPositionsMode(e)}contractV2PrivatePostTradeBatchOrder(e){return this.contractV2PrivatePostTradeBatchOrder(e)}contractV2PrivatePostTradeBatchCancelOrder(e){return this.contractV2PrivatePostTradeBatchCancelOrder(e)}contractV2PrivatePostTradeCancelAlgos(e){return this.contractV2PrivatePostTradeCancelAlgos(e)}contractV2PrivatePostTradeCancelAllOrders(e){return this.contractV2PrivatePostTradeCancelAllOrders(e)}contractV2PrivatePostTradeCancelOrder(e){return this.contractV2PrivatePostTradeCancelOrder(e)}contractV2PrivatePostTradeOrder(e){return this.contractV2PrivatePostTradeOrder(e)}contractV2PrivatePostTradeOrderAlgo(e){return this.contractV2PrivatePostTradeOrderAlgo(e)}contractV2PrivatePostTradeUpdateOrderAlgo(e){return this.contractV2PrivatePostTradeUpdateOrderAlgo(e)}}},3565:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(3043);class r extends s.e{publicGetIdAll(e){return this.publicGetIdAll(e)}publicGetIdMarket(e){return this.publicGetIdMarket(e)}publicGetIdOrderbook(e){return this.publicGetIdOrderbook(e)}publicGetIdTicker(e){return this.publicGetIdTicker(e)}publicGetIdTrades(e){return this.publicGetIdTrades(e)}privatePostInfo(e){return this.privatePostInfo(e)}privatePostTrade(e){return this.privatePostTrade(e)}privatePostCancel(e){return this.privatePostCancel(e)}privatePostOrderbook(e){return this.privatePostOrderbook(e)}privatePostOrders(e){return this.privatePostOrders(e)}privatePostTransfer(e){return this.privatePostTransfer(e)}privatePostWithdraw(e){return this.privatePostWithdraw(e)}privatePostHistory(e){return this.privatePostHistory(e)}privatePostTransactions(e){return this.privatePostTransactions(e)}v1_01PublicGetTradingTicker(e){return this.v1_01PublicGetTradingTicker(e)}v1_01PublicGetTradingTickerSymbol(e){return this.v1_01PublicGetTradingTickerSymbol(e)}v1_01PublicGetTradingStats(e){return this.v1_01PublicGetTradingStats(e)}v1_01PublicGetTradingStatsSymbol(e){return this.v1_01PublicGetTradingStatsSymbol(e)}v1_01PublicGetTradingOrderbookSymbol(e){return this.v1_01PublicGetTradingOrderbookSymbol(e)}v1_01PublicGetTradingTransactionsSymbol(e){return this.v1_01PublicGetTradingTransactionsSymbol(e)}v1_01PublicGetTradingCandleHistorySymbolResolution(e){return this.v1_01PublicGetTradingCandleHistorySymbolResolution(e)}v1_01PrivateGetApiPaymentsDepositsCryptoAddresses(e){return this.v1_01PrivateGetApiPaymentsDepositsCryptoAddresses(e)}v1_01PrivateGetPaymentsWithdrawalDetailId(e){return this.v1_01PrivateGetPaymentsWithdrawalDetailId(e)}v1_01PrivateGetPaymentsDepositDetailId(e){return this.v1_01PrivateGetPaymentsDepositDetailId(e)}v1_01PrivateGetTradingOffer(e){return this.v1_01PrivateGetTradingOffer(e)}v1_01PrivateGetTradingStopOffer(e){return this.v1_01PrivateGetTradingStopOffer(e)}v1_01PrivateGetTradingConfigSymbol(e){return this.v1_01PrivateGetTradingConfigSymbol(e)}v1_01PrivateGetTradingHistoryTransactions(e){return this.v1_01PrivateGetTradingHistoryTransactions(e)}v1_01PrivateGetBalancesBITBAYHistory(e){return this.v1_01PrivateGetBalancesBITBAYHistory(e)}v1_01PrivateGetBalancesBITBAYBalance(e){return this.v1_01PrivateGetBalancesBITBAYBalance(e)}v1_01PrivateGetFiatCantorRateBaseIdQuoteId(e){return this.v1_01PrivateGetFiatCantorRateBaseIdQuoteId(e)}v1_01PrivateGetFiatCantorHistory(e){return this.v1_01PrivateGetFiatCantorHistory(e)}v1_01PrivatePostTradingOfferSymbol(e){return this.v1_01PrivatePostTradingOfferSymbol(e)}v1_01PrivatePostTradingStopOfferSymbol(e){return this.v1_01PrivatePostTradingStopOfferSymbol(e)}v1_01PrivatePostTradingConfigSymbol(e){return this.v1_01PrivatePostTradingConfigSymbol(e)}v1_01PrivatePostBalancesBITBAYBalance(e){return this.v1_01PrivatePostBalancesBITBAYBalance(e)}v1_01PrivatePostBalancesBITBAYBalanceTransferSourceDestination(e){return this.v1_01PrivatePostBalancesBITBAYBalanceTransferSourceDestination(e)}v1_01PrivatePostFiatCantorExchange(e){return this.v1_01PrivatePostFiatCantorExchange(e)}v1_01PrivateDeleteTradingOfferSymbolIdSidePrice(e){return this.v1_01PrivateDeleteTradingOfferSymbolIdSidePrice(e)}v1_01PrivateDeleteTradingStopOfferSymbolIdSidePrice(e){return this.v1_01PrivateDeleteTradingStopOfferSymbolIdSidePrice(e)}v1_01PrivatePutBalancesBITBAYBalanceId(e){return this.v1_01PrivatePutBalancesBITBAYBalanceId(e)}}},9869:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6696),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"ace",name:"ACE",countries:["TW"],version:"v2",rateLimit:100,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,createOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!1,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPositions:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!1,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,setLeverage:!1,setMarginMode:!1,transfer:!1,withdraw:!1},timeframes:{"1m":1,"5m":5,"10m":10,"30m":10,"1h":60,"2h":120,"4h":240,"8h":480,"12h":720,"1d":24,"1w":70,"1M":31},urls:{logo:"https://user-images.githubusercontent.com/1294454/216908003-fb314cf6-e66e-471c-b91d-1d86e4baaa90.jpg",api:{public:"https://ace.io/polarisex",private:"https://ace.io/polarisex/open"},www:"https://ace.io/",doc:["https://github.com/ace-exchange/ace-offical-api-docs"],fees:"https://helpcenter.ace.io/hc/zh-tw/articles/360018609132-%E8%B2%BB%E7%8E%87%E8%AA%AA%E6%98%8E"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["oapi/v2/list/tradePrice","oapi/v2/list/marketPair","open/v2/public/getOrderBook"]},private:{post:["v2/coin/customerAccount","v2/kline/getKline","v2/order/order","v2/order/cancel","v2/order/getOrderList","v2/order/showOrderStatus","v2/order/showOrderHistory","v2/order/getTradeList"]}},fees:{trading:{percentage:!0,maker:this.parseNumber("0.0005"),taker:this.parseNumber("0.001")}},options:{brokerId:"ccxt"},precisionMode:n.sh,exceptions:{exact:{2003:r.InvalidOrder,2004:r.InvalidOrder,2005:r.InvalidOrder,2021:r.InsufficientFunds,2036:r.InvalidOrder,2039:r.InvalidOrder,2053:r.InvalidOrder,2061:r.BadRequest,2063:r.InvalidOrder,9996:r.BadRequest,10012:r.AuthenticationError,20182:r.AuthenticationError,20183:r.InvalidOrder},broad:{}},commonCurrencies:{}})}async fetchMarkets(e={}){const t=await this.publicGetOapiV2ListMarketPair(),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"base"),a=this.safeCurrencyCode(r),n=this.safeString(s,"quote"),o=this.safeCurrencyCode(n),d=r+"/"+n;i.push({id:this.safeString(s,"symbol"),uppercaseId:void 0,symbol:d,base:a,baseId:this.safeInteger(s,"baseCurrencyId"),quote:o,quoteId:this.safeInteger(s,"quoteCurrencyId"),settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,derivative:!1,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,limits:{amount:{min:this.safeNumber(s,"minLimitBaseAmount"),max:this.safeNumber(s,"maxLimitBaseAmount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},leverage:{min:void 0,max:void 0}},precision:{price:this.parseNumber(this.parsePrecision(this.safeString(s,"quotePrecision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(s,"basePrecision")))},active:void 0,info:s})}return i}parseTicker(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeSymbol(i,t);return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"last_price"),last:this.safeString(e,"last_price"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"base_volume"),quoteVolume:this.safeString(e,"quote_volume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s=await this.publicGetOapiV2ListTradePrice(t),r=i.id,a=this.safeValue(s,r,{});return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetOapiV2ListTradePrice(),s=[],r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeMarket(t),n=this.safeValue(i,t),o=this.parseTicker(n,a);s.push(o)}return this.filterByArray(s,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={quoteCurrencyId:s.quoteId,baseCurrencyId:s.baseId};void 0!==t&&(r.depth=t);const a=await this.publicGetOpenV2PublicGetOrderBook(this.extend(r,i)),n=this.safeValue(a,"attachment");return this.parseOrderBook(n,s.symbol,void 0,"bids","asks")}parseOHLCV(e,t=undefined){const i=this.safeString(e,"createTime");let s=this.parse8601(i);return void 0!==s&&(s-=288e5),[s,this.safeNumber(e,"openPrice"),this.safeNumber(e,"highPrice"),this.safeNumber(e,"lowPrice"),this.safeNumber(e,"closePrice"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={duration:this.timeframes[t],quoteCurrencyId:a.quoteId,baseCurrencyId:a.baseId};void 0!==s&&(n.limit=s),void 0!==i&&(n.startTime=i);const o=await this.privatePostV2KlineGetKline(this.extend(n,r)),d=this.safeValue(o,"attachment",[]);return this.parseOHLCVs(d,a,t,i,s)}parseOrderStatus(e){return this.safeString({0:"open",1:"open",2:"closed",4:"canceled",5:"canceled"},e,void 0)}parseOrder(e,t=undefined){let i,s,r,a,n,o,d,c,h,u,l;if("string"==typeof e)i=e;else{if(i=this.safeString(e,"orderNo"),s=this.safeInteger(e,"orderTimeStamp"),void 0===s){const t=this.safeString(e,"orderTime");void 0!==t&&(s=this.parse8601(t),s-=288e5)}const t=this.safeNumber(e,"buyOrSell");void 0!==t&&(o=1===t?"buy":"sell"),n=this.safeString(e,"num"),a=this.safeString(e,"price");const p=this.safeString(e,"quoteCurrencyName"),f=this.safeString(e,"baseCurrencyName");void 0!==p&&void 0!==f&&(r=f+"/"+p);const m=this.safeNumber(e,"type");void 0!==m&&(d=1===m?"limit":"market"),h=this.safeString(e,"tradeNum"),u=this.safeString(e,"remainNum"),c=this.parseOrderStatus(this.safeString(e,"status")),l=this.safeString(e,"averagePrice")}return this.safeOrder({id:i,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:r,type:d,timeInForce:void 0,postOnly:void 0,side:o,price:a,stopPrice:void 0,amount:n,cost:void 0,average:l,filled:h,remaining:u,status:c,fee:void 0,trades:void 0,info:e},t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),d=i.toUpperCase(),c={baseCurrencyId:n.baseId,quoteCurrencyId:n.quoteId,type:"LIMIT"===o?1:2,buyOrSell:"BUY"===d?1:2,num:this.amountToPrecision(e,s)};"limit"===t&&(c.price=this.priceToPrecision(e,r));const h=await this.privatePostV2OrderOrder(this.extend(c,a)),u=this.safeValue(h,"attachment");return this.parseOrder(u,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderNo:e};return await this.privatePostV2OrderCancel(this.extend(s,i))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderNo:e},r=await this.privatePostV2OrderShowOrderStatus(this.extend(s,i)),a=this.safeValue(r,"attachment");return this.parseOrder(a,void 0)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires the symbol argument");await this.loadMarkets();const a=this.market(e),n={quoteCurrencyId:a.quoteId,baseCurrencyId:a.baseId};void 0!==i&&(n.size=i);const o=await this.privatePostV2OrderGetOrderList(this.extend(n,s)),d=this.safeValue(o,"attachment");return this.parseOrders(d,a,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"tradeNo"),s=this.safeString(e,"price"),r=this.safeString(e,"num");let n=this.safeInteger(e,"tradeTimestamp");if(void 0===n){const t=this.safeString2(e,"time","tradeTime");n=this.parse8601(t),n-=288e5}let o=t.symbol;const d=this.safeString(e,"quoteCurrencyName"),c=this.safeString(e,"baseCurrencyName");let h;void 0!==d&&void 0!==c&&(o=c+"/"+d);const u=this.safeNumber(e,"buyOrSell");void 0!==u&&(h=1===u?"buy":"sell");const l=this.safeString(e,"fee");let p;if(void 0!==l){const t=this.safeString(e,"feeSave");p={cost:a.O.stringSub(l,t),currency:d}}return this.safeTrade({info:e,id:i,order:this.safeString(e,"orderNo"),symbol:o,side:h,type:void 0,takerOrMaker:void 0,price:s,amount:r,cost:void 0,fee:p,timestamp:n,datetime:this.iso8601(n)},t)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.safeMarket(t),n={orderNo:e},o=await this.privatePostV2OrderShowOrderHistory(this.extend(n,r)),d=this.safeValue(o,"attachment"),c=this.safeValue(d,"trades");return void 0===c?c:await this.parseTrades(c,a,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.safeMarket(e),a={};void 0!==r.id&&(a.quoteCurrencyId=r.quoteId,a.baseCurrencyId=r.baseId),void 0!==i&&(a.size=i);const n=await this.privatePostV2OrderGetTradeList(this.extend(a,s)),o=this.safeValue(n,"attachment",[]);return this.parseTrades(o,r,t,i)}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currencyName"),a=this.safeCurrencyCode(r),n=this.safeString(s,"amount"),o={free:this.safeString(s,"cashAmount"),total:n};t[a]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostV2CoinCustomerAccount(e),i=this.safeValue(t,"attachment",[]);return this.parseBalance(i)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if(void 0===r&&(r={}),"private"===t){this.checkRequiredCredentials();const e=this.milliseconds();let t="ACE_SIGN"+this.secret;const n=this.extend({apiKey:this.apiKey,timeStamp:e},s),d=Object.keys(n),c=this.sortBy(d,0);for(let e=0;e<c.length;e++){const i=c[e];t+=this.safeString(n,i)}const h=this.hash(this.encode(t),o.J,"hex");if(n.signKey=h,r={"Content-Type":"application/x-www-form-urlencoded"},"POST"===i){const e=this.safeString(this.options,"brokerId");void 0!==e&&(r.Referer=e)}a=this.urlencode(n)}else"public"===t&&"GET"===i&&Object.keys(d).length&&(n+="?"+this.urlencode(d));return n=this.urls.api[t]+n,{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,d){if(void 0===n)return;const c=this.id+" "+a,h=this.safeNumber(n,"status",200);h>200&&(this.throwExactlyMatchedException(this.exceptions.exact,h,c),this.throwBroadlyMatchedException(this.exceptions.broad,h,c))}}},5660:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(9650),r=i(6689),a=i(9292);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"alpaca",name:"Alpaca",countries:["US"],rateLimit:333,hostname:"alpaca.markets",pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/187234005-b864db3d-f1e3-447a-aaf9-a9fc7b955d07.jpg",www:"https://alpaca.markets",api:{public:"https://api.{hostname}/{version}",private:"https://api.{hostname}/{version}",cryptoPublic:"https://data.{hostname}/{version}",markets:"https://api.{hostname}/{version}"},test:{public:"https://paper-api.{hostname}/{version}",private:"https://paper-api.{hostname}/{version}",cryptoPublic:"https://data.{hostname}/{version}",markets:"https://api.{hostname}/{version}"},doc:"https://alpaca.markets/docs/",fees:"https://alpaca.markets/support/what-are-the-fees-associated-with-crypto-trading/"},has:{CORS:!1,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchClosedOrders:!1,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRates:!1,fetchL1OrderBook:!0,fetchL2OrderBook:!1,fetchMarkets:!0,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPositions:!1,fetchStatus:!1,fetchTicker:!1,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawals:!1,setLeverage:!1,setMarginMode:!1,transfer:!1,withdraw:!1},api:{markets:{get:["assets/public/beta"]},private:{get:["account","orders","orders/{order_id}","positions","positions/{symbol}","account/activities/{activity_type}"],post:["orders"],delete:["orders","orders/{order_id}"]},cryptoPublic:{get:["crypto/latest/orderbooks","crypto/trades","crypto/quotes","crypto/latest/quotes","crypto/bars","crypto/snapshots"]}},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1H","2h":"2H","4h":"4H","6h":"6H","8h":"8H","12h":"12H","1d":"1D","3d":"3D","1w":"1W","1M":"1M"},precisionMode:a.sh,requiredCredentials:{apiKey:!0,secret:!0},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.003"),taker:this.parseNumber("0.003"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.003")],[this.parseNumber("500000"),this.parseNumber("0.0028")],[this.parseNumber("1000000"),this.parseNumber("0.0025")],[this.parseNumber("5000000"),this.parseNumber("0.002")],[this.parseNumber("10000000"),this.parseNumber("0.0018")],[this.parseNumber("25000000"),this.parseNumber("0.0015")],[this.parseNumber("50000000"),this.parseNumber("0.00125")],[this.parseNumber("100000000"),this.parseNumber("0.001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.003")],[this.parseNumber("500000"),this.parseNumber("0.0028")],[this.parseNumber("1000000"),this.parseNumber("0.0025")],[this.parseNumber("5000000"),this.parseNumber("0.002")],[this.parseNumber("10000000"),this.parseNumber("0.0018")],[this.parseNumber("25000000"),this.parseNumber("0.0015")],[this.parseNumber("50000000"),this.parseNumber("0.00125")],[this.parseNumber("100000000"),this.parseNumber("0.001")]]}}},headers:{"APCA-PARTNER-ID":"ccxt"},options:{fetchTradesMethod:"cryptoPublicGetCryptoTrades",fetchOHLCVMethod:"cryptoPublicGetCryptoBars",versions:{public:"v2",private:"v2",cryptoPublic:"v1beta2",markets:"v2"},defaultExchange:"CBSE",exchanges:["CBSE","FTX","GNSS","ERSX"],defaultTimeInForce:"gtc",clientOrderId:"ccxt_{id}"},exceptions:{exact:{"forbidden.":r.PermissionDenied,4041e4:r.InvalidOrder,40010001:r.BadRequest,4011e4:r.PermissionDenied,4031e4:r.InsufficientFunds},broad:{"Invalid format for parameter":r.BadRequest,"Invalid symbol":r.BadSymbol}}})}async fetchMarkets(e={}){const t=await this.marketsGetAssetsPublicBeta(this.extend({asset_class:"crypto",tradeable:!0},e)),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"symbol"),a=r.split("/"),n=this.safeString(a,0),o=this.safeString(a,1),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=d+"/"+c,u="active"===this.safeString(s,"status"),l=this.safeNumber(s,"min_order_size"),p=this.safeNumber(s,"min_trade_increment"),f=this.safeNumber(s,"price_increment");i.push({id:r,symbol:h,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:u,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:p,price:f},limits:{leverage:{min:void 0,max:void 0},amount:{min:l,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:s})}return i}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbols:r.id};void 0!==t&&(a.start=this.iso8601(t)),void 0!==i&&(a.limit=parseInt(i));const n=this.safeString(this.options,"fetchTradesMethod","cryptoPublicGetCryptoTrades"),o=await this[n](this.extend(a,s)),d=this.safeValue(o,"trades",{}),c=this.safeValue(d,r.id,{});return this.parseTrades(c,r,t,i)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r=s.id,a={symbols:r},n=await this.cryptoPublicGetCryptoLatestOrderbooks(this.extend(a,i)),o=this.safeValue(n,"orderbooks",{}),d=this.safeValue(o,r,{}),c=this.parse8601(this.safeString(d,"t"));return this.parseOrderBook(d,s.symbol,c,"b","a","p","s")}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbols:a.id,timeframe:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=s),void 0!==i&&(n.start=this.yyyymmdd(i));const o=this.safeString(this.options,"fetchOHLCVMethod","cryptoPublicGetCryptoBars"),d=await this[o](this.extend(n,r)),c=this.safeValue(d,"bars",{}),h=this.safeValue(c,a.id,{});return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t=undefined){const i=this.safeString(e,"t");return[this.parse8601(i),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d={symbol:o.id,qty:this.amountToPrecision(e,s),side:i,type:t},c=this.safeStringN(n,["triggerPrice","stop_price"]);if(void 0!==c){let i;if(!(t.indexOf("limit")>=0))throw new r.NotSupported(this.id+" createOrder() does not support stop orders for "+t+" orders, only stop_limit orders are supported");i="stop_limit",d.stop_price=this.priceToPrecision(e,c),d.type=i}t.indexOf("limit")>=0&&(d.limit_price=this.priceToPrecision(e,a));const h=this.safeString(this.options,"defaultTimeInForce");d.time_in_force=this.safeString(n,"timeInForce",h),n=this.omit(n,["timeInForce","triggerPrice"]);const u=this.safeString(this.options,"clientOrderId"),l=this.uuid().split("-").join(""),p=this.implodeParams(u,{id:l}),f=this.safeString(n,"clientOrderId",p);d.client_order_id=f,n=this.omit(n,["clientOrderId"]);const m=await this.privatePostOrders(this.extend(d,n));return this.parseOrder(m,o)}async cancelOrder(e,t=undefined,i={}){const s={order_id:e},r=await this.privateDeleteOrdersOrderId(this.extend(s,i));return this.safeValue(r,"message",{})}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},r=await this.privateGetOrdersOrderId(this.extend(s,i)),a=this.safeString(r,"symbol"),n=this.safeMarket(a);return this.parseOrder(r,n)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privateGetOrders(s);return this.parseOrders(a,r,t,i)}parseOrder(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString(e,"status"),a=this.parseOrderStatus(r),n=this.safeString(e,"commission");let o;void 0!==n&&(o={cost:n,currency:"USD"});let d=this.safeString(e,"order_type");d.indexOf("limit")>=0&&(d="limit");const c=this.safeString(e,"submitted_at"),h=this.parse8601(c);return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:this.safeString(e,"client_order_id"),timestamp:h,datetime:c,lastTradeTimeStamp:void 0,status:a,symbol:s,type:d,timeInForce:this.parseTimeInForce(this.safeString(e,"time_in_force")),postOnly:void 0,side:this.safeString(e,"side"),price:this.safeNumber(e,"limit_price"),stopPrice:this.safeNumber(e,"stop_price"),triggerPrice:this.safeNumber(e,"stop_price"),cost:void 0,average:this.safeNumber(e,"filled_avg_price"),amount:this.safeNumber(e,"qty"),filled:this.safeNumber(e,"filled_qty"),remaining:void 0,trades:void 0,fee:o,info:e},t)}parseOrderStatus(e){return this.safeString({pending_new:"open",accepted:"open",new:"open",partially_filled:"open",activated:"open",filled:"closed"},e,e)}parseTimeInForce(e){return this.safeString({day:"Day"},e,e)}parseTrade(e,t=undefined){const i=this.safeString(e,"S"),s=this.safeSymbol(i,t),r=this.safeString(e,"t"),a=this.parse8601(r),n=this.safeString(e,"tks");let o;"B"===n?o="buy":"S"===n&&(o="sell");const d=this.safeString(e,"p"),c=this.safeString(e,"s");return this.safeTrade({info:e,id:this.safeString(e,"i"),timestamp:a,datetime:this.iso8601(a),symbol:s,order:void 0,type:void 0,side:o,takerOrMaker:"taker",price:d,amount:c,cost:void 0,fee:void 0},t)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.safeValue(this.options,"versions"),o=this.safeString(n,t);let d="/"+this.implodeParams(e,s),c=this.implodeParams(this.urls.api[t],{version:o});c=this.implodeHostname(c),r=void 0!==r?r:{},"private"===t&&(r["APCA-API-KEY-ID"]=this.apiKey,r["APCA-API-SECRET-KEY"]=this.secret);const h=this.omit(s,this.extractParams(e));return Object.keys(h).length&&("GET"===i||"DELETE"===i?d+="?"+this.urlencode(h):(a=this.json(h),r["Content-Type"]="application/json")),c+=d,{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.id+" "+n,u=this.safeString(o,"code");void 0!==e&&this.throwExactlyMatchedException(this.exceptions.exact,u,h);const l=this.safeValue(o,"message",void 0);if(void 0!==l)throw this.throwExactlyMatchedException(this.exceptions.exact,l,h),this.throwBroadlyMatchedException(this.exceptions.broad,l,h),new r.ExchangeError(h)}}},9612:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(1359),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"ascendex",name:"AscendEX",countries:["SG"],rateLimit:400,certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!1,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:"emulated",fetchFundingRateHistory:!1,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!1,transfer:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"1d","1w":"1w","1M":"1m"},version:"v2",urls:{logo:"https://user-images.githubusercontent.com/1294454/112027508-47984600-8b48-11eb-9e17-d26459cc36c6.jpg",api:{rest:"https://ascendex.com"},test:{rest:"https://api-test.ascendex-sandbox.com"},www:"https://ascendex.com",doc:["https://ascendex.github.io/ascendex-pro-api/#ascendex-pro-api-documentation"],fees:"https://ascendex.com/en/feerate/transactionfee-traderate",referral:{url:"https://ascendex.com/en-us/register?inviteCode=EL6BXBQM",discount:.25}},api:{v1:{public:{get:{assets:1,products:1,ticker:1,"barhist/info":1,barhist:1,depth:1,trades:1,"cash/assets":1,"cash/products":1,"margin/assets":1,"margin/products":1,"futures/collateral":1,"futures/contracts":1,"futures/ref-px":1,"futures/market-data":1,"futures/funding-rates":1,"risk-limit-info":1,"exchange-info":1}},private:{get:{info:1,"wallet/transactions":1,"wallet/deposit/address":1,"data/balance/snapshot":1,"data/balance/history":1},accountCategory:{get:{balance:1,"order/open":1,"order/status":1,"order/hist/current":1,risk:1},post:{order:1,"order/batch":1},delete:{order:1,"order/all":1,"order/batch":1}},accountGroup:{get:{"cash/balance":1,"margin/balance":1,"margin/risk":1,"futures/collateral-balance":1,"futures/position":1,"futures/risk":1,"futures/funding-payments":1,"order/hist":1,"spot/fee":1},post:{transfer:1,"futures/transfer/deposit":1,"futures/transfer/withdraw":1}}}},v2:{public:{get:{assets:1,"futures/contract":1,"futures/collateral":1,"futures/pricing-data":1,"futures/ticker":1}},private:{get:{"account/info":1},accountGroup:{get:{"order/hist":1,"futures/position":1,"futures/free-margin":1,"futures/order/hist/current":1,"futures/order/open":1,"futures/order/status":1},post:{"futures/isolated-position-margin":1,"futures/margin-type":1,"futures/leverage":1,"futures/transfer/deposit":1,"futures/transfer/withdraw":1,"futures/order":1,"futures/order/batch":1,"futures/order/open":1,"subuser/subuser-transfer":1,"subuser/subuser-transfer-hist":1},delete:{"futures/order":1,"futures/order/batch":1,"futures/order/all":1}}}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}},precisionMode:n.sh,options:{"account-category":"cash","account-group":void 0,fetchClosedOrders:{method:"v1PrivateAccountGroupGetOrderHist"},defaultType:"spot",accountsByType:{spot:"cash",swap:"futures",future:"futures",margin:"margin"},transfer:{fillResponseFromRequest:!0}},exceptions:{exact:{1900:r.BadRequest,2100:r.AuthenticationError,5002:r.BadSymbol,6001:r.BadSymbol,6010:r.InsufficientFunds,60060:r.InvalidOrder,600503:r.InvalidOrder,100001:r.BadRequest,100002:r.BadRequest,100003:r.BadRequest,100004:r.BadRequest,100005:r.BadRequest,100006:r.BadRequest,100007:r.BadRequest,100008:r.BadSymbol,100009:r.AuthenticationError,100010:r.BadRequest,100011:r.BadRequest,100012:r.BadRequest,100013:r.BadRequest,100101:r.ExchangeError,150001:r.BadRequest,200001:r.AuthenticationError,200002:r.ExchangeError,200003:r.ExchangeError,200004:r.ExchangeError,200005:r.ExchangeError,200006:r.ExchangeError,200007:r.ExchangeError,200008:r.ExchangeError,200009:r.ExchangeError,200010:r.AuthenticationError,200011:r.ExchangeError,200012:r.ExchangeError,200013:r.ExchangeError,200014:r.PermissionDenied,200015:r.PermissionDenied,300001:r.InvalidOrder,300002:r.InvalidOrder,300003:r.InvalidOrder,300004:r.InvalidOrder,300005:r.InvalidOrder,300006:r.InvalidOrder,300007:r.InvalidOrder,300008:r.InvalidOrder,300009:r.InvalidOrder,300011:r.InsufficientFunds,300012:r.BadSymbol,300013:r.InvalidOrder,300014:r.InvalidOrder,300020:r.InvalidOrder,300021:r.InvalidOrder,300031:r.InvalidOrder,310001:r.InsufficientFunds,310002:r.InvalidOrder,310003:r.InvalidOrder,310004:r.BadSymbol,310005:r.InvalidOrder,510001:r.ExchangeError,900001:r.ExchangeError},broad:{}},commonCurrencies:{BOND:"BONDED",BTCBEAR:"BEAR",BTCBULL:"BULL",BYN:"BeyondFi",PLN:"Pollen"}})}getAccount(e={}){const t=this.safeValue(e,"account",this.options.account).toLowerCase();return this.capitalize(t)}async fetchCurrencies(e={}){const t=await this.v1PublicGetAssets(e),i=await this.v1PublicGetMarginAssets(e),s=await this.v1PublicGetCashAssets(e),r=this.safeValue(t,"data",[]),a=this.safeValue(i,"data",[]),n=this.safeValue(s,"data",[]),o=this.indexBy(r,"assetCode"),d=this.indexBy(a,"assetCode"),c=this.indexBy(n,"assetCode"),h=this.deepExtend(o,d,c),u=Object.keys(h),l={};for(let e=0;e<u.length;e++){const t=u[e],i=h[t],s=this.safeCurrencyCode(t),r=this.safeString2(i,"precisionScale","nativeScale"),a=this.parseNumber(this.parsePrecision(r)),n=this.safeNumber2(i,"withdrawFee","withdrawalFee"),o="Normal"===this.safeString2(i,"status","statusCode"),d="borrowAssetCode"in i;l[s]={id:t,code:s,info:i,type:void 0,margin:d,name:this.safeString(i,"assetName"),active:o,deposit:void 0,withdraw:void 0,fee:n,precision:a,limits:{amount:{min:a,max:void 0},withdraw:{min:this.safeNumber(i,"minWithdrawalAmt"),max:void 0}}}}return l}async fetchMarkets(e={}){const t=await this.v1PublicGetProducts(e),i=await this.v1PublicGetCashProducts(e),s=await this.v2PublicGetFuturesContract(e),r=this.safeValue(t,"data",[]),a=this.indexBy(r,"symbol"),n=this.safeValue(i,"data",[]),o=this.safeValue(s,"data",[]),d=this.arrayConcat(n,o),c=this.indexBy(d,"symbol"),h=this.deepExtend(a,c),u=Object.keys(h),l=[];for(let e=0;e<u.length;e++){const t=u[e],i=h[t],s=this.safeValue(i,"settlementAsset"),r=this.safeCurrencyCode(s),a=this.safeString(i,"status"),n=this.safeString(i,"domain");let o=!1;"Normal"!==a&&"InternalTrading"!==a||"LeveragedETF"===n||(o=!0);const d=void 0===r,c=!d,p=!!c||void 0;let f,m=this.safeNumber(i,"minQty"),v=this.safeNumber(i,"maxQty"),g=this.safeNumber(i,"tickSize");const y=this.safeString2(i,"underlying","symbol").split("/"),b=this.safeString(y,0),w=this.safeString(y,1),S=this.safeCurrencyCode(b),P=this.safeCurrencyCode(w);let k=S+"/"+P;if(c){const e=this.safeValue(i,"lotSizeFilter");m=this.safeNumber(e,"minQty"),v=this.safeNumber(e,"maxQty");const t=this.safeValue(i,"priceFilter");g=this.safeNumber(t,"minPrice"),f=this.safeNumber(t,"maxPrice"),k=S+"/"+P+":"+r}const O=this.safeNumber(i,"commissionReserveRate"),T=this.safeValue(i,"marginTradable",!1);l.push({id:t,symbol:k,base:S,quote:P,settle:r,baseId:b,quoteId:w,settleId:s,type:c?"swap":"spot",spot:d,margin:d?T:void 0,swap:c,future:!1,option:!1,active:o,contract:c,linear:p,inverse:c?!p:void 0,taker:O,maker:O,contractSize:c?this.parseNumber("1"):void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(i,"lotSize"),price:this.safeNumber(i,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:m,max:v},price:{min:g,max:f},cost:{min:this.safeNumber(i,"minNotional"),max:this.safeNumber(i,"maxNotional")}},info:i})}return l}async fetchTime(e={}){const t={requestTime:this.milliseconds()},i=await this.v1PublicGetExchangeInfo(this.extend(t,e)),s=this.safeValue(i,"data");return this.safeInteger(s,"requestReceiveAt")}async fetchAccounts(e={}){let t,i=this.safeString(this.options,"account-group");if(void 0===i){t=await this.v1PrivateGetInfo(e);const s=this.safeValue(t,"data",{});i=this.safeString(s,"accountGroup"),this.options["account-group"]=i}return[{id:i,type:void 0,currency:void 0,info:t}]}parseBalance(e){const t=this.milliseconds(),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeCurrencyCode(this.safeString(t,"asset")),a=this.account();a.free=this.safeString(t,"availableBalance"),a.total=this.safeString(t,"totalBalance"),i[r]=a}return this.safeBalance(i)}parseMarginBalance(e){const t=this.milliseconds(),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeCurrencyCode(this.safeString(t,"asset")),n=this.account();n.free=this.safeString(t,"availableBalance"),n.total=this.safeString(t,"totalBalance");const o=this.safeString(t,"borrowed"),d=this.safeString(t,"interest");n.debt=a.O.stringAdd(o,d),i[r]=n}return this.safeBalance(i)}parseSwapBalance(e){const t=this.milliseconds(),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeValue(e,"data",{}),r=this.safeValue(s,"collaterals",[]);for(let e=0;e<r.length;e++){const t=r[e],s=this.safeCurrencyCode(this.safeString(t,"asset")),a=this.account();a.total=this.safeString(t,"balance"),i[s]=a}return this.safeBalance(i)}async fetchBalance(e={}){let t,i;await this.loadMarkets(),await this.loadAccounts(),[i,t]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),i=this.safeValue(e,"margin",!1)?"margin":i,e=this.omit(e,"margin");const s=this.safeValue(this.options,"fetchBalance",{}),r=this.safeValue(this.options,"accountsByType",{}),a=this.safeString(r,i,"cash"),n=this.safeValue(this.accounts,0,{}),o={"account-group":this.safeString(n,"id")},d=this.safeString(s,"method","v1PrivateAccountCategoryGetBalance"),c=this.getSupportedMapping(i,{spot:d,margin:d,swap:"v2PrivateAccountGroupGetFuturesPosition"});"cash"!==a&&"margin"!==a||(o["account-category"]=a);const h=await this[c](this.extend(o,t));return"swap"===i?this.parseSwapBalance(h):"margin"===i?this.parseMarginBalance(h):this.parseBalance(h)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id},r=await this.v1PublicGetDepth(this.extend(s,i)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"ts"),d=this.parseOrderBook(n,e,o);return d.nonce=this.safeInteger(n,"seqnum"),d}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s="spot"===this.safeString(e,"type")?"/":void 0,r=this.safeSymbol(i,t,s),a=this.safeString(e,"close"),n=this.safeValue(e,"bid",[]),o=this.safeValue(e,"ask",[]),d=this.safeString(e,"open");return this.safeTicker({symbol:r,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(n,0),bidVolume:this.safeString(n,1),ask:this.safeString(o,0),askVolume:this.safeString(o,1),vwap:void 0,open:d,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.v1PublicGetTicker(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};let s,r,a;if(void 0!==e){const t=this.safeValue(e,0);s=this.market(t);const r=this.marketIds(e);i.symbol=r.join(",")}[r,t]=this.handleMarketTypeAndParams("fetchTickers",s,t),a="spot"===r?await this.v1PublicGetTicker(this.extend(i,t)):await this.v2PublicGetFuturesTicker(this.extend(i,t));const n=this.safeValue(a,"data",[]);return Array.isArray(n)?this.parseTickers(n,e):this.parseTickers([n],e)}parseOHLCV(e,t=undefined){const i=this.safeValue(e,"data",{});return[this.safeInteger(i,"ts"),this.safeNumber(i,"o"),this.safeNumber(i,"h"),this.safeNumber(i,"l"),this.safeNumber(i,"c"),this.safeNumber(i,"v")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,interval:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t),d=this.safeValue(this.options,"fetchOHLCV",{}),c=this.safeInteger(d,"limit",500);void 0!==i?(n.from=i,s=void 0===s?c:Math.min(s,c),n.to=this.sum(i,s*o*1e3,1)):void 0!==s&&(n.n=s);const h=await this.v1PublicGetBarhist(this.extend(n,r)),u=this.safeValue(h,"data",[]);return this.parseOHLCVs(u,a,t,i,s)}parseTrade(e,t=undefined){const i=this.safeInteger(e,"ts"),s=this.safeString2(e,"price","p"),r=this.safeString(e,"q"),a=this.safeValue(e,"bm",!1)?"sell":"buy";return t=this.safeMarket(void 0,t),this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:void 0,order:void 0,type:void 0,takerOrMaker:void 0,side:a,price:s,amount:r,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.n=i);const n=await this.v1PublicGetTrades(this.extend(a,s)),o=this.safeValue(n,"data",[]),d=this.safeValue(o,"data",[]);return this.parseTrades(d,r,t,i)}parseOrderStatus(e){return this.safeString({PendingNew:"open",New:"open",PartiallyFilled:"open",Filled:"closed",Canceled:"canceled",Rejected:"rejected"},e,e)}parseOrder(e,t=undefined){const i=this.parseOrderStatus(this.safeString(e,"status")),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t,"/");let a=this.safeInteger2(e,"timestamp","sendingTime");const n=this.safeInteger(e,"lastExecTime");void 0===a&&(a=n);const o=this.safeString(e,"price"),d=this.safeString(e,"orderQty"),c=this.safeString(e,"avgPx"),h=this.safeString2(e,"cumFilledQty","cumQty"),u=this.safeString(e,"orderId");let l=this.safeString(e,"id");void 0!==l&&l.length<1&&(l=void 0);const p=this.safeStringLower(e,"orderType");let f=p;void 0!==p&&("stoplimit"===p&&(f="limit"),"stopmarket"===p&&(f="market"));const m=this.safeStringLower(e,"side"),v=this.safeNumber(e,"cumFee");let g;if(void 0!==v){const t=this.safeString(e,"feeAsset");g={cost:v,currency:this.safeCurrencyCode(t)}}const y=this.safeNumber(e,"stopPrice");let b;const w=this.safeString(e,"execInst");let S;return"reduceOnly"===w&&(b=!0),"Post"===w&&(S=!0),this.safeOrder({info:e,id:u,clientOrderId:l,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:n,symbol:r,type:f,timeInForce:void 0,postOnly:S,reduceOnly:b,side:m,price:o,stopPrice:y,triggerPrice:y,amount:d,cost:void 0,average:c,filled:h,remaining:void 0,status:i,fee:g,trades:void 0},t)}async fetchTradingFees(e={}){await this.loadMarkets(),await this.loadAccounts();const t=this.safeValue(this.accounts,0,{}),i={"account-group":this.safeString(t,"id")},s=await this.v1PrivateAccountGroupGetSpotFee(this.extend(i,e)),r=this.safeValue(s,"data",{}),a=this.safeValue(r,"fees",[]),n={};for(let e=0;e<a.length;e++){const t=a[e],i=this.safeString(t,"symbol"),s=this.safeSymbol(i,void 0,"/"),r=this.safeValue(t,"fee",{});n[s]={info:t,symbol:s,maker:this.safeNumber(r,"maker"),taker:this.safeNumber(r,"taker")}}return n}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets(),await this.loadAccounts();const o=this.market(e);let d;[d,n]=this.handleMarketTypeAndParams("createOrder",o,n);const c=this.safeValue(this.options,"createOrder",{}),h=this.safeValue(this.options,"accountsByType",{}),u=this.safeString(h,d,"cash"),l=this.safeValue(this.accounts,0,{}),p=this.safeValue(l,"id"),f=this.safeString2(n,"clientOrderId","id"),m={"account-group":p,"account-category":u,symbol:o.id,time:this.milliseconds(),orderQty:this.amountToPrecision(e,s),orderType:t,side:i},v="market"===t||"stop_market"===t,g="limit"===t||"stop_limit"===t,y=this.safeString(n,"timeInForce"),b=this.isPostOnly(v,!1,n),w=this.safeValue(n,"reduceOnly",!1),S=this.safeValue2(n,"triggerPrice","stopPrice");if(n=this.omit(n,["timeInForce","postOnly","reduceOnly","stopPrice","triggerPrice"]),w){if("swap"!==d)throw new r.InvalidOrder(this.id+" createOrder() does not support reduceOnly for "+d+" orders, reduceOnly orders are supported for perpetuals only");m.execInst="ReduceOnly"}g&&(m.orderPrice=this.priceToPrecision(e,a)),"IOC"===y&&(m.timeInForce="IOC"),"FOK"===y&&(m.timeInForce="FOK"),b&&(m.postOnly=!0),void 0!==S&&(m.stopPrice=this.priceToPrecision(e,S),g?m.orderType="stop_limit":v&&(m.orderType="stop_market")),void 0!==f&&(m.id=f);const P=this.safeString(c,"method","v1PrivateAccountCategoryPostOrder"),k=this.getSupportedMapping(d,{spot:P,margin:P,swap:"v2PrivateAccountGroupPostFuturesOrder"});"v1PrivateAccountCategoryPostOrder"===k?void 0!==u&&(m.category=u):m["account-category"]=u;const O=await this[k](this.extend(m,n)),T=this.safeValue(O,"data",{}),A=this.safeValue2(T,"order","info",{});return this.parseOrder(A,o)}async fetchOrder(e,t=undefined,i={}){let s;await this.loadMarkets(),await this.loadAccounts(),void 0!==t&&(s=this.market(t));const[r,a]=this.handleMarketTypeAndParams("fetchOrder",s,i),n=this.safeValue(this.options,"fetchOrder",{}),o=this.safeValue(this.options,"accountsByType",{}),d=this.safeString(o,r,"cash"),c=this.safeValue(this.accounts,0,{}),h={"account-group":this.safeValue(c,"id"),"account-category":d,orderId:e},u=this.safeString(n,"method","v1PrivateAccountCategoryGetOrderStatus"),l=this.getSupportedMapping(r,{spot:u,margin:u,swap:"v2PrivateAccountGroupGetFuturesOrderStatus"});"v1PrivateAccountCategoryGetOrderStatus"===l?void 0!==d&&(h.category=d):h["account-category"]=d;const p=await this[l](this.extend(h,a)),f=this.safeValue(p,"data",{});return this.parseOrder(f,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),await this.loadAccounts(),void 0!==e&&(r=this.market(e),e=r.symbol);const a=this.safeValue(this.accounts,0,{}),n=this.safeValue(a,"id"),[o,d]=this.handleMarketTypeAndParams("fetchOpenOrders",r,s),c=this.safeValue(this.options,"accountsByType",{}),h=this.safeString(c,o,"cash"),u={"account-group":n,"account-category":h},l=this.safeValue(this.options,"fetchOpenOrders",{}),p=this.safeString(l,"method","v1PrivateAccountCategoryGetOrderOpen"),f=this.getSupportedMapping(o,{spot:p,margin:p,swap:"v2PrivateAccountGroupGetFuturesOrderOpen"});"v1PrivateAccountCategoryGetOrderOpen"===f?void 0!==h&&(u.category=h):u["account-category"]=h;const m=await this[f](this.extend(u,d)),v=this.safeValue(m,"data",[]);if("futures"===h)return this.parseOrders(v,r,t,i);const g=[];for(let e=0;e<v.length;e++){const t=this.parseOrder(v[e],r);g.push(t)}return this.filterBySymbolSinceLimit(g,e,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.loadAccounts();const r=this.safeValue(this.accounts,0,{}),a={"account-group":this.safeValue(r,"id")};let n;void 0!==e&&(n=this.market(e),a.symbol=n.id);const[o,d]=this.handleMarketTypeAndParams("fetchClosedOrders",n,s),c=this.safeValue(this.options,"fetchClosedOrders",{}),h=this.safeString(c,"method","v1PrivateAccountGroupGetOrderHist"),u=this.getSupportedMapping(o,{spot:h,margin:h,swap:"v2PrivateAccountGroupGetFuturesOrderHistCurrent"}),l=this.safeValue(this.options,"accountsByType",{}),p=this.safeString(l,o,"cash");"v1PrivateAccountGroupGetOrderHist"===u?void 0!==p&&(a.category=p):a["account-category"]=p,void 0!==t&&(a.startTime=t),void 0!==i&&(a.pageSize=i);const f=await this[u](this.extend(a,d));let m=this.safeValue(f,"data");return Array.isArray(m)||(m=this.safeValue(m,"data",[])),this.parseOrders(m,n,t,i)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets(),await this.loadAccounts();const s=this.market(t),[a,n]=this.handleMarketTypeAndParams("cancelOrder",s,i),o=this.safeValue(this.options,"cancelOrder",{}),d=this.safeValue(this.options,"accountsByType",{}),c=this.safeString(d,a,"cash"),h=this.safeValue(this.accounts,0,{}),u={"account-group":this.safeValue(h,"id"),"account-category":c,symbol:s.id,time:this.milliseconds(),id:"foobar"},l=this.safeString(o,"method","v1PrivateAccountCategoryDeleteOrder"),p=this.getSupportedMapping(a,{spot:l,margin:l,swap:"v2PrivateAccountGroupDeleteFuturesOrder"});"v1PrivateAccountCategoryDeleteOrder"===p?void 0!==c&&(u.category=c):u["account-category"]=c;const f=this.safeString2(i,"clientOrderId","id");void 0===f?u.orderId=e:(u.id=f,i=this.omit(i,["clientOrderId","id"]));const m=await this[p](this.extend(u,n)),v=this.safeValue(m,"data",{}),g=this.safeValue2(v,"order","info",{});return this.parseOrder(g,s)}async cancelAllOrders(e=undefined,t={}){let i;await this.loadMarkets(),await this.loadAccounts(),void 0!==e&&(i=this.market(e));const[s,r]=this.handleMarketTypeAndParams("cancelAllOrders",i,t),a=this.safeValue(this.options,"cancelAllOrders",{}),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,s,"cash"),d=this.safeValue(this.accounts,0,{}),c={"account-group":this.safeValue(d,"id"),"account-category":o,time:this.milliseconds()};void 0!==e&&(c.symbol=i.id);const h=this.safeString(a,"method","v1PrivateAccountCategoryDeleteOrderAll"),u=this.getSupportedMapping(s,{spot:h,margin:h,swap:"v2PrivateAccountGroupDeleteFuturesOrderAll"});return"v1PrivateAccountCategoryDeleteOrderAll"===u?void 0!==o&&(c.category=o):c["account-category"]=o,await this[u](this.extend(c,r))}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"tagId"),r=this.safeString(e,s);this.checkAddress(i);const a=void 0===t?void 0:t.code,n=this.safeString(e,"chainName");return{currency:a,address:i,tag:r,network:this.safeNetwork(n),info:e}}safeNetwork(e){return this.safeString({TRC20:"TRC20",ERC20:"ERC20",GO20:"GO20",BEP2:"BEP2","BEP20 (BSC)":"BEP20",Bitcoin:"BTC","Bitcoin ABC":"BCH",Litecoin:"LTC","Matic Network":"MATIC",Solana:"SOL",xDai:"STAKE",Akash:"AKT"},e,e)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s=this.safeString(t,"chainName");t=this.omit(t,"chainName");const a={asset:i.id},n=await this.v1PrivateGetWalletDepositAddress(this.extend(a,t)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"address",[]);let c;if(d.length>1){const e=this.indexBy(d,"chainName");if(void 0===s){const t=Object.keys(e).join(", ");throw new r.ArgumentsRequired(this.id+" fetchDepositAddress() returned more than one address, a chainName parameter is required, one of "+t)}c=this.safeValue(e,s,{})}else c=this.safeValue(d,0,{});const h=this.parseDepositAddress(c,i);return this.extend(h,{info:n})}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactions(e,t,i,this.extend({txType:"deposit"},s))}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactions(e,t,i,this.extend({txType:"withdrawal"},s))}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset=a.id),void 0!==t&&(r.startTs=t),void 0!==i&&(r.pageSize=i);const n=await this.v1PrivateGetWalletTransactions(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"data",[]);return this.parseTransactions(d,a,t,i)}parseTransactionStatus(e){return this.safeString({reviewing:"pending",pending:"pending",confirmed:"ok",rejected:"rejected"},e,e)}parseTransaction(e,t=undefined){const i=this.safeValue(e,"destAddress",{}),s=this.safeString(i,"address"),r=this.safeString(i,"destTag"),a=this.safeInteger(e,"time"),n=this.safeString(e,"asset"),o=this.safeCurrencyCode(n,t);return{info:e,id:this.safeString(e,"requestId"),txid:this.safeString(e,"networkTransactionId"),type:this.safeString(e,"transactionType"),currency:o,network:void 0,amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatus(this.safeString(e,"status")),timestamp:a,datetime:this.iso8601(a),address:s,addressFrom:void 0,addressTo:s,tag:r,tagFrom:void 0,tagTo:r,updated:void 0,comment:void 0,fee:{currency:o,cost:this.safeNumber(e,"commission"),rate:void 0}}}async fetchPositions(e=undefined,t={}){await this.loadMarkets(),await this.loadAccounts();const i=this.safeValue(this.accounts,0,{}),s={"account-group":this.safeString(i,"id")},r=await this.v2PrivateAccountGroupGetFuturesPosition(this.extend(s,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"contracts",[]),o=[];for(let e=0;e<n.length;e++)o.push(this.parsePosition(n[e]));return e=this.marketSymbols(e),this.filterByArray(o,"symbol",e,!1)}parsePosition(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s=this.safeString(e,"buyOpenOrderNotional");a.O.stringEq(s,"0")&&(s=this.safeString(e,"sellOpenOrderNotional"));const r=this.safeString(e,"marginType");let n;return"isolated"===r&&(n=this.safeString(e,"isolatedMargin")),{info:e,id:void 0,symbol:t.symbol,notional:this.parseNumber(s),marginMode:r,liquidationPrice:void 0,entryPrice:this.safeNumber(e,"avgOpenPrice"),unrealizedPnl:this.safeNumber(e,"unrealizedPnl"),percentage:void 0,contracts:this.safeNumber(e,"position"),contractSize:this.safeNumber(t,"contractSize"),markPrice:this.safeNumber(e,"markPrice"),side:this.safeStringLower(e,"side"),hedged:void 0,timestamp:void 0,datetime:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:n,initialMargin:void 0,initialMarginPercentage:void 0,leverage:this.safeInteger(e,"leverage"),marginRatio:void 0}}parseFundingRate(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeInteger(e,"time"),a=this.safeNumber(e,"fundingRate"),n=this.safeInteger(e,"nextFundingTime");return{info:e,symbol:s,markPrice:this.safeNumber(e,"markPrice"),indexPrice:this.safeNumber(e,"indexPrice"),interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:r,datetime:this.iso8601(r),previousFundingRate:void 0,nextFundingRate:void 0,previousFundingTimestamp:void 0,nextFundingTimestamp:void 0,previousFundingDatetime:void 0,nextFundingDatetime:void 0,fundingRate:a,fundingTimestamp:n,fundingDatetime:this.iso8601(n)}}async fetchFundingRates(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.v2PublicGetFuturesPricingData(t),s=this.safeValue(i,"data",{}),r=this.safeValue(s,"contracts",[]),a=this.parseFundingRates(r);return this.filterByArray(a,"symbol",e)}async modifyMarginHelper(e,t,i,s={}){await this.loadMarkets(),await this.loadAccounts();const r=this.market(e),n=this.safeValue(this.accounts,0,{}),o=this.safeString(n,"id");t=this.amountToPrecision(e,t);const d={"account-group":o,symbol:r.id,amount:t},c=await this.v2PrivateAccountGroupPostFuturesIsolatedPositionMargin(this.extend(d,s));return"reduce"===i&&(t=a.O.stringAbs(t)),this.extend(this.parseMarginModification(c,r),{amount:this.parseNumber(t),type:i})}parseMarginModification(e,t=undefined){const i="0"===this.safeString(e,"code")?"ok":"failed";return{info:e,type:void 0,amount:void 0,code:t.quote,symbol:t.symbol,status:i}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"reduce",i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"add",i)}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>100)throw new r.BadRequest(this.id+" leverage should be between 1 and 100");await this.loadMarkets(),await this.loadAccounts();const s=this.market(t);if("future"!==s.type)throw new r.BadSymbol(this.id+" setLeverage() supports futures contracts only");const a=this.safeValue(this.accounts,0,{}),n={"account-group":this.safeString(a,"id"),symbol:s.id,leverage:e};return await this.v2PrivateAccountGroupPostFuturesLeverage(this.extend(n,i))}async setMarginMode(e,t=undefined,i={}){if("cross"===(e=e.toLowerCase())&&(e="crossed"),"isolated"!==e&&"crossed"!==e)throw new r.BadRequest(this.id+" setMarginMode() marginMode argument should be isolated or cross");await this.loadMarkets(),await this.loadAccounts();const s=this.market(t),a=this.safeValue(this.accounts,0,{}),n={"account-group":this.safeString(a,"id"),symbol:s.id,marginMode:e};if("future"!==s.type)throw new r.BadSymbol(this.id+" setMarginMode() supports futures contracts only");return await this.v2PrivateAccountGroupPostFuturesMarginType(this.extend(n,i))}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.v2PublicGetFuturesContract(t),s=this.safeValue(i,"data");return e=this.marketSymbols(e),this.parseLeverageTiers(s,e,"symbol")}parseMarketLeverageTiers(e,t=undefined){const i=this.safeValue(e,"marginRequirements",[]),s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const r=[];for(let e=0;e<i.length;e++){const s=i[e],n=this.safeString(s,"initialMarginRate");r.push({tier:this.sum(e,1),currency:t.quote,minNotional:this.safeNumber(s,"positionNotionalLowerBound"),maxNotional:this.safeNumber(s,"positionNotionalUpperBound"),maintenanceMarginRate:this.safeNumber(s,"maintenanceMarginRate"),maxLeverage:this.parseNumber(a.O.stringDiv("1",n)),info:s})}return r}async transfer(e,t,i,s,a={}){await this.loadMarkets(),await this.loadAccounts();const n=this.safeValue(this.accounts,0,{}),o=this.safeString(n,"id"),d=this.currency(e);t=this.currencyToPrecision(e,t);const c=this.safeValue(this.options,"accountsByType",{}),h=this.safeString(c,i,i),u=this.safeString(c,s,s);if("cash"!==h&&"cash"!==u)throw new r.ExchangeError(this.id+" transfer() only supports direct balance transfer between spot and future, spot and margin");const l={"account-group":o,amount:t,asset:d.id,fromAccount:h,toAccount:u},p=await this.v1PrivateAccountGroupPostTransfer(this.extend(l,a)),f=this.safeValue(this.options,"transfer",{}),m=this.safeValue(f,"fillResponseFromRequest",!0),v=this.parseTransfer(p,d);return m&&(v.fromAccount=i,v.toAccount=s,v.amount=t,v.currency=e),v}parseTransfer(e,t=undefined){const i=this.safeInteger(e,"code"),s=this.safeCurrencyCode(void 0,t),r=this.milliseconds();return{info:e,id:void 0,timestamp:r,datetime:this.iso8601(r),currency:s,amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(i)}}parseTransferStatus(e){return 0===e?"ok":"failed"}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=t[0],d=t[1],c=this.safeString(t,2);let h="";const u="accountCategory"===c;(u||"accountGroup"===c)&&(h+=this.implodeParams("/{account-group}",s),s=this.omit(s,"account-group"));let l=this.implodeParams(e,s);if(h+="/api/pro/","v2"===n?l=n+"/"+l:h+=n+"/",u&&(h+=this.implodeParams("{account-category}/",s)),s=this.omit(s,"account-category"),h+=l,("v1"===n&&"cash/balance"===l||"margin/balance"===l)&&(l="balance"),"v1"===n&&"spot/fee"===l&&(l="fee"),l.indexOf("subuser")>=0){const e=l.split("/");l=e[2]}if(s=this.omit(s,this.extractParams(e)),"public"===d)Object.keys(s).length&&(h+="?"+this.urlencode(s));else{this.checkRequiredCredentials();const e=this.milliseconds().toString(),t=e+"+"+l,n=this.hmac(this.encode(t),this.encode(this.secret),o.J,"base64");r={"x-auth-key":this.apiKey,"x-auth-timestamp":e,"x-auth-signature":n},"GET"===i?Object.keys(s).length&&(h+="?"+this.urlencode(s)):(r["Content-Type"]="application/json",a=this.json(s))}return h=this.urls.api.rest+h,{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"code"),u=this.safeString(o,"message");if(void 0!==h&&"0"!==h||void 0!==u){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e),new r.ExchangeError(e)}}}},3043:(e,t,i)=>{i.d(t,{e:()=>dt});var s=i(7100),r=i(1339),a=i(6739),n=i(6689),o=i(2194),d=i(7517),c=i(2367),h=i(7091),u=i(2523);const{isNode:l,keys:p,values:f,deepExtend:m,extend:v,clone:g,flatten:y,unique:b,indexBy:w,sortBy:S,sortBy2:P,safeFloat2:k,groupBy:O,aggregate:T,uuid:A,unCamelCase:G,precisionFromString:I,throttle:C,capitalize:M,now:x,buildOHLCVC:V,decimalToPrecision:E,safeValue:B,safeValue2:_,safeString:R,safeString2:N,seconds:L,milliseconds:D,binaryToBase16:F,numberToBE:q,base16ToBinary:H,iso8601:U,omit:W,isJsonEncodedObject:K,safeInteger:j,sum:z,omitZero:Z,implodeParams:Q,extractParams:X,json:Y,vwap:J,merge:$,binaryConcat:ee,hash:te,ecdsa:ie,arrayConcat:se,encode:re,urlencode:ae,hmac:ne,numberToString:oe,parseTimeframe:de,safeInteger2:ce,safeStringLower:he,parse8601:ue,yyyymmdd:le,safeStringUpper:pe,safeTimestamp:fe,binaryConcatArray:me,uuidv1:ve,numberToLE:ge,ymdhms:ye,stringToBase64:be,decode:we,uuid22:Se,safeIntegerProduct2:Pe,safeIntegerProduct:ke,safeStringLower2:Oe,yymmdd:Te,base58ToBinary:Ae,safeTimestamp2:Ge,rawencode:Ie,keysort:Ce,inArray:Me,isEmpty:xe,ordered:Ve,filterBy:Ee,uuid16:Be,safeFloat:_e,base64ToBinary:Re,safeStringUpper2:Ne,urlencodeWithArrayRepeat:Le,microseconds:De,binaryToBase64:Fe,strip:qe,toArray:He,safeFloatN:Ue,safeIntegerN:We,safeIntegerProductN:Ke,safeTimestampN:je,safeValueN:ze,safeStringN:Ze,safeStringLowerN:Qe,safeStringUpperN:Xe,urlencodeNested:Ye,parseDate:Je,ymd:$e,isArray:et,base64ToString:tt,crc32:it,TRUNCATE:st,ROUND:rt,DECIMAL_PLACES:at,NO_PADDING:nt,TICK_SIZE:ot}=s;class dt{constructor(e={}){this.httpAgent=void 0,this.httpsAgent=void 0,this.agent=void 0,this.api=void 0,this.proxy="",this.origin="*",this.minFundingAddressLength=1,this.substituteCommonCurrencyCodes=!0,this.quoteJsonNumbers=!0,this.number=Number,this.handleContentTypeApplicationZip=!1,this.reduceFees=!0,this.validateServerSsl=!0,this.validateClientSsl=!1,this.timeout=1e4,this.verbose=!1,this.debug=!1,this.userAgent=void 0,this.twofa=void 0,this.balance={},this.orderbooks={},this.tickers={},this.orders=void 0,this.transactions={},this.positions={},this.requiresWeb3=!1,this.requiresEddsa=!1,this.enableLastJsonResponse=!0,this.enableLastHttpResponse=!0,this.enableLastResponseHeaders=!0,this.last_http_response=void 0,this.last_json_response=void 0,this.last_response_headers=void 0,this.id=void 0,this.markets=void 0,this.status=void 0,this.rateLimit=void 0,this.tokenBucket=void 0,this.throttle=void 0,this.enableRateLimit=void 0,this.httpExceptions=void 0,this.markets_by_id=void 0,this.symbols=void 0,this.ids=void 0,this.currencies=void 0,this.baseCurrencies=void 0,this.quoteCurrencies=void 0,this.currencies_by_id=void 0,this.codes=void 0,this.reloadingMarkets=void 0,this.marketsLoading=void 0,this.accounts=void 0,this.accountsById=void 0,this.commonCurrencies=void 0,this.hostname=void 0,this.precisionMode=void 0,this.paddingMode=void 0,this.exceptions={},this.timeframes={},this.version=void 0,this.marketsByAltname=void 0,this.name=void 0,this.targetAccount=void 0,this.stablePairs={},this.clients={},this.newUpdates=!0,this.streaming={},this.deepExtend=m,this.isNode=l,this.keys=p,this.values=f,this.extend=v,this.clone=g,this.flatten=y,this.unique=b,this.indexBy=w,this.sortBy=S,this.sortBy2=P,this.groupBy=O,this.aggregate=T,this.uuid=A,this.unCamelCase=G,this.precisionFromString=I,this.capitalize=M,this.now=x,this.buildOHLCVC=V,this.decimalToPrecision=E,this.safeValue=B,this.safeValue2=_,this.safeString=R,this.safeString2=N,this.safeFloat=_e,this.safeFloat2=k,this.seconds=L,this.milliseconds=D,this.binaryToBase16=F,this.numberToBE=q,this.base16ToBinary=H,this.iso8601=U,this.omit=W,this.isJsonEncodedObject=K,this.safeInteger=j,this.sum=z,this.omitZero=Z,this.implodeParams=Q,this.extractParams=X,this.json=Y,this.vwap=J,this.merge=$,this.binaryConcat=ee,this.hash=te,this.arrayConcat=se,this.encode=re,this.urlencode=ae,this.hmac=ne,this.numberToString=oe,this.parseTimeframe=de,this.safeInteger2=ce,this.safeStringLower=he,this.parse8601=ue,this.yyyymmdd=le,this.safeStringUpper=pe,this.safeTimestamp=fe,this.binaryConcatArray=me,this.uuidv1=ve,this.numberToLE=ge,this.ymdhms=ye,this.yymmdd=Te,this.stringToBase64=be,this.decode=we,this.uuid22=Se,this.safeIntegerProduct2=Pe,this.safeIntegerProduct=ke,this.base58ToBinary=Ae,this.base64ToBinary=Re,this.safeTimestamp2=Ge,this.rawencode=Ie,this.keysort=Ce,this.inArray=Me,this.safeStringLower2=Oe,this.safeStringUpper2=Ne,this.isEmpty=xe,this.ordered=Ve,this.filterBy=Ee,this.uuid16=Be,this.urlencodeWithArrayRepeat=Le,this.microseconds=De,this.binaryToBase64=Fe,this.strip=qe,this.toArray=He,this.safeFloatN=Ue,this.safeIntegerN=We,this.safeIntegerProductN=Ke,this.safeTimestampN=je,this.safeValueN=ze,this.safeStringN=Ze,this.safeStringLowerN=Qe,this.safeStringUpperN=Xe,this.urlencodeNested=Ye,this.parseDate=Je,this.ymd=$e,this.isArray=et,this.base64ToString=tt,this.crc32=it,Object.assign(this,s),this.options=this.getDefaultOptions(),this.userAgents={chrome:"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.94 Safari/537.36",chrome39:"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.71 Safari/537.36",chrome100:"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.75 Safari/537.36"},this.headers={},this.proxy="",this.origin="*",this.minFundingAddressLength=1,this.substituteCommonCurrencyCodes=!0,this.quoteJsonNumbers=!0,this.number=Number,this.handleContentTypeApplicationZip=!1,this.reduceFees=!0,this.fetchImplementation=void 0,this.validateServerSsl=!0,this.validateClientSsl=!1,this.timeout=1e4,this.verbose=!1,this.debug=!1,this.userAgent=void 0,this.twofa=void 0,this.apiKey=void 0,this.secret=void 0,this.uid=void 0,this.login=void 0,this.password=void 0,this.privateKey=void 0,this.walletAddress=void 0,this.token=void 0,this.balance={},this.orderbooks={},this.tickers={},this.orders=void 0,this.trades={},this.transactions={},this.ohlcvs={},this.myTrades=void 0,this.positions={},this.requiresWeb3=!1,this.requiresEddsa=!1,this.lastRestRequestTimestamp=0,this.enableLastJsonResponse=!0,this.enableLastHttpResponse=!0,this.enableLastResponseHeaders=!0,this.last_http_response=void 0,this.last_json_response=void 0,this.last_response_headers=void 0;const t=(e=this)=>{if(null!==e){const i=Object.getOwnPropertyNames(e);for(let e=0;e<i.length;e++){const t=i[e];this[G(t)]=this[t]}t(Object.getPrototypeOf(e))}};t();const i=Object.entries(this.describe()).concat(Object.entries(e));for(let e=0;e<i.length;e++){const[t,s]=i[e];s&&Object.getPrototypeOf(s)===Object.prototype?this[t]=this.deepExtend(this[t],s):this[t]=s}this.validateServerSsl;const r=Object.keys(this.has);for(let e=0;e<r.length;e++){const t=r[e];this["has"+this.capitalize(t)]=!!this.has[t]}this.api&&this.defineRestApi(this.api,"request"),this.initRestRateLimiter(),this.markets&&this.setMarkets(this.markets),this.newUpdates=void 0===this.options.newUpdates||this.options.newUpdates}describe(){return{id:void 0,name:void 0,countries:void 0,enableRateLimit:!0,rateLimit:2e3,certified:!1,pro:!1,alias:!1,has:{publicAPI:!0,privateAPI:!0,CORS:void 0,spot:void 0,margin:void 0,swap:void 0,future:void 0,option:void 0,addMargin:void 0,cancelAllOrders:void 0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:void 0,createLimitOrder:!0,createMarketOrder:!0,createOrder:!0,createPostOnlyOrder:void 0,createReduceOnlyOrder:void 0,createStopOrder:void 0,createStopLimitOrder:void 0,createStopMarketOrder:void 0,editOrder:"emulated",fetchAccounts:void 0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowInterest:void 0,fetchBorrowRate:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRatesPerSymbol:void 0,fetchBorrowRates:void 0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:void 0,fetchCurrencies:"emulated",fetchDeposit:void 0,fetchDepositAddress:void 0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:void 0,fetchDeposits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchFundingHistory:void 0,fetchFundingRate:void 0,fetchFundingRateHistory:void 0,fetchFundingRates:void 0,fetchIndexOHLCV:void 0,fetchL2OrderBook:!0,fetchLastPrices:void 0,fetchLedger:void 0,fetchLedgerEntry:void 0,fetchLeverageTiers:void 0,fetchMarketLeverageTiers:void 0,fetchMarkets:!0,fetchMarkOHLCV:void 0,fetchMyTrades:void 0,fetchOHLCV:"emulated",fetchOpenInterest:void 0,fetchOpenInterestHistory:void 0,fetchOpenOrder:void 0,fetchOpenOrders:void 0,fetchOrder:void 0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:void 0,fetchOrderTrades:void 0,fetchPermissions:void 0,fetchPosition:void 0,fetchPositions:void 0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:void 0,fetchStatus:"emulated",fetchTicker:!0,fetchTickers:void 0,fetchTime:void 0,fetchTrades:!0,fetchTradingFee:void 0,fetchTradingFees:void 0,fetchTradingLimits:void 0,fetchTransactions:void 0,fetchTransfers:void 0,fetchWithdrawAddresses:void 0,fetchWithdrawal:void 0,fetchWithdrawals:void 0,reduceMargin:void 0,setLeverage:void 0,setMargin:void 0,setMarginMode:void 0,setPositionMode:void 0,signIn:void 0,transfer:void 0,withdraw:void 0},urls:{logo:void 0,api:void 0,www:void 0,doc:void 0,fees:void 0},api:void 0,requiredCredentials:{apiKey:!0,secret:!0,uid:!1,login:!1,password:!1,twofa:!1,privateKey:!1,walletAddress:!1,token:!1},markets:void 0,currencies:{},timeframes:void 0,fees:{trading:{tierBased:void 0,percentage:void 0,taker:void 0,maker:void 0},funding:{tierBased:void 0,percentage:void 0,withdraw:{},deposit:{}}},status:{status:"ok",updated:void 0,eta:void 0,url:void 0},exceptions:void 0,httpExceptions:{422:n.ExchangeError,418:n.DDoSProtection,429:n.RateLimitExceeded,404:n.ExchangeNotAvailable,409:n.ExchangeNotAvailable,410:n.ExchangeNotAvailable,451:n.ExchangeNotAvailable,500:n.ExchangeNotAvailable,501:n.ExchangeNotAvailable,502:n.ExchangeNotAvailable,520:n.ExchangeNotAvailable,521:n.ExchangeNotAvailable,522:n.ExchangeNotAvailable,525:n.ExchangeNotAvailable,526:n.ExchangeNotAvailable,400:n.ExchangeNotAvailable,403:n.ExchangeNotAvailable,405:n.ExchangeNotAvailable,503:n.ExchangeNotAvailable,530:n.ExchangeNotAvailable,408:n.RequestTimeout,504:n.RequestTimeout,401:n.AuthenticationError,407:n.AuthenticationError,511:n.AuthenticationError},commonCurrencies:{XBT:"BTC",BCC:"BCH",BCHABC:"BCH",BCHSV:"BSV"},precisionMode:at,paddingMode:nt,limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}}}}encodeURIComponent(...e){return encodeURIComponent(...e)}checkRequiredVersion(e,t=!0){let i=!0;const[s,r,a]=e.split("."),[o,d,c]=dt.ccxtVersion.split("."),h=this.parseToInt(s),u=this.parseToInt(r),l=this.parseToInt(a),p=this.parseToInt(o),f=this.parseToInt(d),m=this.parseToInt(c);if(h>p&&(i=!1),h===p&&(u>f||u===f&&l>m)&&(i=!1),!i){if(t)throw new n.NotSupported("Your current version of CCXT is "+dt.ccxtVersion+", a newer version "+e+" is required, please, upgrade your version of CCXT");return t}return i}checkAddress(e){if(void 0===e)throw new n.InvalidAddress(this.id+" address is undefined");if(1===this.unique(e).length||e.length<this.minFundingAddressLength||e.includes(" "))throw new n.InvalidAddress(this.id+" address is invalid or has less than "+this.minFundingAddressLength.toString()+' characters: "'+this.json(e)+'"');return e}initRestRateLimiter(){if(void 0===this.rateLimit)throw new Error(this.id+".rateLimit property is not configured");this.tokenBucket=this.extend({delay:.001,capacity:1,cost:1,maxCapacity:1e3,refillRate:this.rateLimit>0?1/this.rateLimit:Number.MAX_VALUE},this.tokenBucket),this.throttle=C(this.tokenBucket)}setSandboxMode(e){if(e){if(!("test"in this.urls))throw new n.NotSupported(this.id+" does not have a sandbox URL");"string"==typeof this.urls.api?(this.urls.apiBackup=this.urls.api,this.urls.api=this.urls.test):(this.urls.apiBackup=g(this.urls.api),this.urls.api=g(this.urls.test))}else"apiBackup"in this.urls&&("string"==typeof this.urls.api?this.urls.api=this.urls.apiBackup:this.urls.api=g(this.urls.apiBackup))}defineRestApiEndpoint(e,t,i,s,r,a,n={}){const o=r.split(/[^a-zA-Z0-9]/),d=o.map(this.capitalize).join(""),c=o.map((e=>e.trim().toLowerCase())).filter((e=>e.length>0)).join("_"),h=[a[0]].concat(a.slice(1).map(this.capitalize)).join(""),u=[a[0]].concat(a.slice(1).map((e=>e.trim())).filter((e=>e.length>0))).join("_"),l=h+s+this.capitalize(d),p=u+"_"+i+"_"+c,f=a.length>1?a:a[0],m=async(i={},s={})=>this[e](r,f,t,i,void 0,void 0,n,s);this[l]=m,this[p]=m}defineRestApi(e,t,i=[]){const s=Object.keys(e);for(let r=0;r<s.length;r++){const a=s[r],o=e[a],d=a.toUpperCase(),c=a.toLowerCase(),h=this.capitalize(c);if(Array.isArray(o))for(let e=0;e<o.length;e++){const s=o[e].trim();this.defineRestApiEndpoint(t,d,c,h,s,i)}else if(a.match(/^(?:get|post|put|delete|head|patch)$/i)){const e=Object.keys(o);for(let s=0;s<e.length;s++){const r=e[s],a=r.trim(),u=o[r];if("object"==typeof u)this.defineRestApiEndpoint(t,d,c,h,a,i,u);else{if("number"!=typeof u)throw new n.NotSupported(this.id+" defineRestApi() API format is not supported, API leafs must strings, objects or numbers");this.defineRestApiEndpoint(t,d,c,h,a,i,{cost:u})}}}else this.defineRestApi(o,t,i.concat([a]))}}log(...e){console.log(...e)}async fetch(e,t="GET",i=undefined,s=undefined){if(l&&this.userAgent&&("string"==typeof this.userAgent?i=this.extend({"User-Agent":this.userAgent},i):"object"==typeof this.userAgent&&"User-Agent"in this.userAgent&&(i=this.extend(this.userAgent,i))),"function"==typeof this.proxy?(e=this.proxy(e),l&&(i=this.extend({Origin:this.origin},i))):"string"==typeof this.proxy&&(this.proxy.length&&l&&(i=this.extend({Origin:this.origin},i)),e=this.proxy+e),i=this.extend(this.headers,i),i=this.setHeaders(i),this.verbose&&this.log("fetch Request:\n",this.id,t,e,"\nRequestHeaders:\n",i,"\nRequestBody:\n",s,"\n"),void 0===this.fetchImplementation)if(l){const e=await import("../static_dependencies/node-fetch/index.js");if(void 0===this.agent){const{Agent:e}=await import("node:https");this.agent=new e({keepAlive:!0})}this.AbortError=e.AbortError,this.fetchImplementation=e.default,this.FetchError=e.FetchError}else this.fetchImplementation=self.fetch,this.AbortError=DOMException,this.FetchError=TypeError;const r=this.fetchImplementation,a={method:t,headers:i,body:s,timeout:this.timeout};this.agent&&(a.agent=this.agent);const o=new AbortController;a.signal=o.signal;const d=setTimeout((()=>{o.abort()}),this.timeout);try{const n=await r(e,a);return clearTimeout(d),this.handleRestResponse(n,e,t,i,s)}catch(i){if(i instanceof this.AbortError)throw new n.RequestTimeout(this.id+" "+t+" "+e+" request timed out ("+this.timeout+" ms)");if(i instanceof this.FetchError)throw new n.NetworkError(this.id+" "+t+" "+e+" fetch failed");throw i}}parseJson(e){try{if(this.isJsonEncodedObject(e))return JSON.parse(this.onJsonResponse(e))}catch(e){return}}getResponseHeaders(e){const t={};return e.headers.forEach(((e,i)=>{i=i.split("-").map((e=>this.capitalize(e))).join("-"),t[i]=e})),t}handleRestResponse(e,t,i="GET",s=undefined,r=undefined){const a=this.getResponseHeaders(e);if(this.handleContentTypeApplicationZip&&"application/zip"===a["Content-Type"]){const s=e.buffer();return this.enableLastResponseHeaders&&(this.last_response_headers=a),this.enableLastHttpResponse&&(this.last_http_response=s),this.verbose&&this.log("handleRestResponse:\n",this.id,i,t,e.status,e.statusText,"\nResponseHeaders:\n",a,"ZIP redacted","\n"),s}return e.text().then((n=>{const o=this.onRestResponse(e.status,e.statusText,t,i,a,n,s,r),d=this.parseJson(o);return this.enableLastResponseHeaders&&(this.last_response_headers=a),this.enableLastHttpResponse&&(this.last_http_response=n),this.enableLastJsonResponse&&(this.last_json_response=d),this.verbose&&this.log("handleRestResponse:\n",this.id,i,t,e.status,e.statusText,"\nResponseHeaders:\n",a,"\nResponseBody:\n",n,"\n"),this.handleErrors(e.status,e.statusText,t,i,a,n,d,s,r)||this.handleHttpStatusCode(e.status,e.statusText,t,i,n),d||n}))}onRestResponse(e,t,i,s,r,a,n,o){return a.trim()}onJsonResponse(e){return this.quoteJsonNumbers?e.replace(/":([+.0-9eE-]+)([,}])/g,'":"$1"$2'):e}async loadMarketsHelper(e=!1,t={}){if(!e&&this.markets)return this.markets_by_id?this.markets:this.setMarkets(this.markets);let i;!0===this.has.fetchCurrencies&&(i=await this.fetchCurrencies());const s=await this.fetchMarkets(t);return this.setMarkets(s,i)}loadMarkets(e=!1,t={}){return(e&&!this.reloadingMarkets||!this.marketsLoading)&&(this.reloadingMarkets=!0,this.marketsLoading=this.loadMarketsHelper(e,t).then((e=>(this.reloadingMarkets=!1,e)),(e=>{throw this.reloadingMarkets=!1,e}))),this.marketsLoading}fetchCurrencies(e={}){return new Promise(((e,t)=>e(this.currencies)))}fetchMarkets(e={}){return new Promise(((e,t)=>e(Object.values(this.markets))))}filterBySinceLimit(e,t=undefined,i=undefined,s="timestamp",r=!1){return null!=t&&(e=e.filter((e=>e[s]>=t))),null!=i&&(e=r?e.slice(-i):e.slice(0,i)),e}filterByValueSinceLimit(e,t,i=undefined,s=undefined,r=undefined,a="timestamp",n=!1){const o=null!=i,d=null!=s;return(o||d)&&(e=e.filter((e=>(!o||e[t]===i)&&(!d||e[a]>=s)))),null!=r&&(e=n?e.slice(-r):e.slice(0,r)),e}checkRequiredDependencies(){}remove0xPrefix(e){return"0x"===e.slice(0,2)?e.slice(2):e}hashMessage(e){const t=this.base16ToBinary(this.remove0xPrefix(e)),i=this.encode("Ethereum Signed Message:\n"+t.byteLength);return"0x"+this.hash(this.binaryConcat(i,t),a.fr,"hex")}signHash(e,t){const i=ie(e.slice(-64),t.slice(-64),r.kA,void 0);return{r:"0x"+i.r,s:"0x"+i.s,v:27+i.v}}signMessage(e,t){return this.signHash(this.hashMessage(e),t.slice(-64))}signMessageString(e,t){const i=this.signMessage(e,t);return i.r+this.remove0xPrefix(i.s)+this.binaryToBase16(this.numberToBE(i.v,1))}parseNumber(e,t=undefined){if(void 0===e)return t;try{return this.number(e)}catch(e){return t}}checkOrderArguments(e,t,i,s,r,a){if(void 0===r&&"limit"===t)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for a limit order");if(s<=0)throw new n.ArgumentsRequired(this.id+" createOrder() amount should be above 0")}handleHttpStatusCode(e,t,i,s,r){const a=e.toString();if(a in this.httpExceptions)throw new(0,this.httpExceptions[a])(this.id+" "+s+" "+i+" "+a+" "+t+" "+r)}findTimeframe(e,t=undefined){t=t||this.timeframes;const i=Object.keys(t);for(let s=0;s<i.length;s++){const r=i[s];if(t[r]===e)return r}}formatScientificNotationFTX(e){return 0===e?"0e-00":e.toExponential().replace("e-","e-0")}spawn(e,...t){const i=(0,c.Z)();return e.apply(this,t).then(i.resolve).catch(i.reject),i}delay(e,t,...i){setTimeout((()=>{this.spawn(t,...i)}),e)}orderBook(e={},t=Number.MAX_SAFE_INTEGER){return new h.ZY(e,t)}indexedOrderBook(e={},t=Number.MAX_SAFE_INTEGER){return new h.rc(e,t)}countedOrderBook(e={},t=Number.MAX_SAFE_INTEGER){return new h.yk(e,t)}handleMessage(e,t){}client(e){if(this.clients=this.clients||{},!this.clients[e]){const t=this.handleMessage.bind(this),i=this.onError.bind(this),s=this.onClose.bind(this),r=this.onConnected.bind(this),a=this.safeValue(this.options,"ws",{}),n=this.deepExtend(this.streaming,{log:this.log?this.log.bind(this):this.log,ping:this.ping?this.ping.bind(this):this.ping,verbose:this.verbose,throttle:C(this.tokenBucket),options:{agent:this.agent}},a);this.clients[e]=new d.Z(e,t,i,s,r,n)}return this.clients[e]}watch(e,t,i=undefined,s=undefined,r=undefined){const a=this.client(e),n=a.future(t);return a.connect(0).then((()=>{if(!a.subscriptions[s]){a.subscriptions[s]=r||!0;const e=this.safeValue(this.options,"ws"),t=this.safeValue(e,"cost",1);i&&(this.enableRateLimit&&a.throttle?a.throttle(t).then((()=>{a.send(i)})).catch((e=>{throw e})):a.send(i))}})),n}onConnected(e,t=undefined){}onError(e,t){e.url in this.clients&&this.clients[e.url].error&&delete this.clients[e.url]}onClose(e,t){e.error||this.clients[e.url]&&delete this.clients[e.url]}async close(){const e=Object.values(this.clients||{});for(let t=0;t<e.length;t++){const i=e[t];delete this.clients[i.url],await i.close()}}handleDelta(e,t,i=undefined){}async loadOrderBook(e,t,i,s=undefined,r={}){if(!(i in this.orderbooks))return void e.reject(new n.ExchangeError(this.id+" loadOrderBook() orderbook is not initiated"),t);const a=this.handleOption("watchOrderBook","maxRetries",3);let o=0;try{const d=this.orderbooks[i];for(;o<a;){const a=d.cache,n=await this.fetchOrderBook(i,s,r),c=this.getCacheIndex(n,a);if(c>=0)return d.reset(n),this.handleDeltas(d,a.slice(c)),d.cache.length=0,void e.resolve(d,t);o++}e.reject(new n.ExchangeError(this.id+" nonce is behind the cache after "+a.toString()+" tries."),t),delete this.clients[e.url]}catch(a){e.reject(a,t),await this.loadOrderBook(e,t,i,s,r)}}handleDeltas(e,t,i=undefined){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}getCacheIndex(e,t){return-1}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){return{}}async fetchAccounts(e={}){throw new n.NotSupported(this.id+" fetchAccounts() is not supported yet")}async fetchTrades(e,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" fetchTrades() is not supported yet")}async watchTrades(e,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" watchTrades() is not supported yet")}async fetchDepositAddresses(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchDepositAddresses() is not supported yet")}async fetchOrderBook(e,t=undefined,i={}){throw new n.NotSupported(this.id+" fetchOrderBook() is not supported yet")}async watchOrderBook(e,t=undefined,i={}){throw new n.NotSupported(this.id+" watchOrderBook() is not supported yet")}async fetchTime(e={}){throw new n.NotSupported(this.id+" fetchTime() is not supported yet")}async fetchTradingLimits(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchTradingLimits() is not supported yet")}parseTicker(e,t=undefined){throw new n.NotSupported(this.id+" parseTicker() is not supported yet")}parseDepositAddress(e,t=undefined){throw new n.NotSupported(this.id+" parseDepositAddress() is not supported yet")}parseTrade(e,t=undefined){throw new n.NotSupported(this.id+" parseTrade() is not supported yet")}parseTransaction(e,t=undefined){throw new n.NotSupported(this.id+" parseTransaction() is not supported yet")}parseTransfer(e,t=undefined){throw new n.NotSupported(this.id+" parseTransfer() is not supported yet")}parseAccount(e){throw new n.NotSupported(this.id+" parseAccount() is not supported yet")}parseLedgerEntry(e,t=undefined){throw new n.NotSupported(this.id+" parseLedgerEntry() is not supported yet")}parseOrder(e,t=undefined){throw new n.NotSupported(this.id+" parseOrder() is not supported yet")}async fetchBorrowRates(e={}){throw new n.NotSupported(this.id+" fetchBorrowRates() is not supported yet")}parseMarketLeverageTiers(e,t=undefined){throw new n.NotSupported(this.id+" parseMarketLeverageTiers() is not supported yet")}async fetchLeverageTiers(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchLeverageTiers() is not supported yet")}parsePosition(e,t=undefined){throw new n.NotSupported(this.id+" parsePosition() is not supported yet")}parseFundingRateHistory(e,t=undefined){throw new n.NotSupported(this.id+" parseFundingRateHistory() is not supported yet")}parseBorrowInterest(e,t=undefined){throw new n.NotSupported(this.id+" parseBorrowInterest() is not supported yet")}async fetchFundingRates(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchFundingRates() is not supported yet")}async transfer(e,t,i,s,r={}){throw new n.NotSupported(this.id+" transfer() is not supported yet")}async withdraw(e,t,i,s=undefined,r={}){throw new n.NotSupported(this.id+" withdraw() is not supported yet")}async createDepositAddress(e,t={}){throw new n.NotSupported(this.id+" createDepositAddress() is not supported yet")}async setLeverage(e,t=undefined,i={}){throw new n.NotSupported(this.id+" setLeverage() is not supported yet")}parseToInt(e){const t=e.toString(),i=parseFloat(t);return parseInt(i)}getDefaultOptions(){return{defaultNetworkCodeReplacements:{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"},CRO:{CRC20:"CRONOS"}}}}safeLedgerEntry(e,t=undefined){t=this.safeCurrency(void 0,t);let i=this.safeString(e,"direction"),s=this.safeString(e,"before"),r=this.safeString(e,"after");const a=this.safeString(e,"amount");void 0!==a&&(void 0===s&&void 0!==r?s=o.O.stringSub(r,a):void 0!==s&&void 0===r&&(r=o.O.stringAdd(s,a))),void 0!==s&&void 0!==r&&void 0===i&&(o.O.stringGt(s,r)&&(i="out"),o.O.stringGt(r,s)&&(i="in"));const n=this.safeValue(e,"fee");void 0!==n&&(n.cost=this.safeNumber(n,"cost"));const d=this.safeInteger(e,"timestamp");return{id:this.safeString(e,"id"),timestamp:d,datetime:this.iso8601(d),direction:i,account:this.safeString(e,"account"),referenceId:this.safeString(e,"referenceId"),referenceAccount:this.safeString(e,"referenceAccount"),type:this.safeString(e,"type"),currency:t.code,amount:this.parseNumber(a),before:this.parseNumber(s),after:this.parseNumber(r),status:this.safeString(e,"status"),fee:n,info:e}}setMarkets(e,t=undefined){const i=[];this.markets_by_id={};const s=this.sortBy(this.toArray(e),"spot",!0);for(let e=0;e<s.length;e++){const t=s[e];t.id in this.markets_by_id?this.markets_by_id[t.id].push(t):this.markets_by_id[t.id]=[t];const r=this.deepExtend(this.safeMarket(),{precision:this.precision,limits:this.limits},this.fees.trading,t);i.push(r)}this.markets=this.indexBy(i,"symbol");const r=this.keysort(this.markets),a=this.keysort(this.markets_by_id);if(this.symbols=Object.keys(r),this.ids=Object.keys(a),void 0!==t)this.currencies=this.deepExtend(this.currencies,t);else{let e=[],t=[];for(let s=0;s<i.length;s++){const r=i[s],a=this.precisionMode===at?8:this.parseNumber("1e-8"),n=this.safeValue(r,"precision",{});if("base"in r){const t=this.safeValue2(n,"base","amount",a),i={id:this.safeString2(r,"baseId","base"),numericId:this.safeInteger(r,"baseNumericId"),code:this.safeString(r,"base"),precision:t};e.push(i)}if("quote"in r){const e=this.safeValue2(n,"quote","price",a),i={id:this.safeString2(r,"quoteId","quote"),numericId:this.safeInteger(r,"quoteNumericId"),code:this.safeString(r,"quote"),precision:e};t.push(i)}}e=this.sortBy(e,"code"),t=this.sortBy(t,"code"),this.baseCurrencies=this.indexBy(e,"code"),this.quoteCurrencies=this.indexBy(t,"code");const s=this.arrayConcat(e,t),r=this.groupBy(s,"code"),a=Object.keys(r),n=[];for(let e=0;e<a.length;e++){const t=a[e],i=this.safeValue(r,t,[]);let s=this.safeValue(i,0);for(let e=1;e<i.length;e++){const t=i[e];s=this.precisionMode===ot?t.precision<s.precision?t:s:t.precision>s.precision?t:s}n.push(s)}const o=this.sortBy(n,"code");this.currencies=this.deepExtend(this.currencies,this.indexBy(o,"code"))}this.currencies_by_id=this.indexBy(this.currencies,"id");const n=this.keysort(this.currencies);return this.codes=Object.keys(n),this.markets}safeBalance(e){const t=this.omit(e,["info","timestamp","datetime","free","used","total"]),i=Object.keys(t);e.free={},e.used={},e.total={};const s={};for(let t=0;t<i.length;t++){const r=i[t];let a=this.safeString(e[r],"total"),n=this.safeString(e[r],"free"),d=this.safeString(e[r],"used");const c=this.safeString(e[r],"debt");void 0===a&&void 0!==n&&void 0!==d&&(a=o.O.stringAdd(n,d)),void 0===n&&void 0!==a&&void 0!==d&&(n=o.O.stringSub(a,d)),void 0===d&&void 0!==a&&void 0!==n&&(d=o.O.stringSub(a,n)),e[r].free=this.parseNumber(n),e[r].used=this.parseNumber(d),e[r].total=this.parseNumber(a),e.free[r]=e[r].free,e.used[r]=e[r].used,e.total[r]=e[r].total,void 0!==c&&(e[r].debt=this.parseNumber(c),s[r]=e[r].debt)}return Object.keys(s).length&&(e.debt=s),e}safeOrder(e,t=undefined){let i=this.omitZero(this.safeString(e,"amount")),s=this.safeString(e,"remaining"),r=this.safeString(e,"filled"),a=this.safeString(e,"cost"),n=this.omitZero(this.safeString(e,"average")),d=this.omitZero(this.safeString(e,"price")),c=this.safeInteger(e,"lastTradeTimestamp"),h=this.safeString(e,"symbol"),u=this.safeString(e,"side");const l=void 0===r,p=void 0===a,f=void 0===c,m=this.safeValue(e,"fee"),v=void 0===m,g=void 0===this.safeValue(e,"fees"),y=void 0===h,b=void 0===u,w=v||g,S=this.safeValue(e,"fees",[]);let P=[];if(l||p||w){const i=this.safeValue(e,"trades",P),s=this.number;this.number=String,P=this.parseTrades(i,t),this.number=s;let n=0;const d=Array.isArray(P);if(d&&(n=P.length),d&&n>0){void 0===e.symbol&&(e.symbol=P[0].symbol),void 0===e.side&&(e.side=P[0].side),void 0===e.type&&(e.type=P[0].type),void 0===e.id&&(e.id=P[0].order),l&&(r="0"),p&&(a="0");for(let e=0;e<P.length;e++){const t=P[e],i=this.safeString(t,"amount");l&&void 0!==i&&(r=o.O.stringAdd(r,i));const s=this.safeString(t,"cost");p&&void 0!==s&&(a=o.O.stringAdd(a,s)),y&&(h=this.safeString(t,"symbol")),b&&(u=this.safeString(t,"side"));const n=this.safeValue(t,"timestamp");if(f&&void 0!==n&&(c=void 0===c?n:Math.max(c,n)),w){const e=this.safeValue(t,"fees");if(void 0!==e)for(let t=0;t<e.length;t++){const i=e[t];S.push(this.extend({},i))}else{const e=this.safeValue(t,"fee");void 0!==e&&S.push(this.extend({},e))}}}}}if(w){const t=this.reduceFees?this.reduceFeesByCurrency(S):S,i=t.length;for(let e=0;e<i;e++)t[e].cost=this.safeNumber(t[e],"cost"),"rate"in t[e]&&(t[e].rate=this.safeNumber(t[e],"rate"));v||0!==i||(m.cost=this.safeNumber(m,"cost"),"rate"in m&&(m.rate=this.safeNumber(m,"rate")),t.push(m)),e.fees=t,v&&1===i&&(e.fee=t[0])}void 0===i&&(void 0!==r&&void 0!==s?i=o.O.stringAdd(r,s):"closed"===this.safeString(e,"status")&&(i=r)),void 0===r&&void 0!==i&&void 0!==s&&(r=o.O.stringSub(i,s)),void 0===s&&void 0!==i&&void 0!==r&&(s=o.O.stringSub(i,r));const k=this.safeValue(t,"inverse",!1),O=this.numberToString(this.safeValue(t,"contractSize",1));if(void 0===n&&void 0!==r&&void 0!==a&&o.O.stringGt(r,"0")){const e=o.O.stringMul(r,O);n=k?o.O.stringDiv(e,a):o.O.stringDiv(a,e)}if(p&&void 0!==r&&(void 0!==n||void 0!==d)){let e;e=void 0===n?d:n;const t=o.O.stringMul(r,O);a=k?o.O.stringDiv(t,e):o.O.stringMul(t,e)}const T=this.safeValue(e,"type");(void 0===d||o.O.stringEquals(d,"0"))&&"market"===T&&(d=n);for(let e=0;e<P.length;e++){const t=P[e];t.amount=this.safeNumber(t,"amount"),t.price=this.safeNumber(t,"price"),t.cost=this.safeNumber(t,"cost");const i=this.safeValue(t,"fee",{});i.cost=this.safeNumber(i,"cost"),"rate"in i&&(i.rate=this.safeNumber(i,"rate")),t.fee=i}let A=this.safeString(e,"timeInForce"),G=this.safeValue(e,"postOnly");void 0===A?("market"===this.safeString(e,"type")&&(A="IOC"),G&&(A="PO")):void 0===G&&(G="PO"===A);const I=this.safeInteger(e,"timestamp");let C=this.safeString(e,"datetime");void 0===C&&(C=this.iso8601(I));const M=this.parseNumber(this.safeString2(e,"triggerPrice","stopPrice"));return this.extend(e,{id:this.safeString(e,"id"),clientOrderId:this.safeString(e,"clientOrderId"),timestamp:I,datetime:C,symbol:h,type:this.safeString(e,"type"),side:u,lastTradeTimestamp:c,price:this.parseNumber(d),amount:this.parseNumber(i),cost:this.parseNumber(a),average:this.parseNumber(n),filled:this.parseNumber(r),remaining:this.parseNumber(s),timeInForce:A,postOnly:G,trades:P,reduceOnly:this.safeValue(e,"reduceOnly"),stopPrice:M,triggerPrice:M,status:this.safeString(e,"status"),fee:this.safeValue(e,"fee")})}parseOrders(e,t=undefined,i=undefined,s=undefined,r={}){let a=[];if(Array.isArray(e))for(let i=0;i<e.length;i++){const s=this.extend(this.parseOrder(e[i],t),r);a.push(s)}else{const i=Object.keys(e);for(let s=0;s<i.length;s++){const n=i[s],o=this.extend(this.parseOrder(this.extend({id:n},e[n]),t),r);a.push(o)}}a=this.sortBy(a,"timestamp");const n=void 0!==t?t.symbol:void 0,o=void 0===i;return this.filterBySymbolSinceLimit(a,n,i,s,o)}calculateFee(e,t,i,s,r,a="taker",d={}){if("market"===t&&"maker"===a)throw new n.ArgumentsRequired(this.id+' calculateFee() - you have provided incompatible arguments - "market" type order can not be "maker". Change either the "type" or the "takerOrMaker" argument to calculate the fee.');const c=this.markets[e],h=this.safeString(c,"feeSide","quote");let u,l="quote";const p=this.numberToString(s),f=this.numberToString(r);"quote"===h?u=o.O.stringMul(p,f):"base"===h?u=p:"get"===h?(u=p,"sell"===i?u=o.O.stringMul(u,f):l="base"):"give"===h&&(u=p,"buy"===i?u=o.O.stringMul(u,f):l="base"),c.spot||(l="settle"),"market"===t&&(a="taker");const m=this.safeString(c,a);return void 0!==u&&(u=o.O.stringMul(u,m)),{type:a,currency:c[l],rate:this.parseNumber(m),cost:this.parseNumber(u)}}safeTrade(e,t=undefined){const i=this.safeString(e,"amount"),s=this.safeString(e,"price");let r=this.safeString(e,"cost");if(void 0===r){const e=this.safeString(t,"contractSize");let a=s;void 0!==e&&(this.safeValue(t,"inverse",!1)&&(a=o.O.stringDiv("1",s)),a=o.O.stringMul(a,e)),r=o.O.stringMul(a,i)}const a=void 0===this.safeValue(e,"fee"),n=void 0===this.safeValue(e,"fees"),d=a||n,c=[],h=this.safeValue(e,"fee");if(d){const t=this.reduceFees?this.reduceFeesByCurrency(c):c,i=t.length;for(let e=0;e<i;e++)t[e].cost=this.safeNumber(t[e],"cost"),"rate"in t[e]&&(t[e].rate=this.safeNumber(t[e],"rate"));a||0!==i||(h.cost=this.safeNumber(h,"cost"),"rate"in h&&(h.rate=this.safeNumber(h,"rate")),t.push(h)),n&&(e.fees=t),a&&1===i&&(e.fee=t[0]);const s=this.safeValue(e,"fee");void 0!==s&&(s.cost=this.safeNumber(s,"cost"),"rate"in s&&(s.rate=this.safeNumber(s,"rate")),e.fee=s)}return e.amount=this.parseNumber(i),e.price=this.parseNumber(s),e.cost=this.parseNumber(r),e}reduceFeesByCurrency(e){const t={};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency");if(void 0!==r){const e=this.safeString(s,"rate"),i=this.safeValue(s,"cost");if(o.O.stringEq(i,"0"))continue;r in t||(t[r]={});const a=void 0===e?"":e;a in t[r]?t[r][a].cost=o.O.stringAdd(t[r][a].cost,i):(t[r][a]={currency:r,cost:i},void 0!==e&&(t[r][a].rate=e))}}let i=[];const s=Object.values(t);for(let e=0;e<s.length;e++){const t=Object.values(s[e]);i=this.arrayConcat(i,t)}return i}safeTicker(e,t=undefined){let i=this.safeValue(e,"open"),s=this.safeValue(e,"close"),r=this.safeValue(e,"last"),a=this.safeValue(e,"change"),n=this.safeValue(e,"percentage"),d=this.safeValue(e,"average"),c=this.safeValue(e,"vwap");const h=this.safeValue(e,"baseVolume"),u=this.safeValue(e,"quoteVolume");return void 0===c&&(c=o.O.stringDiv(u,h)),void 0!==r&&void 0===s?s=r:void 0===r&&void 0!==s&&(r=s),void 0!==r&&void 0!==i&&(void 0===a&&(a=o.O.stringSub(r,i)),void 0===d&&(d=o.O.stringDiv(o.O.stringAdd(r,i),"2"))),void 0===n&&void 0!==a&&void 0!==i&&o.O.stringGt(i,"0")&&(n=o.O.stringMul(o.O.stringDiv(a,i),"100")),void 0===a&&void 0!==n&&void 0!==i&&(a=o.O.stringDiv(o.O.stringMul(n,i),"100")),void 0===i&&void 0!==r&&void 0!==a&&(i=o.O.stringSub(r,a)),this.extend(e,{bid:this.safeNumber(e,"bid"),bidVolume:this.safeNumber(e,"bidVolume"),ask:this.safeNumber(e,"ask"),askVolume:this.safeNumber(e,"askVolume"),high:this.safeNumber(e,"high"),low:this.safeNumber(e,"low"),open:this.parseNumber(i),close:this.parseNumber(s),last:this.parseNumber(r),change:this.parseNumber(a),percentage:this.parseNumber(n),average:this.parseNumber(d),vwap:this.parseNumber(c),baseVolume:this.parseNumber(h),quoteVolume:this.parseNumber(u),previousClose:this.safeNumber(e,"previousClose")})}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){if(!this.has.fetchTrades)throw new n.NotSupported(this.id+" fetchOHLCV() is not supported yet");await this.loadMarkets();const a=await this.fetchTrades(e,i,s,r),o=this.buildOHLCVC(a,t,i,s),d=[];for(let e=0;e<o.length;e++)d.push([this.safeInteger(o[e],0),this.safeNumber(o[e],1),this.safeNumber(o[e],2),this.safeNumber(o[e],3),this.safeNumber(o[e],4),this.safeNumber(o[e],5)]);return d}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){throw new n.NotSupported(this.id+" watchOHLCV() is not supported yet")}convertTradingViewToOHLCV(e,t="t",i="o",s="h",r="l",a="c",n="v",o=!1){const d=[],c=this.safeValue(e,t,[]),h=this.safeValue(e,i,[]),u=this.safeValue(e,s,[]),l=this.safeValue(e,r,[]),p=this.safeValue(e,a,[]),f=this.safeValue(e,n,[]);for(let e=0;e<c.length;e++)d.push([o?this.safeInteger(c,e):this.safeTimestamp(c,e),this.safeValue(h,e),this.safeValue(u,e),this.safeValue(l,e),this.safeValue(p,e),this.safeValue(f,e)]);return d}convertOHLCVToTradingView(e,t="t",i="o",s="h",r="l",a="c",n="v",o=!1){const d={};d[t]=[],d[i]=[],d[s]=[],d[r]=[],d[a]=[],d[n]=[];for(let c=0;c<e.length;c++){const h=o?e[c][0]:this.parseToInt(e[c][0]/1e3);d[t].push(h),d[i].push(e[c][1]),d[s].push(e[c][2]),d[r].push(e[c][3]),d[a].push(e[c][4]),d[n].push(e[c][5])}return d}marketIds(e){if(void 0===e)return e;const t=[];for(let i=0;i<e.length;i++)t.push(this.marketId(e[i]));return t}marketSymbols(e){if(void 0===e)return e;const t=[];for(let i=0;i<e.length;i++)t.push(this.symbol(e[i]));return t}marketCodes(e){if(void 0===e)return e;const t=[];for(let i=0;i<e.length;i++)t.push(this.commonCurrencyCode(e[i]));return t}parseBidsAsks(e,t=0,i=1){e=this.toArray(e);const s=[];for(let r=0;r<e.length;r++)s.push(this.parseBidAsk(e[r],t,i));return s}async fetchL2OrderBook(e,t=undefined,i={}){const s=await this.fetchOrderBook(e,t,i);return this.extend(s,{asks:this.sortBy(this.aggregate(s.asks),0),bids:this.sortBy(this.aggregate(s.bids),0,!0)})}filterBySymbol(e,t=undefined){if(void 0===t)return e;const i=[];for(let s=0;s<e.length;s++)this.safeString(e[s],"symbol")===t&&i.push(e[s]);return i}parseOHLCV(e,t=undefined){return Array.isArray(e)?[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]:e}getNetwork(e,t){const i={ETHEREUM:"ETH",ETHER:"ETH",ERC20:"ETH",ETH:"ETH",TRC20:"TRX",TRON:"TRX",TRX:"TRX",BEP20:"BSC",BSC:"BSC",HRC20:"HT",HECO:"HT",SPL:"SOL",SOL:"SOL",TERRA:"LUNA",LUNA:"LUNA",POLYGON:"MATIC",MATIC:"MATIC",EOS:"EOS",WAVES:"WAVES",AVALANCHE:"AVAX",AVAX:"AVAX",QTUM:"QTUM",CHZ:"CHZ",NEO:"NEO",ONT:"ONT",RON:"RON"};if((e=e.toUpperCase())===t)return e;if(e in i)return i[e];throw new n.NotSupported(this.id+" network "+e+" is not yet supported")}networkCodeToId(e,t=undefined){const i=this.safeValue(this.options,"networks",{});let s=this.safeString(i,e);if(void 0===s)if(void 0===t)s=e;else{const r=this.safeValue(this.options,"defaultNetworkCodeReplacements",{});if(t in r){const a=r[t],n=Object.keys(a);for(let t=0;t<n.length;t++){const r=n[t];if(a[r]===e){s=this.safeString(i,r);break}}}void 0===s&&(s=e)}return s}networkIdToCode(e,t=undefined){const i=this.safeValue(this.options,"networksById",{});let s=this.safeString(i,e,e);if(void 0!==t){const e=this.safeValue(this.options,"defaultNetworkCodeReplacements",{});if(t in e){const i=this.safeValue(e,t,{});s=this.safeString(i,s,s)}}return s}networkCodesToIds(e=undefined){if(void 0===e)return;const t=[];for(let i=0;i<e.length;i++){const s=e[i];t.push(this.networkCodeToId(s))}return t}handleNetworkCodeAndParams(e){const t=this.safeString2(e,"networkCode","network");return void 0!==t&&(e=this.omit(e,["networkCode","network"])),[t,e]}defaultNetworkCode(e){let t;const i=this.safeValue(this.options,"defaultNetworks",{});if(e in i)t=i[e];else{const e=this.safeValue(this.options,"defaultNetwork");void 0!==e&&(t=e)}return t}selectNetworkCodeFromUnifiedNetworks(e,t,i){return this.selectNetworkKeyFromNetworks(e,t,i,!0)}selectNetworkIdFromRawNetworks(e,t,i){return this.selectNetworkKeyFromNetworks(e,t,i,!1)}selectNetworkKeyFromNetworks(e,t,i,s=!1){let r;const a=Object.keys(i),o=a.length;if(void 0!==t){if(0===o)throw new n.NotSupported(this.id+" - "+t+" network did not return any result for "+e);{const o=s?t:this.networkCodeToId(t,e);if(!(o in i))throw new n.NotSupported(this.id+" - "+o+" network was not found for "+e+", use one of "+a.join(", "));r=o}}else{if(0===o)throw new n.NotSupported(this.id+" - no networks were returned for "+e);{const t=this.defaultNetworkCode(e),n=s?t:this.networkCodeToId(t,e);r=n in i?n:a[0]}}return r}safeNumber2(e,t,i,s=undefined){const r=this.safeString2(e,t,i);return this.parseNumber(r,s)}parseOrderBook(e,t,i=undefined,s="bids",r="asks",a=0,n=1){const o=this.parseBidsAsks(this.safeValue(e,s,[]),a,n),d=this.parseBidsAsks(this.safeValue(e,r,[]),a,n);return{symbol:t,bids:this.sortBy(o,0,!0),asks:this.sortBy(d,0),timestamp:i,datetime:this.iso8601(i),nonce:void 0}}parseOHLCVs(e,t=undefined,i="1m",s=undefined,r=undefined){const a=[];for(let i=0;i<e.length;i++)a.push(this.parseOHLCV(e[i],t));const n=this.sortBy(a,0),o=void 0===s;return this.filterBySinceLimit(n,s,r,0,o)}parseLeverageTiers(e,t=undefined,i=undefined){t=this.marketSymbols(t);const s={};for(let r=0;r<e.length;r++){const a=e[r],n=this.safeString(a,i),o=this.safeMarket(n,void 0,void 0,this.safeString(this.options,"defaultType")),d=o.symbol;this.safeValue(o,"contract",!1)&&(void 0===t||this.inArray(d,t))&&(s[d]=this.parseMarketLeverageTiers(a,o))}return s}async loadTradingLimits(e=undefined,t=!1,i={}){if(this.has.fetchTradingLimits&&(t||!("limitsLoaded"in this.options))){const t=await this.fetchTradingLimits(e);for(let i=0;i<e.length;i++){const s=e[i];this.markets[s]=this.deepExtend(this.markets[s],t[s])}this.options.limitsLoaded=this.milliseconds()}return this.markets}parsePositions(e,t=undefined,i={}){t=this.marketSymbols(t),e=this.toArray(e);const s=[];for(let t=0;t<e.length;t++){const r=this.extend(this.parsePosition(e[t],void 0),i);s.push(r)}return this.filterByArray(s,"symbol",t,!1)}parseAccounts(e,t={}){e=this.toArray(e);const i=[];for(let s=0;s<e.length;s++){const r=this.extend(this.parseAccount(e[s]),t);i.push(r)}return i}parseTrades(e,t=undefined,i=undefined,s=undefined,r={}){e=this.toArray(e);let a=[];for(let i=0;i<e.length;i++){const s=this.extend(this.parseTrade(e[i],t),r);a.push(s)}a=this.sortBy2(a,"timestamp","id");const n=void 0!==t?t.symbol:void 0,o=void 0===i;return this.filterBySymbolSinceLimit(a,n,i,s,o)}parseTransactions(e,t=undefined,i=undefined,s=undefined,r={}){e=this.toArray(e);let a=[];for(let i=0;i<e.length;i++){const s=this.extend(this.parseTransaction(e[i],t),r);a.push(s)}a=this.sortBy(a,"timestamp");const n=void 0!==t?t.code:void 0,o=void 0===i;return this.filterByCurrencySinceLimit(a,n,i,s,o)}parseTransfers(e,t=undefined,i=undefined,s=undefined,r={}){e=this.toArray(e);let a=[];for(let i=0;i<e.length;i++){const s=this.extend(this.parseTransfer(e[i],t),r);a.push(s)}a=this.sortBy(a,"timestamp");const n=void 0!==t?t.code:void 0,o=void 0===i;return this.filterByCurrencySinceLimit(a,n,i,s,o)}parseLedger(e,t=undefined,i=undefined,s=undefined,r={}){let a=[];const n=this.toArray(e);for(let e=0;e<n.length;e++){const i=this.parseLedgerEntry(n[e],t);if(Array.isArray(i))for(let e=0;e<i.length;e++)a.push(this.extend(i[e],r));else a.push(this.extend(i,r))}a=this.sortBy(a,"timestamp");const o=void 0!==t?t.code:void 0,d=void 0===i;return this.filterByCurrencySinceLimit(a,o,i,s,d)}nonce(){return this.seconds()}setHeaders(e){return e}marketId(e){const t=this.market(e);return void 0!==t?t.id:e}symbol(e){const t=this.market(e);return this.safeString(t,"symbol",e)}resolvePath(e,t){return[this.implodeParams(e,t),this.omit(t,this.extractParams(e))]}filterByArray(e,t,i=undefined,s=!0){if(e=this.toArray(e),void 0===i||!i)return s?this.indexBy(e,t):e;const r=[];for(let s=0;s<e.length;s++)this.inArray(e[s][t],i)&&r.push(e[s]);return s?this.indexBy(r,t):r}async fetch2(e,t="public",i="GET",s={},r=undefined,a=undefined,n={},o={}){if(this.enableRateLimit){const r=this.calculateRateLimiterCost(t,i,e,s,n,o);await this.throttle(r)}this.lastRestRequestTimestamp=this.milliseconds();const d=this.sign(e,t,i,s,r,a);return await this.fetch(d.url,d.method,d.headers,d.body)}async request(e,t="public",i="GET",s={},r=undefined,a=undefined,n={},o={}){return await this.fetch2(e,t,i,s,r,a,n,o)}async loadAccounts(e=!1,t={}){if(e)this.accounts=await this.fetchAccounts(t);else{if(this.accounts)return this.accounts;this.accounts=await this.fetchAccounts(t)}return this.accountsById=this.indexBy(this.accounts,"id"),this.accounts}async fetchOHLCVC(e,t="1m",i=undefined,s=undefined,r={}){if(!this.has.fetchTrades)throw new n.NotSupported(this.id+" fetchOHLCV() is not supported yet");await this.loadMarkets();const a=await this.fetchTrades(e,i,s,r);return this.buildOHLCVC(a,t,i,s)}parseTradingViewOHLCV(e,t=undefined,i="1m",s=undefined,r=undefined){const a=this.convertTradingViewToOHLCV(e);return this.parseOHLCVs(a,t,i,s,r)}async editLimitBuyOrder(e,t,i,s=undefined,r={}){return await this.editLimitOrder(e,t,"buy",i,s,r)}async editLimitSellOrder(e,t,i,s=undefined,r={}){return await this.editLimitOrder(e,t,"sell",i,s,r)}async editLimitOrder(e,t,i,s,r=undefined,a={}){return await this.editOrder(e,t,"limit",i,s,r,a)}async editOrder(e,t,i,s,r,a=undefined,n={}){return await this.cancelOrder(e,t),await this.createOrder(t,i,s,r,a,n)}async fetchPermissions(e={}){throw new n.NotSupported(this.id+" fetchPermissions() is not supported yet")}async fetchPosition(e,t={}){throw new n.NotSupported(this.id+" fetchPosition() is not supported yet")}async fetchPositions(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchPositions() is not supported yet")}async fetchPositionsRisk(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchPositionsRisk() is not supported yet")}async fetchBidsAsks(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchBidsAsks() is not supported yet")}parseBidAsk(e,t=0,i=1){return[this.safeNumber(e,t),this.safeNumber(e,i)]}safeCurrency(e,t=undefined){if(void 0===e&&void 0!==t)return t;if(void 0!==this.currencies_by_id&&e in this.currencies_by_id&&void 0!==this.currencies_by_id[e])return this.currencies_by_id[e];let i=e;return void 0!==e&&(i=this.commonCurrencyCode(e.toUpperCase())),{id:e,code:i}}safeMarket(e=undefined,t=undefined,i=undefined,s=undefined){const r={id:e,symbol:e,base:void 0,quote:void 0,baseId:void 0,quoteId:void 0,active:void 0,type:void 0,linear:void 0,inverse:void 0,spot:!1,swap:!1,future:!1,option:!1,margin:!1,contract:!1,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,optionType:void 0,strike:void 0,settle:void 0,settleId:void 0,precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0};if(void 0!==e)if(void 0!==this.markets_by_id&&e in this.markets_by_id){const i=this.markets_by_id[e];if(1===i.length)return i[0];{if(void 0===s&&void 0===t)throw new n.ArgumentsRequired(this.id+" safeMarket() requires a fourth argument for "+e+" to disambiguate between different markets with the same market id");const r=void 0===s?t.type:s;for(let e=0;e<i.length;e++){const t=i[e];if(t[r])return t}}}else if(void 0!==i){const t=e.split(i);return 2===t.length?(r.baseId=this.safeString(t,0),r.quoteId=this.safeString(t,1),r.base=this.safeCurrencyCode(r.baseId),r.quote=this.safeCurrencyCode(r.quoteId),r.symbol=r.base+"/"+r.quote,r):r}return void 0!==t?t:r}checkRequiredCredentials(e=!0){const t=Object.keys(this.requiredCredentials);for(let i=0;i<t.length;i++){const s=t[i];if(this.requiredCredentials[s]&&!this[s]){if(e)throw new n.AuthenticationError(this.id+' requires "'+s+'" credential');return!1}}return!0}oath(){if(void 0!==this.twofa)return(0,u.Z)(this.twofa);throw new n.ExchangeError(this.id+" exchange.twofa has not been set for 2FA Two-Factor Authentication")}async fetchBalance(e={}){throw new n.NotSupported(this.id+" fetchBalance() is not supported yet")}async watchBalance(e={}){throw new n.NotSupported(this.id+" watchBalance() is not supported yet")}async fetchPartialBalance(e,t={}){return(await this.fetchBalance(t))[e]}async fetchFreeBalance(e={}){return await this.fetchPartialBalance("free",e)}async fetchUsedBalance(e={}){return await this.fetchPartialBalance("used",e)}async fetchTotalBalance(e={}){return await this.fetchPartialBalance("total",e)}async fetchStatus(e={}){if(this.has.fetchTime){const t=await this.fetchTime(e);this.status=this.extend(this.status,{updated:t})}return"info"in this.status||(this.status.info=void 0),this.status}async fetchFundingFee(e,t={}){if(this.safeValue(this.options,"warnOnFetchFundingFee",!0))throw new n.NotSupported(this.id+' fetchFundingFee() method is deprecated, it will be removed in July 2022, please, use fetchTransactionFee() or set exchange.options["warnOnFetchFundingFee"] = false to suppress this warning');return await this.fetchTransactionFee(e,t)}async fetchFundingFees(e=undefined,t={}){if(this.safeValue(this.options,"warnOnFetchFundingFees",!0))throw new n.NotSupported(this.id+' fetchFundingFees() method is deprecated, it will be removed in July 2022. Please, use fetchTransactionFees() or set exchange.options["warnOnFetchFundingFees"] = false to suppress this warning');return await this.fetchTransactionFees(e,t)}async fetchTransactionFee(e,t={}){if(!this.has.fetchTransactionFees)throw new n.NotSupported(this.id+" fetchTransactionFee() is not supported yet");return await this.fetchTransactionFees([e],t)}async fetchTransactionFees(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchTransactionFees() is not supported yet")}async fetchDepositWithdrawFees(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchDepositWithdrawFees() is not supported yet")}async fetchDepositWithdrawFee(e,t={}){if(!this.has.fetchDepositWithdrawFees)throw new n.NotSupported(this.id+" fetchDepositWithdrawFee() is not supported yet");const i=await this.fetchDepositWithdrawFees([e],t);return this.safeValue(i,e)}getSupportedMapping(e,t={}){if(e in t)return t[e];throw new n.NotSupported(this.id+" "+e+" does not have a value in mapping")}async fetchBorrowRate(e,t={}){if(await this.loadMarkets(),!this.has.fetchBorrowRates)throw new n.NotSupported(this.id+" fetchBorrowRate() is not supported yet");const i=await this.fetchBorrowRates(t),s=this.safeValue(i,e);if(void 0===s)throw new n.ExchangeError(this.id+" fetchBorrowRate() could not find the borrow rate for currency code "+e);return s}handleOptionAndParams(e,t,i,s=undefined){const r="default"+this.capitalize(i);let a=this.safeValue2(e,i,r);if(void 0!==a)e=this.omit(e,[i,r]);else{const e=this.safeValue(this.options,t);void 0!==e&&(a=this.safeValue2(e,i,r)),void 0===a&&(a=this.safeValue2(this.options,i,r)),a=void 0!==a?a:s}return[a,e]}handleOption(e,t,i=undefined){const[s,r]=this.handleOptionAndParams({},e,t,i);return s}handleMarketTypeAndParams(e,t=undefined,i={}){const s=this.safeString2(this.options,"defaultType","type","spot"),r=this.safeValue(this.options,e);let a=s;void 0!==r&&(a="string"==typeof r?r:this.safeString2(r,"defaultType","type",a));const n=void 0===t?a:t.type;return[this.safeString2(i,"defaultType","type",n),i=this.omit(i,["defaultType","type"])]}handleSubTypeAndParams(e,t=undefined,i={},s=undefined){let r;const a=this.safeString2(i,"subType","defaultSubType");return void 0!==a?(r=a,i=this.omit(i,["subType","defaultSubType"])):(void 0!==t&&(t.linear?r="linear":t.inverse&&(r="inverse")),void 0===r&&(r=this.handleOptionAndParams(void 0,e,"subType",s)[0])),[r,i]}handleMarginModeAndParams(e,t={},i=undefined){return this.handleOptionAndParams(t,e,"marginMode",i)}throwExactlyMatchedException(e,t,i){if(t in e)throw new e[t](i)}throwBroadlyMatchedException(e,t,i){const s=this.findBroadlyMatchedKey(e,t);if(void 0!==s)throw new e[s](i)}findBroadlyMatchedKey(e,t){const i=Object.keys(e);for(let e=0;e<i.length;e++){const s=i[e];if(void 0!==t&&t.indexOf(s)>=0)return s}}handleErrors(e,t,i,s,r,a,n,o,d){}calculateRateLimiterCost(e,t,i,s,r={},a={}){return this.safeValue(r,"cost",1)}async fetchTicker(e,t={}){if(this.has.fetchTickers){await this.loadMarkets(),e=this.market(e).symbol;const i=await this.fetchTickers([e],t),s=this.safeValue(i,e);if(void 0===s)throw new n.NullResponse(this.id+" fetchTickers() could not find a ticker for "+e);return s}throw new n.NotSupported(this.id+" fetchTicker() is not supported yet")}async watchTicker(e,t={}){throw new n.NotSupported(this.id+" watchTicker() is not supported yet")}async fetchTickers(e=undefined,t={}){throw new n.NotSupported(this.id+" fetchTickers() is not supported yet")}async watchTickers(e=undefined,t={}){throw new n.NotSupported(this.id+" watchTickers() is not supported yet")}async fetchOrder(e,t=undefined,i={}){throw new n.NotSupported(this.id+" fetchOrder() is not supported yet")}async fetchOrderStatus(e,t=undefined,i={}){return(await this.fetchOrder(e,t,i)).status}async fetchUnifiedOrder(e,t={}){return await this.fetchOrder(this.safeValue(e,"id"),this.safeValue(e,"symbol"),t)}async createOrder(e,t,i,s,r=undefined,a={}){throw new n.NotSupported(this.id+" createOrder() is not supported yet")}async cancelOrder(e,t=undefined,i={}){throw new n.NotSupported(this.id+" cancelOrder() is not supported yet")}async cancelAllOrders(e=undefined,t={}){throw new n.NotSupported(this.id+" cancelAllOrders() is not supported yet")}async cancelUnifiedOrder(e,t={}){return this.cancelOrder(this.safeValue(e,"id"),this.safeValue(e,"symbol"),t)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" fetchOrders() is not supported yet")}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" watchOrders() is not supported yet")}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" fetchOpenOrders() is not supported yet")}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" fetchClosedOrders() is not supported yet")}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" fetchMyTrades() is not supported yet")}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" watchMyTrades() is not supported yet")}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" fetchTransactions() is not supported yet")}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" fetchDeposits() is not supported yet")}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){throw new n.NotSupported(this.id+" fetchWithdrawals() is not supported yet")}parseLastPrice(e,t=undefined){throw new n.NotSupported(this.id+" parseLastPrice() is not supported yet")}async fetchDepositAddress(e,t={}){if(this.has.fetchDepositAddresses){const i=await this.fetchDepositAddresses([e],t),s=this.safeValue(i,e);if(void 0===s)throw new n.InvalidAddress(this.id+" fetchDepositAddress() could not find a deposit address for "+e+", make sure you have created a corresponding deposit address in your wallet on the exchange website");return s}throw new n.NotSupported(this.id+" fetchDepositAddress() is not supported yet")}account(){return{free:void 0,used:void 0,total:void 0}}commonCurrencyCode(e){return this.substituteCommonCurrencyCodes?this.safeString(this.commonCurrencies,e,e):e}currency(e){if(void 0===this.currencies)throw new n.ExchangeError(this.id+" currencies not loaded");if("string"==typeof e){if(e in this.currencies)return this.currencies[e];if(e in this.currencies_by_id)return this.currencies_by_id[e]}throw new n.ExchangeError(this.id+" does not have currency code "+e)}market(e){if(void 0===this.markets)throw new n.ExchangeError(this.id+" markets not loaded");if("string"==typeof e){if(e in this.markets)return this.markets[e];if(e in this.markets_by_id){const t=this.markets_by_id[e],i=this.safeString2(this.options,"defaultType","defaultSubType","spot");for(let e=0;e<t.length;e++){const s=t[e];if(s[i])return s}return t[0]}}throw new n.BadSymbol(this.id+" does not have market symbol "+e)}handleWithdrawTagAndParams(e,t){return"object"==typeof e&&(t=this.extend(e,t),e=void 0),void 0===e&&void 0!==(e=this.safeString(t,"tag"))&&(t=this.omit(t,"tag")),[e,t]}async createLimitOrder(e,t,i,s,r={}){return await this.createOrder(e,"limit",t,i,s,r)}async createMarketOrder(e,t,i,s=undefined,r={}){return await this.createOrder(e,"market",t,i,s,r)}async createLimitBuyOrder(e,t,i,s={}){return await this.createOrder(e,"limit","buy",t,i,s)}async createLimitSellOrder(e,t,i,s={}){return await this.createOrder(e,"limit","sell",t,i,s)}async createMarketBuyOrder(e,t,i={}){return await this.createOrder(e,"market","buy",t,void 0,i)}async createMarketSellOrder(e,t,i={}){return await this.createOrder(e,"market","sell",t,void 0,i)}costToPrecision(e,t){const i=this.market(e);return this.decimalToPrecision(t,st,i.precision.price,this.precisionMode,this.paddingMode)}priceToPrecision(e,t){const i=this.market(e),s=this.decimalToPrecision(t,rt,i.precision.price,this.precisionMode,this.paddingMode);if("0"===s)throw new n.ArgumentsRequired(this.id+" price of "+i.symbol+" must be greater than minimum price precision of "+this.numberToString(i.precision.price));return s}amountToPrecision(e,t){const i=this.market(e),s=this.decimalToPrecision(t,st,i.precision.amount,this.precisionMode,this.paddingMode);if("0"===s)throw new n.ArgumentsRequired(this.id+" amount of "+i.symbol+" must be greater than minimum amount precision of "+this.numberToString(i.precision.amount));return s}feeToPrecision(e,t){const i=this.market(e);return this.decimalToPrecision(t,rt,i.precision.price,this.precisionMode,this.paddingMode)}currencyToPrecision(e,t,i=undefined){const s=this.currencies[e];let r=this.safeValue(s,"precision");if(void 0!==i){const e=this.safeValue(s,"networks",{}),t=this.safeValue(e,i,{});r=this.safeValue(t,"precision",r)}return void 0===r?t:this.decimalToPrecision(t,rt,r,this.precisionMode,this.paddingMode)}safeNumber(e,t,i=undefined){const s=this.safeString(e,t);return this.parseNumber(s,i)}safeNumberN(e,t,i=undefined){const s=this.safeStringN(e,t);return this.parseNumber(s,i)}parsePrecision(e){if(void 0===e)return;const t=parseInt(e);if(0===t)return"1";let i="0.";for(let e=0;e<t-1;e++)i+="0";return i+"1"}async loadTimeDifference(e={}){const t=await this.fetchTime(e),i=this.milliseconds();return this.options.timeDifference=i-t,this.options.timeDifference}implodeHostname(e){return this.implodeParams(e,{hostname:this.hostname})}async fetchMarketLeverageTiers(e,t={}){if(this.has.fetchLeverageTiers){if(!(await this.market(e)).contract)throw new n.BadSymbol(this.id+" fetchMarketLeverageTiers() supports contract markets only");const t=await this.fetchLeverageTiers([e]);return this.safeValue(t,e)}throw new n.NotSupported(this.id+" fetchMarketLeverageTiers() is not supported yet")}async createPostOnlyOrder(e,t,i,s,r,a={}){if(!this.has.createPostOnlyOrder)throw new n.NotSupported(this.id+"createPostOnlyOrder() is not supported yet");const o=this.extend(a,{postOnly:!0});return await this.createOrder(e,t,i,s,r,o)}async createReduceOnlyOrder(e,t,i,s,r,a={}){if(!this.has.createReduceOnlyOrder)throw new n.NotSupported(this.id+"createReduceOnlyOrder() is not supported yet");const o=this.extend(a,{reduceOnly:!0});return await this.createOrder(e,t,i,s,r,o)}async createStopOrder(e,t,i,s,r=undefined,a=undefined,o={}){if(!this.has.createStopOrder)throw new n.NotSupported(this.id+" createStopOrder() is not supported yet");if(void 0===a)throw new n.ArgumentsRequired(this.id+" create_stop_order() requires a stopPrice argument");const d=this.extend(o,{stopPrice:a});return await this.createOrder(e,t,i,s,r,d)}async createStopLimitOrder(e,t,i,s,r,a={}){if(!this.has.createStopLimitOrder)throw new n.NotSupported(this.id+" createStopLimitOrder() is not supported yet");const o=this.extend(a,{stopPrice:r});return await this.createOrder(e,"limit",t,i,s,o)}async createStopMarketOrder(e,t,i,s,r={}){if(!this.has.createStopMarketOrder)throw new n.NotSupported(this.id+" createStopMarketOrder() is not supported yet");const a=this.extend(r,{stopPrice:s});return await this.createOrder(e,"market",t,i,void 0,a)}safeCurrencyCode(e,t=undefined){return(t=this.safeCurrency(e,t)).code}filterBySymbolSinceLimit(e,t=undefined,i=undefined,s=undefined,r=!1){return this.filterByValueSinceLimit(e,"symbol",t,i,s,"timestamp",r)}filterByCurrencySinceLimit(e,t=undefined,i=undefined,s=undefined,r=!1){return this.filterByValueSinceLimit(e,"currency",t,i,s,"timestamp",r)}parseLastPrices(e,t=undefined,i={}){const s=[];if(Array.isArray(e))for(let t=0;t<e.length;t++){const r=this.extend(this.parseLastPrice(e[t]),i);s.push(r)}else{const t=Object.keys(e);for(let r=0;r<t.length;r++){const a=t[r],n=this.safeMarket(a),o=this.extend(this.parseLastPrice(e[a],n),i);s.push(o)}}return t=this.marketSymbols(t),this.filterByArray(s,"symbol",t)}parseTickers(e,t=undefined,i={}){const s=[];if(Array.isArray(e))for(let t=0;t<e.length;t++){const r=this.extend(this.parseTicker(e[t]),i);s.push(r)}else{const t=Object.keys(e);for(let r=0;r<t.length;r++){const a=t[r],n=this.safeMarket(a),o=this.extend(this.parseTicker(e[a],n),i);s.push(o)}}return t=this.marketSymbols(t),this.filterByArray(s,"symbol",t)}parseDepositAddresses(e,t=undefined,i=!0,s={}){let r=[];for(let t=0;t<e.length;t++){const i=this.extend(this.parseDepositAddress(e[t]),s);r.push(i)}return void 0!==t&&(r=this.filterByArray(r,"currency",t,!1)),i?this.indexBy(r,"currency"):r}parseBorrowInterests(e,t=undefined){const i=[];for(let s=0;s<e.length;s++){const r=e[s];i.push(this.parseBorrowInterest(r,t))}return i}parseFundingRateHistories(e,t=undefined,i=undefined,s=undefined){const r=[];for(let i=0;i<e.length;i++){const s=e[i];r.push(this.parseFundingRateHistory(s,t))}const a=this.sortBy(r,"timestamp"),n=void 0===t?void 0:t.symbol;return this.filterBySymbolSinceLimit(a,n,i,s)}safeSymbol(e,t=undefined,i=undefined,s=undefined){return(t=this.safeMarket(e,t,i,s)).symbol}parseFundingRate(e,t=undefined){throw new n.NotSupported(this.id+" parseFundingRate() is not supported yet")}parseFundingRates(e,t=undefined){const i={};for(let s=0;s<e.length;s++){const r=this.parseFundingRate(e[s],t);i[r.symbol]=r}return i}isTriggerOrder(e){const t=this.safeValue2(e,"trigger","stop");return t&&(e=this.omit(e,["trigger","stop"])),[t,e]}isPostOnly(e,t,i={}){const s=this.safeStringUpper(i,"timeInForce");let r=this.safeValue2(i,"postOnly","post_only",!1);if(r=r||"PO"===s||t,r){if("IOC"===s||"FOK"===s)throw new n.InvalidOrder(this.id+" postOnly orders cannot have timeInForce equal to "+s);if(e)throw new n.InvalidOrder(this.id+" market orders cannot be postOnly");return!0}return!1}handlePostOnly(e,t,i={}){const s=this.safeStringUpper(i,"timeInForce");let r=this.safeValue(i,"postOnly",!1);const a="PO"===s;if(r=r||a||t,r){if("IOC"===s||"FOK"===s)throw new n.InvalidOrder(this.id+" postOnly orders cannot have timeInForce equal to "+s);if(e)throw new n.InvalidOrder(this.id+" market orders cannot be postOnly");return a&&(i=this.omit(i,"timeInForce")),[!0,i=this.omit(i,"postOnly")]}return[!1,i]}async fetchLastPrices(e={}){throw new n.NotSupported(this.id+" fetchLastPrices() is not supported yet")}async fetchTradingFees(e={}){throw new n.NotSupported(this.id+" fetchTradingFees() is not supported yet")}async fetchTradingFee(e,t={}){if(!this.has.fetchTradingFees)throw new n.NotSupported(this.id+" fetchTradingFee() is not supported yet");return await this.fetchTradingFees(t)}parseOpenInterest(e,t=undefined){throw new n.NotSupported(this.id+" parseOpenInterest () is not supported yet")}parseOpenInterests(e,t=undefined,i=undefined,s=undefined){const r=[];for(let i=0;i<e.length;i++){const s=e[i],a=this.parseOpenInterest(s,t);r.push(a)}const a=this.sortBy(r,"timestamp"),n=this.safeString(t,"symbol");return this.filterBySymbolSinceLimit(a,n,i,s)}async fetchFundingRate(e,t={}){if(this.has.fetchFundingRates){if(await this.loadMarkets(),!this.market(e).contract)throw new n.BadSymbol(this.id+" fetchFundingRate() supports contract markets only");const i=await this.fetchFundingRates([e],t),s=this.safeValue(i,e);if(void 0===s)throw new n.NullResponse(this.id+" fetchFundingRate () returned no data for "+e);return s}throw new n.NotSupported(this.id+" fetchFundingRate () is not supported yet")}async fetchMarkOHLCV(e,t="1m",i=undefined,s=undefined,r={}){if(this.has.fetchMarkOHLCV){const a={price:"mark"};return await this.fetchOHLCV(e,t,i,s,this.extend(a,r))}throw new n.NotSupported(this.id+" fetchMarkOHLCV () is not supported yet")}async fetchIndexOHLCV(e,t="1m",i=undefined,s=undefined,r={}){if(this.has.fetchIndexOHLCV){const a={price:"index"};return await this.fetchOHLCV(e,t,i,s,this.extend(a,r))}throw new n.NotSupported(this.id+" fetchIndexOHLCV () is not supported yet")}async fetchPremiumIndexOHLCV(e,t="1m",i=undefined,s=undefined,r={}){if(this.has.fetchPremiumIndexOHLCV){const a={price:"premiumIndex"};return await this.fetchOHLCV(e,t,i,s,this.extend(a,r))}throw new n.NotSupported(this.id+" fetchPremiumIndexOHLCV () is not supported yet")}handleTimeInForce(e={}){const t=this.safeStringUpper(e,"timeInForce");if(void 0!==t){const e=this.safeString(this.options.timeInForce,t);if(void 0===e)throw new n.ExchangeError(this.id+' does not support timeInForce "'+t+'"');return e}}convertTypeToAccount(e){const t=this.safeValue(this.options,"accountsByType",{}),i=e.toLowerCase();return i in t?t[i]:e in this.markets||e in this.markets_by_id?this.market(e).id:e}checkRequiredArgument(e,t,i,s=[]){const r=s.length;if(void 0===t||r>0&&!this.inArray(t,s)){const t=s.join(", ");let r=this.id+" "+e+"() requires a "+i+" argument";throw""!==t&&(r+=", one of ("+t+")"),new n.ArgumentsRequired(r)}}checkRequiredMarginArgument(e,t,i){if("isolated"===i&&void 0===t)throw new n.ArgumentsRequired(this.id+" "+e+"() requires a symbol argument for isolated margin");if("cross"===i&&void 0!==t)throw new n.ArgumentsRequired(this.id+" "+e+"() cannot have a symbol argument for cross margin")}checkRequiredSymbol(e,t){this.checkRequiredArgument(e,t,"symbol")}parseDepositWithdrawFees(e,t=undefined,i=undefined){const s={};t=this.marketCodes(t);const r=Array.isArray(e);let a=e;r||(a=Object.keys(e));for(let n=0;n<a.length;n++){const o=a[n],d=r?o:e[o],c=r?this.safeString(d,i):o,h=this.safeValue(this.currencies_by_id,c),u=this.safeString(h,"code",c);(void 0===t||this.inArray(u,t))&&(s[u]=this.parseDepositWithdrawFee(d,h))}return s}parseDepositWithdrawFee(e,t=undefined){throw new n.NotSupported(this.id+" parseDepositWithdrawFee() is not supported yet")}depositWithdrawFee(e){return{info:e,withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}}}assignDefaultDepositWithdrawFees(e,t=undefined){const i=Object.keys(e.networks),s=i.length;if(1===s)return e.withdraw=e.networks[i[0]].withdraw,e.deposit=e.networks[i[0]].deposit,e;const r=this.safeString(t,"code");for(let t=0;t<s;t++)i[t]===r&&(e.withdraw=e.networks[i[t]].withdraw,e.deposit=e.networks[i[t]].deposit);return e}parseIncome(e,t=undefined){throw new n.NotSupported(this.id+" parseIncome () is not supported yet")}parseIncomes(e,t=undefined,i=undefined,s=undefined){const r=[];for(let i=0;i<e.length;i++){const s=e[i],a=this.parseIncome(s,t);r.push(a)}const a=this.sortBy(r,"timestamp");return this.filterBySinceLimit(a,i,s)}getMarketFromSymbols(e=undefined){if(void 0===e)return;const t=this.safeString(e,0);return this.market(t)}}},2194:(e,t,i)=>{i.d(t,{O:()=>n});const s=BigInt(0),r=BigInt(-1),a=BigInt(10);class n{constructor(e,t=undefined){if(this.decimals=void 0,this.integer=void 0,this.base=void 0,void 0===t){let t=0;(e=e.toLowerCase()).indexOf("e")>-1&&([e,t]=e.split("e"),t=parseInt(t.toString()));const i=e.indexOf(".");this.decimals=i>-1?e.length-i-1:0;const s=e.replace(".","");this.integer=BigInt(s),this.decimals=this.decimals-t}else this.integer=e,this.decimals=t}mul(e){const t=this.integer*e.integer;return new n(t,this.decimals+e.decimals)}div(e,t=18){const i=t-this.decimals+e.decimals;let s;if(0===i)s=this.integer;else if(i<0){const e=a**BigInt(-i);s=this.integer/e}else{const e=a**BigInt(i);s=this.integer*e}const r=s/e.integer;return new n(r,t)}add(e){if(this.decimals===e.decimals){const t=this.integer+e.integer;return new n(t,this.decimals)}{const[t,i]=this.decimals>e.decimals?[e,this]:[this,e],s=i.decimals-t.decimals,r=t.integer*a**BigInt(s)+i.integer;return new n(r,i.decimals)}}mod(e){const t=Math.max(-this.decimals+e.decimals,0),i=this.integer*a**BigInt(t),s=Math.max(-e.decimals+this.decimals,0),r=e.integer*a**BigInt(s);return new n(i%r,s+e.decimals)}sub(e){const t=new n(-e.integer,e.decimals);return this.add(t)}abs(){return new n(this.integer<0?this.integer*r:this.integer,this.decimals)}neg(){return new n(-this.integer,this.decimals)}min(e){return this.lt(e)?this:e}max(e){return this.gt(e)?this:e}gt(e){return this.sub(e).integer>0}ge(e){return this.sub(e).integer>=0}lt(e){return e.gt(this)}le(e){return e.ge(this)}reduce(){const e=this.integer.toString(),t=e.length-1;if(0===t)return"0"===e&&(this.decimals=0),this;let i;for(i=t;i>=0&&"0"===e.charAt(i);i--);const s=t-i;if(0===s)return this;this.decimals-=s,this.integer=BigInt(e.slice(0,i+1))}equals(e){return this.reduce(),e.reduce(),this.decimals===e.decimals&&this.integer===e.integer}toString(){let e,t;this.reduce(),this.integer<0?(e="-",t=-this.integer):(e="",t=this.integer);const i=Array.from(t.toString(Number(a)).padStart(this.decimals,"0")),s=i.length-this.decimals;let r;return r=0===s?"0.":this.decimals<0?"0".repeat(-this.decimals):0===this.decimals?"":".",i.splice(s,0,r),e+i.join("")}static stringMul(e,t){if(void 0!==e&&void 0!==t)return new n(e).mul(new n(t)).toString()}static stringDiv(e,t,i=18){if(void 0===e||void 0===t)return;const r=new n(t);return r.integer!==s?new n(e).div(r,i).toString():void 0}static stringAdd(e,t){if(void 0!==e||void 0!==t)return void 0===e?t:void 0===t?e:new n(e).add(new n(t)).toString()}static stringSub(e,t){if(void 0!==e&&void 0!==t)return new n(e).sub(new n(t)).toString()}static stringAbs(e){if(void 0!==e)return new n(e).abs().toString()}static stringNeg(e){if(void 0!==e)return new n(e).neg().toString()}static stringMod(e,t){if(void 0!==e&&void 0!==t)return new n(e).mod(new n(t)).toString()}static stringEquals(e,t){if(void 0!==e&&void 0!==t)return new n(e).equals(new n(t))}static stringEq(e,t){if(void 0!==e&&void 0!==t)return new n(e).equals(new n(t))}static stringMin(e,t){if(void 0!==e&&void 0!==t)return new n(e).min(new n(t)).toString()}static stringMax(e,t){if(void 0!==e&&void 0!==t)return new n(e).max(new n(t)).toString()}static stringGt(e,t){if(void 0!==e&&void 0!==t)return new n(e).gt(new n(t))}static stringGe(e,t){if(void 0!==e&&void 0!==t)return new n(e).ge(new n(t))}static stringLt(e,t){if(void 0!==e&&void 0!==t)return new n(e).lt(new n(t))}static stringLe(e,t){if(void 0!==e&&void 0!==t)return new n(e).le(new n(t))}}},6689:(e,t,i)=>{i.r(t),i.d(t,{AccountNotEnabled:()=>o,AccountSuspended:()=>d,AddressPending:()=>g,ArgumentsRequired:()=>c,AuthenticationError:()=>a,BadRequest:()=>h,BadResponse:()=>p,BadSymbol:()=>u,BaseError:()=>s,CancelPending:()=>S,DDoSProtection:()=>G,DuplicateOrderId:()=>O,ExchangeError:()=>r,ExchangeNotAvailable:()=>C,InsufficientFunds:()=>m,InvalidAddress:()=>v,InvalidNonce:()=>x,InvalidOrder:()=>y,MarginModeAlreadySet:()=>l,NetworkError:()=>A,NotSupported:()=>T,NullResponse:()=>f,OnMaintenance:()=>M,OrderImmediatelyFillable:()=>P,OrderNotCached:()=>w,OrderNotFillable:()=>k,OrderNotFound:()=>b,PermissionDenied:()=>n,RateLimitExceeded:()=>I,RequestTimeout:()=>V,default:()=>E});class s extends Error{constructor(e){super(e),this.name="BaseError"}}class r extends Error{constructor(e){super(e),this.name="ExchangeError"}}class a extends r{constructor(e){super(e),this.name="AuthenticationError"}}class n extends r{constructor(e){super(e),this.name="PermissionDenied"}}class o extends r{constructor(e){super(e),this.name="AccountNotEnabled"}}class d extends r{constructor(e){super(e),this.name="AccountSuspended"}}class c extends r{constructor(e){super(e),this.name="ArgumentsRequired"}}class h extends r{constructor(e){super(e),this.name="BadRequest"}}class u extends h{constructor(e){super(e),this.name="BadSymbol"}}class l extends h{constructor(e){super(e),this.name="MarginModeAlreadySet"}}class p extends r{constructor(e){super(e),this.name="BadResponse"}}class f extends r{constructor(e){super(e),this.name="NullResponse"}}class m extends r{constructor(e){super(e),this.name="InsufficientFunds"}}class v extends r{constructor(e){super(e),this.name="InvalidAddress"}}class g extends v{constructor(e){super(e),this.name="AddressPending"}}class y extends r{constructor(e){super(e),this.name="InvalidOrder"}}class b extends y{constructor(e){super(e),this.name="OrderNotFound"}}class w extends y{constructor(e){super(e),this.name="OrderNotCached"}}class S extends y{constructor(e){super(e),this.name="CancelPending"}}class P extends y{constructor(e){super(e),this.name="OrderImmediatelyFillable"}}class k extends y{constructor(e){super(e),this.name="OrderNotFillable"}}class O extends y{constructor(e){super(e),this.name="DuplicateOrderId"}}class T extends r{constructor(e){super(e),this.name="NotSupported"}}class A extends s{constructor(e){super(e),this.name="NetworkError"}}class G extends A{constructor(e){super(e),this.name="DDoSProtection"}}class I extends G{constructor(e){super(e),this.name="RateLimitExceeded"}}class C extends A{constructor(e){super(e),this.name="ExchangeNotAvailable"}}class M extends C{constructor(e){super(e),this.name="OnMaintenance"}}class x extends A{constructor(e){super(e),this.name="InvalidNonce"}}class V extends A{constructor(e){super(e),this.name="RequestTimeout"}}const E={BaseError:s,ExchangeError:r,PermissionDenied:n,AccountNotEnabled:o,AccountSuspended:d,ArgumentsRequired:c,BadRequest:h,BadSymbol:u,MarginModeAlreadySet:l,BadResponse:p,NullResponse:f,InsufficientFunds:m,InvalidAddress:v,InvalidOrder:y,OrderNotFound:b,OrderNotCached:w,CancelPending:S,OrderImmediatelyFillable:P,OrderNotFillable:k,DuplicateOrderId:O,NotSupported:T,NetworkError:A,DDoSProtection:G,RateLimitExceeded:I,ExchangeNotAvailable:C,OnMaintenance:M,InvalidNonce:x,RequestTimeout:V,AuthenticationError:a,AddressPending:g}},7100:(e,t,i)=>{i.r(t),i.d(t,{DECIMAL_PLACES:()=>o.nr,NO_PADDING:()=>o.EZ,PAD_WITH_ZERO:()=>o.Z_,ROUND:()=>o.oU,ROUND_DOWN:()=>o.qh,ROUND_UP:()=>o.N8,SIGNIFICANT_DIGITS:()=>o.tV,TICK_SIZE:()=>o.sh,TRUNCATE:()=>o.tk,TimedOut:()=>h.PL,aggregate:()=>l.m_,arrayConcat:()=>r.oE,asFloat:()=>n.GX,asInteger:()=>n.xJ,base16ToBinary:()=>d.aj,base58ToBinary:()=>d.ZA,base64ToBinary:()=>d.R5,base64ToString:()=>d.Vy,binaryConcat:()=>d.F6,binaryConcatArray:()=>d.C_,binaryToBase16:()=>d.d9,binaryToBase58:()=>d.cN,binaryToBase64:()=>d.bA,binaryToString:()=>d.rV,buildOHLCVC:()=>l.fz,capitalize:()=>a.kC,clone:()=>r.d9,crc32:()=>c.kn,decimalToPrecision:()=>o._T,decode:()=>d.Jx,deepExtend:()=>r.ZB,ecdsa:()=>c.bu,eddsa:()=>c.UZ,encode:()=>d.cv,extend:()=>r.l7,extractParams:()=>l.k,filterBy:()=>r.j,flatten:()=>r.xH,groupBy:()=>r.vM,hasProps:()=>n.s_,hash:()=>c.vp,hmac:()=>c.bD,implodeParams:()=>l.xX,inArray:()=>r.d3,index:()=>r.Kz,indexBy:()=>r.HK,isArray:()=>n.kJ,isBrowser:()=>s.jU,isDictionary:()=>n.wg,isElectron:()=>s.d,isEmpty:()=>r.xb,isInteger:()=>n.U,isJsonEncodedObject:()=>d.Dd,isNode:()=>s.UG,isNumber:()=>n.hj,isObject:()=>n.Kn,isString:()=>n.HD,isStringCoercible:()=>n.bT,isWebWorker:()=>s.n2,isWindows:()=>s.ED,iso8601:()=>h.qo,json:()=>d.AV,keys:()=>r.XP,keysort:()=>r.x4,mdy:()=>h.xg,merge:()=>r.TS,microseconds:()=>h.sR,milliseconds:()=>h.m,now:()=>h.zO,numberToBE:()=>d.cm,numberToLE:()=>d.K0,numberToString:()=>o.D$,omit:()=>r.CE,omitZero:()=>o.Zb,ordered:()=>r.sT,parse8601:()=>h.V$,parseDate:()=>h.sG,parseTimeframe:()=>l.A7,pluck:()=>r.jg,precisionConstants:()=>o.S5,precisionFromString:()=>o.Rl,prop:()=>n.vg,rawencode:()=>d.Ot,rfc2616:()=>h.Nz,roundTimeframe:()=>l.KV,safeFloat:()=>n.Vb,safeFloat2:()=>n.ds,safeFloatN:()=>n._3,safeInteger:()=>n.oF,safeInteger2:()=>n.bz,safeIntegerN:()=>n.c$,safeIntegerProduct:()=>n.mM,safeIntegerProduct2:()=>n.yy,safeIntegerProductN:()=>n.RF,safeString:()=>n.p2,safeString2:()=>n.St,safeStringLower:()=>n.BL,safeStringLower2:()=>n.I1,safeStringLowerN:()=>n.oz,safeStringN:()=>n.xV,safeStringUpper:()=>n.ff,safeStringUpper2:()=>n.Wp,safeStringUpperN:()=>n.aK,safeTimestamp:()=>n.ES,safeTimestamp2:()=>n.Nc,safeTimestampN:()=>n.pA,safeValue:()=>n.Wz,safeValue2:()=>n.bS,safeValueN:()=>n.WW,seconds:()=>h.m9,setTimeout_safe:()=>h.qc,sleep:()=>h._v,sortBy:()=>r.MR,sortBy2:()=>r.uv,stringToBase64:()=>d.Ne,stringToBinary:()=>d.mW,strip:()=>a.Aq,sum:()=>r.Sm,throttle:()=>u.P,timeout:()=>h.Vs,toArray:()=>r.qo,truncate:()=>o.$G,truncate_to_string:()=>o.qL,unCamelCase:()=>a.u,unique:()=>r.Tw,urlencode:()=>d.i$,urlencodeBase64:()=>d.xr,urlencodeNested:()=>d.xX,urlencodeWithArrayRepeat:()=>d.jD,uuid:()=>a.Vj,uuid16:()=>a.fY,uuid22:()=>a.mO,uuidv1:()=>h.ft,values:()=>r.VO,vwap:()=>l.KY,ymd:()=>h.Eo,ymdhms:()=>h.KN,yymmdd:()=>h.ax,yyyymmdd:()=>h.rm});var s=i(9125),r=i(927),a=i(7715),n=i(5948),o=i(9292),d=i(1237),c=i(6890),h=i(1621),u=i(5134),l=i(2116)},6890:(e,t,i)=>{i.d(t,{UZ:()=>c,bD:()=>o,bu:()=>d,kn:()=>h,vp:()=>n});var s=i(138),r=i(9651);const a={binary:e=>e,hex:r.YU.encode,base64:r.US.encode},n=(e,t,i="hex")=>{const s=t(e);return a[i](s)},o=(e,t,i,r="hex")=>{const n=(0,s.b)(i,t,e);return a[r](n)};function d(e,t,i,s=null){s&&(e=n(e,s,"hex"));const r=i.sign(e,t);return{r:r.r.toString(16),s:r.s.toString(16),v:r.recovery}}function c(e,t,i){const s=i.sign(e,t);return r.Jq.encode(s)}function h(e,t=!1){void 0===h.table&&(h.table="00000000 77073096 EE0E612C 990951BA 076DC419 706AF48F E963A535 9E6495A3 0EDB8832 79DCB8A4 E0D5E91E 97D2D988 09B64C2B 7EB17CBD E7B82D07 90BF1D91 1DB71064 6AB020F2 F3B97148 84BE41DE 1ADAD47D 6DDDE4EB F4D4B551 83D385C7 136C9856 646BA8C0 FD62F97A 8A65C9EC 14015C4F 63066CD9 FA0F3D63 8D080DF5 3B6E20C8 4C69105E D56041E4 A2677172 3C03E4D1 4B04D447 D20D85FD A50AB56B 35B5A8FA 42B2986C DBBBC9D6 ACBCF940 32D86CE3 45DF5C75 DCD60DCF ABD13D59 26D930AC 51DE003A C8D75180 BFD06116 21B4F4B5 56B3C423 CFBA9599 B8BDA50F 2802B89E 5F058808 C60CD9B2 B10BE924 2F6F7C87 58684C11 C1611DAB B6662D3D 76DC4190 01DB7106 98D220BC EFD5102A 71B18589 06B6B51F 9FBFE4A5 E8B8D433 7807C9A2 0F00F934 9609A88E E10E9818 7F6A0DBB 086D3D2D 91646C97 E6635C01 6B6B51F4 1C6C6162 856530D8 F262004E 6C0695ED 1B01A57B 8208F4C1 F50FC457 65B0D9C6 12B7E950 8BBEB8EA FCB9887C 62DD1DDF 15DA2D49 8CD37CF3 FBD44C65 4DB26158 3AB551CE A3BC0074 D4BB30E2 4ADFA541 3DD895D7 A4D1C46D D3D6F4FB 4369E96A 346ED9FC AD678846 DA60B8D0 44042D73 33031DE5 AA0A4C5F DD0D7CC9 5005713C 270241AA BE0B1010 C90C2086 5768B525 206F85B3 B966D409 CE61E49F 5EDEF90E 29D9C998 B0D09822 C7D7A8B4 59B33D17 2EB40D81 B7BD5C3B C0BA6CAD EDB88320 9ABFB3B6 03B6E20C 74B1D29A EAD54739 9DD277AF 04DB2615 73DC1683 E3630B12 94643B84 0D6D6A3E 7A6A5AA8 E40ECF0B 9309FF9D 0A00AE27 7D079EB1 F00F9344 8708A3D2 1E01F268 6906C2FE F762575D 806567CB 196C3671 6E6B06E7 FED41B76 89D32BE0 10DA7A5A 67DD4ACC F9B9DF6F 8EBEEFF9 17B7BE43 60B08ED5 D6D6A3E8 A1D1937E 38D8C2C4 4FDFF252 D1BB67F1 A6BC5767 3FB506DD 48B2364B D80D2BDA AF0A1B4C 36034AF6 41047A60 DF60EFC3 A867DF55 316E8EEF 4669BE79 CB61B38C BC66831A 256FD2A0 5268E236 CC0C7795 BB0B4703 220216B9 5505262F C5BA3BBE B2BD0B28 2BB45A92 5CB36A04 C2D7FFA7 B5D0CF31 2CD99E8B 5BDEAE1D 9B64C2B0 EC63F226 756AA39C 026D930A 9C0906A9 EB0E363F 72076785 05005713 95BF4A82 E2B87A14 7BB12BAE 0CB61B38 92D28E9B E5D5BE0D 7CDCEFB7 0BDBDF21 86D3D2D4 F1D4E242 68DDB3F8 1FDA836E 81BE16CD F6B9265B 6FB077E1 18B74777 88085AE6 FF0F6A70 66063BCA 11010B5C 8F659EFF F862AE69 616BFFD3 166CCF45 A00AE278 D70DD2EE 4E048354 3903B3C2 A7672661 D06016F7 4969474D 3E6E77DB AED16A4A D9D65ADC 40DF0B66 37D83BF0 A9BCAE53 DEBB9EC5 47B2CF7F 30B5FFE9 BDBDF21C CABAC28A 53B39330 24B4A3A6 BAD03605 CDD70693 54DE5729 23D967BF B3667A2E C4614AB8 5D681B02 2A6F2B94 B40BBE37 C30C8EA1 5A05DF1B 2D02EF8D".split(" ").map((e=>parseInt(e,16))));let i=-1;for(let t=0;t<e.length;t++)i=i>>>8^h.table[255&(i^e.charCodeAt(t))];const s=(-1^i)>>>0;return t&&s>=2147483648?s-4294967296:s}},1237:(e,t,i)=>{i.d(t,{AV:()=>o,C_:()=>w,Dd:()=>d,F6:()=>b,Jx:()=>A,K0:()=>I,Ne:()=>u,Ot:()=>O,R5:()=>p,Vy:()=>l,ZA:()=>g,aj:()=>m,bA:()=>f,cN:()=>y,cm:()=>C,cv:()=>T,d9:()=>v,i$:()=>S,jD:()=>k,mW:()=>h,rV:()=>c,xX:()=>P,xr:()=>G});var s=i(9651),r=i(2773),a=i(3165),n=i.n(a);const o=(e,t=undefined)=>JSON.stringify(e),d=e=>"string"==typeof e&&e.length>=2&&("{"===e[0]||"["===e[0]),c=s.KA.encode,h=s.KA.decode,u=e=>s.US.encode(s.KA.decode(e)),l=e=>s.KA.encode(s.US.decode(e)),p=s.US.decode,f=s.US.encode,m=s.YU.decode,v=s.YU.encode,g=s.Jq.decode,y=s.Jq.encode,b=r.concatBytes,w=e=>(0,r.concatBytes)(...e),S=e=>n().stringify(e),P=e=>n().stringify(e),k=e=>n().stringify(e,{arrayFormat:"repeat"}),O=e=>n().stringify(e,{encode:!1}),T=s.KA.decode,A=s.KA.encode,G=e=>e.replace(/[=]+$/,"").replace(/\+/g,"-").replace(/\//g,"_"),I=(e,t)=>(0,r.numberToBytesLE)(BigInt(e),t),C=(e,t)=>(0,r.numberToBytesBE)(BigInt(e),t)},927:(e,t,i)=>{i.d(t,{CE:()=>k,HK:()=>g,Kz:()=>n,MR:()=>b,Sm:()=>O,TS:()=>A,Tw:()=>h,VO:()=>a,XP:()=>r,ZB:()=>T,d3:()=>l,d9:()=>d,j:()=>y,jg:()=>P,l7:()=>o,oE:()=>u,qo:()=>p,sT:()=>c,uv:()=>w,vM:()=>v,x4:()=>m,xH:()=>S,xb:()=>f});var s=i(5948);const r=Object.keys,a=e=>(0,s.kJ)(e)?e:Object.values(e),n=e=>new Set(a(e)),o=(...e)=>Object.assign({},...e),d=e=>(0,s.kJ)(e)?Array.from(e):o(e),c=e=>e,h=e=>Array.from(n(e)),u=(e,t)=>e.concat(t),l=(e,t)=>t.includes(e),p=e=>Object.values(e),f=e=>!e||(Array.isArray(e)?e:Object.keys(e)).length<1,m=(e,t={})=>{for(const i of r(e).sort())t[i]=e[i];return t},v=(e,t,i={})=>{for(const s of a(e))if(t in s){const e=s[t];i[e]=i[e]||[],i[e].push(s)}return i},g=(e,t,i={})=>{for(const s of a(e))t in s&&(i[s[t]]=s);return i},y=(e,t,i=undefined,s=[])=>{for(const r of a(e))r[t]===i&&s.push(r);return s},b=(e,t,i=!1,s=(i?-1:1))=>e.sort(((e,i)=>e[t]<i[t]?-s:e[t]>i[t]?s:0)),w=(e,t,i,s=!1,r=(s?-1:1))=>e.sort(((e,s)=>e[t]<s[t]?-r:e[t]>s[t]?r:e[i]<s[i]?-r:e[i]>s[i]?r:0)),S=function e(t,i=[]){for(const r of t)(0,s.kJ)(r)?e(r,i):i.push(r);return i},P=(e,t)=>a(e).filter((e=>t in e)).map((e=>e[t])),k=(e,...t)=>{if(!Array.isArray(e)){const i=d(e);for(const e of t)if((0,s.kJ)(e))for(const t of e)delete i[t];else delete i[e];return i}return e},O=(...e)=>{const t=e.filter(s.hj);return t.length>0?t.reduce(((e,t)=>e+t),0):void 0},T=function e(...t){let i;for(const r of t)if((0,s.wg)(r)){(0,s.wg)(i)||(i={});for(const t in r)i[t]=e(i[t],r[t])}else i=r;return i},A=(e,...t)=>{const i={},s=Object.assign({},...t),r=Object.keys(s);for(let t=0;t<r.length;t++){const a=r[t];void 0===e[a]&&(i[a]=s[a])}return Object.assign({},e,i)}},2116:(e,t,i)=>{i.d(t,{A7:()=>n,KV:()=>o,KY:()=>u,fz:()=>d,k:()=>c,m_:()=>l,xX:()=>h});var s=i(9292),r=i(5948),a=i(6689);const n=e=>{const t=(0,r.GX)(e.slice(0,-1)),i=e.slice(-1);let s;if("y"===i)s=31536e3;else if("M"===i)s=2592e3;else if("w"===i)s=604800;else if("d"===i)s=86400;else if("h"===i)s=3600;else if("m"===i)s=60;else{if("s"!==i)throw new a.NotSupported("timeframe unit "+i+" is not supported");s=1}return t*s},o=(e,t,i=s.qh)=>{const r=1e3*n(e);return t-t%r+(i===s.N8?r:0)},d=(e,t="1m",i=-1/0,s=1/0)=>{const r=1e3*n(t),a=[],[o,,d,c,h,u,l]=[0,1,2,3,4,5,6],p=Math.min(e.length-1,s);for(let t=0;t<=p;t++){const s=e[t];if(s.timestamp<i)continue;const n=Math.floor(s.timestamp/r)*r,p=a.length-1;-1===p||n>=a[p][o]+r?a.push([n,s.price,s.price,s.price,s.price,s.amount,1]):(a[p][d]=Math.max(a[p][d],s.price),a[p][c]=Math.min(a[p][c],s.price),a[p][h]=s.price,a[p][u]+=s.amount,a[p][l]++)}return a},c=e=>{const t=/{([\w-]+)}/g,i=[];let s=t.exec(e);for(;s;)i.push(s[1]),s=t.exec(e);return i},h=(e,t)=>{if(!Array.isArray(t)){const i=Object.keys(t);for(let s=0;s<i.length;s++){const r=i[s];Array.isArray(t[r])||(e=e.replace("{"+r+"}",t[r]))}}return e};function u(e,t){return void 0!==e&&void 0!==t&&e>0?t/e:void 0}function l(e){const t={};for(let i=0;i<e.length;i++){const[s,r]=e[i];r>0&&(t[s]=(t[s]||0)+r)}return Object.keys(t).map((e=>[parseFloat(e),parseFloat(t[e])]))}},9292:(e,t,i)=>{i.d(t,{$G:()=>v,D$:()=>p,EZ:()=>h,N8:()=>a,Rl:()=>g,S5:()=>l,Z_:()=>u,Zb:()=>b,_T:()=>y,nr:()=>o,oU:()=>s,qL:()=>m,qh:()=>n,sh:()=>c,tV:()=>d,tk:()=>r});const s=0,r=1,a=2,n=3,o=0,d=1,c=2,h=0,u=1,l={ROUND:s,TRUNCATE:r,ROUND_UP:a,ROUND_DOWN:n,DECIMAL_PLACES:o,SIGNIFICANT_DIGITS:d,TICK_SIZE:c,NO_PADDING:h,PAD_WITH_ZERO:u};function p(e){if(void 0===e)return;if("number"!=typeof e)return e.toString();const t=e.toString();if(Math.abs(e)<1){const e=t.split("e-"),i=e[0].replace(".",""),s=parseInt(e[1]),r="-"===t[0];if(s)return(r?"-":"")+"0."+new Array(s).join("0")+i.substring(r)}else{const e=t.split("e");if(e[1]){let t=parseInt(e[1]);const i=e[0].split(".");let s="";return i[1]&&(t-=i[1].length,s=i[1]),i[0]+s+new Array(t+1).join("0")}}return t}const f=[],m=(e,t=0)=>{if(e=p(e),t>0){const i=f[t]||(f[t]=new RegExp("([-]*\\d+\\.\\d{"+t+"})(\\d)")),[,s]=e.toString().match(i)||[null,e];return s.toString()}return parseInt(e).toString()},v=(e,t=0)=>parseFloat(m(e,t));function g(e){if(e.indexOf("e")>-1){const t=e.replace(/\de/,"");return-1*parseInt(t)}const t=e.replace(/0+$/g,"").split(".");return t.length>1?t[1].length:0}const y=(e,t,i,a=o,n=h)=>{if(a===c&&("string"==typeof i&&(i=parseFloat(i)),i<=0))throw new Error("TICK_SIZE cant be used with negative or zero numPrecisionDigits");if(i<0){const o=Math.pow(10,-i);if(t===s)return(o*y(e/o,t,0,a,n)).toString();if(t===r)return(e-e%o).toString()}if(a===c){const a=g(y(i,s,22,o,h));let d=e%i;return d=Number(y(d,s,8,o,h)),0!==g(y(d/i,s,Math.max(a,8),o,h))&&(t===s?e>0?d>=i/2?e=e-d+i:e-=d:e=d>=i/2?Number(e)-d:Number(e)-d-i:t===r&&(e-=d)),y(e,s,a,o,n)}const u=p(e),l="-"===u[0],f=l?1:0,m=u.length;for(var v=0;v<m&&"."!==u[v];v++);const b=v<u.length,w=48,S=new Uint8Array(m-f+(b?0:1));S[0]=w;let P=S.length,k=-1,O=-1;for(var T=1,A=f;A<m;A++,T++){const e=u.charCodeAt(A);if(46===e)P=T--;else{if(e<w||e>57)throw new Error(`${u}: invalid number (contains an illegal character '${u[T-1]}')`);S[T]=e,e!==w&&k<0&&(k=T)}}k<0&&(k=1);let G=a===o?P:k,I=G+i;O=-1;let C=!0,M=l;for(let e=S.length-1,r=0;e>=0;e--){let a=S[e];0!==e?(a+=r,e>=G+i&&(a=t===s&&a>=53&&(53!==a||!r)?58:w),a>57?(a=w,r=1):r=0):r&&(a=49),S[e]=a,a!==w&&(C=!1,k=e,O=O<0?e+1:O)}a===d&&(G=k,I=G+i),C&&(M=!1);const x=k>=P||C?P-1:k,V=O<P?P:O,E=M?1:0,B=E+(P-x),_=Math.max(V-P,0),R=V-x,N=n===h?R:I-x,L=Math.max(N-R,0),D=B+1+_,F=D+L,q=_+L===0,H=new Uint8Array(B+(q?0:1)+_+L);for(M&&(H[0]=45),T=E,A=x;T<B;T++,A++)H[T]=S[A];for(q||(H[B]=46),T=B+1,A=P;T<D;T++,A++)H[T]=S[A];for(T=D;T<F;T++)H[T]=w;return String.fromCharCode(...H)};function b(e){if(void 0!==e&&""!==e&&0!==parseFloat(e))return e}},9125:(e,t,i)=>{i.d(t,{ED:()=>n,UG:()=>o,d:()=>r,jU:()=>s,n2:()=>a});const s="undefined"!=typeof window,r="undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.electron,a="undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope,n="undefined"!=typeof process&&"win32"===process.platform,o=!(s||a)},5981:(e,t,i)=>{i.d(t,{F:()=>d,j:()=>o});var s=i(9026),r=i(9651),a=i(1237),n=i(6890);function o(e,t,i){const a=new s.X;a.setPrivateKey(t);const n=i.create().constructor.name.toLowerCase();return a.sign(e,(e=>r.YU.encode(i(e))),n)}function d(e,t,i,s=!1){const d=(s?"RS":"HS")+8*i.outputLen,c=[(0,a.xr)((0,a.Ne)(JSON.stringify({alg:d,typ:"JWT"}))),(0,a.xr)((0,a.Ne)(JSON.stringify(e)))].join("."),h=d.slice(0,2);let u;return"HS"===h?u=(0,a.xr)((0,n.bD)(c,t,i,"base64")):"RS"===h&&(u=(0,a.xr)(o(c,r.KA.encode(t),i))),[c,u].join(".")}},7715:(e,t,i)=>{i.d(t,{Aq:()=>a,Vj:()=>n,fY:()=>o,kC:()=>r,mO:()=>d,u:()=>s});const s=e=>e.match(/[A-Z]/)?e.replace(/[a-z0-9][A-Z]/g,(e=>e[0]+"_"+e[1])).replace(/[A-Z0-9][A-Z0-9][a-z][^$]/g,(e=>e[0]+"_"+e[1]+e[2]+e[3])).replace(/[a-z][0-9]$/g,(e=>e[0]+"_"+e[1])).toLowerCase():e,r=e=>e.length?e.charAt(0).toUpperCase()+e.slice(1):e,a=e=>e.replace(/^\s+|\s+$/g,""),n=e=>e?(e^16*Math.random()>>e/4).toString(16):([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g,n),o=e=>e?(e^16*Math.random()>>e/4).toString(16):([1e5]+100+400+8e3).replace(/[018]/g,o),d=e=>e?(e^16*Math.random()>>e/4).toString(16):([1e7]+1e3+4e3+8e5).replace(/[018]/g,d)},5134:(e,t,i)=>{i.d(t,{P:()=>a});var s=i(1621);class r{constructor(e){this.config={refillRate:1,delay:.001,capacity:1,maxCapacity:2e3,tokens:0,cost:1},Object.assign(this.config,e),this.queue=[],this.running=!1}async loop(){let e=(0,s.zO)();for(;this.running;){const{resolver:t,cost:i}=this.queue[0];if(this.config.tokens>=0)this.config.tokens-=i,t(),this.queue.shift(),await Promise.resolve(),0===this.queue.length&&(this.running=!1);else{await(0,s._v)(1e3*this.config.delay);const t=(0,s.zO)(),i=t-e;e=t;const r=this.config.tokens+this.config.refillRate*i;this.config.tokens=Math.min(r,this.config.capacity)}}}}function a(e){const t=new r(e),i=function(e=undefined){let t;const i=new Promise(((e,i)=>{t=e}));if(this.queue.length>this.config.maxCapacity)throw new Error("throttle queue is over maxCapacity ("+this.config.maxCapacity.toString()+"), see https://github.com/ccxt/ccxt/issues/11645#issuecomment-1195695526");return e=void 0===e?this.config.cost:e,this.queue.push({resolver:t,cost:e}),this.running||(this.running=!0,this.loop()),i}.bind(t);return i.config=t.config,i.queue=t.queue,i}},1621:(e,t,i)=>{i.d(t,{Eo:()=>v,KN:()=>b,Nz:()=>f,PL:()=>h,V$:()=>l,Vs:()=>S,_v:()=>w,ax:()=>g,ft:()=>o,m:()=>a,m9:()=>n,qc:()=>c,qo:()=>u,rm:()=>y,sG:()=>p,sR:()=>r,xg:()=>m,zO:()=>s});const s=Date.now,r=()=>1e3*s(),a=s,n=()=>Math.floor(s()/1e3),o=()=>{const e=(10*r()+122192928e9).toString(16);return e.slice(7,15)+e.slice(3,7)+"1"+e.slice(0,3)+"9696"+"ff".repeat(6)},d=setTimeout,c=(e,t,i=d,r=s()+t)=>{if(t>=2147483647)throw new Error("setTimeout() function was called with unrealistic value of "+t.toString());let a=()=>{},n=!0;const o=i((()=>{n=!0;const t=r-s();t>0?a=c(e,t,i,r):e()}),t);return function(){n&&(n=!1,clearTimeout(o)),a()}};class h extends Error{constructor(){const e="timed out";super(e),this.constructor=h,this.__proto__=h.prototype,this.message=e}}const u=e=>{let t;if(t="number"==typeof e?Math.floor(e):parseInt(e,10),!(Number.isNaN(t)||t<0))try{return new Date(t).toISOString()}catch(e){return}},l=e=>{if("string"==typeof e&&e&&!e.match(/^[0-9]+$/)&&!(e.indexOf("-")<0||e.indexOf(":")<0))try{const t=Date.parse(e.indexOf("+")>=0||"Z"===e.slice(-1)?e:(e+"Z").replace(/\s(\d\d):/,"T$1:"));if(Number.isNaN(t))return;return t}catch(e){return}},p=e=>{if("string"==typeof e&&e){if(e.indexOf("GMT")>=0)try{return Date.parse(e)}catch(e){return}return l(e)}},f=(e=undefined)=>new Date(e).toUTCString(),m=(e,t="-")=>{t=t||"";const i=new Date(e),s=i.getUTCFullYear().toString();let r=i.getUTCMonth()+1,a=i.getUTCDate();return r=r<10?"0"+r:r.toString(),a=a<10?"0"+a:a.toString(),r+t+a+t+s},v=(e,t,i=!0)=>{t=t||"";const s=new Date(e),r=s.getUTCFullYear(),a=(i?r:r-2e3).toString();let n=s.getUTCMonth()+1,o=s.getUTCDate();return n=n<10?"0"+n:n.toString(),o=o<10?"0"+o:o.toString(),a+t+n+t+o},g=(e,t="")=>v(e,t,!1),y=(e,t="-")=>v(e,t,!0),b=(e,t=" ")=>{const i=new Date(e),s=i.getUTCFullYear();let r=i.getUTCMonth()+1,a=i.getUTCDate(),n=i.getUTCHours(),o=i.getUTCMinutes(),d=i.getUTCSeconds();return r=r<10?"0"+r:r,a=a<10?"0"+a:a,n=n<10?"0"+n:n,o=o<10?"0"+o:o,d=d<10?"0"+d:d,s+"-"+r+"-"+a+t+n+":"+o+":"+d},w=e=>new Promise((t=>c(t,e))),S=async(e,t)=>{let i=()=>{};const s=new Promise((t=>i=c(t,e)));try{return await Promise.race([t,s.then((()=>{throw new h}))])}finally{i()}}},2523:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(9651),r=i(3307),a=i(6890);const n=function(e){const t=e=>parseInt(e,16);e=e.replace(" ","");const i=Math.round((new Date).getTime()/1e3),n=((e,t)=>(t+e).slice(-t.length))(((o=Math.floor(i/30))<15.5?"0":"")+Math.round(o).toString(16),"0000000000000000");var o;const d=(0,a.bD)(s.YU.decode(n),s.pJ.decode(e),r.q,"hex"),c=t(d.substring(d.length-1));let h=(t(d.substr(2*c,8))&t("7fffffff"))+"";return h.substring(h.length-6,h.length)}},5948:(e,t,i)=>{i.d(t,{BL:()=>P,ES:()=>b,GX:()=>f,HD:()=>o,I1:()=>M,Kn:()=>d,Nc:()=>G,RF:()=>B,St:()=>C,U:()=>r,Vb:()=>v,WW:()=>R,Wp:()=>x,Wz:()=>w,_3:()=>V,aK:()=>D,bS:()=>I,bT:()=>h,bz:()=>T,c$:()=>E,ds:()=>O,ff:()=>k,hj:()=>s,kJ:()=>a,mM:()=>y,oF:()=>g,oz:()=>L,p2:()=>S,pA:()=>_,s_:()=>n,vg:()=>u,wg:()=>c,xJ:()=>m,xV:()=>N,yy:()=>A});const s=Number.isFinite,r=Number.isInteger,a=Array.isArray,n=e=>null!=e,o=e=>"string"==typeof e,d=e=>null!==e&&"object"==typeof e,c=e=>d(e)&&Object.getPrototypeOf(e)===Object.prototype&&!a(e)&&!(e=>e instanceof RegExp)(e),h=e=>n(e)&&e.toString||s(e),u=(e,t)=>d(e)&&""!==e[t]&&null!==e[t]?e[t]:void 0,l=(e,t,i)=>d(e)?void 0!==e[t]&&""!==e[t]&&null!==e[t]?e[t]:""!==e[i]&&null!==e[i]?e[i]:void 0:void 0,p=(e,t)=>e[t.find((t=>void 0!==u(e,t)))],f=e=>s(e)||o(e)&&0!==e.length?parseFloat(e):NaN,m=e=>s(e)||o(e)&&0!==e.length?Math.trunc(Number(e)):NaN,v=(e,t,i)=>{const r=f(u(e,t));return s(r)?r:i},g=(e,t,i)=>{const r=m(u(e,t));return s(r)?r:i},y=(e,t,i,r)=>{const a=m(u(e,t));return s(a)?parseInt(a*i):r},b=(e,t,i)=>{const r=f(u(e,t));return s(r)?parseInt(1e3*r):i},w=(e,t,i)=>{const s=u(e,t);return n(s)?s:i},S=(e,t,i)=>{const s=u(e,t);return h(s)?String(s):i},P=(e,t,i)=>{const s=u(e,t);return h(s)?String(s).toLowerCase():i},k=(e,t,i)=>{const s=u(e,t);return h(s)?String(s).toUpperCase():i},O=(e,t,i,r)=>{const a=f(l(e,t,i));return s(a)?a:r},T=(e,t,i,r)=>{const a=m(l(e,t,i));return s(a)?a:r},A=(e,t,i,r,a)=>{const n=m(l(e,t,i));return s(n)?parseInt(n*r):a},G=(e,t,i,r)=>{const a=f(l(e,t,i));return s(a)?parseInt(1e3*a):r},I=(e,t,i,s)=>{const r=l(e,t,i);return n(r)?r:s},C=(e,t,i,s)=>{const r=l(e,t,i);return h(r)?String(r):s},M=(e,t,i,s)=>{const r=l(e,t,i);return h(r)?String(r).toLowerCase():s},x=(e,t,i,s)=>{const r=l(e,t,i);return h(r)?String(r).toUpperCase():s},V=(e,t,i)=>{const r=f(p(e,t));return s(r)?r:i},E=(e,t,i)=>{const r=m(p(e,t));return s(r)?r:i},B=(e,t,i,r)=>{const a=m(p(e,t));return s(a)?parseInt(a*i):r},_=(e,t,i)=>{const r=f(p(e,t));return s(r)?parseInt(1e3*r):i},R=(e,t,i)=>{const s=p(e,t);return n(s)?s:i},N=(e,t,i)=>{const s=p(e,t);return h(s)?String(s):i},L=(e,t,i)=>{const s=p(e,t);return h(s)?String(s).toLowerCase():i},D=(e,t,i)=>{const s=p(e,t);return h(s)?String(s).toUpperCase():i}},3020:(e,t,i)=>{i.d(t,{Py:()=>a,ZL:()=>r,hl:()=>n});class s extends Array{constructor(e=undefined){super(),Object.defineProperty(this,"maxSize",{__proto__:null,value:e,writable:!0})}clear(){this.length=0}}class r extends s{constructor(e=undefined){super(e),Object.defineProperty(this,"nestedNewUpdatesBySymbol",{__proto__:null,value:!1,writable:!0}),Object.defineProperty(this,"newUpdatesBySymbol",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"clearUpdatesBySymbol",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"allNewUpdates",{__proto__:null,value:0,writable:!0}),Object.defineProperty(this,"clearAllUpdates",{__proto__:null,value:!1,writable:!0})}getLimit(e,t){let i;return void 0===e?(i=this.allNewUpdates,this.clearAllUpdates=!0):(i=this.newUpdatesBySymbol[e],void 0!==i&&this.nestedNewUpdatesBySymbol&&(i=i.size),this.clearUpdatesBySymbol[e]=!0),void 0===i?t:void 0!==t?Math.min(i,t):i}append(e){this.maxSize&&this.length===this.maxSize&&this.shift(),this.push(e),this.clearAllUpdates&&(this.clearAllUpdates=!1,this.clearUpdatesBySymbol={},this.allNewUpdates=0,this.newUpdatesBySymbol={}),this.clearUpdatesBySymbol[e.symbol]&&(this.clearUpdatesBySymbol[e.symbol]=!1,this.newUpdatesBySymbol[e.symbol]=0),this.newUpdatesBySymbol[e.symbol]=(this.newUpdatesBySymbol[e.symbol]||0)+1,this.allNewUpdates=(this.allNewUpdates||0)+1}}class a extends s{constructor(e=undefined){super(e),Object.defineProperty(this,"hashmap",{__proto__:null,value:{},writable:!0}),Object.defineProperty(this,"sizeTracker",{__proto__:null,value:new Set,writable:!0}),Object.defineProperty(this,"newUpdates",{__proto__:null,value:0,writable:!0}),Object.defineProperty(this,"clearUpdates",{__proto__:null,value:!1,writable:!0})}getLimit(e,t){return this.clearUpdates=!0,void 0===t?this.newUpdates:Math.min(this.newUpdates,t)}append(e){if(e[0]in this.hashmap){const t=this.hashmap[e[0]];if(t!==e)for(const i in e)t[i]=e[i]}else{if(this.hashmap[e[0]]=e,this.maxSize&&this.length===this.maxSize){const e=this.shift();delete this.hashmap[e[0]]}this.push(e)}this.clearUpdates&&(this.clearUpdates=!1,this.sizeTracker.clear()),this.sizeTracker.add(e[0]),this.newUpdates=this.sizeTracker.size}}class n extends r{constructor(e=undefined){super(e),this.nestedNewUpdatesBySymbol=!0,Object.defineProperty(this,"hashmap",{__proto__:null,value:{},writable:!0})}append(e){const t=this.hashmap[e.symbol]=this.hashmap[e.symbol]||{};if(e.id in t){const i=t[e.id];if(i!==e)for(const t in e)i[t]=e[t];e=i;const s=this.findIndex((t=>t.id===e.id));this.splice(s,1)}else t[e.id]=e;if(this.maxSize&&this.length===this.maxSize){const e=this.shift();delete this.hashmap[e.symbol][e.id]}this.push(e),this.clearAllUpdates&&(this.clearAllUpdates=!1,this.clearUpdatesBySymbol={},this.allNewUpdates=0,this.newUpdatesBySymbol={}),void 0===this.newUpdatesBySymbol[e.symbol]&&(this.newUpdatesBySymbol[e.symbol]=new Set),this.clearUpdatesBySymbol[e.symbol]&&(this.clearUpdatesBySymbol[e.symbol]=!1,this.newUpdatesBySymbol[e.symbol].clear());const i=this.newUpdatesBySymbol[e.symbol],s=i.size;i.add(e.id);const r=i.size;this.allNewUpdates=(this.allNewUpdates||0)+(r-s)}}},2897:(e,t,i)=>{i.d(t,{Z:()=>u});var s=i(6689),r=i(7348),a=i(2367),n=i(927),o=i(1621),d=i(9125),c=i(1237),h=i(9651);class u{constructor(e,t,i,s,r,o={}){const d={url:e,onMessageCallback:t,onErrorCallback:i,onCloseCallback:s,onConnectedCallback:r,verbose:!1,protocols:void 0,options:void 0,futures:{},subscriptions:{},rejections:{},connected:void 0,error:void 0,connectionStarted:void 0,connectionEstablished:void 0,isConnected:!1,connectionTimer:void 0,connectionTimeout:1e4,pingInterval:void 0,ping:void 0,keepAlive:3e4,maxPingPongMisses:2,connection:void 0,startedConnecting:!1,gunzip:!1,inflate:!1};Object.assign(this,(0,n.ZB)(d,o)),this.connected=(0,a.Z)()}future(e){e in this.futures||(this.futures[e]=(0,a.Z)());const t=this.futures[e];return e in this.rejections&&(t.reject(this.rejections[e]),delete this.rejections[e]),t}resolve(e,t){return this.verbose&&void 0===t&&this.log(new Date,"resolve received undefined messageHash"),t in this.futures&&(this.futures[t].resolve(e),delete this.futures[t]),e}reject(e,t=undefined){if(t)t in this.futures?(this.futures[t].reject(e),delete this.futures[t]):this.rejections[t]=e;else{const t=Object.keys(this.futures);for(let i=0;i<t.length;i++)this.reject(e,t[i])}return e}log(...e){console.log(...e)}connect(e=0){throw new s.NotSupported("connect() not implemented yet")}isOpen(){throw new s.NotSupported("isOpen() not implemented yet")}reset(e){this.clearConnectionTimeout(),this.clearPingInterval(),this.reject(e)}onConnectionTimeout(){if(!this.isOpen()){const e=new s.RequestTimeout("Connection to "+this.url+" failed due to a connection timeout");this.onError(e),this.connection.close(1006)}}setConnectionTimeout(){if(this.connectionTimeout){const e=this.onConnectionTimeout.bind(this);this.connectionTimer=setTimeout(e,this.connectionTimeout)}}clearConnectionTimeout(){this.connectionTimer&&(this.connectionTimer=clearTimeout(this.connectionTimer))}setPingInterval(){if(this.keepAlive){const e=this.onPingInterval.bind(this);this.pingInterval=setInterval(e,this.keepAlive)}}clearPingInterval(){this.pingInterval&&(this.pingInterval=clearInterval(this.pingInterval))}onPingInterval(){if(this.keepAlive&&this.isOpen()){const e=(0,o.m)();this.lastPong=this.lastPong||e,this.lastPong+this.keepAlive*this.maxPingPongMisses<e?this.onError(new s.RequestTimeout("Connection to "+this.url+" timed out due to a ping-pong keepalive missing on time")):this.ping?this.send(this.ping(this)):d.UG?this.connection.ping():this.lastPong=e}}onOpen(){this.verbose&&this.log(new Date,"onOpen"),this.connectionEstablished=(0,o.m)(),this.isConnected=!0,this.connected.resolve(this.url),this.clearConnectionTimeout(),this.setPingInterval(),this.onConnectedCallback(this)}onPing(){this.verbose&&this.log(new Date,"onPing")}onPong(){this.lastPong=(0,o.m)(),this.verbose&&this.log(new Date,"onPong")}onError(e){this.verbose&&this.log(new Date,"onError",e.message),e instanceof s.BaseError||(e=new s.NetworkError(e.message)),this.error=e,this.reset(this.error),this.onErrorCallback(this,this.error)}onClose(e){this.verbose&&this.log(new Date,"onClose",e),this.error||this.reset(new s.NetworkError("connection closed by remote server, closing code "+String(e.code))),this.onCloseCallback(this,e)}onUpgrade(e){this.verbose&&this.log(new Date,"onUpgrade")}send(e){this.verbose&&this.log(new Date,"sending",e),e="string"==typeof e?e:JSON.stringify(e),this.connection.send(e)}close(){throw new s.NotSupported("close() not implemented yet")}onMessage(e){let t,i=e.data;(this.gunzip||this.inflate)&&(t="string"==typeof i?h.KA.decode(i):new Uint8Array(i.buffer.slice(i.byteOffset)),this.gunzip?t=(0,r._Z)(t):this.inflate&&(t=(0,r.n)(t)),i=h.KA.encode(t)),"string"!=typeof i&&(i=i.toString());try{(0,c.Dd)(i)&&(i=JSON.parse(i.replace(/:(\d{15,}),/g,':"$1",'))),this.verbose&&this.log(new Date,"onMessage",i)}catch(e){this.log(new Date,"onMessage JSON.parse",e)}this.onMessageCallback(this,i)}}},2367:(e,t,i)=>{function s(){let e,t;const i=new Promise(((i,s)=>{e=i,t=s}));return i.resolve=function(){e.apply(this,arguments)},i.reject=function(){t.apply(this,arguments)},i}i.d(t,{Z:()=>s})},7091:(e,t,i)=>{i.d(t,{ZY:()=>n,rc:()=>d,yk:()=>o});var s=i(1621),r=i(927),a=i(416);class n{constructor(e={},t=undefined){Object.defineProperty(this,"cache",{__proto__:null,value:[],writable:!0}),t=t||Number.MAX_SAFE_INTEGER;const i=Object.entries((0,r.l7)({bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0,symbol:void 0},e));for(let e=0;e<i.length;e++){const[t,s]=i[e];this[t]=s}"Array"===this.asks.constructor.name&&(this.asks=new a.lB(this.asks,t)),"Array"===this.bids.constructor.name&&(this.bids=new a.T8(this.bids,t)),this.timestamp&&(this.datetime=(0,s.qo)(this.timestamp))}limit(){return this.asks.limit(),this.bids.limit(),this}update(e){return void 0!==e.nonce&&void 0!==this.nonce&&e.nonce<=this.nonce?this:(this.nonce=e.nonce,this.timestamp=e.timestamp,this.datetime=(0,s.qo)(this.timestamp),this.reset(e))}reset(e={}){if(this.asks.index.fill(Number.MAX_VALUE),this.asks.length=0,e.asks)for(let t=0;t<e.asks.length;t++)this.asks.storeArray(e.asks[t]);if(this.bids.index.fill(Number.MAX_VALUE),this.bids.length=0,e.bids)for(let t=0;t<e.bids.length;t++)this.bids.storeArray(e.bids[t]);return this.nonce=e.nonce,this.timestamp=e.timestamp,this.datetime=(0,s.qo)(this.timestamp),this.symbol=e.symbol,this}}class o extends n{constructor(e={},t=undefined){super((0,r.l7)(e,{asks:new a.jC(e.asks||[],t),bids:new a.GC(e.bids||[],t)}))}}class d extends n{constructor(e={},t=undefined){super((0,r.l7)(e,{asks:new a.wG(e.asks||[],t),bids:new a.rH(e.bids||[],t)}))}}},416:(e,t,i)=>{function s(e,t){let i=0,s=e.length-1;for(;i<=s;){const r=i+s>>>1;e[r]-t<0?i=r+1:s=r-1}return i}i.d(t,{GC:()=>u,T8:()=>c,jC:()=>h,lB:()=>d,rH:()=>p,wG:()=>l});const r=new Float64Array(new Array(1024).fill(Number.MAX_VALUE));class a extends Array{constructor(e=[],t=undefined){super(),Object.defineProperty(this,"index",{__proto__:null,value:new Float64Array(r),writable:!0}),Object.defineProperty(this,"depth",{__proto__:null,value:t||Number.MAX_SAFE_INTEGER,writable:!0}),this.length=0;for(let t=0;t<e.length;t++)this.storeArray(e[t].slice())}storeArray(e){const t=e[0],i=e[1],r=this.side?-t:t,a=s(this.index,r);if(i){if(this.index[a]===r)this[a][1]=i;else if(this.length++,this.index.copyWithin(a+1,a,this.index.length),this.index[a]=r,this.copyWithin(a+1,a,this.length),this[a]=e,this.length>this.index.length-1){const e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else this.index[a]===r&&(this.index.copyWithin(a,a+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.copyWithin(a,a+1,this.length),this.length--)}store(e,t){this.storeArray([e,t])}limit(){if(this.length>this.depth){for(let e=this.depth;e<this.length;e++)this.index[e]=Number.MAX_VALUE;this.length=this.depth}}}class n extends a{store(e,t,i){this.storeArray([e,t,i])}storeArray(e){const t=e[0],i=e[1],r=e[2],a=this.side?-t:t,n=s(this.index,a);if(i&&r){if(this.index[n]===a){const e=this[n];e[1]=i,e[2]=r}else if(this.length++,this.index.copyWithin(n+1,n,this.index.length),this.index[n]=a,this.copyWithin(n+1,n,this.length),this[n]=e,this.length>this.index.length-1){const e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else this.index[n]===a&&(this.index.copyWithin(n,n+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.copyWithin(n,n+1,this.length),this.length--)}}class o extends Array{constructor(e=[],t=Number.MAX_SAFE_INTEGER){super(e.length),Object.defineProperty(this,"hashmap",{__proto__:null,value:new Map,writable:!0}),Object.defineProperty(this,"index",{__proto__:null,value:new Float64Array(r),writable:!0}),Object.defineProperty(this,"depth",{__proto__:null,value:t||Number.MAX_SAFE_INTEGER,writable:!0});for(let t=0;t<e.length;t++)this.length=t,this.storeArray(e[t].slice())}store(e,t,i){this.storeArray([e,t,i])}storeArray(e){const t=e[0],i=e[1],r=e[2];let a;if(a=void 0!==t?this.side?-t:t:void 0,i){if(this.hashmap.has(r)){const t=this.hashmap.get(r);if(a=a||t,e[0]=Math.abs(a),a===t){const t=s(this.index,a);return this.index[t]=a,void(this[t]=e)}{const e=s(this.index,t);this.index.copyWithin(e,e+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.copyWithin(e,e+1,this.length),this.length--}}this.hashmap.set(r,a);const t=s(this.index,a);if(this.length++,this.index.copyWithin(t+1,t,this.index.length),this.index[t]=a,this.copyWithin(t+1,t,this.length),this[t]=e,this.length>this.index.length-1){const e=Array.from(this.index);e.length=2*this.length,e.fill(Number.MAX_VALUE,this.index.length),this.index=new Float64Array(e)}}else if(this.hashmap.has(r)){const e=this.hashmap.get(r),t=s(this.index,e);this.index.copyWithin(t,t+1,this.index.length),this.index[this.length-1]=Number.MAX_VALUE,this.copyWithin(t,t+1,this.length),this.length--,this.hashmap.delete(r)}}limit(){if(this.length>this.depth){for(let e=this.depth;e<this.length;e++)this.hashmap.delete(this.index[e]),this.index[e]=Number.MAX_VALUE;this.length=this.depth}}}class d extends a{get side(){return!1}}class c extends a{get side(){return!0}}class h extends n{get side(){return!1}}class u extends n{get side(){return!0}}class l extends o{get side(){return!1}}class p extends o{get side(){return!0}}},7517:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(2897),r=i(9125),a=i(1621),n=i(7026),o=i.n(n);const d=r.UG?o():self.WebSocket;class c extends s.Z{createConnection(){this.verbose&&this.log(new Date,"connecting to",this.url),this.connectionStarted=(0,a.m)(),this.setConnectionTimeout(),r.UG?this.connection=new d(this.url,this.protocols,this.options):this.connection=new d(this.url,this.protocols),this.connection.onopen=this.onOpen.bind(this),this.connection.onmessage=this.onMessage.bind(this),this.connection.onerror=this.onError.bind(this),this.connection.onclose=this.onClose.bind(this),r.UG&&this.connection.on("ping",this.onPing.bind(this)).on("pong",this.onPong.bind(this)).on("upgrade",this.onUpgrade.bind(this))}connect(e=0){return this.startedConnecting||(this.startedConnecting=!0,e?(0,a._v)(e).then(this.createConnection.bind(this)):this.createConnection()),this.connected}isOpen(){return this.connection.readyState===d.OPEN}close(){if(this.connection instanceof d)return this.connection.close()}}},2049:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(4714);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bequant",name:"Bequant",countries:["MT"],pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg",api:{public:"https://api.bequant.io",private:"https://api.bequant.io"},www:"https://bequant.io",doc:["https://api.bequant.io/"],fees:["https://bequant.io/fees-and-limits"],referral:"https://bequant.io"}})}}},7679:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(4890),r=i(6689),a=i(9292),n=i(5981),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bigone",name:"BigONE",countries:["CN"],version:"v3",rateLimit:1200,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"min1","5m":"min5","15m":"min15","30m":"min30","1h":"hour1","3h":"hour3","4h":"hour4","6h":"hour6","12h":"hour12","1d":"day1","1w":"week1","1M":"month1"},hostname:"big.one",urls:{logo:"https://user-images.githubusercontent.com/1294454/69354403-1d532180-0c91-11ea-88ed-44c06cefdf87.jpg",api:{public:"https://{hostname}/api/v3",private:"https://{hostname}/api/v3/viewer"},www:"https://big.one",doc:"https://open.big.one/docs/api.html",fees:"https://bigone.zendesk.com/hc/en-us/articles/115001933374-BigONE-Fee-Policy",referral:"https://b1.run/users/new?code=D3LLBVFT"},api:{public:{get:["ping","asset_pairs","asset_pairs/{asset_pair_name}/depth","asset_pairs/{asset_pair_name}/trades","asset_pairs/{asset_pair_name}/ticker","asset_pairs/{asset_pair_name}/candles","asset_pairs/tickers"]},private:{get:["accounts","fund/accounts","assets/{asset_symbol}/address","orders","orders/{id}","orders/multi","trades","withdrawals","deposits"],post:["orders","orders/{id}/cancel","orders/cancel","withdrawals","transfer"]}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{withdraw:{}}},options:{accountsByType:{spot:"SPOT",funding:"FUND",future:"CONTRACT",swap:"CONTRACT"},transfer:{fillResponseFromRequest:!0},exchangeMillisecondsCorrection:-100},precisionMode:a.sh,exceptions:{exact:{10001:r.BadRequest,10005:r.ExchangeError,"Amount's scale must greater than AssetPair's base scale":r.InvalidOrder,"Price mulit with amount should larger than AssetPair's min_quote_value":r.InvalidOrder,10007:r.BadRequest,10011:r.ExchangeError,10013:r.BadSymbol,10014:r.InsufficientFunds,10403:r.PermissionDenied,10429:r.RateLimitExceeded,40004:r.AuthenticationError,40103:r.AuthenticationError,40104:r.AuthenticationError,40301:r.PermissionDenied,40302:r.ExchangeError,40601:r.ExchangeError,40602:r.ExchangeError,40603:r.InsufficientFunds,40604:r.InvalidOrder,40605:r.InvalidOrder,40120:r.InvalidOrder,40121:r.InvalidOrder,60100:r.BadSymbol},broad:{}},commonCurrencies:{CRE:"Cybereits",FXT:"FXTTOKEN",FREE:"FreeRossDAO",MBN:"Mobilian Coin",ONE:"BigONE Token"}})}async fetchMarkets(e={}){const t=await this.publicGetAssetPairs(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"name"),a=this.safeString(t,"id"),n=this.safeValue(t,"base_asset",{}),o=this.safeValue(t,"quote_asset",{}),d=this.safeString(n,"symbol"),c=this.safeString(o,"symbol"),h=this.safeCurrencyCode(d),u=this.safeCurrencyCode(c),l={id:r,uuid:a,symbol:h+"/"+u,base:h,quote:u,settle:void 0,baseId:d,quoteId:c,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"base_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"quote_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_quote_value"),max:this.safeNumber(t,"max_quote_value")}},info:t};s.push(l)}return s}async loadMarkets(e=!1,t={}){const i=await super.loadMarkets(e,t);let s=this.safeValue(this.options,"marketsByUuid");if(void 0===s||e){s={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],i=this.markets[t];s[this.safeString(i,"uuid")]=i}this.options.marketsByUuid=s}return i}parseTicker(e,t=undefined){const i=this.safeString(e,"asset_pair_name"),s=this.safeSymbol(i,t,"-"),r=void 0,a=this.safeString(e,"close"),n=this.safeValue(e,"bid",{}),o=this.safeValue(e,"ask",{});return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(n,"price"),bidVolume:this.safeString(n,"quantity"),ask:this.safeString(o,"price"),askVolume:this.safeString(o,"quantity"),vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:this.safeString(e,"daily_change"),percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={asset_pair_name:i.id},r=await this.publicGetAssetPairsAssetPairNameTicker(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==(e=this.marketSymbols(e))){const t=this.marketIds(e);i.pair_names=t.join(",")}const s=await this.publicGetAssetPairsTickers(this.extend(i,t)),r=this.safeValue(s,"data",[]),a={};for(let e=0;e<r.length;e++){const t=this.parseTicker(r[e]);a[t.symbol]=t}return this.filterByArray(a,"symbol",e)}async fetchTime(e={}){const t=await this.publicGetPing(e),i=this.safeValue(t,"data",{}),s=this.safeInteger(i,"timestamp");return this.parseToInt(s/1e6)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={asset_pair_name:s.id};void 0!==t&&(r.limit=t);const a=await this.publicGetAssetPairsAssetPairNameDepth(this.extend(r,i)),n=this.safeValue(a,"data",{});return this.parseOrderBook(n,s.symbol,void 0,"bids","asks","price","quantity")}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString2(e,"created_at","inserted_at")),s=this.safeString(e,"price"),r=this.safeString(e,"amount"),a=this.safeString(e,"asset_pair_name");t=this.safeMarket(a,t,"-");let n=this.safeString(e,"side");const o=this.safeString(e,"taker_side");let d;void 0!==o&&void 0!==n&&"SELF_TRADING"!==n&&(d=o===n?"taker":"maker"),void 0===n?n="ASK"===o?"sell":"buy":"BID"===n?n="buy":"ASK"===n&&(n="sell");const c=this.safeString(e,"maker_order_id"),h=this.safeString(e,"taker_order_id");let u;void 0!==c?u=void 0!==h?[c,h]:c:void 0!==h&&(u=h);const l={id:this.safeString(e,"id"),timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:u,type:"limit",side:n,takerOrMaker:d,price:s,amount:r,cost:void 0,info:e};let p,f;void 0!==d?"buy"===n?"maker"===d?(p=t.base,f=t.quote):(p=t.quote,f=t.base):"maker"===d?(p=t.quote,f=t.base):(p=t.base,f=t.quote):"SELF_TRADING"===n&&("BID"===o?(p=t.quote,f=t.base):"ASK"===o&&(p=t.base,f=t.quote));const m=this.safeString(e,"maker_fee"),v=this.safeString(e,"taker_fee");return void 0!==m?void 0!==v?l.fees=[{cost:m,currency:p},{cost:v,currency:f}]:l.fee={cost:m,currency:p}:l.fee=void 0!==v?{cost:v,currency:f}:void 0,this.safeTrade(l,t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={asset_pair_name:r.id},n=await this.publicGetAssetPairsAssetPairNameTrades(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);void 0===s&&(s=100);const n={asset_pair_name:a.id,period:this.safeString(this.timeframes,t,t),limit:s};if(void 0!==i){const e=this.parseTimeframe(t),r=this.sum(i,s*e*1e3);n.time=this.iso8601(r)}const o=await this.publicGetAssetPairsAssetPairNameCandles(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseOHLCVs(d,a,t,i,s)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"asset_symbol"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.used=this.safeString(s,"locked_balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"type","");e=this.omit(e,"type");const i="privateGet"+this.capitalize(t)+"Accounts",s=await this[i](e);return this.parseBalance(s)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"asset_pair_name"),r=this.safeSymbol(s,t,"-"),a=this.parse8601(this.safeString(e,"created_at")),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),d=this.safeString(e,"avg_deal_price"),c=this.safeString(e,"filled_amount"),h=this.parseOrderStatus(this.safeString(e,"state"));let u=this.safeString(e,"side");u="BID"===u?"buy":"sell";const l=this.parse8601(this.safeString(e,"updated_at"));return this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:l,symbol:r,type:void 0,timeInForce:void 0,postOnly:void 0,side:u,price:n,stopPrice:void 0,triggerPrice:void 0,amount:o,cost:void 0,average:d,filled:c,remaining:void 0,status:h,fee:void 0,trades:void 0},t)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e);i="buy"===i?"BID":"ASK";const d=t.toUpperCase(),c={asset_pair_name:o.id,side:i,amount:this.amountToPrecision(e,s),type:d};if("LIMIT"===d)c.price=this.priceToPrecision(e,a);else{const t="STOP_LIMIT"===d;if(t||"STOP_MARKET"===d){const t=this.safeNumber2(n,"stop_price","stopPrice");if(void 0===t)throw new r.ArgumentsRequired(this.id+" createOrder() requires a stop_price parameter");c.stop_price=this.priceToPrecision(e,t),n=this.omit(n,["stop_price","stopPrice"])}t&&(c.price=this.priceToPrecision(e,a))}const h=await this.privatePostOrders(this.extend(c,n)),u=this.safeValue(h,"data");return this.parseOrder(u,o)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privatePostOrdersIdCancel(this.extend(s,i)),a=this.safeValue(r,"data");return this.parseOrder(a)}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={asset_pair_name:this.market(e).id};return await this.privatePostOrdersCancel(this.extend(i,t))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetOrdersId(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={asset_pair_name:a.id};void 0!==i&&(n.limit=i);const o=await this.privateGetOrders(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseOrders(d,a,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");const a=this.market(e),n={asset_pair_name:a.id};void 0!==i&&(n.limit=i);const o=await this.privateGetTrades(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,a,t,i)}parseOrderStatus(e){return this.safeString({PENDING:"open",FILLED:"closed",CANCELLED:"canceled"},e)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({state:"PENDING"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({state:"FILLED"},s))}nonce(){const e=1e6*this.safeInteger(this.options,"exchangeMillisecondsCorrection",0);return 1e3*this.microseconds()+e}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const d=this.omit(s,this.extractParams(e));let c=this.implodeHostname(this.urls.api[t])+"/"+this.implodeParams(e,s);if(r={},"public"===t)Object.keys(d).length&&(c+="?"+this.urlencode(d));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t={type:"OpenAPIV2",sub:this.apiKey,nonce:e},s=(0,n.F)(t,this.encode(this.secret),o.J);r.Authorization="Bearer "+s,"GET"===i?Object.keys(d).length&&(c+="?"+this.urlencode(d)):"POST"===i&&(r["Content-Type"]="application/json",a=this.json(d))}return r["User-Agent"]="ccxt/"+this.id+"-"+this.version,{url:c,method:i,body:a,headers:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={asset_symbol:this.currency(e).id},s=await this.privateGetAssetsAssetSymbolAddress(this.extend(i,t)),a=this.safeValue(s,"data",[]);if(a.length<1)throw new r.ExchangeError(this.id+" fetchDepositAddress() returned empty address response");const n=a[0],o=this.safeString(n,"value"),d=this.safeString(n,"memo");return this.checkAddress(o),{currency:e,address:o,tag:d,network:void 0,info:s}}parseTransactionStatus(e){return this.safeString({WITHHOLD:"ok",UNCONFIRMED:"pending",CONFIRMED:"ok",COMPLETED:"ok",PENDING:"pending"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"asset_symbol"),s=this.safeCurrencyCode(i),r=this.safeInteger(e,"id"),a=this.safeNumber(e,"amount"),n=this.parseTransactionStatus(this.safeString(e,"state")),o=this.parse8601(this.safeString(e,"inserted_at")),d=this.parse8601(this.safeString2(e,"updated_at","completed_at")),c=this.safeString(e,"txid"),h=this.safeString(e,"target_address"),u=this.safeString(e,"memo"),l="customer_id"in e?"deposit":"withdrawal";return{info:e,id:r,txid:c,timestamp:o,datetime:this.iso8601(o),network:void 0,addressFrom:void 0,address:void 0,addressTo:h,tagFrom:void 0,tag:u,tagTo:void 0,type:l,amount:a,currency:s,status:n,updated:d,fee:void 0}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset_symbol=a.id),void 0!==i&&(r.limit=i);const n=await this.privateGetDeposits(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset_symbol=a.id),void 0!==i&&(r.limit=i);const n=await this.privateGetWithdrawals(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c=this.safeString(r,"guid",this.uuid()),h={symbol:a.id,amount:this.currencyToPrecision(e,t),from:o,to:d,guid:c},u=await this.privatePostTransfer(this.extend(h,r)),l=this.parseTransfer(u,a),p=this.safeValue(this.options,"transfer",{});return this.safeValue(p,"fillResponseFromRequest",!0)&&(l.fromAccount=i,l.toAccount=s,l.amount=t,l.id=c),l}parseTransfer(e,t=undefined){const i=this.safeNumber(e,"code");return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:i,amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(i)}}parseTransferStatus(e){return this.safeString({0:"ok"},e,"failed")}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();const a=this.currency(e),n={symbol:a.id,target_address:i,amount:this.currencyToPrecision(e,t)};void 0!==s&&(n.memo=s);const o=await this.privatePostWithdrawals(this.extend(n,r)),d=this.safeValue(o,"data",{});return this.parseTransaction(d,a)}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"code"),u=this.safeString(o,"message");if("0"!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e),new r.ExchangeError(e)}}}},9987:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(4611),r=i(6689),a=i(2194),n=i(9292),o=i(1372),d=i(5981);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"binance",name:"Binance",countries:["JP","MT"],rateLimit:50,certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,addMargin:!0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:!1,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,editOrder:!0,fetchAccounts:void 0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!0,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:"emulated",fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchL3OrderBook:void 0,fetchLastPrices:!0,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!0,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:void 0,fetchPositions:!0,fetchPositionsRisk:!0,fetchPremiumIndexOHLCV:!1,fetchSettlementHistory:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:!0,fetchTransactions:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!0,repayMargin:!0,setLeverage:!0,setMargin:!1,setMarginMode:!0,setPositionMode:!0,signIn:!1,transfer:!0,withdraw:!0},timeframes:{"1s":"1s","1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/29604020-d5483cdc-87ee-11e7-94c7-d1a8d9169293.jpg",test:{dapiPublic:"https://testnet.binancefuture.com/dapi/v1",dapiPrivate:"https://testnet.binancefuture.com/dapi/v1",dapiPrivateV2:"https://testnet.binancefuture.com/dapi/v2",fapiPublic:"https://testnet.binancefuture.com/fapi/v1",fapiPrivate:"https://testnet.binancefuture.com/fapi/v1",fapiPrivateV2:"https://testnet.binancefuture.com/fapi/v2",public:"https://testnet.binance.vision/api/v3",private:"https://testnet.binance.vision/api/v3",v1:"https://testnet.binance.vision/api/v1"},api:{wapi:"https://api.binance.com/wapi/v3",sapi:"https://api.binance.com/sapi/v1",sapiV2:"https://api.binance.com/sapi/v2",sapiV3:"https://api.binance.com/sapi/v3",sapiV4:"https://api.binance.com/sapi/v4",dapiPublic:"https://dapi.binance.com/dapi/v1",dapiPrivate:"https://dapi.binance.com/dapi/v1",eapiPublic:"https://eapi.binance.com/eapi/v1",eapiPrivate:"https://eapi.binance.com/eapi/v1",dapiPrivateV2:"https://dapi.binance.com/dapi/v2",dapiData:"https://dapi.binance.com/futures/data",fapiPublic:"https://fapi.binance.com/fapi/v1",fapiPrivate:"https://fapi.binance.com/fapi/v1",fapiData:"https://fapi.binance.com/futures/data",fapiPrivateV2:"https://fapi.binance.com/fapi/v2",public:"https://api.binance.com/api/v3",private:"https://api.binance.com/api/v3",v1:"https://api.binance.com/api/v1"},www:"https://www.binance.com",referral:{url:"https://accounts.binance.com/en/register?ref=D7YA7CLY",discount:.1},doc:["https://binance-docs.github.io/apidocs/spot/en"],api_management:"https://www.binance.com/en/usercenter/settings/api-management",fees:"https://www.binance.com/en/fee/schedule"},api:{sapi:{get:{"system/status":.1,accountSnapshot:240,"margin/asset":1,"margin/pair":1,"margin/allAssets":.1,"margin/allPairs":.1,"margin/priceIndex":1,"asset/assetDividend":1,"asset/dribblet":.1,"asset/transfer":.1,"asset/assetDetail":.1,"asset/tradeFee":.1,"asset/ledger-transfer/cloud-mining/queryByPage":4,"asset/convert-transfer/queryByPage":.033335,"margin/loan":1,"margin/repay":1,"margin/account":1,"margin/transfer":.1,"margin/interestHistory":.1,"margin/forceLiquidationRec":.1,"margin/order":1,"margin/openOrders":1,"margin/allOrders":20,"margin/myTrades":1,"margin/maxBorrowable":5,"margin/maxTransferable":5,"margin/tradeCoeff":1,"margin/isolated/transfer":.1,"margin/isolated/account":1,"margin/isolated/pair":1,"margin/isolated/allPairs":1,"margin/isolated/accountLimit":.1,"margin/interestRateHistory":.1,"margin/orderList":1,"margin/allOrderList":20,"margin/openOrderList":1,"margin/crossMarginData":{cost:.1,noCoin:.5},"margin/isolatedMarginData":{cost:.1,noCoin:1},"margin/isolatedMarginTier":.1,"margin/rateLimit/order":2,"margin/dribblet":.1,"margin/crossMarginCollateralRatio":10,"margin/exchange-small-liability":.6667,"margin/exchange-small-liability-history":.6667,"margin/next-hourly-interest-rate":.6667,"loan/income":40,"loan/ongoing/orders":40,"loan/ltv/adjustment/history":40,"loan/borrow/history":40,"loan/repay/history":40,"loan/loanable/data":40,"loan/collateral/data":40,"loan/repay/collateral/rate":600,"loan/vip/ongoing/orders":40,"loan/vip/repay/history":40,"loan/vip/collateral/account":600,"fiat/orders":600.03,"fiat/payments":.1,"futures/transfer":1,"futures/loan/borrow/history":1,"futures/loan/repay/history":1,"futures/loan/wallet":1,"futures/loan/adjustCollateral/history":1,"futures/loan/liquidationHistory":1,"rebate/taxQuery":20.001,"capital/config/getall":1,"capital/deposit/address":1,"capital/deposit/hisrec":.1,"capital/deposit/subAddress":.1,"capital/deposit/subHisrec":.1,"capital/withdraw/history":.1,"capital/contract/convertible-coins":4.0002,"convert/tradeFlow":.6667,"convert/exchangeInfo":50,"convert/assetInfo":10,"convert/orderStatus":.6667,"account/status":.1,"account/apiTradingStatus":.1,"account/apiRestrictions/ipRestriction":.1,bnbBurn:.1,"sub-account/futures/account":1,"sub-account/futures/accountSummary":.1,"sub-account/futures/positionRisk":1,"sub-account/futures/internalTransfer":.1,"sub-account/list":.1,"sub-account/margin/account":1,"sub-account/margin/accountSummary":1,"sub-account/spotSummary":.1,"sub-account/status":1,"sub-account/sub/transfer/history":.1,"sub-account/transfer/subUserHistory":.1,"sub-account/universalTransfer":.1,"sub-account/apiRestrictions/ipRestriction/thirdPartyList":1,"sub-account/transaction-tatistics":.4,"managed-subaccount/asset":.1,"managed-subaccount/accountSnapshot":240,"managed-subaccount/queryTransLogForInvestor":.1,"managed-subaccount/queryTransLogForTradeParent":.1,"managed-subaccount/fetch-future-asset":.1,"managed-subaccount/marginAsset":.1,"managed-subaccount/info":.4,"lending/daily/product/list":.1,"lending/daily/userLeftQuota":.1,"lending/daily/userRedemptionQuota":.1,"lending/daily/token/position":.1,"lending/union/account":.1,"lending/union/purchaseRecord":.1,"lending/union/redemptionRecord":.1,"lending/union/interestHistory":.1,"lending/project/list":.1,"lending/project/position/list":.1,"mining/pub/algoList":.1,"mining/pub/coinList":.1,"mining/worker/detail":.5,"mining/worker/list":.5,"mining/payment/list":.5,"mining/statistics/user/status":.5,"mining/statistics/user/list":.5,"mining/payment/uid":.5,"bswap/pools":.1,"bswap/liquidity":{cost:.1,noPoolId:1},"bswap/liquidityOps":20.001,"bswap/quote":1.00005,"bswap/swap":20.001,"bswap/poolConfigure":1.00005,"bswap/addLiquidityPreview":1.00005,"bswap/removeLiquidityPreview":1.00005,"bswap/unclaimedRewards":6.667,"bswap/claimedHistory":6.667,"blvt/tokenInfo":.1,"blvt/subscribe/record":.1,"blvt/redeem/record":.1,"blvt/userLimit":.1,"apiReferral/ifNewUser":1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/rebate/recentRecord":1,"apiReferral/rebate/historicalRecord":1,"apiReferral/kickback/recentRecord":1,"apiReferral/kickback/historicalRecord":1,"broker/subAccountApi":1,"broker/subAccount":1,"broker/subAccountApi/commission/futures":1,"broker/subAccountApi/commission/coinFutures":1,"broker/info":1,"broker/transfer":1,"broker/transfer/futures":1,"broker/rebate/recentRecord":1,"broker/rebate/historicalRecord":1,"broker/subAccount/bnbBurn/status":1,"broker/subAccount/depositHist":1,"broker/subAccount/spotSummary":1,"broker/subAccount/marginSummary":1,"broker/subAccount/futuresSummary":1,"broker/rebate/futures/recentRecord":1,"broker/subAccountApi/ipRestriction":1,"broker/universalTransfer":1,"account/apiRestrictions":.1,"c2c/orderMatch/listUserOrderHistory":.1,"nft/history/transactions":20.001,"nft/history/deposit":20.001,"nft/history/withdraw":20.001,"nft/user/getAsset":20.001,"pay/transactions":20.001,"giftcard/verify":.1,"giftcard/cryptography/rsa-public-key":.1,"giftcard/buyCode/token-limit":.1,"algo/futures/openOrders":.1,"algo/futures/historicalOrders":.1,"algo/futures/subOrders":.1,"portfolio/account":.1,"portfolio/collateralRate":5,"portfolio/pmLoan":3.3335,"portfolio/interest-history":.6667,"portfolio/interest-rate":.6667,"staking/productList":.1,"staking/position":.1,"staking/stakingRecord":.1,"staking/personalLeftQuota":.1},post:{"asset/dust":1,"asset/dust-btc":.1,"asset/transfer":.1,"asset/get-funding-asset":.1,"asset/convert-transfer":.033335,"account/disableFastWithdrawSwitch":.1,"account/enableFastWithdrawSwitch":.1,"capital/withdraw/apply":4.0002,"capital/contract/convertible-coins":4.0002,"margin/transfer":1,"margin/loan":20.001,"margin/repay":20.001,"margin/order":.040002,"margin/order/oco":.040002,"margin/exchange-small-liability":20.001,"margin/isolated/transfer":4.0002,"margin/isolated/account":2.0001,bnbBurn:.1,"sub-account/virtualSubAccount":.1,"sub-account/margin/transfer":4.0002,"sub-account/margin/enable":.1,"sub-account/futures/enable":.1,"sub-account/futures/transfer":.1,"sub-account/futures/internalTransfer":.1,"sub-account/transfer/subToSub":.1,"sub-account/transfer/subToMaster":.1,"sub-account/universalTransfer":.1,"managed-subaccount/deposit":.1,"managed-subaccount/withdraw":.1,userDataStream:.1,"userDataStream/isolated":.1,"futures/transfer":.1,"lending/customizedFixed/purchase":.1,"lending/daily/purchase":.1,"lending/daily/redeem":.1,"bswap/liquidityAdd":60,"bswap/liquidityRemove":60,"bswap/swap":60,"bswap/claimRewards":6.667,"blvt/subscribe":.1,"blvt/redeem":.1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/rebate/historicalRecord":1,"apiReferral/kickback/historicalRecord":1,"broker/subAccount":1,"broker/subAccount/margin":1,"broker/subAccount/futures":1,"broker/subAccountApi":1,"broker/subAccountApi/permission":1,"broker/subAccountApi/commission":1,"broker/subAccountApi/commission/futures":1,"broker/subAccountApi/commission/coinFutures":1,"broker/transfer":1,"broker/transfer/futures":1,"broker/rebate/historicalRecord":1,"broker/subAccount/bnbBurn/spot":1,"broker/subAccount/bnbBurn/marginInterest":1,"broker/subAccount/blvt":1,"broker/subAccountApi/ipRestriction":1,"broker/subAccountApi/ipRestriction/ipList":1,"broker/universalTransfer":1,"broker/subAccountApi/permission/universalTransfer":1,"broker/subAccountApi/permission/vanillaOptions":1,"giftcard/createCode":.1,"giftcard/redeemCode":.1,"giftcard/buyCode":.1,"algo/futures/newOrderVp":20.001,"algo/futures/newOrderTwap":20.001,"staking/purchase":.1,"staking/redeem":.1,"staking/setAutoStaking":.1,"portfolio/repay":20.001,"loan/borrow":40,"loan/repay":40,"loan/adjust/ltv":40,"loan/customize/margin_call":40,"loan/vip/repay":40,"convert/getQuote":20.001,"convert/acceptQuote":3.3335},put:{userDataStream:.1,"userDataStream/isolated":.1},delete:{"margin/openOrders":.1,"margin/order":.0066667,"margin/orderList":.0066667,"margin/isolated/account":2.0001,userDataStream:.1,"userDataStream/isolated":.1,"broker/subAccountApi":1,"broker/subAccountApi/ipRestriction/ipList":1,"algo/futures/order":.1}},sapiV2:{get:{"sub-account/futures/account":.1,"sub-account/futures/positionRisk":.1}},sapiV3:{get:{"sub-account/assets":1},post:{"asset/getUserAsset":.5}},sapiV4:{get:{"sub-account/assets":1}},wapi:{post:{withdraw:1,"sub-account/transfer":1},get:{depositHistory:1,withdrawHistory:1,depositAddress:1,accountStatus:1,systemStatus:1,apiTradingStatus:1,userAssetDribbletLog:1,tradeFee:1,assetDetail:1,"sub-account/list":1,"sub-account/transfer/history":1,"sub-account/assets":1}},dapiPublic:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:2,byLimit:[[50,2],[100,5],[500,10],[1e3,20]]},trades:5,historicalTrades:20,aggTrades:20,premiumIndex:10,fundingRate:1,klines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},continuousKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},indexPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},markPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},openInterest:1,pmExchangeInfo:1}},dapiData:{get:{openInterestHist:1,topLongShortAccountRatio:1,topLongShortPositionRatio:1,globalLongShortAccountRatio:1,takerBuySellVol:1,basis:1}},dapiPrivate:{get:{"positionSide/dual":30,order:1,openOrder:1,openOrders:{cost:1,noSymbol:5},allOrders:{cost:20,noSymbol:40},balance:1,account:5,"positionMargin/history":1,positionRisk:1,userTrades:{cost:20,noSymbol:40},income:20,leverageBracket:1,forceOrders:{cost:20,noSymbol:50},adlQuantile:5,orderAmendment:1,pmAccountInfo:5},post:{"positionSide/dual":1,order:4,batchOrders:5,countdownCancelAll:10,leverage:1,marginType:1,positionMargin:1,listenKey:1},put:{listenKey:1,order:1,batchOrders:5},delete:{order:1,allOpenOrders:1,batchOrders:5,listenKey:1}},dapiPrivateV2:{get:{leverageBracket:1}},fapiPublic:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:2,byLimit:[[50,2],[100,5],[500,10],[1e3,20]]},trades:5,historicalTrades:20,aggTrades:20,klines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},continuousKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},markPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},indexPriceKlines:{cost:1,byLimit:[[99,1],[499,2],[1e3,5],[1e4,10]]},fundingRate:1,premiumIndex:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},openInterest:1,indexInfo:1,apiTradingStatus:{cost:1,noSymbol:10},lvtKlines:1,pmExchangeInfo:1}},fapiData:{get:{openInterestHist:1,topLongShortAccountRatio:1,topLongShortPositionRatio:1,globalLongShortAccountRatio:1,takerlongshortRatio:1}},fapiPrivate:{get:{forceOrders:{cost:20,noSymbol:50},allOrders:5,openOrder:1,openOrders:1,order:1,account:5,balance:5,leverageBracket:1,"positionMargin/history":1,positionRisk:5,"positionSide/dual":30,userTrades:5,income:30,commissionRate:20,apiTradingStatus:1,multiAssetsMargin:30,"apiReferral/ifNewUser":1,"apiReferral/customization":1,"apiReferral/userCustomization":1,"apiReferral/traderNum":1,"apiReferral/overview":1,"apiReferral/tradeVol":1,"apiReferral/rebateVol":1,"apiReferral/traderSummary":1,adlQuantile:5,pmAccountInfo:5},post:{batchOrders:5,"positionSide/dual":1,positionMargin:1,marginType:1,order:4,leverage:1,listenKey:1,countdownCancelAll:10,multiAssetsMargin:1,"apiReferral/customization":1,"apiReferral/userCustomization":1},put:{listenKey:1},delete:{batchOrders:1,order:1,allOpenOrders:1,listenKey:1}},fapiPrivateV2:{get:{account:1,balance:1,positionRisk:1}},eapiPublic:{get:{ping:1,time:1,exchangeInfo:1,index:1,ticker:5,mark:5,depth:1,klines:1,trades:5,historicalTrades:20,exerciseHistory:3,openInterest:3}},eapiPrivate:{get:{account:3,position:5,openOrders:{cost:1,noSymbol:40},historyOrders:3,userTrades:5,exerciseRecord:5,bill:1,marginAccount:3,mmp:1,countdownCancelAll:1,order:1},post:{order:1,batchOrders:5,listenKey:1,mmpSet:1,mmpReset:1,countdownCancelAll:1,countdownCancelAllHeartBeat:10},put:{listenKey:1},delete:{order:1,batchOrders:1,allOpenOrders:1,allOpenOrdersByUnderlying:1,listenKey:1}},public:{get:{ping:1,time:1,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10],[5e3,50]]},trades:1,aggTrades:1,historicalTrades:5,klines:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},exchangeInfo:10},put:{userDataStream:1},post:{userDataStream:1},delete:{userDataStream:1}},private:{get:{allOrderList:10,openOrderList:3,orderList:2,order:2,openOrders:{cost:3,noSymbol:40},allOrders:10,account:10,myTrades:10,"rateLimit/order":20,myPreventedMatches:1},post:{"order/oco":1,order:1,"order/cancelReplace":1,"order/test":1},delete:{openOrders:1,orderList:1,order:1}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")},linear:{trading:{feeSide:"quote",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000400"),maker:this.parseNumber("0.000200"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000400")],[this.parseNumber("250"),this.parseNumber("0.000400")],[this.parseNumber("2500"),this.parseNumber("0.000350")],[this.parseNumber("7500"),this.parseNumber("0.000320")],[this.parseNumber("22500"),this.parseNumber("0.000300")],[this.parseNumber("50000"),this.parseNumber("0.000270")],[this.parseNumber("100000"),this.parseNumber("0.000250")],[this.parseNumber("200000"),this.parseNumber("0.000220")],[this.parseNumber("400000"),this.parseNumber("0.000200")],[this.parseNumber("750000"),this.parseNumber("0.000170")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000200")],[this.parseNumber("250"),this.parseNumber("0.000160")],[this.parseNumber("2500"),this.parseNumber("0.000140")],[this.parseNumber("7500"),this.parseNumber("0.000120")],[this.parseNumber("22500"),this.parseNumber("0.000100")],[this.parseNumber("50000"),this.parseNumber("0.000080")],[this.parseNumber("100000"),this.parseNumber("0.000060")],[this.parseNumber("200000"),this.parseNumber("0.000040")],[this.parseNumber("400000"),this.parseNumber("0.000020")],[this.parseNumber("750000"),this.parseNumber("0")]]}}},inverse:{trading:{feeSide:"base",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000500"),maker:this.parseNumber("0.000100"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000500")],[this.parseNumber("250"),this.parseNumber("0.000450")],[this.parseNumber("2500"),this.parseNumber("0.000400")],[this.parseNumber("7500"),this.parseNumber("0.000300")],[this.parseNumber("22500"),this.parseNumber("0.000250")],[this.parseNumber("50000"),this.parseNumber("0.000240")],[this.parseNumber("100000"),this.parseNumber("0.000240")],[this.parseNumber("200000"),this.parseNumber("0.000240")],[this.parseNumber("400000"),this.parseNumber("0.000240")],[this.parseNumber("750000"),this.parseNumber("0.000240")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000100")],[this.parseNumber("250"),this.parseNumber("0.000080")],[this.parseNumber("2500"),this.parseNumber("0.000050")],[this.parseNumber("7500"),this.parseNumber("0.0000030")],[this.parseNumber("22500"),this.parseNumber("0")],[this.parseNumber("50000"),this.parseNumber("-0.000050")],[this.parseNumber("100000"),this.parseNumber("-0.000060")],[this.parseNumber("200000"),this.parseNumber("-0.000070")],[this.parseNumber("400000"),this.parseNumber("-0.000080")],[this.parseNumber("750000"),this.parseNumber("-0.000090")]]}}},option:{}},commonCurrencies:{BCC:"BCC",YOYO:"YOYOW"},precisionMode:n.nr,options:{sandboxMode:!1,fetchMarkets:["spot","linear","inverse"],fetchCurrencies:!0,defaultTimeInForce:"GTC",defaultType:"spot",defaultSubType:void 0,hasAlreadyAuthenticatedSuccessfully:!1,warnOnFetchOpenOrdersWithoutSymbol:!0,throwMarginModeAlreadySet:!1,fetchPositions:"positionRisk",recvWindow:1e4,timeDifference:0,adjustForTimeDifference:!1,newOrderRespType:{market:"FULL",limit:"FULL"},quoteOrderQty:!0,broker:{spot:"x-R4BD3S82",margin:"x-R4BD3S82",future:"x-xcKtGhcu",delivery:"x-xcKtGhcu"},accountsByType:{main:"MAIN",spot:"MAIN",funding:"FUNDING",margin:"MARGIN",cross:"MARGIN",future:"UMFUTURE",delivery:"CMFUTURE",linear:"UMFUTURE",inverse:"CMFUTURE"},accountsById:{MAIN:"spot",FUNDING:"funding",MARGIN:"margin",UMFUTURE:"linear",CMFUTURE:"inverse"},networks:{ERC20:"ETH",TRC20:"TRX",BEP2:"BNB",BEP20:"BSC",OMNI:"OMNI",EOS:"EOS",SPL:"SOL"},reverseNetworks:{"tronscan.org":"TRC20","etherscan.io":"ERC20","bscscan.com":"BSC","explorer.binance.org":"BEP2","bithomp.com":"XRP","bloks.io":"EOS","stellar.expert":"XLM","blockchair.com/bitcoin":"BTC","blockchair.com/bitcoin-cash":"BCH","blockchair.com/ecash":"XEC","explorer.litecoin.net":"LTC","explorer.avax.network":"AVAX","solscan.io":"SOL","polkadot.subscan.io":"DOT","dashboard.internetcomputer.org":"ICP","explorer.chiliz.com":"CHZ","cardanoscan.io":"ADA","mainnet.theoan.com":"AION","algoexplorer.io":"ALGO","explorer.ambrosus.com":"AMB","viewblock.io/zilliqa":"ZIL","viewblock.io/arweave":"AR","explorer.ark.io":"ARK","atomscan.com":"ATOM","www.mintscan.io":"CTK","explorer.bitcoindiamond.org":"BCD","btgexplorer.com":"BTG","bts.ai":"BTS","explorer.celo.org":"CELO","explorer.nervos.org":"CKB","cerebro.cortexlabs.ai":"CTXC","chainz.cryptoid.info":"VIA","explorer.dcrdata.org":"DCR","digiexplorer.info":"DGB","dock.subscan.io":"DOCK","dogechain.info":"DOGE","explorer.elrond.com":"EGLD","blockscout.com":"ETC","explore-fetchhub.fetch.ai":"FET","filfox.info":"FIL","fio.bloks.io":"FIO","explorer.firo.org":"FIRO","neoscan.io":"NEO","ftmscan.com":"FTM","explorer.gochain.io":"GO","block.gxb.io":"GXS","hash-hash.info":"HBAR","www.hiveblockexplorer.com":"HIVE","explorer.helium.com":"HNT","tracker.icon.foundation":"ICX","www.iostabc.com":"IOST","explorer.iota.org":"IOTA","iotexscan.io":"IOTX","irishub.iobscan.io":"IRIS","kava.mintscan.io":"KAVA","scope.klaytn.com":"KLAY","kmdexplorer.io":"KMD","kusama.subscan.io":"KSM","explorer.lto.network":"LTO","polygonscan.com":"POLYGON","explorer.ont.io":"ONT","minaexplorer.com":"MINA","nanolooker.com":"NANO","explorer.nebulas.io":"NAS","explorer.nbs.plus":"NBS","explorer.nebl.io":"NEBL","nulscan.io":"NULS","nxscan.com":"NXS","explorer.harmony.one":"ONE","explorer.poa.network":"POA","qtum.info":"QTUM","explorer.rsk.co":"RSK","www.oasisscan.com":"ROSE","ravencoin.network":"RVN","sc.tokenview.com":"SC","secretnodes.com":"SCRT","explorer.skycoin.com":"SKY","steemscan.com":"STEEM","explorer.stacks.co":"STX","www.thetascan.io":"THETA","scan.tomochain.com":"TOMO","explore.vechain.org":"VET","explorer.vite.net":"VITE","www.wanscan.org":"WAN","wavesexplorer.com":"WAVES","wax.eosx.io":"WAXP","waltonchain.pro":"WTC","chain.nem.ninja":"XEM","verge-blockchain.info":"XVG","explorer.yoyow.org":"YOYOW","explorer.zcha.in":"ZEC","explorer.zensystem.io":"ZEN"},networksById:{"tronscan.org":"TRC20","etherscan.io":"ERC20","bscscan.com":"BSC","explorer.binance.org":"BEP2","bithomp.com":"XRP","bloks.io":"EOS","stellar.expert":"XLM","blockchair.com/bitcoin":"BTC","blockchair.com/bitcoin-cash":"BCH","blockchair.com/ecash":"XEC","explorer.litecoin.net":"LTC","explorer.avax.network":"AVAX","solscan.io":"SOL","polkadot.subscan.io":"DOT","dashboard.internetcomputer.org":"ICP","explorer.chiliz.com":"CHZ","cardanoscan.io":"ADA","mainnet.theoan.com":"AION","algoexplorer.io":"ALGO","explorer.ambrosus.com":"AMB","viewblock.io/zilliqa":"ZIL","viewblock.io/arweave":"AR","explorer.ark.io":"ARK","atomscan.com":"ATOM","www.mintscan.io":"CTK","explorer.bitcoindiamond.org":"BCD","btgexplorer.com":"BTG","bts.ai":"BTS","explorer.celo.org":"CELO","explorer.nervos.org":"CKB","cerebro.cortexlabs.ai":"CTXC","chainz.cryptoid.info":"VIA","explorer.dcrdata.org":"DCR","digiexplorer.info":"DGB","dock.subscan.io":"DOCK","dogechain.info":"DOGE","explorer.elrond.com":"EGLD","blockscout.com":"ETC","explore-fetchhub.fetch.ai":"FET","filfox.info":"FIL","fio.bloks.io":"FIO","explorer.firo.org":"FIRO","neoscan.io":"NEO","ftmscan.com":"FTM","explorer.gochain.io":"GO","block.gxb.io":"GXS","hash-hash.info":"HBAR","www.hiveblockexplorer.com":"HIVE","explorer.helium.com":"HNT","tracker.icon.foundation":"ICX","www.iostabc.com":"IOST","explorer.iota.org":"IOTA","iotexscan.io":"IOTX","irishub.iobscan.io":"IRIS","kava.mintscan.io":"KAVA","scope.klaytn.com":"KLAY","kmdexplorer.io":"KMD","kusama.subscan.io":"KSM","explorer.lto.network":"LTO","polygonscan.com":"POLYGON","explorer.ont.io":"ONT","minaexplorer.com":"MINA","nanolooker.com":"NANO","explorer.nebulas.io":"NAS","explorer.nbs.plus":"NBS","explorer.nebl.io":"NEBL","nulscan.io":"NULS","nxscan.com":"NXS","explorer.harmony.one":"ONE","explorer.poa.network":"POA","qtum.info":"QTUM","explorer.rsk.co":"RSK","www.oasisscan.com":"ROSE","ravencoin.network":"RVN","sc.tokenview.com":"SC","secretnodes.com":"SCRT","explorer.skycoin.com":"SKY","steemscan.com":"STEEM","explorer.stacks.co":"STX","www.thetascan.io":"THETA","scan.tomochain.com":"TOMO","explore.vechain.org":"VET","explorer.vite.net":"VITE","www.wanscan.org":"WAN","wavesexplorer.com":"WAVES","wax.eosx.io":"WAXP","waltonchain.pro":"WTC","chain.nem.ninja":"XEM","verge-blockchain.info":"XVG","explorer.yoyow.org":"YOYOW","explorer.zcha.in":"ZEC","explorer.zensystem.io":"ZEN"},impliedNetworks:{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"}},legalMoney:{MXN:!0,UGX:!0,SEK:!0,CHF:!0,VND:!0,AED:!0,DKK:!0,KZT:!0,HUF:!0,PEN:!0,PHP:!0,USD:!0,TRY:!0,EUR:!0,NGN:!0,PLN:!0,BRL:!0,ZAR:!0,KES:!0,ARS:!0,RUB:!0,AUD:!0,NOK:!0,CZK:!0,GBP:!0,UAH:!0,GHS:!0,HKD:!0,CAD:!0,INR:!0,JPY:!0,NZD:!0},legalMoneyCurrenciesById:{BUSD:"USD"}},exceptions:{exact:{"System is under maintenance.":r.OnMaintenance,"System abnormality":r.ExchangeError,"You are not authorized to execute this request.":r.PermissionDenied,"API key does not exist":r.AuthenticationError,"Order would trigger immediately.":r.OrderImmediatelyFillable,"Stop price would trigger immediately.":r.OrderImmediatelyFillable,"Order would immediately match and take.":r.OrderImmediatelyFillable,"Account has insufficient balance for requested action.":r.InsufficientFunds,"Rest API trading is not enabled.":r.ExchangeNotAvailable,"You don't have permission.":r.PermissionDenied,"Market is closed.":r.ExchangeNotAvailable,"Too many requests. Please try again later.":r.DDoSProtection,"This action is disabled on this account.":r.AccountSuspended,"This type of sub-account exceeds the maximum number limit":r.BadRequest,"This symbol is not permitted for this account.":r.PermissionDenied,"-1000":r.ExchangeNotAvailable,"-1001":r.ExchangeNotAvailable,"-1002":r.AuthenticationError,"-1003":r.RateLimitExceeded,"-1004":r.DDoSProtection,"-1005":r.PermissionDenied,"-1006":r.BadResponse,"-1007":r.RequestTimeout,"-1010":r.BadResponse,"-1011":r.PermissionDenied,"-1013":r.InvalidOrder,"-1014":r.InvalidOrder,"-1015":r.RateLimitExceeded,"-1016":r.ExchangeNotAvailable,"-1020":r.BadRequest,"-1021":r.InvalidNonce,"-1022":r.AuthenticationError,"-1023":r.BadRequest,"-1099":r.AuthenticationError,"-1100":r.BadRequest,"-1101":r.BadRequest,"-1102":r.BadRequest,"-1103":r.BadRequest,"-1104":r.BadRequest,"-1105":r.BadRequest,"-1106":r.BadRequest,"-1108":r.BadRequest,"-1109":r.AuthenticationError,"-1110":r.BadRequest,"-1111":r.BadRequest,"-1112":r.InvalidOrder,"-1113":r.BadRequest,"-1114":r.BadRequest,"-1115":r.BadRequest,"-1116":r.BadRequest,"-1117":r.BadRequest,"-1118":r.BadRequest,"-1119":r.BadRequest,"-1120":r.BadRequest,"-1121":r.BadSymbol,"-1125":r.AuthenticationError,"-1127":r.BadRequest,"-1128":r.BadRequest,"-1130":r.BadRequest,"-1131":r.BadRequest,"-1135":r.BadRequest,"-1136":r.BadRequest,"-2008":r.AuthenticationError,"-2010":r.ExchangeError,"-2011":r.OrderNotFound,"-2013":r.OrderNotFound,"-2014":r.AuthenticationError,"-2015":r.AuthenticationError,"-2016":r.BadRequest,"-2018":r.InsufficientFunds,"-2019":r.InsufficientFunds,"-2020":r.OrderNotFillable,"-2021":r.OrderImmediatelyFillable,"-2022":r.InvalidOrder,"-2023":r.InsufficientFunds,"-2024":r.InsufficientFunds,"-2025":r.InvalidOrder,"-2026":r.InvalidOrder,"-2027":r.InvalidOrder,"-2028":r.InsufficientFunds,"-3000":r.ExchangeError,"-3001":r.AuthenticationError,"-3002":r.BadSymbol,"-3003":r.BadRequest,"-3004":r.ExchangeError,"-3005":r.InsufficientFunds,"-3006":r.InsufficientFunds,"-3007":r.ExchangeError,"-3008":r.InsufficientFunds,"-3009":r.BadRequest,"-3010":r.BadRequest,"-3011":r.BadRequest,"-3012":r.InsufficientFunds,"-3013":r.BadRequest,"-3014":r.AccountSuspended,"-3015":r.BadRequest,"-3016":r.BadRequest,"-3017":r.ExchangeError,"-3018":r.AccountSuspended,"-3019":r.AccountSuspended,"-3020":r.InsufficientFunds,"-3021":r.BadRequest,"-3022":r.AccountSuspended,"-3023":r.BadRequest,"-3024":r.ExchangeError,"-3025":r.BadRequest,"-3026":r.BadRequest,"-3027":r.BadSymbol,"-3028":r.BadSymbol,"-3029":r.ExchangeError,"-3036":r.AccountSuspended,"-3037":r.ExchangeError,"-3038":r.BadRequest,"-3041":r.InsufficientFunds,"-3042":r.BadRequest,"-3043":r.BadRequest,"-3044":r.DDoSProtection,"-3045":r.ExchangeError,"-3999":r.ExchangeError,"-4001":r.BadRequest,"-4002":r.BadRequest,"-4003":r.BadRequest,"-4004":r.AuthenticationError,"-4005":r.RateLimitExceeded,"-4006":r.BadRequest,"-4007":r.BadRequest,"-4008":r.BadRequest,"-4010":r.BadRequest,"-4011":r.BadRequest,"-4012":r.BadRequest,"-4013":r.AuthenticationError,"-4014":r.PermissionDenied,"-4015":r.ExchangeError,"-4016":r.PermissionDenied,"-4017":r.PermissionDenied,"-4018":r.BadSymbol,"-4019":r.BadSymbol,"-4021":r.BadRequest,"-4022":r.BadRequest,"-4023":r.ExchangeError,"-4024":r.InsufficientFunds,"-4025":r.InsufficientFunds,"-4026":r.InsufficientFunds,"-4027":r.ExchangeError,"-4028":r.BadRequest,"-4029":r.BadRequest,"-4030":r.ExchangeError,"-4031":r.ExchangeError,"-4032":r.ExchangeError,"-4033":r.BadRequest,"-4034":r.ExchangeError,"-4035":r.PermissionDenied,"-4036":r.BadRequest,"-4037":r.ExchangeError,"-4038":r.ExchangeError,"-4039":r.BadRequest,"-4040":r.BadRequest,"-4041":r.ExchangeError,"-4042":r.ExchangeError,"-4043":r.BadRequest,"-4044":r.BadRequest,"-4045":r.ExchangeError,"-4046":r.AuthenticationError,"-4047":r.BadRequest,"-5001":r.BadRequest,"-5002":r.InsufficientFunds,"-5003":r.InsufficientFunds,"-5004":r.BadRequest,"-5005":r.InsufficientFunds,"-5006":r.BadRequest,"-5007":r.BadRequest,"-5008":r.InsufficientFunds,"-5009":r.BadRequest,"-5010":r.ExchangeError,"-5011":r.BadRequest,"-5012":r.ExchangeError,"-5013":r.InsufficientFunds,"-5021":r.BadRequest,"-6001":r.BadRequest,"-6003":r.BadRequest,"-6004":r.ExchangeError,"-6005":r.InvalidOrder,"-6006":r.BadRequest,"-6007":r.BadRequest,"-6008":r.BadRequest,"-6009":r.RateLimitExceeded,"-6011":r.BadRequest,"-6012":r.InsufficientFunds,"-6013":r.ExchangeError,"-6014":r.BadRequest,"-6015":r.BadRequest,"-6016":r.BadRequest,"-6017":r.BadRequest,"-6018":r.BadRequest,"-6019":r.AuthenticationError,"-6020":r.BadRequest,"-7001":r.BadRequest,"-7002":r.BadRequest,"-9000":r.InsufficientFunds,"-10017":r.BadRequest,"-11008":r.InsufficientFunds,"-12014":r.RateLimitExceeded,"-13000":r.BadRequest,"-13001":r.BadRequest,"-13002":r.BadRequest,"-13003":r.BadRequest,"-13004":r.BadRequest,"-13005":r.BadRequest,"-13006":r.InvalidOrder,"-13007":r.AuthenticationError,"-21001":r.BadRequest,"-21002":r.BadRequest,"-21003":r.BadRequest,100001003:r.AuthenticationError,200003903:r.AuthenticationError},broad:{"has no operation privilege":r.PermissionDenied,MAX_POSITION:r.InvalidOrder}}})}isInverse(e,t=undefined){return void 0===t?"delivery"===e:"inverse"===t}isLinear(e,t=undefined){return void 0===t?"future"===e||"swap"===e:"linear"===t}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e}convertExpireDate(e){return"20"+e.slice(0,2)+"-"+e.slice(2,4)+"-"+e.slice(4,6)+"T00:00:00Z"}createExpiredOptionMarket(e){const t="USDT",i=e.split("-"),s=e.split("/");let r;r=e.indexOf("/")>-1?this.safeString(s,0):this.safeString(i,0);const a=this.safeString(i,1),n=this.safeInteger(i,2),o=this.safeString(i,2),d=this.safeString(i,3),c=this.convertExpireDate(a);return{id:r+"-"+a+"-"+o+"-"+d,symbol:r+"/"+t+":"+t+"-"+a+"-"+o+"-"+d,base:r,quote:t,baseId:r,quoteId:t,active:void 0,type:"option",linear:void 0,inverse:void 0,spot:!1,swap:!1,future:!1,option:!0,margin:!1,contract:!0,contractSize:void 0,expiry:this.parse8601(c),expiryDatetime:c,optionType:"C"===d?"call":"put",strike:n,settle:t,settleId:t,precision:{amount:void 0,price:void 0},limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0}}market(e){if(void 0===this.markets)throw new r.ExchangeError(this.id+" markets not loaded");let t=this.safeString(this.options,"defaultType");const i=this.safeString(this.options,"defaultSubType"),s="future"===t,a="delivery"===t,n=s||a;if("string"==typeof e)if(e in this.markets){const t=this.markets[e];if(!n||!t.spot)return t;{const i=e+":"+(s?t.quote:t.base);if(i in this.markets)return this.markets[i]}}else{if(e in this.markets_by_id){const r=this.markets_by_id[e];s?t="linear":a?t="inverse":void 0===t&&(t=i);for(let e=0;e<r.length;e++){const i=r[e];if(i[t])return i}return r[0]}if(e.indexOf("/")>-1&&e.indexOf(":")<0){const[t,i]=e.split("/"),s=e+":"+("USD"===i?t:i);if(s in this.markets)return this.markets[s]}else if(e.indexOf("-C")>-1||e.indexOf("-P")>-1)return this.createExpiredOptionMarket(e)}throw new r.BadSymbol(this.id+" does not have market symbol "+e)}safeMarket(e=undefined,t=undefined,i=undefined,s=undefined){return void 0!==e&&(e.indexOf("-C")>-1||e.indexOf("-P")>-1)&&!(e in this.markets_by_id)?this.createExpiredOptionMarket(e):super.safeMarket(e,t,i,s)}costToPrecision(e,t){return this.decimalToPrecision(t,n.tk,this.markets[e].precision.quote,this.precisionMode,this.paddingMode)}currencyToPrecision(e,t,i=undefined){return void 0!==this.safeValue(this.currencies[e],"precision")?this.decimalToPrecision(t,n.tk,this.currencies[e].precision,this.precisionMode,this.paddingMode):this.numberToString(t)}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=this.safeString2(this.options,"fetchTime","defaultType","spot"),i=this.safeString(e,"type",t),s=this.omit(e,"type");let r;[r,e]=this.handleSubTypeAndParams("fetchTime",void 0,e);let a="publicGetTime";this.isLinear(i,r)?a="fapiPublicGetTime":this.isInverse(i,r)&&(a="dapiPublicGetTime");const n=await this[a](s);return this.safeInteger(n,"serverTime")}async fetchCurrencies(e={}){if(!this.safeValue(this.options,"fetchCurrencies"))return;if(!this.checkRequiredCredentials(!1))return;if(void 0!==this.safeString(this.urls,"apiBackup"))return;const t=await this.sapiGetCapitalConfigGetall(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"coin"),n=this.safeString(s,"name"),o=this.safeCurrencyCode(r);let d,c=!0,h=!0;const u=this.safeValue(s,"networkList",[]),l={};let p;for(let e=0;e<u.length;e++){const t=u[e],i=this.safeString(t,"network"),s=this.safeNumber(t,"withdrawFee"),r=this.safeValue(t,"depositEnable"),n=this.safeValue(t,"withdrawEnable");h=h||r,c=c||n,l[i]=s,(this.safeValue(t,"isDefault")||void 0===p)&&(p=s);const o=this.safeString(t,"withdrawIntegerMultiple");a.O.stringEq(o,"0")||(d=void 0===d?o:a.O.stringMin(d,o))}const f=this.safeValue(s,"trading"),m=c&&h&&f;let v;void 0!==d&&(v=parseInt(this.numberToString(this.precisionFromString(d)))),i[o]={id:r,name:n,code:o,precision:v,info:s,active:m,deposit:h,withdraw:c,networks:u,fee:p,fees:l,limits:this.limits}}return i}async fetchMarkets(e={}){let t=[];const i=this.safeValue(this.options,"fetchMarkets",["spot","linear","inverse"]),s=this.safeValue(this.options,"sandboxMode",!1),a=[];for(let e=0;e<i.length;e++){const t=i[e];"option"===t&&s||a.push(t)}for(let i=0;i<a.length;i++){const s=a[i];if("spot"===s)t.push(this.publicGetExchangeInfo(e));else if("linear"===s)t.push(this.fapiPublicGetExchangeInfo(e));else if("inverse"===s)t.push(this.dapiPublicGetExchangeInfo(e));else{if("option"!==s)throw new r.ExchangeError(this.id+' fetchMarkets() this.options fetchMarkets "'+s+'" is not a supported market type');t.push(this.eapiPublicGetExchangeInfo(e))}}t=await Promise.all(t);const n=this.safeValue(this.safeValue(t,0),"symbols",[]),o=this.safeValue(this.safeValue(t,1),"symbols",[]),d=this.safeValue(this.safeValue(t,2),"symbols",[]),c=this.safeValue(this.safeValue(t,3),"optionSymbols",[]);let h=n;h=this.arrayConcat(h,o),h=this.arrayConcat(h,d),h=this.arrayConcat(h,c),this.options.adjustForTimeDifference&&await this.loadTimeDifference();const u=[];for(let e=0;e<h.length;e++)u.push(this.parseMarket(h[e]));return u}parseMarket(e){let t=!1,i=!1,s=!1;const r=this.safeString(e,"underlying"),a=this.safeString(e,"symbol"),n=a.split("-"),o=this.safeString(n,0),d=this.safeStringLower(e,"symbol"),c=this.safeString(e,"baseAsset",o),h=this.safeString(e,"quoteAsset"),u=this.safeCurrencyCode(c),l=this.safeCurrencyCode(h),p=this.safeString(e,"contractType");let f="contractType"in e,m=this.safeInteger2(e,"deliveryDate","expiryDate"),v=this.safeString(e,"marginAsset");"PERPETUAL"===p||41334048e5===m?(m=void 0,t=!0):void 0!==r?(f=!0,s=!0,v=void 0===v?"USDT":v):i=!0;const g=this.safeCurrencyCode(v),y=!f,b=this.safeValue(e,"filters",[]),w=this.indexBy(b,"filterType"),S=this.safeString2(e,"status","contractStatus");let P,k,O,T=this.fees;const A=this.safeInteger(e,"strikePrice");let G=u+"/"+l;if(f){t?G=G+":"+g:i?G=G+":"+g+"-"+this.yymmdd(m):s&&(G=G+":"+g+"-"+this.yymmdd(m)+"-"+this.numberToString(A)+"-"+this.safeString(n,3)),P=this.safeNumber2(e,"contractSize","unit",this.parseNumber("1")),k=g===l,O=g===u;const r=k?"linear":"inverse";T=this.safeValue(this.fees,r,{})}let I="TRADING"===S;if(y){const t=this.safeValue(e,"permissions",[]);for(let e=0;e<t.length;e++)if("TRD_GRP_003"===t[e]){I=!1;break}}const C=this.safeValue(e,"isMarginTradingAllowed",!1);let M;y?M="spot":t?M="swap":i?M="future":s&&(M="option",I=void 0);const x={id:a,lowercaseId:d,symbol:G,base:u,quote:l,settle:g,baseId:c,quoteId:h,settleId:v,type:M,spot:y,margin:y&&C,swap:t,future:i,option:s,active:I,contract:f,linear:k,inverse:O,taker:T.trading.taker,maker:T.trading.maker,contractSize:P,expiry:m,expiryDatetime:this.iso8601(m),strike:A,optionType:this.safeStringLower(e,"side"),precision:{amount:this.safeInteger2(e,"quantityPrecision","quantityScale"),price:this.safeInteger2(e,"pricePrecision","priceScale"),base:this.safeInteger(e,"baseAssetPrecision"),quote:this.safeInteger(e,"quotePrecision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:e};if("PRICE_FILTER"in w){const e=this.safeValue(w,"PRICE_FILTER",{});x.limits.price={min:this.safeNumber(e,"minPrice"),max:this.safeNumber(e,"maxPrice")},x.precision.price=this.precisionFromString(e.tickSize)}if("LOT_SIZE"in w){const e=this.safeValue(w,"LOT_SIZE",{}),t=this.safeString(e,"stepSize");x.precision.amount=this.precisionFromString(t),x.limits.amount={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MARKET_LOT_SIZE"in w){const e=this.safeValue(w,"MARKET_LOT_SIZE",{});x.limits.market={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MIN_NOTIONAL"in w){const e=this.safeValue(w,"MIN_NOTIONAL",{});x.limits.cost.min=this.safeNumber2(e,"minNotional","notional")}return x}parseBalanceHelper(e){const t=this.account();t.used=this.safeString(e,"locked"),t.free=this.safeString(e,"free");const i=this.safeString(e,"interest"),s=this.safeString(e,"borrowed");return t.debt=a.O.stringAdd(s,i),t}parseBalance(e,t=undefined,i=undefined){const s={info:e};let r;const n="isolated"===i,o="margin"===t||"cross"===i;if(n||"spot"!==t&&!o)if(n){const t=this.safeValue(e,"assets");for(let e=0;e<t.length;e++){const i=t[e],r=this.safeValue(i,"symbol"),a=this.safeSymbol(r,void 0,void 0,"spot"),n=this.safeValue(i,"baseAsset",{}),o=this.safeValue(i,"quoteAsset",{}),d=this.safeCurrencyCode(this.safeString(n,"asset")),c=this.safeCurrencyCode(this.safeString(o,"asset")),h={};h[d]=this.parseBalanceHelper(n),h[c]=this.parseBalanceHelper(o),s[a]=this.safeBalance(h)}}else if("savings"===t){const t=this.safeValue(e,"positionAmountVos",[]);for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account(),o=this.safeString(i,"amount");n.total=o,n.used=o,s[a]=n}}else if("funding"===t)for(let t=0;t<e.length;t++){const i=e[t],r=this.account(),n=this.safeString(i,"asset"),o=this.safeCurrencyCode(n);r.free=this.safeString(i,"free");const d=this.safeString(i,"freeze"),c=this.safeString(i,"withdrawing"),h=this.safeString(i,"locked");r.used=a.O.stringAdd(d,a.O.stringAdd(h,c)),s[o]=r}else{let t=e;Array.isArray(e)||(t=this.safeValue(e,"assets",[]));for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"availableBalance"),n.used=this.safeString(i,"initialMargin"),n.total=this.safeString2(i,"marginBalance","balance"),s[a]=n}}else{r=this.safeInteger(e,"updateTime");const t=this.safeValue2(e,"balances","userAssets",[]);for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),n=this.safeCurrencyCode(r),d=this.account();if(d.free=this.safeString(i,"free"),d.used=this.safeString(i,"locked"),o){const e=this.safeString(i,"borrowed"),t=this.safeString(i,"interest");d.debt=a.O.stringAdd(e,t)}s[n]=d}}return s.timestamp=r,s.datetime=this.iso8601(r),n?s:this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString2(this.options,"fetchBalance","defaultType","spot");let i,s=this.safeString(e,"type",t);[i,e]=this.handleSubTypeAndParams("fetchBalance",void 0,e);const[r,a]=this.handleMarginModeAndParams("fetchBalance",e);let n="privateGetAccount";const o={};if(this.isLinear(s,i)){const e=this.safeValue(this.options,s,{}),t=this.safeValue(e,"fetchBalance",{});n=this.safeString(t,"method","fapiPrivateV2GetAccount"),s="linear"}else if(this.isInverse(s,i)){const e=this.safeValue(this.options,s,{}),t=this.safeValue(e,"fetchBalance",{});n=this.safeString(t,"method","dapiPrivateGetAccount"),s="inverse"}else if("isolated"===r){n="sapiGetMarginIsolatedAccount";const t=this.safeValue(e,"symbols");if(void 0!==t){let e="";if(Array.isArray(t)){e=this.marketId(t[0]);for(let i=1;i<t.length;i++){const s=t[i];e+=","+this.marketId(s)}}else e=t;o.symbols=e}}else"margin"===s||"cross"===r?n="sapiGetMarginAccount":"savings"===s?n="sapiGetLendingUnionAccount":"funding"===s&&(n="sapiPostAssetGetFundingAsset");const d=this.omit(a,["type","symbols"]),c=await this[n](this.extend(o,d));return this.parseBalance(c,s,r)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit=t);let a="publicGetDepth";s.option?a="eapiPublicGetDepth":s.linear?a="fapiPublicGetDepth":s.inverse&&(a="dapiPublicGetDepth");const n=await this[a](this.extend(r,i)),o=this.safeInteger(n,"T"),d=this.parseOrderBook(n,e,o);return d.nonce=this.safeInteger2(n,"lastUpdateId","u"),d}parseTicker(e,t=undefined){const i=this.safeInteger(e,"closeTime");let s;"time"in e&&(s="contract"),void 0===s&&(s="bidQty"in e?"spot":"contract");const r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t,void 0,s),n=this.safeString(e,"lastPrice");let o,d;return"baseVolume"in e?(o=this.safeString(e,"baseVolume"),d=this.safeString(e,"volume")):(o=this.safeString(e,"volume"),d=this.safeString(e,"quoteVolume")),this.safeTicker({symbol:a,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString(e,"bidPrice"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString(e,"askPrice"),askVolume:this.safeString(e,"askQty"),vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"openPrice"),close:n,last:n,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercent"),average:void 0,baseVolume:o,quoteVolume:d,info:e},t)}async fetchStatus(e={}){const t=await this.sapiGetSystemStatus(e),i=this.safeString(t,"status");return{status:this.safeString({0:"ok",1:"maintenance"},i,i),updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id};let r="publicGetTicker24hr";i.linear?r="fapiPublicGetTicker24hr":i.inverse&&(r="dapiPublicGetTicker24hr");const a=await this[r](this.extend(s,t));if(Array.isArray(a)){const e=this.safeValue(a,0,{});return this.parseTicker(e,i)}return this.parseTicker(a,i)}async fetchBidsAsks(e=undefined,t={}){let i,s,r,a;if(await this.loadMarkets(),void 0!==(e=this.marketSymbols(e))){const t=this.safeString(e,0);i=this.market(t)}[r,t]=this.handleSubTypeAndParams("fetchBidsAsks",i,t),[s,t]=this.handleMarketTypeAndParams("fetchBidsAsks",i,t),a=this.isLinear(s,r)?"fapiPublicGetTickerBookTicker":this.isInverse(s,r)?"dapiPublicGetTickerBookTicker":"publicGetTickerBookTicker";const n=await this[a](t);return this.parseTickers(n,e)}async fetchLastPrices(e=undefined,t={}){await this.loadMarkets();const i=this.getMarketFromSymbols(e),[s,a]=this.handleMarketTypeAndParams("fetchLastPrices",i,t);let n;if("future"===s)n="fapiPublicGetTickerPrice";else if("delivery"===s)n="dapiPublicGetTickerPrice";else{if("spot"!==s)throw new r.NotSupported(this.id+" fetchLastPrices() does not support "+s+" markets yet");n="publicGetTickerPrice"}const o=await this[n](a);return this.parseLastPrices(o,e)}parseLastPrice(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeString(this.options,"defaultType","spot");t=this.safeMarket(i,t,void 0,s);const r=this.safeInteger(e,"time"),a=this.safeNumber(e,"price");return{symbol:t.symbol,timestamp:r,datetime:this.iso8601(r),price:a,side:void 0,baseVolume:void 0,quoteVolume:void 0,info:e}}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=this.safeString2(this.options,"fetchTickers","defaultType","spot"),s=this.safeString(t,"type",i);let r;[r,t]=this.handleSubTypeAndParams("fetchTickers",void 0,t);const a=this.omit(t,"type");let n;n=this.isLinear(s,r)?"fapiPublicGetTicker24hr":this.isInverse(s,r)?"dapiPublicGetTicker24hr":"publicGetTicker24hr";const o=this.safeString(this.options,"fetchTickersMethod",n),d=await this[o](a);return this.parseTickers(d,e)}parseOHLCV(e,t=undefined){const i=t.inverse?7:5;return[this.safeInteger2(e,0,"closeTime"),this.safeNumber2(e,1,"open"),this.safeNumber2(e,2,"high"),this.safeNumber2(e,3,"low"),this.safeNumber2(e,4,"close"),this.safeNumber2(e,i,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(r,"price"),o=this.safeInteger(r,"until");r=this.omit(r,["price","until"]),s=void 0===s?500:Math.min(s,1500);const d={interval:this.safeString(this.timeframes,t,t),limit:s};if("index"===n?d.pair=a.id:d.symbol=a.id,void 0!==i&&(d.startTime=i,a.inverse&&i>0)){const e=this.parseTimeframe(t),r=this.sum(i,s*e*1e3-1),a=this.milliseconds();d.endTime=Math.min(a,r)}void 0!==o&&(d.endTime=o);let c="publicGetKlines";a.option?c="eapiPublicGetKlines":"mark"===n?c=a.inverse?"dapiPublicGetMarkPriceKlines":"fapiPublicGetMarkPriceKlines":"index"===n?c=a.inverse?"dapiPublicGetIndexPriceKlines":"fapiPublicGetIndexPriceKlines":a.linear?c="fapiPublicGetKlines":a.inverse&&(c="dapiPublicGetKlines");const h=await this[c](this.extend(d,r));return this.parseOHLCVs(h,a,t,i,s)}parseTrade(e,t=undefined){if("isDustTrade"in e)return this.parseDustTrade(e,t);const i=this.safeInteger2(e,"T","time"),s=this.safeString2(e,"p","price");let r=this.safeString2(e,"q","qty");r=this.safeString(e,"quantity",r);const n=this.safeString2(e,"quoteQty","baseQty"),o=this.safeString(e,"symbol"),d="isIsolated"in e||"M"in e||"orderListId"in e?"spot":"contract",c=(t=this.safeMarket(o,t,void 0,d)).symbol;let h,u=this.safeString2(e,"t","a");u=this.safeString2(e,"tradeId","id",u);const l=this.safeString(e,"orderId"),p=this.safeValue2(e,"m","isBuyerMaker");let f,m;if(void 0!==p?h=p?"sell":"buy":"side"in e?h=this.safeStringLower(e,"side"):"isBuyer"in e&&(h=e.isBuyer?"buy":"sell"),"commission"in e&&(m={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAsset"))}),"isMaker"in e&&(f=e.isMaker?"maker":"taker"),"maker"in e&&(f=e.maker?"maker":"taker"),"optionSide"in e||t.option){const t=this.safeCurrencyCode(this.safeString(e,"quoteAsset","USDT"));f=this.safeStringLower(e,"liquidity"),"fee"in e&&(m={cost:this.safeString(e,"fee"),currency:t}),"buy"!==h&&"sell"!==h&&(h="1"===h?"buy":"sell"),"optionSide"in e&&"buy"!==h&&(r=a.O.stringMul("-1",r))}return this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:c,id:u,order:l,type:this.safeStringLower(e,"type"),side:h,takerOrMaker:f,price:s,amount:r,cost:n,fee:m},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};let n=this.safeString(this.options,"fetchTradesMethod");void 0===n&&(n=r.option?"eapiPublicGetTrades":r.linear?"fapiPublicGetAggTrades":r.inverse?"dapiPublicGetAggTrades":"publicGetAggTrades"),r.option||void 0!==t&&(a.startTime=t,a.endTime=this.sum(t,36e5)),void 0!==i&&(a.limit=i);const o=await this[n](this.extend(a,s));return this.parseTrades(o,r,t,i)}async editOrder(e,t,i,s,o,d=undefined,c={}){await this.loadMarkets();const h=this.market(t);if(!h.spot)throw new r.NotSupported(this.id+" editOrder() does not support "+h.type+" orders, only spot orders are accepted");const u={symbol:h.id,side:s.toUpperCase(),cancelReplaceMode:"STOP_ON_FAILURE"};void 0===this.safeString2(c,"cancelNewClientOrderId","cancelOrigClientOrderId")&&(u.cancelOrderId=e);const l=this.safeString2(c,"newClientOrderId","clientOrderId"),p=i.toUpperCase();let f=p;this.isPostOnly("MARKET"===p,"LIMIT_MAKER"===p,c)&&(f="LIMIT_MAKER"),u.type=f;const m=this.safeNumber(c,"stopPrice");void 0!==m&&("MARKET"===f?f="STOP_LOSS":"LIMIT"===f&&(f="STOP_LOSS_LIMIT"));const v=this.safeValue(h.info,"orderTypes");if(!this.inArray(f,v))throw p!==f?new r.InvalidOrder(this.id+" stopPrice parameter is not allowed for "+t+" "+i+" orders"):new r.InvalidOrder(this.id+" "+i+" is not a valid order type for the "+t+" market");if(void 0===l){const e=this.safeValue(this.options,"broker");if(void 0!==e){const t=this.safeString(e,"spot");void 0!==t&&(u.newClientOrderId=t+this.uuid22())}}else u.newClientOrderId=l;u.newOrderRespType=this.safeValue(this.options.newOrderRespType,i,"RESULT");let g=!1,y=!1,b=!1,w=!1;if("MARKET"===f)if(this.safeValue(this.options,"quoteOrderQty",!0)){const e=this.safeValue2(c,"quoteOrderQty","cost"),t=h.precision.price;if(void 0!==e)u.quoteOrderQty=this.decimalToPrecision(e,n.tk,t,this.precisionMode);else if(void 0!==d){const e=this.numberToString(o),i=this.numberToString(d),s=a.O.stringMul(e,i);u.quoteOrderQty=this.decimalToPrecision(s,n.tk,t,this.precisionMode)}else w=!0}else w=!0;else"LIMIT"===f?(y=!0,g=!0,w=!0):"STOP_LOSS"===f||"TAKE_PROFIT"===f?(b=!0,w=!0):"STOP_LOSS_LIMIT"===f||"TAKE_PROFIT_LIMIT"===f?(w=!0,b=!0,y=!0,g=!0):"LIMIT_MAKER"===f&&(y=!0,w=!0);if(w&&(u.quantity=this.amountToPrecision(t,o)),y){if(void 0===d)throw new r.InvalidOrder(this.id+" editOrder() requires a price argument for a "+i+" order");u.price=this.priceToPrecision(t,d)}if(g&&(u.timeInForce=this.options.defaultTimeInForce),b){if(void 0===m)throw new r.InvalidOrder(this.id+" editOrder() requires a stopPrice extra param for a "+i+" order");u.stopPrice=this.priceToPrecision(t,m)}"PO"===this.safeString(c,"timeInForce")&&(c=this.omit(c,["timeInForce"]));const S=this.omit(c,["quoteOrderQty","cost","stopPrice","newClientOrderId","clientOrderId","postOnly"]),P=await this.privatePostOrderCancelReplace(this.extend(u,S)),k=this.safeValue(P,"newOrderResponse");return this.parseOrder(k,h)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",ACCEPTED:"open",FILLED:"closed",CANCELED:"canceled",CANCELLED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired",EXPIRED_IN_MATCH:"expired"},e,e)}parseOrder(e,t=undefined){const i=this.parseOrderStatus(this.safeString(e,"status")),s=this.safeString(e,"symbol"),r="closePosition"in e?"contract":"spot",n=this.safeSymbol(s,t,void 0,r),o=this.safeString(e,"executedQty","0");let d,c;"time"in e?d=this.safeInteger(e,"time"):"workingTime"in e?(c=this.safeInteger(e,"transactTime"),d=this.safeInteger(e,"workingTime")):"transactTime"in e?(c=this.safeInteger(e,"transactTime"),d=this.safeInteger(e,"transactTime")):"createTime"in e?(c=this.safeInteger(e,"updateTime"),d=this.safeInteger(e,"createTime")):"updateTime"in e&&"open"===i&&(a.O.stringGt(o,"0")?c=this.safeInteger(e,"updateTime"):d=this.safeInteger(e,"updateTime"));const h=this.safeString(e,"avgPrice"),u=this.safeString(e,"price"),l=this.safeString2(e,"origQty","quantity");let p=this.safeString2(e,"cummulativeQuoteQty","cumQuote");p=this.safeString(e,"cumBase",p);const f=this.safeString(e,"orderId");let m=this.safeStringLower(e,"type");const v=this.safeStringLower(e,"side"),g=this.safeValue(e,"fills",[]),y=this.safeString(e,"clientOrderId");let b=this.safeString(e,"timeInForce");"GTX"===b&&(b="PO");const w="limit_maker"===m||"PO"===b;"limit_maker"===m&&(m="limit");const S=this.safeString(e,"stopPrice"),P=this.parseNumber(this.omitZero(S));return this.safeOrder({info:e,id:f,clientOrderId:y,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:c,symbol:n,type:m,timeInForce:b,postOnly:w,reduceOnly:this.safeValue(e,"reduceOnly"),side:v,price:u,triggerPrice:P,amount:l,cost:p,average:h,filled:o,remaining:void 0,status:i,fee:{currency:this.safeString(e,"quoteAsset"),cost:this.safeNumber(e,"fee"),rate:void 0},trades:g},t)}async createOrder(e,t,i,s,o=undefined,d={}){await this.loadMarkets();const c=this.market(e),h=this.safeString(d,"type",c.type),u=this.safeString2(d,"newClientOrderId","clientOrderId"),l=t.toUpperCase(),p="MARKET"===l,f="LIMIT"===l,m=this.isPostOnly(p,"LIMIT_MAKER"===l,d),v=this.safeValue2(d,"triggerPrice","stopPrice"),g=this.safeValue(d,"stopLossPrice",v),y=this.safeValue(d,"takeProfitPrice"),b=void 0!==g,w=void 0!==y;d=this.omit(d,["type","newClientOrderId","clientOrderId","postOnly","stopLossPrice","takeProfitPrice","stopPrice","triggerPrice"]);const[S,P]=this.handleMarginModeAndParams("createOrder",d),k={symbol:c.id,side:i.toUpperCase()};let O="privatePostOrder";c.linear?O="fapiPrivatePostOrder":c.inverse?O="dapiPrivatePostOrder":"margin"!==h&&void 0===S||(O="sapiPostMarginOrder",this.safeValue(d,"reduceOnly")&&(k.sideEffectType="AUTO_REPAY",d=this.omit(d,"reduceOnly"))),(c.spot||"margin"===h)&&(this.safeValue(P,"test",!1)&&(O+="Test"),m&&(t="LIMIT_MAKER"));let T,A=t.toUpperCase();if(b?(T=g,p?A=c.contract?"STOP_MARKET":"STOP_LOSS":f&&(A=c.contract?"STOP":"STOP_LOSS_LIMIT")):w&&(T=y,p?A=c.contract?"TAKE_PROFIT_MARKET":"TAKE_PROFIT":f&&(A=c.contract?"TAKE_PROFIT":"TAKE_PROFIT_LIMIT")),"isolated"===S&&(k.isIsolated=!0),void 0===u){const e=this.safeValue(this.options,"broker");if(void 0!==e){const t=this.safeString(e,h);void 0!==t&&(k.newClientOrderId=t+this.uuid22())}}else k.newClientOrderId=u;if(k.newOrderRespType="spot"===h||"margin"===h?this.safeValue(this.options.newOrderRespType,t,"RESULT"):"RESULT",c.option){if("market"===t)throw new r.InvalidOrder(this.id+" "+t+" is not a valid order type for the "+e+" market");O="eapiPrivatePostOrder"}else{const i=this.safeValue(c.info,"orderTypes");if(!this.inArray(A,i))throw l!==A?new r.InvalidOrder(this.id+" stopPrice parameter is not allowed for "+e+" "+t+" orders"):new r.InvalidOrder(this.id+" "+t+" is not a valid order type for the "+e+" market")}k.type=A;let G=!1,I=!1,C=!1,M=!1;if("MARKET"===A)if(c.spot)if(this.safeValue(this.options,"quoteOrderQty",!0)){const e=this.safeValue2(P,"quoteOrderQty","cost"),t=c.precision.price;if(void 0!==e)k.quoteOrderQty=this.decimalToPrecision(e,n.tk,t,this.precisionMode);else if(void 0!==o){const e=this.numberToString(s),i=this.numberToString(o),r=a.O.stringMul(e,i);k.quoteOrderQty=this.decimalToPrecision(r,n.tk,t,this.precisionMode)}else M=!0}else M=!0;else M=!0;else if("LIMIT"===A)I=!0,G=!0,M=!0;else if("STOP_LOSS"===A||"TAKE_PROFIT"===A)C=!0,M=!0,(c.linear||c.inverse)&&(I=!0);else if("STOP_LOSS_LIMIT"===A||"TAKE_PROFIT_LIMIT"===A)M=!0,C=!0,I=!0,G=!0;else if("LIMIT_MAKER"===A)I=!0,M=!0;else if("STOP"===A)M=!0,C=!0,I=!0;else if("STOP_MARKET"===A||"TAKE_PROFIT_MARKET"===A)void 0===this.safeValue(P,"closePosition")&&(M=!0),C=!0;else if("TRAILING_STOP_MARKET"===A&&(M=!0,void 0===this.safeNumber(P,"callbackRate")))throw new r.InvalidOrder(this.id+" createOrder() requires a callbackRate extra param for a "+t+" order");if(M&&(k.quantity=this.amountToPrecision(e,s)),I){if(void 0===o)throw new r.InvalidOrder(this.id+" createOrder() requires a price argument for a "+t+" order");k.price=this.priceToPrecision(e,o)}if(G&&(k.timeInForce=this.options.defaultTimeInForce),c.contract&&m&&(k.timeInForce="GTX"),C){if(c.contract){if(void 0===T)throw new r.InvalidOrder(this.id+" createOrder() requires a stopPrice extra param for a "+t+" order")}else if(void 0===this.safeValue(d,"trailingDelta")&&void 0===T)throw new r.InvalidOrder(this.id+" createOrder() requires a stopPrice or trailingDelta param for a "+t+" order");void 0!==T&&(k.stopPrice=this.priceToPrecision(e,T))}"PO"===this.safeString(d,"timeInForce")&&(d=this.omit(d,["timeInForce"]));const x=this.omit(d,["quoteOrderQty","cost","stopPrice","test","type","newClientOrderId","clientOrderId","postOnly"]),V=await this[O](this.extend(k,x));return this.parseOrder(V,c)}async fetchOrder(e,t=undefined,i={}){this.checkRequiredSymbol("fetchOrder",t),await this.loadMarkets();const s=this.market(t),r=this.safeString2(this.options,"fetchOrder","defaultType","spot"),a=this.safeString(i,"type",r),[n,o]=this.handleMarginModeAndParams("fetchOrder",i),d={symbol:s.id};let c="privateGetOrder";s.option?c="eapiPrivateGetOrder":s.linear?c="fapiPrivateGetOrder":s.inverse?c="dapiPrivateGetOrder":"margin"!==a&&void 0===n||(c="sapiGetMarginOrder","isolated"===n&&(d.isIsolated=!0));const h=this.safeValue2(i,"origClientOrderId","clientOrderId");void 0!==h?s.option?d.clientOrderId=h:d.origClientOrderId=h:d.orderId=e;const u=this.omit(o,["type","clientOrderId","origClientOrderId"]),l=await this[c](this.extend(d,u));return this.parseOrder(l,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){this.checkRequiredSymbol("fetchOrders",e),await this.loadMarkets();const r=this.market(e),a=this.safeString2(this.options,"fetchOrders","defaultType","spot"),n=this.safeString(s,"type",a),[o,d]=this.handleMarginModeAndParams("fetchOrders",s),c={symbol:r.id};let h="privateGetAllOrders";r.option?h="eapiPrivateGetHistoryOrders":r.linear?h="fapiPrivateGetAllOrders":r.inverse?h="dapiPrivateGetAllOrders":"margin"!==n&&void 0===o||(h="sapiGetMarginAllOrders","isolated"===o&&(c.isIsolated=!0)),void 0!==t&&(c.startTime=t),void 0!==i&&(c.limit=i);const u=await this[h](this.extend(c,d));return this.parseOrders(u,r,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let a,n;await this.loadMarkets();const o={};let d,c,h;if([d,c]=this.handleMarginModeAndParams("fetchOpenOrders",s),void 0!==e){a=this.market(e),o.symbol=a.id;const t=this.safeString2(this.options,"fetchOpenOrders","defaultType","spot"),i="type"in a?a.type:t;n=this.safeString(c,"type",i)}else{if(this.options.warnOnFetchOpenOrdersWithoutSymbol){const e=this.symbols.length,t=this.parseToInt(e/2);throw new r.ExchangeError(this.id+" fetchOpenOrders() WARNING: fetching open orders without specifying a symbol is rate-limited to one call per "+t.toString()+" seconds. Do not call this method frequently to avoid ban. Set "+this.id+'.options["warnOnFetchOpenOrdersWithoutSymbol"] = false to suppress this warning message.')}{const e=this.safeString2(this.options,"fetchOpenOrders","defaultType","spot");n=this.safeString(c,"type",e)}}[h,c]=this.handleSubTypeAndParams("fetchOpenOrders",a,c);const u=this.omit(c,"type");let l="privateGetOpenOrders";if("option"===n)l="eapiPrivateGetOpenOrders",void 0!==t&&(o.startTime=t),void 0!==i&&(o.limit=i);else if(this.isLinear(n,h))l="fapiPrivateGetOpenOrders";else if(this.isInverse(n,h))l="dapiPrivateGetOpenOrders";else if(("margin"===n||void 0!==d)&&(l="sapiGetMarginOpenOrders","isolated"===d&&(o.isIsolated=!0,void 0===e)))throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument for isolated markets");const p=await this[l](this.extend(o,u));return this.parseOrders(p,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){const r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}async cancelOrder(e,t=undefined,i={}){this.checkRequiredSymbol("cancelOrder",t),await this.loadMarkets();const s=this.market(t),r=this.safeString2(this.options,"cancelOrder","defaultType","spot"),a=this.safeString(i,"type",r),[n,o]=this.handleMarginModeAndParams("cancelOrder",i),d={symbol:s.id},c=this.safeValue2(i,"origClientOrderId","clientOrderId");void 0!==c?s.option?d.clientOrderId=c:d.origClientOrderId=c:d.orderId=e;let h="privateDeleteOrder";s.option?h="eapiPrivateDeleteOrder":s.linear?h="fapiPrivateDeleteOrder":s.inverse?h="dapiPrivateDeleteOrder":"margin"!==a&&void 0===n||(h="sapiDeleteMarginOrder","isolated"===n&&(d.isIsolated=!0));const u=this.omit(o,["type","origClientOrderId","clientOrderId"]),l=await this[h](this.extend(d,u));return this.parseOrder(l,s)}async cancelAllOrders(e=undefined,t={}){this.checkRequiredSymbol("cancelAllOrders",e),await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=this.safeString(t,"type",i.type);t=this.omit(t,["type"]);const[a,n]=this.handleMarginModeAndParams("cancelAllOrders",t);let o="privateDeleteOpenOrders";i.option?o="eapiPrivateDeleteAllOpenOrders":i.linear?o="fapiPrivateDeleteAllOpenOrders":i.inverse?o="dapiPrivateDeleteAllOpenOrders":"margin"!==r&&void 0===a||(o="sapiDeleteMarginOpenOrders","isolated"===a&&(s.isIsolated=!0));const d=await this[o](this.extend(s,n));return Array.isArray(d)?this.parseOrders(d,i):d}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,a={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrderTrades() requires a symbol argument");await this.loadMarkets();const n=this.market(t),o=this.safeString(a,"type",n.type);if(a=this.omit(a,"type"),"spot"!==o)throw new r.NotSupported(this.id+" fetchOrderTrades() supports spot markets only");const d={orderId:e};return await this.fetchMyTrades(t,i,s,this.extend(d,a))}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n,o,d;void 0!==e&&(a=this.market(e),r.symbol=a.id),[n,s]=this.handleMarketTypeAndParams("fetchMyTrades",a,s),"option"===n?o="eapiPrivateGetUserTrades":(this.checkRequiredSymbol("fetchMyTrades",e),[d,s]=this.handleMarginModeAndParams("fetchMyTrades",s),"spot"===n||"margin"===n?(o="privateGetMyTrades","margin"!==n&&void 0===d||(o="sapiGetMarginMyTrades","isolated"===d&&(r.isIsolated=!0))):a.linear?o="fapiPrivateGetUserTrades":a.inverse&&(o="dapiPrivateGetUserTrades"));let c=this.safeInteger2(s,"until","endTime");if(void 0!==t){const e=parseInt(t);r.startTime=e;const i=this.milliseconds(),s=6048e5;i-e>=s&&void 0===c&&a.linear&&(c=this.sum(e,s),c=Math.min(c,i))}void 0!==c&&(r.endTime=c,s=this.omit(s,["endTime","until"])),void 0!==i&&(("option"===n||a.contract)&&(i=Math.min(i,1e3)),r.limit=i);const h=await this[o](this.extend(r,s));return this.parseTrades(h,a,t,i)}async fetchMyDustTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==t&&(r.startTime=t,r.endTime=this.sum(t,7776e6));const a=await this.sapiGetAssetDribblet(this.extend(r,s)),n=this.safeValue(a,"userAssetDribblets",[]),o=this.safeInteger(a,"total",0),d=[];for(let e=0;e<o;e++){const t=this.safeValue(n[e],"userAssetDribbletDetails",[]);for(let e=0;e<t.length;e++)t[e].isDustTrade=!0,d.push(t[e])}const c=this.parseTrades(d,void 0,t,i);return this.filterBySinceLimit(c,t,i)}parseDustTrade(e,t=undefined){const i=this.safeString(e,"transId"),s=this.safeInteger(e,"operateTime"),r=this.safeString(e,"fromAsset"),n=this.safeCurrencyCode(r),o=this.currency("BNB").code,d=o+"/"+n;let c=!1;d in this.markets&&(c=!0);const h=this.safeString(e,"serviceChargeAmount"),u={currency:o,cost:this.parseNumber(h)};let l,p,f,m,v;c?(l=d,p=this.safeString(e,"transferedAmount"),f=this.safeString(e,"amount"),m="buy"):(l=n+"/"+o,p=this.safeString(e,"amount"),f=this.safeString(e,"transferedAmount"),m="sell"),void 0!==f&&p&&(v=a.O.stringDiv(f,p));const g=this.parseNumber(p),y=this.parseNumber(v),b=this.parseNumber(f);return{id:void 0,timestamp:s,datetime:this.iso8601(s),symbol:l,order:i,type:void 0,takerOrMaker:void 0,side:m,amount:g,price:y,cost:b,fee:u,info:e}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r,a;await this.loadMarkets();const n={},o=this.safeValue(this.options,"legalMoney",{}),d=this.safeValue(s,"fiat",!1);s=this.omit(s,"fiatOnly");const c=this.safeInteger(s,"until");if(d||e in o){void 0!==e&&(r=this.currency(e)),n.transactionType=0,void 0!==t&&(n.beginTime=t),void 0!==c&&(n.endTime=c);const i=await this.sapiGetFiatOrders(this.extend(n,s));a=this.safeValue(i,"data")}else{if(void 0!==e&&(r=this.currency(e),n.coin=r.id),void 0!==t){n.startTime=t;let e=this.sum(t,7776e6);void 0!==c&&(e=Math.min(e,c)),n.endTime=e}void 0!==i&&(n.limit=i),a=await this.sapiGetCapitalDepositHisrec(this.extend(n,s))}for(let e=0;e<a.length;e++)a[e].type="deposit";return this.parseTransactions(a,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.safeValue(this.options,"legalMoney",{}),a=this.safeValue(s,"fiat",!1);s=this.omit(s,"fiatOnly");const n={};let o,d;if(a||e in r){void 0!==e&&(d=this.currency(e)),n.transactionType=1,void 0!==t&&(n.beginTime=t);const i=await this.sapiGetFiatOrders(this.extend(n,s));o=this.safeValue(i,"data")}else void 0!==e&&(d=this.currency(e),n.coin=d.id),void 0!==t&&(n.startTime=t,n.endTime=this.sum(t,7776e6)),void 0!==i&&(n.limit=i),o=await this.sapiGetCapitalWithdrawHistory(this.extend(n,s));for(let e=0;e<o.length;e++)o[e].type="withdrawal";return this.parseTransactions(o,d,t,i)}parseTransactionStatusByType(e,t=undefined){const i=this.safeValue({deposit:{0:"pending",1:"ok",6:"ok",Processing:"pending",Failed:"failed",Successful:"ok",Refunding:"canceled",Refunded:"canceled","Refund Failed":"failed"},withdrawal:{0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",6:"ok",Processing:"pending",Failed:"failed",Successful:"ok",Refunding:"canceled",Refunded:"canceled","Refund Failed":"failed"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t=undefined){const i=this.safeString2(e,"id","orderNo"),s=this.safeString(e,"address");let r=this.safeString(e,"addressTag");void 0!==r&&r.length<1&&(r=void 0);let a=this.safeString(e,"txId");void 0!==a&&a.indexOf("Internal transfer ")>=0&&(a=a.slice(18));const n=this.safeString2(e,"coin","fiatCurrency");let o,d=this.safeCurrencyCode(n,t);o=this.safeInteger2(e,"insertTime","createTime"),void 0===o&&(o=this.parse8601(this.safeString(e,"applyTime")));const c=this.safeInteger2(e,"successTime","updateTime");let h=this.safeString(e,"type");if(void 0===h){const t=this.safeString(e,"transactionType");void 0!==t&&(h="0"===t?"deposit":"withdrawal");const i=this.safeValue(this.options,"legalMoneyCurrenciesById");d=this.safeString(i,d,d)}const u=this.parseTransactionStatusByType(this.safeString(e,"status"),h),l=this.safeNumber(e,"amount"),p=this.safeNumber2(e,"transactionFee","totalFee");let f;void 0!==p&&(f={currency:d,cost:p});let m=this.safeInteger(e,"transferType");void 0!==m&&(m=!!m);const v=this.safeString(e,"network");return{info:e,id:i,txid:a,timestamp:o,datetime:this.iso8601(o),network:v,address:s,addressTo:s,addressFrom:void 0,tag:r,tagTo:r,tagFrom:void 0,type:h,amount:l,currency:d,status:u,updated:c,internal:m,fee:f}}parseTransferStatus(e){return this.safeString({CONFIRMED:"ok"},e,e)}parseTransfer(e,t=undefined){const i=this.safeString(e,"tranId"),s=this.safeString(e,"asset"),r=this.safeCurrencyCode(s,t),a=this.safeNumber(e,"amount"),n=this.safeString(e,"type");let o,d;const c=this.safeValue(this.options,"accountsById",{});if(void 0!==n){const e=n.split("_");o=this.safeValue(e,0),d=this.safeValue(e,1),o=this.safeString(c,o,o),d=this.safeString(c,d,d)}const h=this.safeInteger(e,"timestamp"),u=this.parseTransferStatus(this.safeString(e,"status"));return{info:e,id:i,timestamp:h,datetime:this.iso8601(h),currency:r,amount:a,fromAccount:o,toAccount:d,status:u}}parseIncome(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,void 0,"swap"),r=this.safeNumber(e,"income"),a=this.safeString(e,"asset"),n=this.safeCurrencyCode(a),o=this.safeString(e,"tranId"),d=this.safeInteger(e,"time");return{info:e,symbol:s,code:n,timestamp:d,datetime:this.iso8601(d),id:o,amount:r}}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.currency(e),o={asset:n.id,amount:this.currencyToPrecision(e,t)};o.type=this.safeString(a,"type");let d="sapiPostAssetTransfer";if(void 0===o.type){const e=this.safeString(a,"symbol");void 0!==e&&(a=this.omit(a,"symbol"));let t=this.convertTypeToAccount(i).toUpperCase(),n=this.convertTypeToAccount(s).toUpperCase();if("ISOLATED"===t){if(void 0===e)throw new r.ArgumentsRequired(this.id+' transfer () requires params["symbol"] when fromAccount is '+i);t=this.marketId(e)}if("ISOLATED"===n){if(void 0===e)throw new r.ArgumentsRequired(this.id+' transfer () requires params["symbol"] when toAccount is '+s);n=this.marketId(e)}const c=this.safeValue(this.options,"accountsById",{}),h=!(t in c),u=!(n in c);if(h||u){const e="MAIN"===t,a="MAIN"===n;if((h||u)&&("UMFUTURE"===t||"CMFUTURE"===t||"UMFUTURE"===n||"CMFUTURE"===n||"MINING"===t||"MINING"===n||"FUNDING"===t||"FUNDING"===n))throw new r.BadRequest(this.id+" transfer () does not allow transfers between "+i+" and "+s);a&&h?(d="sapiPostMarginIsolatedTransfer",o.transFrom="ISOLATED_MARGIN",o.transTo="SPOT",o.symbol=t):e&&u?(d="sapiPostMarginIsolatedTransfer",o.transFrom="SPOT",o.transTo="ISOLATED_MARGIN",o.symbol=n):(h&&(o.fromSymbol=t,t="ISOLATEDMARGIN"),u&&(o.toSymbol=n,n="ISOLATEDMARGIN"),o.type=t+"_"+n)}else o.type=t+"_"+n}a=this.omit(a,"type");const c=await this[d](this.extend(o,a));return this.parseTransfer(c,n)}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){let a;await this.loadMarkets(),void 0!==e&&(a=this.currency(e));const n=this.safeString2(this.options,"fetchTransfers","defaultType","spot"),o=this.safeString(s,"fromAccount",n),d="future"===o?"spot":"future",c=this.safeString(s,"toAccount",d);let h=this.safeString(s,"type");const u=this.safeValue(this.options,"accountsByType",{}),l=this.safeString(u,o),p=this.safeString(u,c);if(void 0===h){if(void 0===l){const e=Object.keys(u);throw new r.ExchangeError(this.id+" fromAccount parameter must be one of "+e.join(", "))}if(void 0===p){const e=Object.keys(u);throw new r.ExchangeError(this.id+" toAccount parameter must be one of "+e.join(", "))}h=l+"_"+p}const f={type:h};void 0!==t&&(f.startTime=t),void 0!==i&&(f.size=i);const m=await this.sapiGetAssetTransfer(this.extend(f,s)),v=this.safeValue(m,"rows",[]);return this.parseTransfers(v,a,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={coin:this.currency(e).id},s=this.safeValue(this.options,"networks",{});let r=this.safeStringUpper(t,"network");r=this.safeString(s,r,r),void 0!==r&&(i.network=r,t=this.omit(t,"network"));const a=await this.sapiGetCapitalDepositAddress(this.extend(i,t)),n=this.safeString(a,"address"),o=this.safeString(a,"url");let d;if(void 0!==o){const t=this.safeValue(this.options,"reverseNetworks",{}),i=o.split("/");let s=this.safeString(i,2);if("blockchair.com"===s||"viewblock.io"===s){const e=this.safeString(i,3);void 0!==e&&(s=s+"/"+e)}d=this.safeString(t,s);const r=this.safeValue(this.options,"impliedNetworks",{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"}});if(e in r){const t=this.safeValue(r,e,{});d=this.safeString(t,d,d)}}let c=this.safeString(a,"tag","");return 0===c.length&&(c=void 0),this.checkAddress(n),{currency:e,address:n,tag:c,network:d,info:a}}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=await this.sapiGetCapitalConfigGetall(t),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"coin"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"networkList",[]);s[a]={};for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"network"),r=this.safeCurrencyCode(i),o=this.safeNumber(t,"withdrawFee");s[a][r]=o}}return{withdraw:s,deposit:{},info:i}}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.sapiGetCapitalConfigGetall(t);return this.parseDepositWithdrawFees(i,e,"coin")}parseDepositWithdrawFee(e,t=undefined){const i=this.safeValue(e,"networkList",[]),s=this.depositWithdrawFee(e);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"network"),a=this.networkIdToCode(r),n=this.safeNumber(t,"withdrawFee");!0===this.safeValue(t,"isDefault")&&(s.withdraw={fee:n,percentage:void 0}),s.networks[a]={withdraw:{fee:n,percentage:void 0},deposit:{fee:void 0,percentage:void 0}}}return s}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={coin:a.id,address:i,amount:t};void 0!==s&&(n.addressTag=s);const o=this.safeValue(this.options,"networks",{});let d=this.safeStringUpper(r,"network");d=this.safeString(o,d,d),void 0!==d&&(n.network=d,r=this.omit(r,"network"));const c=await this.sapiPostCapitalWithdrawApply(this.extend(n,r));return this.parseTransaction(c,a)}parseTradingFee(e,t=undefined){const i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i,t,void 0,"spot"),maker:this.safeNumber(e,"makerCommission"),taker:this.safeNumber(e,"takerCommission")}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i={symbol:this.market(e).id},s=await this.sapiGetAssetTradeFee(this.extend(i,t)),r=this.safeValue(s,0,{});return this.parseTradingFee(r)}async fetchTradingFees(e={}){let t;await this.loadMarkets();const i=this.safeString2(this.options,"fetchTradingFees","defaultType","linear"),s=this.safeString(e,"type",i);let r;e=this.omit(e,"type"),[r,e]=this.handleSubTypeAndParams("fetchTradingFees",void 0,e);const a="spot"===s||"margin"===s,n=this.isLinear(s,r),o=this.isInverse(s,r);a?t="sapiGetAssetTradeFee":n?t="fapiPrivateGetAccount":o&&(t="dapiPrivateGetAccount");const d=await this[t](e);if(a){const e={};for(let t=0;t<d.length;t++){const i=this.parseTradingFee(d[t]);e[i.symbol]=i}return e}if(n){const e=Object.keys(this.markets),t={},i=this.safeInteger(d,"feeTier"),s=this.fees.linear.trading.tiers,r=s.maker[i][1],a=s.taker[i][1];for(let s=0;s<e.length;s++){const n=e[s];this.markets[n].linear&&(t[n]={info:{feeTier:i},symbol:n,maker:r,taker:a})}return t}if(o){const e=Object.keys(this.markets),t={},i=this.safeInteger(d,"feeTier"),s=this.fees.inverse.trading.tiers,r=s.maker[i][1],a=s.taker[i][1];for(let s=0;s<e.length;s++){const n=e[s];this.markets[n].inverse&&(t[n]={info:{feeTier:i},symbol:n,maker:r,taker:a})}return t}}async futuresTransfer(e,t,i,s={}){if(i<1||i>4)throw new r.ArgumentsRequired(this.id+" type must be between 1 and 4");await this.loadMarkets();const a=this.currency(e),n={asset:a.id,amount:t,type:i},o=await this.sapiPostFuturesTransfer(this.extend(n,s));return this.parseTransfer(o,a)}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id};let a;if(i.linear)a="fapiPublicGetPremiumIndex";else{if(!i.inverse)throw new r.NotSupported(this.id+" fetchFundingRate() supports linear and inverse contracts only");a="dapiPublicGetPremiumIndex"}let n=await this[a](this.extend(s,t));return i.inverse&&(n=n[0]),this.parseFundingRate(n,i)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;const o=this.safeString2(this.options,"fetchFundingRateHistory","defaultType","future"),d=this.safeString(s,"type",o);let c,h;if(void 0!==e&&(c=this.market(e),e=c.symbol,a.symbol=c.id),[h,s]=this.handleSubTypeAndParams("fetchFundingRateHistory",c,s,"linear"),s=this.omit(s,"type"),this.isLinear(d,h)?n="fapiPublicGetFundingRate":this.isInverse(d,h)&&(n="dapiPublicGetFundingRate"),void 0===n)throw new r.NotSupported(this.id+" fetchFundingRateHistory() is not supported for "+d+" markets");void 0!==t&&(a.startTime=t);const u=this.safeInteger2(s,"until","till"),l=this.safeInteger(s,"endTime",u);s=this.omit(s,["endTime","till","until"]),void 0!==l&&(a.endTime=l),void 0!==i&&(a.limit=i);const p=await this[n](this.extend(a,s)),f=[];for(let e=0;e<p.length;e++){const t=p[e],i=this.safeInteger(t,"fundingTime");f.push({info:t,symbol:this.safeSymbol(this.safeString(t,"symbol"),void 0,void 0,"swap"),fundingRate:this.safeNumber(t,"fundingRate"),timestamp:i,datetime:this.iso8601(i)})}const m=this.sortBy(f,"timestamp");return this.filterBySymbolSinceLimit(m,e,t,i)}async fetchFundingRates(e=undefined,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e);const s=this.safeString2(this.options,"fetchFundingRates","defaultType","future"),a=this.safeString(t,"type",s);let n;[n,t]=this.handleSubTypeAndParams("fetchFundingRates",void 0,t,"linear");const o=this.omit(t,"type");if(this.isLinear(a,n))i="fapiPublicGetPremiumIndex";else{if(!this.isInverse(a,n))throw new r.NotSupported(this.id+" fetchFundingRates() supports linear and inverse contracts only");i="dapiPublicGetPremiumIndex"}const d=await this[i](o),c=[];for(let e=0;e<d.length;e++){const t=d[e],i=this.parseFundingRate(t);c.push(i)}return this.filterByArray(c,"symbol",e)}parseFundingRate(e,t=undefined){const i=this.safeInteger(e,"time"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t,void 0,"contract"),a=this.safeNumber(e,"markPrice"),n=this.safeNumber(e,"indexPrice"),o=this.safeNumber(e,"interestRate"),d=this.safeNumber(e,"estimatedSettlePrice"),c=this.safeNumber(e,"lastFundingRate"),h=this.safeInteger(e,"nextFundingTime");return{info:e,symbol:r,markPrice:a,indexPrice:n,interestRate:o,estimatedSettlePrice:d,timestamp:i,datetime:this.iso8601(i),fundingRate:c,fundingTimestamp:h,fundingDatetime:this.iso8601(h),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}parseAccountPositions(e){const t=this.safeValue(e,"positions"),i=this.safeValue(e,"assets",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"asset"),n=this.safeCurrencyCode(r),o=this.safeString(t,"crossWalletBalance"),d=this.safeString(t,"crossUnPnl");s[n]={crossMargin:a.O.stringAdd(o,d),crossWalletBalance:o}}const r=[];for(let e=0;e<t.length;e++){const i=t[e],a=this.safeString(i,"symbol"),n=this.safeMarket(a,void 0,void 0,"contract"),o=n.linear?n.quote:n.base;if(o in s){const e=this.parseAccountPosition(this.extend(i,{crossMargin:s[o].crossMargin,crossWalletBalance:s[o].crossWalletBalance}),n);r.push(e)}}return r}parseAccountPosition(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t,void 0,"contract");const s=this.safeString(t,"symbol"),r=this.safeString(e,"leverage"),n=parseInt(r),o=this.safeString(e,"initialMargin"),d=this.parseNumber(o);let c=a.O.stringDiv("1",r,8);1e3%n==0||(c=a.O.stringDiv(a.O.stringAdd(c,"1e-8"),"1",8));const h="notional"in e,u=this.safeString(e,"maintMargin"),l=this.parseNumber(u),p=this.safeString(e,"entryPrice");let f=this.parseNumber(p);const m=this.safeString2(e,"notional","notionalValue"),v=a.O.stringAbs(m),g=this.parseNumber(v);let y=this.safeString(e,"positionAmt"),b=a.O.stringAbs(y);if(void 0===y){const e=a.O.stringMul(a.O.stringMul(r,o),p),i=this.safeString(t,"contractSize");y=a.O.stringDiv(e,i),b=a.O.stringDiv(a.O.stringAdd(y,"0.5"),"1",0)}const w=this.parseNumber(b),S=this.safeValue(this.options,"leverageBrackets",{}),P=this.safeValue(S,s,[]);let k;for(let e=0;e<P.length;e++){const t=P[e];if(a.O.stringLt(v,t[0]))break;k=t[1]}const O=this.parseNumber(k),T=this.safeString(e,"unrealizedProfit"),A=this.parseNumber(T);let G,I,C,M=this.safeInteger(e,"updateTime");0===M&&(M=void 0),this.safeValue(e,"isolated")?(G="isolated",C=this.safeString(e,"isolatedWallet"),I=a.O.stringAdd(C,T)):(G="cross",C=this.safeString(e,"crossWalletBalance"),I=this.safeString(e,"crossMargin"));const x=this.parseNumber(I);let V,E,B,_,R;const N=this.safeValue(t,"contractSize"),L=this.numberToString(N);if(a.O.stringEquals(m,"0"))f=void 0;else{if(E=a.O.stringLt(m,"0")?"short":"long",V=this.parseNumber(a.O.stringDiv(a.O.stringAdd(a.O.stringDiv(u,I),"5e-5"),"1",4)),B=this.parseNumber(a.O.stringMul(a.O.stringDiv(T,o,4),"100")),h){let e,t=p;"short"===E?e=a.O.stringAdd("1",k):(e=a.O.stringAdd("-1",k),t=a.O.stringMul("-1",t));const i=a.O.stringDiv(C,a.O.stringMul(b,e)),s=a.O.stringDiv(t,e);_=a.O.stringAdd(i,s)}else{let e,t=p;"short"===E?e=a.O.stringSub("1",k):(e=a.O.stringSub("-1",k),t=a.O.stringMul("-1",t));const i=a.O.stringMul(b,L),s=a.O.stringMul(i,e),r=a.O.stringSub(a.O.stringMul(a.O.stringDiv("1",t),i),C);_=a.O.stringDiv(s,r)}const e=t.precision.price,i=(e+1).toString(),s=new a.O("5e-"+i).toString(),r=a.O.stringAdd(s,_);let n=a.O.stringDiv(r,"1",e);"-"===n[0]&&(n=void 0),R=this.parseNumber(n)}const D="BOTH"!==this.safeString(e,"positionSide");return{info:e,id:void 0,symbol:s,timestamp:M,datetime:this.iso8601(M),initialMargin:d,initialMarginPercentage:this.parseNumber(c),maintenanceMargin:l,maintenanceMarginPercentage:O,entryPrice:f,notional:g,leverage:this.parseNumber(r),unrealizedPnl:A,contracts:w,contractSize:N,marginRatio:V,liquidationPrice:R,markPrice:void 0,collateral:x,marginMode:G,side:E,hedged:D,percentage:B}}parsePositionRisk(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t,void 0,"contract");const s=this.safeString(t,"symbol"),r=this.safeValue(this.options,"leverageBrackets",{}),n=this.safeValue(r,s,[]),o=this.safeString2(e,"notional","notionalValue"),d=a.O.stringAbs(o);let c;for(let e=0;e<n.length;e++){const t=n[e];if(a.O.stringLt(d,t[0]))break;c=t[1]}const h=this.parseNumber(d),u=a.O.stringAbs(this.safeString(e,"positionAmt")),l=this.parseNumber(u),p=this.safeString(e,"unRealizedProfit"),f=this.parseNumber(p),m=this.safeString(e,"leverage"),v=parseInt(m),g=this.omitZero(this.safeString(e,"liquidationPrice")),y=this.parseNumber(g);let b;const w=this.safeString(e,"marginType");let S;a.O.stringGt(o,"0")?S="long":a.O.stringLt(o,"0")&&(S="short");const P=this.safeString(e,"entryPrice"),k=this.parseNumber(P),O=this.safeValue(t,"contractSize"),T=this.numberToString(O),A="notional"in e;if("cross"===w){const e=this.safeValue(t,"precision",{});if(A){let t,i=P;"short"===S?(t=a.O.stringAdd("1",c),i=a.O.stringMul("-1",i)):t=a.O.stringAdd("-1",c);const s=a.O.stringMul(g,t),r=a.O.stringAdd(s,i),n=this.safeInteger(e,"price"),o=this.safeInteger(e,"quote",n);void 0!==o&&(b=a.O.stringDiv(a.O.stringMul(r,u),"1",o))}else{let t,i=P;"short"===S?t=a.O.stringSub("1",c):(t=a.O.stringSub("-1",c),i=a.O.stringMul("-1",i));const s=a.O.stringMul(u,T),r=a.O.stringSub(a.O.stringDiv("1",i),a.O.stringDiv(t,g)),n=this.safeInteger(e,"base");void 0!==n&&(b=a.O.stringDiv(a.O.stringMul(s,r),"1",n))}}else b=this.safeString(e,"isolatedMargin");b=void 0===b?"0":b;const G=this.parseNumber(b),I=this.parseNumber(this.omitZero(this.safeString(e,"markPrice")));let C=this.safeInteger(e,"updateTime");0===C&&(C=void 0);const M=this.parseNumber(c),x=a.O.stringMul(c,d),V=this.parseNumber(x);let E=a.O.stringDiv("1",m,8);1e3%v==0||(E=a.O.stringAdd(E,"1e-8"));const B=a.O.stringDiv(a.O.stringMul(d,E),"1",8),_=this.parseNumber(B);let R,N;a.O.stringEquals(b,"0")||(R=this.parseNumber(a.O.stringDiv(a.O.stringAdd(a.O.stringDiv(x,b),"5e-5"),"1",4)),N=this.parseNumber(a.O.stringMul(a.O.stringDiv(p,B,4),"100")));const L="BOTH"!==this.safeString(e,"positionSide");return{info:e,id:void 0,symbol:s,contracts:l,contractSize:O,unrealizedPnl:f,leverage:this.parseNumber(m),liquidationPrice:y,collateral:G,notional:h,markPrice:I,entryPrice:k,timestamp:C,initialMargin:_,initialMarginPercentage:this.parseNumber(E),maintenanceMargin:V,maintenanceMarginPercentage:M,marginRatio:R,datetime:this.iso8601(C),marginMode:w,marginType:w,side:S,hedged:L,percentage:N}}async loadLeverageBrackets(e=!1,t={}){if(await this.loadMarkets(),void 0===this.safeValue(this.options,"leverageBrackets")||e){let e;const i=this.safeString(this.options,"defaultType","future"),s=this.safeString(t,"type",i),a=this.omit(t,"type");let n;if([n,t]=this.handleSubTypeAndParams("loadLeverageBrackets",void 0,t,"linear"),this.isLinear(s,n))e="fapiPrivateGetLeverageBracket";else{if(!this.isInverse(s,n))throw new r.NotSupported(this.id+" loadLeverageBrackets() supports linear and inverse contracts only");e="dapiPrivateV2GetLeverageBracket"}const o=await this[e](a);this.options.leverageBrackets={};for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,"symbol"),s=this.safeSymbol(i,void 0,void 0,"contract"),r=this.safeValue(t,"brackets",[]),a=[];for(let e=0;e<r.length;e++){const t=r[e],i=this.safeString2(t,"notionalFloor","qtyFloor"),s=this.safeString(t,"maintMarginRatio");a.push([i,s])}this.options.leverageBrackets[s]=a}}return this.options.leverageBrackets}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const[i,s]=this.handleMarketTypeAndParams("fetchLeverageTiers",void 0,t);let a,n;if([a,t]=this.handleSubTypeAndParams("fetchLeverageTiers",void 0,s,"linear"),this.isLinear(i,a))n="fapiPrivateGetLeverageBracket";else{if(!this.isInverse(i,a))throw new r.NotSupported(this.id+" fetchLeverageTiers() supports linear and inverse contracts only");n="dapiPrivateV2GetLeverageBracket"}const o=await this[n](s);return this.parseLeverageTiers(o,e,"symbol")}parseMarketLeverageTiers(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t,void 0,"contract");const s=this.safeValue(e,"brackets",[]),r=[];for(let e=0;e<s.length;e++){const i=s[e];r.push({tier:this.safeNumber(i,"bracket"),currency:t.quote,minNotional:this.safeNumber2(i,"notionalFloor","qtyFloor"),maxNotional:this.safeNumber2(i,"notionalCap","qtyCap"),maintenanceMarginRate:this.safeNumber(i,"maintMarginRatio"),maxLeverage:this.safeNumber(i,"initialLeverage"),info:i})}return r}async fetchPositions(e=undefined,t={}){const i=this.safeString(this.options,"fetchPositions","positionRisk");if("positionRisk"===i)return await this.fetchPositionsRisk(e,t);if("account"===i)return await this.fetchAccountPositions(e,t);throw new r.NotSupported(this.id+'.options["fetchPositions"] = "'+i+'" is invalid, please choose between "account" and "positionRisk"')}async fetchAccountPositions(e=undefined,t={}){if(void 0!==e&&!Array.isArray(e))throw new r.ArgumentsRequired(this.id+" fetchPositions() requires an array argument for symbols");let i;await this.loadMarkets(),await this.loadLeverageBrackets(!1,t);const s=this.safeString(this.options,"defaultType","future"),a=this.safeString(t,"type",s);let n,o=this.omit(t,"type");if([n,o]=this.handleSubTypeAndParams("fetchAccountPositions",void 0,t,"linear"),this.isLinear(a,n))i="fapiPrivateGetAccount";else{if(!this.isInverse(a,n))throw new r.NotSupported(this.id+" fetchPositions() supports linear and inverse contracts only");i="dapiPrivateGetAccount"}const d=await this[i](o),c=this.parseAccountPositions(d);return e=this.marketSymbols(e),this.filterByArray(c,"symbol",e,!1)}async fetchPositionsRisk(e=undefined,t={}){if(void 0!==e&&!Array.isArray(e))throw new r.ArgumentsRequired(this.id+" fetchPositionsRisk() requires an array argument for symbols");await this.loadMarkets(),await this.loadLeverageBrackets(!1,t);let i,s="future";s=this.safeString(this.options,"defaultType",s);const a=this.safeString(t,"type",s);let n;if([n,t]=this.handleSubTypeAndParams("fetchPositionsRisk",void 0,t,"linear"),t=this.omit(t,"type"),this.isLinear(a,n))i="fapiPrivateGetPositionRisk";else{if(!this.isInverse(a,n))throw new r.NotSupported(this.id+" fetchPositionsRisk() supports linear and inverse contracts only");i="dapiPrivateGetPositionRisk"}const o=await this[i](this.extend({},t)),d=[];for(let e=0;e<o.length;e++){const t=this.parsePositionRisk(o[e]);d.push(t)}return e=this.marketSymbols(e),this.filterByArray(d,"symbol",e,!1)}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){let a,n;await this.loadMarkets();const o={incomeType:"FUNDING_FEE"};if(void 0!==e&&(a=this.market(e),o.symbol=a.id,!a.swap))throw new r.NotSupported(this.id+" fetchFundingHistory() supports swap contracts only");let d;[d,s]=this.handleSubTypeAndParams("fetchFundingHistory",a,s,"linear"),void 0!==t&&(o.startTime=t),void 0!==i&&(o.limit=i);const c=this.safeString2(this.options,"fetchFundingHistory","defaultType","future"),h=this.safeString(s,"type",c);if(s=this.omit(s,"type"),this.isLinear(h,d))n="fapiPrivateGetIncome";else{if(!this.isInverse(h,d))throw new r.NotSupported(this.id+" fetchFundingHistory() supports linear and inverse contracts only");n="dapiPrivateGetIncome"}const u=await this[n](this.extend(o,s));return this.parseIncomes(u,a,t,i)}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new r.BadRequest(this.id+" leverage should be between 1 and 125");await this.loadMarkets();const s=this.market(t);let a;if(s.linear)a="fapiPrivatePostLeverage";else{if(!s.inverse)throw new r.NotSupported(this.id+" setLeverage() supports linear and inverse contracts only");a="dapiPrivatePostLeverage"}const n={symbol:s.id,leverage:e};return await this[a](this.extend(n,i))}async setMarginMode(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("CROSS"===(e=e.toUpperCase())&&(e="CROSSED"),"ISOLATED"!==e&&"CROSSED"!==e)throw new r.BadRequest(this.id+" marginMode must be either isolated or cross");await this.loadMarkets();const s=this.market(t);let a;if(s.linear)a="fapiPrivatePostMarginType";else{if(!s.inverse)throw new r.NotSupported(this.id+" setMarginMode() supports linear and inverse contracts only");a="dapiPrivatePostMarginType"}const n={symbol:s.id,marginType:e};let o;try{o=await this[a](this.extend(n,i))}catch(e){if(e instanceof r.MarginModeAlreadySet){if(this.safeValue(this.options,"throwMarginModeAlreadySet",!1))throw e;o={code:-4046,msg:"No need to change margin type."}}}return o}async setPositionMode(e,t=undefined,i={}){const s=this.safeString(this.options,"defaultType","future"),r=this.safeString(i,"type",s);let a;i=this.omit(i,["type"]),a=e?"true":"false";const n={dualSidePosition:a};let o;return o=this.isInverse(r)?"dapiPrivatePostPositionSideDual":"fapiPrivatePostPositionSideDual",await this[o](this.extend(n,i))}async fetchSettlementHistory(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=void 0===e?void 0:this.market(e);let n;if([n,s]=this.handleMarketTypeAndParams("fetchSettlementHistory",a,s),"option"!==n)throw new r.NotSupported(this.id+" fetchSettlementHistory() supports option markets only");const o={};void 0!==e&&(e=a.symbol,o.underlying=a.baseId+a.quoteId),void 0!==t&&(o.startTime=t),void 0!==i&&(o.limit=i);const d=await this.eapiPublicGetExerciseHistory(this.extend(o,s)),c=this.parseSettlements(d,a),h=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(h,e,t,i)}parseSettlement(e,t){const i=this.safeInteger(e,"expiryDate"),s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t),price:this.safeNumber(e,"realStrikePrice"),timestamp:i,datetime:this.iso8601(i)}}parseSettlements(e,t){const i=[];for(let s=0;s<e.length;s++)i.push(this.parseSettlement(e[s],t));return i}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){let a,n,o,d;await this.loadMarkets();const c={};if([a,s]=this.handleMarketTypeAndParams("fetchLedger",void 0,s),[n,s]=this.handleSubTypeAndParams("fetchLedger",void 0,s),"option"===a)this.checkRequiredArgument("fetchLedger",e,"code"),o=this.currency(e),c.currency=o.id,d="eapiPrivateGetBill";else if(this.isLinear(a,n))d="fapiPrivateGetIncome";else{if(!this.isInverse(a,n))throw new r.NotSupported(this.id+" fetchLedger() supports contract wallets only");d="dapiPrivateGetIncome"}void 0!==t&&(c.startTime=t),void 0!==i&&(c.limit=i);const h=await this[d](this.extend(c,s));return this.parseLedger(h,o,t,i)}parseLedgerEntry(e,t=undefined){let i,s=this.safeString2(e,"amount","income");a.O.stringLe(s,"0")?(i="out",s=a.O.stringMul("-1",s)):i="in";const r=this.safeString(e,"asset"),n=this.safeInteger2(e,"createDate","time"),o=this.safeString2(e,"type","incomeType");return{id:this.safeString2(e,"id","tranId"),direction:i,account:void 0,referenceAccount:void 0,referenceId:this.safeString(e,"tradeId"),type:this.parseLedgerEntryType(o),currency:this.safeCurrencyCode(r,t),amount:this.parseNumber(s),timestamp:n,datetime:this.iso8601(n),before:void 0,after:void 0,status:void 0,fee:void 0,info:e}}parseLedgerEntryType(e){return this.safeString({FEE:"fee",FUNDING_FEE:"fee",OPTIONS_PREMIUM_FEE:"fee",POSITION_LIMIT_INCREASE_FEE:"fee",CONTRACT:"trade",REALIZED_PNL:"trade",TRANSFER:"transfer",CROSS_COLLATERAL_TRANSFER:"transfer",INTERNAL_TRANSFER:"transfer",COIN_SWAP_DEPOSIT:"deposit",COIN_SWAP_WITHDRAW:"withdrawal",OPTIONS_SETTLE_PROFIT:"settlement",DELIVERED_SETTELMENT:"settlement",WELCOME_BONUS:"cashback",CONTEST_REWARD:"cashback",COMMISSION_REBATE:"rebate",API_REBATE:"rebate",REFERRAL_KICKBACK:"referral",COMMISSION:"commission"},e,e)}sign(e,t="public",i="GET",s={},a=undefined,n=undefined){if(!(t in this.urls.api))throw new r.NotSupported(this.id+" does not have a testnet/sandbox URL for "+t+" endpoints");let c=this.urls.api[t];if(c+="/"+e,"wapi"===t&&(c+=".html"),"historicalTrades"===e){if(!this.apiKey)throw new r.AuthenticationError(this.id+" historicalTrades endpoint requires `apiKey` credential");a={"X-MBX-APIKEY":this.apiKey}}if("userDataStream"===e||"listenKey"===e){if(!this.apiKey)throw new r.AuthenticationError(this.id+" userDataStream endpoint requires `apiKey` credential");a={"X-MBX-APIKEY":this.apiKey,"Content-Type":"application/x-www-form-urlencoded"},"GET"!==i&&(n=this.urlencode(s))}else if("private"===t||"eapiPrivate"===t||"sapi"===t&&"system/status"!==e||"sapiV2"===t||"sapiV3"===t||"sapiV4"===t||"wapi"===t&&"systemStatus"!==e||"dapiPrivate"===t||"dapiPrivateV2"===t||"fapiPrivate"===t||"fapiPrivateV2"===t){let r;this.checkRequiredCredentials();const h=this.safeInteger(this.options,"recvWindow"),u=this.extend({timestamp:this.nonce()},s);void 0!==h&&(u.recvWindow=h);const l=this.safeInteger(s,"recvWindow");let p;void 0!==l&&(u.recvWindow=l),r="sapi"===t&&"asset/dust"===e?this.urlencodeWithArrayRepeat(u):"batchOrders"===e||e.indexOf("sub-account")>=0||"capital/withdraw/apply"===e||e.indexOf("staking")>=0?this.rawencode(u):this.urlencode(u),p=this.secret.indexOf("PRIVATE KEY")>-1?this.encodeURIComponent((0,d.j)(r,this.secret,o.J)):this.hmac(this.encode(r),this.encode(this.secret),o.J),r+="&signature="+p,a={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i||"wapi"===t?c+="?"+r:(n=r,a["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(s).length&&(c+="?"+this.urlencode(s));return{url:c,method:i,body:n,headers:a}}handleErrors(e,t,i,s,n,o,d,c,h){if(418===e||429===e)throw new r.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+o);if(e>=400){if(o.indexOf("Price * QTY is zero or less")>=0)throw new r.InvalidOrder(this.id+" order cost = amount * price is zero or less "+o);if(o.indexOf("LOT_SIZE")>=0)throw new r.InvalidOrder(this.id+" order amount should be evenly divisible by lot size "+o);if(o.indexOf("PRICE_FILTER")>=0)throw new r.InvalidOrder(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid value in general, use this.priceToPrecision (symbol, amount) "+o)}if(void 0===d)return;const u=this.safeValue(d,"success",!0);if(!u){const e=this.safeString(d,"msg");let t;if(void 0!==e){try{t=JSON.parse(e)}catch(e){t=void 0}void 0!==t&&(d=t)}}const l=this.safeString(d,"msg");void 0!==l&&(this.throwExactlyMatchedException(this.exceptions.exact,l,this.id+" "+l),this.throwBroadlyMatchedException(this.exceptions.broad,l,this.id+" "+l));const p=this.safeString(d,"code");if(void 0!==p){if("200"===p||a.O.stringEquals(p,"0"))return;if("-2015"===p&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new r.DDoSProtection(this.id+" "+o);const e=this.id+" "+o;if("No need to change margin type."===l)throw new r.MarginModeAlreadySet(e);throw this.throwExactlyMatchedException(this.exceptions.exact,p,e),new r.ExchangeError(e)}if(!u)throw new r.ExchangeError(this.id+" "+o)}calculateRateLimiterCost(e,t,i,s,r={},a={}){if("noCoin"in r&&!("coin"in s))return r.noCoin;if("noSymbol"in r&&!("symbol"in s))return r.noSymbol;if("noPoolId"in r&&!("poolId"in s))return r.noPoolId;if("byLimit"in r&&"limit"in s){const e=s.limit,t=r.byLimit;for(let i=0;i<t.length;i++){const s=t[i];if(e<=s[0])return s[1]}}return this.safeValue(r,"cost",1)}async request(e,t="public",i="GET",s={},r=undefined,a=undefined,n={},o={}){const d=await this.fetch2(e,t,i,s,r,a,n,o);return"private"!==t&&"wapi"!==t||(this.options.hasAlreadyAuthenticatedSuccessfully=!0),d}async modifyMarginHelper(e,t,i,s={}){let a=this.safeString(this.options,"defaultType","future");"spot"===a&&(a="future");const n=this.safeString(s,"type",a);if("margin"===n||"spot"===n)throw new r.NotSupported(this.id+" add / reduce margin only supported with type future or delivery");await this.loadMarkets();const o=this.market(e);t=this.amountToPrecision(e,t);const d={type:i,symbol:o.id,amount:t};let c,h;o.linear?(c="fapiPrivatePostPositionMargin",h=o.quote):(c="dapiPrivatePostPositionMargin",h=o.base);const u=await this[c](this.extend(d,s));return this.extend(this.parseMarginModification(u,o),{code:h})}parseMarginModification(e,t=undefined){const i=1===this.safeInteger(e,"type")?"add":"reduce",s=this.safeNumber(e,"amount"),r="200"===this.safeString(e,"code")?"ok":"failed";return{info:e,type:i,amount:s,code:void 0,symbol:t.symbol,status:r}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,2,i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,1,i)}async fetchBorrowRate(e,t={}){await this.loadMarkets();const i={asset:this.currency(e).id},s=await this.sapiGetMarginInterestRateHistory(this.extend(i,t)),r=this.safeValue(s,0);return this.parseBorrowRate(r)}async fetchBorrowRateHistory(e,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===i)i=93;else if(i>93)throw new r.BadRequest(this.id+" fetchBorrowRateHistory() limit parameter cannot exceed 92");const a={asset:this.currency(e).id,limit:i};if(void 0!==t){a.startTime=t;const e=this.sum(t,864e5*i)-1,s=this.milliseconds();a.endTime=Math.min(e,s)}const n=await this.sapiGetMarginInterestRateHistory(this.extend(a,s));return this.parseBorrowRateHistory(n,e,t,i)}parseBorrowRateHistory(e,t,i,s){const r=[];for(let t=0;t<e.length;t++){const i=e[t],s=this.parseBorrowRate(i);r.push(s)}const a=this.sortBy(r,"timestamp");return this.filterByCurrencySinceLimit(a,t,i,s)}parseBorrowRate(e,t=undefined){const i=this.safeNumber(e,"timestamp");return t=this.safeString(e,"asset"),{currency:this.safeCurrencyCode(t),rate:this.safeNumber(e,"dailyInterestRate"),period:864e5,timestamp:i,datetime:this.iso8601(i),info:e}}async createGiftCode(e,t,i={}){await this.loadMarkets();const s={token:this.currency(e).id,amount:t},r=await this.sapiPostGiftcardCreateCode(this.extend(s,i)),a=this.safeValue(r,"data"),n=this.safeString(a,"code");return{info:r,id:this.safeString(a,"referenceNo"),code:n,currency:e,amount:t}}async redeemGiftCode(e,t={}){const i={code:e};return await this.sapiPostGiftcardRedeemCode(this.extend(i,t))}async verifyGiftCode(e,t={}){const i={referenceNo:e};return await this.sapiGetGiftcardVerify(this.extend(i,t))}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n;if(void 0!==e){const t=this.currency(e);a.asset=t.id}void 0!==i&&(a.startTime=i),void 0!==s&&(a.size=s),void 0!==t&&(n=this.market(t),a.isolatedSymbol=n.id);const o=await this.sapiGetMarginInterestHistory(this.extend(a,r)),d=this.safeValue(o,"rows"),c=this.parseBorrowInterests(d,n);return this.filterByCurrencySinceLimit(c,e,i,s)}parseBorrowInterest(e,t=undefined){const i=this.safeString(e,"isolatedSymbol"),s=this.safeNumber(e,"interestAccuredTime");return{account:void 0===i?"cross":i,symbol:i,marginMode:void 0===i?"cross":"isolated",currency:this.safeCurrencyCode(this.safeString(e,"asset")),interest:this.safeNumber(e,"interest"),interestRate:this.safeNumber(e,"interestRate"),amountBorrowed:this.safeNumber(e,"principal"),timestamp:s,datetime:this.iso8601(s),info:e}}async repayMargin(e,t,i=undefined,s={}){const[r,a]=this.handleMarginModeAndParams("repayMargin",s);this.checkRequiredMarginArgument("repayMargin",i,r),await this.loadMarkets();const n=this.currency(e),o={asset:n.id,amount:this.currencyToPrecision(e,t)};if(void 0!==i){const e=this.market(i);o.symbol=e.id,o.isIsolated="TRUE"}const d=await this.sapiPostMarginRepay(this.extend(o,a));return this.parseMarginLoan(d,n)}async borrowMargin(e,t,i=undefined,s={}){const[r,a]=this.handleMarginModeAndParams("borrowMargin",s);this.checkRequiredMarginArgument("borrowMargin",i,r),await this.loadMarkets();const n=this.currency(e),o={asset:n.id,amount:this.currencyToPrecision(e,t)};if(void 0!==i){const e=this.market(i);o.symbol=e.id,o.isIsolated="TRUE"}const d=await this.sapiPostMarginLoan(this.extend(o,a));return this.parseMarginLoan(d,n)}parseMarginLoan(e,t=undefined){return{id:this.safeInteger(e,"tranId"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}async fetchOpenInterestHistory(e,t="5m",i=undefined,s=undefined,a={}){if("1m"===t)throw new r.BadRequest(this.id+"fetchOpenInterestHistory cannot use the 1m timeframe");await this.loadMarkets();const n=this.market(e),o={period:this.safeString(this.timeframes,t,t)};void 0!==s&&(o.limit=s),o[n.linear?"symbol":"pair"]=n.id,n.inverse&&(o.contractType=this.safeString(a,"contractType","CURRENT_QUARTER")),void 0!==i&&(o.startTime=i);const d=this.safeInteger2(a,"until","till"),c=this.safeInteger(a,"endTime",d);if(a=this.omit(a,["endTime","until","till"]),c)o.endTime=c;else if(i){void 0===s&&(s=30);const e=this.parseTimeframe(t);o.endTime=this.sum(i,e*s*1e3)}let h="fapiDataGetOpenInterestHist";n.inverse&&(h="dapiDataGetOpenInterestHist");const u=await this[h](this.extend(o,a));return this.parseOpenInterests(u,e,i,s)}async fetchOpenInterest(e,t={}){await this.loadMarkets();const i=this.market(e),s={};i.option?(s.underlyingAsset=i.baseId,s.expiration=this.yymmdd(i.expiry)):s.symbol=i.id;let r="fapiPublicGetOpenInterest";i.option?r="eapiPublicGetOpenInterest":i.inverse&&(r="dapiPublicGetOpenInterest");const a=await this[r](this.extend(s,t));return i.option?this.parseOpenInterests(a,i):this.parseOpenInterest(a,i)}parseOpenInterest(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeNumber2(e,"sumOpenInterest","openInterest"),a=this.safeNumber2(e,"sumOpenInterestValue","sumOpenInterestUsd");return{symbol:this.safeSymbol(s,t,void 0,"contract"),baseVolume:t.inverse?void 0:r,quoteVolume:a,openInterestAmount:r,openInterestValue:a,timestamp:i,datetime:this.iso8601(i),info:e}}}},9212:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(9987);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"binancecoinm",name:"Binance COIN-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg",doc:["https://binance-docs.github.io/apidocs/delivery/en/","https://binance-docs.github.io/apidocs/spot/en"]},has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:void 0,createStopMarketOrder:!0},options:{fetchMarkets:["inverse"],defaultSubType:"inverse",leverageBrackets:void 0}})}async transferIn(e,t,i={}){return await this.futuresTransfer(e,t,3,i)}async transferOut(e,t,i={}){return await this.futuresTransfer(e,t,4,i)}}},2723:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(9987);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"binanceus",name:"Binance US",countries:["US"],certified:!1,pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg",api:{web:"https://www.binance.us",sapi:"https://api.binance.us/sapi/v1",wapi:"https://api.binance.us/wapi/v3",public:"https://api.binance.us/api/v3",private:"https://api.binance.us/api/v3"},www:"https://www.binance.us",referral:"https://www.binance.us/?ref=35005074",doc:"https://github.com/binance-us/binance-official-api-docs",fees:"https://www.binance.us/en/fee/schedule"},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},options:{fetchMarkets:["spot"],defaultType:"spot",quoteOrderQty:!1},has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0}})}}},3254:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(9987);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"binanceusdm",name:"Binance USDⓈ-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg",doc:["https://binance-docs.github.io/apidocs/futures/en/","https://binance-docs.github.io/apidocs/spot/en"]},has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:void 0,createStopMarketOrder:!0},options:{fetchMarkets:["linear"],defaultSubType:"linear",leverageBrackets:void 0,marginTypes:{},marginModes:{}}})}async transferIn(e,t,i={}){return await this.futuresTransfer(e,t,1,i)}async transferOut(e,t,i={}){return await this.futuresTransfer(e,t,2,i)}}},7691:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(3108),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bit2c",name:"Bit2C",countries:["IL"],rateLimit:3e3,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766119-3593220e-5ece-11e7-8b3a-5a041f6bcc3f.jpg",api:{rest:"https://bit2c.co.il"},www:"https://www.bit2c.co.il",referral:"https://bit2c.co.il/Aff/63bfed10-e359-420c-ab5a-ad368dab0baf",doc:["https://www.bit2c.co.il/home/api","https://github.com/OferE/bit2c"]},api:{public:{get:["Exchanges/{pair}/Ticker","Exchanges/{pair}/orderbook","Exchanges/{pair}/trades","Exchanges/{pair}/lasttrades"]},private:{post:["Merchant/CreateCheckout","Funds/AddCoinFundsRequest","Order/AddFund","Order/AddOrder","Order/GetById","Order/AddOrderMarketPriceBuy","Order/AddOrderMarketPriceSell","Order/CancelOrder","Order/AddCoinFundsRequest","Order/AddStopOrder","Payment/GetMyId","Payment/Send","Payment/Pay"],get:["Account/Balance","Account/Balance/v2","Order/MyOrders","Order/GetById","Order/AccountHistory","Order/OrderHistory"]}},markets:{"BTC/NIS":{id:"BtcNis",symbol:"BTC/NIS",base:"BTC",quote:"NIS",baseId:"Btc",quoteId:"Nis",type:"spot",spot:!0},"ETH/NIS":{id:"EthNis",symbol:"ETH/NIS",base:"ETH",quote:"NIS",baseId:"Eth",quoteId:"Nis",type:"spot",spot:!0},"LTC/NIS":{id:"LtcNis",symbol:"LTC/NIS",base:"LTC",quote:"NIS",baseId:"Ltc",quoteId:"Nis",type:"spot",spot:!0},"USDC/NIS":{id:"UsdcNis",symbol:"USDC/NIS",base:"USDC",quote:"NIS",baseId:"Usdc",quoteId:"Nis",type:"spot",spot:!0}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.025"),taker:this.parseNumber("0.03"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.03")],[this.parseNumber("20000"),this.parseNumber("0.0275")],[this.parseNumber("50000"),this.parseNumber("0.025")],[this.parseNumber("75000"),this.parseNumber("0.0225")],[this.parseNumber("100000"),this.parseNumber("0.02")],[this.parseNumber("250000"),this.parseNumber("0.015")],[this.parseNumber("500000"),this.parseNumber("0.0125")],[this.parseNumber("750000"),this.parseNumber("0.01")],[this.parseNumber("1000000"),this.parseNumber("0.008")],[this.parseNumber("2000000"),this.parseNumber("0.006")],[this.parseNumber("3000000"),this.parseNumber("0.004")],[this.parseNumber("4000000"),this.parseNumber("0.002")]],maker:[[this.parseNumber("0"),this.parseNumber("0.025")],[this.parseNumber("20000"),this.parseNumber("0.0225")],[this.parseNumber("50000"),this.parseNumber("0.02")],[this.parseNumber("75000"),this.parseNumber("0.0175")],[this.parseNumber("100000"),this.parseNumber("0.015")],[this.parseNumber("250000"),this.parseNumber("0.01")],[this.parseNumber("500000"),this.parseNumber("0.0075")],[this.parseNumber("750000"),this.parseNumber("0.005")],[this.parseNumber("1000000"),this.parseNumber("0.004")],[this.parseNumber("2000000"),this.parseNumber("0.003")],[this.parseNumber("3000000"),this.parseNumber("0.002")],[this.parseNumber("4000000"),this.parseNumber("0.001")]]}}},options:{fetchTradesMethod:"public_get_exchanges_pair_trades"},precisionMode:n.sh,exceptions:{exact:{"Please provide valid APIkey":r.AuthenticationError,"No order found.":r.OrderNotFound},broad:{"Please provide valid nonce":r.InvalidNonce,"please approve new terms of use on site":r.PermissionDenied}}})}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){const r=i[s],a=this.account(),n=this.currency(r).id.toUpperCase();n in e&&(a.free=this.safeString(e,"AVAILABLE_"+n),a.total=this.safeString(e,n)),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountBalanceV2(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={pair:this.market(e).id},r=await this.publicGetExchangesPairOrderbook(this.extend(s,i));return this.parseOrderBook(r,e)}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.milliseconds(),r=this.safeString(e,"av"),a=this.safeString(e,"a"),n=this.safeString(e,"ll");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeString(e,"h"),bidVolume:void 0,ask:this.safeString(e,"l"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:r,baseVolume:a,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetExchangesPairTicker(this.extend(s,t));return this.parseTicker(r,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.market(e),n=this.options.fetchTradesMethod,o={pair:a.id};void 0!==t&&(o.date=this.parseToInt(t)),void 0!==i&&(o.limit=i);const d=await this[n](this.extend(o,s));if("string"==typeof d)throw new r.ExchangeError(d);return this.parseTrades(d,a,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccountBalance(e),i=this.safeValue(t,"Fees",{}),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){const t=s[e],n=this.safeSymbol(t),o=this.safeValue(i,t),d=this.safeString(o,"FeeMaker"),c=this.safeString(o,"FeeTaker"),h=this.parseNumber(a.O.stringDiv(d,"100")),u=this.parseNumber(a.O.stringDiv(c,"100"));r[n]={info:o,symbol:n,taker:u,maker:h,percentage:!0,tierBased:!0}}return r}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();let n="privatePostOrderAddOrder";const o=this.market(e),d={Amount:s,Pair:o.id};"market"===t?n+="MarketPrice"+this.capitalize(i):(d.Price=r,d.Total=s*r,d.IsBid="buy"===i);const c=await this[n](this.extend(d,a));return this.parseOrder(c,o)}async cancelOrder(e,t=undefined,i={}){const s={id:e};return await this.privatePostOrderCancelOrder(this.extend(s,i))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id},o=await this.privateGetOrderMyOrders(this.extend(n,s)),d=this.safeValue(o,a.id,{}),c=this.safeValue(d,"ask",[]),h=this.safeValue(d,"bid",[]);return this.parseOrders(this.arrayConcat(c,h),a,t,i)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(t),r={id:e},a=await this.privateGetOrderGetById(this.extend(r,i));return this.parseOrder(a,s)}parseOrder(e,t=undefined){let i,s=!1;"NewOrder"in e?(i=e.NewOrder,s=!0):i=e;const r=this.safeString(i,"id"),a=this.safeSymbol(void 0,t),n=this.safeIntegerProduct(i,"created",1e3);let o;if(s){const e=this.safeInteger(i,"status_type");0===e||1===e?o="open":5===e&&(o="closed")}else{const e=this.safeString(i,"status");"New"===e||"Open"===e?o="open":"Completed"===e&&(o="closed")}let d=this.safeString(i,"order_type");"0"===d?d="limit":"1"===d&&(d="market");let c=this.safeString(i,"type");"0"===c?c="buy":"1"===c&&(c="sell");const h=this.safeString(i,"price");let u,l;return s?(u=this.safeString(i,"amount"),l=this.safeString(i,"amount")):(u=this.safeString(i,"initialAmount"),l=this.safeString(i,"amount")),this.safeOrder({id:r,clientOrderId:void 0,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,status:o,symbol:a,type:d,timeInForce:void 0,postOnly:void 0,side:c,price:h,stopPrice:void 0,triggerPrice:void 0,amount:u,filled:void 0,remaining:l,cost:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==i&&(a.take=i),a.take=i,void 0!==t&&(a.toTime=this.yyyymmdd(this.milliseconds(),"."),a.fromTime=this.yyyymmdd(t,".")),void 0!==e&&(r=this.market(e),a.pair=r.id);const n=await this.privateGetOrderOrderHistory(this.extend(a,s));return this.parseTrades(n,r,t,i)}removeCommaFromValue(e){let t="";const i=e.split(",");for(let e=0;e<i.length;e++)t+=i[e];return t}parseTrade(e,t=undefined){let i,s,r,a,n,o,d,c;const h=this.safeString(e,"reference");if(void 0!==h){s=h,i=this.safeTimestamp(e,"ticks"),r=this.safeString(e,"price"),r=this.removeCommaFromValue(r),a=this.safeString(e,"firstAmount");const u=h.split("|"),l=this.safeString(e,"pair");t=this.safeMarket(l,t),t=this.safeMarket(u[0],t);const p=this.safeValue(e,"isMaker");c=p?"maker":"taker",n=p?u[2]:u[1],d=this.safeInteger(e,"action"),0===d?d="buy":1===d&&(d="sell");const f=this.safeString(e,"feeAmount");void 0!==f&&(o={cost:f,currency:"NIS"})}else i=this.safeTimestamp(e,"date"),s=this.safeString(e,"tid"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),d=this.safeValue(e,"isBid"),void 0!==d&&(d=d?"buy":"sell");return t=this.safeMarket(void 0,t),this.safeTrade({info:e,id:s,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:n,type:void 0,side:d,takerOrMaker:c,price:r,amount:a,cost:void 0,fee:o},t)}isFiat(e){return"NIS"===e}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e);if(this.isFiat(e))throw new r.NotSupported(this.id+" fetchDepositAddress() does not support fiat currencies");const s={Coin:i.id},a=await this.privatePostFundsAddCoinFundsRequest(this.extend(s,t));return this.parseDepositAddress(a,i)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address");return this.checkAddress(i),{currency:this.safeCurrencyCode(void 0,t),network:void 0,address:i,tag:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+this.implodeParams(e,s);if("public"===t)n+=".json";else{this.checkRequiredCredentials();const e=this.nonce(),t=this.extend({nonce:e},s),d=this.urlencode(t);"GET"===i?Object.keys(t).length&&(n+="?"+d):a=d;const c=this.hmac(this.encode(d),this.encode(this.secret),o.o,"base64");r={"Content-Type":"application/x-www-form-urlencoded",key:this.apiKey,sign:c}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;let h=this.safeString(o,"error");if(void 0===h&&(h=this.safeString(o,"Error")),void 0!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,h,e),new r.ExchangeError(e)}}}},7820:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(1868),r=i(6689),a=i(9292),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitbank",name:"bitbank",countries:["JP"],version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","4h":"4hour","8h":"8hour","12h":"12hour","1d":"1day","1w":"1week"},hostname:"bitbank.cc",urls:{logo:"https://user-images.githubusercontent.com/1294454/37808081-b87f2d9c-2e59-11e8-894d-c1900b7584fe.jpg",api:{public:"https://public.{hostname}",private:"https://api.{hostname}",markets:"https://api.{hostname}"},www:"https://bitbank.cc/",doc:"https://docs.bitbank.cc/",fees:"https://bitbank.cc/docs/fees/"},api:{public:{get:["{pair}/ticker","{pair}/depth","{pair}/transactions","{pair}/transactions/{yyyymmdd}","{pair}/candlestick/{candletype}/{yyyymmdd}"]},private:{get:["user/assets","user/spot/order","user/spot/active_orders","user/spot/trade_history","user/withdrawal_account"],post:["user/spot/order","user/spot/cancel_order","user/spot/cancel_orders","user/spot/orders_info","user/request_withdrawal"]},markets:{get:["spot/pairs"]}},precisionMode:a.sh,exceptions:{20001:r.AuthenticationError,20002:r.AuthenticationError,20003:r.AuthenticationError,20005:r.AuthenticationError,20004:r.InvalidNonce,40020:r.InvalidOrder,40021:r.InvalidOrder,40025:r.ExchangeError,40013:r.OrderNotFound,40014:r.OrderNotFound,50008:r.PermissionDenied,50009:r.OrderNotFound,50010:r.OrderNotFound,60001:r.InsufficientFunds,60005:r.InvalidOrder}})}async fetchMarkets(e={}){const t=await this.marketsGetSpotPairs(e),i=this.safeValue(t,"data"),s=this.safeValue(i,"pairs",[]),r=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"name"),a=this.safeString(t,"base_asset"),n=this.safeString(t,"quote_asset"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n);r.push({id:i,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"is_enabled"),contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(t,"taker_fee_rate_quote"),maker:this.safeNumber(t,"maker_fee_rate_quote"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount_digits"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_digits")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"unit_amount"),max:this.safeNumber(t,"limit_max_amount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return r}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeInteger(e,"timestamp"),r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetPairTicker(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,i)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id},a=await this.publicGetPairDepth(this.extend(r,i)),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,s.symbol,o)}parseTrade(e,t=undefined){const i=this.safeInteger(e,"executed_at");t=this.safeMarket(void 0,t);const s=this.safeString(e,"price"),r=this.safeString(e,"amount"),a=this.safeString2(e,"transaction_id","trade_id"),n=this.safeString(e,"maker_taker");let o;const d=this.safeString(e,"fee_amount_quote");void 0!==d&&(o={currency:t.quote,cost:d});const c=this.safeString(e,"order_id"),h=this.safeString(e,"type"),u=this.safeString(e,"side");return this.safeTrade({timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:a,order:c,type:h,side:u,takerOrMaker:n,price:s,amount:r,cost:void 0,fee:o,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetPairTransactions(this.extend(a,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"transactions",[]);return this.parseTrades(d,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.marketsGetSpotPairs(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"pairs",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"name"),a=this.safeMarket(i).symbol;r[a]={info:t,symbol:a,maker:this.safeNumber(t,"maker_fee_rate_quote"),taker:this.safeNumber(t,"taker_fee_rate_quote"),percentage:!0,tierBased:!1}}return r}parseOHLCV(e,t=undefined){return[this.safeInteger(e,5),this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){if(void 0===i){void 0===s&&(s=1e3);const e=this.parseTimeframe(t);i=this.milliseconds()-1e3*e*s}await this.loadMarkets();const a=this.market(e),n={pair:a.id,candletype:this.safeString(this.timeframes,t,t),yyyymmdd:this.yyyymmdd(i,"")},o=await this.publicGetPairCandlestickCandletypeYyyymmdd(this.extend(n,r)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"candlestick",[]),h=this.safeValue(c,0,{}),u=this.safeValue(h,"ohlcv",[]);return this.parseOHLCVs(u,a,t,i,s)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data",{}),s=this.safeValue(i,"assets",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"free_amount"),n.used=this.safeString(i,"locked_amount"),n.total=this.safeString(i,"onhand_amount"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUserAssets(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({UNFILLED:"open",PARTIALLY_FILLED:"open",FULLY_FILLED:"closed",CANCELED_UNFILLED:"canceled",CANCELED_PARTIALLY_FILLED:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"order_id"),s=this.safeString(e,"pair");t=this.safeMarket(s,t);const r=this.safeInteger(e,"ordered_at"),a=this.safeString(e,"price"),n=this.safeString(e,"start_amount"),o=this.safeString(e,"executed_amount"),d=this.safeString(e,"remaining_amount"),c=this.safeString(e,"average_price"),h=this.parseOrderStatus(this.safeString(e,"status")),u=this.safeStringLower(e,"type"),l=this.safeStringLower(e,"side");return this.safeOrder({id:i,clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:h,symbol:t.symbol,type:u,timeInForce:void 0,postOnly:void 0,side:l,price:a,stopPrice:void 0,triggerPrice:void 0,cost:void 0,average:c,amount:n,filled:o,remaining:d,trades:void 0,fee:void 0,info:e},t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={pair:n.id,amount:this.amountToPrecision(e,s),side:i,type:t};"limit"===t&&(o.price=this.priceToPrecision(e,r));const d=await this.privatePostUserSpotOrder(this.extend(o,a)),c=this.safeValue(d,"data");return this.parseOrder(c,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e,pair:this.market(t).id},r=await this.privatePostUserSpotCancelOrder(this.extend(s,i));return this.safeValue(r,"data")}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(t),r={order_id:e,pair:s.id},a=await this.privateGetUserSpotOrder(this.extend(r,i)),n=this.safeValue(a,"data");return this.parseOrder(n,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==i&&(a.count=i),void 0!==t&&(a.since=this.parseToInt(t/1e3));const n=await this.privateGetUserSpotActiveOrders(this.extend(a,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"orders",[]);return this.parseOrders(d,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.pair=a.id),void 0!==i&&(r.count=i),void 0!==t&&(r.since=this.parseToInt(t/1e3));const n=await this.privateGetUserSpotTradeHistory(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"trades",[]);return this.parseTrades(d,a,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={asset:i.id},r=await this.privateGetUserWithdrawalAccount(this.extend(s,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"accounts",[]),o=this.safeValue(n,0,{});return{currency:i,address:this.safeString(o,"address"),tag:void 0,network:void 0,info:r}}async withdraw(e,t,i,s=undefined,a={}){if([s,a]=this.handleWithdrawTagAndParams(s,a),!("uuid"in a))throw new r.ExchangeError(this.id+" uuid is required for withdrawal");await this.loadMarkets();const n=this.currency(e),o={asset:n.id,amount:t},d=await this.privatePostUserRequestWithdrawal(this.extend(o,a)),c=this.safeValue(d,"data",{});return this.parseTransaction(c,n)}parseTransaction(e,t=undefined){const i=this.safeString(e,"txid");return{id:i,txid:i,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let o=this.omit(s,this.extractParams(e)),d=this.implodeHostname(this.urls.api[t])+"/";if("public"===t||"markets"===t)d+=this.implodeParams(e,s),Object.keys(o).length&&(d+="?"+this.urlencode(o));else{this.checkRequiredCredentials();const t=this.nonce().toString();let c=t;d+=this.version+"/"+this.implodeParams(e,s),"POST"===i?c+=a=this.json(o):(c+="/"+this.version+"/"+e,Object.keys(o).length&&(o=this.urlencode(o),d+="?"+o,c+="?"+o)),r={"Content-Type":"application/json","ACCESS-KEY":this.apiKey,"ACCESS-NONCE":t,"ACCESS-SIGNATURE":this.hmac(this.encode(c),this.encode(this.secret),n.J)}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeInteger(o,"success"),u=this.safeValue(o,"data");if(!h||!u){const e={1e4:"URL does not exist",10001:"A system error occurred. Please contact support",10002:"Invalid JSON format. Please check the contents of transmission",10003:"A system error occurred. Please contact support",10005:"A timeout error occurred. Please wait for a while and try again",20001:"API authentication failed",20002:"Illegal API key",20003:"API key does not exist",20004:"API Nonce does not exist",20005:"API signature does not exist",20011:"Two-step verification failed",20014:"SMS authentication failed",30001:"Please specify the order quantity",30006:"Please specify the order ID",30007:"Please specify the order ID array",30009:"Please specify the stock",30012:"Please specify the order price",30013:"Trade Please specify either",30015:"Please specify the order type",30016:"Please specify asset name",30019:"Please specify uuid",30039:"Please specify the amount to be withdrawn",40001:"The order quantity is invalid",40006:"Count value is invalid",40007:"End time is invalid",40008:"end_id Value is invalid",40009:"The from_id value is invalid",40013:"The order ID is invalid",40014:"The order ID array is invalid",40015:"Too many specified orders",40017:"Incorrect issue name",40020:"The order price is invalid",40021:"The trading classification is invalid",40022:"Start date is invalid",40024:"The order type is invalid",40025:"Incorrect asset name",40028:"uuid is invalid",40048:"The amount of withdrawal is illegal",50003:"Currently, this account is in a state where you can not perform the operation you specified. Please contact support",50004:"Currently, this account is temporarily registered. Please try again after registering your account",50005:"Currently, this account is locked. Please contact support",50006:"Currently, this account is locked. Please contact support",50008:"User identification has not been completed",50009:"Your order does not exist",50010:"Can not cancel specified order",50011:"API not found",60001:"The number of possessions is insufficient",60002:"It exceeds the quantity upper limit of the tender buying order",60003:"The specified quantity exceeds the limit",60004:"The specified quantity is below the threshold",60005:"The specified price is above the limit",60006:"The specified price is below the lower limit",70001:"A system error occurred. Please contact support",70002:"A system error occurred. Please contact support",70003:"A system error occurred. Please contact support",70004:"We are unable to accept orders as the transaction is currently suspended",70005:"Order can not be accepted because purchase order is currently suspended",70006:"We can not accept orders because we are currently unsubscribed ",70009:"We are currently temporarily restricting orders to be carried out. Please use the limit order.",70010:"We are temporarily raising the minimum order quantity as the system load is now rising."},t=this.exceptions,i=this.safeString(u,"code"),s=this.safeString(e,i,"Error"),a=this.safeValue(t,i);throw void 0!==a?new a(s):new r.ExchangeError(this.id+" "+this.json(o))}}}},668:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(5140);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitbay",alias:!0})}}},7790:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(657),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitbns",name:"Bitbns",countries:["IN"],rateLimit:1e3,certified:!1,pro:!1,version:"v2",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:void 0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:"emulated",fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!1},hostname:"bitbns.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/117201933-e7a6e780-adf5-11eb-9d80-98fc2a21c3d6.jpg",api:{www:"https://{hostname}",v1:"https://api.{hostname}/api/trade/v1",v2:"https://api.{hostname}/api/trade/v2"},www:"https://bitbns.com",referral:"https://ref.bitbns.com/1090961",doc:["https://bitbns.com/trade/#/api-trading/"],fees:"https://bitbns.com/fees"},api:{www:{get:["order/fetchMarkets","order/fetchTickers","order/fetchOrderbook","order/getTickerWithVolume","exchangeData/ohlc","exchangeData/orderBook","exchangeData/tradedetails"]},v1:{get:["platform/status","tickers","orderbook/sell/{symbol}","orderbook/buy/{symbol}"],post:["currentCoinBalance/EVERYTHING","getApiUsageStatus/USAGE","getOrderSocketToken/USAGE","currentCoinBalance/{symbol}","orderStatus/{symbol}","depositHistory/{symbol}","withdrawHistory/{symbol}","withdrawHistoryAll/{symbol}","depositHistoryAll/{symbol}","listOpenOrders/{symbol}","listOpenStopOrders/{symbol}","getCoinAddress/{symbol}","placeSellOrder/{symbol}","placeBuyOrder/{symbol}","buyStopLoss/{symbol}","sellStopLoss/{symbol}","cancelOrder/{symbol}","cancelStopLossOrder/{symbol}","listExecutedOrders/{symbol}","placeMarketOrder/{symbol}","placeMarketOrderQnty/{symbol}"]},v2:{post:["orders","cancel","getordersnew","marginOrders"]}},fees:{trading:{feeSide:"quote",tierBased:!1,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.0025")}},precisionMode:n.sh,exceptions:{exact:{400:r.BadRequest,409:r.BadSymbol,416:r.InsufficientFunds,417:r.OrderNotFound},broad:{}}})}async fetchStatus(e={}){const t=await this.v1GetPlatformStatus(e),i=this.safeString(t,"status");return{status:this.safeString({1:"ok"},i,i),updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){const t=await this.wwwGetOrderFetchMarkets(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"id"),a=this.safeString(s,"base"),n=this.safeString(s,"quote"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=this.safeValue(s,"precision",{}),h=this.safeValue(s,"limits",{}),u=this.safeValue(h,"amount",{}),l=this.safeValue(h,"price",{}),p=this.safeValue(h,"cost",{}),f="USDT"===n?a+"_"+n:a;i.push({id:r,uppercaseId:f,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(c,"amount"))),price:this.parseNumber(this.parsePrecision(this.safeString(c,"price")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(u,"min"),max:this.safeNumber(u,"max")},price:{min:this.safeNumber(l,"min"),max:this.safeNumber(l,"max")},cost:{min:this.safeNumber(p,"min"),max:this.safeNumber(p,"max")}},info:s})}return i}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit=t);const a=await this.wwwGetOrderFetchOrderbook(this.extend(r,i)),n=this.safeInteger(a,"timestamp");return this.parseOrderBook(a,s.symbol,n)}parseTicker(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeString(e,"last");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidVolume"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askVolume"),vwap:this.safeString(e,"vwap"),open:this.safeString(e,"open"),close:a,last:a,previousClose:this.safeString(e,"previousClose"),change:this.safeString(e,"change"),percentage:this.safeString(e,"percentage"),average:this.safeString(e,"average"),baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.wwwGetOrderFetchTickers(t);return this.parseTickers(i,e)}parseBalance(e){const t=void 0,i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeValue(e,"data",{}),r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e],a=t.split("availableorder");if(a.length>1){let e=this.safeString(a,1);"Money"===e&&(e="INR");const r=this.safeCurrencyCode(e),n=this.account();n.free=this.safeString(s,t),n.used=this.safeString(s,"inorder"+e),i[r]=n}}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v1PostCurrentCoinBalanceEVERYTHING(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({0:"open"},e,e)}parseOrder(e,t=undefined){const i=this.safeString2(e,"id","entry_id"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.parse8601(this.safeString(e,"time")),n=this.safeString(e,"rate"),o=this.safeString2(e,"amount","btc"),d=this.safeString(e,"filled"),c=this.safeString(e,"remaining"),h=this.safeString(e,"avg_cost"),u=this.safeString(e,"cost");let l=this.safeStringLower(e,"type");"0"===l&&(l="limit");const p=this.parseOrderStatus(this.safeString(e,"status")),f=this.safeStringLower(e,"side"),m=this.safeNumber(e,"fee");let v;return void 0!==m&&(v={cost:m,currency:void 0}),this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:r,type:l,timeInForce:void 0,postOnly:void 0,side:f,price:n,stopPrice:void 0,triggerPrice:void 0,amount:o,cost:u,average:h,filled:d,remaining:c,status:p,fee:v,trades:void 0},t)}async createOrder(e,t,i,s,a=undefined,n={}){if("limit"!==t&&"market"!==t)throw new r.ExchangeError(this.id+" allows limit and market orders only");await this.loadMarkets();const o=this.market(e),d={side:i.toUpperCase(),symbol:o.uppercaseId,quantity:this.amountToPrecision(e,s)};let c="v2PostOrders";if("limit"===t)d.rate=this.priceToPrecision(e,a);else{if("market"!==t)throw new r.ExchangeError(this.id+" allows limit and market orders only");c="v1PostPlaceMarketOrderQntySymbol",d.market=o.quoteId}const h=await this[c](this.extend(d,n));return this.parseOrder(h,o)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a="USDT"===s.quoteId?"usdtcancelOrder":"cancelOrder",n={entry_id:e,symbol:s.uppercaseId,side:a},o=await this.v2PostCancel(this.extend(n,i));return this.parseOrder(o,s)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={symbol:s.id,entry_id:e},n=await this.v1PostOrderStatusSymbol(this.extend(a,i)),o=this.safeValue(n,"data",[]),d=this.safeValue(o,0);return this.parseOrder(d,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n="USDT"===a.quoteId?"usdtListOpenOrders":"listOpenOrders",o={symbol:a.uppercaseId,side:n,page:0},d=await this.v2PostGetordersnew(this.extend(o,s)),c=this.safeValue(d,"data",[]);return this.parseOrders(c,a,t,i)}parseTrade(e,t=undefined){t=this.safeMarket(void 0,t);const i=this.safeString2(e,"id","tradeId");let s=this.parse8601(this.safeString(e,"date"));s=this.safeInteger(e,"timestamp",s);const r=this.safeString2(e,"rate","price");let n=this.safeString(e,"amount"),o=this.safeStringLower(e,"type");void 0!==o&&(o.indexOf("buy")>=0?o="buy":o.indexOf("sell")>=0&&(o="sell"));const d=this.safeString(e,"factor");let c;void 0!==d?n=a.O.stringDiv(n,d):(n=this.safeString(e,"base_volume"),c=this.safeString(e,"quote_volume"));const h=t.symbol;let u;const l=this.safeString(e,"fee");return void 0!==l&&(u={cost:l,currency:t.quote}),this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:h,id:i,order:i,type:void 0,side:o,takerOrMaker:void 0,price:r,amount:n,cost:c,fee:u},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id,page:0};void 0!==t&&(n.since=this.iso8601(t));const o=await this.v1PostListExecutedOrdersSymbol(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,a,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={coin:a.baseId,market:a.quoteId},o=await this.wwwGetExchangeDataTradedetails(this.extend(n,s));return this.parseTrades(o,a,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const a=this.currency(e),n={symbol:a.id,page:0},o=await this.v1PostDepositHistorySymbol(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTransactions(d,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const a=this.currency(e),n={symbol:a.id,page:0},o=await this.v1PostWithdrawHistorySymbol(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTransactions(d,a,t,i)}parseTransactionStatusByType(e,t=undefined){const i=this.safeValue({deposit:{0:"pending",1:"ok"},withdrawal:{0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",6:"ok"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"unit"),s=this.safeCurrencyCode(i,t),r=this.parse8601(this.safeString2(e,"date","timestamp"));let a=this.safeString(e,"type");const n=this.safeString(e,"expTime","");let o;void 0!==a&&(a.indexOf("deposit")>=0?(a="deposit",o="ok"):(a.indexOf("withdraw")>=0||n.indexOf("withdraw")>=0)&&(a="withdrawal"));const d=this.safeNumber(e,"amount"),c=this.safeNumber(e,"fee");let h;return void 0!==c&&(h={currency:s,cost:c}),{info:e,id:void 0,txid:void 0,timestamp:r,datetime:this.iso8601(r),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:a,amount:d,currency:s,status:o,updated:void 0,internal:void 0,fee:h}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={symbol:this.currency(e).id},s=await this.v1PostGetCoinAddressSymbol(this.extend(i,t)),r=this.safeValue(s,"data",{}),a=this.safeString(r,"token"),n=this.safeString(r,"tag");return this.checkAddress(a),{currency:e,address:a,tag:n,network:void 0,info:s}}nonce(){return this.milliseconds()}sign(e,t="www",i="GET",s={},a=undefined,n=undefined){if(!(t in this.urls.api))throw new r.ExchangeError(this.id+" does not have a testnet/sandbox URL for "+t+" endpoints");"www"!==t&&(this.checkRequiredCredentials(),a={"X-BITBNS-APIKEY":this.apiKey});let d=this.implodeHostname(this.urls.api[t])+"/"+this.implodeParams(e,s);const c=this.omit(s,this.extractParams(e)),h=this.nonce().toString();if("GET"===i)Object.keys(c).length&&(d+="?"+this.urlencode(c));else if("POST"===i){const e={timeStamp_nonce:h,body:n=Object.keys(c).length?this.json(c):"{}"},t=this.stringToBase64(this.json(e)),i=this.hmac(t,this.encode(this.secret),o.o);a["X-BITBNS-PAYLOAD"]=t,a["X-BITBNS-SIGNATURE"]=i,a["Content-Type"]="application/x-www-form-urlencoded"}return{url:d,method:i,body:n,headers:a}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"code"),u=this.safeString(o,"msg");if(void 0!==h&&"200"!==h&&"204"!==h||void 0!==u){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e),new r.ExchangeError(e)}}}},1819:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(5788);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitcoincom",alias:!0})}}},6537:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(4928),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitfinex",name:"Bitfinex",countries:["VG"],version:"v1",rateLimit:666.666,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchDeposits:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchIndexOHLCV:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:!0,fetchWithdrawals:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg",api:{v2:"https://api-pub.bitfinex.com",public:"https://api.bitfinex.com",private:"https://api.bitfinex.com"},www:"https://www.bitfinex.com",referral:"https://www.bitfinex.com/?refcode=P61eYxFL",doc:["https://docs.bitfinex.com/v1/docs","https://github.com/bitfinexcom/bitfinex-api-node"]},api:{v2:{get:{"platform/status":3,tickers:1,"ticker/{symbol}":1,"tickers/hist":1,"trades/{symbol}/hist":1,"book/{symbol}/{precision}":.375,"book/{symbol}/P0":.375,"book/{symbol}/P1":.375,"book/{symbol}/P2":.375,"book/{symbol}/P3":.375,"book/{symbol}/R0":.375,"stats1/{key}:{size}:{symbol}:{side}/{section}":1,"stats1/{key}:{size}:{symbol}/{section}":1,"stats1/{key}:{size}:{symbol}:long/last":1,"stats1/{key}:{size}:{symbol}:long/hist":1,"stats1/{key}:{size}:{symbol}:short/last":1,"stats1/{key}:{size}:{symbol}:short/hist":1,"candles/trade:{timeframe}:{symbol}/{section}":1,"candles/trade:{timeframe}:{symbol}/last":1,"candles/trade:{timeframe}:{symbol}/hist":1}},public:{get:{"book/{symbol}":1,"lendbook/{currency}":6,"lends/{currency}":3,"pubticker/{symbol}":3,"stats/{symbol}":6,symbols:18,symbols_details:18,tickers:1,"trades/{symbol}":3}},private:{post:{account_fees:18,account_infos:6,balances:9.036,basket_manage:6,credits:6,"deposit/new":18,"funding/close":6,history:6,"history/movements":6,key_info:6,margin_infos:3,mytrades:3,mytrades_funding:6,"offer/cancel":6,"offer/new":6,"offer/status":6,offers:6,"offers/hist":90.03,"order/cancel":.2,"order/cancel/all":.2,"order/cancel/multi":.2,"order/cancel/replace":.2,"order/new":.2,"order/new/multi":.2,"order/status":.2,orders:.2,"orders/hist":90.03,"position/claim":18,"position/close":18,positions:18,summary:18,taken_funds:6,total_taken_funds:6,transfer:18,unused_taken_funds:6,withdraw:18}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("500000"),this.parseNumber("0.002")],[this.parseNumber("1000000"),this.parseNumber("0.002")],[this.parseNumber("2500000"),this.parseNumber("0.002")],[this.parseNumber("5000000"),this.parseNumber("0.002")],[this.parseNumber("7500000"),this.parseNumber("0.002")],[this.parseNumber("10000000"),this.parseNumber("0.0018")],[this.parseNumber("15000000"),this.parseNumber("0.0016")],[this.parseNumber("20000000"),this.parseNumber("0.0014")],[this.parseNumber("25000000"),this.parseNumber("0.0012")],[this.parseNumber("30000000"),this.parseNumber("0.001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("500000"),this.parseNumber("0.0008")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0002")],[this.parseNumber("7500000"),this.parseNumber("0")],[this.parseNumber("10000000"),this.parseNumber("0")],[this.parseNumber("15000000"),this.parseNumber("0")],[this.parseNumber("20000000"),this.parseNumber("0")],[this.parseNumber("25000000"),this.parseNumber("0")],[this.parseNumber("30000000"),this.parseNumber("0")]]}},funding:{tierBased:!1,percentage:!1,deposit:{},withdraw:{}}},commonCurrencies:{ALG:"ALGO",AMP:"AMPL",ATO:"ATOM",BCHABC:"XEC",BCHN:"BCH",DAT:"DATA",DOG:"MDOGE",DSH:"DASH",EDO:"PNT",EUS:"EURS",EUT:"EURT",IDX:"ID",IOT:"IOTA",IQX:"IQ",LUNA:"LUNC",LUNA2:"LUNA",MNA:"MANA",ORS:"ORS Group",PAS:"PASS",QSH:"QASH",QTM:"QTUM",RBT:"RBTC",SNG:"SNGLS",STJ:"STORJ",TERRAUST:"USTC",TSD:"TUSD",YGG:"YEED",YYW:"YOYOW",UDC:"USDC",UST:"USDT",VSY:"VSYS",WAX:"WAXP",XCH:"XCHF",ZBT:"ZB"},exceptions:{exact:{temporarily_unavailable:r.ExchangeNotAvailable,"Order could not be cancelled.":r.OrderNotFound,"No such order found.":r.OrderNotFound,"Order price must be positive.":r.InvalidOrder,"Could not find a key matching the given X-BFX-APIKEY.":r.AuthenticationError,'Key price should be a decimal number, e.g. "123.456"':r.InvalidOrder,'Key amount should be a decimal number, e.g. "123.456"':r.InvalidOrder,ERR_RATE_LIMIT:r.RateLimitExceeded,Ratelimit:r.RateLimitExceeded,"Nonce is too small.":r.InvalidNonce,"No summary found.":r.ExchangeError,"Cannot evaluate your available balance, please try again":r.ExchangeNotAvailable,"Unknown symbol":r.BadSymbol,"Cannot complete transfer. Exchange balance insufficient.":r.InsufficientFunds,"Momentary balance check. Please wait few seconds and try the transfer again.":r.ExchangeError},broad:{"Invalid X-BFX-SIGNATURE":r.AuthenticationError,"This API key does not have permission":r.PermissionDenied,"not enough exchange balance for ":r.InsufficientFunds,"minimum size for ":r.InvalidOrder,"Invalid order":r.InvalidOrder,"The available balance is only":r.InsufficientFunds}},precisionMode:n.tV,options:{currencyNames:{AGI:"agi",AID:"aid",AIO:"aio",ANT:"ant",AVT:"aventus",BAT:"bat",BCH:"bab",BCI:"bci",BFT:"bft",BSV:"bsv",BTC:"bitcoin",BTG:"bgold",CFI:"cfi",COMP:"comp",DAI:"dai",DADI:"dad",DASH:"dash",DATA:"datacoin",DTH:"dth",EDO:"eidoo",ELF:"elf",EOS:"eos",ETC:"ethereumc",ETH:"ethereum",ETP:"metaverse",FUN:"fun",GNT:"golem",IOST:"ios",IOTA:"iota",LEO:"let",LINK:"link",LRC:"lrc",LTC:"litecoin",LYM:"lym",MANA:"mna",MIT:"mit",MKR:"mkr",MTN:"mtn",NEO:"neo",ODE:"ode",OMG:"omisego",OMNI:"mastercoin",QASH:"qash",QTUM:"qtum",RCN:"rcn",RDN:"rdn",REP:"rep",REQ:"req",RLC:"rlc",SAN:"santiment",SNGLS:"sng",SNT:"status",SPANK:"spk",STORJ:"stj",TNB:"tnb",TRX:"trx",TUSD:"tsd",USD:"wire",USDC:"udc",UTK:"utk",USDT:"tetheruso",VEE:"vee",WAX:"wax",XLM:"xlm",XMR:"monero",XRP:"ripple",XVG:"xvg",YOYOW:"yoyow",ZEC:"zcash",ZRX:"zrx",XTZ:"xtz"},orderTypes:{limit:"exchange limit",market:"exchange market"},fiat:{USD:"USD",EUR:"EUR",JPY:"JPY",GBP:"GBP",CNH:"CNH"},accountsByType:{spot:"exchange",margin:"trading",funding:"deposit",swap:"trading"}}})}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i={},s=await this.privatePostAccountFees(t),r=this.safeValue(s,"withdraw"),a=Object.keys(r);for(let t=0;t<a.length;t++){const s=a[t],n=this.safeCurrencyCode(s);(void 0===e||this.inArray(n,e))&&(i[n]={withdraw:this.safeNumber(r,s),deposit:{},info:this.safeNumber(r,s)})}return i}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privatePostAccountFees(t),s=this.safeValue(i,"withdraw");return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFee(e,t=undefined){return{withdraw:{fee:this.parseNumber(e),percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{},info:e}}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostSummary(e),i={},s=this.safeValue(this.options,"fiat",{}),r=this.safeNumber(t,"maker_fee"),a=this.safeNumber(t,"taker_fee"),n=this.safeNumber(t,"maker_fee_2fiat"),o=this.safeNumber(t,"taker_fee_2fiat"),d=this.safeNumber(t,"maker_fee_2deriv"),c=this.safeNumber(t,"taker_fee_2deriv");for(let e=0;e<this.symbols.length;e++){const h=this.symbols[e],u=this.market(h),l={info:t,symbol:h,percentage:!0,tierBased:!0};u.quote in s?(l.maker=n,l.taker=o):u.contract?(l.maker=d,l.taker=c):(l.maker=r,l.taker=a),i[h]=l}return i}async fetchMarkets(e={}){const t=await this.publicGetSymbols(),i=await this.publicGetSymbolsDetails(),s=[];for(let e=0;e<i.length;e++){const r=i[e];let a,n,o=this.safeString(r,"pair");if(!this.inArray(o,t))continue;if(o=o.toUpperCase(),o.indexOf(":")>=0){const e=o.split(":");a=e[0],n=e[1]}else a=o.slice(0,3),n=o.slice(3,6);const d=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),h=d+"/"+c;let u="spot";o.indexOf("F0")>-1&&(u="swap"),s.push({id:o,symbol:h,base:d,quote:c,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:u,spot:"spot"===u,margin:this.safeValue(r,"margin"),swap:"swap"===u,future:!1,option:!1,active:!0,contract:"swap"===u,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:parseInt("8"),price:this.safeInteger(r,"price_precision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(r,"minimum_order_size"),max:this.safeNumber(r,"maximum_order_size")},price:{min:this.parseNumber("1e-8"),max:void 0},cost:{min:void 0,max:void 0}},info:r})}return s}amountToPrecision(e,t){return e=this.safeSymbol(e),this.decimalToPrecision(t,n.tk,this.markets[e].precision.amount,n.nr)}priceToPrecision(e,t){return e=this.safeSymbol(e),t=this.decimalToPrecision(t,n.oU,this.markets[e].precision.price,this.precisionMode),this.decimalToPrecision(t,n.tk,8,n.nr)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeValue(this.options,"accountsByType",{}),i=this.safeString(e,"type","exchange"),s=this.safeString(t,i,i);if(void 0===s){const e=Object.keys(t);throw new r.ExchangeError(this.id+" fetchBalance() type parameter must be one of "+e.join(", "))}const a=this.omit(e,"type"),n=await this.privatePostBalances(a),o={info:n},d="derivatives"===i;for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"type"),r=this.safeStringLower(t,"currency",""),a=r.length-2,c="f0"===r.slice(a);if(s===i&&(!d||c)){const e=this.safeCurrencyCode(r);if(!(e in o)){const i=this.account();i.free=this.safeString(t,"available"),i.total=this.safeString(t,"amount"),o[e]=i}}}return this.safeBalance(o)}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c=this.currency(e),h=this.convertDerivativesId(c.id,i),u=this.convertDerivativesId(c.id,s),l=this.currencyToPrecision(e,t),p={amount:l,currency:h,currency_to:u,walletfrom:o,walletto:d},f=await this.privatePostTransfer(this.extend(p,a)),m=this.safeValue(f,0);if(void 0===this.safeString(m,"message"))throw new r.ExchangeError(this.id+" transfer failed");return this.extend(this.parseTransfer(m,c),{fromAccount:i,toAccount:s,amount:this.parseNumber(l)})}parseTransfer(e,t=undefined){const i=this.milliseconds();return{info:e,id:void 0,timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(this.safeString(e,"status"))}}parseTransferStatus(e){return this.safeString({SUCCESS:"ok"},e,e)}convertDerivativesId(e,t){const i=e.length-2,s="F0"===e.slice(i);return"derivatives"!==t&&"trading"!==t&&"margin"!==t&&s?e=e.slice(0,i):"derivatives"!==t||s||(e+="F0"),e}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit_bids=t,r.limit_asks=t);const a=await this.publicGetBookSymbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","amount")}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTickers(t),s={};for(let e=0;e<i.length;e++){const t=this.parseTicker(i[e]);s[t.symbol]=t}return this.filterByArray(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetPubtickerSymbol(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t=undefined){const i=this.safeTimestamp(e,"timestamp"),s=this.safeString(t,"pair"),r=(t=this.safeMarket(s,t)).symbol,a=this.safeString(e,"last_price");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"mid"),baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}parseTrade(e,t=undefined){const i=this.safeString(e,"tid"),s=this.safeTimestamp(e,"timestamp"),r=this.safeStringLower(e,"type"),n=this.safeString(e,"order_id"),o=this.safeString(e,"price"),d=this.safeString(e,"amount");let c;if("fee_amount"in e){const t=a.O.stringNeg(this.safeString(e,"fee_amount")),i=this.safeString(e,"fee_currency");c={cost:t,currency:this.safeCurrencyCode(i)}}return this.safeTrade({id:i,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,order:n,side:r,takerOrMaker:void 0,price:o,amount:d,cost:void 0,fee:c},t)}async fetchTrades(e,t=undefined,i=50,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id,limit_trades:i};void 0!==t&&(a.timestamp=this.parseToInt(t/1e3));const n=await this.publicGetTradesSymbol(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a `symbol` argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.limit_trades=i),void 0!==t&&(n.timestamp=this.parseToInt(t/1e3));const o=await this.privatePostMytrades(this.extend(n,s));return this.parseTrades(o,a,t,i)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeValue(a,"postOnly",!1);t=t.toLowerCase(),a=this.omit(a,["postOnly"]),n.spot&&(t=this.safeStringLower(this.options.orderTypes,t,t));const d={symbol:n.id,side:i,amount:this.amountToPrecision(e,s),type:t,ocoorder:!1,buy_price_oco:0,sell_price_oco:0};t.indexOf("market")>-1?d.price=this.nonce().toString():d.price=this.priceToPrecision(e,r),o&&(d.is_postonly=!0);const c=await this.privatePostOrderNew(this.extend(d,a));return this.parseOrder(c,n)}async editOrder(e,t,i,s,r=undefined,a=undefined,n={}){await this.loadMarkets();const o={order_id:parseInt(e)};void 0!==a&&(o.price=this.priceToPrecision(t,a)),void 0!==r&&(o.amount=this.numberToString(r)),void 0!==t&&(o.symbol=this.marketId(t)),void 0!==s&&(o.side=s),void 0!==i&&(o.type=this.safeString(this.options.orderTypes,i,i));const d=await this.privatePostOrderCancelReplace(this.extend(o,n));return this.parseOrder(d)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:parseInt(e)};return await this.privatePostOrderCancel(this.extend(s,i))}async cancelAllOrders(e=undefined,t={}){return await this.privatePostOrderCancelAll(t)}parseOrder(e,t=undefined){const i=this.safeString(e,"side"),s=this.safeValue(e,"is_live"),r=this.safeValue(e,"is_cancelled");let a;a=s?"open":r?"canceled":"closed";const n=this.safeStringUpper(e,"symbol"),o=this.safeSymbol(n,t);let d=this.safeString(e,"type","");d.indexOf("exchange ")>=0&&(d=e.type.split(" ")[1]);const c=this.safeTimestamp(e,"timestamp"),h=this.safeString(e,"id");return this.safeOrder({info:e,id:h,clientOrderId:void 0,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,symbol:o,type:d,timeInForce:void 0,postOnly:void 0,side:i,price:this.safeString(e,"price"),stopPrice:void 0,triggerPrice:void 0,average:this.safeString(e,"avg_execution_price"),amount:this.safeString(e,"original_amount"),remaining:this.safeString(e,"remaining_amount"),filled:this.safeString(e,"executed_amount"),status:a,fee:void 0,cost:void 0,trades:void 0},t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0!==e&&!(e in this.markets))throw new r.ExchangeError(this.id+" has no symbol "+e);const a=await this.privatePostOrders(s);let n=this.parseOrders(a,void 0,t,i);return void 0!==e&&(n=this.filterBy(n,"symbol",e)),n}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r={};void 0!==i&&(r.limit=i);const a=await this.privatePostOrdersHist(this.extend(r,s));let n=this.parseOrders(a,void 0,t,i);return void 0!==e&&(n=this.filterBy(n,"symbol",e)),n=this.filterByArray(n,"status",["closed","canceled"],!1),n}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:parseInt(e)},r=await this.privatePostOrderStatus(this.extend(s,i));return this.parseOrder(r)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets(),void 0===s&&(s=100);const a=this.market(e),n={symbol:"t"+a.id,timeframe:this.safeString(this.timeframes,t,t),sort:1,limit:s};void 0!==i&&(n.start=i);const o=await this.v2GetCandlesTradeTimeframeSymbolHist(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}getCurrencyName(e){if(e in this.options.currencyNames)return this.options.currencyNames[e];throw new r.NotSupported(this.id+" "+e+" not supported for withdrawal")}async createDepositAddress(e,t={}){return await this.loadMarkets(),await this.fetchDepositAddress(e,this.extend({renew:1},t))}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={method:this.getCurrencyName(e),wallet_name:"exchange",renew:0},s=await this.privatePostDepositNew(this.extend(i,t));let r,a=this.safeValue(s,"address");return"address_pool"in s&&(r=a,a=s.address_pool),this.checkAddress(a),{currency:e,address:a,tag:r,network:void 0,info:s}}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let a=this.safeString(s,"currency");const n=this.omit(s,"currency");let o;if(void 0===a){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchTransactions() requires a currency `code` argument or a `currency` parameter");o=this.currency(e),a=o.id}n.currency=a,void 0!==t&&(n.since=this.parseToInt(t/1e3));const d=await this.privatePostHistoryMovements(this.extend(n,s));return this.parseTransactions(d,o,t,i)}parseTransaction(e,t=undefined){const i=this.safeTimestamp(e,"timestamp_created"),s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s,t);let n=this.safeString(e,"fee");return void 0!==n&&(n=a.O.stringAbs(n)),{info:e,id:this.safeString2(e,"id","withdrawal_id"),txid:this.safeString(e,"txid"),type:this.safeStringLower(e,"type"),currency:r,network:void 0,amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatus(this.safeString(e,"status")),timestamp:i,datetime:this.iso8601(i),address:this.safeString(e,"address"),addressFrom:void 0,addressTo:void 0,tag:this.safeString(e,"description"),tagFrom:void 0,tagTo:void 0,updated:this.safeTimestamp(e,"timestamp"),comment:void 0,fee:{currency:r,cost:this.parseNumber(n),rate:void 0}}}parseTransactionStatus(e){return this.safeString({SENDING:"pending",CANCELED:"canceled",ZEROCONFIRMED:"failed",COMPLETED:"ok"},e,e)}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.getCurrencyName(e),o=this.currency(e),d={withdraw_type:n,walletselected:"exchange",amount:this.numberToString(t),address:i};void 0!==s&&(d.payment_id=s);const c=await this.privatePostWithdraw(this.extend(d,a)),h=this.safeValue(c,0,{}),u=this.safeNumber(h,"withdrawal_id"),l=this.safeString(h,"message"),p=this.findBroadlyMatchedKey(this.exceptions.broad,l);if(0===u){if(void 0!==p)throw new(0,this.exceptions.broad[p])(this.id+" "+l);throw new r.ExchangeError(this.id+" withdraw returned an id of zero: "+this.json(h))}return this.parseTransaction(h,o)}async fetchPositions(e=undefined,t={}){return await this.loadMarkets(),await this.privatePostPositions(t)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/"+this.implodeParams(e,s);n="v2"===t?"/"+t+n:"/"+this.version+n;let d=this.omit(s,this.extractParams(e)),c=this.urls.api[t]+n;if(("public"===t||e.indexOf("/hist")>=0)&&Object.keys(d).length){const e="?"+this.urlencode(d);c+=e,n+=e}if("private"===t){this.checkRequiredCredentials();const e=this.nonce();d=this.extend({nonce:e.toString(),request:n},d),a=this.json(d);const t=this.stringToBase64(a),i=this.encode(this.secret),s=this.hmac(t,i,o.iC);r={"X-BFX-APIKEY":this.apiKey,"X-BFX-PAYLOAD":t,"X-BFX-SIGNATURE":s,"Content-Type":"application/json"}}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;let h=!1;if(e>=400)"{"===n[0]&&(h=!0);else{const e=this.safeValue(o,0,{});"error"===this.safeString(e,"status","")&&(h=!0)}if(h){const e=this.id+" "+n,t=this.safeString2(o,"message","error");throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new r.ExchangeError(e)}}}},730:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6689),r=i(2194),a=i(3420),n=i(9292),o=i(7110);class d extends a.Z{describe(){return this.deepExtend(super.describe(),{id:"bitfinex2",name:"Bitfinex",countries:["VG"],version:"v2",certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createLimitOrder:!0,createMarketOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!1,fetchBalance:!0,fetchClosedOrder:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchIndexOHLCV:!1,fetchLedger:!0,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchStatus:!0,fetchTickers:!0,fetchTime:!1,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:void 0,fetchTransactions:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},rateLimit:250,urls:{logo:"https://user-images.githubusercontent.com/1294454/27766244-e328a50c-5ed2-11e7-947b-041416579bb3.jpg",api:{v1:"https://api.bitfinex.com",public:"https://api-pub.bitfinex.com",private:"https://api.bitfinex.com"},www:"https://www.bitfinex.com",doc:["https://docs.bitfinex.com/v2/docs/","https://github.com/bitfinexcom/bitfinex-api-node"],fees:"https://www.bitfinex.com/fees"},api:{public:{get:{"conf/{config}":2.66,"conf/pub:{action}:{object}":2.66,"conf/pub:{action}:{object}:{detail}":2.66,"conf/pub:map:{object}":2.66,"conf/pub:map:{object}:{detail}":2.66,"conf/pub:map:currency:{detail}":2.66,"conf/pub:map:currency:sym":2.66,"conf/pub:map:currency:label":2.66,"conf/pub:map:currency:unit":2.66,"conf/pub:map:currency:undl":2.66,"conf/pub:map:currency:pool":2.66,"conf/pub:map:currency:explorer":2.66,"conf/pub:map:currency:tx:fee":2.66,"conf/pub:map:tx:method":2.66,"conf/pub:list:{object}":2.66,"conf/pub:list:{object}:{detail}":2.66,"conf/pub:list:currency":2.66,"conf/pub:list:pair:exchange":2.66,"conf/pub:list:pair:margin":2.66,"conf/pub:list:pair:futures":2.66,"conf/pub:list:competitions":2.66,"conf/pub:info:{object}":2.66,"conf/pub:info:{object}:{detail}":2.66,"conf/pub:info:pair":2.66,"conf/pub:info:pair:futures":2.66,"conf/pub:info:tx:status":2.66,"conf/pub:fees":2.66,"platform/status":8,tickers:2.66,"ticker/{symbol}":2.66,"tickers/hist":2.66,"trades/{symbol}/hist":2.66,"book/{symbol}/{precision}":1,"book/{symbol}/P0":1,"book/{symbol}/P1":1,"book/{symbol}/P2":1,"book/{symbol}/P3":1,"book/{symbol}/R0":1,"stats1/{key}:{size}:{symbol}:{side}/{section}":2.66,"stats1/{key}:{size}:{symbol}:{side}/last":2.66,"stats1/{key}:{size}:{symbol}:{side}/hist":2.66,"stats1/{key}:{size}:{symbol}/{section}":2.66,"stats1/{key}:{size}:{symbol}/last":2.66,"stats1/{key}:{size}:{symbol}/hist":2.66,"stats1/{key}:{size}:{symbol}:long/last":2.66,"stats1/{key}:{size}:{symbol}:long/hist":2.66,"stats1/{key}:{size}:{symbol}:short/last":2.66,"stats1/{key}:{size}:{symbol}:short/hist":2.66,"candles/trade:{timeframe}:{symbol}:{period}/{section}":2.66,"candles/trade:{timeframe}:{symbol}/{section}":2.66,"candles/trade:{timeframe}:{symbol}/last":2.66,"candles/trade:{timeframe}:{symbol}/hist":2.66,"status/{type}":2.66,"status/deriv":2.66,"liquidations/hist":80,"rankings/{key}:{timeframe}:{symbol}/{section}":2.66,"rankings/{key}:{timeframe}:{symbol}/hist":2.66,"pulse/hist":2.66,"pulse/profile/{nickname}":2.66,"funding/stats/{symbol}/hist":10},post:{"calc/trade/avg":2.66,"calc/fx":2.66}},private:{post:{"auth/r/wallets":2.66,"auth/r/wallets/hist":2.66,"auth/r/orders":2.66,"auth/r/orders/{symbol}":2.66,"auth/w/order/submit":2.66,"auth/w/order/update":2.66,"auth/w/order/cancel":2.66,"auth/w/order/multi":2.66,"auth/w/order/cancel/multi":2.66,"auth/r/orders/{symbol}/hist":2.66,"auth/r/orders/hist":2.66,"auth/r/order/{symbol}:{id}/trades":2.66,"auth/r/trades/{symbol}/hist":2.66,"auth/r/trades/hist":2.66,"auth/r/ledgers/{currency}/hist":2.66,"auth/r/ledgers/hist":2.66,"auth/r/info/margin/{key}":2.66,"auth/r/info/margin/base":2.66,"auth/r/info/margin/sym_all":2.66,"auth/r/positions":2.66,"auth/w/position/claim":2.66,"auth/w/position/increase:":2.66,"auth/r/position/increase/info":2.66,"auth/r/positions/hist":2.66,"auth/r/positions/audit":2.66,"auth/r/positions/snap":2.66,"auth/w/deriv/collateral/set":2.66,"auth/w/deriv/collateral/limits":2.66,"auth/r/funding/offers":2.66,"auth/r/funding/offers/{symbol}":2.66,"auth/w/funding/offer/submit":2.66,"auth/w/funding/offer/cancel":2.66,"auth/w/funding/offer/cancel/all":2.66,"auth/w/funding/close":2.66,"auth/w/funding/auto":2.66,"auth/w/funding/keep":2.66,"auth/r/funding/offers/{symbol}/hist":2.66,"auth/r/funding/offers/hist":2.66,"auth/r/funding/loans":2.66,"auth/r/funding/loans/hist":2.66,"auth/r/funding/loans/{symbol}":2.66,"auth/r/funding/loans/{symbol}/hist":2.66,"auth/r/funding/credits":2.66,"auth/r/funding/credits/hist":2.66,"auth/r/funding/credits/{symbol}":2.66,"auth/r/funding/credits/{symbol}/hist":2.66,"auth/r/funding/trades/{symbol}/hist":2.66,"auth/r/funding/trades/hist":2.66,"auth/r/info/funding/{key}":2.66,"auth/r/info/user":2.66,"auth/r/summary":2.66,"auth/r/logins/hist":2.66,"auth/r/permissions":2.66,"auth/w/token":2.66,"auth/r/audit/hist":2.66,"auth/w/transfer":2.66,"auth/w/deposit/address":24,"auth/w/deposit/invoice":24,"auth/w/withdraw":24,"auth/r/movements/{currency}/hist":2.66,"auth/r/movements/hist":2.66,"auth/r/alerts":5.33,"auth/w/alert/set":2.66,"auth/w/alert/price:{symbol}:{price}/del":2.66,"auth/w/alert/{type}:{symbol}:{price}/del":2.66,"auth/calc/order/avail":2.66,"auth/w/settings/set":2.66,"auth/r/settings":2.66,"auth/w/settings/del":2.66,"auth/r/pulse/hist":2.66,"auth/w/pulse/add":16,"auth/w/pulse/del":2.66}}},fees:{trading:{feeSide:"get",percentage:!0,tierBased:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("500000"),this.parseNumber("0.002")],[this.parseNumber("1000000"),this.parseNumber("0.002")],[this.parseNumber("2500000"),this.parseNumber("0.002")],[this.parseNumber("5000000"),this.parseNumber("0.002")],[this.parseNumber("7500000"),this.parseNumber("0.002")],[this.parseNumber("10000000"),this.parseNumber("0.0018")],[this.parseNumber("15000000"),this.parseNumber("0.0016")],[this.parseNumber("20000000"),this.parseNumber("0.0014")],[this.parseNumber("25000000"),this.parseNumber("0.0012")],[this.parseNumber("30000000"),this.parseNumber("0.001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("500000"),this.parseNumber("0.0008")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0002")],[this.parseNumber("7500000"),this.parseNumber("0")],[this.parseNumber("10000000"),this.parseNumber("0")],[this.parseNumber("15000000"),this.parseNumber("0")],[this.parseNumber("20000000"),this.parseNumber("0")],[this.parseNumber("25000000"),this.parseNumber("0")],[this.parseNumber("30000000"),this.parseNumber("0")]]}},funding:{withdraw:{}}},precisionMode:n.tV,options:{precision:"R0",exchangeTypes:{"EXCHANGE MARKET":"market","EXCHANGE LIMIT":"limit","EXCHANGE STOP":"market","EXCHANGE FOK":"limit","EXCHANGE STOP LIMIT":"limit","EXCHANGE IOC":"limit"},orderTypes:{market:"EXCHANGE MARKET",limit:"EXCHANGE LIMIT"},fiat:{USD:"USD",EUR:"EUR",JPY:"JPY",GBP:"GBP",CHN:"CHN"},v2AccountsByType:{spot:"exchange",exchange:"exchange",funding:"funding",margin:"margin",derivatives:"margin",future:"margin"}},exceptions:{exact:{10001:s.PermissionDenied,10020:s.BadRequest,10100:s.AuthenticationError,10114:s.InvalidNonce,20060:s.OnMaintenance,temporarily_unavailable:s.ExchangeNotAvailable},broad:{address:s.InvalidAddress,"available balance is only":s.InsufficientFunds,"not enough exchange balance":s.InsufficientFunds,"Order not found":s.OrderNotFound,"symbol: invalid":s.BadSymbol,"Invalid order":s.InvalidOrder}},commonCurrencies:{UST:"USDT",EUTF0:"EURT",USTF0:"USDT",ALG:"ALGO",AMP:"AMPL",ATO:"ATOM",BCHABC:"XEC",BCHN:"BCH",DAT:"DATA",DOG:"MDOGE",DSH:"DASH",EDO:"PNT",EUS:"EURS",EUT:"EURT",IDX:"ID",IOT:"IOTA",IQX:"IQ",LUNA:"LUNC",LUNA2:"LUNA",MNA:"MANA",ORS:"ORS Group",PAS:"PASS",QSH:"QASH",QTM:"QTUM",RBT:"RBTC",SNG:"SNGLS",STJ:"STORJ",TERRAUST:"USTC",TSD:"TUSD",YGG:"YEED",YYW:"YOYOW",UDC:"USDC",VSY:"VSYS",WAX:"WAXP",XCH:"XCHF",ZBT:"ZB"}})}isFiat(e){return e in this.options.fiat}getCurrencyId(e){return"f"+e}getCurrencyName(e){if(e in this.options.currencyNames)return this.options.currencyNames[e];throw new s.NotSupported(this.id+" "+e+" not supported for withdrawal")}amountToPrecision(e,t){return e=this.safeSymbol(e),this.decimalToPrecision(t,n.tk,this.markets[e].precision.amount,n.nr)}priceToPrecision(e,t){return e=this.safeSymbol(e),t=this.decimalToPrecision(t,n.oU,this.markets[e].precision.price,this.precisionMode),this.decimalToPrecision(t,n.tk,8,n.nr)}async fetchStatus(e={}){const t=await this.publicGetPlatformStatus(e),i=this.safeString(t,0);return{status:this.safeString({0:"maintenance",1:"ok"},i,i),updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){let t=await this.publicGetConfPubInfoPair(e),i=await this.publicGetConfPubInfoPairFutures(e);t=this.safeValue(t,0,[]),i=this.safeValue(i,0,[]);const s=this.arrayConcat(t,i);let r=await this.publicGetConfPubListPairMargin(e);r=this.safeValue(r,0,[]);const a=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeStringUpper(t,0),n=this.safeValue(t,1,{});let o=!0;i.indexOf("F0")>=0&&(o=!1);const d=!o;let c,h;if(i.indexOf(":")>=0){const e=i.split(":");c=e[0],h=e[1]}else c=i.slice(0,3),h=i.slice(3,6);let u=this.safeCurrencyCode(c),l=this.safeCurrencyCode(h);const p=u.split("F0"),f=l.split("F0");u=this.safeString(p,0),l=this.safeString(f,0);let m,v=u+"/"+l;c=this.getCurrencyId(c),h=this.getCurrencyId(h),d&&(m=l,v=v+":"+m);const g=this.safeString(n,3),y=this.safeString(n,4);let b=!1;this.inArray(i,r)&&(b=!0),a.push({id:"t"+i,symbol:v,base:u,quote:l,settle:m,baseId:c,quoteId:h,settleId:h,type:o?"spot":"swap",spot:o,margin:b,swap:d,future:!1,option:!1,active:!0,contract:d,linear:!!d||void 0,inverse:!d&&void 0,contractSize:d?this.parseNumber("1"):void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:parseInt("8"),price:parseInt("5")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(g),max:this.parseNumber(y)},price:{min:this.parseNumber("1e-8"),max:void 0},cost:{min:void 0,max:void 0}},info:n})}return a}async fetchCurrencies(e={}){const t={config:["pub:list:currency","pub:map:currency:sym","pub:map:currency:label","pub:map:currency:unit","pub:map:currency:undl","pub:map:currency:pool","pub:map:currency:explorer","pub:map:currency:tx:fee","pub:map:tx:method"].join(",")},i=await this.publicGetConfConfig(this.extend(t,e)),s={sym:this.indexBy(this.safeValue(i,1,[]),0),label:this.indexBy(this.safeValue(i,2,[]),0),unit:this.indexBy(this.safeValue(i,3,[]),0),undl:this.indexBy(this.safeValue(i,4,[]),0),pool:this.indexBy(this.safeValue(i,5,[]),0),explorer:this.indexBy(this.safeValue(i,6,[]),0),fees:this.indexBy(this.safeValue(i,7,[]),0)},r=this.safeValue(i,0,[]),a={};for(let e=0;e<r.length;e++){const t=r[e];if(t.indexOf("F0")>=0)continue;const n=this.safeCurrencyCode(t),o=this.safeValue(s.label,t,[]),d=this.safeString(o,1),c=this.safeValue(s.pool,t,[]),h=this.safeString(c,1),u=this.safeValue(s.fees,t,[]),l=this.safeValue(u,1,[]),p=this.safeNumber(l,1),f=this.safeValue(s.undl,t,[]),m="8",v="f"+t;a[n]={id:v,uppercaseId:t,code:n,info:[t,o,c,u,f],type:h,name:d,active:!0,deposit:void 0,withdraw:void 0,fee:p,precision:parseInt(m),limits:{amount:{min:this.parseNumber(this.parsePrecision(m)),max:void 0},withdraw:{min:p,max:void 0}}};const g={},y=this.safeValue(i,8,[]),b=t.replace("F0","");for(let e=0;e<y.length;e++){const t=y[e],i=this.safeString(t,0);this.safeString(this.safeValue(t,1,[]),0)===b&&(g[this.safeNetwork(i)]={info:i,id:i.toLowerCase(),network:i,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{withdraw:{min:void 0,max:void 0}}})}Object.keys(g).length>0&&(a[n].networks=g)}return a}safeNetwork(e){return this.safeString({BITCOIN:"BTC",LITECOIN:"LTC",ETHEREUM:"ERC20",TETHERUSE:"ERC20",TETHERUSO:"OMNI",TETHERUSL:"LIQUID",TETHERUSX:"TRC20",TETHERUSS:"EOS",TETHERUSDTAVAX:"AVAX",TETHERUSDTSOL:"SOL",TETHERUSDTALG:"ALGO",TETHERUSDTBCH:"BCH",TETHERUSDTKSM:"KSM",TETHERUSDTDVF:"DVF",TETHERUSDTOMG:"OMG"},e,e)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeValue(this.options,"v2AccountsByType",{}),i=this.safeString(e,"type","exchange"),r=this.safeString(t,i,i);if(void 0===r){const e=Object.keys(t);throw new s.ExchangeError(this.id+" fetchBalance() type parameter must be one of "+e.join(", "))}const a="derivatives"===i,n=this.omit(e,"type"),o=await this.privatePostAuthRWallets(n),d={info:o};for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,0),s=this.safeStringLower(t,1,""),n=s.length-2,c="f0"===s.slice(n);if(r===i&&(!a||c)){const e=this.safeCurrencyCode(s),i=this.account();i.total=this.safeString(t,2),i.free=this.safeString(t,4),d[e]=i}}return this.safeBalance(d)}async transfer(e,t,i,r,a={}){await this.loadMarkets();const n=this.safeValue(this.options,"v2AccountsByType",{}),o=this.safeString(n,i);if(void 0===o){const e=Object.keys(n);throw new s.ArgumentsRequired(this.id+" transfer() fromAccount must be one of "+e.join(", "))}const d=this.safeString(n,r);if(void 0===d){const e=Object.keys(n);throw new s.ArgumentsRequired(this.id+" transfer() toAccount must be one of "+e.join(", "))}const c=this.currency(e),h=this.convertDerivativesId(c,i),u=this.convertDerivativesId(c,r),l={amount:this.currencyToPrecision(e,t),currency:h,currency_to:u,from:o,to:d},p=await this.privatePostAuthWTransfer(this.extend(l,a));if("error"===this.safeString(p,0)){const e=this.safeString(p,2,"");throw this.throwExactlyMatchedException(this.exceptions.exact,e,this.id+" "+e),new s.ExchangeError(this.id+" "+e)}return this.parseTransfer(p,c)}parseTransfer(e,t=undefined){const i=this.safeInteger(e,0),s=this.safeValue(e,4),r=this.safeString(s,1),a=this.safeString(s,2),n=this.safeString(s,5),o=this.safeString(e,6);return{id:void 0,timestamp:i,datetime:this.iso8601(i),status:this.parseTransferStatus(o),amount:this.safeNumber(s,7),currency:this.safeCurrencyCode(n,t),fromAccount:r,toAccount:a,info:e}}parseTransferStatus(e){return this.safeString({SUCCESS:"ok",ERROR:"failed",FAILURE:"failed"},e,e)}convertDerivativesId(e,t){const i=this.safeValue(e,"info"),s=this.safeString(i,0),r=this.safeValue(i,4,[]);let a;if("derivatives"===t){a=this.safeString(r,0,s);const e=a.length-2;"F0"===a.slice(e)||(a+="F0")}else a="margin"!==t?this.safeString(r,1,s):s;return a}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue(this.options,"precision","R0"),a=this.market(e),n={symbol:a.id,precision:s};void 0!==t&&(n.len=t);const o=this.extend(n,i),d=await this.publicGetBookSymbolPrecision(o),c=this.milliseconds(),h={symbol:a.symbol,bids:[],asks:[],timestamp:c,datetime:this.iso8601(c),nonce:void 0},u="R0"===o.precision?1:0;for(let e=0;e<d.length;e++){const t=d[e],i=this.safeNumber(t,u),s=this.safeString(t,2),a=r.O.stringAbs(s);h[r.O.stringGt(s,"0")?"bids":"asks"].push([i,this.parseNumber(a)])}return h.bids=this.sortBy(h.bids,0,!0),h.asks=this.sortBy(h.asks,0),h}parseTicker(e,t=undefined){const i=this.milliseconds(),s=this.safeSymbol(void 0,t),a=e.length,n=this.safeString(e,a-4),o=this.safeString(e,a-5);return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,a-2),low:this.safeString(e,a-1),bid:this.safeString(e,a-10),bidVolume:void 0,ask:this.safeString(e,a-8),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:this.safeString(e,a-6),percentage:r.O.stringMul(o,"100"),average:void 0,baseVolume:this.safeString(e,a-3),quoteVolume:void 0,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==(e=this.marketSymbols(e))){const t=this.marketIds(e);i.symbols=t.join(",")}else i.symbols="ALL";const s=await this.publicGetTickers(this.extend(i,t)),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,0),a=this.safeMarket(i);r[a.symbol]=this.parseTicker(t,a)}return this.filterByArray(r,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetTickerSymbol(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=e.length>5,s=this.safeString(e,0),a=i?4:2;let n,o=this.safeString(e,a);const d=i?5:3,c=this.safeString(e,d);let h,u,l,p;"-"===o[0]?(n="sell",o=r.O.stringAbs(o)):n="buy";let f=this.safeSymbol(void 0,t);const m=i?2:1,v=this.safeInteger(e,m);if(i){const t=e[1];f=this.safeSymbol(t),h=this.safeString(e,3),u=1===this.safeInteger(e,8)?"maker":"taker";let i=this.safeString(e,9);i=r.O.stringNeg(i);const s=this.safeString(e,10);p={cost:i,currency:this.safeCurrencyCode(s)};const a=e[6];l=this.safeString(this.options.exchangeTypes,a)}return this.safeTrade({id:s,timestamp:v,datetime:this.iso8601(v),symbol:f,order:h,side:n,type:l,takerOrMaker:u,price:c,amount:o,cost:void 0,fee:p,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);let a="-1";const n={symbol:r.id};void 0!==t&&(n.start=t,a="1"),void 0!==i&&(n.limit=i),n.sort=a;const o=await this.publicGetTradesSymbolHist(this.extend(n,s)),d=this.sortBy(o,1);return this.parseTrades(d,r,void 0,i)}async fetchOHLCV(e,t="1m",i=undefined,s=100,r={}){await this.loadMarkets();const a=this.market(e);if(void 0===s&&(s=100),void 0===i){const e=this.parseTimeframe(t);i=this.milliseconds()-e*s*1e3}const n={symbol:a.id,timeframe:this.safeString(this.timeframes,t,t),sort:1,start:i,limit:s},o=await this.publicGetCandlesTradeTimeframeSymbolHist(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}parseOrderStatus(e){if(void 0===e)return e;const t=e.split(" "),i=this.safeString(t,0);return this.safeString({ACTIVE:"open",PARTIALLY:"open",EXECUTED:"closed",CANCELED:"canceled",INSUFFICIENT:"canceled","POSTONLY CANCELED":"canceled",RSN_DUST:"rejected",RSN_PAUSE:"rejected","IOC CANCELED":"canceled","FILLORKILL CANCELED":"canceled"},i,e)}parseOrderFlags(e){return this.safeValue({1024:["reduceOnly"],4096:["postOnly"],5120:["reduceOnly","postOnly"]},e,void 0)}parseTimeInForce(e){return this.safeString({"EXCHANGE IOC":"IOC","EXCHANGE FOK":"FOK",IOC:"IOC",FOK:"FOK"},e,"GTC")}parseOrder(e,t=undefined){const i=this.safeString(e,0),s=this.safeString(e,3),a=this.safeSymbol(s),n=this.safeInteger(e,5),o=r.O.stringAbs(this.safeString(e,6)),d=this.safeString(e,7),c=r.O.stringAbs(d),h=r.O.stringLt(d,"0")?"sell":"buy",u=this.safeString(e,8),l=this.safeString(this.safeValue(this.options,"exchangeTypes"),u),p=this.parseTimeInForce(u),f=this.safeString(e,12),m=this.parseOrderFlags(f);let v=!1;if(void 0!==m)for(let e=0;e<m.length;e++)"postOnly"===m[e]&&(v=!0);let g,y,b=this.safeString(e,16);"EXCHANGE STOP"!==u&&"EXCHANGE STOP LIMIT"!==u||(b=void 0,g=this.safeString(e,16),"EXCHANGE STOP LIMIT"===u&&(b=this.safeString(e,19)));const w=this.safeString(e,13);if(void 0!==w){const e=w.split(" @ ");y=this.parseOrderStatus(this.safeString(e,0))}const S=this.safeString(e,17),P=this.safeString(e,2);return this.safeOrder({info:e,id:i,clientOrderId:P,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,symbol:a,type:l,timeInForce:p,postOnly:v,side:h,price:b,stopPrice:g,triggerPrice:g,amount:c,cost:void 0,average:S,filled:void 0,remaining:o,status:y,fee:void 0,trades:void 0},t)}async createOrder(e,t,i,a,n=undefined,o={}){await this.loadMarkets();const d=this.market(e),c=this.safeValue(this.options,"orderTypes",{});let h=t.toUpperCase();d.spot&&(h=this.safeStringUpper(c,t,t));const u=this.safeString2(o,"stopPrice","triggerPrice"),l=this.safeString(o,"timeInForce"),p=this.safeValue(o,"postOnly",!1),f=this.safeValue(o,"reduceOnly",!1),m=this.safeValue2(o,"cid","clientOrderId");o=this.omit(o,["triggerPrice","stopPrice","timeInForce","postOnly","reduceOnly","price_aux_limit"]);let v=this.amountToPrecision(e,a);v="buy"===i?v:r.O.stringNeg(v);const g={type:h,symbol:d.id,amount:v},y="EXCHANGE STOP LIMIT"===h||"EXCHANGE LIMIT"===h&&void 0!==u,b="EXCHANGE STOP"===h,w="EXCHANGE MARKET"===h,S=b||w&&void 0!==u,P="EXCHANGE IOC"===h||"IOC"===l,k="EXCHANGE FOK"===h||"FOK"===l,O=p||"PO"===l;if((P||k)&&void 0===n)throw new s.InvalidOrder(this.id+" createOrder() requires a price argument with IOC and FOK orders");if((P||k)&&w)throw new s.InvalidOrder(this.id+" createOrder() does not allow market IOC and FOK orders");"MARKET"===h||w||b||(g.price=this.priceToPrecision(e,n)),(y||S)&&(g.price=this.priceToPrecision(e,u),S?g.type="EXCHANGE STOP":y&&(g.type="EXCHANGE STOP LIMIT",g.price_aux_limit=this.priceToPrecision(e,n))),P?g.type="EXCHANGE IOC":k&&(g.type="EXCHANGE FOK");let T=0;O&&(T=this.sum(T,4096)),f&&(T=this.sum(T,1024)),0!==T&&(g.flags=T),void 0!==m&&(g.cid=m,o=this.omit(o,["cid","clientOrderId"]));const A=await this.privatePostAuthWOrderSubmit(this.extend(g,o));if("SUCCESS"!==this.safeString(A,6)){const e=A[5],t=A[7];throw new s.ExchangeError(this.id+" "+A[6]+": "+t+" (#"+e+")")}const G=this.safeValue(A,4,[]),I=this.safeValue(G,0);return this.parseOrder(I,d)}async cancelAllOrders(e=undefined,t={}){const i=await this.privatePostAuthWOrderCancelMulti(this.extend({all:1},t)),s=this.safeValue(i,4,[]);return this.parseOrders(s)}async cancelOrder(e,t=undefined,i={}){const r=this.safeValue2(i,"cid","clientOrderId");let a;if(void 0!==r){const e=this.safeValue(i,"cidDate");if(void 0===e)throw new s.InvalidOrder(this.id+" canceling an order by clientOrderId ('cid') requires both 'cid' and 'cid_date' ('YYYY-MM-DD')");a={cid:r,cid_date:e},i=this.omit(i,["cid","clientOrderId"])}else a={id:parseInt(e)};const n=await this.privatePostAuthWOrderCancel(this.extend(a,i)),o=this.safeValue(n,4);return this.parseOrder(o)}async fetchOpenOrder(e,t=undefined,i={}){const r={id:[parseInt(e)]},a=await this.fetchOpenOrders(t,void 0,void 0,this.extend(r,i)),n=this.safeValue(a,0);if(void 0===n)throw new s.OrderNotFound(this.id+" order "+e+" not found");return n}async fetchClosedOrder(e,t=undefined,i={}){const r={id:[parseInt(e)]},a=await this.fetchClosedOrders(t,void 0,void 0,this.extend(r,i)),n=this.safeValue(a,0);if(void 0===n)throw new s.OrderNotFound(this.id+" order "+e+" not found");return n}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n;return void 0===e?n=await this.privatePostAuthROrders(this.extend(r,s)):(a=this.market(e),r.symbol=a.id,n=await this.privatePostAuthROrdersSymbol(this.extend(r,s))),this.parseOrders(n,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n;return void 0!==t&&(r.start=t),void 0!==i&&(r.limit=i),void 0===e?n=await this.privatePostAuthROrdersHist(this.extend(r,s)):(a=this.market(e),r.symbol=a.id,n=await this.privatePostAuthROrdersSymbolHist(this.extend(r,s))),this.parseOrders(n,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,r=undefined,a={}){if(void 0===t)throw new s.ArgumentsRequired(this.id+" fetchOrderTrades() requires a symbol argument");await this.loadMarkets();const n=this.market(t),o={id:parseInt(e),symbol:n.id},d=await this.privatePostAuthROrderSymbolIdTrades(this.extend(o,a));return this.parseTrades(d,n,i,r)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={end:this.milliseconds()};void 0!==t&&(a.start=t),void 0!==i&&(a.limit=i);let n="privatePostAuthRTradesHist";void 0!==e&&(r=this.market(e),a.symbol=r.id,n="privatePostAuthRTradesSymbolHist");const o=await this[n](this.extend(a,s));return this.parseTrades(o,r,t,i)}async createDepositAddress(e,t={}){return await this.loadMarkets(),await this.fetchDepositAddress(e,this.extend({op_renew:1},t))}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),r=this.safeString(t,"network",e),a=this.safeValue(i,"networks",{}),n=this.safeValue(a,r),o=this.safeString(n,"id");if(void 0===o)throw new s.ArgumentsRequired(this.id+" fetchDepositAddress() could not find a network for '"+e+"'. You can specify it by providing the 'network' value inside params");const d=this.safeString(t,"wallet","exchange");t=this.omit(t,"network","wallet");const c={method:o,wallet:d,op_renew:0},h=await this.privatePostAuthWDepositAddress(this.extend(c,t)),u=this.safeValue(h,4,[]),l=this.safeString(u,5),p=void 0===l?this.safeString(u,4):l,f=void 0===l?void 0:this.safeString(u,4);return this.checkAddress(p),{currency:e,address:p,tag:f,network:void 0,info:h}}parseTransactionStatus(e){return this.safeString({SUCCESS:"ok",ERROR:"failed",FAILURE:"failed",CANCELED:"canceled",COMPLETED:"ok"},e,e)}parseTransaction(e,t=undefined){const i=e.length;let s,a,n,o,d,c,h,u,l,p,f,m,v;if(8===i){const i=this.safeValue(e,4,[]);s=this.safeInteger(e,0),void 0!==t&&(n=t.code),l=this.safeString(i,8),void 0!==l&&(l=r.O.stringAbs(l)),o=this.safeNumber(i,5),d=this.safeValue(i,0),c="ok",0===d&&(d=void 0,c="failed"),h=this.safeString(i,3),u="withdrawal"}else if(22===i){d=this.safeString(e,0);const i=this.safeString(e,1);n=this.safeCurrencyCode(i,t);const h=this.safeString(e,2);m=this.safeNetwork(h),s=this.safeInteger(e,5),a=this.safeInteger(e,6),c=this.parseTransactionStatus(this.safeString(e,9));const g=this.safeString(e,12);o=r.O.stringAbs(g),void 0!==g&&(u=r.O.stringLt(g,"0")?"withdrawal":"deposit"),l=this.safeString(e,13),void 0!==l&&(l=r.O.stringAbs(l)),f=this.safeString(e,16),p=this.safeString(e,20),v=this.safeString(e,21)}return{info:e,id:d,txid:p,type:u,currency:n,network:m,amount:this.parseNumber(o),status:c,timestamp:s,datetime:this.iso8601(s),address:f,addressFrom:void 0,addressTo:f,tag:h,tagFrom:void 0,tagTo:h,updated:a,comment:v,fee:{currency:n,cost:this.parseNumber(l),rate:void 0}}}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostAuthRSummary(e),i={},s=this.safeValue(this.options,"fiat",{}),r=this.safeValue(t,4,[]),a=this.safeValue(r,0,[]),n=this.safeValue(r,1,[]),o=this.safeNumber(a,0),d=this.safeNumber(a,2),c=this.safeNumber(a,5),h=this.safeNumber(n,0),u=this.safeNumber(n,2),l=this.safeNumber(n,5);for(let e=0;e<this.symbols.length;e++){const r=this.symbols[e],a=this.market(r),n={info:t,symbol:r,percentage:!0,tierBased:!0};a.quote in s?(n.maker=d,n.taker=u):a.contract?(n.maker=c,n.taker=l):(n.maker=o,n.taker=h),i[r]=n}return i}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};let n="privatePostAuthRMovementsHist";void 0!==e&&(r=this.currency(e),a.currency=r.uppercaseId,n="privatePostAuthRMovementsCurrencyHist"),void 0!==t&&(a.start=t),void 0!==i&&(a.limit=i);const o=await this[n](this.extend(a,s));return this.parseTransactions(o,r,t,i)}async withdraw(e,t,i,r=undefined,a={}){this.checkAddress(i),await this.loadMarkets();const n=this.currency(e),o=this.safeString(a,"network",e);a=this.omit(a,"network");const d=this.safeValue(n,"networks",{}),c=this.safeValue(d,o),h=this.safeString(c,"id");if(void 0===h)throw new s.ArgumentsRequired(this.id+" fetchDepositAddress() could not find a network for '"+e+"'. You can specify it by providing the 'network' value inside params");const u=this.safeString(a,"wallet","exchange");a=this.omit(a,"network","wallet");const l={method:h,wallet:u,amount:this.numberToString(t),address:i};void 0!==r&&(l.payment_id=r);const p=await this.privatePostAuthWWithdraw(this.extend(l,a));if("error"===this.safeString(p,0)){const e=this.id+" "+p,t=this.safeString(p,2,"");throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new s.ExchangeError(e)}const f=this.safeString(p,7);"success"!==f&&this.throwBroadlyMatchedException(this.exceptions.broad,f,f);const m=this.parseTransaction(p,n);return this.extend(m,{address:i})}async fetchPositions(e=undefined,t={}){return await this.loadMarkets(),await this.privatePostAuthRPositions(t)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));n="v1"===t?t+n:this.version+n;let c=this.urls.api[t]+"/"+n;if("public"===t&&Object.keys(d).length&&(c+="?"+this.urlencode(d)),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t="/api/"+n+e+(a=this.json(d)),i=this.hmac(this.encode(t),this.encode(this.secret),o.iC);r={"bfx-nonce":e,"bfx-apikey":this.apiKey,"bfx-signature":i,"Content-Type":"application/json"}}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,r,a,n,o,d,c){if(void 0!==o){if(!Array.isArray(o)){const e=this.safeString2(o,"message","error"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new s.ExchangeError(this.id+" "+n)}}else if(""===o)throw new s.ExchangeError(this.id+" returned empty response");if(500===e){const e=this.numberToString(o[1]),t=o[2],i=this.id+" "+t;throw this.throwBroadlyMatchedException(this.exceptions.broad,t,i),this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwExactlyMatchedException(this.exceptions.exact,t,i),new s.ExchangeError(this.id+" "+t+" (#"+e+")")}return o}parseLedgerEntryType(e){return void 0===e?void 0:e.indexOf("fee")>=0||e.indexOf("charged")>=0?"fee":e.indexOf("exchange")>=0||e.indexOf("position")>=0?"trade":e.indexOf("rebate")>=0?"rebate":e.indexOf("deposit")>=0||e.indexOf("withdrawal")>=0?"transaction":e.indexOf("transfer")>=0?"transfer":e.indexOf("payment")>=0?"payout":e}parseLedgerEntry(e,t=undefined){let i;const s=this.safeString(e,0),r=this.safeString(e,1),a=this.safeCurrencyCode(r,t),n=this.safeInteger(e,3),o=this.safeNumber(e,5),d=this.safeNumber(e,6),c=this.safeString(e,8);if(void 0!==c){const e=c.split(" @ "),t=this.safeStringLower(e,0);i=this.parseLedgerEntryType(t)}return{id:s,direction:void 0,account:void 0,referenceId:s,referenceAccount:void 0,type:i,currency:a,amount:o,timestamp:n,datetime:this.iso8601(n),before:void 0,after:d,status:void 0,fee:void 0,info:e}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),await this.loadMarkets();const a={};let n="privatePostAuthRLedgersHist";void 0!==e&&(r=this.currency(e),a.currency=r.uppercaseId,n="privatePostAuthRLedgersCurrencyHist"),void 0!==t&&(a.start=t),void 0!==i&&(a.limit=i);const o=await this[n](this.extend(a,s));return this.parseLedger(o,r,t,i)}}},8429:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(2787),r=i(6689),a=i(9292),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitflyer",name:"bitFlyer",countries:["JP"],version:"v1",rateLimit:1e3,hostname:"bitflyer.com",has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchClosedOrders:"emulated",fetchDeposits:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOpenOrders:"emulated",fetchOrder:"emulated",fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPositions:!0,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/28051642-56154182-660e-11e7-9b0d-6042d1e6edd8.jpg",api:{rest:"https://api.{hostname}"},www:"https://bitflyer.com",doc:"https://lightning.bitflyer.com/docs?lang=en"},api:{public:{get:["getmarkets/usa","getmarkets/eu","getmarkets","getboard","getticker","getexecutions","gethealth","getboardstate","getchats"]},private:{get:["getpermissions","getbalance","getbalancehistory","getcollateral","getcollateralhistory","getcollateralaccounts","getaddresses","getcoinins","getcoinouts","getbankaccounts","getdeposits","getwithdrawals","getchildorders","getparentorders","getparentorder","getexecutions","getpositions","gettradingcommission"],post:["sendcoin","withdraw","sendchildorder","cancelchildorder","sendparentorder","cancelparentorder","cancelallchildorders"]}},fees:{trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:a.sh})}parseExpiryDate(e){const t=e.slice(0,2),i=e.slice(2,5),s=e.slice(5,9),r=this.safeString({JAN:"01",FEB:"02",MAR:"03",APR:"04",MAY:"05",JUN:"06",JUL:"07",AUG:"08",SEP:"09",OCT:"10",NOV:"11",DEC:"12"},i);return this.parse8601(s+"-"+r+"-"+t+"T00:00:00Z")}safeMarket(e=undefined,t=undefined,i=undefined,s=undefined){return super.safeMarket(e,t,i,"spot")}async fetchMarkets(e={}){const t=await this.publicGetGetmarkets(e),i=await this.publicGetGetmarketsUsa(e),s=await this.publicGetGetmarketsEu(e);let r=this.arrayConcat(t,i);r=this.arrayConcat(r,s);const a=[];for(let e=0;e<r.length;e++){const t=r[e],i=this.safeString(t,"product_code"),s=i.split("_"),n=this.safeString(t,"market_type"),o="FX"===n,d="Futures"===n,c=!o&&!d;let h,u,l,p,f="spot";if(c)u=this.safeString(s,0),l=this.safeString(s,1);else if(o)f="swap",u=this.safeString(s,1),l=this.safeString(s,2);else if(d){const e=this.safeString(t,"alias");if(void 0===e){u=i.slice(0,3),l=i.slice(3,6);const e=i.slice(-9);p=this.parseExpiryDate(e)}else{const t=e.split("_"),s=this.safeString(t,0);u=s.slice(0,-3),l=s.slice(-3);const r=i.split(s),a=this.safeString(r,1);p=this.parseExpiryDate(a)}f="future"}const m=this.safeCurrencyCode(u),v=this.safeCurrencyCode(l);let g=m+"/"+v,y=this.fees.trading.taker,b=this.fees.trading.maker;const w=o||d;w&&(b=0,y=0,h="JPY",g=g+":"+h,d&&(g=g+"-"+this.yymmdd(p))),a.push({id:i,symbol:g,base:m,quote:v,settle:h,baseId:u,quoteId:l,settleId:void 0,type:f,spot:c,margin:!1,swap:o,future:d,option:!1,active:!0,contract:w,linear:!c||void 0,inverse:!!c&&void 0,taker:y,maker:b,contractSize:void 0,expiry:p,expiryDatetime:this.iso8601(p),strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return a}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency_code"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"amount"),n.free=this.safeString(s,"available"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetGetbalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={product_code:s.id},a=await this.publicGetGetboard(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","size")}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.parse8601(this.safeString(e,"timestamp")),r=this.safeString(e,"ltp");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeString(e,"best_bid"),bidVolume:void 0,ask:this.safeString(e,"best_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume_by_product"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={product_code:i.id},r=await this.publicGetGetticker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){let i,s=this.safeStringLower(e,"side");if(void 0!==s&&s.length<1&&(s=void 0),void 0!==s){const t=s+"_child_order_acceptance_id";t in e&&(i=e[t])}void 0===i&&(i=this.safeString(e,"child_order_acceptance_id"));const r=this.parse8601(this.safeString(e,"exec_date")),a=this.safeString(e,"price"),n=this.safeString(e,"size"),o=this.safeString(e,"id");return t=this.safeMarket(void 0,t),this.safeTrade({id:o,info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:i,type:void 0,side:s,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={product_code:r.id};void 0!==i&&(a.count=i);const n=await this.publicGetGetexecutions(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={product_code:i.id},r=await this.privateGetGettradingcommission(this.extend(s,t)),a=this.safeNumber(r,"commission_rate");return{info:r,symbol:i.symbol,maker:a,taker:a}}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n={product_code:this.marketId(e),child_order_type:t.toUpperCase(),side:i.toUpperCase(),price:r,size:s},o=await this.privatePostSendchildorder(this.extend(n,a)),d=this.safeString(o,"child_order_acceptance_id");return this.safeOrder({id:d,info:o})}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a `symbol` argument");await this.loadMarkets();const s={product_code:this.marketId(t),child_order_acceptance_id:e};return await this.privatePostCancelchildorder(this.extend(s,i))}parseOrderStatus(e){return this.safeString({ACTIVE:"open",COMPLETED:"closed",CANCELED:"canceled",EXPIRED:"canceled",REJECTED:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.parse8601(this.safeString(e,"child_order_date")),s=this.safeString(e,"price"),r=this.safeString(e,"size"),a=this.safeString(e,"executed_size"),n=this.safeString(e,"outstanding_size"),o=this.parseOrderStatus(this.safeString(e,"child_order_state")),d=this.safeStringLower(e,"child_order_type"),c=this.safeStringLower(e,"side"),h=this.safeString(e,"product_code"),u=this.safeSymbol(h,t);let l;const p=this.safeNumber(e,"total_commission");void 0!==p&&(l={cost:p,currency:void 0,rate:void 0});const f=this.safeString(e,"child_order_acceptance_id");return this.safeOrder({id:f,clientOrderId:void 0,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:o,symbol:u,type:d,timeInForce:void 0,postOnly:void 0,side:c,price:s,stopPrice:void 0,triggerPrice:void 0,cost:void 0,amount:r,filled:a,remaining:n,fee:l,average:void 0,trades:void 0},t)}async fetchOrders(e=undefined,t=undefined,i=100,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a `symbol` argument");await this.loadMarkets();const a=this.market(e),n={product_code:a.id,count:i},o=await this.privateGetGetchildorders(this.extend(n,s));let d=this.parseOrders(o,a,t,i);return void 0!==e&&(d=this.filterBy(d,"symbol",e)),d}async fetchOpenOrders(e=undefined,t=undefined,i=100,s={}){return await this.fetchOrders(e,t,i,this.extend({child_order_state:"ACTIVE"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=100,s={}){return await this.fetchOrders(e,t,i,this.extend({child_order_state:"COMPLETED"},s))}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a `symbol` argument");const s=await this.fetchOrders(t),a=this.indexBy(s,"id");if(e in a)return a[e];throw new r.OrderNotFound(this.id+" No order found with id "+e)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a `symbol` argument");await this.loadMarkets();const a=this.market(e),n={product_code:a.id};void 0!==i&&(n.count=i);const o=await this.privateGetGetexecutions(this.extend(n,s));return this.parseTrades(o,a,t,i)}async fetchPositions(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchPositions() requires a `symbols` argument, exactly one symbol in an array");await this.loadMarkets();const i={product_code:this.marketIds(e)};return await this.privateGetGetpositions(this.extend(i,t))}async withdraw(e,t,i,s=undefined,a={}){if(this.checkAddress(i),await this.loadMarkets(),"JPY"!==e&&"USD"!==e&&"EUR"!==e)throw new r.ExchangeError(this.id+" allows withdrawing JPY, USD, EUR only, "+e+" is not supported");const n=this.currency(e),o={currency_code:n.id,amount:t},d=await this.privatePostWithdraw(this.extend(o,a));return this.parseTransaction(d,n)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e)),void 0!==i&&(a.count=i);const n=await this.privateGetGetcoinins(this.extend(a,s));return this.parseTransactions(n,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e)),void 0!==i&&(a.count=i);const n=await this.privateGetGetcoinouts(this.extend(a,s));return this.parseTransactions(n,r,t,i)}parseDepositStatus(e){return this.safeString({PENDING:"pending",COMPLETED:"ok"},e,e)}parseWithdrawalStatus(e){return this.safeString({PENDING:"pending",COMPLETED:"ok"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString2(e,"id","message_id"),s=this.safeString(e,"address"),r=this.safeString(e,"currency_code"),a=this.safeCurrencyCode(r,t),n=this.parse8601(this.safeString(e,"event_date")),o=this.safeNumber(e,"amount"),d=this.safeString(e,"tx_hash"),c=this.safeString(e,"status");let h,u,l;return"fee"in e?(h="withdrawal",u=this.parseWithdrawalStatus(c),l={currency:a,cost:this.safeNumber(e,"fee")+this.safeNumber(e,"additional_fee")}):(h="deposit",u=this.parseDepositStatus(c)),{info:e,id:i,txid:d,timestamp:n,datetime:this.iso8601(n),network:void 0,address:s,addressTo:s,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:h,amount:o,currency:a,status:u,updated:void 0,internal:void 0,fee:l}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let o="/"+this.version+"/";"private"===t&&(o+="me/"),o+=e,"GET"===i&&Object.keys(s).length&&(o+="?"+this.urlencode(s));const d=this.implodeHostname(this.urls.api.rest)+o;if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString();let t=[e,i,o].join("");Object.keys(s).length&&"GET"!==i&&(t+=a=this.json(s)),r={"ACCESS-KEY":this.apiKey,"ACCESS-TIMESTAMP":e,"ACCESS-SIGN":this.hmac(this.encode(t),this.encode(this.secret),n.J),"Content-Type":"application/json"}}return{url:d,method:i,body:a,headers:r}}}},2035:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(491),r=i(6689),a=i(9292),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitforex",name:"Bitforex",countries:["CN"],rateLimit:500,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:!1,option:!1,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!1,fetchTrades:!0,fetchTransactionFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","12h":"12hour","1d":"1day","1w":"1week","1M":"1month"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87295553-1160ec00-c50e-11ea-8ea0-df79276a9646.jpg",api:{rest:"https://api.bitforex.com"},www:"https://www.bitforex.com",doc:"https://github.com/githubdev2020/API_Doc_en/wiki",fees:"https://help.bitforex.com/en_us/?cat=13",referral:"https://www.bitforex.com/en/invitationRegister?inviterId=1867438"},api:{public:{get:{"api/v1/market/symbols":20,"api/v1/market/ticker":4,"api/v1/market/ticker-all":4,"api/v1/market/depth":4,"api/v1/market/depth-all":4,"api/v1/market/trades":20,"api/v1/market/kline":20}},private:{post:{"api/v1/fund/mainAccount":1,"api/v1/fund/allAccount":30,"api/v1/trade/placeOrder":1,"api/v1/trade/placeMultiOrder":10,"api/v1/trade/cancelOrder":1,"api/v1/trade/cancelMultiOrder":20,"api/v1/trade/cancelAllOrder":20,"api/v1/trade/orderInfo":1,"api/v1/trade/multiOrderInfo":10,"api/v1/trade/orderInfos":20}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{tierBased:!1,percentage:!0,deposit:{},withdraw:{}}},commonCurrencies:{BKC:"Bank Coin",CAPP:"Crypto Application Token",CREDIT:"TerraCredit",CTC:"Culture Ticket Chain",EWT:"EcoWatt Token",IQ:"IQ.Cash",MIR:"MIR COIN",NOIA:"METANOIA",TON:"To The Moon"},precisionMode:a.sh,exceptions:{1e3:r.OrderNotFound,1003:r.BadSymbol,1013:r.AuthenticationError,1016:r.AuthenticationError,1017:r.PermissionDenied,1019:r.BadSymbol,3002:r.InsufficientFunds,4002:r.InvalidOrder,4003:r.InvalidOrder,4004:r.OrderNotFound,10204:r.DDoSProtection}})}async fetchMarkets(e={}){const t=(await this.publicGetApiV1MarketSymbols(e)).data,i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"symbol"),a=r.split("-"),n=a[2],o=a[1],d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o);i.push({id:r,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDateTime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"amountPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"pricePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"minOrderAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:s})}return i}parseTrade(e,t=undefined){t=this.safeMarket(void 0,t);const i=this.safeInteger(e,"time"),s=this.safeString(e,"tid"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeInteger(e,"direction"),o=this.parseSide(n);return this.safeTrade({info:e,id:s,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:o,price:r,amount:a,cost:void 0,order:void 0,fee:void 0,takerOrMaker:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={symbol:this.marketId(e)};void 0!==i&&(r.size=i);const a=this.market(e),n=await this.publicGetApiV1MarketTrades(this.extend(r,s));return this.parseTrades(n.data,a,t,i)}parseBalance(e){const t=e.data,i={info:e};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(s,"frozen"),n.free=this.safeString(s,"active"),n.total=this.safeString(s,"fix"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostApiV1FundAllAccount(e);return this.parseBalance(t)}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeInteger(e,"date");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"last"),last:this.safeString(e,"last"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.markets[e],s={symbol:i.id},r=await this.publicGetApiV1MarketTickerAll(this.extend(s,t)),a=this.safeValue(r,"data");return this.parseTicker(a,i)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"vol")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,ktype:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.size=s);const o=await this.publicGetApiV1MarketKline(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseOHLCVs(d,a,t,i,s)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.size=t);const a=await this.publicGetApiV1MarketDepthAll(this.extend(r,i)),n=this.safeValue(a,"data"),o=this.safeInteger(a,"time");return this.parseOrderBook(n,s.symbol,o,"bids","asks","price","amount")}parseOrderStatus(e){const t={0:"open",1:"open",2:"closed",3:"canceled",4:"canceled"};return e in t?t[e]:e}parseSide(e){return 1===e?"buy":2===e?"sell":void 0}parseOrder(e,t=undefined){const i=this.safeString(e,"orderId"),s=this.safeNumber(e,"createTime"),r=this.safeNumber(e,"lastTime"),a=t.symbol,n=this.safeInteger(e,"tradeType"),o=this.parseSide(n),d=this.safeString(e,"orderPrice"),c=this.safeString(e,"avgPrice"),h=this.safeString(e,"orderAmount"),u=this.safeString(e,"dealAmount"),l=this.parseOrderStatus(this.safeString(e,"orderState")),p=t["buy"===o?"base":"quote"],f={cost:this.safeNumber(e,"tradeFee"),currency:p};return this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:r,symbol:a,type:void 0,timeInForce:void 0,postOnly:void 0,side:o,price:d,stopPrice:void 0,triggerPrice:void 0,cost:void 0,average:c,amount:h,filled:u,remaining:void 0,status:l,fee:f,trades:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(t),r={symbol:this.marketId(t),orderId:e},a=await this.privatePostApiV1TradeOrderInfo(this.extend(r,i));return this.parseOrder(a.data,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:this.marketId(e),state:0},o=await this.privatePostApiV1TradeOrderInfos(this.extend(n,s));return this.parseOrders(o.data,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:this.marketId(e),state:1},o=await this.privatePostApiV1TradeOrderInfos(this.extend(n,s));return this.parseOrders(o.data,a,t,i)}async createOrder(e,t,i,s,r=undefined,a={}){let n;await this.loadMarkets(),"buy"===i?n=1:"sell"===i&&(n=2);const o=this.market(e),d={symbol:o.id,price:r,amount:s,tradeType:n},c=await this.privatePostApiV1TradePlaceOrder(this.extend(d,a)),h=c.data;return this.safeOrder({info:c,id:this.safeString(h,"orderId")},o)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderId:e};void 0!==t&&(s.symbol=this.marketId(t));const r=await this.privatePostApiV1TradeCancelOrder(this.extend(s,i));return{info:r,success:r.success}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let o=this.urls.api.rest+"/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(o+="?"+this.urlencode(d));else{this.checkRequiredCredentials();let t=this.urlencode({accessKey:this.apiKey});d.nonce=this.milliseconds(),Object.keys(d).length&&(t+="&"+this.urlencode(this.keysort(d)));const i="/"+e+"?"+t;a=t+"&signData="+this.hmac(this.encode(i),this.encode(this.secret),n.J),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if("string"==typeof n&&("{"===n[0]||"["===n[0])){const e=this.id+" "+n,t=this.safeValue(o,"success");if(void 0!==t&&!t){const t=this.safeString(o,"code");throw this.throwExactlyMatchedException(this.exceptions,t,e),new r.ExchangeError(e)}}}}},9051:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2065),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitget",name:"Bitget",countries:["SG"],version:"v1",rateLimit:50,certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!0,option:!1,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!1,editOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarginMode:void 0,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!0,transfer:!0,withdraw:!1},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},hostname:"bitget.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/195989417-4253ddb0-afbe-4a1c-9dea-9dbcd121fa5d.jpg",api:{spot:"https://api.{hostname}",mix:"https://api.{hostname}"},www:"https://www.bitget.com",doc:["https://bitgetlimited.github.io/apidoc/en/mix","https://bitgetlimited.github.io/apidoc/en/spot","https://bitgetlimited.github.io/apidoc/en/broker"],fees:"https://www.bitget.cc/zh-CN/rate?tab=1",referral:"https://www.bitget.com/expressly?languageType=0&channelCode=ccxt&vipCode=tg9j"},api:{public:{spot:{get:{"public/time":1,"public/currencies":1,"public/products":1,"public/product":1,"market/ticker":1,"market/tickers":1,"market/fills":1,"market/candles":1,"market/depth":1,"market/spot-vip-level":2}},mix:{get:{"market/contracts":1,"market/depth":1,"market/ticker":1,"market/tickers":1,"market/fills":1,"market/candles":1,"market/index":1,"market/funding-time":1,"market/history-fundRate":1,"market/current-fundRate":1,"market/open-interest":1,"market/mark-price":1,"market/symbol-leverage":1,"market/contract-vip-level":2}}},private:{spot:{get:{"account/getInfo":20,"account/assets":2,"account/transferRecords":4,"wallet/deposit-address":4,"wallet/withdrawal-inner":4,"wallet/withdrawal-list":1,"wallet/deposit-list":1},post:{"account/bills":2,"account/sub-account-spot-assets":200,"trade/orders":2,"trade/batch-orders":4,"trade/cancel-order":2,"trade/cancel-batch-orders":4,"trade/orderInfo":1,"trade/open-orders":1,"trade/history":1,"trade/fills":1,"wallet/transfer":4,"wallet/withdrawal":4,"wallet/subTransfer":10,"plan/placePlan":1,"plan/modifyPlan":1,"plan/cancelPlan":1,"plan/currentPlan":1,"plan/historyPlan":1}},mix:{get:{"account/account":2,"account/accounts":2,"account/accountBill":2,"account/accountBusinessBill":4,"account/open-count":1,"order/current":2,"order/history":2,"order/detail":2,"order/fills":2,"order/historyProductType":8,"order/allFills":2,"plan/currentPlan":2,"plan/historyPlan":2,"position/singlePosition":2,"position/allPosition":2,"trace/currentTrack":2,"trace/followerOrder":2,"trace/historyTrack":2,"trace/summary":2,"trace/profitSettleTokenIdGroup":2,"trace/profitDateGroupList":2,"trade/profitDateList":2,"trace/waitProfitDateList":2,"trace/traderSymbols":2,"order/marginCoinCurrent":2},post:{"account/setLeverage":8,"account/setMargin":8,"account/setMarginMode":8,"account/setPositionMode":8,"order/placeOrder":2,"order/batch-orders":2,"order/cancel-order":2,"order/cancel-all-orders":2,"order/cancel-batch-orders":2,"plan/placePlan":2,"plan/modifyPlan":2,"plan/modifyPlanPreset":2,"plan/placeTPSL":2,"plan/placeTrailStop":2,"plan/placePositionsTPSL":2,"plan/modifyTPSLPlan":2,"plan/cancelPlan":2,"plan/cancelAllPlan":2,"trace/closeTrackOrder":2,"trace/setUpCopySymbols":2}}}},fees:{spot:{taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")},swap:{taker:this.parseNumber("0.0006"),maker:this.parseNumber("0.0004")}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:r.ExchangeError,"failure to get a peer from the ring-balancer":r.ExchangeNotAvailable,4010:r.PermissionDenied,4001:r.ExchangeError,4002:r.ExchangeError,30001:r.AuthenticationError,30002:r.AuthenticationError,30003:r.AuthenticationError,30004:r.AuthenticationError,30005:r.InvalidNonce,30006:r.AuthenticationError,30007:r.BadRequest,30008:r.RequestTimeout,30009:r.ExchangeError,30010:r.AuthenticationError,30011:r.PermissionDenied,30012:r.AuthenticationError,30013:r.AuthenticationError,30014:r.DDoSProtection,30015:r.AuthenticationError,30016:r.ExchangeError,30017:r.ExchangeError,30018:r.ExchangeError,30019:r.ExchangeNotAvailable,30020:r.BadRequest,30021:r.BadRequest,30022:r.PermissionDenied,30023:r.BadRequest,30024:r.BadSymbol,30025:r.BadRequest,30026:r.DDoSProtection,30027:r.AuthenticationError,30028:r.PermissionDenied,30029:r.AccountSuspended,30030:r.ExchangeError,30031:r.BadRequest,30032:r.BadSymbol,30033:r.BadRequest,30034:r.ExchangeError,30035:r.ExchangeError,30036:r.ExchangeError,30037:r.ExchangeNotAvailable,30038:r.OnMaintenance,32001:r.AccountSuspended,32002:r.PermissionDenied,32003:r.CancelPending,32004:r.ExchangeError,32005:r.InvalidOrder,32006:r.InvalidOrder,32007:r.InvalidOrder,32008:r.InvalidOrder,32009:r.InvalidOrder,32010:r.ExchangeError,32011:r.ExchangeError,32012:r.ExchangeError,32013:r.ExchangeError,32014:r.ExchangeError,32015:r.ExchangeError,32016:r.ExchangeError,32017:r.ExchangeError,32018:r.ExchangeError,32019:r.ExchangeError,32020:r.ExchangeError,32021:r.ExchangeError,32022:r.ExchangeError,32023:r.ExchangeError,32024:r.ExchangeError,32025:r.ExchangeError,32026:r.ExchangeError,32027:r.ExchangeError,32028:r.AccountSuspended,32029:r.ExchangeError,32030:r.InvalidOrder,32031:r.ArgumentsRequired,32038:r.AuthenticationError,32040:r.ExchangeError,32044:r.ExchangeError,32045:r.ExchangeError,32046:r.ExchangeError,32047:r.ExchangeError,32048:r.InvalidOrder,32049:r.ExchangeError,32050:r.InvalidOrder,32051:r.InvalidOrder,32052:r.ExchangeError,32053:r.ExchangeError,32057:r.ExchangeError,32054:r.ExchangeError,32055:r.InvalidOrder,32056:r.ExchangeError,32058:r.ExchangeError,32059:r.InvalidOrder,32060:r.InvalidOrder,32061:r.InvalidOrder,32062:r.InvalidOrder,32063:r.InvalidOrder,32064:r.ExchangeError,32065:r.ExchangeError,32066:r.ExchangeError,32067:r.ExchangeError,32068:r.ExchangeError,32069:r.ExchangeError,32070:r.ExchangeError,32071:r.ExchangeError,32072:r.ExchangeError,32073:r.ExchangeError,32074:r.ExchangeError,32075:r.ExchangeError,32076:r.ExchangeError,32077:r.ExchangeError,32078:r.ExchangeError,32079:r.ExchangeError,32080:r.ExchangeError,32083:r.ExchangeError,33001:r.PermissionDenied,33002:r.AccountSuspended,33003:r.InsufficientFunds,33004:r.ExchangeError,33005:r.ExchangeError,33006:r.ExchangeError,33007:r.ExchangeError,33008:r.InsufficientFunds,33009:r.ExchangeError,33010:r.ExchangeError,33011:r.ExchangeError,33012:r.ExchangeError,33013:r.InvalidOrder,33014:r.OrderNotFound,33015:r.InvalidOrder,33016:r.ExchangeError,33017:r.InsufficientFunds,33018:r.ExchangeError,33020:r.ExchangeError,33021:r.BadRequest,33022:r.InvalidOrder,33023:r.ExchangeError,33024:r.InvalidOrder,33025:r.InvalidOrder,33026:r.ExchangeError,33027:r.InvalidOrder,33028:r.InvalidOrder,33029:r.InvalidOrder,33034:r.ExchangeError,33035:r.ExchangeError,33036:r.ExchangeError,33037:r.ExchangeError,33038:r.ExchangeError,33039:r.ExchangeError,33040:r.ExchangeError,33041:r.ExchangeError,33042:r.ExchangeError,33043:r.ExchangeError,33044:r.ExchangeError,33045:r.ExchangeError,33046:r.ExchangeError,33047:r.ExchangeError,33048:r.ExchangeError,33049:r.ExchangeError,33050:r.ExchangeError,33051:r.ExchangeError,33059:r.BadRequest,33060:r.BadRequest,33061:r.ExchangeError,33062:r.ExchangeError,33063:r.ExchangeError,33064:r.ExchangeError,33065:r.ExchangeError,21009:r.ExchangeError,34001:r.PermissionDenied,34002:r.InvalidAddress,34003:r.ExchangeError,34004:r.ExchangeError,34005:r.ExchangeError,34006:r.ExchangeError,34007:r.ExchangeError,34008:r.InsufficientFunds,34009:r.ExchangeError,34010:r.ExchangeError,34011:r.ExchangeError,34012:r.ExchangeError,34013:r.ExchangeError,34014:r.ExchangeError,34015:r.ExchangeError,34016:r.PermissionDenied,34017:r.AccountSuspended,34018:r.AuthenticationError,34019:r.PermissionDenied,34020:r.PermissionDenied,34021:r.InvalidAddress,34022:r.ExchangeError,34023:r.PermissionDenied,34026:r.ExchangeError,34036:r.ExchangeError,34037:r.ExchangeError,34038:r.ExchangeError,34039:r.ExchangeError,35001:r.ExchangeError,35002:r.ExchangeError,35003:r.ExchangeError,35004:r.ExchangeError,35005:r.AuthenticationError,35008:r.InvalidOrder,35010:r.InvalidOrder,35012:r.InvalidOrder,35014:r.InvalidOrder,35015:r.InvalidOrder,35017:r.ExchangeError,35019:r.InvalidOrder,35020:r.InvalidOrder,35021:r.InvalidOrder,35022:r.ExchangeError,35024:r.ExchangeError,35025:r.InsufficientFunds,35026:r.ExchangeError,35029:r.OrderNotFound,35030:r.InvalidOrder,35031:r.InvalidOrder,35032:r.ExchangeError,35037:r.ExchangeError,35039:r.ExchangeError,35040:r.InvalidOrder,35044:r.ExchangeError,35046:r.InsufficientFunds,35047:r.InsufficientFunds,35048:r.ExchangeError,35049:r.InvalidOrder,35050:r.InvalidOrder,35052:r.InsufficientFunds,35053:r.ExchangeError,35055:r.InsufficientFunds,35057:r.ExchangeError,35058:r.ExchangeError,35059:r.BadRequest,35060:r.BadRequest,35061:r.BadRequest,35062:r.InvalidOrder,35063:r.InvalidOrder,35064:r.InvalidOrder,35066:r.InvalidOrder,35067:r.InvalidOrder,35068:r.InvalidOrder,35069:r.InvalidOrder,35070:r.InvalidOrder,35071:r.InvalidOrder,35072:r.InvalidOrder,35073:r.InvalidOrder,35074:r.InvalidOrder,35075:r.InvalidOrder,35076:r.InvalidOrder,35077:r.InvalidOrder,35078:r.InvalidOrder,35079:r.InvalidOrder,35080:r.InvalidOrder,35081:r.InvalidOrder,35082:r.InvalidOrder,35083:r.InvalidOrder,35084:r.InvalidOrder,35085:r.InvalidOrder,35086:r.InvalidOrder,35087:r.InvalidOrder,35088:r.InvalidOrder,35089:r.InvalidOrder,35090:r.ExchangeError,35091:r.ExchangeError,35092:r.ExchangeError,35093:r.ExchangeError,35094:r.ExchangeError,35095:r.BadRequest,35096:r.ExchangeError,35097:r.ExchangeError,35098:r.ExchangeError,35099:r.ExchangeError,36001:r.BadRequest,36002:r.BadRequest,36005:r.ExchangeError,36101:r.AuthenticationError,36102:r.PermissionDenied,36103:r.AccountSuspended,36104:r.PermissionDenied,36105:r.PermissionDenied,36106:r.AccountSuspended,36107:r.PermissionDenied,36108:r.InsufficientFunds,36109:r.PermissionDenied,36201:r.PermissionDenied,36202:r.PermissionDenied,36203:r.InvalidOrder,36204:r.ExchangeError,36205:r.BadRequest,36206:r.BadRequest,36207:r.InvalidOrder,36208:r.InvalidOrder,36209:r.InvalidOrder,36210:r.InvalidOrder,36211:r.InvalidOrder,36212:r.InvalidOrder,36213:r.InvalidOrder,36214:r.ExchangeError,36216:r.OrderNotFound,36217:r.InvalidOrder,36218:r.InvalidOrder,36219:r.InvalidOrder,36220:r.InvalidOrder,36221:r.InvalidOrder,36222:r.InvalidOrder,36223:r.InvalidOrder,36224:r.InvalidOrder,36225:r.InvalidOrder,36226:r.InvalidOrder,36227:r.InvalidOrder,36228:r.InvalidOrder,36229:r.InvalidOrder,36230:r.InvalidOrder,400:r.BadRequest,401:r.AuthenticationError,403:r.PermissionDenied,404:r.BadRequest,405:r.BadRequest,415:r.BadRequest,429:r.DDoSProtection,500:r.ExchangeNotAvailable,1001:r.RateLimitExceeded,1002:r.ExchangeError,1003:r.ExchangeError,40001:r.AuthenticationError,40002:r.AuthenticationError,40003:r.AuthenticationError,40004:r.InvalidNonce,40005:r.InvalidNonce,40006:r.AuthenticationError,40007:r.BadRequest,40008:r.InvalidNonce,40009:r.AuthenticationError,40010:r.AuthenticationError,40011:r.AuthenticationError,40012:r.AuthenticationError,40013:r.ExchangeError,40014:r.PermissionDenied,40015:r.ExchangeError,40016:r.PermissionDenied,40017:r.ExchangeError,40018:r.PermissionDenied,40019:r.InvalidOrder,40102:r.BadRequest,40103:r.BadRequest,40104:r.ExchangeError,40105:r.ExchangeError,40106:r.ExchangeError,40107:r.ExchangeError,40108:r.InvalidOrder,40109:r.OrderNotFound,40200:r.OnMaintenance,40201:r.InvalidOrder,40202:r.ExchangeError,40203:r.BadRequest,40204:r.BadRequest,40205:r.BadRequest,40206:r.BadRequest,40207:r.BadRequest,40208:r.BadRequest,40209:r.BadRequest,40300:r.ExchangeError,40301:r.PermissionDenied,40302:r.BadRequest,40303:r.BadRequest,40304:r.BadRequest,40305:r.BadRequest,40306:r.ExchangeError,40308:r.OnMaintenance,40309:r.BadSymbol,40400:r.ExchangeError,40401:r.ExchangeError,40402:r.BadRequest,40403:r.BadRequest,40404:r.BadRequest,40405:r.BadRequest,40406:r.BadRequest,40407:r.ExchangeError,40408:r.ExchangeError,40409:r.ExchangeError,40500:r.InvalidOrder,40501:r.ExchangeError,40502:r.ExchangeError,40503:r.ExchangeError,40504:r.ExchangeError,40505:r.ExchangeError,40506:r.AuthenticationError,40507:r.AuthenticationError,40508:r.ExchangeError,40509:r.ExchangeError,40600:r.ExchangeError,40601:r.ExchangeError,40602:r.ExchangeError,40603:r.ExchangeError,40604:r.ExchangeNotAvailable,40605:r.ExchangeError,40606:r.ExchangeError,40607:r.ExchangeError,40608:r.ExchangeError,40609:r.ExchangeError,40700:r.BadRequest,40701:r.ExchangeError,40702:r.ExchangeError,40703:r.ExchangeError,40704:r.ExchangeError,40705:r.BadRequest,40706:r.InvalidOrder,40707:r.BadRequest,40708:r.BadRequest,40709:r.ExchangeError,40710:r.ExchangeError,40711:r.InsufficientFunds,40712:r.InsufficientFunds,40713:r.ExchangeError,40714:r.ExchangeError,41114:r.OnMaintenance,43011:r.InvalidOrder,43025:r.InvalidOrder,45110:r.InvalidOrder,"invalid sign":r.AuthenticationError,"invalid currency":r.BadSymbol,"invalid symbol":r.BadSymbol,"invalid period":r.BadRequest,"invalid user":r.ExchangeError,"invalid amount":r.InvalidOrder,"invalid type":r.InvalidOrder,"invalid orderId":r.InvalidOrder,"invalid record":r.ExchangeError,"invalid accountId":r.BadRequest,"invalid address":r.BadRequest,"accesskey not null":r.AuthenticationError,"illegal accesskey":r.AuthenticationError,"sign not null":r.AuthenticationError,"req_time is too much difference from server time":r.InvalidNonce,"permissions not right":r.PermissionDenied,"illegal sign invalid":r.AuthenticationError,"user locked":r.AccountSuspended,"Request Frequency Is Too High":r.RateLimitExceeded,"more than a daily rate of cash":r.BadRequest,"more than the maximum daily withdrawal amount":r.BadRequest,"need to bind email or mobile":r.ExchangeError,"user forbid":r.PermissionDenied,"User Prohibited Cash Withdrawal":r.PermissionDenied,"Cash Withdrawal Is Less Than The Minimum Value":r.BadRequest,"Cash Withdrawal Is More Than The Maximum Value":r.BadRequest,"the account with in 24 hours ban coin":r.PermissionDenied,"order cancel fail":r.BadRequest,"base symbol error":r.BadSymbol,"base date error":r.ExchangeError,"api signature not valid":r.AuthenticationError,"gateway internal error":r.ExchangeError,"audit failed":r.ExchangeError,"order queryorder invalid":r.BadRequest,"market no need price":r.InvalidOrder,"limit need price":r.InvalidOrder,"userid not equal to account_id":r.ExchangeError,"your balance is low":r.InsufficientFunds,"address invalid cointype":r.ExchangeError,"system exception":r.ExchangeError,50003:r.ExchangeError,50004:r.BadSymbol,50006:r.PermissionDenied,50007:r.PermissionDenied,50008:r.RequestTimeout,50009:r.RateLimitExceeded,50010:r.ExchangeError,50014:r.InvalidOrder,50015:r.InvalidOrder,50016:r.InvalidOrder,50017:r.InvalidOrder,50018:r.InvalidOrder,50019:r.InvalidOrder,50020:r.InsufficientFunds,50021:r.InvalidOrder,50026:r.InvalidOrder,"invalid order query time":r.ExchangeError,"invalid start time":r.BadRequest,"invalid end time":r.BadRequest,20003:r.ExchangeError,"01001":r.ExchangeError,43111:r.PermissionDenied},broad:{"invalid size, valid range":r.ExchangeError}},precisionMode:n.sh,commonCurrencies:{JADE:"Jade Protocol"},options:{timeframes:{spot:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6Hutc","12h":"12Hutc","1d":"1Dutc","3d":"3Dutc","1w":"1Wutc","1M":"1Mutc"},swap:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","6h":"6Hutc","12h":"12Hutc","1d":"1Dutc","3d":"3Dutc","1w":"1Wutc","1M":"1Mutc"}},fetchMarkets:["spot","swap"],defaultType:"spot",defaultSubType:"linear",createMarketBuyOrderRequiresPrice:!0,broker:"p4sve",withdraw:{fillResponseFromRequest:!0},accountsByType:{main:"EXCHANGE",spot:"EXCHANGE",future:"USDT_MIX",contract:"CONTRACT",mix:"USD_MIX"},accountsById:{EXCHANGE:"spot",USDT_MIX:"future",CONTRACT:"swap",USD_MIX:"swap"},sandboxMode:!1,networks:{TRX:"TRC20",ETH:"ERC20",BSC:"BEP20"},networksById:{TRC20:"TRX",BSC:"BEP20"}}})}setSandboxMode(e){this.options.sandboxMode=e}async fetchTime(e={}){const t=await this.publicSpotGetPublicTime(e);return this.safeInteger(t,"data")}async fetchMarkets(e={}){const t=this.safeValue(this.options,"sandboxMode",!1);let i=this.safeValue(this.options,"fetchMarkets",["spot","swap"]);t&&(i=["swap"]);let s=[];for(let r=0;r<i.length;r++){const a=i[r];if("swap"===a){let i;i=t?["sumcbl","sdmcbl","scmcbl"]:["umcbl","dmcbl","cmcbl"];for(let t=0;t<i.length;t++)s.push(this.fetchMarketsByType(a,this.extend(e,{productType:i[t]})))}else s.push(this.fetchMarketsByType(i[r],e))}s=await Promise.all(s);let r=s[0];for(let e=1;e<s.length;e++)r=this.arrayConcat(r,s[e]);return r}parseMarkets(e){const t=[];for(let i=0;i<e.length;i++)t.push(this.parseMarket(e[i]));return t}parseMarket(e){const t=this.safeString(e,"symbol"),i=this.safeString(e,"quoteCoin"),s=this.safeString(e,"baseCoin"),r=this.safeCurrencyCode(i),n=this.safeCurrencyCode(s),o=this.safeValue(e,"supportMarginCoins",[]),d=this.safeString(o,0),c=this.safeCurrencyCode(d);let h=n+"/"+r;const u=t.split("_"),l=this.safeString(u,1);let p,f,m,v,g,y,b,w=!1,S=!1,P=!1,k=!1;if("SPBL"===l)p="spot",S=!0,f=this.parseNumber(this.parsePrecision(this.safeString(e,"priceScale"))),m=this.parseNumber(this.parsePrecision(this.safeString(e,"quantityScale")));else{const t=this.safeString(u,2);void 0!==t?(b="20"+t.slice(0,2)+"-"+t.slice(2,4)+"-"+t.slice(4,6)+"T00:00:00Z",y=this.parse8601(b),p="future",P=!0,h=h+":"+c+"-"+t):(p="swap",w=!0,h=h+":"+c),k=!0,v="UMCBL"===l||"CMCBL"===l||"SUMCBL"===l||"SCMCBL"===l,g=!v;const i=this.safeInteger(e,"pricePlace"),s=this.safeInteger(e,"volumePlace"),r=this.safeString(e,"priceEndStep"),n=this.safeString(e,"minTradeNum"),o=new a.O(r);o.decimals=Math.max(o.decimals,i),o.reduce();const d=o.toString();f=this.parseNumber(d);const S=new a.O(n);S.decimals=Math.max(S.decimals,s),S.reduce();const O=S.toString();m=this.parseNumber(O)}const O=this.safeString2(e,"status","symbolStatus");let T,A;return void 0!==O&&(T="online"===O||"normal"===O),"USDT"===r&&(A=this.safeNumber(e,"minTradeUSDT")),{id:t,symbol:h,base:n,quote:r,settle:c,baseId:s,quoteId:i,settleId:d,type:p,spot:S,margin:!1,swap:w,future:P,option:!1,active:T,contract:k,linear:v,inverse:g,taker:this.safeNumber(e,"takerFeeRate"),maker:this.safeNumber(e,"makerFeeRate"),contractSize:1,expiry:y,expiryDatetime:b,strike:void 0,optionType:void 0,precision:{amount:m,price:f},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber2(e,"minTradeNum","minTradeAmount"),max:this.safeNumber(e,"maxTradeAmount")},price:{min:void 0,max:void 0},cost:{min:A,max:void 0}},info:e}}async fetchMarketsByType(e,t={}){const i=this.getSupportedMapping(e,{spot:"publicSpotGetPublicProducts",swap:"publicMixGetMarketContracts"}),s=await this[i](t),r=this.safeValue(s,"data",[]);return this.parseMarkets(r)}async fetchCurrencies(e={}){const t=await this.publicSpotGetPublicCurrencies(e),i={},s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"coinId"),a=this.safeCurrencyCode(this.safeString(t,"coinName")),n=this.safeValue(t,"chains",[]),o={};for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"chain"),s=this.safeCurrencyCode(i),r=this.safeString(t,"withdrawable"),a=this.safeString(t,"rechargeable");o[s]={info:t,id:i,network:s,limits:{withdraw:{min:this.safeNumber(t,"minWithdrawAmount"),max:void 0},deposit:{min:this.safeNumber(t,"minDepositAmount"),max:void 0}},active:void 0,withdraw:"true"===r,deposit:"true"===a,fee:this.safeNumber(t,"withdrawFee"),precision:void 0}}i[a]={info:t,id:r,code:a,networks:o,type:void 0,name:void 0,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires a `code` argument");const a=this.currency(e);void 0===t&&(t=this.milliseconds()-31556952e3);const n={coin:a.code,startTime:t,endTime:this.milliseconds()};void 0!==i&&(n.pageSize=i);const o=await this.privateSpotGetWalletDepositList(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTransactions(d,a,t,i)}async withdraw(e,t,i,s=undefined,a={}){this.checkAddress(i);const n=this.safeString(a,"chain");if(void 0===n)throw new r.ArgumentsRequired(this.id+" withdraw() requires a chain parameter");await this.loadMarkets();const o={coin:this.currency(e).code,address:i,chain:n,amount:t};void 0!==s&&(o.tag=s);const d=await this.privateSpotPostWalletWithdrawal(this.extend(o,a)),c={id:this.safeString(d,"data"),info:d,txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:"withdrawal",currency:void 0,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0},h=this.safeValue(this.options,"withdraw",{});return this.safeValue(h,"fillResponseFromRequest",!0)&&(c.currency=e,c.timestamp=this.milliseconds(),c.datetime=this.iso8601(this.milliseconds()),c.amount=t,c.tag=s,c.address=i,c.addressTo=i,c.network=n),c}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires a `code` argument");const a=this.currency(e);void 0===t&&(t=this.milliseconds()-31556952e3);const n={coin:a.code,startTime:t,endTime:this.milliseconds()};void 0!==i&&(n.pageSize=i);const o=await this.privateSpotGetWalletWithdrawalList(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTransactions(d,a,t,i)}parseTransaction(e,t=undefined){const i=this.safeInteger(e,"cTime"),s=this.safeString(e,"chain"),r=this.safeString(e,"coin"),a=this.safeString(e,"status");return{id:this.safeString(e,"id"),info:e,txid:this.safeString(e,"txId"),timestamp:i,datetime:this.iso8601(i),network:s,addressFrom:void 0,address:this.safeString(e,"toAddress"),addressTo:this.safeString(e,"toAddress"),amount:this.safeNumber(e,"amount"),type:this.safeString(e,"type"),currency:this.safeCurrencyCode(r),status:this.parseTransactionStatus(a),updated:this.safeNumber(e,"uTime"),tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0}}parseTransactionStatus(e){return this.safeString({success:"ok",Pending:"pending",pending_review:"pending",pending_review_fail:"failed",reject:"failed"},e,e)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.safeString(t,"network"),s=this.networkCodeToId(i,e),r=this.currency(e),a={coin:r.code};void 0!==s&&(a.chain=s);const n=await this.privateSpotGetWalletDepositAddress(this.extend(a,t)),o=this.safeValue(n,"data",{});return this.parseDepositAddress(o,r)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"coin"),s=this.safeString(e,"chain"),r=this.safeCurrencyCode(i,t);return{currency:r,address:this.safeString(e,"address"),tag:this.safeString(e,"tag"),network:this.networkIdToCode(s,r),info:e}}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),[r,a]=this.handleMarketTypeAndParams("fetchOrderBook",s,i),n=this.getSupportedMapping(r,{spot:"publicSpotGetMarketDepth",swap:"publicMixGetMarketDepth"}),o={symbol:s.id};void 0!==t&&(o.limit=t);const d=await this[n](this.extend(o,a)),c=this.safeValue(d,"data"),h=this.safeInteger(c,"timestamp");return this.parseOrderBook(c,e,h)}parseTicker(e,t=undefined){let i=this.safeString(e,"symbol");void 0===t&&void 0!==i&&-1===i.indexOf("_")&&(i+="_SPBL");const s=this.safeSymbol(i,t),r=this.safeString(e,"high24h"),n=this.safeString(e,"low24h"),o=this.safeString2(e,"close","last"),d=this.safeString2(e,"quoteVol","quoteVolume"),c=this.safeString2(e,"baseVol","baseVolume"),h=this.safeInteger2(e,"ts","timestamp"),u=this.iso8601(h),l=this.safeString2(e,"buyOne","bestBid"),p=this.safeString2(e,"sellOne","bestAsk"),f=a.O.stringMul(this.safeString(e,"priceChangePercent"),"100");return this.safeTicker({symbol:s,timestamp:h,datetime:u,high:r,low:n,bid:l,bidVolume:void 0,ask:p,askVolume:void 0,vwap:void 0,open:void 0,close:o,last:void 0,previousClose:void 0,change:void 0,percentage:f,average:void 0,baseVolume:c,quoteVolume:d,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},[r,a]=this.handleMarketTypeAndParams("fetchTicker",i,t),n=this.getSupportedMapping(r,{spot:"publicSpotGetMarketTicker",swap:"publicMixGetMarketTicker"}),o=await this[n](this.extend(s,a)),d=this.safeValue(o,"data");return this.parseTicker(d,i)}async fetchTickers(e=undefined,t={}){const i=this.safeValue(this.options,"sandboxMode",!1);let s,r;if(await this.loadMarkets(),void 0!==e){const t=this.safeValue(e,0);r=this.market(t)}[s,t]=this.handleMarketTypeAndParams("fetchTickers",r,t);const a=this.getSupportedMapping(s,{spot:"publicSpotGetMarketTickers",swap:"publicMixGetMarketTickers"}),n={};if("publicMixGetMarketTickers"===a){let e;[e,t]=this.handleSubTypeAndParams("fetchTickers",void 0,t);let s="linear"===e?"UMCBL":"DMCBL";i&&(s="S"+s),n.productType=s}const o=await this[a](this.extend(n,t)),d=this.safeValue(o,"data");return this.parseTickers(d,e)}parseTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeString2(e,"tradeId","fillId"),n=this.safeString(e,"orderId"),o=this.safeString(e,"side"),d=this.safeString2(e,"fillPrice","price");let c=this.safeString2(e,"fillQuantity","size");c=this.safeString(e,"sizeQty",c);let h,u=this.safeInteger2(e,"fillTime","timestamp");u=this.safeInteger(e,"cTime",u);const l=this.safeString(e,"fees"),p=this.safeString(e,"orderType");if(void 0!==l){const t=this.safeCurrencyCode(this.safeString(e,"feeCcy"));h={code:t,currency:t,cost:a.O.stringNeg(l)}}const f=this.iso8601(u);return this.safeTrade({info:e,id:r,order:n,symbol:s,side:o,type:p,takerOrMaker:void 0,price:d,amount:c,cost:void 0,fee:h,timestamp:u,datetime:f},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t&&(a.limit=t);const[n,o]=this.handleMarketTypeAndParams("fetchTrades",r,s),d=this.getSupportedMapping(n,{spot:"publicSpotGetMarketFills",swap:"publicMixGetMarketFills"}),c=await this[d](this.extend(a,o)),h=this.safeValue(c,"data",[]);return this.parseTrades(h,r,i,t)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicSpotGetPublicProduct(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTradingFee(a,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicSpotGetPublicProducts(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.parseTradingFee(t);s[r.symbol]=r}return s}parseTradingFee(e,t=undefined){const i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i,t),maker:this.safeNumber(e,"makerFeeRate"),taker:this.safeNumber(e,"takerFeeRate")}}parseOHLCV(e,t=undefined,i="1m"){return[this.safeInteger2(e,0,"ts"),this.safeNumber2(e,1,"open"),this.safeNumber2(e,2,"high"),this.safeNumber2(e,3,"low"),this.safeNumber2(e,4,"close"),this.safeNumber2(e,5,"baseVol")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id},[o,d]=this.handleMarketTypeAndParams("fetchOHLCV",a,r),c=this.getSupportedMapping(o,{spot:"publicSpotGetMarketCandles",swap:"publicMixGetMarketCandles"}),h=this.safeInteger2(d,"until","till");void 0===s&&(s=100);const u=this.options.timeframes[o],l=this.safeString(u,t,t),p=this.parseTimeframe(t);if(a.spot)n.period=l,n.limit=s,void 0!==i&&(n.after=i,void 0===h&&(n.before=this.sum(i,s*p*1e3))),void 0!==h&&(n.before=h);else if(a.swap){n.granularity=l;const e=this.milliseconds();void 0===i?(n.startTime=e-1e3*p*(s-1),n.endTime=e):(n.startTime=this.sum(i,1e3*p),n.endTime=void 0!==h?h:this.sum(i,s*p*1e3))}const f=this.omit(d,["until","till"]),m=await this[c](this.extend(n,f)),v=this.safeValue(m,"data",m);return this.parseOHLCVs(v,a,t,i,s)}async fetchBalance(e={}){const t=this.safeValue(this.options,"sandboxMode",!1);await this.loadMarkets();const[i,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),r=this.getSupportedMapping(i,{spot:"privateSpotGetAccountAssets",swap:"privateMixGetAccountAccounts"}),a={};if("swap"===i){let i;[i,e]=this.handleSubTypeAndParams("fetchBalance",void 0,e);let s="linear"===i?"UMCBL":"DMCBL";t&&(s="S"+s),a.productType=s}const n=await this[r](this.extend(a,s)),o=this.safeValue(n,"data");return this.parseBalance(o)}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString2(s,"coinName","marginCoin"),n=this.safeCurrencyCode(r),o=this.account(),d=this.safeString(s,"frozen"),c=this.safeString2(s,"lock","locked");o.used=a.O.stringAdd(d,c),o.free=this.safeString(s,"available"),t[n]=o}return this.safeBalance(t)}parseOrderStatus(e){return this.safeString({new:"open",init:"open",not_trigger:"open",triggered:"closed",full_fill:"closed",filled:"closed",fail_trigger:"canceled",cancel:"canceled",cancelled:"canceled",canceled:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString(e,"orderId"),a=this.safeString2(e,"price","executePrice"),n=this.safeString2(e,"quantity","size"),o=this.safeString2(e,"fillQuantity","filledQty"),d=this.safeString2(e,"fillTotalAmount","filledAmount"),c=this.safeString2(e,"fillPrice","priceAvg"),h=this.safeString(e,"orderType"),u=this.safeInteger(e,"cTime");let l=this.safeString2(e,"side","posSide");"open_long"===l||"close_short"===l?l="buy":"close_long"!==l&&"open_short"!==l||(l="sell");const p=this.safeString2(e,"clientOrderId","clientOid"),f=this.safeString2(e,"status","state"),m=this.parseOrderStatus(f),v=this.safeInteger(e,"uTime");return this.safeOrder({info:e,id:r,clientOrderId:p,timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:v,symbol:s,type:h,timeInForce:void 0,postOnly:void 0,side:l,price:a,stopPrice:this.safeNumber(e,"triggerPrice"),triggerPrice:this.safeNumber(e,"triggerPrice"),average:c,cost:d,amount:n,filled:o,remaining:void 0,status:m,fee:void 0,trades:void 0},t)}async createOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets();const d=this.market(e),[c,h]=this.handleMarketTypeAndParams("createOrder",d,o),u={symbol:d.id,orderType:t},l="market"===t,p=this.safeValue2(o,"stopPrice","triggerPrice"),f=void 0!==p,m=this.safeValue(o,"stopLossPrice"),v=void 0!==m,g=this.safeValue(o,"takeProfitPrice"),y=void 0!==g,b=v||y;if(this.sum(f,v,y)>1)throw new r.ExchangeError(this.id+" createOrder() params can only contain one of triggerPrice, stopLossPrice, takeProfitPrice");"limit"===t&&void 0===p&&(u.price=this.priceToPrecision(e,n));const w=this.safeString2(o,"clientOid","clientOrderId");let S=this.getSupportedMapping(c,{spot:"privateSpotPostTradeOrders",swap:"privateMixPostOrderPlaceOrder"});const P=this.safeString2(o,"force","timeInForceValue"),k=this.isPostOnly(l,"post_only"===P,o);if("spot"===c){if(b)throw new r.InvalidOrder(this.id+" createOrder() does not support stop loss/take profit orders on spot markets, only swap markets");let t,d="force",c="quantity";if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)&&l&&"buy"===i){if(void 0===n)throw new r.InvalidOrder(this.id+" createOrder() requires price argument for market buy orders on spot markets to calculate the total amount to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option to false and pass in the cost to spend into the amount parameter");{const i=this.numberToString(s),r=this.numberToString(n),o=this.parseNumber(a.O.stringMul(i,r));t=this.priceToPrecision(e,o)}}else t=this.amountToPrecision(e,s);if(void 0!==w&&(u.clientOrderId=w),u.side=i,void 0!==p){c="size",d="timeInForceValue";const t=this.safeString(o,"triggerType","market_price");u.triggerType=t,u.triggerPrice=this.priceToPrecision(e,p),u.executePrice=this.priceToPrecision(e,n),S="privateSpotPostPlanPlacePlan"}void 0!==t&&(u[c]=t),u[d]=k?"post_only":"normal"}else{void 0!==w&&(u.clientOid=w),u.size=this.amountToPrecision(e,s),k&&(u.timeInForceValue="post_only");const t=this.safeValue(o,"reduceOnly",!1);if(void 0!==p){const t=this.safeString(o,"triggerType","market_price");u.triggerType=t,u.triggerPrice=this.priceToPrecision(e,p),void 0!==n&&(u.executePrice=this.priceToPrecision(e,n)),S="privateMixPostPlanPlacePlan"}if(b){if(!l)throw new r.ExchangeError(this.id+" createOrder() bitget stopLoss or takeProfit orders must be market orders");v?(u.triggerPrice=this.priceToPrecision(e,m),u.planType="loss_plan"):y&&(u.triggerPrice=this.priceToPrecision(e,g),u.planType="profit_plan"),u.holdSide="buy"===i?"long":"short",S="privateMixPostPlanPlaceTPSL"}else u.side=t?"buy"===i?"close_short":"close_long":"buy"===i?"open_long":"open_short";u.marginCoin=d.settleId}const O=this.omit(h,["stopPrice","triggerType","stopLossPrice","takeProfitPrice","postOnly"]),T=await this[S](this.extend(u,O)),A=this.safeValue(T,"data");return this.parseOrder(A,d)}async editOrder(e,t,i,s,n,o=undefined,d={}){await this.loadMarkets();const c=this.market(t),[h,u]=this.handleMarketTypeAndParams("editOrder",c,d),l={orderId:e,orderType:i},p="market"===i,f=this.safeValue2(d,"stopPrice","triggerPrice"),m=void 0!==f,v=this.safeValue(d,"stopLossPrice"),g=void 0!==v,y=this.safeValue(d,"takeProfitPrice"),b=void 0!==y,w=g||b;if(this.sum(m,g,b)>1)throw new r.ExchangeError(this.id+" editOrder() params can only contain one of triggerPrice, stopLossPrice, takeProfitPrice");if(!w&&!m)throw new r.InvalidOrder(this.id+" editOrder() only support plan orders");let S=this.getSupportedMapping(h,{spot:"privateSpotPostPlanModifyPlan",swap:"privateMixPostPlanModifyPlan"});if(void 0!==f){const e=this.safeString(d,"triggerType","market_price");l.triggerType=e,l.triggerPrice=this.priceToPrecision(t,f),l.executePrice=this.priceToPrecision(t,o)}if("spot"===h){if(w)throw new r.InvalidOrder(this.id+" editOrder() does not support stop orders on spot markets, only swap markets");if(this.safeValue(this.options,"editMarketBuyOrderRequiresPrice",!0)&&p&&"buy"===s){if(void 0===o)throw new r.InvalidOrder(this.id+" editOrder() requires price argument for market buy orders on spot markets to calculate the total amount to spend (amount * price), alternatively set the editMarketBuyOrderRequiresPrice option to false and pass in the cost to spend into the amount parameter");{const e=this.numberToString(n),i=this.numberToString(o),s=this.parseNumber(a.O.stringMul(e,i));l.size=this.priceToPrecision(t,s)}}else l.size=this.amountToPrecision(t,n)}else{if(l.symbol=c.id,l.size=this.amountToPrecision(t,n),w){if(!p)throw new r.ExchangeError(this.id+" editOrder() bitget stopLoss or takeProfit orders must be market orders");g?(l.triggerPrice=this.priceToPrecision(t,v),l.planType="loss_plan"):b&&(l.triggerPrice=this.priceToPrecision(t,y),l.planType="profit_plan"),S="privateMixPostPlanModifyTPSLPlan"}l.marginCoin=c.settleId}const P=this.omit(u,["stopPrice","triggerType","stopLossPrice","takeProfitPrice"]),k=await this[S](this.extend(l,P)),O=this.safeValue(k,"data");return this.parseOrder(O,c)}async cancelOrder(e,t=undefined,i={}){this.checkRequiredSymbol("cancelOrder",t),await this.loadMarkets();const s=this.market(t),[a,n]=this.handleMarketTypeAndParams("cancelOrder",s,i);let o=this.getSupportedMapping(a,{spot:"privateSpotPostTradeCancelOrder",swap:"privateMixPostOrderCancelOrder"});const d={symbol:s.id,orderId:e};if(this.safeValue(n,"stop"))if("spot"===a)o="privateSpotPostPlanCancelPlan";else{const e=this.safeString(i,"planType");if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a planType parameter for stop orders, either normal_plan, profit_plan or loss_plan");d.planType=e,o="privateMixPostPlanCancelPlan"}"swap"===a&&(d.marginCoin=s.settleId);const c=this.omit(n,["stop","planType"]),h=await this[o](this.extend(d,c));return this.parseOrder(h,s)}async cancelOrders(e,t=undefined,i={}){this.checkRequiredSymbol("cancelOrders",t),await this.loadMarkets();const s=this.market(t),a=this.safeString(i,"type",s.type);if(void 0===a)throw new r.ArgumentsRequired(this.id+" cancelOrders() requires a type parameter (one of 'spot', 'swap').");i=this.omit(i,"type");const n={};let o;if("spot"===a){o="apiPostOrderOrdersBatchcancel",n.method="batchcancel";const t=this.json(e).split('"');n.order_ids=t.join("")}else"swap"===a&&(o="privateMixPostOrderCancelBatchOrders",n.symbol=s.id,n.marginCoin=s.quote,n.orderIds=e);return await this[o](this.extend(n,i))}async cancelAllOrders(e=undefined,t={}){const i=this.safeValue(this.options,"sandboxMode",!1);let s,a;await this.loadMarkets(),void 0!==e&&(s=this.market(e)),[a,t]=this.handleSubTypeAndParams("cancelAllOrders",s,t);let n="linear"===a?"UMCBL":"DMCBL";i&&(n="S"+n);const[o,d]=this.handleMarketTypeAndParams("cancelAllOrders",s,t);if("spot"===o)throw new r.NotSupported(this.id+" cancelAllOrders () does not support spot markets");const c={productType:n};let h;const u=this.safeValue(d,"stop"),l=this.safeString(d,"planType");if(void 0!==u||void 0!==l){if(void 0===l)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a planType parameter for stop orders, either normal_plan, profit_plan, loss_plan, pos_profit, pos_loss, moving_plan or track_plan");h="privateMixPostPlanCancelAllPlan"}else{const e=this.safeString2(t,"code","marginCoin");if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders () requires a code argument [marginCoin] in the params");const i=this.currency(e);c.marginCoin=this.safeCurrencyCode(e,i),h="privateMixPostOrderCancelAllOrders"}const p=this.omit(d,["stop","code","marginCoin"]);return await this[h](this.extend(c,p))}async fetchOrder(e,t=undefined,i={}){this.checkRequiredSymbol("fetchOrder",t),await this.loadMarkets();const s=this.market(t),[r,a]=this.handleMarketTypeAndParams("fetchOrder",s,i),n=this.getSupportedMapping(r,{spot:"privateSpotPostTradeOrderInfo",swap:"privateMixGetOrderDetail"}),o={symbol:s.id,orderId:e},d=await this[n](this.extend(o,a)),c=this.safeValue(d,"data"),h=this.safeValue(c,0,c);return this.parseOrder(h,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){this.checkRequiredSymbol("fetchOpenOrders",e),await this.loadMarkets();const r=this.market(e);let a,n;[a,n]=this.handleMarketTypeAndParams("fetchOpenOrders",r,s);const o={symbol:r.id};let d=this.getSupportedMapping(a,{spot:"privateSpotPostTradeOpenOrders",swap:"privateMixGetOrderCurrent"});this.safeValue(n,"stop")&&("spot"===a?(d="privateSpotPostPlanCurrentPlan",void 0!==i&&(o.pageSize=i)):d="privateMixGetPlanCurrentPlan",n=this.omit(n,"stop"));const c=await this[d](this.extend(o,n));let h=this.safeValue(c,"data",[]);return Array.isArray(h)||(h=this.safeValue(h,"orderList",[])),this.parseOrders(h,r,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),this.checkRequiredSymbol("fetchClosedOrders",e);const r=this.market(e),a=await this.fetchCanceledAndClosedOrders(e,t,i,s),n=[];for(let e=0;e<a.length;e++){const t=a[e];"closed"===this.parseOrderStatus(this.safeString2(t,"state","status"))&&n.push(t)}return this.parseOrders(n,r,t,i)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),this.checkRequiredSymbol("fetchCanceledOrders",e);const r=this.market(e),a=await this.fetchCanceledAndClosedOrders(e,t,i,s),n=[];for(let e=0;e<a.length;e++){const t=a[e];"canceled"===this.parseOrderStatus(this.safeString2(t,"state","status"))&&n.push(t)}return this.parseOrders(n,r,t,i)}async fetchCanceledAndClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);let a;[a,s]=this.handleMarketTypeAndParams("fetchCanceledAndClosedOrders",r,s);const n={symbol:r.id};let o=this.getSupportedMapping(a,{spot:"privateSpotPostTradeHistory",swap:"privateMixGetOrderHistory"});const d=this.safeValue(s,"stop");d&&(o="spot"===a?"privateSpotPostPlanHistoryPlan":"privateMixGetPlanHistoryPlan",s=this.omit(s,"stop")),("swap"===a||d)&&(void 0===i&&(i=100),n.pageSize=i,void 0===t&&(t=0),n.startTime=t,n.endTime=this.milliseconds());const c=await this[o](this.extend(n,s)),h=this.safeValue(c,"data");return this.safeValue(h,"orderList",h)}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.coinId=r.id);const n=await this.privateSpotPostAccountBills(this.extend(a,s)),o=this.safeValue(n,"data");return this.parseLedger(o,r,t,i)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"billId"),s=this.safeString(e,"coinId"),r=this.safeCurrencyCode(s),n=this.parseNumber(a.O.stringAbs(this.safeString(e,"quantity"))),o=this.safeInteger(e,"cTime"),d=this.safeString(e,"bizType");let c;void 0!==d&&d.indexOf("-")>=0&&(c=d.split("-")[1]);const h=this.safeString(e,"groupType"),u=this.safeNumber(e,"fees"),l=this.safeNumber(e,"balance");return{info:e,id:i,timestamp:o,datetime:this.iso8601(o),direction:c,account:void 0,referenceId:void 0,referenceAccount:void 0,type:h,currency:r,amount:n,before:void 0,after:l,status:void 0,fee:u}}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){this.checkRequiredSymbol("fetchMyTrades",e),await this.loadMarkets();const a=this.market(e);if(a.swap)throw new r.BadSymbol(this.id+" fetchMyTrades() only supports spot markets");const n={symbol:a.id};void 0!==i&&(n.limit=i);const o=await this.privateSpotPostTradeFills(this.extend(n,s)),d=this.safeValue(o,"data");return this.parseTrades(d,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){this.checkRequiredSymbol("fetchOrderTrades",t),await this.loadMarkets();const a=this.market(t),[n,o]=this.handleMarketTypeAndParams("fetchOrderTrades",a,r),d=this.getSupportedMapping(n,{spot:"privateSpotPostTradeFills",swap:"privateMixGetOrderFills"}),c={symbol:a.id,orderId:e},h=await this[d](this.extend(c,o)),u=this.safeValue(h,"data");return this.parseTrades(u,a,i,s)}async fetchPosition(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id,marginCoin:i.settleId},r=await this.privateMixGetPositionSinglePosition(this.extend(s,t)),a=this.safeValue(r,"data",[]);return this.parsePositions(a)}async fetchPositions(e=undefined,t={}){const i=this.safeValue(this.options,"sandboxMode",!1);let s,r;if(await this.loadMarkets(),void 0!==e){const t=this.safeString(e,0);s=this.market(t)}[r,t]=this.handleSubTypeAndParams("fetchPositions",s,t);let a="linear"===r?"UMCBL":"DMCBL";i&&(a="S"+a);const n={productType:a},o=await this.privateMixGetPositionAllPosition(this.extend(n,t)),d=this.safeValue(o,"data",[]),c=[];for(let e=0;e<d.length;e++)c.push(this.parsePosition(d[e]));return e=this.marketSymbols(e),this.filterByArray(c,"symbol",e,!1)}parsePosition(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeInteger(e,"cTime");let n,o,d=this.safeString(e,"marginMode");const c=this.safeString(e,"unrealizedPL"),h=this.safeString(e,"margin");"fixed"===d?(d="isolated",n=a.O.stringAdd(h,c)):"crossed"===d&&(d="cross",o=h);const u=this.safeString(e,"holdMode");let l;"double_hold"===u?l=!0:"single_hold"===u&&(l=!1);const p=this.safeString(e,"holdSide"),f=this.safeString(e,"leverage"),m=this.safeValue(t,"contractSize"),v=this.numberToString(m),g=this.safeString(e,"total"),y=this.safeString(e,"averageOpenPrice"),b=this.safeString(e,"keepMarginRate"),w=a.O.stringMul(y,g);void 0===o&&(o=a.O.stringDiv(w,f));const S=this.parseNumber(a.O.stringDiv(g,v)),P=this.safeString(e,"marketPrice"),k=a.O.stringMul(g,P),O=a.O.stringDiv(o,k);let T=this.parseNumber(this.omitZero(this.safeString(e,"liquidationPrice")));const A="0.9994";if(void 0===T&&"isolated"===d&&a.O.stringGt(g,"0")){let e=a.O.stringDiv(h,g),t=b;"short"===p&&(e=a.O.stringNeg(e),t=a.O.stringNeg(t));let i=a.O.stringSub("1",t),s=a.O.stringSub(y,e);"long"===p?i=a.O.stringMul(i,A):s=a.O.stringMul(s,A),T=this.parseNumber(a.O.stringDiv(s,i))}const G=a.O.stringMul(k,"0.0006"),I=a.O.stringAdd(a.O.stringMul(b,k),G),C=a.O.stringDiv(I,n),M=a.O.stringMul(a.O.stringDiv(c,o,4),"100");return{info:e,id:void 0,symbol:s,notional:this.parseNumber(k),marginMode:d,liquidationPrice:T,entryPrice:this.parseNumber(y),unrealizedPnl:this.parseNumber(c),percentage:this.parseNumber(M),contracts:S,contractSize:m,markPrice:this.parseNumber(P),side:p,hedged:l,timestamp:r,datetime:this.iso8601(r),maintenanceMargin:this.parseNumber(I),maintenanceMarginPercentage:this.parseNumber(b),collateral:this.parseNumber(n),initialMargin:this.parseNumber(o),initialMarginPercentage:this.parseNumber(O),leverage:this.parseNumber(f),marginRatio:this.parseNumber(C)}}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){this.checkRequiredSymbol("fetchFundingRateHistory",e),await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.pageSize=i);const n=await this.publicMixGetMarketHistoryFundRate(this.extend(a,s)),o=this.safeValue(n,"data",[]),d=[];for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,"symbol"),s=this.safeSymbol(i,r),a=this.safeInteger(t,"settleTime");d.push({info:t,symbol:s,fundingRate:this.safeString(t,"fundingRate"),timestamp:a,datetime:this.iso8601(a)})}const c=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(c,r.symbol,t,i)}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");const s={symbol:i.id},a=await this.publicMixGetMarketCurrentFundRate(this.extend(s,t)),n=this.safeValue(a,"data",{});return this.parseFundingRate(n,i)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i,t),markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingHistory(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.market(e);if(!a.swap)throw new r.BadSymbol(this.id+" fetchFundingHistory() supports swap contracts only");void 0===t&&(t=this.milliseconds()-31556952e3);const n={symbol:a.id,marginCoin:a.quoteId,startTime:t,endTime:this.milliseconds()};void 0!==i&&(n.pageSize=i);const o=await this.privateMixGetAccountAccountBill(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"result",[]);return this.parseFundingHistories(c,a,t,i)}parseFundingHistory(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,void 0,"swap"),r=this.safeString(e,"marginCoin"),a=this.safeCurrencyCode(r),n=this.safeNumber(e,"amount"),o=this.safeInteger(e,"cTime"),d=this.safeString(e,"id");return{info:e,symbol:s,timestamp:o,datetime:this.iso8601(o),code:a,amount:n,id:d}}parseFundingHistories(e,t=undefined,i=undefined,s=undefined){const r=[];for(let i=0;i<e.length;i++){const s=e[i];"contract_settle_fee"===this.safeString(s,"business")&&r.push(this.parseFundingHistory(s,t))}const a=this.sortBy(r,"timestamp");return this.filterBySinceLimit(a,i,s)}async modifyMarginHelper(e,t,i,s={}){await this.loadMarkets();const r=this.safeString(s,"holdSide"),a=this.market(e),n=a.linear?a.quote:a.base,o={symbol:a.id,marginCoin:n,amount:this.amountToPrecision(e,t),holdSide:r};s=this.omit(s,"holdSide");const d=await this.privateMixPostAccountSetMargin(this.extend(o,s));return this.extend(this.parseMarginModification(d,a),{amount:this.parseNumber(t),type:i})}parseMarginModification(e,t=undefined){const i="00000"===this.safeString(e,"code")?"ok":"failed";return{info:e,type:void 0,amount:void 0,code:t.linear?t.quote:t.base,symbol:t.symbol,status:i}}async reduceMargin(e,t,i={}){if(t>0)throw new r.BadRequest(this.id+" reduceMargin() amount parameter must be a negative value");if(void 0===this.safeString(i,"holdSide"))throw new r.ArgumentsRequired(this.id+" reduceMargin() requires a holdSide parameter, either long or short");return await this.modifyMarginHelper(e,t,"reduce",i)}async addMargin(e,t,i={}){if(void 0===this.safeString(i,"holdSide"))throw new r.ArgumentsRequired(this.id+" addMargin() requires a holdSide parameter, either long or short");return await this.modifyMarginHelper(e,t,"add",i)}async fetchLeverage(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id,marginCoin:i.settleId};return await this.privateMixGetAccountAccount(this.extend(s,t))}async setLeverage(e,t=undefined,i={}){this.checkRequiredSymbol("setLeverage",t),await this.loadMarkets();const s=this.market(t),r={symbol:s.id,marginCoin:s.settleId,leverage:e};return await this.privateMixPostAccountSetLeverage(this.extend(r,i))}async setMarginMode(e,t=undefined,i={}){if(this.checkRequiredSymbol("setMarginMode",t),"fixed"!==(e=e.toLowerCase())&&"crossed"!==e)throw new r.ArgumentsRequired(this.id+' setMarginMode() marginMode must be "fixed" or "crossed"');await this.loadMarkets();const s=this.market(t),a={symbol:s.id,marginCoin:s.settleId,marginMode:e};return await this.privateMixPostAccountSetMarginMode(this.extend(a,i))}async setPositionMode(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue(this.options,"sandboxMode",!1),r={holdMode:e?"double_hold":"single_hold"};let a,n;void 0!==t&&(n=this.market(t)),[a,i]=this.handleSubTypeAndParams("setPositionMode",n,i);let o="linear"===a?"UMCBL":"DMCBL";return s&&(o="S"+o),r.productType=o,await this.privateMixPostAccountSetPositionMode(this.extend(r,i))}async fetchOpenInterest(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.contract)throw new r.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");const s={symbol:i.id},a=await this.publicMixGetMarketOpenInterest(this.extend(s,t)),n=this.safeValue(a,"data",{});return this.parseOpenInterest(n,i)}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),[r,s]=this.handleMarketTypeAndParams("fetchTransfers",void 0,s);const a=this.safeString(s,"fromAccount",r);s=this.omit(s,"fromAccount");const n=this.safeValue(this.options,"accountsByType",{});r=this.safeString(n,a);const o={fromType:r};let d;void 0!==e&&(d=this.currency(e),o.coinId=d.id),void 0!==t&&(o.before=t),void 0!==i&&(o.limit=i);const c=await this.privateSpotGetAccountTransferRecords(this.extend(o,s)),h=this.safeValue(c,"data",[]);return this.parseTransfers(h,d,t,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n="swap"===i,o="swap"===s,d="USDT"===a.code;n?i=d?"mix_usdt":"mix_usd":o&&(s=d?"mix_usdt":"mix_usd");const c={fromType:i,toType:s,amount:t,coin:a.info.coinName},h=await this.privateSpotPostWalletTransfer(this.extend(c,r));return this.parseTransfer(h,a)}parseTransfer(e,t=undefined){let i=this.safeInteger2(e,"requestTime","tradeTime");void 0===i&&(i=this.safeTimestamp(e,"cTime"));const s=this.safeStringLowerN(e,["msg","status"]);let r=this.safeString2(e,"code","coinName");"00000"===r&&(r=void 0);const a=this.safeString(e,"fromType"),n=this.safeValue(this.options,"accountsById",{}),o=this.safeString(n,a,a),d=this.safeString(e,"toType"),c=this.safeString(n,d,d);return{info:e,id:this.safeString2(e,"id","billId"),timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(r),amount:this.safeNumberN(e,["size","quantity","amount"]),fromAccount:o,toAccount:c,status:this.parseTransferStatus(s)}}parseTransferStatus(e){return this.safeString({success:"ok",successful:"ok"},e,e)}parseOpenInterest(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol");return{symbol:this.safeSymbol(s,t),openInterestAmount:this.safeNumber(e,"amount"),openInterestValue:void 0,timestamp:i,datetime:this.iso8601(i),info:e}}handleErrors(e,t,i,s,a,n,o,d,c){if(!o)return;const h=this.safeString(o,"err_msg"),u=this.safeString2(o,"code","err_code"),l=this.id+" "+n,p=void 0!==h&&""!==h;p&&(this.throwExactlyMatchedException(this.exceptions.exact,h,l),this.throwBroadlyMatchedException(this.exceptions.broad,h,l));const f=void 0!==u&&"00000"!==u;if(f&&this.throwExactlyMatchedException(this.exceptions.exact,u,l),f||p)throw new r.ExchangeError(l)}sign(e,t=[],i="GET",s={},r=undefined,a=undefined){const n="private"===t[0],d=t[1],c=("spot"===d?"/api/spot/v1":"/api/mix/v1")+"/"+this.implodeParams(e,s);let h=this.implodeHostname(this.urls.api[d])+c;const u=this.omit(s,this.extractParams(e));if(n||"GET"!==i||Object.keys(u).length>0&&(h=h+"?"+this.urlencode(u)),n){this.checkRequiredCredentials();const e=this.milliseconds().toString();let t=e+i+c;if("POST"===i)t+=a=this.json(s);else if(Object.keys(s).length){const e="?"+this.urlencode(this.keysort(s));h+=e,t+=e}const n=this.hmac(this.encode(t),this.encode(this.secret),o.J,"base64"),d=this.safeString(this.options,"broker");r={"ACCESS-KEY":this.apiKey,"ACCESS-SIGN":n,"ACCESS-TIMESTAMP":e,"ACCESS-PASSPHRASE":this.password,"X-CHANNEL-API-CODE":d},"POST"===i&&(r["Content-Type"]="application/json")}return{url:h,method:i,body:a,headers:r}}}},5305:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5823),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bithumb",name:"Bithumb",countries:["KR"],rateLimit:500,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},hostname:"bithumb.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/30597177-ea800172-9d5e-11e7-804c-b9d4fa9b56b0.jpg",api:{public:"https://api.{hostname}/public",private:"https://api.{hostname}"},www:"https://www.bithumb.com",doc:"https://apidocs.bithumb.com",fees:"https://en.bithumb.com/customer_support/info_fee"},api:{public:{get:["ticker/{currency}","ticker/all","ticker/ALL_BTC","ticker/ALL_KRW","orderbook/{currency}","orderbook/all","transaction_history/{currency}","transaction_history/all","candlestick/{currency}/{interval}"]},private:{post:["info/account","info/balance","info/wallet_address","info/ticker","info/orders","info/user_transactions","info/order_detail","trade/place","trade/cancel","trade/btc_withdrawal","trade/krw_deposit","trade/krw_withdrawal","trade/market_buy","trade/market_sell"]}},fees:{trading:{maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.0025")}},precisionMode:n.tV,exceptions:{"Bad Request(SSL)":r.BadRequest,"Bad Request(Bad Method)":r.BadRequest,"Bad Request.(Auth Data)":r.AuthenticationError,"Not Member":r.AuthenticationError,"Invalid Apikey":r.AuthenticationError,"Method Not Allowed.(Access IP)":r.PermissionDenied,"Method Not Allowed.(BTC Adress)":r.InvalidAddress,"Method Not Allowed.(Access)":r.PermissionDenied,"Database Fail":r.ExchangeNotAvailable,"Invalid Parameter":r.BadRequest,5600:r.ExchangeError,"Unknown Error":r.ExchangeError,"After May 23th, recent_transactions is no longer, hence users will not be able to connect to recent_transactions":r.ExchangeError},timeframes:{"1m":"1m","3m":"3m","5m":"5m","10m":"10m","30m":"30m","1h":"1h","6h":"6h","12h":"12h","1d":"24h"},options:{quoteCurrencies:{BTC:{limits:{cost:{min:2e-4,max:100}}},KRW:{limits:{cost:{min:500,max:5e9}}}}},commonCurrencies:{FTC:"FTC2",SOC:"Soda Coin"}})}safeMarket(e=undefined,t=undefined,i=undefined,s=undefined){return super.safeMarket(e,t,i,"spot")}amountToPrecision(e,t){return this.decimalToPrecision(t,n.tk,this.markets[e].precision.amount,n.nr)}async fetchMarkets(e={}){const t=[],i=this.safeValue(this.options,"quoteCurrencies",{}),s=Object.keys(i);for(let r=0;r<s.length;r++){const a=s[r],n=a,o=this.safeValue(i,a,{}),d="publicGetTickerALL"+a,c=await this[d](e),h=this.safeValue(c,"data"),u=Object.keys(h);for(let e=0;e<u.length;e++){const i=u[e];if("date"===i)continue;const s=h[i],r=this.safeCurrencyCode(i);let d=!0;Array.isArray(s)&&0===s.length&&(d=!1);const c=this.deepExtend({id:i,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDateTime:void 0,strike:void 0,optionType:void 0,precision:{amount:parseInt("4"),price:parseInt("4")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{}},info:s},o);t.push(c)}}return t}parseBalance(e){const t={info:e},i=this.safeValue(e,"data"),s=Object.keys(this.currencies);for(let e=0;e<s.length;e++){const r=s[e],a=this.account(),n=this.currency(r),o=this.safeStringLower(n,"id");a.total=this.safeString(i,"total_"+o),a.used=this.safeString(i,"in_use_"+o),a.free=this.safeString(i,"available_"+o),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostInfoBalance(this.extend({currency:"ALL"},e));return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={currency:s.base+"_"+s.quote};void 0!==t&&(r.count=t);const a=await this.publicGetOrderbookCurrency(this.extend(r,i)),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,e,o,"bids","asks","price","quantity")}parseTicker(e,t=undefined){const i=this.safeInteger(e,"date"),s=this.safeSymbol(void 0,t),r=this.safeString(e,"opening_price"),a=this.safeString(e,"closing_price"),n=this.safeString(e,"units_traded_24H"),o=this.safeString(e,"acc_trade_value_24H");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"max_price"),low:this.safeString(e,"min_price"),bid:this.safeString(e,"buy_price"),bidVolume:void 0,ask:this.safeString(e,"sell_price"),askVolume:void 0,vwap:void 0,open:r,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={},s=this.safeValue(this.options,"quoteCurrencies",{}),r=Object.keys(s);for(let e=0;e<r.length;e++){const s=r[e],a="publicGetTickerALL"+s,n=await this[a](t),o=this.safeValue(n,"data",{}),d=this.safeInteger(o,"date"),c=this.omit(o,"date"),h=Object.keys(c);for(let e=0;e<h.length;e++){const t=h[e],r=o[t],a=this.safeCurrencyCode(t)+"/"+s,n=this.safeMarket(a);r.date=d,i[a]=this.parseTicker(r,n)}}return this.filterByArray(i,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={currency:i.base},r=await this.publicGetTickerCurrency(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,i)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={currency:a.base,interval:this.safeString(this.timeframes,t,t)},o=await this.publicGetCandlestickCurrencyInterval(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseOHLCVs(d,a,t,i,s)}parseTrade(e,t=undefined){let i;const s=this.safeString(e,"transaction_date");if(void 0!==s){const t=s.split(" ");if(t.length>1){const e=t[0];let s=t[1];s.length<8&&(s="0"+s),i=this.parse8601(e+" "+s)}else i=this.safeIntegerProduct(e,"transaction_date",.001)}void 0!==i&&(i-=324e5);let r=this.safeString(e,"type");r="ask"===r?"sell":"buy";const a=this.safeString(e,"cont_no");t=this.safeMarket(void 0,t);const n=this.safeString(e,"price"),o=this.fixCommaNumber(this.safeString2(e,"units_traded","units")),d=this.safeString(e,"total");let c;const h=this.safeString(e,"fee");if(void 0!==h){const t=this.safeString(e,"fee_currency");c={cost:h,currency:this.commonCurrencyCode(t)}}return this.safeTrade({id:a,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:void 0,type:void 0,side:r,takerOrMaker:void 0,price:n,amount:o,cost:d,fee:c},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={currency:r.base};void 0!==i&&(a.count=i);const n=await this.publicGetTransactionHistoryCurrency(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d={order_currency:o.id,payment_currency:o.quote,units:s};let c="privatePostTradePlace";"limit"===t?(d.price=a,d.type="buy"===i?"bid":"ask"):c="privatePostTradeMarket"+this.capitalize(i);const h=await this[c](this.extend(d,n)),u=this.safeString(h,"order_id");if(void 0===u)throw new r.InvalidOrder(this.id+" createOrder() did not return an order id");return this.safeOrder({info:h,symbol:e,type:t,side:i,id:u},o)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={order_id:e,count:1,order_currency:s.base,payment_currency:s.quote},n=await this.privatePostInfoOrderDetail(this.extend(a,i)),o=this.safeValue(n,"data");return this.parseOrder(this.extend(o,{order_id:e}),s)}parseOrderStatus(e){return this.safeString({Pending:"open",Completed:"closed",Cancel:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeIntegerProduct(e,"order_date",.001),s="bid"===this.safeValue2(e,"type","side")?"buy":"sell",r=this.parseOrderStatus(this.safeString(e,"order_status")),n=this.safeString2(e,"order_price","price");let o="limit";a.O.stringEquals(n,"0")&&(o="market");const d=this.fixCommaNumber(this.safeString2(e,"order_qty","units"));let c,h=this.fixCommaNumber(this.safeString(e,"units_remaining"));void 0===h&&("closed"===r?h="0":"canceled"!==r&&(h=d));const u=this.safeString(e,"order_currency"),l=this.safeString(e,"payment_currency"),p=this.safeCurrencyCode(u),f=this.safeCurrencyCode(l);void 0!==p&&void 0!==f&&(c=p+"/"+f),void 0===c&&(c=(t=this.safeMarket(void 0,t)).symbol);const m=this.safeString(e,"order_id"),v=this.safeValue(e,"contract",[]);return this.safeOrder({info:e,id:m,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:c,type:o,timeInForce:void 0,postOnly:void 0,side:s,price:n,stopPrice:void 0,triggerPrice:void 0,amount:d,cost:void 0,average:void 0,filled:void 0,remaining:h,status:r,fee:void 0,trades:v},t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e);void 0===i&&(i=100);const n={count:i,order_currency:a.base,payment_currency:a.quote};void 0!==t&&(n.after=t);const o=await this.privatePostInfoOrders(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseOrders(d,a,t,i)}async cancelOrder(e,t=undefined,i={}){if(!("side"in i))throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a `side` parameter (sell or buy)");if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a `symbol` argument");const s=this.market(t),a="buy"===i.side?"bid":"ask";i=this.omit(i,["side","currency"]);const n={order_id:e,type:a,order_currency:s.base,payment_currency:s.quote};return await this.privatePostTradeCancel(this.extend(n,i))}cancelUnifiedOrder(e,t={}){const i={side:e.side};return this.cancelOrder(e.id,e.symbol,this.extend(i,t))}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e),o={units:t,address:i,currency:n.id};if("XRP"===n||"XMR"===n||"EOS"===n||"STEEM"===n){const t=this.safeString(a,"destination");if(void 0===s&&void 0===t)throw new r.ArgumentsRequired(this.id+" "+e+" withdraw() requires a tag argument or an extra destination param");void 0!==s&&(o.destination=s)}const d=await this.privatePostTradeBtcWithdrawal(this.extend(o,a));return this.parseTransaction(d,n)}parseTransaction(e,t=undefined){return{id:void 0,txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}fixCommaNumber(e){if(void 0===e)return;let t=e;for(;t.indexOf(",")>-1;)t=t.replace(",","");return t}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n="/"+this.implodeParams(e,s);let d=this.implodeHostname(this.urls.api[t])+n;const c=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(c).length&&(d+="?"+this.urlencode(c));else{this.checkRequiredCredentials(),a=this.urlencode(this.extend({endpoint:n},c));const e=this.nonce().toString(),t=n+"\0"+a+"\0"+e,i=this.hmac(this.encode(t),this.encode(this.secret),o.o),s=this.stringToBase64(i);r={Accept:"application/json","Content-Type":"application/x-www-form-urlencoded","Api-Key":this.apiKey,"Api-Sign":s,"Api-Nonce":e}}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"status"in o){const e=this.safeString(o,"status"),t=this.safeString(o,"message");if(void 0!==e){if("0000"===e)return;if("거래 진행중인 내역이 존재하지 않습니다"===t)return;const i=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,i),this.throwExactlyMatchedException(this.exceptions,t,i),new r.ExchangeError(i)}}}}},3718:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(4993),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitmart",name:"BitMart",countries:["US","CN","HK","KR"],rateLimit:33.34,version:"v2",certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:void 0,future:!1,option:void 0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createOrder:!0,createPostOnlyOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFee:!0,fetchDepositWithdrawFees:!1,fetchFundingHistory:void 0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPositionMode:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactionFee:!0,fetchTransactionFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawAddressesByNetwork:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,repayMargin:!0,setLeverage:!1,setMarginMode:!1,transfer:!0,withdraw:!0},hostname:"bitmart.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/129991357-8f47464b-d0f4-41d6-8a82-34122f0d1398.jpg",api:{rest:"https://api-cloud.{hostname}"},www:"https://www.bitmart.com/",doc:"https://developer-pro.bitmart.com/",referral:{url:"http://www.bitmart.com/?r=rQCFLh",discount:.3},fees:"https://www.bitmart.com/fee/en"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:{"system/time":3,"system/service":3,"spot/v1/currencies":7.5,"spot/v1/symbols":7.5,"spot/v1/symbols/details":5,"spot/v1/ticker":5,"spot/v2/ticker":5,"spot/v1/steps":30,"spot/v1/symbols/kline":5,"spot/v1/symbols/book":5,"spot/v1/symbols/trades":5,"contract/v1/tickers":15,"contract/public/details":5,"contract/public/depth":5,"contract/public/open-interest":30,"contract/public/funding-rate":30,"contract/public/kline":5}},private:{get:{"account/sub-account/v1/transfer-list":7.5,"account/sub-account/v1/transfer-history":7.5,"account/sub-account/main/v1/wallet":5,"account/sub-account/main/v1/subaccount-list":7.5,"account/v1/wallet":5,"account/v1/currencies":30,"spot/v1/wallet":5,"account/v1/deposit/address":30,"account/v1/withdraw/charge":32,"account/v2/deposit-withdraw/history":7.5,"account/v1/deposit-withdraw/detail":7.5,"spot/v1/order_detail":1,"spot/v2/orders":5,"spot/v1/trades":5,"spot/v2/trades":5,"spot/v3/orders":5,"spot/v2/order_detail":1,"spot/v1/margin/isolated/borrow_record":1,"spot/v1/margin/isolated/repay_record":1,"spot/v1/margin/isolated/pairs":1,"spot/v1/margin/isolated/account":6,"spot/v1/trade_fee":6,"spot/v1/user_fee":6,"contract/private/assets-detail":5,"contract/private/order":2,"contract/private/order-history":10,"contract/private/position":10},post:{"account/sub-account/main/v1/sub-to-main":30,"account/sub-account/sub/v1/sub-to-main":30,"account/sub-account/main/v1/main-to-sub":30,"account/sub-account/sub/v1/sub-to-sub":30,"account/sub-account/main/v1/sub-to-sub":30,"account/v1/withdraw/apply":7.5,"spot/v1/submit_order":1,"spot/v1/batch_orders":1,"spot/v2/cancel_order":1,"spot/v1/cancel_orders":15,"spot/v3/cancel_order":1,"spot/v2/batch_orders":1,"spot/v2/submit_order":1,"spot/v1/margin/submit_order":1,"spot/v1/margin/isolated/borrow":6,"spot/v1/margin/isolated/repay":6,"spot/v1/margin/isolated/transfer":6,"contract/private/trades":10}}},timeframes:{"1m":1,"3m":3,"5m":5,"15m":15,"30m":30,"45m":45,"1h":60,"2h":120,"3h":180,"4h":240,"1d":1440,"1w":10080,"1M":43200},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.0025"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0020")],[this.parseNumber("10"),this.parseNumber("0.18")],[this.parseNumber("50"),this.parseNumber("0.0016")],[this.parseNumber("250"),this.parseNumber("0.0014")],[this.parseNumber("1000"),this.parseNumber("0.0012")],[this.parseNumber("5000"),this.parseNumber("0.0010")],[this.parseNumber("25000"),this.parseNumber("0.0008")],[this.parseNumber("50000"),this.parseNumber("0.0006")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("10"),this.parseNumber("0.0009")],[this.parseNumber("50"),this.parseNumber("0.0008")],[this.parseNumber("250"),this.parseNumber("0.0007")],[this.parseNumber("1000"),this.parseNumber("0.0006")],[this.parseNumber("5000"),this.parseNumber("0.0005")],[this.parseNumber("25000"),this.parseNumber("0.0004")],[this.parseNumber("50000"),this.parseNumber("0.0003")]]}}},precisionMode:n.sh,exceptions:{exact:{3e4:r.ExchangeError,30001:r.AuthenticationError,30002:r.AuthenticationError,30003:r.AccountSuspended,30004:r.AuthenticationError,30005:r.AuthenticationError,30006:r.AuthenticationError,30007:r.AuthenticationError,30008:r.AuthenticationError,30010:r.PermissionDenied,30011:r.AuthenticationError,30012:r.AuthenticationError,30013:r.RateLimitExceeded,30014:r.ExchangeNotAvailable,6e4:r.BadRequest,60001:r.BadRequest,60002:r.BadRequest,60003:r.ExchangeError,60004:r.ExchangeError,60005:r.ExchangeError,60006:r.ExchangeError,60007:r.InvalidAddress,60008:r.InsufficientFunds,60009:r.ExchangeError,60010:r.ExchangeError,60011:r.InvalidAddress,60012:r.ExchangeError,60020:r.PermissionDenied,60021:r.PermissionDenied,60022:r.PermissionDenied,60030:r.BadRequest,60031:r.BadRequest,60050:r.ExchangeError,60051:r.ExchangeError,61001:r.InsufficientFunds,61003:r.BadRequest,5e4:r.BadRequest,50001:r.BadSymbol,50002:r.BadRequest,50003:r.BadRequest,50004:r.BadRequest,50005:r.OrderNotFound,50006:r.InvalidOrder,50007:r.InvalidOrder,50008:r.InvalidOrder,50009:r.InvalidOrder,50010:r.InvalidOrder,50011:r.InvalidOrder,50012:r.InvalidOrder,50013:r.InvalidOrder,50014:r.BadRequest,50015:r.BadRequest,50016:r.BadRequest,50017:r.BadRequest,50018:r.BadRequest,50019:r.BadRequest,51004:r.InsufficientFunds,50020:r.InsufficientFunds,50021:r.BadRequest,50022:r.ExchangeNotAvailable,50023:r.BadSymbol,50029:r.InvalidOrder,50030:r.InvalidOrder,50032:r.OrderNotFound,50035:r.InvalidOrder,50034:r.InvalidOrder,51011:r.InvalidOrder,53e3:r.AccountSuspended,53001:r.AccountSuspended,57001:r.BadRequest,58001:r.BadRequest,59001:r.ExchangeError,59002:r.ExchangeError,40001:r.ExchangeError,40002:r.ExchangeError,40003:r.ExchangeError,40004:r.ExchangeError,40005:r.ExchangeError,40006:r.PermissionDenied,40007:r.BadRequest,40008:r.InvalidNonce,40009:r.BadRequest,40010:r.BadRequest,40011:r.BadRequest,40012:r.ExchangeError,40013:r.ExchangeError,40014:r.BadSymbol,40015:r.BadSymbol,40016:r.InvalidOrder,40017:r.InvalidOrder,40018:r.InvalidOrder,40019:r.ExchangeError,40020:r.InvalidOrder,40021:r.ExchangeError,40022:r.ExchangeError,40023:r.ExchangeError,40024:r.ExchangeError,40025:r.ExchangeError,40026:r.ExchangeError,40027:r.InsufficientFunds,40028:r.PermissionDenied,40029:r.InvalidOrder,40030:r.InvalidOrder,40031:r.InvalidOrder,40032:r.InvalidOrder,40033:r.InvalidOrder,40034:r.BadSymbol,53002:r.PermissionDenied},broad:{}},commonCurrencies:{$GM:"GOLDMINER",$HERO:"Step Hero",$PAC:"PAC",BP:"BEYOND",GDT:"Gorilla Diamond",GLD:"Goldario",MVP:"MVP Coin",TRU:"Truebit"},options:{networks:{TRX:"TRC20",ETH:"ERC20"},defaultNetworks:{USDT:"ERC20"},defaultType:"spot",fetchBalance:{type:"spot"},accountsByType:{spot:"spot"},createMarketBuyOrderRequiresPrice:!0}})}async fetchTime(e={}){const t=await this.publicGetSystemTime(e),i=this.safeValue(t,"data",{});return this.safeInteger(i,"server_time")}async fetchStatus(e={}){const t=this.safeValue(this.options,"fetchStatus",{}),i=this.safeString(this.options,"defaultType");let s=this.safeString(t,"type",i);s=this.safeString(e,"type",s),e=this.omit(e,"type");const r=await this.publicGetSystemService(e),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"service",[]),o=this.indexBy(n,"service_type");"swap"===s&&(s="contract");const d=this.safeValue(o,s);let c,h;return void 0!==d&&(2===this.safeInteger(d,"status")?c="ok":(c="maintenance",h=this.safeInteger(d,"end_time"))),{status:c,updated:void 0,eta:h,url:void 0,info:r}}async fetchSpotMarkets(e={}){const t=await this.publicGetSpotV1SymbolsDetails(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"symbols",[]),r=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"symbol"),n=this.safeInteger(t,"symbol_id"),o=this.safeString(t,"base_currency"),d=this.safeString(t,"quote_currency"),c=this.safeCurrencyCode(o),h=this.safeCurrencyCode(d),u=c+"/"+h,l=this.safeString(t,"min_buy_amount"),p=this.safeString(t,"min_sell_amount"),f=a.O.stringMax(l,p),m=this.safeNumber(t,"base_min_size");r.push({id:i,numericId:n,symbol:u,base:c,quote:h,settle:void 0,baseId:o,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:m,price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_max_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:m,max:this.safeNumber(t,"base_max_size")},price:{min:void 0,max:void 0},cost:{min:this.parseNumber(f),max:void 0}},info:t})}return r}async fetchContractMarkets(e={}){const t=await this.publicGetContractV1Tickers(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"tickers",[]),r=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"contract_symbol"),a=i.slice(0,-4),n=i.slice(-4),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c="USDT",h=o+"/"+d+":"+c;r.push({id:i,numericId:void 0,symbol:h,base:o,quote:d,settle:c,baseId:a,quoteId:n,settleId:void 0,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:!0,contract:!0,linear:!0,inverse:!1,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return r}async fetchMarkets(e={}){const t=await this.fetchSpotMarkets(e),i=await this.fetchContractMarkets(e);return this.arrayConcat(t,i)}async fetchCurrencies(e={}){const t=await this.publicGetSpotV1Currencies(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"currencies",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"id"),a=this.safeCurrencyCode(i),n=this.safeString(t,"name"),o=this.safeValue(t,"withdraw_enabled"),d=this.safeValue(t,"deposit_enabled"),c=o&&d;r[a]={id:i,code:a,name:n,info:t,active:c,deposit:d,withdraw:o,fee:void 0,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return r}async fetchTransactionFee(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.privateGetAccountV1WithdrawCharge(this.extend(i,t)),r=s.data,a={};return a[e]=this.safeNumber(r,"withdraw_fee"),{info:s,withdraw:a,deposit:{}}}parseDepositWithdrawFee(e,t=undefined){return{info:e,withdraw:{fee:this.safeNumber(e,"withdraw_fee"),percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}}}async fetchDepositWithdrawFee(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=(await this.privateGetAccountV1WithdrawCharge(this.extend(i,t))).data;return this.parseDepositWithdrawFee(s)}parseTicker(e,t=undefined){const i=this.safeInteger(e,"timestamp",this.milliseconds()),s=this.safeString2(e,"symbol","contract_symbol"),r=(t=this.safeMarket(s,t)).symbol,n=this.safeString2(e,"close_24h","last_price");let o=this.safeString(e,"price_change_percent_24h");if(void 0===o){const t=this.safeString(e,"fluctuation");if(void 0!==t&&"0"!==t){const e=t[0];o=e+a.O.stringMul(t.replace(e,""),"100")}else"0"===t&&(o="0")}const d=this.safeString(e,"base_volume_24h");let c=this.safeString(e,"quote_volume_24h");c=this.safeString(e,"volume_24h",c);const h=this.safeString2(e,"avg_price","index_price"),u=this.safeString2(e,"high_24h","high_price"),l=this.safeString2(e,"low_24h","low_price");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:u,low:l,bid:this.safeString(e,"best_bid"),bidVolume:this.safeString(e,"best_bid_size"),ask:this.safeString(e,"best_ask"),askVolume:this.safeString(e,"best_ask_size"),vwap:void 0,open:this.safeString(e,"open_24h"),close:n,last:n,previousClose:void 0,change:void 0,percentage:o,average:h,baseVolume:d,quoteVolume:c,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={};let r;i.swap?(r="publicGetContractV1Tickers",s.contract_symbol=i.id):i.spot&&(r="publicGetSpotV1Ticker",s.symbol=i.id);const a=await this[r](this.extend(s,t)),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"tickers",[]);let d;i.spot?d=this.indexBy(o,"symbol"):i.swap&&(d=this.indexBy(o,"contract_symbol"));const c=this.safeValue(d,i.id);return this.parseTicker(c,i)}async fetchTickers(e=undefined,t={}){let i,s;if(await this.loadMarkets(),void 0!==(e=this.marketSymbols(e))){const t=this.safeValue(e,0);s=this.market(t)}[i,t]=this.handleMarketTypeAndParams("fetchTickers",s,t);const r=this.getSupportedMapping(i,{spot:"publicGetSpotV2Ticker",swap:"publicGetContractV1Tickers"}),a=await this[r](t),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"tickers",[]),d={};for(let e=0;e<o.length;e++){const t=this.parseTicker(o[e]);d[t.symbol]=t}return this.filterByArray(d,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);if(!s.spot)throw new r.NotSupported(this.id+" fetchOrderBook() does not support "+s.type+" markets, only spot markets are accepted");const a={symbol:s.id};void 0!==t&&(a.size=t);const n=await this.publicGetSpotV1SymbolsBook(this.extend(a,i)),o=this.safeValue(n,"data",{}),d=this.safeInteger(o,"timestamp");return this.parseOrderBook(o,e,d,"buys","sells","price","amount")}parseTrade(e,t=undefined){const i=this.safeString(e,"detail_id"),s=this.safeInteger2(e,"order_time","create_time"),r=this.safeStringLower2(e,"type","side");let a;const n=this.safeString(e,"exec_type");void 0!==n&&(a="M"===n?"maker":"taker");let o=this.safeString(e,"price");o=this.safeString(e,"price_avg",o);let d=this.safeString(e,"count");d=this.safeString(e,"size",d);const c=this.safeString2(e,"amount","notional"),h=this.safeString(e,"order_id"),u=this.safeString(e,"symbol");t=this.safeMarket(u,t,"_");const l=this.safeString(e,"fees");let p;if(void 0!==l){const i=this.safeString(e,"fee_coin_name");let s=this.safeCurrencyCode(i);void 0===s&&(s="buy"===r?t.base:t.quote),p={cost:l,currency:s}}return this.safeTrade({info:e,id:i,order:h,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:r,price:o,amount:d,cost:c,takerOrMaker:a,fee:p},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.market(e);if(!a.spot)throw new r.NotSupported(this.id+" fetchTrades() does not support "+a.type+" orders, only spot orders are accepted");const n={symbol:a.id},o=await this.publicGetSpotV1SymbolsTrades(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"trades",[]);return this.parseTrades(c,a,t,i)}parseOHLCV(e,t=undefined){return Array.isArray(e)?[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]:[this.safeTimestamp(e,"timestamp"),this.safeNumber2(e,"open","open_price"),this.safeNumber2(e,"high","high_price"),this.safeNumber2(e,"low","low_price"),this.safeNumber2(e,"close","close_price"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=a.type,o=this.parseTimeframe(t),d=this.safeInteger(this.timeframes,t),c={symbol:a.id};c.step=void 0!==d?d:t,void 0===s&&(s=500),s=Math.min(500,s);const h=this.parseToInt(this.milliseconds()/1e3),u="spot"===n?"from":"start_time",l="spot"===n?"to":"end_time";if(void 0===i){const e=h-s*o;c[u]=e,c[l]=h}else{const e=this.parseToInt(i/1e3)-1,t=this.sum(e,s*o);c[u]=e,c[l]=Math.min(t,h)}let p="publicGetSpotV1SymbolsKline";"swap"===n&&(p="publicGetContractPublicKline");const f=await this[p](this.extend(c,r)),m=this.safeValue(f,"data",{}),v=this.safeValue(m,"klines",[]),g="spot"===n?v:m;return this.parseOHLCVs(g,a,t,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e);if(!a.spot)throw new r.NotSupported(this.id+" fetchMyTrades() does not support "+a.type+" orders, only spot orders are accepted");const n=this.safeValue(this.options,"fetchMyTrades",{}),o=this.safeInteger(n,"limit",200);void 0===i&&(i=o);const d={symbol:a.id,N:i},c=await this.privateGetSpotV2Trades(this.extend(d,s)),h=this.safeValue(c,"data",{}),u=this.safeValue(h,"trades",[]);return this.parseTrades(u,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,a={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrderTrades() requires a symbol argument");await this.loadMarkets();const n=this.market(t);if(!n.spot)throw new r.NotSupported(this.id+" fetchOrderTrades() does not support "+n.type+" orders, only spot orders are accepted");const o=this.safeValue(this.options,"fetchOrderTrades",{}),d=this.safeInteger(o,"limit",200);void 0===s&&(s=d);const c={symbol:n.id,order_id:e,N:s},h=await this.privateGetSpotV2Trades(this.extend(c,a)),u=this.safeValue(h,"data",{}),l=this.safeValue(u,"trades",[]);return this.parseTrades(l,n,i,s)}parseBalance(e,t){const i=this.safeValue(e,"data",{});let s;s="swap"===t?this.safeValue(e,"data",[]):"margin"===t?this.safeValue(i,"symbols",[]):this.safeValue(i,"wallet",[]);const r={info:e};if("margin"===t){for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"symbol"),a=this.safeSymbol(i,void 0,"_"),n=this.safeValue(t,"base",{}),o=this.safeValue(t,"quote",{}),d=this.safeCurrencyCode(this.safeString(n,"currency")),c=this.safeCurrencyCode(this.safeString(o,"currency")),h={};h[d]=this.parseBalanceHelper(n),h[c]=this.parseBalanceHelper(o),r[a]=this.safeBalance(h)}return r}for(let e=0;e<s.length;e++){const t=s[e];let i=this.safeString2(t,"id","currency");i=this.safeString(t,"coin_code",i);const a=this.safeCurrencyCode(i),n=this.account();n.free=this.safeString2(t,"available","available_balance"),n.used=this.safeString2(t,"frozen","frozen_balance"),r[a]=n}return this.safeBalance(r)}parseBalanceHelper(e){const t=this.account();t.used=this.safeString(e,"frozen"),t.free=this.safeString(e,"available"),t.total=this.safeString(e,"total_asset");const i=this.safeString(e,"borrow_unpaid"),s=this.safeString(e,"interest_unpaid");return t.debt=a.O.stringAdd(i,s),t}async fetchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let i=this.getSupportedMapping(t,{spot:"privateGetSpotV1Wallet",swap:"privateGetContractPrivateAssetsDetail",account:"privateGetAccountV1Wallet",margin:"privateGetSpotV1MarginIsolatedAccount"});const s=this.safeString(e,"marginMode"),r=this.safeValue(e,"margin",!1);e=this.omit(e,["margin","marginMode"]),(void 0!==s||r)&&(i="privateGetSpotV1MarginIsolatedAccount",t="margin");const a=await this[i](e);return this.parseBalance(a,t)}parseTradingFee(e,t=undefined){const i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i),maker:this.safeNumber(e,"maker_fee_rate"),taker:this.safeNumber(e,"taker_fee_rate")}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.spot)throw new r.NotSupported(this.id+" fetchTradingFee() does not support "+i.type+" orders, only spot orders are accepted");const s={symbol:i.id},a=await this.privateGetSpotV1TradeFee(this.extend(s,t)),n=this.safeValue(a,"data");return this.parseTradingFee(n)}parseOrder(e,t=undefined){let i;"string"==typeof e&&(i=e,e={}),i=this.safeString(e,"order_id",i);const s=this.safeInteger(e,"create_time"),r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t,"_");let n;void 0!==t&&(n=this.parseOrderStatusByType(t.type,this.safeString(e,"status")));const o=this.safeString(e,"size"),d=this.safeString(e,"filled_size"),c=this.safeString(e,"price_avg"),h=this.safeString(e,"price"),u=this.safeString(e,"side");let l,p,f=this.safeString(e,"type");return"limit_maker"===f&&(f="limit",p=!0,l="PO"),"ioc"===f&&(f="limit",l="IOC"),this.safeOrder({id:i,clientOrderId:void 0,info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:a,type:f,timeInForce:l,postOnly:p,side:u,price:h,stopPrice:void 0,triggerPrice:void 0,amount:o,cost:void 0,average:c,filled:d,remaining:void 0,status:n,fee:void 0,trades:void 0},t)}parseOrderStatusByType(e,t){const i=this.safeValue({spot:{1:"failed",2:"open",3:"failed",4:"open",5:"open",6:"closed",7:"canceling",8:"canceled"},swap:{1:"open",2:"open",4:"closed"}},e,{});return this.safeString(i,t,t)}async createOrder(e,t,i,s,o=undefined,d={}){await this.loadMarkets();const c=this.market(e),h={},u=this.safeString(d,"timeInForce");if("FOK"===u)throw new r.InvalidOrder(this.id+" createOrder() only accepts timeInForce parameter values of IOC or PO");const l="market"===t,p=this.isPostOnly(l,"limit_maker"===t,d);d=this.omit(d,["timeInForce","postOnly"]);const f="IOC"===u||"ioc"===t,m="limit"===t||p||f;let v;if(c.spot){if(h.symbol=c.id,h.side=i,h.type=t,v="privatePostSpotV2SubmitOrder",m)h.size=this.amountToPrecision(e,s),h.price=this.priceToPrecision(e,o);else if(l)if("buy"===i){let e=this.safeNumber(d,"notional");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==o){if(void 0===e){const t=this.numberToString(s),i=this.numberToString(o);e=this.parseNumber(a.O.stringMul(t,i))}}else if(void 0===e)throw new r.InvalidOrder(this.id+" createOrder () requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'notional' extra parameter (the exchange-specific behaviour)")}else e=void 0===e?s:e;h.notional=this.decimalToPrecision(e,n.tk,c.precision.price,this.precisionMode)}else"sell"===i&&(h.size=this.amountToPrecision(e,s))}else if(c.swap)throw new r.NotSupported(this.id+" createOrder() does not accept swap orders, only spot orders are allowed");p&&(h.type="limit_maker"),f&&(h.type="ioc");const[g,y]=this.handleMarginModeAndParams("createOrder",d);void 0!==g&&(v="privatePostSpotV1MarginSubmitOrder");const b=await this[v](this.extend(h,y)),w=this.safeValue(b,"data",{}),S=this.parseOrder(w,c);return this.extend(S,{type:t,side:i,amount:s,price:o})}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t);if(!s.spot)throw new r.NotSupported(this.id+" cancelOrder() does not support "+s.type+" orders, only spot orders are accepted");const a={order_id:e.toString(),symbol:s.id},n=await this.privatePostSpotV3CancelOrder(this.extend(a,i)),o=this.safeValue(n,"data");if(!0===o)return this.parseOrder(e,s);const d=this.safeValue(o,"succeed");if(void 0!==d){if(void 0===(e=this.safeString(d,0)))throw new r.InvalidOrder(this.id+" cancelOrder() failed to cancel "+t+" order id "+e)}else if(!this.safeValue(o,"result"))throw new r.InvalidOrder(this.id+" cancelOrder() "+t+" order id "+e+" is filled or canceled");const c=this.parseOrder(e,s);return this.extend(c,{id:e})}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s,a;if(void 0!==e&&(s=this.market(e),i.symbol=s.id),[a,t]=this.handleMarketTypeAndParams("cancelAllOrders",s,t),"spot"!==a)throw new r.NotSupported(this.id+" cancelAllOrders() does not support "+a+" orders, only spot orders are accepted");const n=this.safeString(t,"side");return void 0!==n&&(i.side=n,t=this.omit(t,"side")),await this.privatePostSpotV1CancelOrders(this.extend(i,t))}async fetchOrdersByStatus(e,t=undefined,i=undefined,s=undefined,a={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrdersByStatus() requires a symbol argument");await this.loadMarkets();const n=this.market(t);if(!n.spot)throw new r.NotSupported(this.id+" fetchOrdersByStatus() does not support "+n.type+" orders, only spot orders are accepted");const o={symbol:n.id,offset:1,N:100};o.status="open"===e?9:"closed"===e?6:"canceled"===e?8:e;const d=await this.privateGetSpotV3Orders(this.extend(o,a)),c=this.safeValue(d,"data",{}),h=this.safeValue(c,"orders",[]);return this.parseOrders(h,n,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("open",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("closed",e,t,i,s)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("canceled",e,t,i,s)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t);if(!s.spot)throw new r.NotSupported(this.id+" fetchOrder() does not support "+s.type+" orders, only spot orders are accepted");"string"!=typeof e&&(e=e.toString());const a={symbol:s.id,order_id:e},n=await this.privateGetSpotV2OrderDetail(this.extend(a,i)),o=this.safeValue(n,"data",{});return this.parseOrder(o,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id};if("USDT"===e){const s=this.safeValue(this.options,"defaultNetworks"),r=this.safeStringUpper(s,e),a=this.safeValue(this.options,"networks",{});let n=this.safeStringUpper(t,"network",r);n=this.safeString(a,n,n),void 0!==n&&(i.currency+="-"+n,t=this.omit(t,"network"))}const s=await this.privateGetAccountV1DepositAddress(this.extend(i,t)),r=this.safeValue(s,"data",{}),a=this.safeString(r,"address"),n=this.safeString(r,"address_memo"),o=this.safeString(r,"chain");let d;if(void 0!==o){const e=o.split("-"),t=this.safeString(e,1);d=this.safeNetwork(t)}return this.checkAddress(a),{currency:e,address:a,tag:n,network:d,info:s}}safeNetwork(e){return e}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,amount:t,destination:"To Digital Address",address:i};if(void 0!==s&&(n.address_memo=s),"USDT"===e){const t=this.safeValue(this.options,"defaultNetworks"),i=this.safeStringUpper(t,e),s=this.safeValue(this.options,"networks",{});let a=this.safeStringUpper(r,"network",i);a=this.safeString(s,a,a),void 0!==a&&(n.currency+="-"+a,r=this.omit(r,"network"))}const o=await this.privatePostAccountV1WithdrawApply(this.extend(n,r)),d=this.safeValue(o,"data"),c=this.parseTransaction(d,a);return this.extend(c,{code:e,address:i,tag:s})}async fetchTransactionsByType(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets(),void 0===s&&(s=50);const a={operation_type:e,offset:1,N:s};let n;if(void 0!==t&&(n=this.currency(t),a.currency=n.id),"USDT"===t){const e=this.safeValue(this.options,"defaultNetworks"),i=this.safeStringUpper(e,t),s=this.safeValue(this.options,"networks",{});let o=this.safeStringUpper(r,"network",i);o=this.safeString(s,o,o),void 0!==o&&(a.currency+="-"+o,n.code=a.currency,r=this.omit(r,"network"))}const o=await this.privateGetAccountV2DepositWithdrawHistory(this.extend(a,r)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"records",[]);return this.parseTransactions(c,n,i,s)}async fetchDeposit(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetAccountV1DepositWithdrawDetail(this.extend(s,i)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"record",{});return this.parseTransaction(n)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsByType("deposit",e,t,i,s)}async fetchWithdrawal(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetAccountV1DepositWithdrawDetail(this.extend(s,i)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"record",{});return this.parseTransaction(n)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsByType("withdraw",e,t,i,s)}parseTransactionStatus(e){return this.safeString({0:"pending",1:"pending",2:"pending",3:"ok",4:"canceled",5:"failed"},e,e)}parseTransaction(e,t=undefined){let i;const s=this.safeString(e,"withdraw_id"),r=this.safeString(e,"deposit_id");let a;void 0!==s&&""!==s?(a="withdraw",i=s):void 0!==r&&""!==r&&(a="deposit",i=r);const n=this.safeNumber(e,"arrival_amount"),o=this.safeInteger(e,"apply_time"),d=this.safeString(e,"currency"),c=this.safeCurrencyCode(d,t),h=this.parseTransactionStatus(this.safeString(e,"status")),u=this.safeNumber(e,"fee");let l;void 0!==u&&(l={cost:u,currency:c});const p=this.safeString(e,"tx_id");return{info:e,id:i,currency:c,amount:n,network:void 0,address:this.safeString(e,"address"),addressFrom:void 0,addressTo:void 0,tag:this.safeString(e,"address_memo"),tagFrom:void 0,tagTo:void 0,status:h,type:a,updated:void 0,txid:p,timestamp:0!==o?o:void 0,datetime:0!==o?this.iso8601(o):void 0,fee:l}}async repayMargin(e,t,i=undefined,s={}){if(await this.loadMarkets(),void 0===i)throw new r.ArgumentsRequired(this.id+" repayMargin() requires a symbol argument");const a=this.market(i),n=this.currency(e),o={symbol:a.id,currency:n.id,amount:this.currencyToPrecision(e,t)};s=this.omit(s,"marginMode");const d=await this.privatePostSpotV1MarginIsolatedRepay(this.extend(o,s)),c=this.safeValue(d,"data",{}),h=this.parseMarginLoan(c,n);return this.extend(h,{amount:t,symbol:i})}async borrowMargin(e,t,i=undefined,s={}){if(await this.loadMarkets(),void 0===i)throw new r.ArgumentsRequired(this.id+" borrowMargin() requires a symbol argument");const a=this.market(i),n=this.currency(e),o={symbol:a.id,currency:n.id,amount:this.currencyToPrecision(e,t)};s=this.omit(s,"marginMode");const d=await this.privatePostSpotV1MarginIsolatedBorrow(this.extend(o,s)),c=this.safeValue(d,"data",{}),h=this.parseMarginLoan(c,n);return this.extend(h,{amount:t,symbol:i})}parseMarginLoan(e,t=undefined){const i=this.milliseconds();return{id:this.safeString2(e,"borrow_id","repay_id"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchBorrowRate(e,t={}){let i;if(await this.loadMarkets(),e in this.markets)i=this.market(e);else{const t=this.safeString(this.options,"defaultSettle","USDT");i="USDT"===e?this.market("BTC/"+t):this.market(e+"/"+t)}const s={symbol:i.id},r=await this.privateGetSpotV1MarginIsolatedPairs(this.extend(s,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"symbols",[]),o="USDT"===e?i.quote:i.base;return this.parseBorrowRate(n,o)}parseBorrowRate(e,t=undefined){const i=this.milliseconds(),s="USDT"===t?this.safeValue(e[0],"quote",{}):this.safeValue(e[0],"base",{});return{currency:this.safeCurrencyCode(t),rate:this.safeNumber(s,"hourly_interest"),period:36e5,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.privateGetSpotV1MarginIsolatedPairs(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"symbols",[]);return this.parseBorrowRates(s,void 0)}parseBorrowRates(e,t){const i=this.milliseconds(),s=[];for(let t=0;t<e.length;t++){const r=e[t],a=this.safeValue(r,"base",{});s.push({currency:this.safeCurrencyCode(this.safeString(a,"currency")),rate:this.safeNumber(a,"hourly_interest"),period:36e5,timestamp:i,datetime:this.iso8601(i),info:r})}return s}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.currency(e),o=this.currencyToPrecision(e,t),d={amount:o,currency:n.id},c=this.convertTypeToAccount(i),h=this.convertTypeToAccount(s);if("spot"===i)d.side="in",d.symbol=h;else{if("spot"!==s)throw new r.ArgumentsRequired(this.id+" transfer() requires either fromAccount or toAccount to be spot");d.side="out",d.symbol=c}const u=await this.privatePostSpotV1MarginIsolatedTransfer(this.extend(d,a));return this.extend(this.parseTransfer(u,n),{amount:this.parseNumber(o),fromAccount:i,toAccount:s})}parseTransferStatus(e){return this.safeString({1e3:"ok",OK:"ok"},e,e)}parseTransfer(e,t=undefined){const i=this.safeValue(e,"data",{});return{id:this.safeString(i,"transfer_id"),timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.parseTransferStatus(this.safeString2(e,"code","message"))}}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,a={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchBorrowInterest() requires a symbol argument");await this.loadMarkets();const n=this.market(t),o={symbol:n.id};void 0!==s&&(o.N=s),void 0!==i&&(o.start_time=i);const d=await this.privateGetSpotV1MarginIsolatedBorrowRecord(this.extend(o,a)),c=this.safeValue(d,"data",{}),h=this.safeValue(c,"records",[]),u=this.parseBorrowInterests(h,n);return this.filterByCurrencySinceLimit(u,e,i,s)}parseBorrowInterest(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const s=this.safeInteger(e,"create_time");return{symbol:this.safeString(t,"symbol"),marginMode:"isolated",currency:this.safeCurrencyCode(this.safeString(e,"currency")),interest:this.safeNumber(e,"interest_amount"),interestRate:this.safeNumber(e,"hourly_interest"),amountBorrowed:this.safeNumber(e,"borrow_amount"),timestamp:s,datetime:this.iso8601(s),info:e}}handleMarginModeAndParams(e,t={},i=undefined){let s;if([s,t]=super.handleMarginModeAndParams(e,t,i),void 0!==s&&"isolated"!==s)throw new r.NotSupported(this.id+" only isolated margin is supported");return[s,t]}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.implodeHostname(this.urls.api.rest)+"/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));let c="";const h="GET"===i||"DELETE"===i;if(h&&Object.keys(d).length&&(c=this.urlencode(d),n+="?"+c),"private"===t){this.checkRequiredCredentials();const e=this.milliseconds().toString();r={"X-BM-KEY":this.apiKey,"X-BM-TIMESTAMP":e,"Content-Type":"application/json"},h||(c=a=this.json(d));const t=e+"#"+this.uid+"#"+c,i=this.hmac(this.encode(t),this.encode(this.secret),o.J);r["X-BM-SIGN"]=i}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeStringLower(o,"message"),u=this.safeString(o,"code");if(void 0!==u&&"1000"!==u||void 0!==h&&"ok"!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,h,e),new r.ExchangeError(e)}}}},7077:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(8154),r=i(9292),a=i(6689),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitmex",name:"BitMEX",countries:["SC"],version:"v1",userAgent:void 0,rateLimit:100,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!0,option:!1,addMargin:void 0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransactions:"emulated",fetchTransfer:!1,fetchTransfers:!1,reduceMargin:void 0,setLeverage:!0,setMargin:void 0,setMarginMode:!0,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","1h":"1h","1d":"1d"},urls:{test:{public:"https://testnet.bitmex.com",private:"https://testnet.bitmex.com"},logo:"https://user-images.githubusercontent.com/1294454/27766319-f653c6e6-5ed4-11e7-933d-f0bc3699ae8f.jpg",api:{public:"https://www.bitmex.com",private:"https://www.bitmex.com"},www:"https://www.bitmex.com",doc:["https://www.bitmex.com/app/apiOverview","https://github.com/BitMEX/api-connectors/tree/master/official-http"],fees:"https://www.bitmex.com/app/fees",referral:"https://www.bitmex.com/register/upZpOX"},api:{public:{get:{announcement:5,"announcement/urgent":5,funding:5,instrument:5,"instrument/active":5,"instrument/activeAndIndices":5,"instrument/activeIntervals":5,"instrument/compositeIndex":5,"instrument/indices":5,insurance:5,leaderboard:5,liquidation:5,orderBook:5,"orderBook/L2":5,quote:5,"quote/bucketed":5,schema:5,"schema/websocketHelp":5,settlement:5,stats:5,"stats/history":5,trade:5,"trade/bucketed":5,"wallet/assets":5,"wallet/networks":5}},private:{get:{apiKey:5,chat:5,"chat/channels":5,"chat/connected":5,execution:5,"execution/tradeHistory":5,notification:5,order:5,position:5,user:5,"user/affiliateStatus":5,"user/checkReferralCode":5,"user/commission":5,"user/depositAddress":5,"user/executionHistory":5,"user/margin":5,"user/minWithdrawalFee":5,"user/wallet":5,"user/walletHistory":5,"user/walletSummary":5,"wallet/assets":5,"wallet/networks":5,userEvent:5},post:{apiKey:5,"apiKey/disable":5,"apiKey/enable":5,chat:5,order:1,"order/bulk":5,"order/cancelAllAfter":5,"order/closePosition":5,"position/isolate":1,"position/leverage":1,"position/riskLimit":5,"position/transferMargin":1,"user/cancelWithdrawal":5,"user/confirmEmail":5,"user/confirmEnableTFA":5,"user/confirmWithdrawal":5,"user/disableTFA":5,"user/logout":5,"user/logoutAll":5,"user/preferences":5,"user/requestEnableTFA":5,"user/requestWithdrawal":5},put:{order:1,"order/bulk":5,user:5},delete:{apiKey:5,order:1,"order/all":1}}},exceptions:{exact:{"Invalid API Key.":a.AuthenticationError,"This key is disabled.":a.PermissionDenied,"Access Denied":a.PermissionDenied,"Duplicate clOrdID":a.InvalidOrder,"orderQty is invalid":a.InvalidOrder,"Invalid price":a.InvalidOrder,"Invalid stopPx for ordType":a.InvalidOrder},broad:{"Signature not valid":a.AuthenticationError,overloaded:a.ExchangeNotAvailable,"Account has insufficient Available Balance":a.InsufficientFunds,"Service unavailable":a.ExchangeNotAvailable,"Server Error":a.ExchangeError,"Unable to cancel order due to existing state":a.InvalidOrder,"We require all new traders to verify":a.PermissionDenied}},precisionMode:r.sh,options:{"api-expires":5,fetchOHLCVOpenTimestamp:!0,networks:{BTC:"btc",ETH:"eth",BSC:"bsc",BNB:"bsc",TRON:"tron",ERC20:"eth",BEP20:"bsc",TRC20:"tron",TRX:"tron",AVAX:"avax",NEAR:"near",XTZ:"xtz",DOT:"dot",SOL:"sol"},networksById:{btc:"BTC",eth:"ERC20",bsc:"BSC",tron:"TRX",avax:"AVAX",near:"NEAR",xtz:"XTZ",dot:"DOT",sol:"SOL"}},commonCurrencies:{USDt:"USDT",XBt:"BTC",XBT:"BTC",Gwei:"ETH",GWEI:"ETH",LAMP:"SOL",LAMp:"SOL"}})}async fetchMarkets(e={}){const t=await this.publicGetInstrumentActiveAndIndices(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"symbol"),a=this.safeString(s,"underlying"),o=this.safeString(s,"quoteCurrency"),d=this.safeString(s,"settlCurrency",""),c=this.safeCurrencyCode(a),h=this.safeCurrencyCode(o),u=this.safeCurrencyCode(d),l=r===a+o;let p,f=!1,m=c+"/"+h+":"+u;const v=this.safeString(s,"expiry"),g=this.parse8601(v),y=this.safeValue(s,"isInverse");let b="Unlisted"!==this.safeString(s,"state"),w=!0;l?p="swap":void 0!==g?(f=!0,p="future",m=m+"-"+this.yymmdd(g)):(m=c+"/"+h,b=!1,w=!1);const S=this.safeString2(s,"positionCurrency","underlying"),P=this.safeCurrencyCode(S)===h,k=this.safeNumber(s,"maxOrderQty"),O=this.safeString(s,"initMargin","1"),T=this.parseNumber(n.O.stringDiv("1",O)),A=n.O.stringAbs(this.safeString(s,"multiplier"));i.push({id:r,symbol:m,base:c,quote:h,settle:u,baseId:a,quoteId:o,settleId:d,type:p,spot:!1,margin:!1,swap:l,future:f,option:!1,active:b,contract:w,linear:w?!y:void 0,inverse:w?y:void 0,taker:this.safeNumber(s,"takerFee"),maker:this.safeNumber(s,"makerFee"),contractSize:this.parseNumber(A),expiry:g,expiryDatetime:v,strike:this.safeNumber(s,"optionStrikePrice"),optionType:void 0,precision:{amount:this.safeNumber(s,"lotSize"),price:this.safeNumber(s,"tickSize"),quote:this.safeNumber(s,"tickSize"),base:this.safeNumber(s,"tickSize")},limits:{leverage:{min:w?this.parseNumber("1"):void 0,max:w?T:void 0},amount:{min:void 0,max:P?void 0:k},price:{min:void 0,max:this.safeNumber(s,"maxPrice")},cost:{min:void 0,max:P?k:void 0}},info:s})}return i}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),o=this.account();let d=this.safeString(s,"availableMargin"),c=this.safeString(s,"marginBalance");if("USDT"!==a){const e=a+"_USDT",t=this.safeMarket(e),i=this.safeValue(t,"info",{}),s=this.safeString(i,"underlyingToPositionMultiplier");void 0!==s?(d=n.O.stringDiv(d,s),c=n.O.stringDiv(c,s)):(d=n.O.stringDiv(d,"1e8"),c=n.O.stringDiv(c,"1e8"))}else d=n.O.stringDiv(d,"1e6"),c=n.O.stringDiv(c,"1e6");o.free=d,o.total=c,t[a]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUserMargin(this.extend({currency:"all"},e));return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id};void 0!==t&&(s.depth=t);const r=await this.publicGetOrderBookL2(this.extend(s,i)),a={symbol:e,bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0};for(let e=0;e<r.length;e++){const t=r[e],i="Sell"===t.side?"asks":"bids",s=this.safeNumber(t,"size"),n=this.safeNumber(t,"price");void 0!==n&&a[i].push([n,s])}return a.bids=this.sortBy(a.bids,0,!0),a.asks=this.sortBy(a.asks,0),a}async fetchOrder(e,t=undefined,i={}){const s={filter:{orderID:e}},r=await this.fetchOrders(t,void 0,void 0,this.deepExtend(s,i));if(1===r.length)return r[0];throw new a.OrderNotFound(this.id+": The order "+e+" not found.")}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.startTime=this.iso8601(t)),void 0!==i&&(a.count=i),a=this.deepExtend(a,s),"filter"in a&&(a.filter=this.json(a.filter));const n=await this.privateGetOrder(a);return this.parseOrders(n,r,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.deepExtend({filter:{open:!0}},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){const r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();let a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.startTime=this.iso8601(t)),void 0!==i&&(a.count=i),a=this.deepExtend(a,s),"filter"in a&&(a.filter=this.json(a.filter));const n=await this.privateGetExecutionTradeHistory(a);return this.parseTrades(n,r,t,i)}parseLedgerEntryType(e){return this.safeString({Withdrawal:"transaction",RealisedPNL:"margin",UnrealisedPNL:"margin",Deposit:"transaction",Transfer:"transfer",AffiliatePayout:"referral"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"transactID"),s=this.safeString(e,"account"),r=this.safeString(e,"tx"),a=this.parseLedgerEntryType(this.safeString(e,"transactType")),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t);let d=this.safeNumber(e,"amount");void 0!==d&&(d/=1e8);let c=this.parse8601(this.safeString(e,"transactTime"));void 0===c&&(c=0);let h=this.safeNumber(e,"fee",0);void 0!==h&&(h/=1e8);const u={cost:h,currency:o};let l=this.safeNumber(e,"walletBalance");void 0!==l&&(l/=1e8);const p=this.sum(l,-d);let f;d<0?(f="out",d=Math.abs(d)):f="in";const m=this.parseTransactionStatus(this.safeString(e,"transactStatus"));return{id:i,info:e,timestamp:c,datetime:this.iso8601(c),direction:f,account:s,referenceId:r,referenceAccount:void 0,type:a,currency:o,amount:d,before:p,after:l,status:m,fee:u}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={};void 0!==i&&(a.count=i);const n=await this.privateGetUserWalletHistory(this.extend(a,s));return this.parseLedger(n,r,t,i)}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={currency:"all"};void 0!==i&&(r.count=i);const a=await this.privateGetUserWalletHistory(this.extend(r,s)),n=this.filterByArray(a,"transactType",["Withdrawal","Deposit"],!1);let o;return void 0!==e&&(o=this.currency(e)),this.parseTransactions(n,o,t,i)}parseTransactionStatus(e){return this.safeString({Canceled:"canceled",Completed:"ok",Pending:"pending"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"currency");t=this.safeCurrency(i,t);const s=this.parse8601(this.safeString(e,"transactTime")),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeStringLower(e,"transactType");let o,d,c;"withdrawal"===a&&(o=this.safeString(e,"address"),d=this.safeString(e,"tx"),c=o);let h=this.safeString(e,"amount");const u="BTC"===t.code?"1e8":"1e6";h=n.O.stringDiv(n.O.stringAbs(h),u);let l=this.safeString(e,"fee");l=n.O.stringDiv(l,u);let p=this.safeString(e,"transactStatus");return void 0!==p&&(p=this.parseTransactionStatus(p)),{info:e,id:this.safeString(e,"transactID"),txid:this.safeString(e,"tx"),type:a,currency:t.code,network:this.safeString(e,"status"),amount:this.parseNumber(h),status:p,timestamp:s,datetime:this.iso8601(s),address:o,addressFrom:d,addressTo:c,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:r,comment:void 0,fee:{currency:t.code,cost:this.parseNumber(l),rate:void 0}}}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s=await this.fetchTickers([i.symbol],t),r=this.safeValue(s,i.symbol);if(void 0===r)throw new a.BadSymbol(this.id+" fetchTicker() symbol "+e+" not found");return r}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetInstrumentActiveAndIndices(t),s={};for(let e=0;e<i.length;e++){const t=this.parseTicker(i[e]),r=this.safeString(t,"symbol");void 0!==r&&(s[r]=t)}return this.filterByArray(s,"symbol",e)}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"prevPrice24h"),n=this.safeString(e,"lastPrice");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString(e,"bidPrice"),bidVolume:void 0,ask:this.safeString(e,"askPrice"),askVolume:void 0,vwap:this.safeString(e,"vwap"),open:a,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"homeNotional24h"),quoteVolume:this.safeString(e,"foreignNotional24h"),info:e},t)}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,binSize:this.safeString(this.timeframes,t,t),partial:!0};void 0!==s&&(n.count=s);const o=1e3*this.parseTimeframe(t),d=this.safeValue(this.options,"fetchOHLCVOpenTimestamp",!0);if(void 0!==i){let e=i;d&&(e=this.sum(e,o));const t=this.ymdhms(e);n.startTime=t}else n.reverse=!0;const c=await this.publicGetTradeBucketed(this.extend(n,r)),h=this.parseOHLCVs(c,a,t,i,s);if(d)for(let e=0;e<h.length;e++)h[e][0]=h[e][0]-o;return h}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString(e,"timestamp")),s=this.safeString2(e,"avgPx","price"),r=this.safeString2(e,"size","lastQty"),a=this.safeString(e,"execCost"),o=n.O.stringDiv(n.O.stringAbs(a),"1e8"),d=this.safeString(e,"trdMatchID"),c=this.safeString(e,"orderID"),h=this.safeStringLower(e,"side");let u;const l=n.O.stringDiv(this.safeString(e,"execComm"),"1e8");if(void 0!==l){const t=this.safeString(e,"settlCurrency");u={cost:l,currency:this.safeCurrencyCode(t),rate:this.safeString(e,"commission")}}const p=this.safeString(e,"execType");let f;void 0!==l&&"Trade"===p&&(f=n.O.stringLt(l,"0")?"maker":"taker");const m=this.safeString(e,"symbol"),v=this.safeSymbol(m,t),g=this.safeStringLower(e,"ordType");return this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:v,id:d,order:c,type:g,takerOrMaker:f,side:h,price:s,cost:o,amount:r,fee:u},t)}parseOrderStatus(e){return this.safeString({New:"open",PartiallyFilled:"open",Filled:"closed",DoneForDay:"open",Canceled:"canceled",PendingCancel:"open",PendingNew:"open",Rejected:"rejected",Expired:"expired",Stopped:"open",Untriggered:"open",Triggered:"open"},e,e)}parseTimeInForce(e){return this.safeString({Day:"Day",GoodTillCancel:"GTC",ImmediateOrCancel:"IOC",FillOrKill:"FOK"},e,e)}parseOrder(e,t=undefined){const i=this.parseOrderStatus(this.safeString(e,"ordStatus")),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.parse8601(this.safeString(e,"timestamp")),n=this.parse8601(this.safeString(e,"transactTime")),o=this.safeString(e,"price"),d=this.safeString(e,"orderQty"),c=this.safeString(e,"cumQty"),h=this.safeString(e,"avgPx"),u=this.safeString(e,"orderID"),l=this.safeStringLower(e,"ordType"),p=this.safeStringLower(e,"side"),f=this.safeString(e,"clOrdID"),m=this.parseTimeInForce(this.safeString(e,"timeInForce")),v=this.safeNumber(e,"stopPx"),g=this.safeString(e,"execInst");let y;return void 0!==g&&(y="ParticipateDoNotInitiate"===g),this.safeOrder({info:e,id:u,clientOrderId:f,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:n,symbol:r,type:l,timeInForce:m,postOnly:y,side:p,price:o,stopPrice:v,triggerPrice:v,amount:d,cost:void 0,average:h,filled:c,remaining:void 0,status:i,fee:void 0,trades:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t?a.startTime=this.iso8601(t):a.reverse=!0,void 0!==i&&(a.count=i);const n=await this.publicGetTrade(this.extend(a,s));return this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,r=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=this.capitalize(t);if(void 0!==this.safeValue(n,"reduceOnly")&&"swap"!==o.type&&"future"!==o.type)throw new a.InvalidOrder(this.id+" createOrder() does not support reduceOnly for "+o.type+" orders, reduceOnly orders are supported for swap and future markets only");const c=this.safeString(this.options,"brokerId","CCXT"),h={symbol:o.id,side:this.capitalize(i),orderQty:parseFloat(this.amountToPrecision(e,s)),ordType:d,text:c};if("Stop"===d||"StopLimit"===d||"MarketIfTouched"===d||"LimitIfTouched"===d){const t=this.safeNumber2(n,"stopPx","stopPrice");if(void 0===t)throw new a.ArgumentsRequired(this.id+" createOrder() requires a stopPx or stopPrice parameter for the "+d+" order type");h.stopPx=parseFloat(this.priceToPrecision(e,t)),n=this.omit(n,["stopPx","stopPrice"])}"Limit"!==d&&"StopLimit"!==d&&"LimitIfTouched"!==d||(h.price=parseFloat(this.priceToPrecision(e,r)));const u=this.safeString2(n,"clOrdID","clientOrderId");void 0!==u&&(h.clOrdID=u,n=this.omit(n,["clOrdID","clientOrderId"]));const l=await this.privatePostOrder(this.extend(h,n));return this.parseOrder(l,o)}async editOrder(e,t,i,s,r=undefined,a=undefined,n={}){await this.loadMarkets();const o={},d=this.safeString2(n,"origClOrdID","clientOrderId");if(void 0!==d){o.origClOrdID=d;const e=this.safeString(n,"clOrdID","clientOrderId");void 0!==e&&(o.clOrdID=e),n=this.omit(n,["origClOrdID","clOrdID","clientOrderId"])}else o.orderID=e;void 0!==r&&(o.orderQty=r),void 0!==a&&(o.price=a);const c=this.safeString(this.options,"brokerId","CCXT");o.text=c;const h=await this.privatePutOrder(this.extend(o,n));return this.parseOrder(h)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue2(i,"clOrdID","clientOrderId"),r={};void 0===s?r.orderID=e:(r.clOrdID=s,i=this.omit(i,["clOrdID","clientOrderId"]));const n=await this.privateDeleteOrder(this.extend(r,i)),o=this.safeValue(n,0,{}),d=this.safeString(o,"error");if(void 0!==d&&d.indexOf("Unable to cancel order due to existing state")>=0)throw new a.OrderNotFound(this.id+" cancelOrder() failed: "+d);return this.parseOrder(o)}async cancelOrders(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue2(i,"clOrdID","clientOrderId"),r={};void 0===s?r.orderID=e:(r.clOrdID=s,i=this.omit(i,["clOrdID","clientOrderId"]));const a=await this.privateDeleteOrder(this.extend(r,i));return this.parseOrders(a)}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s;void 0!==e&&(s=this.market(e),i.symbol=s.id);const r=await this.privateDeleteOrderAll(this.extend(i,t));return this.parseOrders(r,s)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetPosition(t);return this.parsePositions(i,e)}parsePosition(e,t=undefined){const i=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,s=this.safeString(e,"timestamp"),r=!0===this.safeValue(e,"crossMargin")?"cross":"isolated";let a;a="USDT"===t.quote||"USD"===t.quote||"EUR"===t.quote?n.O.stringMul(this.safeString(e,"foreignNotional"),"-1"):this.safeString(e,"homeNotional");const o=this.safeNumber(e,"maintMargin"),d=this.safeNumber(e,"unrealisedPnl"),c=this.omitZero(this.safeNumber(e,"currentQty"));return{info:e,id:this.safeString(e,"account"),symbol:i,timestamp:this.parse8601(s),datetime:s,hedged:void 0,side:void 0,contracts:this.convertValue(c,t),contractSize:void 0,entryPrice:this.safeNumber(e,"avgEntryPrice"),markPrice:this.safeNumber(e,"markPrice"),notional:a,leverage:this.safeNumber(e,"leverage"),collateral:void 0,initialMargin:this.safeNumber(e,"initMargin"),initialMarginPercentage:this.safeNumber(e,"initMarginReq"),maintenanceMargin:this.convertValue(o,t),maintenanceMarginPercentage:this.safeNumber(e,"maintMarginReq"),unrealizedPnl:this.convertValue(d,t),liquidationPrice:this.safeNumber(e,"liquidationPrice"),marginMode:r,marginRatio:void 0,percentage:this.safeNumber(e,"unrealisedPnlPcnt")}}convertValue(e,t=undefined){if(void 0===e||void 0===t)return e;let i;if(e=this.numberToString(e),"USD"===t.quote||"EUR"===t.quote)i=n.O.stringMul(e,"0.00000001");else if("USDT"===t.quote)i=n.O.stringMul(e,"0.000001");else{let s;void 0!==t.quote&&(s=this.currency(t.quote)),void 0!==s&&(i=n.O.stringMul(e,this.numberToString(s.precision)))}return i=void 0!==i?parseFloat(i):void 0,i}isFiat(e){return"EUR"===e||"PLN"===e}async withdraw(e,t,i,s=undefined,r={}){if([s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets(),"BTC"!==e)throw new a.ExchangeError(this.id+" supoprts BTC withdrawals only, other currencies coming soon...");const n=this.currency(e),o={currency:"XBt",amount:t,address:i},d=await this.privatePostUserRequestWithdrawal(this.extend(o,r));return this.parseTransaction(d,n)}async fetchFundingRates(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetInstrumentActiveAndIndices(t),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeMarket(r);this.safeValue(a,"swap",!1)&&s.push(t)}return this.parseFundingRates(s,e)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeString(e,"fundingTimestamp");return{info:e,symbol:this.safeSymbol(s,t),markPrice:this.safeNumber(e,"markPrice"),indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:this.safeNumber(e,"indicativeSettlePrice"),timestamp:this.parse8601(i),datetime:i,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:this.iso8601(r),fundingDatetime:r,nextFundingRate:this.safeNumber(e,"indicativeFundingRate"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;if(e in this.currencies){const t=this.currency(e);r.symbol=t.id}else if(void 0!==e){const t=e.split(":"),i=["nearest","daily","weekly","monthly","quarterly","biquarterly","perpetual"];t.length>1&&this.inArray(t[1],i)?(e=this.currency(t[0]).id+":"+t[1],r.symbol=e):(a=this.market(e),r.symbol=a.id)}void 0!==t&&(r.startTime=this.iso8601(t)),void 0!==i&&(r.count=i);const n=this.safeInteger2(s,"until","till");s=this.omit(s,["until","till"]),void 0!==n&&(r.endTime=this.iso8601(n));const o=await this.publicGetFunding(this.extend(r,s));return this.parseFundingRateHistories(o,a,t,i)}parseFundingRateHistory(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeString(e,"timestamp");return{info:e,symbol:this.safeSymbol(i,t),fundingRate:this.safeNumber(e,"fundingRate"),timestamp:this.parse8601(s),datetime:s}}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<.01||e>100)throw new a.BadRequest(this.id+" leverage should be between 0.01 and 100");await this.loadMarkets();const s=this.market(t);if("swap"!==s.type&&"future"!==s.type)throw new a.BadSymbol(this.id+" setLeverage() supports future and swap contracts only");const r={symbol:s.id,leverage:e};return await this.privatePostPositionLeverage(this.extend(r,i))}async setMarginMode(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("isolated"!==(e=e.toLowerCase())&&"cross"!==e)throw new a.BadRequest(this.id+" setMarginMode() marginMode argument should be isolated or cross");await this.loadMarkets();const s=this.market(t);if("swap"!==s.type&&"future"!==s.type)throw new a.BadSymbol(this.id+" setMarginMode() supports swap and future contracts only");const r="cross"!==e,n={symbol:s.id,enabled:r};return await this.privatePostPositionIsolate(this.extend(n,i))}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.safeStringUpper(t,"network");if(void 0===i)throw new a.ArgumentsRequired(this.id+' fetchDepositAddress requires params["network"]');const s=this.currency(e);let r=s.id;const n=this.networkCodeToId(i,s.code),o=r.length;r=r.slice(0,o-1)+r.slice(o-1,o).toLowerCase(),t=this.omit(t,"network");const d={currency:r,network:n},c=await this.privateGetUserDepositAddress(this.extend(d,t));return{currency:e,address:c.replace('"',"").replace('"',""),tag:void 0,network:this.networkIdToCode(n).toUpperCase(),info:c}}calculateRateLimiterCost(e,t,i,s,r={},a={}){const n=this.checkRequiredCredentials(!1),o=this.safeValue(r,"cost",1);return 1!==o?n?o:20:o}handleErrors(e,t,i,s,r,n,o,d,c){if(void 0!==o){if(429===e)throw new a.DDoSProtection(this.id+" "+n);if(e>=400){const t=this.safeValue(o,"error",{}),i=this.safeString(t,"message"),s=this.id+" "+n;if(this.throwExactlyMatchedException(this.exceptions.exact,i,s),this.throwBroadlyMatchedException(this.exceptions.broad,i,s),400===e)throw new a.BadRequest(s);throw new a.ExchangeError(s)}}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/api/"+this.version+"/"+e;if("GET"===i)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{const e=this.safeString(s,"_format");void 0!==e&&(n+="?"+this.urlencode({_format:e}),s=this.omit(s,"_format"))}const d=this.urls.api[t]+n,c=this.checkRequiredCredentials(!1);if("private"===t||"public"===t&&c){this.checkRequiredCredentials();let e=i+n,t=this.safeInteger(this.options,"api-expires");r={"Content-Type":"application/json","api-key":this.apiKey},t=this.sum(this.seconds(),t);const d=t.toString();e+=d,r["api-expires"]=d,"POST"!==i&&"PUT"!==i&&"DELETE"!==i||Object.keys(s).length&&(e+=a=this.json(s)),r["api-signature"]=this.hmac(this.encode(e),this.encode(this.secret),o.J)}return{url:d,method:i,body:a,headers:r}}}},172:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(3813),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitopro",name:"BitoPro",countries:["TW"],version:"v3",rateLimit:100,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,setLeverage:!1,setMarginMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","3h":"3h","6h":"6h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/158227251-3a92a220-9222-453c-9277-977c6677fe71.jpg",api:{rest:"https://api.bitopro.com/v3"},www:"https://www.bitopro.com",doc:["https://github.com/bitoex/bitopro-offical-api-docs/blob/master/v3-1/rest-1/rest.md"],fees:"https://www.bitopro.com/fees"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["order-book/{pair}","tickers","tickers/{pair}","trades/{pair}","provisioning/currencies","provisioning/trading-pairs","provisioning/limitations-and-fees","trading-history/{pair}"]},private:{get:["accounts/balance","orders/history","orders/all/{pair}","orders/trades/{pair}","orders/{pair}/{orderId}","wallet/withdraw/{currency}/{serial}","wallet/withdraw/{currency}/id/{id}","wallet/depositHistory/{currency}","wallet/withdrawHistory/{currency}"],post:["orders/{pair}","orders/batch","wallet/withdraw/{currency}"],put:["orders"],delete:["orders/{pair}/{id}","orders/all","orders/{pair}"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("3000000"),this.parseNumber("0.00194")],[this.parseNumber("5000000"),this.parseNumber("0.0015")],[this.parseNumber("30000000"),this.parseNumber("0.0014")],[this.parseNumber("300000000"),this.parseNumber("0.0013")],[this.parseNumber("550000000"),this.parseNumber("0.0012")],[this.parseNumber("1300000000"),this.parseNumber("0.0011")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("3000000"),this.parseNumber("0.00097")],[this.parseNumber("5000000"),this.parseNumber("0.0007")],[this.parseNumber("30000000"),this.parseNumber("0.0006")],[this.parseNumber("300000000"),this.parseNumber("0.0005")],[this.parseNumber("550000000"),this.parseNumber("0.0004")],[this.parseNumber("1300000000"),this.parseNumber("0.0003")]]}}},options:{networks:{ERC20:"ERC20",ETH:"ERC20",TRX:"TRX",TRC20:"TRX",BEP20:"BSC",BSC:"BSC"}},precisionMode:n.sh,exceptions:{exact:{"Unsupported currency.":r.BadRequest,"Unsupported order type":r.BadRequest,"Invalid body":r.BadRequest,"Invalid Signature":r.AuthenticationError,"Address not in whitelist.":r.BadRequest},broad:{"Invalid amount":r.InvalidOrder,"Balance for ":r.InsufficientFunds,"Invalid ":r.BadRequest,"Wrong parameter":r.BadRequest}},commonCurrencies:{}})}async fetchCurrencies(e={}){const t=await this.publicGetProvisioningCurrencies(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"deposit"),o=this.safeValue(t,"withdraw"),d=this.safeNumber(t,"withdrawFee"),c={withdraw:{min:this.safeNumber(t,"minWithdraw"),max:this.safeNumber(t,"maxWithdraw")},amount:{min:void 0,max:void 0}};s[a]={id:r,code:a,info:t,type:void 0,name:void 0,active:n&&o,deposit:n,withdraw:o,fee:d,precision:void 0,limits:c}}return s}async fetchMarkets(e={}){const t=await this.publicGetProvisioningTradingPairs(),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=!this.safeValue(t,"maintain"),a=this.safeString(t,"pair"),n=a.toUpperCase(),o=this.safeString(t,"base"),d=this.safeString(t,"quote"),c=this.safeCurrencyCode(o),h=this.safeCurrencyCode(d),u=c+"/"+h,l={amount:{min:this.safeNumber(t,"minLimitBaseAmount"),max:this.safeNumber(t,"maxLimitBaseAmount")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},leverage:{min:void 0,max:void 0}};s.push({id:a,uppercaseId:n,symbol:u,base:c,quote:h,baseId:c,quoteId:h,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,derivative:!1,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,limits:l,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(t,"quotePrecision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(t,"basePrecision")))},active:r,info:t})}return s}parseTicker(e,t=undefined){const i=this.safeString(e,"pair");t=this.safeMarket(i,t);const s=this.safeString(t,"symbol");return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high24hr"),low:this.safeString(e,"low24hr"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(e,"lastPrice"),last:this.safeString(e,"lastPrice"),previousClose:void 0,change:void 0,percentage:this.safeString(e,"priceChange24hr"),average:void 0,baseVolume:this.safeString(e,"volume24hr"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetTickersPair(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTickers(),s=this.safeValue(i,"data",[]);return this.parseTickers(s,e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id};void 0!==t&&(r.limit=t);const a=await this.publicGetOrderBookPair(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","amount")}parseTrade(e,t=undefined){const i=this.safeString(e,"tradeId"),s=this.safeString(e,"orderId");let r;r=void 0===i?this.safeTimestamp(e,"timestamp"):this.safeInteger(e,"timestamp");const a=this.safeString(e,"pair");t=this.safeMarket(a,t);const n=this.safeString(t,"symbol"),o=this.safeString(e,"price"),d=this.safeStringLower(e,"type");let c=this.safeStringLower(e,"action");void 0===c&&(c=this.safeValue(e,"isBuyer")?"buy":"sell");let h,u=this.safeString(e,"amount");void 0===u&&(u=this.safeString(e,"baseAmount"));const l=this.safeString(e,"fee"),p=this.safeCurrencyCode(this.safeString(e,"feeSymbol"));void 0!==l&&(h={cost:l,currency:p,rate:void 0});const f=this.safeValue(e,"isTaker");let m;return void 0!==f&&(m=f?"taker":"maker"),this.safeTrade({id:i,info:e,order:s,timestamp:r,datetime:this.iso8601(r),symbol:n,takerOrMaker:m,type:d,side:c,price:o,amount:u,cost:void 0,fee:h},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetTradesPair(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetProvisioningLimitationsAndFees(e),i=this.safeValue(t,"tradingFeeRate",{}),s=this.safeValue(i,0),r={},a=this.safeNumber(s,"makerFee"),n=this.safeNumber(s,"takerFee");for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e];r[t]={info:s,symbol:t,maker:a,taker:n,percentage:!0,tierBased:!0}}return r}parseOHLCV(e,t=undefined){return[this.safeInteger(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(this.timeframes,t,t),o={pair:a.id,resolution:n};void 0===s&&(s=500);const d=this.parseTimeframe(t);let c;if(void 0===i)o.to=this.seconds(),o.from=o.to-s*d;else{const e=1e3*d;c=Math.floor(i/e)*e,o.from=Math.floor(i/1e3),o.to=this.sum(o.from,s*d)}const h=await this.publicGetTradingHistoryPair(this.extend(o,r)),u=this.safeValue(h,"data",[]),l=this.parseOHLCVs(u,a,t,i,s);return this.insertMissingCandles(l,d,c,s)}insertMissingCandles(e,t,i,s){if(0===e.length)return e;const r=[];let a,n=e[0];a=void 0===i?n[0]:i;let o=0;const d=e.length;let c=0;for(;c<s&&o<d;){const i=e[o];if(i[0]===a)r.push(i),o=this.sum(o,1);else{const e=this.arrayConcat([],n);e[0]=a,e[1]=e[4],e[2]=e[4],e[3]=e[4],e[5]=this.parseNumber("0"),r.push(e)}a=this.sum(a,1e3*t),c=r.length,n=r[c-1]}return r}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(s,"amount"),o={free:this.safeString(s,"available"),total:n};t[a]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountsBalance(e),i=this.safeValue(t,"data",[]);return this.parseBalance(i)}parseOrderStatus(e){return this.safeString({"-1":"open",0:"open",1:"open",2:"closed",3:"closed",4:"canceled",6:"canceled"},e,void 0)}parseOrder(e,t=undefined){const i=this.safeString2(e,"id","orderId"),s=this.safeInteger2(e,"timestamp","createdTimestamp");let r=this.safeString(e,"action");r=r.toLowerCase();const n=this.safeString2(e,"amount","originalAmount"),o=this.safeString(e,"price"),d=this.safeString(e,"pair");t=this.safeMarket(d,t,"_");const c=this.safeString(t,"symbol"),h=this.safeString(e,"status"),u=this.parseOrderStatus(h),l=this.safeStringLower(e,"type"),p=this.safeString(e,"avgExecutionPrice"),f=this.safeString(e,"executedAmount"),m=this.safeString(e,"remainingAmount"),v=this.safeString(e,"timeInForce");let g,y;"POST_ONLY"===v&&(g=!0);const b=this.safeString(e,"fee"),w=this.safeCurrencyCode(this.safeString(e,"feeSymbol"));return a.O.stringGt(b,"0")&&(y={currency:w,cost:b}),this.safeOrder({id:i,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:this.safeInteger(e,"updatedTimestamp"),symbol:c,type:l,timeInForce:v,postOnly:g,side:r,price:o,stopPrice:void 0,triggerPrice:void 0,amount:n,cost:void 0,average:p,filled:f,remaining:m,status:u,fee:y,trades:void 0,info:e},t)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d={type:t,pair:o.id,action:i,amount:this.amountToPrecision(e,s),timestamp:this.milliseconds()},c=t.toUpperCase();if("LIMIT"===c&&(d.price=this.priceToPrecision(e,a)),"STOP_LIMIT"===c){d.price=this.priceToPrecision(e,a);const t=this.safeValue2(n,"triggerPrice","stopPrice");if(n=this.omit(n,["triggerPrice","stopPrice"]),void 0===t)throw new r.InvalidOrder(this.id+" createOrder() requires a stopPrice parameter for "+c+" orders");d.stopPrice=this.priceToPrecision(e,t);const i=this.safeString(n,"condition");if(void 0===i)throw new r.InvalidOrder(this.id+" createOrder() requires a condition parameter for "+c+" orders");d.condition=i}this.isPostOnly("MARKET"===c,void 0,n)&&(d.timeInForce="POST_ONLY");const h=await this.privatePostOrdersPair(this.extend(d,n));return this.parseOrder(h,o)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires the symbol argument");await this.loadMarkets();const s=this.market(t),a={id:e,pair:s.id},n=await this.privateDeleteOrdersPairId(this.extend(a,i));return this.parseOrder(n,s)}async cancelOrders(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();const s={};return s[this.market(t).uppercaseId]=e,await this.privatePutOrders(this.extend(s,i))}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s=this.safeString(this.options,"privateDeleteOrdersPair","privateDeleteOrdersAll");if(void 0!==e){const t=this.market(e);i.pair=t.id,s="privateDeleteOrdersPair"}const r=await this[s](this.extend(i,t));return this.safeValue(r,"data",{})}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires the symbol argument");await this.loadMarkets();const s=this.market(t),a={orderId:e,pair:s.id},n=await this.privateGetOrdersPairOrderId(this.extend(a,i));return this.parseOrder(n,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires the symbol argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id};void 0!==t&&(n.startTimestamp=t),void 0!==i&&(n.limit=i);const o=await this.privateGetOrdersAllPair(this.extend(n,s));let d=this.safeValue(o,"data");return void 0===d&&(d=[]),this.parseOrders(d,a,t,i)}fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return this.fetchOrders(e,t,i,this.extend({statusKind:"OPEN"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return this.fetchOrders(e,t,i,this.extend({statusKind:"DONE"},s))}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires the symbol argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id},o=await this.privateGetOrdersTradesPair(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,a,t,i)}parseTransactionStatus(e){return this.safeString({COMPLETE:"ok",INVALID:"failed",PROCESSING:"pending",WAIT_PROCESS:"pending",FAILED:"failed",EXPIRED:"failed",CANCELLED:"failed",EMAIL_VERIFICATION:"pending",WAIT_CONFIRMATION:"pending"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"coin"),s=this.safeCurrencyCode(i,t),r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"address"),n=this.safeString(e,"message"),o=this.safeString(e,"status");let d=this.safeString(e,"protocol");return"MAIN"===d&&(d=s),{info:e,id:this.safeString(e,"serial"),txid:this.safeString(e,"txid"),type:void 0,currency:s,network:this.networkIdToCode(d),amount:this.safeNumber(e,"total"),status:this.parseTransactionStatus(o),timestamp:r,datetime:this.iso8601(r),address:a,addressFrom:void 0,addressTo:a,tag:n,tagFrom:void 0,tagTo:n,updated:void 0,comment:void 0,fee:{currency:s,cost:this.safeNumber(e,"fee"),rate:void 0}}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires the code argument");await this.loadMarkets();const a=this.safeCurrency(e),n={currency:a.id};void 0!==t&&(n.startTimestamp=t),void 0!==i&&(n.limit=i);const o=await this.privateGetWalletDepositHistoryCurrency(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTransactions(d,a,t,i,{type:"deposit"})}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires the code argument");await this.loadMarkets();const a=this.safeCurrency(e),n={currency:a.id};void 0!==t&&(n.startTimestamp=t),void 0!==i&&(n.limit=i);const o=await this.privateGetWalletWithdrawHistoryCurrency(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTransactions(d,a,t,i,{type:"withdrawal"})}async fetchWithdrawal(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchWithdrawal() requires the code argument");await this.loadMarkets();const s=this.safeCurrency(t),a={serial:e,currency:s.id},n=await this.privateGetWalletWithdrawCurrencySerial(this.extend(a,i)),o=this.safeValue(n,"data",{});return this.parseTransaction(o,s)}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),await this.loadMarkets(),this.checkAddress(i);const n=this.currency(e),o={currency:n.id,amount:this.numberToString(t),address:i};if("network"in a){const e=this.safeValue(this.options,"networks",{}),t=this.safeStringUpper(a,"network");a=this.omit(a,["network"]);const i=this.safeString(e,t);if(void 0===i)throw new r.ExchangeError(this.id+" invalid network "+t);o.protocol=i}void 0!==s&&(o.message=s);const d=await this.privatePostWalletWithdrawCurrency(this.extend(o,a)),c=this.safeValue(d,"data",{});return this.parseTransaction(c,n)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if(void 0===r&&(r={}),r["X-BITOPRO-API"]="ccxt","private"===t){if(this.checkRequiredCredentials(),"POST"===i||"PUT"===i){a=this.json(s);const e=this.stringToBase64(a),t=this.hmac(e,this.encode(this.secret),o.iC);r["X-BITOPRO-APIKEY"]=this.apiKey,r["X-BITOPRO-PAYLOAD"]=e,r["X-BITOPRO-SIGNATURE"]=t}else if("GET"===i||"DELETE"===i){Object.keys(d).length&&(n+="?"+this.urlencode(d));const e={nonce:this.milliseconds()},t=this.json(e),i=this.stringToBase64(t),s=this.hmac(i,this.encode(this.secret),o.iC);r["X-BITOPRO-APIKEY"]=this.apiKey,r["X-BITOPRO-PAYLOAD"]=i,r["X-BITOPRO-SIGNATURE"]=s}}else"public"===t&&"GET"===i&&Object.keys(d).length&&(n+="?"+this.urlencode(d));return n=this.urls.api.rest+n,{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;if(e>=200&&e<300)return;const h=this.id+" "+n,u=this.safeString(o,"error");throw this.throwExactlyMatchedException(this.exceptions.exact,u,h),this.throwBroadlyMatchedException(this.exceptions.broad,u,h),new r.ExchangeError(h)}}},2737:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(8365),r=i(6689),a=i(2194),n=i(9292);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitpanda",name:"Bitpanda Pro",countries:["AT"],rateLimit:300,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1/MINUTES","5m":"5/MINUTES","15m":"15/MINUTES","30m":"30/MINUTES","1h":"1/HOURS","4h":"4/HOURS","1d":"1/DAYS","1w":"1/WEEKS","1M":"1/MONTHS"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87591171-9a377d80-c6f0-11ea-94ac-97a126eac3bc.jpg",api:{public:"https://api.exchange.bitpanda.com/public",private:"https://api.exchange.bitpanda.com/public"},www:"https://www.bitpanda.com/en/pro",doc:["https://developers.bitpanda.com/exchange/"],fees:"https://www.bitpanda.com/en/pro/fees"},api:{public:{get:["currencies","candlesticks/{instrument_code}","fees","instruments","order-book/{instrument_code}","market-ticker","market-ticker/{instrument_code}","price-ticks/{instrument_code}","time"]},private:{get:["account/balances","account/deposit/crypto/{currency_code}","account/deposit/fiat/EUR","account/deposits","account/deposits/bitpanda","account/withdrawals","account/withdrawals/bitpanda","account/fees","account/orders","account/orders/{order_id}","account/orders/{order_id}/trades","account/trades","account/trades/{trade_id}","account/trading-volume"],post:["account/deposit/crypto","account/withdraw/crypto","account/withdraw/fiat","account/fees","account/orders"],delete:["account/orders","account/orders/{order_id}","account/orders/client/{client_id}"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.001"),tiers:[{taker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100"),this.parseNumber("0.0013")],[this.parseNumber("250"),this.parseNumber("0.0013")],[this.parseNumber("1000"),this.parseNumber("0.001")],[this.parseNumber("5000"),this.parseNumber("0.0009")],[this.parseNumber("10000"),this.parseNumber("0.00075")],[this.parseNumber("20000"),this.parseNumber("0.00065")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("100"),this.parseNumber("0.001")],[this.parseNumber("250"),this.parseNumber("0.0009")],[this.parseNumber("1000"),this.parseNumber("0.00075")],[this.parseNumber("5000"),this.parseNumber("0.0006")],[this.parseNumber("10000"),this.parseNumber("0.0005")],[this.parseNumber("20000"),this.parseNumber("0.0005")]]}]}},requiredCredentials:{apiKey:!0,secret:!1},precisionMode:n.sh,exceptions:{exact:{INVALID_CLIENT_UUID:r.InvalidOrder,ORDER_NOT_FOUND:r.OrderNotFound,ONLY_ONE_ERC20_ADDRESS_ALLOWED:r.InvalidAddress,DEPOSIT_ADDRESS_NOT_USED:r.InvalidAddress,INVALID_CREDENTIALS:r.AuthenticationError,MISSING_CREDENTIALS:r.AuthenticationError,INVALID_APIKEY:r.AuthenticationError,INVALID_SCOPES:r.AuthenticationError,INVALID_SUBJECT:r.AuthenticationError,INVALID_ISSUER:r.AuthenticationError,INVALID_AUDIENCE:r.AuthenticationError,INVALID_DEVICE_ID:r.AuthenticationError,INVALID_IP_RESTRICTION:r.AuthenticationError,APIKEY_REVOKED:r.AuthenticationError,APIKEY_EXPIRED:r.AuthenticationError,SYNCHRONIZER_TOKEN_MISMATCH:r.AuthenticationError,SESSION_EXPIRED:r.AuthenticationError,INTERNAL_ERROR:r.AuthenticationError,CLIENT_IP_BLOCKED:r.PermissionDenied,MISSING_PERMISSION:r.PermissionDenied,ILLEGAL_CHARS:r.BadRequest,UNSUPPORTED_MEDIA_TYPE:r.BadRequest,ACCOUNT_HISTORY_TIME_RANGE_TOO_BIG:r.BadRequest,CANDLESTICKS_TIME_RANGE_TOO_BIG:r.BadRequest,INVALID_INSTRUMENT_CODE:r.BadRequest,INVALID_ORDER_TYPE:r.BadRequest,INVALID_UNIT:r.BadRequest,INVALID_PERIOD:r.BadRequest,INVALID_TIME:r.BadRequest,INVALID_DATE:r.BadRequest,INVALID_CURRENCY:r.BadRequest,INVALID_AMOUNT:r.BadRequest,INVALID_PRICE:r.BadRequest,INVALID_LIMIT:r.BadRequest,INVALID_QUERY:r.BadRequest,INVALID_CURSOR:r.BadRequest,INVALID_ACCOUNT_ID:r.BadRequest,INVALID_SIDE:r.InvalidOrder,INVALID_ACCOUNT_HISTORY_FROM_TIME:r.BadRequest,INVALID_ACCOUNT_HISTORY_MAX_PAGE_SIZE:r.BadRequest,INVALID_ACCOUNT_HISTORY_TIME_PERIOD:r.BadRequest,INVALID_ACCOUNT_HISTORY_TO_TIME:r.BadRequest,INVALID_CANDLESTICKS_GRANULARITY:r.BadRequest,INVALID_CANDLESTICKS_UNIT:r.BadRequest,INVALID_ORDER_BOOK_DEPTH:r.BadRequest,INVALID_ORDER_BOOK_LEVEL:r.BadRequest,INVALID_PAGE_CURSOR:r.BadRequest,INVALID_TIME_RANGE:r.BadRequest,INVALID_TRADE_ID:r.BadRequest,INVALID_UI_ACCOUNT_SETTINGS:r.BadRequest,NEGATIVE_AMOUNT:r.InvalidOrder,NEGATIVE_PRICE:r.InvalidOrder,MIN_SIZE_NOT_SATISFIED:r.InvalidOrder,BAD_AMOUNT_PRECISION:r.InvalidOrder,BAD_PRICE_PRECISION:r.InvalidOrder,BAD_TRIGGER_PRICE_PRECISION:r.InvalidOrder,MAX_OPEN_ORDERS_EXCEEDED:r.BadRequest,MISSING_PRICE:r.InvalidOrder,MISSING_ORDER_TYPE:r.InvalidOrder,MISSING_SIDE:r.InvalidOrder,MISSING_CANDLESTICKS_PERIOD_PARAM:r.ArgumentsRequired,MISSING_CANDLESTICKS_UNIT_PARAM:r.ArgumentsRequired,MISSING_FROM_PARAM:r.ArgumentsRequired,MISSING_INSTRUMENT_CODE:r.ArgumentsRequired,MISSING_ORDER_ID:r.InvalidOrder,MISSING_TO_PARAM:r.ArgumentsRequired,MISSING_TRADE_ID:r.ArgumentsRequired,INVALID_ORDER_ID:r.OrderNotFound,NOT_FOUND:r.OrderNotFound,INSUFFICIENT_LIQUIDITY:r.InsufficientFunds,INSUFFICIENT_FUNDS:r.InsufficientFunds,NO_TRADING:r.ExchangeNotAvailable,SERVICE_UNAVAILABLE:r.ExchangeNotAvailable,GATEWAY_TIMEOUT:r.ExchangeNotAvailable,RATELIMIT:r.DDoSProtection,CF_RATELIMIT:r.DDoSProtection,INTERNAL_SERVER_ERROR:r.ExchangeError},broad:{}},commonCurrencies:{MIOTA:"IOTA"},options:{fetchTradingFees:{method:"fetchPrivateTradingFees"},fiat:["EUR","CHF"]}})}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"epoch_millis")}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"code"),a=this.safeCurrencyCode(r);i[a]={id:r,code:a,name:void 0,info:s,active:void 0,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(s,"precision"))),withdraw:void 0,deposit:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}async fetchMarkets(e={}){const t=await this.publicGetInstruments(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeValue(s,"base",{}),a=this.safeValue(s,"quote",{}),n=this.safeString(r,"code"),o=this.safeString(a,"code"),d=n+"_"+o,c=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),u=this.safeString(s,"state");i.push({id:d,symbol:c+"/"+h,base:c,quote:h,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ACTIVE"===u,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"amount_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"market_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(s,"min_size"),max:void 0}},info:s})}return i}async fetchTradingFees(e={}){let t=this.safeString(e,"method");if(e=this.omit(e,"method"),void 0===t){const e=this.safeValue(this.options,"fetchTradingFees",{});t=this.safeString(e,"method","fetchPrivateTradingFees")}return await this[t](e)}async fetchPublicTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetFees(e),i=this.safeValue(t,0,{}),s=this.safeValue(i,"fee_tiers"),r=this.parseFeeTiers(s),a=this.safeValue(s,0,{}),n={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e];n[t]={info:i,symbol:t,maker:this.safeNumber(a,"maker_fee"),taker:this.safeNumber(a,"taker_fee"),percentage:!0,tierBased:!0,tiers:r}}return n}async fetchPrivateTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccountFees(e),i=this.safeValue(t,"active_fee_tier",{});let s=this.safeString(i,"maker_fee"),r=this.safeString(i,"taker_fee");s=a.O.stringDiv(s,"100"),r=a.O.stringDiv(r,"100");const n=this.safeValue(t,"fee_tiers"),o={},d=this.parseFeeTiers(n);for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e];o[i]={info:t,symbol:i,maker:this.parseNumber(s),taker:this.parseNumber(r),percentage:!0,tierBased:!0,tiers:d}}return o}parseFeeTiers(e,t=undefined){const i=[],s=[];for(let t=0;t<e.length;t++){const r=e[t],n=this.safeNumber(r,"volume");let o=this.safeString(r,"taker_fee"),d=this.safeString(r,"maker_fee");d=a.O.stringDiv(d,"100"),o=a.O.stringDiv(o,"100"),s.push([n,this.parseNumber(d)]),i.push([n,this.parseNumber(o)])}return{maker:s,taker:i}}parseTicker(e,t=undefined){const i=this.parse8601(this.safeString(e,"time")),s=this.safeString(e,"instrument_code"),r=this.safeSymbol(s,t,"_"),a=this.safeString(e,"last_price"),n=this.safeString(e,"price_change_percentage"),o=this.safeString(e,"price_change"),d=this.safeString(e,"base_volume"),c=this.safeString(e,"quote_volume");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"best_bid"),bidVolume:void 0,ask:this.safeString(e,"best_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:o,percentage:n,average:void 0,baseVolume:d,quoteVolume:c,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={instrument_code:i.id},r=await this.publicGetMarketTickerInstrumentCode(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetMarketTicker(t),s={};for(let e=0;e<i.length;e++){const t=this.parseTicker(i[e]);s[t.symbol]=t}return this.filterByArray(s,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={instrument_code:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetOrderBookInstrumentCode(this.extend(r,i)),n=this.parse8601(this.safeString(a,"time"));return this.parseOrderBook(a,s.symbol,n,"bids","asks","price","amount")}parseOHLCV(e,t=undefined){const i=this.safeValue(e,"granularity"),s=this.safeString(i,"unit"),r=this.safeString(i,"period")+this.safeString({MINUTES:"m",HOURS:"h",DAYS:"d",WEEKS:"w",MONTHS:"M"},s),a=1e3*this.parseTimeframe(r),n=this.parse8601(this.safeString(e,"time")),o=a*this.parseToInt(n/a),d=this.safeValue(this.options,"fetchOHLCV",{}),c=this.safeString(d,"volume","total_amount");return[o,this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,c)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(this.timeframes,t),[o,d]=n.split("/"),c=1e3*this.parseTimeframe(t);void 0===s&&(s=1500);const h={instrument_code:a.id,period:o,unit:d};if(void 0===i){const e=this.milliseconds();h.to=this.iso8601(e),h.from=this.iso8601(e-s*c)}else h.from=this.iso8601(i),h.to=this.iso8601(this.sum(i,s*c));const u=await this.publicGetCandlesticksInstrumentCode(this.extend(h,r));return this.parseOHLCVs(u,a,t,i,s)}parseTrade(e,t=undefined){const i=this.safeValue(e,"fee",{});e=this.safeValue(e,"trade",e);let s=this.safeInteger(e,"trade_timestamp");void 0===s&&(s=this.parse8601(this.safeString(e,"time")));const r=this.safeStringLower2(e,"side","taker_side"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"volume"),d=this.safeString(e,"instrument_code"),c=this.safeSymbol(d,t,"_"),h=this.safeString(i,"fee_amount");let u,l;if(void 0!==h){const e=this.safeString(i,"fee_currency");l={cost:h,currency:this.safeCurrencyCode(e),rate:this.safeString(i,"fee_percentage")},u=this.safeStringLower(i,"fee_type")}return this.safeTrade({id:this.safeString2(e,"trade_id","sequence"),order:this.safeString(e,"order_id"),timestamp:s,datetime:this.iso8601(s),symbol:c,type:void 0,side:r,price:a,amount:n,cost:o,takerOrMaker:u,fee:l,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={instrument_code:r.id};void 0!==t&&(a.from=this.iso8601(t),a.to=this.iso8601(this.sum(t,144e5)));const n=await this.publicGetPriceTicksInstrumentCode(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseBalance(e){const t=this.safeValue(e,"balances",[]),i={info:e};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency_code"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"locked"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountBalances(e);return this.parseBalance(t)}parseDepositAddress(e,t=undefined){let i;void 0!==t&&(i=t.code);const s=this.safeString(e,"address"),r=this.safeString(e,"destination_tag");return this.checkAddress(s),{currency:i,address:s,tag:r,network:void 0,info:e}}async createDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.privatePostAccountDepositCrypto(this.extend(s,t));return this.parseDepositAddress(r,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency_code:i.id},r=await this.privateGetAccountDepositCryptoCurrencyCode(this.extend(s,t));return this.parseDepositAddress(r,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;if(void 0!==e&&(n=this.currency(e),a.currency_code=n.id),void 0!==i&&(a.max_page_size=i),void 0!==t){if(void 0===this.safeString(s,"to"))throw new r.ArgumentsRequired(this.id+' fetchDeposits() requires a "to" iso8601 string param with the since argument is specified');a.from=this.iso8601(t)}const o=await this.privateGetAccountDeposits(this.extend(a,s)),d=this.safeValue(o,"deposit_history",[]);return this.parseTransactions(d,n,t,i,{type:"deposit"})}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;if(void 0!==e&&(n=this.currency(e),a.currency_code=n.id),void 0!==i&&(a.max_page_size=i),void 0!==t){if(void 0===this.safeString(s,"to"))throw new r.ArgumentsRequired(this.id+' fetchWithdrawals() requires a "to" iso8601 string param with the since argument is specified');a.from=this.iso8601(t)}const o=await this.privateGetAccountWithdrawals(this.extend(a,s)),d=this.safeValue(o,"withdrawal_history",[]);return this.parseTransactions(d,n,t,i,{type:"withdrawal"})}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e),o={currency:e,amount:this.currencyToPrecision(e,t)},d=this.safeValue(this.options,"fiat",[]),c=this.inArray(e,d),h=c?"privatePostAccountWithdrawFiat":"privatePostAccountWithdrawCrypto";if(c){if(void 0===this.safeString(a,"payout_account_id"))throw new r.ArgumentsRequired(this.id+" withdraw() requires a payout_account_id param for fiat "+e+" withdrawals")}else{const e={address:i};void 0!==s&&(e.destination_tag=s),o.recipient=e}const u=await this[h](this.extend(o,a));return this.parseTransaction(u,n)}parseTransaction(e,t=undefined){const i=this.safeString(e,"transaction_id"),s=this.safeNumber(e,"amount"),r=this.parse8601(this.safeString(e,"time")),a=this.safeString(e,"currency");t=this.safeCurrency(a,t);const n=this.safeNumber2(e,"fee_amount","fee");let o;const d=this.safeString(e,"recipient"),c=this.safeString(e,"destination_tag");if(void 0!==n){const t=this.safeString(e,"fee_currency",a);o={cost:n,currency:this.safeCurrencyCode(t)}}return{info:e,id:i,currency:t.code,amount:s,network:void 0,address:d,addressFrom:void 0,addressTo:d,tag:c,tagFrom:void 0,tagTo:c,status:"ok",type:void 0,updated:void 0,txid:this.safeString(e,"blockchain_transaction_id"),timestamp:r,datetime:this.iso8601(r),fee:o}}parseOrderStatus(e){return this.safeString({FILLED:"open",FILLED_FULLY:"closed",FILLED_CLOSED:"canceled",FILLED_REJECTED:"rejected",OPEN:"open",REJECTED:"rejected",CLOSED:"canceled",FAILED:"failed",STOP_TRIGGERED:"triggered"},e,e)}parseOrder(e,t=undefined){const i=this.safeValue(e,"order",e),s=this.safeString(i,"order_id"),r=this.safeString(i,"client_id"),a=this.parse8601(this.safeString(i,"time")),n=this.parseOrderStatus(this.safeString(i,"status")),o=this.parseOrderStatus(n),d=this.safeString(i,"instrument_code"),c=this.safeSymbol(d,t,"_"),h=this.safeString(i,"price"),u=this.safeString(i,"amount"),l=this.safeString(i,"filled_amount"),p=this.safeStringLower(i,"side"),f=this.safeStringLower(i,"type"),m=this.parseTimeInForce(this.safeString(i,"time_in_force")),v=this.safeNumber(i,"trigger_price"),g=this.safeValue(i,"is_post_only"),y=this.safeValue(e,"trades",[]);return this.safeOrder({id:s,clientOrderId:r,info:e,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:c,type:f,timeInForce:m,postOnly:g,side:p,price:h,stopPrice:v,triggerPrice:v,amount:u,cost:void 0,average:void 0,filled:l,remaining:void 0,status:o,trades:y},t)}parseTimeInForce(e){return this.safeString({GOOD_TILL_CANCELLED:"GTC",GOOD_TILL_TIME:"GTT",IMMEDIATE_OR_CANCELLED:"IOC",FILL_OR_KILL:"FOK"},e,e)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=t.toUpperCase(),c={instrument_code:o.id,type:d,side:i.toUpperCase(),amount:this.amountToPrecision(e,s)};let h=!1;if("LIMIT"!==d&&"STOP"!==d||(h=!0),"STOP"===d){const i=this.safeNumber(n,"trigger_price");if(void 0===i)throw new r.ArgumentsRequired(this.id+" createOrder() requires a trigger_price param for "+t+" orders");c.trigger_price=this.priceToPrecision(e,i),n=this.omit(n,"trigger_price")}h&&(c.price=this.priceToPrecision(e,a));const u=this.safeString2(n,"clientOrderId","client_id");void 0!==u&&(c.client_id=u,n=this.omit(n,["clientOrderId","client_id"]));const l=await this.privatePostAccountOrders(this.extend(c,n));return this.parseOrder(l,o)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeString2(i,"clientOrderId","client_id");i=this.omit(i,["clientOrderId","client_id"]);let r="privateDeleteAccountOrdersOrderId";const a={};return void 0!==s?(r="privateDeleteAccountOrdersClientClientId",a.client_id=s):a.order_id=e,await this[r](this.extend(a,i))}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==e){const t=this.market(e);i.instrument_code=t.id}return await this.privateDeleteAccountOrders(this.extend(i,t))}async cancelOrders(e,t=undefined,i={}){await this.loadMarkets();const s={ids:e.join(",")};return await this.privateDeleteAccountOrders(this.extend(s,i))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},r=await this.privateGetAccountOrdersOrderId(this.extend(s,i));return this.parseOrder(r)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;if(void 0!==e&&(n=this.market(e),a.instrument_code=n.id),void 0!==t){if(void 0===this.safeString(s,"to"))throw new r.ArgumentsRequired(this.id+' fetchOpenOrders() requires a "to" iso8601 string param with the since argument is specified, max range is 100 days');a.from=this.iso8601(t)}void 0!==i&&(a.max_page_size=i);const o=await this.privateGetAccountOrders(this.extend(a,s)),d=this.safeValue(o,"order_history",[]);return this.parseOrders(d,n,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOpenOrders(e,t,i,this.extend({with_cancelled_and_rejected:!0},s))}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={order_id:e};void 0!==s&&(a.max_page_size=s);const n=await this.privateGetAccountOrdersOrderIdTrades(this.extend(a,r)),o=this.safeValue(n,"trade_history",[]);let d;return void 0!==t&&(d=this.market(t)),this.parseTrades(o,d,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;if(void 0!==e&&(n=this.market(e),a.instrument_code=n.id),void 0!==t){if(void 0===this.safeString(s,"to"))throw new r.ArgumentsRequired(this.id+' fetchMyTrades() requires a "to" iso8601 string param with the since argument is specified, max range is 100 days');a.from=this.iso8601(t)}void 0!==i&&(a.max_page_size=i);const o=await this.privateGetAccountTrades(this.extend(a,s)),d=this.safeValue(o,"trade_history",[]);return this.parseTrades(d,n,t,i)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t]+"/"+this.version+"/"+this.implodeParams(e,s);const o=this.omit(s,this.extractParams(e));return"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):"private"===t&&(this.checkRequiredCredentials(),r={Accept:"application/json",Authorization:"Bearer "+this.apiKey},"POST"===i?(a=this.json(o),r["Content-Type"]="application/json"):Object.keys(o).length&&(n+="?"+this.urlencode(o))),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"error");if(void 0!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,h,e),new r.ExchangeError(e)}}}},854:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(7317),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitrue",name:"Bitrue",countries:["SG"],rateLimit:1e3,certified:!1,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelAllOrders:!1,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPositionMode:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","1d":"1D","1w":"1W"},urls:{logo:"https://user-images.githubusercontent.com/1294454/139516488-243a830d-05dd-446b-91c6-c1f18fe30c63.jpg",api:{v1:"https://www.bitrue.com/api/v1",v2:"https://www.bitrue.com/api/v2",kline:"https://www.bitrue.com/kline-api"},www:"https://www.bitrue.com",referral:"https://www.bitrue.com/activity/task/task-landing?inviteCode=EZWETQE&cn=900000",doc:["https://github.com/Bitrue-exchange/bitrue-official-api-docs"],fees:"https://bitrue.zendesk.com/hc/en-001/articles/4405479952537"},api:{kline:{public:{get:{"public.json":1,"public{currency}.json":1}}},v1:{public:{get:{ping:1,time:1,exchangeInfo:1,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10]]},trades:1,historicalTrades:5,aggTrades:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},"market/kline":1}},private:{get:{order:1,openOrders:1,allOrders:5,account:5,myTrades:{cost:5,noSymbol:40},"etf/net-value/{symbol}":1,"withdraw/history":1,"deposit/history":1},post:{order:4,"withdraw/commit":1},delete:{order:1}}},v2:{private:{get:{myTrades:5}}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.00098"),maker:this.parseNumber("0.00098")},future:{trading:{feeSide:"quote",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000400"),maker:this.parseNumber("0.000200"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000400")],[this.parseNumber("250"),this.parseNumber("0.000400")],[this.parseNumber("2500"),this.parseNumber("0.000350")],[this.parseNumber("7500"),this.parseNumber("0.000320")],[this.parseNumber("22500"),this.parseNumber("0.000300")],[this.parseNumber("50000"),this.parseNumber("0.000270")],[this.parseNumber("100000"),this.parseNumber("0.000250")],[this.parseNumber("200000"),this.parseNumber("0.000220")],[this.parseNumber("400000"),this.parseNumber("0.000200")],[this.parseNumber("750000"),this.parseNumber("0.000170")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000200")],[this.parseNumber("250"),this.parseNumber("0.000160")],[this.parseNumber("2500"),this.parseNumber("0.000140")],[this.parseNumber("7500"),this.parseNumber("0.000120")],[this.parseNumber("22500"),this.parseNumber("0.000100")],[this.parseNumber("50000"),this.parseNumber("0.000080")],[this.parseNumber("100000"),this.parseNumber("0.000060")],[this.parseNumber("200000"),this.parseNumber("0.000040")],[this.parseNumber("400000"),this.parseNumber("0.000020")],[this.parseNumber("750000"),this.parseNumber("0")]]}}},delivery:{trading:{feeSide:"base",tierBased:!0,percentage:!0,taker:this.parseNumber("0.000500"),maker:this.parseNumber("0.000100"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.000500")],[this.parseNumber("250"),this.parseNumber("0.000450")],[this.parseNumber("2500"),this.parseNumber("0.000400")],[this.parseNumber("7500"),this.parseNumber("0.000300")],[this.parseNumber("22500"),this.parseNumber("0.000250")],[this.parseNumber("50000"),this.parseNumber("0.000240")],[this.parseNumber("100000"),this.parseNumber("0.000240")],[this.parseNumber("200000"),this.parseNumber("0.000240")],[this.parseNumber("400000"),this.parseNumber("0.000240")],[this.parseNumber("750000"),this.parseNumber("0.000240")]],maker:[[this.parseNumber("0"),this.parseNumber("0.000100")],[this.parseNumber("250"),this.parseNumber("0.000080")],[this.parseNumber("2500"),this.parseNumber("0.000050")],[this.parseNumber("7500"),this.parseNumber("0.0000030")],[this.parseNumber("22500"),this.parseNumber("0")],[this.parseNumber("50000"),this.parseNumber("-0.000050")],[this.parseNumber("100000"),this.parseNumber("-0.000060")],[this.parseNumber("200000"),this.parseNumber("-0.000070")],[this.parseNumber("400000"),this.parseNumber("-0.000080")],[this.parseNumber("750000"),this.parseNumber("-0.000090")]]}}}},options:{fetchMyTradesMethod:"v2PrivateGetMyTrades",hasAlreadyAuthenticatedSuccessfully:!1,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,parseOrderToPrecision:!1,newOrderRespType:{market:"FULL",limit:"FULL"},networks:{ERC20:"ETH",TRC20:"TRX",TRON:"TRX"},networksById:{TRX:"TRC20",ETH:"ERC20"}},commonCurrencies:{MIM:"MIM Swarm"},precisionMode:n.sh,exceptions:{exact:{"System is under maintenance.":r.OnMaintenance,"System abnormality":r.ExchangeError,"You are not authorized to execute this request.":r.PermissionDenied,"API key does not exist":r.AuthenticationError,"Order would trigger immediately.":r.OrderImmediatelyFillable,"Stop price would trigger immediately.":r.OrderImmediatelyFillable,"Order would immediately match and take.":r.OrderImmediatelyFillable,"Account has insufficient balance for requested action.":r.InsufficientFunds,"Rest API trading is not enabled.":r.ExchangeNotAvailable,"You don't have permission.":r.PermissionDenied,"Market is closed.":r.ExchangeNotAvailable,"Too many requests. Please try again later.":r.DDoSProtection,"-1000":r.ExchangeNotAvailable,"-1001":r.ExchangeNotAvailable,"-1002":r.AuthenticationError,"-1003":r.RateLimitExceeded,"-1013":r.InvalidOrder,"-1015":r.RateLimitExceeded,"-1016":r.ExchangeNotAvailable,"-1020":r.BadRequest,"-1021":r.InvalidNonce,"-1022":r.AuthenticationError,"-1100":r.BadRequest,"-1101":r.BadRequest,"-1102":r.BadRequest,"-1103":r.BadRequest,"-1104":r.BadRequest,"-1105":r.BadRequest,"-1106":r.BadRequest,"-1111":r.BadRequest,"-1112":r.InvalidOrder,"-1114":r.BadRequest,"-1115":r.BadRequest,"-1116":r.BadRequest,"-1117":r.BadRequest,"-1118":r.BadRequest,"-1119":r.BadRequest,"-1120":r.BadRequest,"-1121":r.BadSymbol,"-1125":r.AuthenticationError,"-1127":r.BadRequest,"-1128":r.BadRequest,"-1130":r.BadRequest,"-1131":r.BadRequest,"-2008":r.AuthenticationError,"-2010":r.ExchangeError,"-2011":r.OrderNotFound,"-2013":r.OrderNotFound,"-2014":r.AuthenticationError,"-2015":r.AuthenticationError,"-2019":r.InsufficientFunds,"-3005":r.InsufficientFunds,"-3006":r.InsufficientFunds,"-3008":r.InsufficientFunds,"-3010":r.ExchangeError,"-3015":r.ExchangeError,"-3022":r.AccountSuspended,"-4028":r.BadRequest,"-3020":r.InsufficientFunds,"-3041":r.InsufficientFunds,"-5013":r.InsufficientFunds,"-11008":r.InsufficientFunds,"-4051":r.InsufficientFunds},broad:{"has no operation privilege":r.PermissionDenied,MAX_POSITION:r.InvalidOrder}}})}costToPrecision(e,t){return this.decimalToPrecision(t,n.tk,this.markets[e].precision.quote,this.precisionMode,this.paddingMode)}currencyToPrecision(e,t,i=undefined){return void 0!==this.safeValue(this.currencies[e],"precision")?this.decimalToPrecision(t,n.tk,this.currencies[e].precision,this.precisionMode,this.paddingMode):this.numberToString(t)}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchStatus(e={}){const t=await this.v1PublicGetPing(e);return{status:Object.keys(t).length?"maintenance":"ok",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){const t=await this.v1PublicGetTime(e);return this.safeInteger(t,"serverTime")}safeNetwork(e){const t=e.toUpperCase();return this.safeString2({Aeternity:"Aeternity",AION:"AION",Algorand:"Algorand",ASK:"ASK",ATOM:"ATOM","AVAX C-Chain":"AVAX C-Chain",bch:"bch",BCH:"BCH",BEP2:"BEP2",BEP20:"BEP20",Bitcoin:"Bitcoin",BRP20:"BRP20",Cardano:"ADA",CasinoCoin:"CasinoCoin","CasinoCoin XRPL":"CasinoCoin XRPL",Contentos:"Contentos",Dash:"Dash",Decoin:"Decoin",DeFiChain:"DeFiChain",DGB:"DGB",Divi:"Divi",dogecoin:"DOGE",EOS:"EOS",ERC20:"ERC20",ETC:"ETC",Filecoin:"Filecoin",FREETON:"FREETON",HBAR:"HBAR","Hedera Hashgraph":"Hedera Hashgraph",HRC20:"HRC20",ICON:"ICON",ICP:"ICP",Ignis:"Ignis","Internet Computer":"Internet Computer",IOTA:"IOTA",KAVA:"KAVA",KSM:"KSM",LiteCoin:"LiteCoin",Luna:"Luna",MATIC:"MATIC","Mobile Coin":"Mobile Coin",MonaCoin:"MonaCoin",Monero:"Monero",NEM:"NEM",NEP5:"NEP5",OMNI:"OMNI",PAC:"PAC",Polkadot:"Polkadot",Ravencoin:"Ravencoin",Safex:"Safex",SOLANA:"SOL",Songbird:"Songbird","Stellar Lumens":"Stellar Lumens",Symbol:"Symbol",Tezos:"XTZ",theta:"theta",THETA:"THETA",TRC20:"TRC20",VeChain:"VeChain",VECHAIN:"VECHAIN",Wanchain:"Wanchain","XinFin Network":"XinFin Network",XRP:"XRP",XRPL:"XRPL",ZIL:"ZIL"},e,t,e)}async fetchCurrencies(e={}){const t=await this.v1PublicGetExchangeInfo(e),i={},s=this.safeValue(t,"coins",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"coin"),a=this.safeString(t,"coinFulName"),n=this.safeCurrencyCode(r),o=this.safeValue(t,"enableDeposit"),d=this.safeValue(t,"enableWithdraw"),c=this.safeValue(t,"chains",[]),h={};for(let e=0;e<c.length;e++){const t=c[e],i=this.safeNetwork(t);h[i]={info:t,id:t,network:i,active:void 0,fee:void 0,precision:void 0,limits:{withdraw:{min:void 0,max:void 0}}}}const u=d&&o;i[n]={id:r,name:a,code:n,precision:void 0,info:t,active:u,deposit:o,withdraw:d,networks:h,fee:this.safeNumber(t,"withdrawFee"),limits:{withdraw:{min:this.safeNumber(t,"minWithdraw"),max:this.safeNumber(t,"maxWithdraw")}}}}return i}async fetchMarkets(e={}){const t=await this.v1PublicGetExchangeInfo(e);this.options.adjustForTimeDifference&&await this.loadTimeDifference();const i=this.safeValue(t,"symbols",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeStringLower(t,"symbol"),n=this.safeString(t,"baseAsset"),o=this.safeString(t,"quoteAsset"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=this.safeValue(t,"filters",[]),u=this.indexBy(h,"filterType"),l=this.safeString(t,"status"),p=this.safeValue(u,"PRICE_FILTER",{}),f=this.safeValue(u,"LOT_SIZE",{}),m=this.safeString(t,"pricePrecision"),v=this.safeString(t,"quantityPrecision"),g=this.safeString(p,"priceScale",m),y=this.safeString(f,"volumeScale",v),b={id:r,lowercaseId:a,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"TRADING"===l,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(y)),price:this.parseNumber(this.parsePrecision(g)),base:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),quote:this.parseNumber(this.parsePrecision(this.safeString(t,"quotePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(f,"minQty"),max:this.safeNumber(f,"maxQty")},price:{min:this.safeNumber(p,"minPrice"),max:this.safeNumber(p,"maxPrice")},cost:{min:this.safeNumber(f,"minVal"),max:void 0}},info:t};s.push(b)}return s}parseBalance(e){const t={info:e},i=this.safeInteger(e,"updateTime"),s=this.safeValue(e,"balances",[]);for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"free"),n.used=this.safeString(i,"locked"),t[a]=n}return t.timestamp=i,t.datetime=this.iso8601(i),this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v1PrivateGetAccount(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);const r=await this.v1PublicGetDepth(this.extend(s,i)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"lastUpdateId"),a}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high24hr"),low:this.safeString(e,"low24hr"),bid:this.safeString(e,"highestBid"),bidVolume:void 0,ask:this.safeString(e,"lowestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:this.safeString(e,"percentChange"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s=this.safeStringUpper(i,"baseId"),a=this.safeStringUpper(i,"quoteId"),n={currency:a,command:"returnTicker"},o=await this.klinePublicGetPublicCurrencyJson(this.extend(n,t)),d=this.safeValue(o,"data",{}),c=s+"_"+a,h=this.safeValue(d,c);if(void 0===h)throw new r.ExchangeError(this.id+" fetchTicker() could not find the ticker for "+i.symbol);return this.parseTicker(h,i)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,scale:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=s);const o=await this.v1PublicGetMarketKline(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"i"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async fetchBidsAsks(e=undefined,t={}){await this.loadMarkets();const i=this.safeString2(this.options,"fetchBidsAsks","defaultType","spot"),s=this.safeString(t,"type",i),r=this.omit(t,"type");let a;a="future"===s?"fapiPublicGetTickerBookTicker":"delivery"===s?"dapiPublicGetTickerBookTicker":"publicGetTickerBookTicker";const n=await this[a](r);return this.parseTickers(n,e)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.klinePublicGetPublicJson(this.extend({command:"returnTicker"},t)),s=this.safeValue(i,"data",{}),r={},a=Object.keys(s);for(let e=0;e<a.length;e++)r[a[e].replace("_","")]=s[a[e]];return this.parseTickers(r,e)}parseTrade(e,t=undefined){const i=this.safeInteger2(e,"T","time"),s=this.safeString2(e,"p","price"),r=this.safeString2(e,"q","qty"),a=this.safeString(e,"symbol"),n=this.safeSymbol(a,t);let o,d=this.safeString2(e,"t","a");d=this.safeString2(e,"id","tradeId",d);const c=this.safeString(e,"orderId");let h,u;return"m"in e?o=e.m?"sell":"buy":"isBuyerMaker"in e?o=e.isBuyerMaker?"sell":"buy":"side"in e?o=this.safeStringLower(e,"side"):"isBuyer"in e&&(o=e.isBuyer?"buy":"sell"),"commission"in e&&(h={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAssert"))}),"isMaker"in e&&(u=e.isMaker?"maker":"taker"),"maker"in e&&(u=e.maker?"maker":"taker"),this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:n,id:d,order:c,type:void 0,side:o,takerOrMaker:u,price:s,amount:r,cost:void 0,fee:h},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=this.safeString(this.options,"fetchTradesMethod","v1PublicGetAggTrades");void 0!==i&&(a.limit=i);const o=await this[n](this.extend(a,s));return this.parseTrades(o,r,t,i)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrder(e,t=undefined){const i=this.parseOrderStatus(this.safeString(e,"status")),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),n=this.safeString(e,"executedQty");let o,d;"time"in e?o=this.safeInteger(e,"time"):"transactTime"in e?o=this.safeInteger(e,"transactTime"):"updateTime"in e&&"open"===i&&(a.O.stringGt(n,"0")?d=this.safeInteger(e,"updateTime"):o=this.safeInteger(e,"updateTime"));const c=this.safeString(e,"avgPrice"),h=this.safeString(e,"price"),u=this.safeString(e,"origQty"),l=this.safeString2(e,"cummulativeQuoteQty","cumQuote"),p=this.safeString(e,"orderId");let f=this.safeStringLower(e,"type");const m=this.safeStringLower(e,"side"),v=this.safeValue(e,"fills",[]),g=this.safeString(e,"clientOrderId"),y=this.safeString(e,"timeInForce"),b="limit_maker"===f||"GTX"===y;"limit_maker"===f&&(f="limit");const w=this.safeString(e,"stopPrice"),S=this.parseNumber(this.omitZero(w));return this.safeOrder({info:e,id:p,clientOrderId:g,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:d,symbol:r,type:f,timeInForce:y,postOnly:b,side:m,price:h,stopPrice:S,triggerPrice:S,amount:u,cost:l,average:c,filled:n,remaining:void 0,status:i,fee:void 0,trades:v},t)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=t.toUpperCase(),c=this.safeValue(o.info,"orderTypes");if(!this.inArray(d,c))throw new r.InvalidOrder(this.id+" "+t+" is not a valid order type in market "+e);const h={symbol:o.id,side:i.toUpperCase(),type:d,quantity:this.amountToPrecision(e,s)},u=this.safeString2(n,"newClientOrderId","clientOrderId");if(void 0!==u&&(n=this.omit(n,["newClientOrderId","clientOrderId"]),h.newClientOrderId=u),"LIMIT"===d){if(void 0===a)throw new r.InvalidOrder(this.id+" createOrder() requires a price argument");h.price=this.priceToPrecision(e,a)}const l=this.safeValue2(n,"triggerPrice","stopPrice");void 0!==l&&(n=this.omit(n,["triggerPrice","stopPrice"]),h.stopPrice=this.priceToPrecision(e,l));const p=await this.v1PrivatePostOrder(this.extend(h,n));return this.parseOrder(p,o)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={symbol:s.id},n=this.safeValue2(i,"origClientOrderId","clientOrderId");void 0!==n?a.origClientOrderId=n:a.orderId=e;const o=this.omit(i,["type","clientOrderId","origClientOrderId"]),d=await this.v1PrivateGetOrder(this.extend(a,o));return this.parseOrder(d,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const o=await this.v1PrivateGetAllOrders(this.extend(n,s));return this.parseOrders(o,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id},o=await this.v1PrivateGetOpenOrders(this.extend(n,s));return this.parseOrders(o,a,t,i)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a=this.safeValue2(i,"origClientOrderId","clientOrderId"),n={symbol:s.id};void 0===a?n.orderId=e:n.origClientOrderId=a;const o=this.omit(i,["type","origClientOrderId","clientOrderId"]),d=await this.v1PrivateDeleteOrder(this.extend(n,o));return this.parseOrder(d,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){const a=this.safeString(this.options,"fetchMyTradesMethod","v2PrivateGetMyTrades");if(void 0===e&&"v2PrivateGetMyTrades"===a)throw new r.ArgumentsRequired(this.id+" v2PrivateGetMyTrades() requires a symbol argument");await this.loadMarkets();const n={};let o;void 0!==e&&(o=this.market(e),n.symbol=o.id),void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const d=await this[a](this.extend(n,s));return this.parseTrades(d,o,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires a code argument");await this.loadMarkets();const a=this.currency(e),n={coin:a.id,status:1};void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const o=await this.v1PrivateGetDepositHistory(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTransactions(d,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires a code argument");await this.loadMarkets();const a=this.currency(e),n={coin:a.id,status:5};void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const o=await this.v1PrivateGetWithdrawHistory(this.extend(n,s)),d=this.safeValue(o,"data",{});return this.parseTransactions(d,a)}parseTransactionStatusByType(e,t=undefined){const i=this.safeValue({deposit:{0:"pending",1:"ok"},withdrawal:{0:"pending",5:"ok",6:"canceled"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t=undefined){const i=this.safeString2(e,"id","withdrawId"),s=this.safeString(e,"tagType");let r,a,n=this.safeString(e,"addressTo"),o=this.safeString(e,"addressFrom");if(void 0!==s){if(void 0!==n){const e=n.split("_");n=this.safeString(e,0),r=this.safeString(e,1)}if(void 0!==o){const e=o.split("_");o=this.safeString(e,0),a=this.safeString(e,1)}}const d=this.safeString(e,"txid"),c=this.safeInteger(e,"createdAt"),h=this.safeInteger(e,"updatedAt"),u="payAmount"in e||"ctime"in e?"withdrawal":"deposit",l=this.parseTransactionStatusByType(this.safeString(e,"status"),u),p=this.safeNumber(e,"amount");let f,m=this.safeString2(e,"symbol","coin");if(void 0!==m){const e=m.split("_");m=this.safeString(e,0);const t=this.safeString(e,1);void 0!==t&&(f=t.toUpperCase())}const v=this.safeCurrencyCode(m,t),g=this.safeNumber(e,"fee");let y;return void 0!==g&&(y={currency:v,cost:g}),{info:e,id:i,txid:d,timestamp:c,datetime:this.iso8601(c),network:f,address:n,addressTo:n,addressFrom:o,tag:r,tagTo:r,tagFrom:a,type:u,amount:p,currency:v,status:l,updated:h,internal:!1,fee:y}}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e);let o=this.safeString(a,"chainName");if(void 0===o){const e=this.safeValue(n,"networks",{}),t=this.safeValue(this.options,"networks",{});let i=this.safeStringUpper(a,"network");i=this.safeString(t,i,i);const s=this.safeValue(e,i,{});if(o=this.safeString(s,"id"),void 0===o)throw new r.ArgumentsRequired(this.id+" withdraw() requires a network parameter or a chainName parameter");a=this.omit(a,"network")}const d={coin:n.id.toUpperCase(),amount:t,addressTo:i,chainName:o};void 0!==s&&(d.tag=s);const c=await this.v1PrivatePostWithdrawCommit(this.extend(d,a)),h=this.safeValue(c,"data");return this.parseTransaction(h,n)}parseDepositWithdrawFee(e,t=undefined){const i=this.safeValue(e,"chainDetail",[]),s=i.length,r={info:e,withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}};if(0!==s)for(let e=0;e<s;e++){const a=i[e],n=this.safeString(a,"chain"),o=this.safeString(t,"code"),d=this.networkIdToCode(n,o);r.networks[d]={deposit:{fee:void 0,percentage:void 0},withdraw:{fee:this.safeNumber(a,"withdrawFee"),percentage:!1}},1===s&&(r.withdraw.fee=this.safeNumber(a,"withdrawFee"),r.withdraw.percentage=!1)}return r}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.v1PublicGetExchangeInfo(t),s=this.safeValue(i,"coins");return this.parseDepositWithdrawFees(s,e,"coin")}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const[n,d]=t;let c=this.urls.api[n]+"/"+this.implodeParams(e,s);if(s=this.omit(s,this.extractParams(e)),"private"===d){this.checkRequiredCredentials();const e=this.safeInteger(this.options,"recvWindow",5e3);let t=this.urlencode(this.extend({timestamp:this.nonce(),recvWindow:e},s));t+="&signature="+this.hmac(this.encode(t),this.encode(this.secret),o.J),r={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i?c+="?"+t:(a=t,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(s).length&&(c+="?"+this.urlencode(s));return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,n,o,d,c,h){if(418===e||429===e)throw new r.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+o);if(e>=400){if(o.indexOf("Price * QTY is zero or less")>=0)throw new r.InvalidOrder(this.id+" order cost = amount * price is zero or less "+o);if(o.indexOf("LOT_SIZE")>=0)throw new r.InvalidOrder(this.id+" order amount should be evenly divisible by lot size "+o);if(o.indexOf("PRICE_FILTER")>=0)throw new r.InvalidOrder(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid float value in general, use this.priceToPrecision (symbol, amount) "+o)}if(void 0===d)return;const u=this.safeValue(d,"success",!0);if(!u){const e=this.safeString(d,"msg");let t;if(void 0!==e){try{t=JSON.parse(e)}catch(e){t=void 0}void 0!==t&&(d=t)}}const l=this.safeString(d,"msg");void 0!==l&&(this.throwExactlyMatchedException(this.exceptions.exact,l,this.id+" "+l),this.throwBroadlyMatchedException(this.exceptions.broad,l,this.id+" "+l));const p=this.safeString(d,"code");if(void 0!==p){if("200"===p||a.O.stringEquals(p,"0"))return;if("-2015"===p&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new r.DDoSProtection(this.id+" temporary banned: "+o);const e=this.id+" "+o;throw this.throwExactlyMatchedException(this.exceptions.exact,p,e),new r.ExchangeError(e)}if(!u)throw new r.ExchangeError(this.id+" "+o)}calculateRateLimiterCost(e,t,i,s,r={},a={}){if("noSymbol"in r&&!("symbol"in s))return r.noSymbol;if("byLimit"in r&&"limit"in s){const e=s.limit,t=r.byLimit;for(let i=0;i<t.length;i++){const s=t[i];if(e<=s[0])return s[1]}}return this.safeValue(r,"cost",1)}}},4388:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(9581),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitso",name:"Bitso",countries:["MX"],rateLimit:2e3,version:"v3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFee:!1,fetchTransactionFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87295554-11f98280-c50e-11ea-80d6-15b3bafa8cbf.jpg",api:{rest:"https://api.bitso.com"},www:"https://bitso.com",doc:"https://bitso.com/api_info",fees:"https://bitso.com/fees",referral:"https://bitso.com/?ref=itej"},precisionMode:n.sh,options:{precision:{XRP:1e-6,MXN:.01,TUSD:.01},defaultPrecision:1e-8},timeframes:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","4h":"14400","12h":"43200","1d":"86400","1w":"604800"},api:{public:{get:["available_books","ticker","order_book","trades","ohlc"]},private:{get:["account_status","balance","fees","fundings","fundings/{fid}","funding_destination","kyc_documents","ledger","ledger/trades","ledger/fees","ledger/fundings","ledger/withdrawals","mx_bank_codes","open_orders","order_trades/{oid}","orders/{oid}","user_trades","user_trades/{tid}","withdrawals/","withdrawals/{wid}"],post:["bitcoin_withdrawal","debit_card_withdrawal","ether_withdrawal","orders","phone_number","phone_verification","phone_withdrawal","spei_withdrawal","ripple_withdrawal","bcash_withdrawal","litecoin_withdrawal"],delete:["orders","orders/{oid}","orders/all"]}},exceptions:{"0201":r.AuthenticationError,104:r.InvalidNonce,"0304":r.BadRequest}})}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){const r={};void 0!==i&&(r.limit=i);const a=await this.privateGetLedger(this.extend(r,s)),n=this.safeValue(a,"payload",[]);return this.parseLedger(n,e,t,i)}parseLedgerEntryType(e){return this.safeString({funding:"transaction",withdrawal:"transaction",trade:"trade",fee:"fee"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"operation"),s=this.parseLedgerEntryType(i),r=this.safeValue(e,"balance_updates",[]),n=this.safeValue(r,0,{});let o,d;const c=this.safeString(n,"amount"),h=this.safeString(n,"currency"),u=this.safeCurrencyCode(h,t),l=this.safeValue(e,"details",{});let p=this.safeString2(l,"fid","wid");void 0===p&&(p=this.safeString(l,"tid")),"funding"===i?o="in":"withdrawal"===i?o="out":"trade"===i?o=void 0:"fee"===i&&(o="out",d={cost:a.O.stringAbs(c),currency:t});const f=this.parse8601(this.safeString(e,"created_at"));return this.safeLedgerEntry({id:this.safeString(e,"eid"),direction:o,account:void 0,referenceId:p,referenceAccount:void 0,type:s,currency:u,amount:c,timestamp:f,datetime:this.iso8601(f),before:void 0,after:void 0,status:"ok",fee:d,info:e},t)}async fetchMarkets(e={}){const t=await this.publicGetAvailableBooks(e),i=this.safeValue(t,"payload",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"book"),[n,o]=r.split("_");let d=n.toUpperCase(),c=o.toUpperCase();d=this.safeCurrencyCode(d),c=this.safeCurrencyCode(c);const h=this.safeValue(t,"fees",{}),u=this.safeValue(h,"flat_rate",{}),l=this.safeString(u,"taker"),p=this.safeString(u,"maker"),f=this.parseNumber(a.O.stringDiv(l,"100")),m=this.parseNumber(a.O.stringDiv(p,"100")),v=this.safeValue(h,"structure",[]),g={taker:f,maker:m,percentage:!0,tierBased:!0},y=[],b=[];for(let e=0;e<v.length;e++){const t=v[e],i=this.safeNumber(t,"volume"),s=this.safeNumber(t,"taker"),r=this.safeNumber(t,"maker");y.push([i,s]),b.push([i,r]),0===e&&(g.taker=s,g.maker=r)}const w={taker:y,maker:b};g.tiers=w;const S=this.safeNumber(this.options.precision,c,this.options.defaultPrecision);s.push(this.extend({id:r,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:f,maker:m,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(this.options.precision,d,this.options.defaultPrecision),price:this.safeNumber(t,"tick_size",S)},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minimum_amount"),max:this.safeNumber(t,"maximum_amount")},price:{min:this.safeNumber(t,"minimum_price"),max:this.safeNumber(t,"maximum_price")},cost:{min:this.safeNumber(t,"minimum_value"),max:this.safeNumber(t,"maximum_value")}},info:t},g))}return s}parseBalance(e){const t=this.safeValue(e,"payload",{}),i=this.safeValue(t,"balances",[]),s={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"available"),n.used=this.safeString(t,"locked"),n.total=this.safeString(t,"total"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={book:s.id},a=await this.publicGetOrderBook(this.extend(r,i)),n=this.safeValue(a,"payload"),o=this.parse8601(this.safeString(n,"updated_at"));return this.parseOrderBook(n,s.symbol,o,"bids","asks","price","amount")}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"vwap"),n=this.safeString(e,"volume"),o=a.O.stringMul(n,r),d=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:void 0,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={book:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeValue(r,"payload");return this.parseTicker(a,i)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={book:a.id,time_bucket:this.safeString(this.timeframes,t,t)};if(void 0!==i){if(n.start=i,void 0!==s){const e=this.parseTimeframe(t);n.end=this.sum(i,e*s*1e3)}}else if(void 0!==s){const e=this.milliseconds();n.end=e,n.start=e-1e3*this.parseTimeframe(t)*s}const o=await this.publicGetOhlc(this.extend(n,r)),d=this.safeValue(o,"payload",[]);return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t=undefined,i="1m"){return[this.safeInteger(e,"bucket_start_time"),this.safeNumber(e,"first_rate"),this.safeNumber(e,"max_rate"),this.safeNumber(e,"min_rate"),this.safeNumber(e,"last_rate"),this.safeNumber(e,"volume")]}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString(e,"created_at")),s=this.safeString(e,"book"),r=this.safeSymbol(s,t,"_"),n=this.safeString2(e,"side","maker_side");let o;o=n===this.safeString(e,"maker_side")?"maker":"taker";let d,c=this.safeString2(e,"amount","major");void 0!==c&&(c=a.O.stringAbs(c));const h=this.safeString(e,"fees_amount");if(void 0!==h){const t=this.safeString(e,"fees_currency");d={cost:h,currency:this.safeCurrencyCode(t)}}let u=this.safeString(e,"minor");void 0!==u&&(u=a.O.stringAbs(u));const l=this.safeString(e,"price"),p=this.safeString(e,"oid"),f=this.safeString(e,"tid");return this.safeTrade({id:f,info:e,timestamp:i,datetime:this.iso8601(i),symbol:r,order:p,type:void 0,side:n,takerOrMaker:o,price:l,amount:c,cost:u,fee:d},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={book:r.id},n=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(n.payload,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetFees(e),i=this.safeValue(t,"payload",{}),s=this.safeValue(i,"fees",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"book"),a=this.safeSymbol(i,void 0,"_");r[a]={info:t,symbol:a,maker:this.safeNumber(t,"maker_fee_decimal"),taker:this.safeNumber(t,"taker_fee_decimal"),percentage:!0,tierBased:!0}}return r}async fetchMyTrades(e=undefined,t=undefined,i=25,s={}){await this.loadMarkets();const a=this.market(e),n="marker"in s;if(void 0!==t&&!n)throw new r.ExchangeError(this.id+" fetchMyTrades() does not support fetching trades starting from a timestamp with the `since` argument, use the `marker` extra param to filter starting from an integer trade id");n&&(s=this.extend(s,{marker:parseInt(s.marker)}));const o={book:a.id,limit:i},d=await this.privateGetUserTrades(this.extend(o,s));return this.parseTrades(d.payload,a,t,i)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={book:n.id,side:i,type:t,major:this.amountToPrecision(n.symbol,s)};"limit"===t&&(o.price=this.priceToPrecision(n.symbol,r));const d=await this.privatePostOrders(this.extend(o,a)),c=this.safeString(d.payload,"oid");return this.safeOrder({info:d,id:c},n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={oid:e};return await this.privateDeleteOrdersOid(this.extend(s,i))}async cancelOrders(e,t=undefined,i={}){if(!Array.isArray(e))throw new r.ArgumentsRequired(this.id+" cancelOrders() ids argument should be an array");let s;void 0!==t&&(s=this.market(t));const a={oids:e.join(",")},n=await this.privateDeleteOrders(this.extend(a,i)),o=this.safeValue(n,"payload",[]),d=[];for(let e=0;e<o.length;e++){const t=o[e];d.push(this.parseOrder(t,s))}return d}async cancelAllOrders(e=undefined,t={}){if(void 0!==e)throw new r.NotSupported(this.id+" cancelAllOrders() deletes all orders for user, it does not support filtering by symbol.");const i=await this.privateDeleteOrdersAll(t),s=this.safeValue(i,"payload",[]),a=[];for(let e=0;e<s.length;e++){const t=this.parseOrder(s[e]);a.push(t)}return a}parseOrderStatus(e){return this.safeString({"partial-fill":"open",completed:"closed"},e,e)}parseOrder(e,t=undefined){let i;i="string"==typeof e?e:this.safeString(e,"oid");const s=this.safeString(e,"side"),r=this.parseOrderStatus(this.safeString(e,"status")),a=this.safeString(e,"book"),n=this.safeSymbol(a,t,"_"),o=this.safeString(e,"type"),d=this.parse8601(this.safeString(e,"created_at")),c=this.safeString(e,"price"),h=this.safeString(e,"original_amount"),u=this.safeString(e,"unfilled_amount"),l=this.safeString(e,"client_id");return this.safeOrder({info:e,id:i,clientOrderId:l,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:n,type:o,timeInForce:void 0,postOnly:void 0,side:s,price:c,stopPrice:void 0,triggerPrice:void 0,amount:h,cost:void 0,remaining:u,filled:void 0,status:r,fee:void 0,average:void 0,trades:void 0},t)}async fetchOpenOrders(e=undefined,t=undefined,i=25,s={}){await this.loadMarkets();const a=this.market(e),n="marker"in s;if(void 0!==t&&!n)throw new r.ExchangeError(this.id+" fetchOpenOrders() does not support fetching orders starting from a timestamp with the `since` argument, use the `marker` extra param to filter starting from an integer trade id");n&&(s=this.extend(s,{marker:parseInt(s.marker)}));const o={book:a.id,limit:i},d=await this.privateGetOpenOrders(this.extend(o,s));return this.parseOrders(d.payload,a,t,i)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=await this.privateGetOrdersOid({oid:e}),a=this.safeValue(s,"payload");if(Array.isArray(a)&&1===s.payload.length)return this.parseOrder(a[0]);throw new r.OrderNotFound(this.id+": The order "+e+" not found.")}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(t),n={oid:e},o=await this.privateGetOrderTradesOid(this.extend(n,r));return this.parseTrades(o.payload,a)}async fetchDeposit(e,t=undefined,i={}){await this.loadMarkets();const s={fid:e},r=await this.privateGetFundingsFid(this.extend(s,i)),a=this.safeValue(r,"payload",[]),n=this.safeValue(a,0,{});return this.parseTransaction(n)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetFundings(s),n=this.safeValue(a,"payload",[]);return this.parseTransactions(n,r,t,i,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={fund_currency:this.currency(e).id},s=await this.privateGetFundingDestination(this.extend(i,t));let r,a=this.safeString(s.payload,"account_identifier");if(a.indexOf("?dt=")>=0){const e=a.split("?dt=");a=this.safeString(e,0),r=this.safeString(e,1)}return this.checkAddress(a),{currency:e,address:a,tag:r,network:void 0,info:s}}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetFees(t),s={},r=this.safeValue(i,"payload",{}),a=this.safeValue(r,"deposit_fees",[]);for(let t=0;t<a.length;t++){const i=a[t],r=this.safeString(i,"currency"),n=this.safeCurrencyCode(r);(void 0===e||this.inArray(n,e))&&(s[n]={deposit:this.safeNumber(i,"fee"),withdraw:void 0,info:{deposit:i,withdraw:void 0}})}const n=this.safeValue(r,"withdrawal_fees",[]),o=Object.keys(n);for(let t=0;t<o.length;t++){const i=o[t],r=this.safeCurrencyCode(i);(void 0===e||this.inArray(r,e))&&(s[r]={deposit:this.safeValue(s[r],"deposit"),withdraw:this.safeNumber(n,i),info:{deposit:this.safeValue(s[r].info,"deposit"),withdraw:this.safeNumber(n,i)}})}return s}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetFees(t),s=this.safeValue(i,"payload",{});return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFees(e,t=undefined,i=undefined){const s={},r=this.safeValue(e,"deposit_fees",[]),a=this.safeValue(e,"withdrawal_fees",[]);for(let e=0;e<r.length;e++){const i=r[e],a=this.safeString(i,"currency"),n=this.safeCurrencyCode(a);(void 0===t||n in t)&&(s[n]={deposit:{fee:this.safeNumber(i,"fee"),percentage:!this.safeValue(i,"is_fixed")},withdraw:{fee:void 0,percentage:void 0},networks:{},info:i})}const n=Object.keys(a);for(let e=0;e<n.length;e++){const i=n[e],r=this.safeCurrencyCode(i);if(void 0===t||r in t){const e=this.parseNumber(a[i]);void 0===this.safeValue(s,r)&&(s[r]=this.depositWithdrawFee({})),s[r].withdraw.fee=e,s[r].info[r]=e}}return s}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n={BTC:"Bitcoin",ETH:"Ether",XRP:"Ripple",BCH:"Bcash",LTC:"Litecoin"},o=this.currency(e),d=e in n?n[e]:void 0;if(void 0===d)throw new r.ExchangeError(this.id+" not valid withdraw coin: "+e);const c={amount:t,address:i,destination_tag:s},h="privatePost"+d+"Withdrawal",u=await this[h](this.extend(c,a)),l=this.safeValue(u,"payload",[]),p=this.safeValue(l,0);return this.parseTransaction(p,o)}safeNetwork(e){if(void 0!==e)return e=e.toUpperCase(),this.safeString({trx:"TRC20",erc20:"ERC20",bsc:"BEP20",bep2:"BEP2"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString2(e,"currency","asset");t=this.safeCurrency(i,t);const s=this.safeValue(e,"details",{}),r=this.safeString(e,"created_at"),a=this.safeString(s,"withdrawal_address"),n=this.safeString(s,"receiving_address"),o=this.safeString2(e,"network","method"),d=this.safeString(e,"status"),c=this.safeString(e,"wid");return{id:this.safeString2(e,"wid","fid"),txid:this.safeString(s,"tx_hash"),timestamp:this.parse8601(r),datetime:r,network:this.safeNetwork(o),addressFrom:n,address:void 0!==a?a:n,addressTo:a,amount:this.safeString(e,"amount"),type:void 0===c?"deposit":"withdrawal",currency:this.safeCurrencyCode(i,t),status:this.parseTransactionStatus(d),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}parseTransactionStatus(e){return this.safeString({pending:"pending",in_progress:"pending",complete:"ok",failed:"failed"},e,e)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/"+this.version+"/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));"GET"!==i&&"DELETE"!==i||Object.keys(d).length&&(n+="?"+this.urlencode(d));const c=this.urls.api.rest+n;if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString();let t=[e,i,n].join("");"GET"!==i&&"DELETE"!==i&&Object.keys(d).length&&(t+=a=this.json(d));const s=this.hmac(this.encode(t),this.encode(this.secret),o.J);r={Authorization:"Bitso "+this.apiKey+":"+e+":"+s,"Content-Type":"application/json"}}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"success"in o){let e=this.safeValue(o,"success",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){const e=this.id+" "+this.json(o),t=this.safeValue(o,"error");if(void 0===t)throw new r.ExchangeError(e);const i=this.safeString(t,"code");throw this.throwExactlyMatchedException(this.exceptions,i,e),new r.ExchangeError(e)}}}}},4667:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(1573),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitstamp",name:"Bitstamp",countries:["GB"],rateLimit:75,version:"v2",userAgent:this.userAgents.chrome,pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg",api:{public:"https://www.bitstamp.net/api",private:"https://www.bitstamp.net/api"},www:"https://www.bitstamp.net",doc:"https://www.bitstamp.net/api"},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"259200"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:{"ohlc/{pair}/":1,"order_book/{pair}/":1,"ticker_hour/{pair}/":1,"ticker/{pair}/":1,"transactions/{pair}/":1,"trading-pairs-info/":1}},private:{post:{"balance/":1,"balance/{pair}/":1,"bch_withdrawal/":1,"bch_address/":1,"user_transactions/":1,"user_transactions/{pair}/":1,"open_orders/all/":1,"open_orders/{pair}/":1,"order_status/":1,"cancel_order/":1,"cancel_all_orders/":1,"cancel_all_orders/{pair}/":1,"buy/{pair}/":1,"buy/market/{pair}/":1,"buy/instant/{pair}/":1,"sell/{pair}/":1,"sell/market/{pair}/":1,"sell/instant/{pair}/":1,"transfer-to-main/":1,"transfer-from-main/":1,"withdrawal-requests/":1,"withdrawal/open/":1,"withdrawal/status/":1,"withdrawal/cancel/":1,"liquidation_address/new/":1,"liquidation_address/info/":1,"btc_unconfirmed/":1,"websockets_token/":1,"btc_withdrawal/":1,"btc_address/":1,"ripple_withdrawal/":1,"ripple_address/":1,"ltc_withdrawal/":1,"ltc_address/":1,"eth_withdrawal/":1,"eth_address/":1,"xrp_withdrawal/":1,"xrp_address/":1,"xlm_withdrawal/":1,"xlm_address/":1,"pax_withdrawal/":1,"pax_address/":1,"link_withdrawal/":1,"link_address/":1,"usdc_withdrawal/":1,"usdc_address/":1,"omg_withdrawal/":1,"omg_address/":1,"dai_withdrawal/":1,"dai_address/":1,"knc_withdrawal/":1,"knc_address/":1,"mkr_withdrawal/":1,"mkr_address/":1,"zrx_withdrawal/":1,"zrx_address/":1,"gusd_withdrawal/":1,"gusd_address/":1,"aave_withdrawal/":1,"aave_address/":1,"bat_withdrawal/":1,"bat_address/":1,"uma_withdrawal/":1,"uma_address/":1,"snx_withdrawal/":1,"snx_address/":1,"uni_withdrawal/":1,"uni_address/":1,"yfi_withdrawal/":1,yfi_address:1,"audio_withdrawal/":1,"audio_address/":1,"crv_withdrawal/":1,"crv_address/":1,"algo_withdrawal/":1,"algo_address/":1,"comp_withdrawal/":1,"comp_address/":1,grt_withdrawal:1,"grt_address/":1,"usdt_withdrawal/":1,"usdt_address/":1,"eurt_withdrawal/":1,"eurt_address/":1,"matic_withdrawal/":1,"matic_address/":1,"sushi_withdrawal/":1,"sushi_address/":1,"chz_withdrawal/":1,"chz_address/":1,"enj_withdrawal/":1,"enj_address/":1,"alpha_withdrawal/":1,"alpha_address/":1,"ftt_withdrawal/":1,"ftt_address/":1,"storj_withdrawal/":1,"storj_address/":1,"axs_withdrawal/":1,"axs_address/":1,"sand_withdrawal/":1,"sand_address/":1,"hbar_withdrawal/":1,"hbar_address/":1,"rgt_withdrawal/":1,"rgt_address/":1,"fet_withdrawal/":1,"fet_address/":1,"skl_withdrawal/":1,"skl_address/":1,"cel_withdrawal/":1,"cel_address/":1,"sxp_withdrawal/":1,"sxp_address/":1,"ada_withdrawal/":1,"ada_address/":1,"slp_withdrawal/":1,"slp_address/":1,"ftm_withdrawal/":1,"ftm_address/":1,"perp_withdrawal/":1,"perp_address/":1,"dydx_withdrawal/":1,"dydx_address/":1,"gala_withdrawal/":1,"gala_address/":1,"shib_withdrawal/":1,"shib_address/":1,"amp_withdrawal/":1,"amp_address/":1,"sgb_withdrawal/":1,"sgb_address/":1,"avax_withdrawal/":1,"avax_address/":1,"wbtc_withdrawal/":1,"wbtc_address/":1,"ctsi_withdrawal/":1,"ctsi_address/":1,"cvx_withdrawal/":1,"cvx_address/":1,"imx_withdrawal/":1,"imx_address/":1,"nexo_withdrawal/":1,"nexo_address/":1,"ust_withdrawal/":1,"ust_address/":1,"ant_withdrawal/":1,"ant_address/":1,"gods_withdrawal/":1,"gods_address/":1,"rad_withdrawal/":1,"rad_address/":1,"band_withdrawal/":1,"band_address/":1,"inj_withdrawal/":1,"inj_address/":1,"rly_withdrawal/":1,"rly_address/":1,"rndr_withdrawal/":1,"rndr_address/":1,"vega_withdrawal/":1,"vega_address/":1,"1inch_withdrawal/":1,"1inch_address/":1,"ens_withdrawal/":1,"ens_address/":1,"mana_withdrawal/":1,"mana_address/":1,"lrc_withdrawal/":1,"lrc_address/":1,"ape_withdrawal/":1,"ape_address/":1,"mpl_withdrawal/":1,"mpl_address/":1,"euroc_withdrawal/":1,"euroc_address/":1,"sol_withdrawal/":1,"sol_address/":1,"dot_withdrawal/":1,"dot_address/":1,"near_withdrawal/":1,"near_address/":1,"doge_withdrawal/":1,"doge_address/":1,"flr_withdrawal/":1,"flr_address/":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.005"),maker:this.parseNumber("0.005"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.005")],[this.parseNumber("20000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0024")],[this.parseNumber("200000"),this.parseNumber("0.0022")],[this.parseNumber("400000"),this.parseNumber("0.0020")],[this.parseNumber("600000"),this.parseNumber("0.0015")],[this.parseNumber("1000000"),this.parseNumber("0.0014")],[this.parseNumber("2000000"),this.parseNumber("0.0013")],[this.parseNumber("4000000"),this.parseNumber("0.0012")],[this.parseNumber("20000000"),this.parseNumber("0.0011")],[this.parseNumber("50000000"),this.parseNumber("0.0010")],[this.parseNumber("100000000"),this.parseNumber("0.0007")],[this.parseNumber("500000000"),this.parseNumber("0.0005")],[this.parseNumber("2000000000"),this.parseNumber("0.0003")],[this.parseNumber("6000000000"),this.parseNumber("0.0001")],[this.parseNumber("20000000000"),this.parseNumber("0.00005")],[this.parseNumber("20000000001"),this.parseNumber("0")]],maker:[[this.parseNumber("0"),this.parseNumber("0.005")],[this.parseNumber("20000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0024")],[this.parseNumber("200000"),this.parseNumber("0.0022")],[this.parseNumber("400000"),this.parseNumber("0.0020")],[this.parseNumber("600000"),this.parseNumber("0.0015")],[this.parseNumber("1000000"),this.parseNumber("0.0014")],[this.parseNumber("2000000"),this.parseNumber("0.0013")],[this.parseNumber("4000000"),this.parseNumber("0.0012")],[this.parseNumber("20000000"),this.parseNumber("0.0011")],[this.parseNumber("50000000"),this.parseNumber("0.0010")],[this.parseNumber("100000000"),this.parseNumber("0.0007")],[this.parseNumber("500000000"),this.parseNumber("0.0005")],[this.parseNumber("2000000000"),this.parseNumber("0.0003")],[this.parseNumber("6000000000"),this.parseNumber("0.0001")],[this.parseNumber("20000000000"),this.parseNumber("0.00005")],[this.parseNumber("20000000001"),this.parseNumber("0")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{BTC:0,BCH:0,LTC:0,ETH:0,XRP:0,XLM:0,PAX:0,USD:7.5,EUR:0}}},precisionMode:n.sh,commonCurrencies:{UST:"USTC"},exceptions:{exact:{"No permission found":r.PermissionDenied,"API key not found":r.AuthenticationError,"IP address not allowed":r.PermissionDenied,"Invalid nonce":r.InvalidNonce,"Invalid signature":r.AuthenticationError,"Authentication failed":r.AuthenticationError,"Missing key, signature and nonce parameters":r.AuthenticationError,"Wrong API key format":r.AuthenticationError,"Your account is frozen":r.PermissionDenied,"Please update your profile with your FATCA information, before using API.":r.PermissionDenied,"Order not found.":r.OrderNotFound,"Price is more than 20% below market price.":r.InvalidOrder,"Bitstamp.net is under scheduled maintenance. We'll be back soon.":r.OnMaintenance,"Order could not be placed.":r.ExchangeNotAvailable,"Invalid offset.":r.BadRequest},broad:{"Minimum order size is":r.InvalidOrder,"Check your account balance for details.":r.InsufficientFunds,"Ensure this value has at least":r.InvalidAddress,"Ensure that there are no more than":r.InvalidOrder}}})}async fetchMarkets(e={}){const t=await this.fetchMarketsFromCache(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"name");let[a,n]=r.split("/");const o=a.toLowerCase(),d=n.toLowerCase();a=this.safeCurrencyCode(a),n=this.safeCurrencyCode(n);const c=this.safeString(s,"minimum_order").split(" "),h=this.safeString(s,"trading");i.push({id:this.safeString(s,"url_symbol"),marketId:o+"_"+d,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:o,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,future:!1,swap:!1,option:!1,active:"Enabled"===h,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"base_decimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"counter_decimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(c,0),max:void 0}},info:s})}return i}constructCurrencyObject(e,t,i,s,r,a){let n="crypto";const o=this.describe();this.isFiat(t)&&(n="fiat");const d=this.parseNumber(this.parsePrecision(this.numberToString(s)));return{id:e,code:t,info:a,type:n,name:i,active:!0,deposit:void 0,withdraw:void 0,fee:this.safeNumber(o.fees.funding.withdraw,t),precision:d,limits:{amount:{min:d,max:void 0},price:{min:d,max:void 0},cost:{min:r,max:void 0},withdraw:{min:void 0,max:void 0}}}}async fetchMarketsFromCache(e={}){const t=this.safeValue(this.options,"fetchMarkets",{}),i=this.safeInteger(t,"timestamp"),s=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===i||r-i>s){const i=await this.publicGetTradingPairsInfo(e);this.options.fetchMarkets=this.extend(t,{response:i,timestamp:r})}return this.safeValue(this.options.fetchMarkets,"response")}async fetchCurrencies(e={}){const t=await this.fetchMarketsFromCache(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"name");let[a,n]=r.split("/");const o=a.toLowerCase(),d=n.toLowerCase();a=this.safeCurrencyCode(a),n=this.safeCurrencyCode(n);const c=this.safeString(s,"description"),[h,u]=c.split(" / "),l=this.safeString(s,"minimum_order").split(" ")[0];if(!(a in i)){const e=this.safeInteger(s,"base_decimals");i[a]=this.constructCurrencyObject(o,a,h,e,void 0,s)}if(!(n in i)){const e=this.safeInteger(s,"counter_decimals");i[n]=this.constructCurrencyObject(d,n,u,e,this.parseNumber(l),s)}}return i}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id},a=await this.publicGetOrderBookPair(this.extend(r,i)),n=this.safeInteger(a,"microtimestamp"),o=this.parseToInt(n/1e3),d=this.parseOrderBook(a,s.symbol,o);return d.nonce=n,d}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"vwap"),n=this.safeString(e,"volume"),o=a.O.stringMul(n,r),d=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:this.safeString(e,"open"),close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetTickerPair(this.extend(s,t));return this.parseTicker(r,i)}getCurrencyIdFromTransaction(e){const t=this.safeStringLower(e,"currency");if(void 0!==t)return t;e=this.omit(e,["fee","price","datetime","type","status","id"]);const i=Object.keys(e);for(let t=0;t<i.length;t++){const s=i[t];if(s.indexOf("_")<0){const t=this.safeNumber(e,s);if(void 0!==t&&0!==t)return s}}}getMarketFromTrade(e){e=this.omit(e,["fee","price","datetime","tid","type","order_id","side"]);const t=Object.keys(e),i=t.length;if(i>2)throw new r.ExchangeError(this.id+" getMarketFromTrade() too many keys: "+this.json(t)+" in the trade: "+this.json(e));if(2===i){let e=t[0]+t[1];if(e in this.markets_by_id)return this.safeMarket(e);if(e=t[1]+t[0],e in this.markets_by_id)return this.safeMarket(e)}}parseTrade(e,t=undefined){const i=this.safeString2(e,"id","tid");let s,r,n=this.safeString(e,"price"),o=this.safeString(e,"amount");const d=this.safeString(e,"order_id");let c,h=this.safeString(e,"cost");if(void 0===t){const i=Object.keys(e);for(let e=0;e<i.length;e++){const s=i[e];"order_id"!==s&&s.indexOf("_")>=0&&(c=s,t=this.safeMarket(c,t,"_"))}}void 0===t&&(t=this.getMarketFromTrade(e));const u=this.safeString(e,"fee"),l=t.quote,p=void 0!==c?c:t.marketId;n=this.safeString(e,p,n),o=this.safeString(e,t.baseId,o),h=this.safeString(e,t.quoteId,h),s=t.symbol;const f=this.safeString2(e,"date","datetime");let m,v;return void 0!==f&&(f.indexOf(" ")>=0?m=this.parse8601(f):(m=parseInt(f),m*=1e3)),"id"in e?void 0!==o&&(a.O.stringLt(o,"0")?(r="sell",o=a.O.stringNeg(o)):r="buy"):(r=this.safeString(e,"type"),r="1"===r?"sell":"0"===r?"buy":void 0),void 0!==h&&(h=a.O.stringAbs(h)),void 0!==u&&(v={cost:u,currency:l}),this.safeTrade({id:i,info:e,timestamp:m,datetime:this.iso8601(m),symbol:s,order:d,type:void 0,side:r,takerOrMaker:void 0,price:n,amount:o,cost:h,fee:v},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id,time:"hour"},n=await this.publicGetTransactionsPair(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={pair:a.id,step:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t);if(void 0===s)if(void 0===i)n.limit=1e3;else{s=1e3;const e=this.parseToInt(i/1e3);n.start=e,n.end=this.sum(e,s*o),n.limit=s}else{if(void 0!==i){const e=this.parseToInt(i/1e3);n.start=e,n.end=this.sum(e,s*o)}n.limit=Math.min(s,1e3)}const d=await this.publicGetOhlcPair(this.extend(n,r)),c=this.safeValue(d,"data",{}),h=this.safeValue(c,"ohlc",[]);return this.parseOHLCVs(h,a,t,i,s)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){const r=i[s],a=this.currency(r).id,n=this.account();n.free=this.safeString(e,a+"_available"),n.used=this.safeString(e,a+"_reserved"),n.total=this.safeString(e,a+"_balance"),t[r]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.privatePostBalancePair(this.extend(s,t));return this.parseTradingFee(r,i)}parseTradingFee(e,t=undefined){t=this.safeMarket(void 0,t);const i=this.safeString(e,t.id+"_fee"),s=a.O.stringDiv(i,"100"),r=this.parseNumber(s);return{info:e,symbol:t.symbol,maker:r,taker:r}}parseTradingFees(e){const t={info:e},i=this.symbols;for(let s=0;s<i.length;s++){const r=i[s],a=this.market(r),n=this.parseTradingFee(e,a);t[r]=n}return t}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseTradingFees(t)}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privatePostBalance(t);return this.parseTransactionFees(i)}parseTransactionFees(e,t=undefined){void 0===t&&(t=Object.keys(this.currencies));const i={};let s;const r=Object.keys(e);for(let a=0;a<r.length;a++){const n=r[a],o=n.split("_")[0],d=this.safeCurrencyCode(o);(void 0===t||this.inArray(d,t))&&(n.indexOf("_available")>=0&&(s=o,i[d]={deposit:void 0,withdraw:void 0,info:{}}),o===s&&(i[d].info[n]=this.safeNumber(e,n)),n.indexOf("_withdrawal_fee")>=0&&(i[d].withdraw=this.safeNumber(e,n)))}return i}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privatePostBalance(t);return this.parseDepositWithdrawFees(i,e)}parseDepositWithdrawFees(e,t=undefined,i=undefined){const s={},r=Object.keys(e);for(let i=0;i<r.length;i++){const a=r[i],n=a.split("_")[0],o=this.safeCurrencyCode(n),d=this.safeNumber(e,a);(void 0===t||this.inArray(o,t))&&(a.indexOf("_available")>=0&&(s[o]=this.depositWithdrawFee({})),a.indexOf("_withdrawal_fee")>=0&&(s[o].withdraw.fee=d),void 0!==this.safeValue(s,o)&&(s[o].info[a]=d))}return s}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e);let o="privatePost"+this.capitalize(i);const d={pair:n.id,amount:this.amountToPrecision(e,s)};"market"===t?o+="Market":"instant"===t?o+="Instant":d.price=this.priceToPrecision(e,r),o+="Pair";const c=this.safeString2(a,"client_order_id","clientOrderId");void 0!==c&&(d.client_order_id=c,a=this.omit(a,["client_order_id","clientOrderId"]));const h=await this[o](this.extend(d,a)),u=this.parseOrder(h,n);return this.extend(u,{type:t})}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e};return await this.privatePostCancelOrder(this.extend(s,i))}async cancelAllOrders(e=undefined,t={}){let i;await this.loadMarkets();const s={};let r="privatePostCancelAllOrders";return void 0!==e&&(i=this.market(e),s.pair=i.id,r="privatePostCancelAllOrdersPair"),await this[r](this.extend(s,t))}parseOrderStatus(e){return this.safeString({"In Queue":"open",Open:"open",Finished:"closed",Canceled:"canceled"},e,e)}async fetchOrderStatus(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue2(i,"client_order_id","clientOrderId"),r={};void 0!==s?(r.client_order_id=s,i=this.omit(i,["client_order_id","clientOrderId"])):r.id=e;const a=await this.privatePostOrderStatus(this.extend(r,i));return this.parseOrderStatus(this.safeString(a,"status"))}async fetchOrder(e,t=undefined,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));const r=this.safeValue2(i,"client_order_id","clientOrderId"),a={};void 0!==r?(a.client_order_id=r,i=this.omit(i,["client_order_id","clientOrderId"])):a.id=e;const n=await this.privatePostOrderStatus(this.extend(a,i));return this.parseOrder(n,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n="privatePostUserTransactions";void 0!==e&&(a=this.market(e),r.pair=a.id,n+="Pair"),void 0!==i&&(r.limit=i);const o=await this[n](this.extend(r,s)),d=this.filterBy(o,"type","2");return this.parseTrades(d,a,t,i)}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==i&&(r.limit=i);const a=await this.privatePostUserTransactions(this.extend(r,s));let n;void 0!==e&&(n=this.currency(e));const o=this.filterByArray(a,"type",["0","1"],!1);return this.parseTransactions(o,n,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};r.timedelta=void 0!==t?this.milliseconds()-t:5e7;const a=await this.privatePostWithdrawalRequests(this.extend(r,s));return this.parseTransactions(a,void 0,t,i)}parseTransaction(e,t=undefined){const i=this.parse8601(this.safeString(e,"datetime")),s=this.getCurrencyIdFromTransaction(e),r=this.safeCurrencyCode(s,t),n=this.safeString(e,"fee");let o,d;"amount"in e?d=this.safeString(e,"amount"):void 0!==t?(d=this.safeString(e,t.id,d),o=t.code):void 0!==r&&void 0!==s&&(d=this.safeString(e,s,d),o=r),void 0!==d&&(d=a.O.stringAbs(d));let c,h,u="ok";if("status"in e&&(u=this.parseTransactionStatus(this.safeString(e,"status"))),"type"in e){const t=this.safeString(e,"type");"0"===t?c="deposit":"1"===t&&(c="withdrawal")}else c="withdrawal";let l=this.safeString(e,"address");if(void 0!==l){const e=l.split("?dt=");e.length>1&&(l=e[0],h=e[1])}let p={currency:void 0,cost:void 0,rate:void 0};return void 0!==n&&(p={currency:o,cost:n,rate:void 0}),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"transaction_id"),type:c,currency:r,network:void 0,amount:this.parseNumber(d),status:u,timestamp:i,datetime:this.iso8601(i),address:l,addressFrom:void 0,addressTo:l,tag:h,tagFrom:void 0,tagTo:h,updated:void 0,comment:void 0,fee:p}}parseTransactionStatus(e){return this.safeString({0:"pending",1:"pending",2:"ok",3:"canceled",4:"failed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"client_order_id");let r=this.safeString(e,"type");void 0!==r&&(r="1"===r?"sell":"buy");const a=this.parse8601(this.safeString(e,"datetime")),n=this.safeStringLower(e,"currency_pair"),o=this.safeSymbol(n,t,"/"),d=this.parseOrderStatus(this.safeString(e,"status")),c=this.safeString(e,"amount"),h=this.safeValue(e,"transactions",[]),u=this.safeString(e,"price");return this.safeOrder({id:i,clientOrderId:s,datetime:this.iso8601(a),timestamp:a,lastTradeTimestamp:void 0,status:d,symbol:o,type:void 0,timeInForce:void 0,postOnly:void 0,side:r,price:u,stopPrice:void 0,triggerPrice:void 0,cost:void 0,amount:c,filled:void 0,remaining:void 0,trades:h,fee:void 0,info:e,average:void 0},t)}parseLedgerEntryType(e){return this.safeString({0:"transaction",1:"transaction",2:"trade",14:"transfer"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.parseLedgerEntryType(this.safeString(e,"type"));if("trade"===i){const t=this.parseTrade(e);let s;const r=Object.keys(e);for(let e=0;e<r.length;e++)if(r[e].indexOf("_")>=0){const t=r[e].replace("_","");s=this.safeMarket(t,s)}void 0===s&&(s=this.getMarketFromTrade(e));const a="buy"===t.side?"in":"out";return{id:t.id,info:e,timestamp:t.timestamp,datetime:t.datetime,direction:a,account:void 0,referenceId:t.order,referenceAccount:void 0,type:i,currency:s.base,amount:t.amount,before:void 0,after:void 0,status:"ok",fee:t.fee}}{const s=this.parseTransaction(e,t);let r;if("amount"in e){const t=this.safeString(e,"amount");r=a.O.stringGt(t,"0")?"in":"out"}else if("currency"in s&&void 0!==s.currency){const i=this.safeString(s,"currency");t=this.currency(i);const n=this.safeString(e,t.id);r=a.O.stringGt(n,"0")?"in":"out"}return{id:s.id,info:e,timestamp:s.timestamp,datetime:s.datetime,direction:r,account:void 0,referenceId:s.txid,referenceAccount:void 0,type:i,currency:s.currency,amount:s.amount,before:void 0,after:void 0,status:s.status,fee:s.fee}}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==i&&(r.limit=i);const a=await this.privatePostUserTransactions(this.extend(r,s));let n;return void 0!==e&&(n=this.currency(e)),this.parseLedger(a,n,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privatePostOpenOrdersAll(s);return this.parseOrders(a,r,t,i,{status:"open",type:"limit"})}getCurrencyName(e){return e.toLowerCase()}isFiat(e){return"USD"===e||"EUR"===e||"GBP"===e}async fetchDepositAddress(e,t={}){if(this.isFiat(e))throw new r.NotSupported(this.id+" fiat fetchDepositAddress() for "+e+" is not supported!");const i=this.getCurrencyName(e),s="privatePost"+this.capitalize(i)+"Address",a=await this[s](t),n=this.safeString(a,"address"),o=this.safeString2(a,"memo_id","destination_tag");return this.checkAddress(n),{currency:e,address:n,tag:o,network:void 0,info:a}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);const a={amount:t};let n,o;if(this.isFiat(e))o="privatePostWithdrawalOpen",n=this.currency(e),a.iban=i,a.account_currency=n.id;else{const t=this.getCurrencyName(e);o="privatePost"+this.capitalize(t)+"Withdrawal","XRP"===e?void 0!==s&&(a.destination_tag=s):"XLM"!==e&&"HBAR"!==e||void 0!==s&&(a.memo_id=s),a.address=i}const d=await this[o](this.extend(a,r));return this.parseTransaction(d,n)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t]+"/";n+=this.version+"/",n+=this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials();const e="BITSTAMP "+this.apiKey,t=this.uuid(),s=this.milliseconds().toString(),c="v2";let h="";r={"X-Auth":e,"X-Auth-Nonce":t,"X-Auth-Timestamp":s,"X-Auth-Version":c},"POST"===i&&(Object.keys(d).length?(a=this.urlencode(d),h="application/x-www-form-urlencoded",r["Content-Type"]=h):(a=this.urlencode({foo:"bar"}),h="application/x-www-form-urlencoded",r["Content-Type"]=h));const u=a||"",l=e+i+n.replace("https://","")+h+t+s+c+u,p=this.hmac(this.encode(l),this.encode(this.secret),o.J);r["X-Auth-Signature"]=p}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"status"),u=this.safeValue(o,"error");if("error"===h||void 0!==u){let e=[];if("string"==typeof u)e.push(u);else if(void 0!==u){const t=Object.keys(u);for(let i=0;i<t.length;i++){const s=t[i],r=this.safeValue(u,s);Array.isArray(r)?e=this.arrayConcat(e,r):e.push(r)}}const t=this.safeValue(o,"reason",{});if("string"==typeof t)e.push(t);else{const i=this.safeValue(t,"__all__",[]);for(let t=0;t<i.length;t++)e.push(i[t])}if("API0005"===this.safeString(o,"code"))throw new r.AuthenticationError(this.id+" invalid signature, use the uid for the main account if you have subaccounts");const i=this.id+" "+n;for(let t=0;t<e.length;t++){const s=e[t];this.throwExactlyMatchedException(this.exceptions.exact,s,i),this.throwBroadlyMatchedException(this.exceptions.broad,s,i)}throw new r.ExchangeError(i)}}}},1242:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(3768),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitstamp1",name:"Bitstamp",countries:["GB"],rateLimit:1e3,version:"v1",has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOrder:!1,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27786377-8c8ab57e-5fe9-11e7-8ea4-2b05b6bcceec.jpg",api:{rest:"https://www.bitstamp.net/api"},www:"https://www.bitstamp.net",doc:"https://www.bitstamp.net/api"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["ticker","ticker_hour","order_book","transactions","eur_usd"]},private:{post:["balance","user_transactions","open_orders","order_status","cancel_order","cancel_all_orders","buy","sell","bitcoin_deposit_address","unconfirmed_btc","ripple_withdrawal","ripple_address","withdrawal_requests","bitcoin_withdrawal"]}},precisionMode:n.sh,markets:{"BTC/USD":{id:"btcusd",symbol:"BTC/USD",base:"BTC",quote:"USD",baseId:"btc",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"BTC/EUR":{id:"btceur",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"btc",quoteId:"eur",maker:.005,taker:.005,type:"spot",spot:!0},"EUR/USD":{id:"eurusd",symbol:"EUR/USD",base:"EUR",quote:"USD",baseId:"eur",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"XRP/USD":{id:"xrpusd",symbol:"XRP/USD",base:"XRP",quote:"USD",baseId:"xrp",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"XRP/EUR":{id:"xrpeur",symbol:"XRP/EUR",base:"XRP",quote:"EUR",baseId:"xrp",quoteId:"eur",maker:.005,taker:.005,type:"spot",spot:!0},"XRP/BTC":{id:"xrpbtc",symbol:"XRP/BTC",base:"XRP",quote:"BTC",baseId:"xrp",quoteId:"btc",maker:.005,taker:.005,type:"spot",spot:!0},"LTC/USD":{id:"ltcusd",symbol:"LTC/USD",base:"LTC",quote:"USD",baseId:"ltc",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"LTC/EUR":{id:"ltceur",symbol:"LTC/EUR",base:"LTC",quote:"EUR",baseId:"ltc",quoteId:"eur",maker:.005,taker:.005,type:"spot",spot:!0},"LTC/BTC":{id:"ltcbtc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",baseId:"ltc",quoteId:"btc",maker:.005,taker:.005,type:"spot",spot:!0},"ETH/USD":{id:"ethusd",symbol:"ETH/USD",base:"ETH",quote:"USD",baseId:"eth",quoteId:"usd",maker:.005,taker:.005,type:"spot",spot:!0},"ETH/EUR":{id:"etheur",symbol:"ETH/EUR",base:"ETH",quote:"EUR",baseId:"eth",quoteId:"eur",maker:.005,taker:.005,type:"spot",spot:!0},"ETH/BTC":{id:"ethbtc",symbol:"ETH/BTC",base:"ETH",quote:"BTC",baseId:"eth",quoteId:"btc",maker:.005,taker:.005,type:"spot",spot:!0}}})}async fetchOrderBook(e,t=undefined,i={}){if("BTC/USD"!==e)throw new r.ExchangeError(this.id+" "+this.version+" fetchOrderBook doesn't support "+e+", use it for BTC/USD only");await this.loadMarkets();const s=await this.publicGetOrderBook(i),a=this.safeTimestamp(s,"timestamp");return this.parseOrderBook(s,e,a)}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"vwap"),n=this.safeString(e,"volume"),o=a.O.stringMul(n,r),d=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:this.safeString(e,"open"),close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){if("BTC/USD"!==e)throw new r.ExchangeError(this.id+" "+this.version+" fetchTicker doesn't support "+e+", use it for BTC/USD only");await this.loadMarkets();const i=this.market(e),s=await this.publicGetTicker(t);return this.parseTicker(s,i)}parseTrade(e,t=undefined){const i=this.safeTimestamp2(e,"date","datetime"),s=0===e.type?"buy":"sell",r=this.safeString(e,"order_id"),a=this.safeString(e,"tid"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),d=this.safeString(e,"currency_pair");return t=this.safeMarket(d,t),this.safeTrade({id:a,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:r,type:void 0,side:s,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){if("BTC/USD"!==e)throw new r.BadSymbol(this.id+" "+this.version+" fetchTrades doesn't support "+e+", use it for BTC/USD only");await this.loadMarkets();const a=this.market(e),n=await this.publicGetTransactions(this.extend({time:"minute"},s));return this.parseTrades(n,a,t,i)}parseBalance(e){const t={info:e},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){const r=i[s],a=this.currency(r).id,n=this.account();n.free=this.safeString(e,a+"_available"),n.used=this.safeString(e,a+"_reserved"),n.total=this.safeString(e,a+"_balance"),t[r]=n}return this.safeBalance(t)}async fetchBalance(e={}){const t=await this.privatePostBalance(e);return this.parseBalance(t)}async createOrder(e,t,i,s,a=undefined,n={}){if("limit"!==t)throw new r.ExchangeError(this.id+" "+this.version+" accepts limit orders only");if("BTC/USD"!==e)throw new r.ExchangeError(this.id+" v1 supports BTC/USD orders only");await this.loadMarkets();const o="privatePost"+this.capitalize(i),d={amount:s,price:a},c=await this[o](this.extend(d,n)),h=this.safeString(c,"id");return this.safeOrder({info:c,id:h})}async cancelOrder(e,t=undefined,i={}){return await this.privatePostCancelOrder({id:e})}parseOrderStatus(e){return this.safeString({"In Queue":"open",Open:"open",Finished:"closed",Canceled:"canceled"},e,e)}async fetchOrderStatus(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privatePostOrderStatus(this.extend(s,i));return this.parseOrderStatus(r)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privatePostUserTransactions(s);return this.parseTrades(a,r,t,i)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+this.implodeParams(e,s),d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret),o.J);d=this.extend({key:this.apiKey,signature:i.toUpperCase(),nonce:e},d),a=this.urlencode(d),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"error"===this.safeString(o,"status"))throw new r.ExchangeError(this.id+" "+this.json(o))}}},8963:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(5414),r=i(6689),a=i(9292),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bittrex",name:"Bittrex",countries:["US"],version:"v3",rateLimit:1500,certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:void 0,fetchTransactions:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"1m":"MINUTE_1","5m":"MINUTE_5","1h":"HOUR_1","1d":"DAY_1"},hostname:"bittrex.com",urls:{logo:"https://user-images.githubusercontent.com/51840849/87153921-edf53180-c2c0-11ea-96b9-f2a9a95a455b.jpg",api:{public:"https://api.bittrex.com",private:"https://api.bittrex.com"},www:"https://bittrex.com",doc:["https://bittrex.github.io/api/v3"],fees:["https://bittrex.zendesk.com/hc/en-us/articles/115003684371-BITTREX-SERVICE-FEES-AND-WITHDRAWAL-LIMITATIONS","https://bittrex.zendesk.com/hc/en-us/articles/115000199651-What-fees-does-Bittrex-charge-"],referral:"https://bittrex.com/Account/Register?referralCode=1ZE-G0G-M3B"},api:{public:{get:["ping","currencies","currencies/{symbol}","markets","markets/tickers","markets/summaries","markets/{marketSymbol}","markets/{marketSymbol}/summary","markets/{marketSymbol}/orderbook","markets/{marketSymbol}/trades","markets/{marketSymbol}/ticker","markets/{marketSymbol}/candles/{candleInterval}/recent","markets/{marketSymbol}/candles/{candleInterval}/historical/{year}/{month}/{day}","markets/{marketSymbol}/candles/{candleInterval}/historical/{year}/{month}","markets/{marketSymbol}/candles/{candleInterval}/historical/{year}"]},private:{get:["account","account/fees/fiat","account/fees/fiat/{currencySymbol}","account/fees/trading","account/fees/trading/{marketSymbol}","account/volume","account/permissions/markets","account/permissions/markets/{marketSymbol}","account/permissions/currencies","account/permissions/currencies/{currencySymbol}","addresses","addresses/{currencySymbol}","balances","balances/{currencySymbol}","deposits/open","deposits/closed","deposits/ByTxId/{txId}","deposits/{depositId}","executions","executions/last-id","executions/{executionId}","orders/closed","orders/open","orders/{orderId}","orders/{orderId}/executions","ping","subaccounts/{subaccountId}","subaccounts","subaccounts/withdrawals/open","subaccounts/withdrawals/closed","subaccounts/deposits/open","subaccounts/deposits/closed","withdrawals/open","withdrawals/closed","withdrawals/ByTxId/{txId}","withdrawals/{withdrawalId}","withdrawals/allowed-addresses","conditional-orders/{conditionalOrderId}","conditional-orders/closed","conditional-orders/open","transfers/sent","transfers/received","transfers/{transferId}","funds-transfer-methods/{fundsTransferMethodId}"],post:["addresses","orders","subaccounts","withdrawals","conditional-orders","transfers","batch"],delete:["orders/open","orders/{orderId}","withdrawals/{withdrawalId}","conditional-orders/{conditionalOrderId}"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0075"),taker:this.parseNumber("0.0075")},funding:{tierBased:!1,percentage:!1}},precisionMode:a.sh,exceptions:{exact:{BAD_REQUEST:r.BadRequest,STARTDATE_OUT_OF_RANGE:r.BadRequest,APISIGN_NOT_PROVIDED:r.AuthenticationError,APIKEY_INVALID:r.AuthenticationError,INVALID_SIGNATURE:r.AuthenticationError,INVALID_CURRENCY:r.ExchangeError,INVALID_PERMISSION:r.AuthenticationError,INSUFFICIENT_FUNDS:r.InsufficientFunds,INVALID_CEILING_MARKET_BUY:r.InvalidOrder,INVALID_FIAT_ACCOUNT:r.InvalidOrder,INVALID_ORDER_TYPE:r.InvalidOrder,QUANTITY_NOT_PROVIDED:r.InvalidOrder,MIN_TRADE_REQUIREMENT_NOT_MET:r.InvalidOrder,NOT_FOUND:r.OrderNotFound,ORDER_NOT_OPEN:r.OrderNotFound,INVALID_ORDER:r.InvalidOrder,UUID_INVALID:r.OrderNotFound,RATE_NOT_PROVIDED:r.InvalidOrder,INVALID_MARKET:r.BadSymbol,WHITELIST_VIOLATION_IP:r.PermissionDenied,DUST_TRADE_DISALLOWED_MIN_VALUE:r.InvalidOrder,RESTRICTED_MARKET:r.BadSymbol,"We are down for scheduled maintenance, but we’ll be back up shortly.":r.OnMaintenance},broad:{throttled:r.DDoSProtection,problem:r.ExchangeNotAvailable}},options:{fetchTicker:{method:"publicGetMarketsMarketSymbolTicker"},fetchTickers:{method:"publicGetMarketsTickers"},fetchDeposits:{status:"ok"},fetchWithdrawals:{status:"ok"},parseOrderStatus:!1,hasAlreadyAuthenticatedSuccessfully:!1,subaccountId:void 0,fetchClosedOrdersFilterBySince:!0},commonCurrencies:{BIFI:"Bifrost Finance",BTR:"BTRIPS",GMT:"GMT Token",MEME:"Memetic",MER:"Mercury",PROS:"Pros.Finance",REPV2:"REP",TON:"Tokamak Network"}})}feeToPrecision(e,t){return this.decimalToPrecision(t,a.tk,this.markets[e].precision.price,this.precisionMode)}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"baseCurrencySymbol"),a=this.safeString(s,"quoteCurrencySymbol"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a),d=this.safeString(s,"status");i.push({id:this.safeString(s,"symbol"),symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ONLINE"===d,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber(this.parsePrecision(this.safeString(s,"precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"minTradeSize"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:s})}return i}parseBalance(e){const t={info:e},i=this.indexBy(e,"currencySymbol"),s=Object.keys(i);for(let e=0;e<s.length;e++){const r=s[e],a=this.safeCurrencyCode(r),n=this.account(),o=i[r];n.free=this.safeString(o,"available"),n.total=this.safeString(o,"total"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),a={marketSymbol:s.id};if(void 0!==t){if(1!==t&&25!==t&&500!==t)throw new r.BadRequest(this.id+" fetchOrderBook() limit argument must be undefined, 1, 25 or 500, default is 25");a.depth=t}const n=await this.publicGetMarketsMarketSymbolOrderbook(this.extend(a,i)),o=this.safeInteger(this.last_response_headers,"Sequence"),d=this.parseOrderBook(n,s.symbol,void 0,"bid","ask","rate","quantity");return d.nonce=o,d}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"symbol"),a=this.safeCurrencyCode(r),n=this.parseNumber("1e-8"),o=this.safeNumber(s,"txFee"),d=this.safeString(s,"status");i[a]={id:r,code:a,info:s,type:this.safeString(s,"coinType"),name:this.safeString(s,"name"),active:"ONLINE"===d,deposit:void 0,withdraw:void 0,fee:o,precision:n,limits:{amount:{min:n,max:void 0},withdraw:{min:o,max:void 0}}}}return i}parseTicker(e,t=undefined){const i=this.parse8601(this.safeString(e,"updatedAt")),s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t,"-")).symbol,a=this.safeString(e,"percentChange"),n=this.safeString(e,"lastTradeRate");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bidRate"),bidVolume:void 0,ask:this.safeString(e,"askRate"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:a,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.safeValue(this.options,"fetchTickers",{}),s=this.safeString(i,"method","publicGetMarketsTickers"),r=this.safeString(t,"method",s);t=this.omit(t,"method");const a=await this[r](t),n=[];for(let e=0;e<a.length;e++){const t=this.parseTicker(a[e]);n.push(t)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={marketSymbol:i.id},r=this.safeValue(this.options,"fetchTicker",{}),a=this.safeString(r,"method","publicGetMarketsMarketSymbolTicker"),n=this.safeString(t,"method",a);t=this.omit(t,"method");const o=await this[n](this.extend(s,t));return this.parseTicker(o,i)}async fetchBidsAsks(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetMarketsTickers(t);return this.parseTickers(i,e)}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString(e,"executedAt")),s=this.safeString(e,"id"),r=this.safeString(e,"orderId"),a=this.safeString(e,"marketSymbol");t=this.safeMarket(a,t,"-");const n=this.safeString(e,"rate"),o=this.safeString(e,"quantity");let d,c=this.safeStringLower2(e,"takerSide","direction");const h=this.safeValue(e,"isTaker");let u;void 0!==h&&(d=h?"taker":"maker",h||("buy"===c?c="sell":"sell"===c&&(c="buy")));const l=this.safeString(e,"commission");return void 0!==l&&(u={cost:l,currency:t.quote}),this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,id:s,order:r,takerOrMaker:d,type:void 0,side:c,price:n,amount:o,cost:void 0,fee:u},t)}async fetchTime(e={}){const t=await this.publicGetPing(e);return this.safeInteger(t,"serverTime")}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={marketSymbol:r.id},n=await this.publicGetMarketsMarketSymbolTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={marketSymbol:i.id},r=await this.privateGetAccountFeesTradingMarketSymbol(this.extend(s,t));return this.parseTradingFee(r,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccountFeesTrading(e);return this.parseTradingFees(t)}parseTradingFee(e,t=undefined){const i=this.safeString(e,"marketSymbol"),s=this.safeNumber(e,"makerRate"),r=this.safeNumber(e,"takerRate");return{info:e,symbol:this.safeSymbol(i,t),maker:s,taker:r}}parseTradingFees(e){const t={info:e};for(let i=0;i<e.length;i++){const s=this.parseTradingFee(e[i]);t[s.symbol]=s}return t}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,"startsAt")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=a.baseId+"-"+a.quoteId,o={candleInterval:this.safeString(this.timeframes,t,t),marketSymbol:n};let d="publicGetMarketsMarketSymbolCandlesCandleIntervalRecent";if(void 0!==i){const e=this.milliseconds(),s=Math.abs(e-i),r=this.yyyymmdd(i).split("-"),a=this.safeInteger(r,0),n=this.safeInteger(r,1),c=this.safeInteger(r,2);"1d"===t?s>316224e5&&(d="publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYear",o.year=a):"1h"===t?s>26784e5&&(d="publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonth",o.year=a,o.month=n):s>864e5&&(d="publicGetMarketsMarketSymbolCandlesCandleIntervalHistoricalYearMonthDay",o.year=a,o.month=n,o.day=c)}const c=await this[d](this.extend(o,r));return this.parseOHLCVs(c,a,t,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;const n=this.safeValue(s,"stop");void 0!==e&&(a=this.market(e),r.marketSymbol=a.id);let o="privateGetOrdersOpen";n&&(o="privateGetConditionalOrdersOpen");const d=this.omit(s,"stop"),c=await this[o](this.extend(r,d));return this.parseOrders(c,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={orderId:e},n=await this.privateGetOrdersOrderIdExecutions(this.extend(a,r));let o;return void 0!==t&&(o=this.market(t)),this.parseTrades(n,o,i,s)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e);let d;void 0!==t&&(d=t.toUpperCase());const c=o.baseId+"-"+o.quoteId,h=this.safeValue(n,"stop"),u=this.safeNumber2(n,"triggerPrice","stopPrice"),l={marketSymbol:c};let p="privatePostOrders";if(h||u){p="privatePostConditionalOrders";const t=this.safeString(n,"operand");if(void 0===t)throw new r.ArgumentsRequired(this.id+" createOrder() requires an operand parameter");const o=this.safeNumber(n,"trailingStopPercent"),h=this.safeValue(n,"orderToCreate"),f=this.safeValue(n,"orderToCancel");if(void 0===u&&(l.trailingStopPercent=this.priceToPrecision(e,o)),h){const t="CEILING_LIMIT"===d,r="CEILING_MARKET"===d;let o,h,u;if(t||r){let i;t?(h=this.priceToPrecision(e,a),i=this.safeNumber2(n,"ceiling","cost",s)):r&&(i=this.safeNumber2(n,"ceiling","cost"),void 0===i&&(i=void 0===a?s:s*a)),o=this.costToPrecision(e,i),u="IMMEDIATE_OR_CANCEL"}else"LIMIT"===d?(h=this.priceToPrecision(e,a),u="GOOD_TIL_CANCELLED"):u="IMMEDIATE_OR_CANCEL";l.orderToCreate={marketSymbol:c,direction:i.toUpperCase(),type:d,quantity:this.amountToPrecision(e,s),ceiling:o,limit:h,timeInForce:u,clientOrderId:this.safeString(n,"clientOrderId"),useAwards:this.safeValue(n,"useAwards")}}f&&(l.orderToCancel=f),l.triggerPrice=this.priceToPrecision(e,u),l.operand=t}else{void 0!==i&&(l.direction=i.toUpperCase()),l.type=d;const t="CEILING_LIMIT"===d,r="CEILING_MARKET"===d;if(t||r){let i;t?(l.limit=this.priceToPrecision(e,a),i=this.safeNumber2(n,"ceiling","cost",s)):r&&(i=this.safeNumber2(n,"ceiling","cost"),void 0===i&&(i=void 0===a?s:s*a)),l.ceiling=this.costToPrecision(e,i),l.timeInForce="IMMEDIATE_OR_CANCEL"}else l.quantity=this.amountToPrecision(e,s),"LIMIT"===d?(l.limit=this.priceToPrecision(e,a),l.timeInForce="GOOD_TIL_CANCELLED"):l.timeInForce="IMMEDIATE_OR_CANCEL"}const f=this.omit(n,["stop","stopPrice","ceiling","cost","operand","trailingStopPercent","orderToCreate","orderToCancel"]),m=await this[p](this.extend(l,f));return this.parseOrder(m,o)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue(i,"stop");let r,a,n={};void 0!==t&&(a=this.market(t)),s?(r="privateDeleteConditionalOrdersConditionalOrderId",n={conditionalOrderId:e}):(r="privateDeleteOrdersOrderId",n={orderId:e});const o=this.omit(i,"stop"),d=await this[r](this.extend(n,o));return this.extend(this.parseOrder(d,a),{id:e,info:d,status:"canceled"})}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s;void 0!==e&&(s=this.market(e),i.marketSymbol=s.id);const r=await this.privateDeleteOrdersOpen(this.extend(i,t)),a=[];for(let e=0;e<r.length;e++){const t=this.safeValue(r[e],"result",{});a.push(t)}return this.parseOrders(a,s)}async fetchDeposit(e,t=undefined,i={}){await this.loadMarkets();const s={txId:e};let r;void 0!==t&&(r=this.currency(t));const a=await this.privateGetDepositsByTxIdTxId(this.extend(s,i)),n=this.parseTransactions(a,r,void 0,void 0);return this.safeValue(n,0)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n;if(void 0!==e&&(a=this.currency(e),r.currencySymbol=a.id),void 0!==t){const e=1e3*parseInt((t/1e3).toString());r.startDate=this.iso8601(e)}void 0!==i&&(r.pageSize=i);const o=this.safeValue(this.options,"fetchDeposits",{}),d=this.safeString(o,"status","ok");n="pending"===this.safeString(s,"status",d)?"privateGetDepositsOpen":"privateGetDepositsClosed",s=this.omit(s,"status");const c=await this[n](this.extend(r,s));return this.parseTransactions(c,a,void 0,i)}async fetchPendingDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.loadMarkets(),this.fetchDeposits(e,t,i,this.extend(s,{status:"pending"}))}async fetchWithdrawal(e,t=undefined,i={}){await this.loadMarkets();const s={txId:e};let r;void 0!==t&&(r=this.currency(t));const a=await this.privateGetWithdrawalsByTxIdTxId(this.extend(s,i)),n=this.parseTransactions(a,r,void 0,void 0);return this.safeValue(n,0)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n;if(void 0!==e&&(a=this.currency(e),r.currencySymbol=a.id),void 0!==t){const e=1e3*parseInt((t/1e3).toString());r.startDate=this.iso8601(e)}void 0!==i&&(r.pageSize=i);const o=this.safeValue(this.options,"fetchWithdrawals",{}),d=this.safeString(o,"status","ok");n="pending"===this.safeString(s,"status",d)?"privateGetWithdrawalsOpen":"privateGetWithdrawalsClosed",s=this.omit(s,"status");const c=await this[n](this.extend(r,s));return this.parseTransactions(c,a,t,i)}async fetchPendingWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.loadMarkets(),this.fetchWithdrawals(e,t,i,this.extend(s,{status:"pending"}))}parseTransaction(e,t=undefined){const i=this.safeString2(e,"id","clientWithdrawalId"),s=this.safeNumber(e,"quantity"),r=this.safeString(e,"cryptoAddress");let a,n;"BLOCKCHAIN"===this.safeString(e,"source")?n=r:a=r;const o=this.safeString(e,"txId"),d=this.parse8601(this.safeString(e,"updatedAt")),c=this.parse8601(this.safeString(e,"createdAt")),h=c||d,u=void 0===c?"deposit":"withdrawal",l=this.safeString(e,"currencySymbol"),p=this.safeCurrencyCode(l,t);let f="pending";if("deposit"===u)f="ok";else{const t=this.safeString(e,"status");"ERROR_INVALID_ADDRESS"===t?f="failed":"CANCELLED"===t?f="canceled":"PENDING"===t?f="pending":("COMPLETED"===t||"AUTHORIZED"===t&&void 0!==o)&&(f="ok")}let m=this.safeNumber(e,"txCost");return void 0===m&&"deposit"===u&&(m=0),{info:e,id:i,currency:p,amount:s,network:void 0,address:r,addressTo:a,addressFrom:n,tag:void 0,tagTo:void 0,tagFrom:void 0,status:f,type:u,updated:d,txid:o,timestamp:h,datetime:this.iso8601(h),fee:{currency:p,cost:m}}}parseTimeInForce(e){return this.safeString({GOOD_TIL_CANCELLED:"GTC",IMMEDIATE_OR_CANCEL:"IOC",FILL_OR_KILL:"FOK",POST_ONLY_GOOD_TIL_CANCELLED:"PO"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"marketSymbol"),s=(t=this.safeMarket(i,t,"-")).symbol,r=t.quote,a=this.safeString(e,"createdAt"),n=this.safeString(e,"updatedAt"),o=this.safeString(e,"closedAt"),d=this.safeString(e,"clientOrderId");let c;void 0!==o?c=this.parse8601(o):n&&(c=this.parse8601(n));const h=this.parse8601(a);let u=this.safeStringLower(e,"direction");if(void 0===u){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),u=this.safeStringLower(t,"direction")}let l=this.safeStringLower(e,"type");if(void 0===l){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),l=this.safeStringLower(t,"type")}let p=this.safeString(e,"quantity");if(void 0===p){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),p=this.safeString(t,"quantity")}let f=this.safeString(e,"limit");if(void 0===f){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),f=this.safeString(t,"limit")}let m=this.parseTimeInForce(this.safeString(e,"timeInForce"));if(void 0===m){let t=this.safeValue(e,"orderToCreate");void 0===t&&(t=this.safeValue(e,"orderToCancel")),m=this.parseTimeInForce(this.safeString(t,"timeInForce"))}const v=this.safeString(e,"fillQuantity"),g=this.safeNumber(e,"commission"),y=this.safeString(e,"proceeds"),b=this.safeStringLower(e,"status"),w="PO"===m;return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:d,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:c,symbol:s,type:l,timeInForce:m,postOnly:w,side:u,price:f,stopPrice:this.safeString(e,"triggerPrice"),triggerPrice:this.safeString(e,"triggerPrice"),cost:y,average:void 0,amount:p,filled:v,remaining:void 0,status:b,fee:{cost:g,currency:r},info:e,trades:void 0},t)}parseOrders(e,t=undefined,i=undefined,s=undefined,r={}){return this.options.fetchClosedOrdersFilterBySince?super.parseOrders(e,t,i,s,r):super.parseOrders(e,t,void 0,s,r)}parseOrderStatus(e){return this.safeString({CLOSED:"closed",OPEN:"open",CANCELLED:"canceled",CANCELED:"canceled"},e,e)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue(i,"stop");let a,n,o;void 0!==t&&(a=this.market(t));try{const t={};s?(o="privateGetConditionalOrdersConditionalOrderId",t.conditionalOrderId=e):(o="privateGetOrdersOrderId",t.orderId=e);const r=this.omit(i,"stop");n=await this[o](this.extend(t,r))}catch(e){if(this.last_json_response&&"UUID_INVALID"===this.safeString(this.last_json_response,"message"))throw new r.OrderNotFound(this.id+" fetchOrder() error: "+this.last_http_response);throw e}return this.parseOrder(n,a)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==i&&(r.pageSize=i),void 0!==t&&(r.startDate=this.ymdhms(t,"T")+"Z"),void 0!==e&&(a=this.market(e),e=a.symbol,r.marketSymbol=a.id);const n=await this.privateGetExecutions(this.extend(r,s)),o=this.parseTrades(n,a);return this.filterBySymbolSinceLimit(o,e,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.safeValue(s,"stop"),a={};let n;void 0!==i&&(a.pageSize=i),void 0!==t&&(a.startDate=this.ymdhms(t,"T")+"Z"),void 0!==e&&(n=this.market(e),a.marketSymbol=n.base+"-"+n.quote);let o="privateGetOrdersClosed";r&&(o="privateGetConditionalOrdersClosed");const d=this.omit(s,"stop"),c=await this[o](this.extend(a,d));return this.parseOrders(c,n,t,i)}async createDepositAddress(e,t={}){await this.loadMarkets();const i={currencySymbol:this.currency(e).id},s=await this.privatePostAddresses(this.extend(i,t)),a=this.safeString(s,"cryptoAddress"),n=this.safeString(s,"status");if(!a||"REQUESTED"===n)throw new r.AddressPending(this.id+" the address for "+e+" is being generated (pending, not ready yet, retry again later)");return this.checkAddress(a),{currency:e,address:a,tag:this.safeString(s,"cryptoAddressTag"),network:void 0,info:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={currencySymbol:this.currency(e).id},s=await this.privateGetAddressesCurrencySymbol(this.extend(i,t)),a=this.safeString(s,"cryptoAddress"),n=this.safeString(s,"status");if(!a||"REQUESTED"===n)throw new r.AddressPending(this.id+" the address for "+e+" is being generated (pending, not ready yet, retry again later)");return this.checkAddress(a),{currency:e,address:a,tag:this.safeString(s,"cryptoAddressTag"),network:void 0,info:s}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={currencySymbol:a.id,quantity:t,cryptoAddress:i};void 0!==s&&(n.cryptoAddressTag=s);const o=await this.privatePostWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}sign(e,t="v3",i="GET",s={},r=undefined,a=undefined){let o=this.implodeParams(this.urls.api[t],{hostname:this.hostname})+"/";if("private"===t){o+=this.version+"/",this.checkRequiredCredentials(),o+=this.implodeParams(e,s),s=this.omit(s,this.extractParams(e));let t="";"POST"===i?t=a=this.json(s):Object.keys(s).length&&(o+="?"+this.rawencode(s));const d=this.hash(this.encode(t),n.o,"hex"),c=this.milliseconds().toString();let h=c+o+i+d;const u=this.safeValue(this.options,"subaccountId");void 0!==u&&(h+=u);const l=this.hmac(this.encode(h),this.encode(this.secret),n.o);r={"Api-Key":this.apiKey,"Api-Timestamp":c,"Api-Content-Hash":d,"Api-Signature":l},void 0!==u&&(r["Api-Subaccount-Id"]=u),"POST"===i&&(r["Content-Type"]="application/json")}else"public"===t&&(o+=this.version+"/"),o+=this.implodeParams(e,s),s=this.omit(s,this.extractParams(e)),Object.keys(s).length&&(o+="?"+this.urlencode(s));return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"{"===n[0]){const e=this.id+" "+n;let t=this.safeValue(o,"success");if(void 0===t){const t=this.safeString(o,"code");if("NOT_FOUND"===t&&i.indexOf("addresses")>=0)throw new r.InvalidAddress(e);return void(void 0!==t&&(this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e)))}if("string"==typeof t&&(t="true"===t),!t){const t=this.safeString(o,"message");if("APIKEY_INVALID"===t)throw this.options.hasAlreadyAuthenticatedSuccessfully?new r.DDoSProtection(e):new r.AuthenticationError(e);if("INVALID_ORDER"===t){const e="cancel";if(i.indexOf(e)>=0){const e=i.split("?");if(e.length>1){const t=e[1].split("&"),i=t.length;let s;for(let e=0;e<i;e++){const i=t[e].split("=");if("uuid"===i[0]){s=i[1];break}}throw void 0!==s?new r.OrderNotFound(this.id+" cancelOrder "+s+" "+this.json(o)):new r.OrderNotFound(this.id+" cancelOrder "+this.json(o))}}}throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),void 0!==t&&this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new r.ExchangeError(e)}}}}},9943:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(15),r=i(6689),a=i(9292),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitvavo",name:"Bitvavo",countries:["NL"],rateLimit:60,version:"v2",certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/169202626-bd130fc5-fcf9-41bb-8d97-6093225c73cd.jpg",api:{public:"https://api.bitvavo.com",private:"https://api.bitvavo.com"},www:"https://bitvavo.com/",doc:"https://docs.bitvavo.com/",fees:"https://bitvavo.com/en/fees",referral:"https://bitvavo.com/?a=24F34952F7"},api:{public:{get:{time:1,markets:1,assets:1,"{market}/book":1,"{market}/trades":5,"{market}/candles":1,"ticker/price":1,"ticker/book":1,"ticker/24h":{cost:1,noMarket:25}}},private:{get:{account:1,order:1,orders:5,ordersOpen:{cost:1,noMarket:25},trades:5,balance:5,deposit:1,depositHistory:5,withdrawalHistory:5},post:{order:1,withdrawal:1},put:{order:1},delete:{order:1,orders:1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0020")],[this.parseNumber("250000"),this.parseNumber("0.0016")],[this.parseNumber("500000"),this.parseNumber("0.0012")],[this.parseNumber("1000000"),this.parseNumber("0.0010")],[this.parseNumber("2500000"),this.parseNumber("0.0008")],[this.parseNumber("5000000"),this.parseNumber("0.0006")],[this.parseNumber("10000000"),this.parseNumber("0.0005")],[this.parseNumber("25000000"),this.parseNumber("0.0004")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.0010")],[this.parseNumber("250000"),this.parseNumber("0.0008")],[this.parseNumber("500000"),this.parseNumber("0.0006")],[this.parseNumber("1000000"),this.parseNumber("0.0005")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0004")],[this.parseNumber("10000000"),this.parseNumber("0.0003")],[this.parseNumber("25000000"),this.parseNumber("0.0003")]]}}},requiredCredentials:{apiKey:!0,secret:!0},exceptions:{exact:{101:r.ExchangeError,102:r.BadRequest,103:r.RateLimitExceeded,104:r.RateLimitExceeded,105:r.PermissionDenied,107:r.ExchangeNotAvailable,108:r.ExchangeNotAvailable,109:r.ExchangeNotAvailable,110:r.BadRequest,200:r.BadRequest,201:r.BadRequest,202:r.BadRequest,203:r.BadSymbol,204:r.BadRequest,205:r.BadRequest,206:r.BadRequest,210:r.InvalidOrder,211:r.InvalidOrder,212:r.InvalidOrder,213:r.InvalidOrder,214:r.InvalidOrder,215:r.InvalidOrder,216:r.InsufficientFunds,217:r.InvalidOrder,230:r.ExchangeError,231:r.ExchangeError,232:r.BadRequest,233:r.InvalidOrder,234:r.InvalidOrder,235:r.ExchangeError,236:r.BadRequest,240:r.OrderNotFound,300:r.AuthenticationError,301:r.AuthenticationError,302:r.AuthenticationError,303:r.AuthenticationError,304:r.AuthenticationError,305:r.AuthenticationError,306:r.AuthenticationError,307:r.PermissionDenied,308:r.AuthenticationError,309:r.AuthenticationError,310:r.PermissionDenied,311:r.PermissionDenied,312:r.PermissionDenied,315:r.BadRequest,317:r.AccountSuspended,400:r.ExchangeError,401:r.ExchangeError,402:r.PermissionDenied,403:r.PermissionDenied,404:r.OnMaintenance,405:r.ExchangeError,406:r.BadRequest,407:r.ExchangeError,408:r.InsufficientFunds,409:r.InvalidAddress,410:r.ExchangeError,411:r.BadRequest,412:r.InvalidAddress,413:r.InvalidAddress,414:r.ExchangeError},broad:{"start parameter is invalid":r.BadRequest,"symbol parameter is invalid":r.BadSymbol,"amount parameter is invalid":r.InvalidOrder,"orderId parameter is invalid":r.InvalidOrder}},options:{"BITVAVO-ACCESS-WINDOW":1e4,fetchCurrencies:{expires:1e3}},precisionMode:a.tV,commonCurrencies:{MIOTA:"IOTA"}})}currencyToPrecision(e,t,i=undefined){return this.decimalToPrecision(t,0,this.currencies[e].precision,a.nr)}amountToPrecision(e,t){return this.decimalToPrecision(t,a.tk,this.markets[e].precision.amount,a.nr)}priceToPrecision(e,t){return t=this.decimalToPrecision(t,a.oU,this.markets[e].precision.price,this.precisionMode),this.decimalToPrecision(t,a.tk,8,a.nr)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"time")}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),i=await this.fetchCurrenciesFromCache(e),s=this.indexBy(i,"symbol"),r=[];for(let e=0;e<t.length;e++){const i=t[e],a=this.safeString(i,"market"),n=this.safeString(i,"base"),o=this.safeString(i,"quote"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=this.safeString(i,"status"),u=this.safeValue(s,n);r.push({id:a,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"trading"===h,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeInteger(u,"decimals",8),price:this.safeInteger(i,"pricePrecision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(i,"minOrderInBaseAsset"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(i,"minOrderInQuoteAsset"),max:void 0}},info:i})}return r}async fetchCurrenciesFromCache(e={}){const t=this.safeValue(this.options,"fetchCurrencies",{}),i=this.safeInteger(t,"timestamp"),s=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===i||r-i>s){const i=await this.publicGetAssets(e);this.options.fetchCurrencies=this.extend(t,{response:i,timestamp:r})}return this.safeValue(this.options.fetchCurrencies,"response")}async fetchCurrencies(e={}){const t=await this.fetchCurrenciesFromCache(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"symbol"),a=this.safeCurrencyCode(r),n="OK"===this.safeValue(s,"depositStatus"),o="OK"===this.safeValue(s,"withdrawalStatus"),d=n&&o,c=this.safeString(s,"name");i[a]={id:r,info:s,code:a,name:c,active:d,deposit:n,withdraw:o,fee:this.safeNumber(s,"withdrawalFee"),precision:this.safeInteger(s,"decimals",8),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(s,"withdrawalMinAmount"),max:void 0}}}}return i}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={market:i.id},r=await this.publicGetTicker24h(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t=undefined){const i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"-"),r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"last"),n=this.safeString(e,"volume"),o=this.safeString(e,"volumeQuote"),d=this.safeString(e,"open");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidSize"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askSize"),vwap:void 0,open:d,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTicker24h(t);return this.parseTickers(i,e)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==i&&(a.limit=i),void 0!==t&&(a.start=t);const n=await this.publicGetMarketTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"price"),s=this.safeString(e,"amount"),r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"side"),n=this.safeString2(e,"id","fillId"),o=this.safeString(e,"market"),d=this.safeSymbol(o,t,"-"),c=this.safeValue(e,"taker");let h;void 0!==c&&(h=c?"taker":"maker");const u=this.safeString(e,"fee");let l;if(void 0!==u){const t=this.safeString(e,"feeCurrency");l={cost:u,currency:this.safeCurrencyCode(t)}}const p=this.safeString(e,"orderId");return this.safeTrade({info:e,id:n,symbol:d,timestamp:r,datetime:this.iso8601(r),order:p,type:void 0,side:a,takerOrMaker:h,price:i,amount:s,cost:void 0,fee:l},t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccount(e),i=this.safeValue(t,"fees"),s=this.safeNumber(i,"maker"),r=this.safeNumber(i,"taker"),a={};for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e];a[i]={info:t,symbol:i,maker:s,taker:r,percentage:!0,tierBased:!0}}return a}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={market:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetMarketBook(this.extend(r,i)),n=this.parseOrderBook(a,s.symbol);return n.nonce=this.safeInteger(a,"nonce"),n}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,interval:this.safeString(this.timeframes,t,t)};if(void 0!==i){const e=this.parseTimeframe(t);n.start=i,void 0===s&&(s=1440),n.end=this.sum(i,s*e*1e3)}void 0!==s&&(n.limit=s);const o=await this.publicGetMarketCandles(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"symbol"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"inOrder"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={symbol:this.currency(e).id},s=await this.privateGetDeposit(this.extend(i,t)),r=this.safeString(s,"address"),a=this.safeString(s,"paymentId");return this.checkAddress(r),{currency:e,address:r,tag:a,network:void 0,info:s}}async createOrder(e,t,i,s,r=undefined,o={}){await this.loadMarkets();const d=this.market(e),c={market:d.id,side:i,orderType:t},h="market"===t||"stopLoss"===t||"takeProfit"===t,u="limit"===t||"stopLossLimit"===t||"takeProfitLimit"===t,l=this.safeString(o,"timeInForce");let p=this.safeStringN(o,["triggerPrice","stopPrice","triggerAmount"]);const f=this.isPostOnly(h,!1,o),m=this.safeValue(o,"stopLossPrice"),v=this.safeValue(o,"takeProfitPrice");if(o=this.omit(o,["timeInForce","triggerPrice","stopPrice","stopLossPrice","takeProfitPrice"]),h){let t;if(void 0!==r){const e=this.numberToString(r),i=this.numberToString(s),a=n.O.stringMul(i,e);t=this.parseNumber(a)}else t=this.safeNumber(o,"cost");if(void 0!==t){const e=this.currency(d.quote).precision;c.amountQuote=this.decimalToPrecision(t,a.tk,e,this.precisionMode)}else c.amount=this.amountToPrecision(e,s);o=this.omit(o,["cost"])}else u&&(c.price=this.priceToPrecision(e,r),c.amount=this.amountToPrecision(e,s));const g=void 0!==v||"takeProfit"===t||"takeProfitLimit"===t;void 0!==m||void 0!==p&&!g||"stopLoss"===t||"stopLossLimit"===t?(void 0!==m&&(p=m),c.orderType=h?"stopLoss":"stopLossLimit"):g&&(void 0!==v&&(p=v),c.orderType=h?"takeProfit":"takeProfitLimit"),void 0!==p&&(c.triggerAmount=this.priceToPrecision(e,p),c.triggerType="price",c.triggerReference="lastTrade"),void 0!==l&&"PO"!==l&&(c.timeInForce=l),f&&(c.postOnly=!0);const y=await this.privatePostOrder(this.extend(c,o));return this.parseOrder(y,d)}async editOrder(e,t,i,s,a=undefined,n=undefined,o={}){await this.loadMarkets();const d=this.market(t);let c={};const h=this.safeNumber(o,"amountRemaining");if(o=this.omit(o,"amountRemaining"),void 0!==n&&(c.price=this.priceToPrecision(t,n)),void 0!==a&&(c.amount=this.amountToPrecision(t,a)),void 0!==h&&(c.amountRemaining=this.amountToPrecision(t,h)),c=this.extend(c,o),Object.keys(c).length){c.orderId=e,c.market=d.id;const t=await this.privatePutOrder(this.extend(c,o));return this.parseOrder(t,d)}throw new r.ArgumentsRequired(this.id+" editOrder() requires an amount argument, or a price argument, or non-empty params")}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={orderId:e,market:s.id},n=await this.privateDeleteOrder(this.extend(a,i));return this.parseOrder(n,s)}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s;void 0!==e&&(s=this.market(e),i.market=s.id);const r=await this.privateDeleteOrders(this.extend(i,t));return this.parseOrders(r,s)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={orderId:e,market:s.id},n=await this.privateGetOrder(this.extend(a,i));return this.parseOrder(n,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id};void 0!==t&&(n.start=t),void 0!==i&&(n.limit=i);const o=await this.privateGetOrders(this.extend(n,s));return this.parseOrders(o,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.market=a.id);const n=await this.privateGetOrdersOpen(this.extend(r,s));return this.parseOrders(n,a,t,i)}parseOrderStatus(e){return this.safeString({new:"open",canceled:"canceled",canceledAuction:"canceled",canceledSelfTradePrevention:"canceled",canceledIOC:"canceled",canceledFOK:"canceled",canceledMarketProtection:"canceled",canceledPostOnly:"canceled",filled:"closed",partiallyFilled:"open",expired:"canceled",rejected:"canceled",awaitingTrigger:"open"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"orderId"),s=this.safeInteger(e,"created"),r=this.safeString(e,"market"),a=(t=this.safeMarket(r,t,"-")).symbol,o=this.parseOrderStatus(this.safeString(e,"status")),d=this.safeString(e,"side"),c=this.safeString(e,"orderType"),h=this.safeString(e,"price"),u=this.safeString(e,"amount"),l=this.safeString(e,"amountRemaining"),p=this.safeString(e,"filledAmount");let f,m=this.safeString(e,"filledAmountQuote");if(void 0===m){const t=this.safeString(e,"amountQuote"),i=this.safeString(e,"amountQuoteRemaining");m=n.O.stringSub(t,i)}const v=this.safeNumber(e,"feePaid");if(void 0!==v){const t=this.safeString(e,"feeCurrency");f={cost:v,currency:this.safeCurrencyCode(t)}}const g=this.safeValue(e,"fills",[]),y=this.safeString(e,"timeInForce"),b=this.safeValue(e,"postOnly"),w=this.safeNumber(e,"triggerPrice");return this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:a,type:c,timeInForce:y,postOnly:b,side:d,price:h,stopPrice:w,triggerPrice:w,amount:u,cost:m,average:void 0,filled:p,remaining:l,status:o,fee:f,trades:g},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id};void 0!==t&&(n.start=t),void 0!==i&&(n.limit=i);const o=await this.privateGetTrades(this.extend(n,s));return this.parseTrades(o,a,t,i)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={symbol:a.id,amount:this.currencyToPrecision(e,t),address:i};void 0!==s&&(n.paymentId=s);const o=await this.privatePostWithdrawal(this.extend(n,r));return this.parseTransaction(o,a)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.symbol=a.id),void 0!==t&&(r.start=t),void 0!==i&&(r.limit=i);const n=await this.privateGetWithdrawalHistory(this.extend(r,s));return this.parseTransactions(n,a,t,i,{type:"withdrawal"})}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.symbol=a.id),void 0!==t&&(r.start=t),void 0!==i&&(r.limit=i);const n=await this.privateGetDepositHistory(this.extend(r,s));return this.parseTransactions(n,a,t,i,{type:"deposit"})}parseTransactionStatus(e){return this.safeString({awaiting_processing:"pending",awaiting_email_confirmation:"pending",awaiting_bitvavo_inspection:"pending",approved:"pending",sending:"pending",in_mempool:"pending",processed:"pending",completed:"ok",canceled:"canceled"},e,e)}parseTransaction(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeCurrencyCode(s,t),a=this.parseTransactionStatus(this.safeString(e,"status")),n=this.safeNumber(e,"amount"),o=this.safeString(e,"address"),d=this.safeString(e,"txId");let c;const h=this.safeNumber(e,"fee");let u;void 0!==h&&(c={cost:h,currency:r}),u="success"in e||"address"in e?"withdrawal":"deposit";const l=this.safeString(e,"paymentId");return{info:e,id:void 0,txid:d,timestamp:i,datetime:this.iso8601(i),addressFrom:void 0,address:o,addressTo:o,tagFrom:void 0,tag:l,tagTo:l,type:u,amount:n,currency:r,status:a,updated:void 0,fee:c}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.omit(s,this.extractParams(e));let d="/"+this.version+"/"+this.implodeParams(e,s);const c="GET"===i||"DELETE"===i;if(c&&Object.keys(n).length&&(d+="?"+this.urlencode(n)),"private"===t){this.checkRequiredCredentials();let e="";c||Object.keys(n).length&&(e=a=this.json(n));const t=this.milliseconds().toString(),s=t+i+d+e,h=this.hmac(this.encode(s),this.encode(this.secret),o.J),u=this.safeString(this.options,"BITVAVO-ACCESS-WINDOW","10000");r={"BITVAVO-ACCESS-KEY":this.apiKey,"BITVAVO-ACCESS-SIGNATURE":h,"BITVAVO-ACCESS-TIMESTAMP":t,"BITVAVO-ACCESS-WINDOW":u},c||(r["Content-Type"]="application/json")}return d=this.urls.api[t]+d,{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"errorCode"),u=this.safeString(o,"error");if(void 0!==h){const e=this.id+" "+n;throw this.throwBroadlyMatchedException(this.exceptions.broad,u,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r.ExchangeError(e)}}calculateRateLimiterCost(e,t,i,s,r={},a={}){return"noMarket"in r&&!("market"in s)?r.noMarket:this.safeValue(r,"cost",1)}}},2574:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(5569),r=i(6689),a=i(9292),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bkex",name:"BKEX",countries:["BVI"],rateLimit:100,version:"v2",certified:!1,has:{CORS:void 0,spot:!0,margin:void 0,swap:!0,future:void 0,option:void 0,addMargin:void 0,cancelAllOrders:void 0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:void 0,createLimitOrder:void 0,createMarketOrder:void 0,createOrder:!0,editOrder:void 0,fetchAccounts:void 0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowRate:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchBorrowRatesPerSymbol:void 0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:void 0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:void 0,fetchFundingRate:void 0,fetchFundingRateHistory:!0,fetchFundingRates:void 0,fetchIndexOHLCV:void 0,fetchL2OrderBook:void 0,fetchLedger:void 0,fetchLedgerEntry:void 0,fetchLeverageTiers:void 0,fetchMarginMode:!1,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:void 0,fetchMyTrades:void 0,fetchOHLCV:!0,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!1,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:void 0,fetchOrderTrades:void 0,fetchPosition:void 0,fetchPositionMode:!1,fetchPositions:void 0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:void 0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:void 0,fetchTransactionFee:"emulated",fetchTransactionFees:!0,fetchTransactions:void 0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:void 0,setLeverage:void 0,setMarginMode:void 0,setPositionMode:void 0,signIn:void 0,transfer:!1,withdraw:!1},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w"},urls:{logo:"https://user-images.githubusercontent.com/1294454/158043180-bb079a65-69e8-45a2-b393-f094d334e610.jpg",api:{spot:"https://api.bkex.com",swap:"https://fapi.bkex.com"},www:"https://www.bkex.com/",doc:["https://bkexapi.github.io/docs/api_en.htm"],fees:["https://www.bkex.com/help/instruction/33"]},api:{public:{spot:{get:{"/common/symbols":1,"/common/currencys":1,"/common/timestamp":1,"/q/kline":1,"/q/tickers":1,"/q/ticker/price":1,"/q/depth":1,"/q/deals":1}},swap:{get:{"/market/candle":1,"/market/deals":1,"/market/depth":1,"/market/fundingRate":1,"/market/index":1,"/market/riskLimit":1,"/market/symbols":1,"/market/ticker/price":1,"/market/tickers":1,"/server/ping":1}}},private:{spot:{get:{"/u/api/info":1,"/u/account/balance":1,"/u/wallet/address":1,"/u/wallet/depositRecord":1,"/u/wallet/withdrawRecord":1,"/u/order/openOrders":1,"/u/order/openOrder/detail":1,"/u/order/historyOrders":1},post:{"/u/account/transfer":1,"/u/wallet/withdraw":1,"/u/order/create":1,"/u/order/cancel":1,"/u/order/batchCreate":1,"/u/order/batchCancel":1}},swap:{get:{"/account/balance":1,"/account/balanceRecord":1,"/account/order":1,"/account/orderForced":1,"/account/position":1,"/entrust/finished":1,"/entrust/unFinish":1,"/order/finished":1,"/order/finishedInfo":1,"/order/unFinish":1,"/position/info":1},post:{"/account/setLeverage":1,"/entrust/add":1,"/entrust/cancel":1,"/order/batchCancel":1,"/order/batchOpen":1,"/order/cancel":1,"/order/close":1,"/order/closeAll":1,"/order/open":1,"/position/setSpSl":1,"/position/update":1}}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.0015"),taker:this.parseNumber("0.002")}},options:{timeframes:{spot:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w"},swap:{"1m":"M1","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","6h":"H6","1d":"D1"}},defaultType:"spot",networks:{TRX:"TRC-20",TRC20:"TRC-20",ETH:"ERC-20",ERC20:"ERC-20",BEP20:"BEP-20(BSC)"}},commonCurrencies:{SHINJA:"SHINJA(1M)"},precisionMode:a.sh,exceptions:{exact:{1005:r.InsufficientFunds},broad:{"Not Enough balance":r.InsufficientFunds,"Order does not exist":r.InvalidOrder,"System busy, please try again later":r.BadRequest}}})}async fetchMarkets(e={}){let t=[this.publicSpotGetCommonSymbols(e),this.publicSwapGetMarketSymbols(e)];t=await Promise.all(t);const i=t[0],s=t[1],r=this.safeValue(i,"data",[]),a=this.safeValue(s,"data",[]),n=this.arrayConcat(r,a),o=[];for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"symbol"),s=this.safeStringUpper(t,"symbol"),[r,a]=s.split("_"),d=this.safeCurrencyCode(r),c=this.safeCurrencyCode(a),h=void 0!==this.safeString(t,"minimumOrderSize")?"spot":"swap",u="swap"===h;let l,p,f=d+"/"+c;u&&(l=a,p=c,f=d+"/"+c+":"+p);const m=!!u||void 0;o.push({id:i,symbol:f,base:d,quote:c,settle:p,baseId:r,quoteId:a,settleId:l,type:h,spot:"spot"===h,margin:!1,future:!1,swap:u,option:!1,active:this.safeValue(t,"supportTrade"),contract:u,linear:m,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"volumePrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"pricePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumberN(t,["minimumOrderSize","marketMiniAmount","limitMiniAmount"]),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minimumTradeVolume"),max:void 0}},info:t})}return o}async fetchCurrencies(e={}){const t=await this.publicSpotGetCommonCurrencys(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(t,"name"),o=this.safeValue(t,"supportWithdraw"),d=this.safeValue(t,"supportDeposit"),c=this.safeValue(t,"supportTrade"),h=o&&d&&c;s[a]={id:r,code:a,name:n,deposit:d,withdraw:o,active:h,fee:this.safeNumber(t,"withdrawFee"),precision:void 0,limits:{amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(t,"minWithdrawSingle"),max:this.safeNumber(t,"maxWithdrawSingle")}},info:t}}return s}async fetchTime(e={}){const t=await this.publicSpotGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchStatus(e={}){const t=await this.publicSpotGetCommonTimestamp(e),i=this.safeInteger(t,"status"),s=this.safeInteger(t,"code");return{status:0===i&&0===s?"ok":i,updated:this.safeInteger(t,"data"),eta:void 0,url:void 0,info:t}}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=a.swap,o={symbol:a.id};let d="publicSpotGetQKline";const c=this.safeValue(this.options,"timeframes");if(n){const e=this.safeValue(c,"swap");d="publicSwapGetMarketCandle",o.period=this.safeString(e,t,t),void 0!==s&&(o.count=s)}else{const e=this.safeValue(c,"spot");o.symbol=a.id,o.period=this.safeString(e,t,t)}if(void 0!==s&&(o[n?"count":"size"]=s),void 0!==i){const e=n?"start":"from";o[e]=i,void 0===s&&(s=500);const r=s*this.parseTimeframe(t)*1e3;o[n?"end":"to"]=this.sum(o[e],r)}const h=await this[d](o),u=this.safeValue(h,"data",[]);return this.parseOHLCVs(u,a,t,i,s)}parseOHLCV(e,t=undefined){const i=t.swap?"amount":"volume";return[this.safeInteger(e,"ts"),this.safeFloat(e,"open"),this.safeFloat(e,"high"),this.safeFloat(e,"low"),this.safeFloat(e,"close"),this.safeFloat(e,i)]}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},[r,a]=this.handleMarketTypeAndParams("fetchTicker",i,t),n="swap"===r?"publicSwapGetMarketTickers":"publicSpotGetQTickers",o=await this[n](this.extend(s,a)),d=this.safeValue(o,"data",[]),c=this.safeValue(d,0);return this.parseTicker(c,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==e&&!Array.isArray(e))throw new r.BadRequest(this.id+" fetchTickers() symbols argument should be an array");let s;if(void 0!==e){const t=this.marketIds(e),a=this.safeString(e,0);if(s=this.market(a),s.swap){if(Array.isArray(e)&&e.length>1)throw new r.BadRequest(this.id+" fetchTickers() symbols argument cannot contain more than 1 symbol for swap markets");i.symbol=s.id}else i.symbol=t.join(",")}const[a,n]=this.handleMarketTypeAndParams("fetchTickers",s,t),o="swap"===a?"publicSwapGetMarketTickers":"publicSpotGetQTickers",d=await this[o](this.extend(i,n)),c=this.safeValue(d,"data",[]);return this.parseTickers(c,e,n)}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const s=this.safeSymbol(i,t),r=this.safeInteger2(e,"ts","lastTime"),a=t.swap?"amount":"volume",n=t.swap?"volume":"quoteVolume",o=t.swap?"lastPrice":"close";return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:this.safeString(e,"close"),last:this.safeString(e,o),previousClose:void 0,change:void 0,percentage:this.safeString(e,"change"),average:void 0,baseVolume:this.safeString(e,a),quoteVolume:this.safeString(e,n),info:e},t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r=s.swap,a={symbol:s.id};let n="publicSpotGetQDepth";r?n="publicSwapGetMarketDepth":void 0!==t&&(a.depth=Math.min(t,50));const o=await this[n](this.extend(a,i)),d=this.safeValue(o,"data"),c=this.safeInteger(d,"timestamp");return this.parseOrderBook(d,s.symbol,c,"bid","ask")}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a=r.swap,n={symbol:r.id};let o="publicSpotGetQDeals";a?o="publicSwapGetMarketDeals":void 0!==i&&(n.size=Math.min(i,50));const d=await this[o](this.extend(n,s)),c=this.safeValue(d,"data");return this.parseTrades(c,r,t,i)}parseTrade(e,t=undefined){const i=this.safeInteger2(e,"ts","time"),s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const r=this.parseTradeSide(this.safeString2(e,"direction","side")),a=this.safeNumber2(e,"volume","amount"),n=this.safeNumber(e,"price"),o=void 0;let d=this.safeString(e,"tid");return void 0===d&&(d=this.syntheticTradeId(t,i,r,a,n,o)),this.safeTrade({id:d,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:void 0,type:o,side:r,takerOrMaker:void 0,price:n,amount:a,cost:void 0,fee:void 0,info:e},t)}parseTradeSide(e){return this.safeString({B:"buy",S:"sell",buy:"buy",sell:"sell"},e,e)}syntheticTradeId(e=undefined,t=undefined,i=undefined,s=undefined,r=undefined,a=undefined,n=undefined){let o="";return void 0!==t&&(o=this.numberToString(t)+"-"+this.safeString(e,"id","_"),void 0!==i&&(o+="-"+i),void 0!==a&&(o+="-"+a),void 0!==n&&(o+="-"+n),void 0!==s&&(o+="-"+this.numberToString(s)),void 0!==r&&(o+="-"+this.numberToString(r))),o}async fetchBalance(e={}){await this.loadMarkets();const t=this.omit(e,"type"),i=await this.privateSpotGetUAccountBalance(t),s=this.safeValue(i,"data"),r=this.safeValue(s,"WALLET",[]),a={info:r};for(let e=0;e<r.length;e++){const t=r[e],i=t.currency,s=this.safeCurrencyCode(i),n=this.account();n.free=this.safeNumber(t,"available"),n.used=this.safeNumber(t,"frozen"),n.total=this.safeNumber(t,"total"),a[s]=n}return this.safeBalance(a)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.privateSpotGetUWalletAddress(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseDepositAddress(a,i)}parseDepositAddress(e,t=undefined){const i=this.safeValue(e,0),s=this.safeString(i,"address"),r=this.safeString(i,"memo"),a=this.safeString(i,"currency");return{currency:(t=this.safeCurrency(a,t)).code,address:s,tag:r,network:void 0,info:e}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires code argument");await this.loadMarkets();const a=this.currency(e),n={currency:a.id};if(void 0!==t){n.startTime=t;const e=this.milliseconds();n.endTime=e}void 0!==i&&(n.Size=i);const o=await this.privateSpotGetUWalletDepositRecord(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"data",[]);for(let e=0;e<c.length;e++)c[e].transactType="deposit";return this.parseTransactions(c,a,t,i,s)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires code argument");await this.loadMarkets();const a=this.currency(e),n={currency:a.id};if(void 0!==t){n.startTime=t;const e=this.milliseconds();n.endTime=e}void 0!==i&&(n.Size=i);const o=await this.privateSpotGetUWalletWithdrawRecord(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"data",[]);for(let e=0;e<c.length;e++)c[e].transactType="withdrawal";return this.parseTransactions(c,a,t,i,s)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeNumber(e,"volume"),r=this.safeValue(e,"toAddress",{}),a=this.safeString(e,"fromAddress"),n=this.safeString(e,"hash"),o=this.safeString(e,"transactType"),d=this.safeInteger(e,"createTime"),c=this.safeString(e,"currency"),h=this.safeCurrencyCode(c,t);return{id:i,currency:h,amount:s,network:void 0,address:r,addressTo:r,addressFrom:a,tag:void 0,tagTo:void 0,tagFrom:void 0,status:this.parseTransactionStatus(this.safeString(e,"status")),type:o,updated:void 0,txid:n,timestamp:d,datetime:this.iso8601(d),fee:{currency:h,cost:void 0},info:e}}parseTransactionStatus(e){return this.safeString({"-1":"failed",0:"ok",3:"pending",5:"pending"},e,e)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o="buy"===i?"BID":"ASK",d={symbol:n.id,type:t.toUpperCase(),volume:this.amountToPrecision(e,s),direction:o};"market"!==t&&void 0!==r&&(d.price=this.priceToPrecision(e,r));const c=await this.privateSpotPostUOrderCreate(this.extend(d,a));return this.parseOrder(c,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=void 0!==t?this.market(t):void 0,r={orderId:e},a=await this.privateSpotPostUOrderCancel(this.extend(r,i));return this.parseOrder(a,s)}async cancelOrders(e,t=undefined,i={}){if(!Array.isArray(e))throw new r.ArgumentsRequired(this.id+" cancelOrders() ids argument should be an array");await this.loadMarkets();const s={orders:this.json(e)},a=await this.privateSpotPostUOrderBatchCancel(this.extend(s,i)),n=this.safeValue(a,"data"),o=this.safeValue(n,"results"),d=void 0!==t?this.market(t):void 0;return this.parseOrders(o,d,void 0,void 0,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.size=i);const o=await this.privateSpotGetUOrderOpenOrders(this.extend(n,s)),d=this.safeValue(o,"data"),c=this.safeValue(d,"data");return this.parseOrders(c,a,t,i,s)}async fetchOpenOrder(e,t=undefined,i={}){const s={orderId:e},r=await this.privateSpotGetUOrderOpenOrderDetail(this.extend(s,i)),a=this.safeValue(r,"data"),n=void 0!==t?this.market(t):void 0;return this.parseOrder(a,n)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.size=i),void 0!==t&&(n.startTime=t);const o=await this.privateSpotGetUOrderHistoryOrders(this.extend(n,s)),d=this.safeValue(o,"data"),c=this.safeValue(d,"data");return this.parseOrders(c,a,t,i,s)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"createdTime"),s=this.safeInteger(e,"updateTime"),r=this.safeString(e,"dealVolume"),a=this.parseOrderSide(this.safeString(e,"direction")),n=this.safeString2(e,"id","data"),o=this.safeString(e,"price"),d=this.safeString(e,"status"),c=this.safeString(e,"type"),h=this.parseOrderType(c);let u,l=!1;"LIMIT_MAKER"===c&&(l=!0),void 0!==i&&(u=this.parseOrderStatus(d));const p=this.safeString(e,"symbol");t=this.safeMarket(p,t);const f=this.safeString(e,"totalVolume"),m=this.safeNumber(e,"stopPrice"),v=this.safeString(e,"dealAvgPrice");return this.safeOrder({id:n,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,status:u,symbol:t.symbol,type:h,timeInForce:void 0,postOnly:l,side:a,price:o,stopPrice:m,triggerPrice:m,average:v,amount:f,filled:r,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,info:e},t)}parseOrderSide(e){return this.safeString({BID:"buy",ASK:"sell"},e,e)}parseOrderStatus(e){return this.safeString({0:"open",1:"closed",2:"canceled",3:"open"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",LIMIT_MAKER:"limit",STOP_LIMIT:"limit"},e,e)}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicSpotGetCommonCurrencys(t);return this.parseTransactionFees(i,e)}parseTransactionFees(e,t=undefined){const i=this.safeValue(e,"data"),s={};for(let e=0;e<i.length;e++){const r=i[e],a=this.safeString(r,"currency"),n=this.safeCurrency(a),o=this.safeString(n,"code");(void 0===t||this.inArray(o,t))&&(s[o]={withdraw:this.parseTransactionFee(r),deposit:void 0,info:r})}return s}parseTransactionFee(e,t=undefined){return this.safeNumber(e,"withdrawFee")}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicSpotGetCommonCurrencys(t),s=this.safeValue(i,"data");return this.parseDepositWithdrawFees(s,e,"currency")}parseDepositWithdrawFee(e,t=undefined){const i=this.depositWithdrawFee(e);return i.withdraw.fee=this.safeNumber(e,"withdrawFee"),i}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id},o=await this.publicSwapGetMarketFundingRate(this.extend(n,s)),d=this.safeValue(o,"data",[]),c=[];for(let e=0;e<d.length;e++){const t=d[e],i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeInteger(t,"time");c.push({info:t,symbol:s,fundingRate:this.safeNumber(t,"rate"),timestamp:r,datetime:this.iso8601(r)})}const h=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(h,a.symbol,t,i)}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.BadRequest(this.id+" fetchMarketLeverageTiers() supports swap markets only");const s={symbol:i.id},a=await this.publicSwapGetMarketRiskLimit(this.extend(s,t)),n=this.safeValue(a,"data",[]);return this.parseMarketLeverageTiers(n,i)}parseMarketLeverageTiers(e,t=undefined){const i=[];for(let s=0;s<e.length;s++){const r=e[s],a=this.safeString(e,"symbol");t=this.safeMarket(a,t),i.push({tier:this.sum(s,1),currency:t.settle,minNotional:this.safeNumber(r,"minValue"),maxNotional:this.safeNumber(r,"maxValue"),maintenanceMarginRate:this.safeNumber(r,"maintenanceMarginRate"),maxLeverage:this.safeNumber(r,"maxLeverage"),info:r})}return i}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const o="private"===t[0],d=t[1],c="spot"===d?this.version:"fapi/"+this.version;let h=this.urls.api[d]+"/"+c+this.implodeParams(e,s);s=this.omit(s,this.extractParams(e));let u="";if(Object.keys(s).length&&(u=this.rawencode(this.keysort(s)),"GET"===i&&(h+="?"+u)),o){this.checkRequiredCredentials();const e=this.hmac(this.encode(u),this.encode(this.secret),n.J);r={"Cache-Control":"no-cache","Content-type":"application/x-www-form-urlencoded",X_ACCESS_KEY:this.apiKey,X_SIGNATURE:e},"GET"!==i&&(a=u)}return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;if("success"===this.safeValue(o,"msg"))return;const h=this.safeString(o,"code");if("0"!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,n,e),new r.ExchangeError(e)}}}},9476:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(858),r=i(2194),a=i(9292),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bl3p",name:"BL3P",countries:["NL"],rateLimit:1e3,version:"1",comment:"An exchange market by BitonicNL",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/28501752-60c21b82-6feb-11e7-818b-055ee6d0e754.jpg",api:{rest:"https://api.bl3p.eu"},www:"https://bl3p.eu",doc:["https://github.com/BitonicNL/bl3p-api/tree/master/docs","https://bl3p.eu/api","https://bitonic.nl/en/api"]},api:{public:{get:["{market}/ticker","{market}/orderbook","{market}/trades"]},private:{post:["{market}/money/depth/full","{market}/money/order/add","{market}/money/order/cancel","{market}/money/order/result","{market}/money/orders","{market}/money/orders/history","{market}/money/trades/fetch","GENMKT/money/info","GENMKT/money/deposit_address","GENMKT/money/new_deposit_address","GENMKT/money/wallet/history","GENMKT/money/withdraw"]}},markets:{"BTC/EUR":{id:"BTCEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"BTC",quoteId:"EUR",maker:.0025,taker:.0025,type:"spot",spot:!0}},precisionMode:a.sh})}parseBalance(e){const t=this.safeValue(e,"data",{}),i=this.safeValue(t,"wallets",{}),s={info:t},r=Object.keys(this.currencies);for(let e=0;e<r.length;e++){const t=r[e],a=this.currency(t).id,n=this.safeValue(i,a,{}),o=this.safeValue(n,"available",{}),d=this.safeValue(n,"balance",{}),c=this.account();c.free=this.safeString(o,"value"),c.total=this.safeString(d,"value"),s[t]=c}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGENMKTMoneyInfo(e);return this.parseBalance(t)}parseBidAsk(e,t=0,i=1){const s=this.safeString(e,t),a=this.safeString(e,i);return[this.parseNumber(r.O.stringDiv(s,"100000.0")),this.parseNumber(r.O.stringDiv(a,"100000000.0"))]}async fetchOrderBook(e,t=undefined,i={}){const s=this.market(e),r={market:s.id},a=await this.publicGetMarketOrderbook(this.extend(r,i)),n=this.safeValue(a,"data");return this.parseOrderBook(n,s.symbol,void 0,"bids","asks","price_int","amount_int")}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"last"),a=this.safeValue(e,"volume",{});return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(a,"24h"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){const i=this.market(e),s={market:i.id},r=await this.publicGetMarketTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"trade_id"),s=this.safeInteger(e,"date"),a=this.safeString(e,"price_int"),n=this.safeString(e,"amount_int");return t=this.safeMarket(void 0,t),this.safeTrade({id:i,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:void 0,order:void 0,takerOrMaker:void 0,price:r.O.stringDiv(a,"100000"),amount:r.O.stringDiv(n,"100000000"),cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){const r=this.market(e),a=await this.publicGetMarketTrades(this.extend({market:r.id},s));return this.parseTrades(a.data.trades,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostGENMKTMoneyInfo(e),i=this.safeValue(t,"data",{}),s=this.safeString(i,"trade_fee"),a=this.parseNumber(r.O.stringDiv(s,"100")),n={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e];n[t]={info:i,symbol:t,maker:a,taker:a,percentage:!0,tierBased:!1}}return n}async createOrder(e,t,i,s,a=undefined,n={}){const o=this.market(e),d=this.numberToString(s),c=this.numberToString(a),h={market:o.id,amount_int:parseInt(r.O.stringMul(d,"100000000")),fee_currency:o.quote,type:"buy"===i?"bid":"ask"};"limit"===t&&(h.price_int=parseInt(r.O.stringMul(c,"100000.0")));const u=await this.privatePostMarketMoneyOrderAdd(this.extend(h,n)),l=this.safeString(u.data,"order_id");return this.safeOrder({info:u,id:l},o)}async cancelOrder(e,t=undefined,i={}){const s={order_id:e};return await this.privatePostMarketMoneyOrderCancel(this.extend(s,i))}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const o=this.implodeParams(e,s);let d=this.urls.api.rest+"/"+this.version+"/"+o;const c=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(c).length&&(d+="?"+this.urlencode(c));else{this.checkRequiredCredentials();const e=this.nonce();a=this.urlencode(this.extend({nonce:e},c));const t=this.base64ToBinary(this.secret),i=o+"\0"+a,s=this.hmac(this.encode(i),t,n.o,"base64");r={"Content-Type":"application/x-www-form-urlencoded","Rest-Key":this.apiKey,"Rest-Sign":s}}return{url:d,method:i,body:a,headers:r}}}},182:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(3617),r=i(6689),a=i(2194),n=i(9292);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"blockchaincom",secret:void 0,name:"Blockchain.com",countries:["LX"],rateLimit:500,version:"v3",has:{CORS:!1,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL2OrderBook:!0,fetchL3OrderBook:!0,fetchLedger:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!1,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!0,transfer:!1,withdraw:!0},timeframes:void 0,urls:{logo:"https://user-images.githubusercontent.com/1294454/147515585-1296e91b-7398-45e5-9d32-f6121538533f.jpeg",test:{public:"https://testnet-api.delta.exchange",private:"https://testnet-api.delta.exchange"},api:{public:"https://api.blockchain.com/v3/exchange",private:"https://api.blockchain.com/v3/exchange"},www:"https://blockchain.com",doc:["https://api.blockchain.com/v3"],fees:"https://exchange.blockchain.com/fees"},api:{public:{get:{tickers:1,"tickers/{symbol}":1,symbols:1,"symbols/{symbol}":1,"l2/{symbol}":1,"l3/{symbol}":1}},private:{get:{fees:1,orders:1,"orders/{orderId}":1,trades:1,fills:1,deposits:1,"deposits/{depositId}":1,accounts:1,"accounts/{account}/{currency}":1,whitelist:1,"whitelist/{currency}":1,withdrawals:1,"withdrawals/{withdrawalId}":1},post:{orders:1,"deposits/{currency}":1,withdrawals:1},delete:{orders:1,"orders/{orderId}":1}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("10000"),this.parseNumber("0.0022")],[this.parseNumber("50000"),this.parseNumber("0.002")],[this.parseNumber("100000"),this.parseNumber("0.0018")],[this.parseNumber("500000"),this.parseNumber("0.0018")],[this.parseNumber("1000000"),this.parseNumber("0.0018")],[this.parseNumber("2500000"),this.parseNumber("0.0018")],[this.parseNumber("5000000"),this.parseNumber("0.0016")],[this.parseNumber("25000000"),this.parseNumber("0.0014")],[this.parseNumber("100000000"),this.parseNumber("0.0011")],[this.parseNumber("500000000"),this.parseNumber("0.0008")],[this.parseNumber("1000000000"),this.parseNumber("0.0006")]],maker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("10000"),this.parseNumber("0.0012")],[this.parseNumber("50000"),this.parseNumber("0.001")],[this.parseNumber("100000"),this.parseNumber("0.0008")],[this.parseNumber("500000"),this.parseNumber("0.0007000000000000001")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0005")],[this.parseNumber("5000000"),this.parseNumber("0.0004")],[this.parseNumber("25000000"),this.parseNumber("0.0003")],[this.parseNumber("100000000"),this.parseNumber("0.0002")],[this.parseNumber("500000000"),this.parseNumber("0.0001")],[this.parseNumber("1000000000"),this.parseNumber("0")]]}}},requiredCredentials:{apiKey:!1,secret:!0},precisionMode:n.sh,exceptions:{exact:{401:r.AuthenticationError,404:r.OrderNotFound},broad:{}}})}async fetchMarkets(e={}){const t=await this.publicGetSymbols(e),i=Object.keys(t),s=[];for(let e=0;e<i.length;e++){const r=i[e],n=this.safeValue(t,r),o=this.safeString(n,"base_currency"),d=this.safeString(n,"counter_currency"),c=this.safeCurrencyCode(o),h=this.safeCurrencyCode(d),u=this.safeNumber(n,"id");let l;l="open"===this.safeString(n,"status");const p=this.safeString(n,"min_price_increment"),f=this.safeString(n,"min_price_increment_scale"),m=this.parsePrecision(f),v=a.O.stringMul(p,m),g=this.safeString(n,"lot_size"),y=this.safeString(n,"lot_size_scale"),b=this.parsePrecision(y),w=a.O.stringMul(g,b),S=this.safeString(n,"min_order_size"),P=this.safeString(n,"min_order_size_scale"),k=this.parsePrecision(P),O=a.O.stringMul(S,k),T=this.parseNumber(O);let A;if(A=this.safeString(n,"max_order_size"),"0"!==A){const e=this.safeString(n,"max_order_size_scale"),t=this.parsePrecision(e),i=a.O.stringMul(A,t);A=this.parseNumber(i)}else A=void 0;s.push({info:n,id:r,numericId:u,symbol:c+"/"+h,base:c,quote:h,settle:void 0,baseId:o,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:l,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(w),price:this.parseNumber(v)},limits:{leverage:{min:void 0,max:void 0},amount:{min:T,max:A},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}}})}return s}async fetchOrderBook(e,t=undefined,i={}){return await this.fetchL3OrderBook(e,t,i)}async fetchL3OrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetL3Symbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","px","qty")}async fetchL2OrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetL2Symbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","px","qty")}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,"-"),r=this.safeString(e,"last_trade_price"),a=this.safeString(e,"volume_24h"),n=this.safeString(e,"price_24h");return this.safeTicker({symbol:s,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:n,close:void 0,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetTickersSymbol(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTickers(t);return this.parseTickers(i,e)}parseOrderState(e){return this.safeString({OPEN:"open",REJECTED:"rejected",FILLED:"closed",CANCELED:"canceled",PART_FILLED:"open",EXPIRED:"expired"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"clOrdId"),s=this.safeStringLower(e,"ordType"),r=this.safeString(e,"ordStatus"),a=this.parseOrderState(r),n=this.safeStringLower(e,"side"),o=this.safeString(e,"symbol"),d=this.safeSymbol(o,t,"-"),c=this.safeString(e,"exOrdId"),h="market"!==s?this.safeString(e,"price"):void 0,u=this.safeNumber(e,"avgPx"),l=this.safeInteger(e,"timestamp"),p=this.iso8601(l),f=this.safeString(e,"cumQty"),m=this.safeString(e,"leavesQty");return this.safeOrder({id:c,clientOrderId:i,datetime:p,timestamp:l,lastTradeTimestamp:void 0,status:a,symbol:d,type:s,timeInForce:void 0,side:n,price:h,average:u,amount:void 0,filled:f,remaining:m,cost:void 0,trades:[],fees:{},info:e})}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=this.safeString(n,"ordType",t).toUpperCase(),c=this.safeString2(n,"clientOrderId","clOrdId",this.uuid16());n=this.omit(n,["ordType","clientOrderId","clOrdId"]);const h={ordType:d,symbol:o.id,side:i.toUpperCase(),orderQty:this.amountToPrecision(e,s),clOrdId:c},u=this.safeValue2(n,"stopPx","stopPrice");if(n=this.omit(n,["stopPx","stopPrice"]),("STOP"===d||"STOPLIMIT"===d)&&void 0===u)throw new r.ArgumentsRequired(this.id+" createOrder() requires a stopPx or stopPrice param for a "+d+" order");void 0!==u&&("MARKET"===d?h.ordType="STOP":"LIMIT"===d&&(h.ordType="STOPLIMIT"));let l=!1,p=!1;"LIMIT"!==h.ordType&&"STOPLIMIT"!==h.ordType||(l=!0),"STOP"!==h.ordType&&"STOPLIMIT"!==h.ordType||(p=!0),l&&(h.price=this.priceToPrecision(e,a)),p&&(h.stopPx=this.priceToPrecision(e,u));const f=await this.privatePostOrders(this.extend(h,n));return this.parseOrder(f,o)}async cancelOrder(e,t=undefined,i={}){const s={orderId:e};return{id:e,info:await this.privateDeleteOrdersOrderId(this.extend(s,i))}}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==e){const t=this.marketId(e);i.symbol=t}return{symbol:e,info:await this.privateDeleteOrders(this.extend(i,t))}}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetFees(e),i=this.safeNumber(t,"makerRate"),s=this.safeNumber(t,"takerRate"),r={};for(let e=0;e<this.symbols.length;e++){const a=this.symbols[e];r[a]={info:t,symbol:a,maker:i,taker:s}}return r}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("CANCELED",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("FILLED",e,t,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("OPEN",e,t,i,s)}async fetchOrdersByState(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={status:e,limit:100};let n;void 0!==t&&(n=this.market(t),a.symbol=n.id);const o=await this.privateGetOrders(this.extend(a,r));return this.parseOrders(o,n,i,s)}parseTrade(e,t=undefined){const i=this.safeString(e,"exOrdId"),s=this.safeString(e,"tradeId"),r=this.safeString(e,"side").toLowerCase(),a=this.safeString(e,"symbol"),n=this.safeString(e,"price"),o=this.safeString(e,"qty"),d=this.safeInteger(e,"timestamp"),c=this.iso8601(d),h=(t=this.safeMarket(a,t,"-")).symbol;let u;const l=this.safeString(e,"fee");return void 0!==l&&(u={cost:l,currency:t.quote}),this.safeTrade({id:s,timestamp:d,datetime:c,symbol:h,order:i,type:void 0,side:r,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:u,info:e},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==i&&(r.limit=i),void 0!==e&&(r.symbol=this.marketId(e),a=this.market(e));const n=await this.privateGetFills(this.extend(r,s));return this.parseTrades(n,a,t,i,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.privatePostDepositsCurrency(this.extend(s,t)),a=this.safeString(r,"address");let n,o;void 0!==a&&([o,n]=a.split(":"));const d={info:r};return d.currency=i.code,d.address=o,void 0!==n&&(d.tag=n),d}parseTransactionState(e){return this.safeString({COMPLETED:"ok",REJECTED:"failed",PENDING:"pending",FAILED:"failed",REFUNDED:"refunded"},e,e)}parseTransaction(e,t=undefined){let i,s;const r=this.safeNumber(e,"amount"),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),d=this.safeString(e,"state");"depositId"in e?(i="deposit",s=this.safeString(e,"depositId")):"withdrawalId"in e&&(i="withdrawal",s=this.safeString(e,"withdrawalId"));const c="withdrawal"===i?this.safeNumber(e,"fee"):void 0;let h;void 0!==c&&(h={currency:o,cost:c});const u=this.safeString(e,"address");return{info:e,id:s,txid:this.safeString(e,"txhash"),timestamp:a,datetime:this.iso8601(a),network:void 0,addressFrom:void 0,address:u,addressTo:u,tagFrom:void 0,tag:void 0,tagTo:void 0,type:i,amount:r,currency:o,status:this.parseTransactionState(d),updated:void 0,comment:void 0,fee:h}}async fetchWithdrawalWhitelist(e={}){await this.loadMarkets();const t=await this.privateGetWhitelist(),i=[];for(let e=0;e<t.length;e++){const s=t[e];i.push({beneficiaryId:this.safeString(s,"whitelistId"),name:this.safeString(s,"name"),currency:this.safeString(s,"currency"),info:s})}return i}async fetchWithdrawalWhitelistByCurrency(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.privateGetWhitelistCurrency(this.extend(i,t)),r=[];for(let e=0;e<s.length;e++){const t=s[e];r.push({beneficiaryId:this.safeString(t,"whitelistId"),name:this.safeString(t,"name"),currency:this.safeString(t,"currency"),info:t})}return r}async withdraw(e,t,i,s=undefined,r={}){await this.loadMarkets();const a=this.currency(e),n={amount:t,currency:a.id,beneficiary:i,sendMax:!1},o=await this.privatePostWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==t&&(r.from=t),void 0!==e&&(a=this.currency(e));const n=await this.privateGetWithdrawals(this.extend(r,s));return this.parseTransactions(n,a,t,i)}async fetchWithdrawal(e,t=undefined,i={}){await this.loadMarkets();const s={withdrawalId:e},r=await this.privateGetWithdrawalsWithdrawalId(this.extend(s,i));return this.parseTransaction(r)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==t&&(r.from=t),void 0!==e&&(a=this.currency(e));const n=await this.privateGetDeposits(this.extend(r,s));return this.parseTransactions(n,a,t,i)}async fetchDeposit(e,t=undefined,i={}){await this.loadMarkets();const s={depositId:this.safeString(i,"depositId",e)},r=await this.privateGetDepositsDepositId(this.extend(s,i));return this.parseTransaction(r)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"account","primary");e=this.omit(e,"account");const i={account:t},s=await this.privateGetAccounts(this.extend(i,e)),a=this.safeValue(s,t);if(void 0===a)throw new r.ExchangeError(this.id+' fetchBalance() could not find the "'+t+'" account');const n={info:s};for(let e=0;e<a.length;e++){const t=a[e],i=this.safeString(t,"currency"),s=this.safeCurrencyCode(i),r=this.account();r.free=this.safeString(t,"available"),r.total=this.safeString(t,"balance"),n[s]=r}return this.safeBalance(n)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderId:e},r=await this.privateGetOrdersOrderId(this.extend(s,i));return this.parseOrder(r)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n="/"+this.implodeParams(e,s);let o=this.urls.api[t]+n;const d=this.omit(s,this.extractParams(e));return"public"===t?Object.keys(d).length&&(o+="?"+this.urlencode(d)):"private"===t&&(this.checkRequiredCredentials(),r={"X-API-Token":this.secret},"GET"===i?Object.keys(d).length&&(o+="?"+this.urlencode(d)):(a=this.json(d),r["Content-Type"]="application/json")),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"text");if(void 0!==h&&"Insufficient Balance"===h)throw new r.InsufficientFunds(this.id+" "+n);const u=this.safeString(o,"status"),l=this.safeString(o,"error");if(void 0!==e){const e=this.id+" "+this.json(o);this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e)}}}},6246:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5489),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"btcalpha",name:"BTC-Alpha",countries:["US"],version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDeposit:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL2OrderBook:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},timeframes:{"5m":"5","15m":"15","30m":"30","1h":"60","4h":"240","1d":"D"},urls:{logo:"https://user-images.githubusercontent.com/1294454/42625213-dabaa5da-85cf-11e8-8f99-aa8f8f7699f0.jpg",api:{rest:"https://btc-alpha.com/api"},www:"https://btc-alpha.com",doc:"https://btc-alpha.github.io/api-docs",fees:"https://btc-alpha.com/fees/",referral:"https://btc-alpha.com/?r=123788"},api:{public:{get:["currencies/","pairs/","orderbook/{pair_name}","exchanges/","charts/{pair}/{type}/chart/","ticker/"]},private:{get:["wallets/","orders/own/","order/{id}/","exchanges/own/","deposits/","withdraws/"],post:["order/","order-cancel/"]}},fees:{trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")},funding:{withdraw:{}}},commonCurrencies:{CBC:"Cashbery"},precisionMode:n.sh,exceptions:{exact:{},broad:{"Out of balance":r.InsufficientFunds}}})}async fetchMarkets(e={}){const t=await this.publicGetPairs(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"name"),n=this.safeString(s,"currency1"),o=this.safeString(s,"currency2"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=this.safeString(s,"price_precision"),u=this.parsePrecision(h),l=this.safeString(s,"minimum_order_size");i.push({id:r,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"amount_precision"))),price:this.parseNumber(this.parsePrecision(h))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(l),max:this.safeNumber(s,"maximum_order_size")},price:{min:this.parseNumber(u),max:void 0},cost:{min:this.parseNumber(a.O.stringMul(u,l)),max:void 0}},info:s})}return i}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTicker(t);return this.parseTickers(i,e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t=undefined){const i=this.safeIntegerProduct(e,"timestamp",1e6),s=this.safeString(e,"pair");t=this.safeMarket(s,t,"_");const r=this.safeString(e,"last");return this.safeTicker({info:e,symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeString(e,"diff"),percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"vol")},t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair_name:s.id};t&&(r.limit_sell=t,r.limit_buy=t);const a=await this.publicGetOrderbookPairName(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"buy","sell","price","amount")}parseBidsAsks(e,t=0,i=1){const s=[];for(let r=0;r<e.length;r++){const a=e[r];a&&s.push(this.parseBidAsk(a,t,i))}return s}parseTrade(e,t=undefined){const i=this.safeString(e,"pair");t=this.safeMarket(i,t,"_");const s=this.safeString(e,"timestamp"),r=this.parseNumber(a.O.stringMul(s,"1000000")),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),d=this.safeString(e,"id"),c=this.safeString2(e,"my_side","type");return this.safeTrade({id:d,info:e,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,order:d,type:"limit",side:c,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==i&&(a.limit=i);const n=await this.publicGetExchanges(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetDeposits(s);return this.parseTransactions(a,r,t,i,{type:"deposit"})}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency_id=r.id);const n=await this.privateGetWithdraws(this.extend(a,s));return this.parseTransactions(n,r,t,i,{type:"withdrawal"})}parseTransaction(e,t=undefined){const i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"currency"),r=this.safeString(e,"status");return{id:this.safeString(e,"id"),info:e,timestamp:i,datetime:this.iso8601(i),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"amount"),txid:void 0,type:void 0,status:this.parseTransactionStatus(r),comment:void 0,fee:void 0,updated:void 0}}parseTransactionStatus(e){return this.safeString({10:"pending",20:"pending",30:"ok",40:"failed",50:"canceled"},e,e)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="5m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={pair:a.id,type:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=s),void 0!==i&&(n.since=this.parseToInt(i/1e3));const o=await this.publicGetChartsPairTypeChart(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(s,"reserve"),n.total=this.safeString(s,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetWallets(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({1:"open",2:"canceled",3:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"pair"),s=(t=this.safeMarket(i,t,"_")).symbol;let r;r=this.safeValue(e,"success",!1)?this.safeTimestamp(e,"date"):this.safeInteger(e,"date");const a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"amount_filled"),d=this.safeString(e,"amount_original"),c=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeString2(e,"oid","id"),u=this.safeValue(e,"trades"),l=this.safeString2(e,"my_side","type");return this.safeOrder({id:h,clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,status:c,symbol:s,type:"limit",timeInForce:void 0,postOnly:void 0,side:l,price:a,stopPrice:void 0,triggerPrice:void 0,cost:void 0,amount:d,filled:o,remaining:n,trades:u,fee:void 0,info:e,lastTradeTimestamp:void 0,average:void 0},t)}async createOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets();const d=this.market(e),c={pair:d.id,type:i,amount:s,price:this.priceToPrecision(e,n)},h=await this.privatePostOrder(this.extend(c,o));if(!h.success)throw new r.InvalidOrder(this.id+" "+this.json(h));const u=this.parseOrder(h,d),l=u.amount.toString();return s=a.O.stringGt(l,"0")?u.amount:s,this.extend(u,{amount:this.parseNumber(s)})}async cancelOrder(e,t=undefined,i={}){const s={order:e};return await this.privatePostOrderCancel(this.extend(s,i))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetOrderId(this.extend(s,i));return this.parseOrder(r)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.pair=a.id),void 0!==i&&(r.limit=i);const n=await this.privateGetOrdersOwn(this.extend(r,s));return this.parseOrders(n,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"1"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"3"},s))}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.market(e);r.pair=t.id}void 0!==i&&(r.limit=i);const a=await this.privateGetExchangesOwn(this.extend(r,s));return this.parseTrades(a,void 0,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.urlencode(this.keysort(this.omit(s,this.extractParams(e))));let d=this.urls.api.rest+"/";if("charts/{pair}/{type}/chart/"!==e&&(d+="v1/"),d+=this.implodeParams(e,s),r={Accept:"application/json"},"public"===t)n.length&&(d+="?"+n);else{this.checkRequiredCredentials();let e=this.apiKey;"POST"===i?(r["Content-Type"]="application/x-www-form-urlencoded",e+=a=n):n.length&&(d+="?"+n),r["X-KEY"]=this.apiKey,r["X-SIGN"]=this.hmac(this.encode(e),this.encode(this.secret),o.J),r["X-NONCE"]=this.nonce().toString()}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"error"),u=this.id+" "+n;if(void 0!==h&&(this.throwExactlyMatchedException(this.exceptions.exact,h,u),this.throwBroadlyMatchedException(this.exceptions.broad,h,u)),401===e||403===e)throw new r.AuthenticationError(u);if(429===e)throw new r.DDoSProtection(u);if(!(e<400))throw new r.ExchangeError(u)}}},7796:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6851),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"btcbox",name:"BtcBox",countries:["JP"],rateLimit:1e3,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!1},urls:{logo:"https://user-images.githubusercontent.com/51840849/87327317-98c55400-c53c-11ea-9a11-81f7d951cc74.jpg",api:{rest:"https://www.btcbox.co.jp/api"},www:"https://www.btcbox.co.jp/",doc:"https://blog.btcbox.jp/en/archives/8762",fees:"https://support.btcbox.co.jp/hc/en-us/articles/360001235694-Fees-introduction"},api:{public:{get:["depth","orders","ticker"]},private:{post:["balance","trade_add","trade_cancel","trade_list","trade_view","wallet"]}},markets:{"BTC/JPY":{id:"btc",symbol:"BTC/JPY",base:"BTC",quote:"JPY",baseId:"btc",quoteId:"jpy",taker:this.parseNumber("0.0005"),maker:this.parseNumber("0.0005"),type:"spot",spot:!0},"ETH/JPY":{id:"eth",symbol:"ETH/JPY",base:"ETH",quote:"JPY",baseId:"eth",quoteId:"jpy",taker:this.parseNumber("0.0010"),maker:this.parseNumber("0.0010"),type:"spot",spot:!0},"LTC/JPY":{id:"ltc",symbol:"LTC/JPY",base:"LTC",quote:"JPY",baseId:"ltc",quoteId:"jpy",taker:this.parseNumber("0.0010"),maker:this.parseNumber("0.0010"),type:"spot",spot:!0},"BCH/JPY":{id:"bch",symbol:"BCH/JPY",base:"BCH",quote:"JPY",baseId:"bch",quoteId:"jpy",taker:this.parseNumber("0.0010"),maker:this.parseNumber("0.0010"),type:"spot",spot:!0}},precisionMode:n.sh,exceptions:{104:r.AuthenticationError,105:r.PermissionDenied,106:r.InvalidNonce,107:r.InvalidOrder,200:r.InsufficientFunds,201:r.InvalidOrder,202:r.InvalidOrder,203:r.OrderNotFound,401:r.OrderNotFound,402:r.DDoSProtection}})}parseBalance(e){const t={info:e},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){const r=i[s],a=this.currency(r).id,n=a+"_balance";if(n in e){const i=this.account(),s=a+"_lock";i.free=this.safeString(e,n),i.used=this.safeString(e,s),t[r]=i}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={};this.symbols.length>1&&(r.coin=s.baseId);const a=await this.publicGetDepth(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t=undefined){const i=this.milliseconds(),s=this.safeSymbol(void 0,t),r=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={};this.symbols.length>1&&(s.coin=i.baseId);const r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=this.safeTimestamp(e,"date");t=this.safeMarket(void 0,t);const s=this.safeString(e,"tid"),r=this.safeString(e,"price"),a=this.safeString(e,"amount"),n=this.safeString(e,"type");return this.safeTrade({info:e,id:s,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:n,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={};this.symbols.length>1&&(a.coin=r.baseId);const n=await this.publicGetOrders(this.extend(a,s));return this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={amount:s,price:r,type:i,coin:n.baseId},d=await this.privatePostTradeAdd(this.extend(o,a));return this.parseOrder(d,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");const s=this.market(t),r={id:e,coin:s.baseId},a=await this.privatePostTradeCancel(this.extend(r,i));return this.parseOrder(a,s)}parseOrderStatus(e){return this.safeString({part:"open",all:"closed",cancelled:"canceled",closed:"closed",no:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id");let s;void 0!==this.safeString(e,"datetime")&&(s=this.parse8601(e.datetime+"+09:00"));const r=this.safeString(e,"amount_original"),n=this.safeString(e,"amount_outstanding"),o=this.safeString(e,"price");let d=this.parseOrderStatus(this.safeString(e,"status"));void 0===d&&a.O.stringEquals(n,"0")&&(d="closed"),t=this.safeMarket(void 0,t);const c=this.safeString(e,"type");return this.safeOrder({id:i,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,amount:r,remaining:n,filled:void 0,side:c,type:void 0,timeInForce:void 0,postOnly:void 0,status:d,symbol:t.symbol,price:o,stopPrice:void 0,triggerPrice:void 0,cost:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");const s=this.market(t),r=this.extend({id:e,coin:s.baseId},i),a=await this.privatePostTradeView(this.extend(r,i));return this.parseOrder(a,s)}async fetchOrdersByType(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets(),void 0===t&&(t="BTC/JPY");const a=this.market(t),n={type:e,coin:a.baseId},o=await this.privatePostTradeList(this.extend(n,r)),d=this.parseOrders(o,a,i,s);if("open"===e)for(let e=0;e<d.length;e++)d[e].status="open";return d}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByType("all",e,t,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByType("open",e,t,i,s)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+this.version+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.extend({key:this.apiKey,nonce:e},s),i=this.urlencode(t),n=this.hash(this.encode(this.secret),o.J);t.signature=this.hmac(this.encode(i),this.encode(n),o.J),a=this.urlencode(t),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;if(e>=400)return;const h=this.safeValue(o,"result");if(void 0===h||!0===h)return;const u=this.safeValue(o,"code"),l=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,u,l),new r.ExchangeError(l)}async request(e,t="public",i="GET",s={},a=undefined,n=undefined,o={},d={}){let c=await this.fetch2(e,t,i,s,a,n,o,d);if("string"==typeof c){if(c=this.strip(c),!this.isJsonEncodedObject(c))throw new r.ExchangeError(this.id+" "+c);c=JSON.parse(c)}return c}}},1393:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(8256),r=i(9292),a=i(6689),n=i(2194);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"btcex",name:"BTCEX",countries:["CA"],version:"v1",certified:!1,pro:!0,requiredCredentials:{apiKey:!0,secret:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/173489620-d49807a4-55cd-4f4e-aca9-534921298bbf.jpg",www:"https://www.btcex.com/",api:{rest:"https://api.btcex.com"},doc:"https://docs.btcex.com/",fees:"https://support.btcex.com/hc/en-us/articles/4415995130647",referral:{url:"https://www.btcex.com/en-us/register?i=48biatg1",discount:.1}},has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:!0,cancelAllOrders:!0,cancelOrder:!0,createLimitBuyOrder:!0,createLimitSellOrder:!0,createMarketBuyOrder:!0,createMarketSellOrder:!0,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLeverage:!0,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:void 0,fetchWithdrawal:!0,fetchWithdrawals:!0,setLeverage:!0,setMarginMode:!0,signIn:!0,transfer:!0,withdraw:!1},timeframes:{"1m":"1","3m":"3","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","3h":"180","4h":"240","6h":"360","12h":"720","1d":"1D","3d":"3D","1M":"30D"},api:{public:{get:["get_last_trades_by_currency","get_last_trades_by_instrument","get_order_book","tickers","get_instruments","get_tradingview_chart_data","cmc_spot_summary","cmc_spot_ticker","cmc_spot_orderbook","cmc_market_trades","cmc_contracts","cmc_contract_orderbook","coin_gecko_spot_pairs","coin_gecko_spot_ticker","coin_gecko_spot_orderbook","coin_gecko_market_trades","coin_gecko_contracts","coin_gecko_contract_orderbook","get_perpetual_leverage_bracket","get_perpetual_leverage_bracket_all"],post:["auth"]},private:{get:["get_deposit_record","get_withdraw_record","get_position","get_positions","get_open_orders_by_currency","get_open_orders_by_instrument","get_order_history_by_currency","get_order_history_by_instrument","get_order_state","get_user_trades_by_currency","get_user_trades_by_instrument","get_user_trades_by_order","get_perpetual_user_config"],post:["logout","get_assets_info","add_withdraw_address","buy","sell","cancel","cancel_all_by_currency","cancel_all_by_instrument","close_position","adjust_perpetual_leverage","adjust_perpetual_margin_type","submit_transfer"],delete:[]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},margin:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},perpetual:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},exceptions:{exact:{9999:a.ExchangeError,9900:a.ExchangeNotAvailable,401:a.AuthenticationError,403:a.AuthenticationError,1e3:a.ExchangeNotAvailable,1001:a.BadRequest,1005:a.DDoSProtection,2e3:a.AuthenticationError,2001:a.AuthenticationError,2002:a.AuthenticationError,2003:a.AuthenticationError,2010:a.PermissionDenied,3e3:a.AuthenticationError,3002:a.AuthenticationError,3003:a.AuthenticationError,3004:a.BadRequest,3005:a.NotSupported,3007:a.AuthenticationError,3008:a.AuthenticationError,3009:a.AuthenticationError,3011:a.AuthenticationError,3012:a.AuthenticationError,3013:a.RequestTimeout,3015:a.AuthenticationError,3016:a.AuthenticationError,3018:a.BadRequest,3019:a.BadRequest,3020:a.BadRequest,3021:a.BadRequest,3022:a.BadRequest,3023:a.BadRequest,3024:a.BadRequest,3025:a.BadRequest,3026:a.BadRequest,3027:a.BadRequest,3028:a.BadRequest,3029:a.DDoSProtection,3030:a.DDoSProtection,3031:a.BadRequest,3032:a.BadRequest,3033:a.BadRequest,3034:a.AuthenticationError,3035:a.BadRequest,3036:a.BadRequest,3037:a.BadRequest,3038:a.BadRequest,3039:a.BadRequest,3040:a.AuthenticationError,3041:a.BadRequest,4e3:a.BadRequest,4001:a.InvalidAddress,4002:a.InvalidAddress,4003:a.BadRequest,4004:a.NotSupported,4005:a.ExchangeError,4006:a.InsufficientFunds,4007:a.BadRequest,4008:a.NotSupported,4009:a.InvalidAddress,4010:a.BadRequest,4011:a.BadRequest,5001:a.InvalidOrder,5002:a.OrderNotFound,5003:a.InvalidOrder,5004:a.InvalidOrder,5005:a.InvalidOrder,5006:a.InvalidOrder,5007:a.InvalidOrder,5008:a.InvalidOrder,5009:a.InvalidOrder,5010:a.InvalidOrder,5011:a.InvalidOrder,5012:a.InvalidOrder,5013:a.InvalidOrder,5014:a.InvalidOrder,5109:a.InvalidOrder,5119:a.InvalidOrder,5135:a.InvalidOrder,5901:a.InvalidOrder,5902:a.InvalidOrder,5903:a.InvalidOrder,5904:a.InvalidOrder,5905:a.InvalidOrder,5906:a.InvalidOrder,5907:a.InsufficientFunds,8e3:a.BadRequest,8001:a.BadRequest,8100:a.BadRequest,8101:a.RequestTimeout,8102:a.DDoSProtection,8103:a.BadRequest,8104:a.BadRequest,8105:a.BadRequest,8106:a.DDoSProtection,8107:a.ExchangeError,1e4:a.AuthenticationError,11e3:a.BadRequest},broad:{}},precisionMode:r.sh,options:{accountsByType:{wallet:"WALLET",spot:"SPOT",perpetual:"PERPETUAL",margin:"MARGIN",swap:"PERPETUAL",BTC:"BTC",ETH:"ETH"},createMarketBuyOrderRequiresPrice:!0},commonCurrencies:{}})}async fetchMarkets(e={}){const t=await this.publicGetGetInstruments(e),i=this.safeValue(t,"result",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"instrument_name"),a=this.safeString(t,"kind");let n=a;"perpetual"===a&&(n="swap");let o=this.safeString(t,"quote_currency");const d=this.safeString(t,"base_currency"),c="perpetual"===a,h="spot"===a,u="margin"===a,l="option"===a,p="future"===a,f=c||p||l;let m,v,g,y,b,w;(l||p)&&(o=this.safeString(t,"currency"),m=this.safeInteger(t,"expiration_timestamp")),f&&(g=d,y=this.safeCurrencyCode(g)),l&&(b=this.safeString(t,"option_type"),w=this.safeNumber(t,"strike"));const S=this.safeCurrencyCode(o),P=this.safeCurrencyCode(d);let k;if(k=u?r:S+"/"+P,f&&(v=this.safeNumber(t,"contract_size"),k=k+":"+y,(p||l)&&(k=k+"-"+this.yymmdd(m),l))){const e="call"===b?"C":"P";k=k+":"+this.numberToString(w)+":"+e}const O=this.safeNumber(t,"min_trade_amount"),T=this.safeNumber(t,"tick_size"),A=this.safeNumber(t,"maker_commission"),G=this.safeNumber(t,"taker_commission"),I=!(l||p);s.push({id:r,symbol:k,base:S,quote:P,baseId:o,quoteId:d,settleId:g,settle:y,type:n,maker:A,taker:G,percentage:I,spot:h,margin:u,swap:c,future:p,option:l,active:this.safeValue(t,"is_active"),contract:f,linear:!!f||void 0,inverse:!f&&void 0,contractSize:v,expiry:m,expiryDatetime:this.iso8601(m),strike:w,optionType:b,precision:{amount:O,price:T},limits:{leverage:{min:void 0,max:this.safeString(t,"leverage")},amount:{min:O,max:void 0},price:{min:T,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}parseTicker(e,t=undefined){let i=this.safeString(e,"instrument_name");i.indexOf("PERPETUAL")<0&&(i+="-SPOT"),t=this.safeMarket(i,t);const s=this.safeSymbol(i,t,"-"),r=this.safeInteger(e,"timestamp"),a=this.safeValue(e,"stats");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(a,"high"),low:this.safeString(a,"low"),bid:this.safeString(e,"best_bid_price"),bidVolume:this.safeString(e,"best_bid_amount"),ask:this.safeString(e,"best_ask_price"),askVolume:this.safeString(e,"best_ask_amount"),vwap:void 0,open:void 0,close:this.safeString(e,"last_price"),last:this.safeString(e,"last_price"),previousClose:void 0,change:void 0,percentage:this.safeString(a,"price_change"),average:void 0,baseVolume:this.safeString(a,"volume"),quoteVolume:this.safeString(a,"turnover"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={instrument_name:i.id},r=await this.publicGetTickers(this.extend(s,t)),a=this.safeValue(r,"result",{}),n=this.safeValue(a,0);return this.parseTicker(n,i)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={instrument_name:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetGetOrderBook(this.extend(r,i)),n=this.safeValue(a,"result",{}),o=this.safeInteger(n,"timestamp"),d=this.parseOrderBook(n,s.symbol,o);return d.nonce=this.safeInteger(n,"version"),d}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"tick"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);void 0===s&&(s=10);const n={resolution:this.safeString(this.timeframes,t,t)};let o=a.id;if((a.spot||a.margin)&&(o=a.baseId+"-"+a.quoteId),n.instrument_name=o,void 0===i)n.end_timestamp=this.milliseconds(),n.start_timestamp=0;else{const e=1e3*this.parseTimeframe(t);n.start_timestamp=i,n.end_timestamp=this.sum(n.start_timestamp,s*e)}const d=await this.publicGetGetTradingviewChartData(this.extend(n,r)),c=this.safeValue(d,"result",[]);return this.parseOHLCVs(c,a,t,i,s)}parseTrade(e,t=undefined){const i=this.safeString(e,"trade_id"),s=this.safeString(e,"instrument_name"),r=this.safeSymbol(s,t),a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"direction"),o=this.safeString(e,"price"),d=this.safeString(e,"amount"),c=this.safeString(e,"role"),h=this.safeString(e,"fee");let u;if(void 0!==h){const t=this.safeString(e,"fee_coin_type");u={cost:h,currency:this.safeCurrencyCode(t)}}return this.safeTrade({info:e,id:i,timestamp:a,datetime:this.iso8601(a),symbol:r,order:this.safeString(e,"order_id"),type:this.safeString(e,"order_type"),side:n,takerOrMaker:c,price:o,amount:d,cost:void 0,fee:u},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={instrument_name:r.id};void 0!==i&&(a.count=i);const n=await this.publicGetGetLastTradesByInstrument(this.extend(a,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"trades",[]);return this.parseTrades(d,r,t,i)}async signIn(e={}){let t=this.safeString(this.options,"accessToken");if(void 0!==t)return t;this.checkRequiredCredentials();const i={grant_type:"client_credentials",client_id:this.apiKey,client_secret:this.secret},s=await this.publicPostAuth(this.extend(i,e)),r=this.safeValue(s,"result");return t=this.safeString(r,"access_token"),this.options.accessToken=t,t}parseBalance(e){const t={info:e},i=Object.keys(e);for(let s=0;s<i.length;s++){const r=i[s],a=this.safeValue(e,r);if("WALLET"===r||"SPOT"===r){const e=this.safeValue(a,"details");if(void 0!==e)for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"coin_type"),a=this.safeCurrencyCode(r),n=this.safeValue(t,a,this.account());n.free=this.safeString(s,"available"),n.used=this.safeString(s,"freeze"),n.total=this.safeString(s,"total"),t[a]=n}}else{const e="USDT",i=this.account();i.total=this.safeString(a,"wallet_balance"),i.free=this.safeString(a,"available_withdraw_funds"),t[e]=i}}return this.safeBalance(t)}async fetchBalance(e={}){await this.signIn(),await this.loadMarkets();const t=this.safeStringLower(e,"type","spot"),i=this.safeValue(this.options,"accountsByType",{}),s=this.safeString(i,t,t);e=this.omit(e,"type");const r={asset_type:[s]},a=await this.privatePostGetAssetsInfo(this.extend(r,e)),n=this.safeValue(a,"result",[]);return this.parseBalance(n)}parseOrderStatus(e){return this.safeString({open:"open",cancelled:"canceled",filled:"closed",rejected:"rejected"},e,e)}parseTimeInForce(e){if("-"!==e)return this.safeString({good_til_cancelled:"GTC",good_til_date:"GTD",fill_or_kill:"FOK",immediate_or_cancel:"IOC"},e,e)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"creation_timestamp"),s=this.safeInteger(e,"last_update_timestamp"),r=this.safeString(e,"order_id");let a=this.safeString(e,"price");"-1"===a&&(a=void 0);const o=this.safeString(e,"average_price"),d=this.safeString(e,"amount"),c=this.safeString(e,"filled_amount"),h=this.parseOrderStatus(this.safeString(e,"order_state")),u=this.safeString(e,"instrument_name");t=this.safeMarket(u,t);const l=this.safeStringLower(e,"direction");let p,f=this.safeString(e,"commission");void 0!==f&&(f=n.O.stringAbs(f),p={cost:f,currency:t.base});const m=this.safeValue(e,"trades"),v=this.safeNumber(e,"trigger_price");return this.safeOrder({info:e,id:r,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,symbol:t.symbol,type:this.safeString(e,"order_type"),timeInForce:this.parseTimeInForce(this.safeString(e,"time_in_force")),postOnly:this.safeValue(e,"post_only"),side:l,price:this.parseNumber(a),stopPrice:v,triggerPrice:v,stopLossPrice:this.safeNumber(e,"stop_loss_price"),takeProfitPrice:this.safeNumber(e,"take_profit_price"),amount:d,cost:void 0,average:o,filled:c,remaining:void 0,status:h,fee:p,trades:m},t)}async fetchOrder(e,t=undefined,i={}){await this.signIn(),await this.loadMarkets();const s={order_id:e},r=await this.privateGetGetOrderState(this.extend(s,i)),a=this.safeValue(r,"result");return this.parseOrder(a)}async createOrder(e,t,i,s,r=undefined,o={}){await this.signIn(),await this.loadMarkets();const d=this.market(e),c={instrument_name:d.id,type:t};if("sell"!==i&&"limit"!==t||(c.amount=this.amountToPrecision(e,s)),"limit"===t)c.price=this.priceToPrecision(e,r);else{const t=this.safeNumber(o,"cost"),h=this.numberToString(s),u=this.numberToString(r),l=this.parseNumber(n.O.stringMul(h,u),t);if(d.swap)void 0!==l?(c.amount=this.priceToPrecision(e,l),c.market_amount_order=!0):(c.market_amount_order=!1,c.amount=this.amountToPrecision(e,s));else if("buy"===i)if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0===l)throw new a.InvalidOrder(this.id+" createOrder() requires a price argument for market buy orders on spot markets to calculate the total amount to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option to false and pass in the cost to spend into the amount parameter");c.amount=this.priceToPrecision(e,l)}else c.amount=this.priceToPrecision(e,s);o=this.omit(o,"cost")}if(d.swap){const s=this.safeStringUpper(o,"timeInForce");"GTC"===s?c.time_in_force="good_till_cancelled":"FOK"===s?c.time_in_force="fill_or_kill":"IOC"===s&&(c.time_in_force="immediate_or_cancel");const r="market"===t,a=this.safeValue(o,"post_only",!1);this.isPostOnly(r,a,o)&&(c.post_only=!0);const n=this.safeValue(o,"reduceOnly",!1);if(n&&(c.reduce_only=!0),"buy"===i){const e=n?"SHORT":"LONG";c.position_side=e}else{const e=n?"LONG":"SHORT";c.position_side=e}const d=this.safeNumber2(o,"triggerPrice","stopPrice");let h=this.safeNumber(o,"stopLossPrice"),u=this.safeNumber(o,"takeProfitPrice");const l=this.safeValue(o,"stopLoss"),p=this.safeValue(o,"takeProfit");d?(c.condition_type="STOP",c.trigger_price=this.priceToPrecision(e,d),c.trigger_price_type=1):h||u?(c.condition_type="STOP",c.trigger_price=h?this.priceToPrecision(e,h):this.priceToPrecision(e,u),c.reduce_only=!0,c.trigger_price_type=1):(l||p)&&(l?(h=this.safeNumber(l,"price"),c.stop_loss_price=this.priceToPrecision(e,h),c.stop_loss_type=1):(u=this.safeNumber(p,"price"),c.take_profit_price=this.priceToPrecision(e,u),c.take_profit_type=1)),o=this.omit(o,["timeInForce","postOnly","reduceOnly","stopPrice","triggerPrice","stopLossPrice","takeProfitPrice","stopLoss","takeProfit"])}const h="privatePost"+this.capitalize(i),u=await this[h](this.extend(c,o)),l=this.safeValue(u,"result",{}),p=this.safeValue(l,"order");return this.parseOrder(p,d)}async cancelOrder(e,t=undefined,i={}){await this.signIn(),await this.loadMarkets();const s={order_id:e},r=await this.privatePostCancel(this.extend(s,i)),a=this.safeValue(r,"result",{});return this.parseOrder(a)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.signIn(),await this.loadMarkets();const i={instrument_name:this.market(e).id};return await this.privatePostCancelAllByInstrument(this.extend(i,t))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.signIn(),await this.loadMarkets();const r=this.market(e),n={instrument_name:r.id},o=await this.privateGetGetOpenOrdersByInstrument(this.extend(n,s)),d=this.safeValue(o,"result",[]);return this.parseOrders(d,r,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.signIn(),await this.loadMarkets();const r=this.market(e),n={instrument_name:r.id};void 0!==i&&(n.count=i);const o=await this.privateGetGetOrderHistoryByInstrument(this.extend(n,s)),d=this.safeValue(o,"result",[]);return this.parseOrders(d,r,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchOrderTrades() requires a id argument");await this.loadMarkets();const n={order_id:e};void 0!==s&&(n.count=s);const o=await this.privateGetGetUserTradesByOrder(this.extend(n,r)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"trades",[]);return this.parseTrades(c,void 0,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchMyTrades() requires a id argument");await this.signIn(),await this.loadMarkets();const r={},n=this.market(e);r.instrument_name=n.id,void 0!==i&&(r.count=i),void 0!==t&&(r.start_timestamp=t);const o=await this.privateGetGetUserTradesByInstrument(this.extend(r,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"trades",[]);return this.parseTrades(c,n,t,i)}parsePosition(e,t=undefined){const i=this.safeString(e,"instrument_name");t=this.safeMarket(i,t);const s=this.safeString(e,"size");let r=this.safeString(e,"direction");r="buy"===r?"long":"short";const a=this.safeString(e,"maintenance_margin"),o=this.safeString(e,"risk_level"),d=n.O.stringDiv(a,o),c=this.safeString(e,"mark_price"),h=n.O.stringMul(c,s),u=this.safeString(e,"floating_profit_loss"),l=this.safeString(e,"initial_margin"),p=n.O.stringMul(n.O.stringDiv(u,l),"100"),f=this.safeString(e,"margin_type");return{info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:void 0,datetime:void 0,initialMargin:this.parseNumber(l),initialMarginPercentage:this.parseNumber(n.O.stringDiv(l,h)),maintenanceMargin:this.parseNumber(a),maintenanceMarginPercentage:this.parseNumber(n.O.stringDiv(a,h)),entryPrice:this.safeNumber(e,"average_price"),notional:this.parseNumber(h),leverage:this.safeNumber(e,"leverage"),unrealizedPnl:this.parseNumber(u),contracts:this.parseNumber(s),contractSize:this.safeValue(t,"contractSize"),marginRatio:this.parseNumber(o),liquidationPrice:this.safeNumber(e,"liquid_price"),markPrice:this.parseNumber(c),collateral:this.parseNumber(d),marginType:f,side:r,percentage:this.parseNumber(p)}}async fetchPosition(e,t={}){await this.signIn(),await this.loadMarkets();const i={instrument_name:this.market(e).id},s=await this.privateGetGetPosition(this.extend(i,t)),r=this.safeValue(s,"result");return this.parsePosition(r)}async fetchPositions(e=undefined,t={}){await this.signIn(),await this.loadMarkets();const i=await this.privateGetGetPositions(this.extend({currency:"PERPETUAL"},t)),s=this.safeValue(i,"result");return this.parsePositions(s,e)}parseTransactionStatus(e){return this.safeString({deposit_confirmed:"ok",deposit_waiting_confirm:"pending",withdraw_init:"pending",withdraw_noticed_block_chain:"pending",withdraw_waiting_confirm:"pending",withdraw_confirmed:"ok",withdraw_failed:"failed",withdraw_auditing:"pending",withdraw_audit_reject:"failed"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"coin_type"),s=this.safeCurrencyCode(i,t),r=this.safeString(e,"id"),a=this.safeString(e,"tx_hash"),n=this.safeInteger(e,"create_time"),o=this.safeInteger(e,"update_time"),d=this.safeNumber(e,"amount"),c=this.safeString(e,"state");return{info:e,id:r,txid:a,timestamp:n,datetime:this.iso8601(n),network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:void 0,amount:d,currency:s,status:this.parseTransactionStatus(c),updated:o,fee:void 0}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchDeposits() requires the code argument");await this.signIn(),await this.loadMarkets();const r=this.safeCurrency(e),n={coin_type:r.id},o=await this.privateGetGetDepositRecord(this.extend(n,s)),d=this.safeValue(o,"result",[]);return this.parseTransactions(d,r,t,i,{type:"deposit"})}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchWithdrawals() requires the code argument");await this.signIn(),await this.loadMarkets();const r=this.safeCurrency(e),n={coin_type:r.id},o=await this.privateGetGetWithdrawRecord(this.extend(n,s)),d=this.safeValue(o,"result",[]);return this.parseTransactions(d,r,t,i,{type:"withdrawal"})}async fetchWithdrawal(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" fetchWithdrawal() requires the code argument");await this.signIn(),await this.loadMarkets();const s=this.safeCurrency(t),r={coin_type:s.id,withdraw_id:e},n=await this.privateGetGetWithdrawRecord(this.extend(r,i)),o=this.safeValue(n,"result",[]),d=this.filterBy(o,"id",e),c=this.safeValue(d,0);return this.parseTransaction(c,s)}async fetchLeverage(e,t={}){await this.signIn(),await this.loadMarkets();const i={instrument_name:this.market(e).id},s=await this.privateGetGetPerpetualUserConfig(this.extend(i,t)),r=this.safeValue(s,"result",{});return this.safeNumber(r,"leverage")}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new a.BadRequest(this.id+" fetchMarketLeverageTiers() supports swap markets only");const s={instrument_name:i.id},r=await this.publicGetGetPerpetualLeverageBracket(this.extend(s,t)),n=this.safeValue(r,"result",[]);return this.parseMarketLeverageTiers(n,i)}parseMarketLeverageTiers(e,t=undefined){const i=[],s=e;for(let e=0;e<s.length;e++){const r=s[e];i.push({tier:this.safeInteger(r,"bracket"),currency:t.settle,minNotional:this.safeNumber(r,"notionalFloor"),maxNotional:this.safeNumber(r,"notionalCap"),maintenanceMarginRate:this.safeNumber(r,"maintenanceMarginRate"),maxLeverage:this.safeNumber(r,"initialLeverage"),info:r})}return i}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetGetPerpetualLeverageBracketAll(t),s=this.safeValue(i,"result",{});return e=this.marketSymbols(e),this.parseLeverageTiers(s,e,"symbol")}parseLeverageTiers(e,t=undefined,i=undefined){const s={},r={},a=Object.keys(e);for(let i=0;i<a.length;i++){const n=a[i],o=e[n],d=this.safeMarket(n),c=this.safeSymbol(n,d);let h=0;s[c]=this.parseMarketLeverageTiers(o,d),void 0!==t&&(h=t.length,this.inArray(c,t)&&(r[c]=this.parseMarketLeverageTiers(o,d))),void 0===c||0!==h&&!this.inArray(c,t)||(r[c]=this.parseMarketLeverageTiers(o,d))}return r}async setMarginMode(e,t=undefined,i={}){this.checkRequiredSymbol("setMarginMode",t),await this.signIn(),await this.loadMarkets();const s=this.market(t);if(!s.swap)throw new a.BadRequest(this.id+" setMarginMode() supports swap contracts only");if("isolated"!==e&&"isolate"!==e&&"cross"!==e)throw new a.BadRequest(this.id+" marginMode must be either isolated or cross");e="isolated"===e?"isolate":"cross";const r={instrument_name:s.id,margin_type:e};return await this.privatePostAdjustPerpetualMarginType(this.extend(r,i))}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");await this.signIn(),await this.loadMarkets(),this.checkRequiredSymbol("setLeverage",t);const s=this.market(t);if(!s.swap)throw new a.BadRequest(this.id+" setLeverage() supports swap contracts only");if(e<1||e>125)throw new a.BadRequest(this.id+" leverage should be between 1 and 125");const r={instrument_name:s.id,leverage:e};return await this.privatePostAdjustPerpetualLeverage(this.extend(r,i))}async fetchFundingRates(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetCoinGeckoContracts(t),s=this.safeValue(i,"result",[]),r={};for(let t=0;t<s.length;t++){const i=s[t],a=this.safeString(i,"ticker_id"),n=this.safeMarket(a),o=n.symbol;void 0!==e?this.inArray(o,e)&&(r[o]=this.parseFundingRate(i,n)):r[o]=this.parseFundingRate(i,n)}return this.filterByArray(r,"symbol",e)}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e),s=await this.publicGetCoinGeckoContracts(t),r=this.safeValue(s,"result",[]);for(let e=0;e<r.length;e++){const t=r[e];if(this.safeString(t,"ticker_id")===i.id)return this.parseFundingRate(t,i)}return this.parseFundingRate(r,i)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"ticker_id"),s=this.safeInteger(e,"next_funding_rate_timestamp");return{info:e,symbol:this.safeSymbol(i,t),markPrice:void 0,indexPrice:this.safeNumber(e,"index_price"),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"funding_rate"),fundingTimestamp:s,fundingDatetime:this.iso8601(s),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async transfer(e,t,i,s,r={}){await this.signIn(),await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c={coin_type:a.id,amount:this.currencyToPrecision(e,t),from:o,to:d},h=await this.privatePostSubmitTransfer(this.extend(c,r));return this.parseTransfer(h,a)}parseTransfer(e,t=undefined){return{info:e,id:this.safeString(e,"id"),timestamp:void 0,datetime:void 0,currency:void 0,amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async fetchOpenInterest(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.contract)throw new a.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");const s=await this.publicGetCoinGeckoContracts(t),r=this.safeValue(s,"result",[]);for(let e=0;e<r.length;e++){const t=r[e];if(this.safeString(t,"ticker_id")===i.id)return this.parseOpenInterest(t,i)}return this.parseOpenInterest(r,i)}parseOpenInterest(e,t=undefined){const i=this.safeString(e,"ticker_id");t=this.safeMarket(i,t);const s=this.safeNumber(e,"open_interest");return{info:e,symbol:t.symbol,baseVolume:s,quoteVolume:void 0,openInterestAmount:s,openInterestValue:void 0,timestamp:void 0,datetime:void 0}}sign(e,t="public",i="GET",s={},r=undefined,n=undefined){let o="/api/"+this.version+"/"+t+"/"+e;if("public"===t&&Object.keys(s).length&&(o+="?"+this.urlencode(s)),"private"===t){this.checkRequiredCredentials(),"GET"===i&&Object.keys(s).length&&(o+="?"+this.urlencode(s));const d=this.safeString(this.options,"accessToken");if(void 0===d)throw new a.AuthenticationError(this.id+" sign() requires access token");if(r={Authorization:"bearer "+d},"POST"===i&&(r["Content-Type"]="application/json",Object.keys(s).length)){const i={jsonrpc:"2.0",id:this.nonce(),method:"/"+t+"/"+e,params:s};n=this.json(i)}}return{url:this.urls.api.rest+o,method:i,body:n,headers:r}}handleErrors(e,t,i,s,r,n,o,d,c){if(void 0===o)return;const h=this.safeValue(o,"error");if(h){const e=this.id+" "+n,t=this.safeString(h,"code"),i=this.safeString(h,"message");throw this.throwExactlyMatchedException(this.exceptions.exact,t,e),this.throwBroadlyMatchedException(this.exceptions.broad,i,e),new a.ExchangeError(e)}}}},1776:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(806),r=i(6689),a=i(9292),n=i(2194),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"btcmarkets",name:"BTC Markets",countries:["AU"],rateLimit:1e3,version:"v3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:"emulated",fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTime:!0,fetchTrades:!0,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/89731817-b3fb8480-da52-11ea-817f-783b08aaf32b.jpg",api:{public:"https://api.btcmarkets.net",private:"https://api.btcmarkets.net"},www:"https://btcmarkets.net",doc:["https://api.btcmarkets.net/doc/v3","https://github.com/BTCMarkets/API"]},api:{public:{get:["markets","markets/{marketId}/ticker","markets/{marketId}/trades","markets/{marketId}/orderbook","markets/{marketId}/candles","markets/tickers","markets/orderbooks","time"]},private:{get:["orders","orders/{id}","batchorders/{ids}","trades","trades/{id}","withdrawals","withdrawals/{id}","deposits","deposits/{id}","transfers","transfers/{id}","addresses","withdrawal-fees","assets","accounts/me/trading-fees","accounts/me/withdrawal-limits","accounts/me/balances","accounts/me/transactions","reports/{id}"],post:["orders","batchorders","withdrawals","reports"],delete:["orders","orders/{id}","batchorders/{ids}"],put:["orders/{id}"]}},timeframes:{"1m":"1m","1h":"1h","1d":"1d"},precisionMode:a.sh,exceptions:{3:r.InvalidOrder,6:r.DDoSProtection,InsufficientFund:r.InsufficientFunds,InvalidPrice:r.InvalidOrder,InvalidAmount:r.InvalidOrder,MissingArgument:r.InvalidOrder,OrderAlreadyCancelled:r.InvalidOrder,OrderNotFound:r.OrderNotFound,OrderStatusIsFinal:r.InvalidOrder,InvalidPaginationParameter:r.BadRequest},fees:{percentage:!0,tierBased:!0,maker:this.parseNumber("-0.0005"),taker:this.parseNumber("0.0020")},options:{fees:{AUD:{maker:this.parseNumber("0.0085"),taker:this.parseNumber("0.0085")}}}})}async fetchTransactionsWithMethod(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n;void 0!==s&&(a.limit=s),void 0!==i&&(a.after=i),void 0!==t&&(n=this.currency(t));const o=await this[e](this.extend(a,r));return this.parseTransactions(o,n,i,s)}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsWithMethod("privateGetTransfers",e,t,i,s)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsWithMethod("privateGetDeposits",e,t,i,s)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsWithMethod("privateGetWithdrawals",e,t,i,s)}parseTransactionStatus(e){return this.safeString({Accepted:"pending","Pending Authorization":"pending",Complete:"ok",Cancelled:"cancelled",Failed:"failed"},e,e)}parseTransactionType(e){return this.safeString({Withdraw:"withdrawal",Deposit:"deposit"},e,e)}parseTransaction(e,t=undefined){const i=this.parse8601(this.safeString(e,"creationTime")),s=this.parse8601(this.safeString(e,"lastUpdate"));let r=this.parseTransactionType(this.safeStringLower(e,"type"));"withdraw"===r&&(r="withdrawal");const a=this.safeValue(e,"paymentDetail",{}),n=this.safeString(a,"txId");let o,d=this.safeString(a,"address");if(void 0!==d){const e=d.split("?dt=");e.length>1&&(d=e[0],o=e[1])}const c=d,h=o,u=this.safeNumber(e,"fee"),l=this.parseTransactionStatus(this.safeString(e,"status")),p=this.safeString(e,"assetName"),f=this.safeCurrencyCode(p);let m=this.safeNumber(e,"amount");return u&&(m-=u),{id:this.safeString(e,"id"),txid:n,timestamp:i,datetime:this.iso8601(i),network:void 0,address:d,addressTo:c,addressFrom:void 0,tag:o,tagTo:h,tagFrom:void 0,type:r,amount:m,currency:f,status:l,updated:s,comment:void 0,fee:{currency:f,cost:u,rate:void 0},info:e}}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"baseAssetName"),a=this.safeString(s,"quoteAssetName"),n=this.safeString(s,"marketId"),o=this.safeCurrencyCode(r),d=this.safeCurrencyCode(a),c=o+"/"+d,h=this.safeValue(this.safeValue(this.options,"fees",{}),d,this.fees),u=this.parseNumber(this.parsePrecision(this.safeString(s,"priceDecimals"))),l=this.safeNumber(s,"minOrderAmount"),p=this.safeNumber(s,"maxOrderAmount");let f;"AUD"===d&&(f=u),i.push({id:n,symbol:c,base:o,quote:d,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:h.taker,maker:h.maker,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"amountDecimals"))),price:u},limits:{leverage:{min:void 0,max:void 0},amount:{min:l,max:p},price:{min:f,max:void 0},cost:{min:void 0,max:void 0}},info:s})}return i}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.parse8601(this.safeString(t,"timestamp"))}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"assetName"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(s,"locked"),n.total=this.safeString(s,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountsMeBalances(e);return this.parseBalance(t)}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,0)),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={marketId:a.id,timeWindow:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.from=this.iso8601(i)),void 0!==s&&(n.limit=s);const o=await this.publicGetMarketsMarketIdCandles(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={marketId:this.market(e).id},r=await this.publicGetMarketsMarketIdOrderbook(this.extend(s,i)),a=this.safeIntegerProduct(r,"snapshotId",.001),n=this.parseOrderBook(r,e,a);return n.nonce=this.safeInteger(r,"snapshotId"),n}parseTicker(e,t=undefined){const i=this.safeString(e,"marketId"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"lastPrice"),n=this.safeString(e,"volume24h"),o=this.safeString(e,"volumeQte24h"),d=this.safeString(e,"price24h"),c=this.safeString(e,"pricePct24h");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high24h"),low:this.safeString(e,"low"),bid:this.safeString(e,"bestBid"),bidVolume:void 0,ask:this.safeString(e,"bestAsk"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:d,percentage:c,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={marketId:i.id},r=await this.publicGetMarketsMarketIdTicker(this.extend(s,t));return this.parseTicker(r,i)}async fetchTicker2(e,t={}){await this.loadMarkets();const i=this.market(e),s={id:i.id},r=await this.publicGetMarketsMarketIdTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString(e,"timestamp")),s=this.safeString(e,"marketId"),r="AUD"===(t=this.safeMarket(s,t,"-")).quote?t.quote:t.base;let a=this.safeString(e,"side");"Bid"===a?a="buy":"Ask"===a&&(a="sell");const n=this.safeString(e,"id"),o=this.safeString(e,"price"),d=this.safeString(e,"amount"),c=this.safeString(e,"orderId");let h;const u=this.safeString(e,"fee");void 0!==u&&(h={cost:u,currency:r});const l=this.safeStringLower(e,"liquidityType");return this.safeTrade({info:e,id:n,timestamp:i,datetime:this.iso8601(i),order:c,symbol:t.symbol,type:void 0,side:a,price:o,amount:d,cost:void 0,takerOrMaker:l,fee:h},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={marketId:r.id},n=await this.publicGetMarketsMarketIdTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d={marketId:o.id,amount:this.amountToPrecision(e,s),side:"buy"===i?"Bid":"Ask"},c=t.toLowerCase(),h=this.safeValue(this.options,"orderTypes",{limit:"Limit",market:"Market",stop:"Stop","stop limit":"Stop Limit","take profit":"Take Profit"});d.type=this.safeString(h,c,t);let u=!1,l=!1;if("limit"===c?u=!0:"stop limit"===c?(l=!0,u=!0):("take profit"===c||"stop"===c)&&(l=!0),u){if(void 0===a)throw new r.ArgumentsRequired(this.id+" createOrder() requires a price argument for a "+t+"order");d.price=this.priceToPrecision(e,a)}if(l){const i=this.safeNumber(n,"triggerPrice");if(n=this.omit(n,"triggerPrice"),void 0===i)throw new r.ArgumentsRequired(this.id+" createOrder() requires a triggerPrice parameter for a "+t+"order");d.triggerPrice=this.priceToPrecision(e,i)}const p=this.safeString(n,"clientOrderId");void 0!==p&&(d.clientOrderId=p),n=this.omit(n,"clientOrderId");const f=await this.privatePostOrders(this.extend(d,n));return this.parseOrder(f,o)}async cancelOrders(e,t=undefined,i={}){await this.loadMarkets();for(let t=0;t<e.length;t++)e[t]=parseInt(e[t]);const s={ids:e};return await this.privateDeleteBatchordersIds(this.extend(s,i))}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e};return await this.privateDeleteOrdersId(this.extend(s,i))}calculateFee(e,t,i,s,r,a="taker",o={}){const d=this.markets[e];let c,h;if("AUD"===d.quote){c=d.quote;const t=this.numberToString(s),i=this.numberToString(r),a=n.O.stringMul(t,i);h=this.costToPrecision(e,a)}else c=d.base,h=this.amountToPrecision(e,s);const u=d[a],l=n.O.stringMul(this.numberToString(u),h);return{type:a,currency:c,rate:u,cost:parseFloat(this.feeToPrecision(e,l))}}parseOrderStatus(e){return this.safeString({Accepted:"open",Placed:"open","Partially Matched":"open","Fully Matched":"closed",Cancelled:"canceled","Partially Cancelled":"canceled",Failed:"rejected"},e,e)}parseOrder(e,t=undefined){const i=this.parse8601(this.safeString(e,"creationTime")),s=this.safeString(e,"marketId");t=this.safeMarket(s,t,"-");let r=this.safeString(e,"side");"Bid"===r?r="buy":"Ask"===r&&(r="sell");const a=this.safeStringLower(e,"type"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),d=this.safeString(e,"openAmount"),c=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeString(e,"orderId"),u=this.safeString(e,"clientOrderId"),l=this.safeString(e,"timeInForce"),p=this.safeNumber(e,"triggerPrice"),f=this.safeValue(e,"postOnly");return this.safeOrder({info:e,id:h,clientOrderId:u,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:t.symbol,type:a,timeInForce:l,postOnly:f,side:r,price:n,stopPrice:p,triggerPrice:p,cost:void 0,amount:o,filled:void 0,remaining:d,average:void 0,status:c,trades:void 0,fee:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetOrdersId(this.extend(s,i));return this.parseOrder(r)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={status:"all"};let a;void 0!==e&&(a=this.market(e),r.marketId=a.id),void 0!==t&&(r.after=t),void 0!==i&&(r.limit=i);const n=await this.privateGetOrders(this.extend(r,s));return this.parseOrders(n,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"open"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){const r=await this.fetchOrders(e,t,i,s);return this.filterBy(r,"status","closed")}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.marketId=a.id),void 0!==t&&(r.after=t),void 0!==i&&(r.limit=i);const n=await this.privateGetTrades(this.extend(r,s));return this.parseTrades(n,a,t,i)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();const a=this.currency(e),n={currency_id:a.id,amount:this.currencyToPrecision(e,t)};"AUD"!==e&&(this.checkAddress(i),n.toAddress=i),void 0!==s&&(n.toAddress=i+"?dt="+s);const o=await this.privatePostWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/"+this.version+"/"+this.implodeParams(e,s);const d=this.keysort(this.omit(s,this.extractParams(e)));if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.base64ToBinary(this.secret);let s=i+n+e;"GET"===i||"DELETE"===i?Object.keys(d).length&&(n+="?"+this.urlencode(d)):s+=a=this.json(d);const c=this.hmac(this.encode(s),t,o.o,"base64");r={Accept:"application/json","Accept-Charset":"UTF-8","Content-Type":"application/json","BM-AUTH-APIKEY":this.apiKey,"BM-AUTH-TIMESTAMP":e,"BM-AUTH-SIGNATURE":c}}else"public"===t&&Object.keys(d).length&&(n+="?"+this.urlencode(d));return{url:this.urls.api[t]+n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o){if("success"in o&&!o.success){const e=this.safeString(o,"errorCode"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,t),new r.ExchangeError(t)}if(e>=400){const e=this.safeString(o,"code"),t=this.safeString(o,"message"),i=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,i),this.throwExactlyMatchedException(this.exceptions,t,i),new r.ExchangeError(i)}}}}},8776:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2003),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"btctradeua",name:"BTC Trade UA",countries:["UA"],rateLimit:3e3,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0},urls:{referral:"https://btc-trade.com.ua/registration/22689",logo:"https://user-images.githubusercontent.com/1294454/27941483-79fc7350-62d9-11e7-9f61-ac47f28fcd96.jpg",api:{rest:"https://btc-trade.com.ua/api"},www:"https://btc-trade.com.ua",doc:"https://docs.google.com/document/d/1ocYA0yMy_RXd561sfG3qEPZ80kyll36HUxvCRe5GbhE/edit"},api:{public:{get:["deals/{symbol}","trades/sell/{symbol}","trades/buy/{symbol}","japan_stat/high/{symbol}"]},private:{post:["auth","ask/{symbol}","balance","bid/{symbol}","buy/{symbol}","my_orders/{symbol}","order/status/{id}","remove/order/{id}","sell/{symbol}"]}},precisionMode:n.sh,markets:{"BCH/UAH":{id:"bch_uah",symbol:"BCH/UAH",base:"BCH",quote:"UAH",baseId:"bch",quoteId:"uah",type:"spot",spot:!0},"BTC/UAH":{id:"btc_uah",symbol:"BTC/UAH",base:"BTC",quote:"UAH",baseId:"btc",quoteId:"uah",precision:{price:this.parseNumber("1e-1")},limits:{amount:{min:this.parseNumber("1e-10")}},type:"spot",spot:!0},"DASH/BTC":{id:"dash_btc",symbol:"DASH/BTC",base:"DASH",quote:"BTC",baseId:"dash",quoteId:"btc",type:"spot",spot:!0},"DASH/UAH":{id:"dash_uah",symbol:"DASH/UAH",base:"DASH",quote:"UAH",baseId:"dash",quoteId:"uah",type:"spot",spot:!0},"DOGE/BTC":{id:"doge_btc",symbol:"DOGE/BTC",base:"DOGE",quote:"BTC",baseId:"doge",quoteId:"btc",type:"spot",spot:!0},"DOGE/UAH":{id:"doge_uah",symbol:"DOGE/UAH",base:"DOGE",quote:"UAH",baseId:"doge",quoteId:"uah",type:"spot",spot:!0},"ETH/UAH":{id:"eth_uah",symbol:"ETH/UAH",base:"ETH",quote:"UAH",baseId:"eth",quoteId:"uah",type:"spot",spot:!0},"ITI/UAH":{id:"iti_uah",symbol:"ITI/UAH",base:"ITI",quote:"UAH",baseId:"iti",quoteId:"uah",type:"spot",spot:!0},"KRB/UAH":{id:"krb_uah",symbol:"KRB/UAH",base:"KRB",quote:"UAH",baseId:"krb",quoteId:"uah",type:"spot",spot:!0},"LTC/BTC":{id:"ltc_btc",symbol:"LTC/BTC",base:"LTC",quote:"BTC",baseId:"ltc",quoteId:"btc",type:"spot",spot:!0},"LTC/UAH":{id:"ltc_uah",symbol:"LTC/UAH",base:"LTC",quote:"UAH",baseId:"ltc",quoteId:"uah",type:"spot",spot:!0},"NVC/BTC":{id:"nvc_btc",symbol:"NVC/BTC",base:"NVC",quote:"BTC",baseId:"nvc",quoteId:"btc",type:"spot",spot:!0},"NVC/UAH":{id:"nvc_uah",symbol:"NVC/UAH",base:"NVC",quote:"UAH",baseId:"nvc",quoteId:"uah",type:"spot",spot:!0},"PPC/BTC":{id:"ppc_btc",symbol:"PPC/BTC",base:"PPC",quote:"BTC",baseId:"ppc",quoteId:"btc",type:"spot",spot:!0},"SIB/UAH":{id:"sib_uah",symbol:"SIB/UAH",base:"SIB",quote:"UAH",baseId:"sib",quoteId:"uah",type:"spot",spot:!0},"XMR/UAH":{id:"xmr_uah",symbol:"XMR/UAH",base:"XMR",quote:"UAH",baseId:"xmr",quoteId:"uah",type:"spot",spot:!0},"ZEC/UAH":{id:"zec_uah",symbol:"ZEC/UAH",base:"ZEC",quote:"UAH",baseId:"zec",quoteId:"uah",type:"spot",spot:!0}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")}}})}async signIn(e={}){return await this.privatePostAuth(e)}parseBalance(e){const t={info:e},i=this.safeValue(e,"accounts",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id},a=await this.publicGetTradesBuySymbol(this.extend(r,i)),n=await this.publicGetTradesSellSymbol(this.extend(r,i)),o={bids:[],asks:[]};return a&&"list"in a&&(o.bids=a.list),n&&"list"in n&&(o.asks=n.list),this.parseOrderBook(o,s.symbol,void 0,"bids","asks","price","currency_trade")}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.milliseconds(),r={symbol:i,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},n=e.length;if(n>0){for(let t=Math.max(n-48,0);t<e.length;t++){const i=e[t];void 0===r.open&&(r.open=this.safeString(i,1));const s=this.safeString(i,2);(void 0===r.high||void 0!==s&&a.O.stringLt(r.high,s))&&(r.high=s);const n=this.safeString(i,3);(void 0===r.low||void 0!==n&&a.O.stringLt(r.low,n))&&(r.low=n);const o=this.safeString(i,5);void 0===r.baseVolume?r.baseVolume=o:r.baseVolume=a.O.stringAdd(r.baseVolume,o)}const t=n-1;r.last=this.safeString(e[t],4),r.close=r.last}return this.safeTicker(r,t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetJapanStatHighSymbol(this.extend(s,t)),a=this.safeValue(r,"trades");return this.parseTicker(a,i)}convertMonthNameToString(e){return this.safeString({Jan:"01",Feb:"02",Mar:"03",Apr:"04",May:"05",Jun:"06",Jul:"07",Aug:"08",Sept:"09",Oct:"10",Nov:"11",Dec:"12"},e)}parseExchangeSpecificDatetime(e){const t=e.split(" ");let i=t[0],s=t[1].replace(",","");s.length<2&&(s="0"+s);const a=t[2].replace(",","");if(i=i.replace(",",""),i=i.replace(".",""),i=this.convertMonthNameToString(i),!i)throw new r.ExchangeError(this.id+" parseTrade() unrecognized month name: "+e);const n=t[3].split(":");let o=this.safeString(n,0),d="00";const c=this.safeString(t,4);if("noon"===o)o="12";else{let e=parseInt(o);void 0!==c&&"p"===c[0]&&(e=12+e,e>23&&(e=0)),o=e.toString(),o.length<2&&(o="0"+o),d=this.safeString(n,1,"00"),d.length<2&&(d="0"+d)}const h=[a,i,s].join("-")+"T"+o+":"+d+":00",u=this.parse8601(h),l=parseInt(d);return l<11||l>2?u-72e5:u-108e5}parseTrade(e,t=undefined){const i=this.parseExchangeSpecificDatetime(this.safeString(e,"pub_date")),s=this.safeString(e,"id"),r=this.safeString(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"amnt_trade");return t=this.safeMarket(void 0,t),this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:"limit",side:r,order:void 0,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetDealsSymbol(this.extend(a,s)),o=[];for(let e=0;e<n.length;e++)this.safeInteger(n[e],"id")%2&&o.push(n[e]);return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){if("market"===t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e),d="privatePost"+this.capitalize(i)+"Id",c={count:s,currency1:o.quoteId,currency:o.baseId,price:a};return this[d](this.extend(c,n))}async cancelOrder(e,t=undefined,i={}){const s={id:e};return await this.privatePostRemoveOrderId(this.extend(s,i))}parseOrder(e,t=undefined){const i=this.milliseconds(),s=this.safeSymbol(void 0,t),r=this.safeString(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"amnt_trade"),o=this.safeString(e,"amnt_trade");return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:"open",symbol:s,type:void 0,timeInForce:void 0,postOnly:void 0,side:r,price:a,stopPrice:void 0,triggerPrice:void 0,amount:n,filled:void 0,remaining:o,trades:void 0,info:e,cost:void 0,average:void 0,fee:void 0},t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id},o=await this.privatePostMyOrdersSymbol(this.extend(n,s)),d=this.safeValue(o,"your_open_orders");return this.parseOrders(d,a,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+=this.implodeParams(e,d));else{this.checkRequiredCredentials();const e=this.nonce(),t=(a=this.urlencode(this.extend({out_order_id:e,nonce:e},d)))+this.secret;r={"public-key":this.apiKey,"api-sign":this.hash(this.encode(t),o.J),"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:a,headers:r}}}},6304:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(1698),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"btcturk",name:"BTCTurk",countries:["TR"],rateLimit:100,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},timeframes:{"1m":1,"15m":15,"30m":30,"1h":60,"4h":240,"1d":"1 day","1w":"1 week","1y":"1 year"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87153926-efbef500-c2c0-11ea-9842-05b63612c4b9.jpg",api:{public:"https://api.btcturk.com/api/v2",private:"https://api.btcturk.com/api/v1",graph:"https://graph-api.btcturk.com/v1"},www:"https://www.btcturk.com",doc:"https://github.com/BTCTrader/broker-api-docs"},api:{public:{get:{orderbook:1,ticker:.1,trades:1,"server/exchangeinfo":1}},private:{get:{"users/balances":1,openOrders:1,allOrders:1,"users/transactions/trade":1},post:{order:1,cancelOrder:1},delete:{order:1}},graph:{get:{ohlcs:1,"klines/history":1}}},fees:{trading:{maker:this.parseNumber("0.0005"),taker:this.parseNumber("0.0009")}},exceptions:{exact:{FAILED_ORDER_WITH_OPEN_ORDERS:r.InsufficientFunds,FAILED_LIMIT_ORDER:r.InvalidOrder,FAILED_MARKET_ORDER:r.InvalidOrder}},precisionMode:n.sh})}async fetchMarkets(e={}){const t=await this.publicGetServerExchangeinfo(e),i=this.safeValue(t,"data"),s=this.safeValue(i,"symbols",[]),r=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"name"),a=this.safeString(t,"numerator"),n=this.safeString(t,"denominator"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=this.safeValue(t,"filters",[]);let h,u,l,p,f;for(let e=0;e<c.length;e++){const t=c[e];"PRICE_FILTER"===this.safeString(t,"filterType")&&(h=this.safeNumber(t,"minPrice"),u=this.safeNumber(t,"maxPrice"),l=this.safeNumber(t,"minAmount"),p=this.safeNumber(t,"maxAmount"),f=this.safeNumber(t,"minExchangeValue"))}const m=this.safeString(t,"status");r.push({id:i,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"TRADING"===m,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"numeratorScale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"denominatorScale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:l,max:p},price:{min:h,max:u},cost:{min:f,max:void 0}},info:t})}return r}parseBalance(e){const t=this.safeValue(e,"data",[]),i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.free=this.safeString(s,"free"),n.used=this.safeString(s,"locked"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUsersBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pairSymbol:s.id},a=await this.publicGetOrderbook(this.extend(r,i)),n=this.safeValue(a,"data"),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,s.symbol,o,"bids","asks",0,1)}parseTicker(e,t=undefined){const i=this.safeString(e,"pair"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeInteger(e,"timestamp"),a=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:this.safeString(e,"daily"),percentage:this.safeString(e,"dailyPercent"),average:this.safeString(e,"average"),baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTicker(t),s=this.safeValue(i,"data");return this.parseTickers(s,e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=await this.fetchTickers([e],t);return this.safeValue(i,e)}parseTrade(e,t=undefined){const i=this.safeInteger2(e,"date","timestamp"),s=this.safeString2(e,"tid","id"),r=this.safeString(e,"orderId"),n=this.safeString(e,"price"),o=a.O.stringAbs(this.safeString(e,"amount")),d=this.safeString(e,"pair"),c=this.safeSymbol(d,t),h=this.safeString2(e,"side","orderType");let u;const l=this.safeString(e,"fee");if(void 0!==l){const t=this.safeString(e,"denominatorSymbol");u={cost:a.O.stringAbs(l),currency:this.safeCurrencyCode(t)}}return this.safeTrade({info:e,id:s,order:r,timestamp:i,datetime:this.iso8601(i),symbol:c,type:void 0,side:h,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:u},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pairSymbol:r.id};void 0!==i&&(a.last=i);const n=await this.publicGetTrades(this.extend(a,s)),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1h",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={symbol:n.id,resolution:this.safeValue(this.timeframes,t,t)},d=this.safeInteger(a,"until",this.milliseconds());if(o.to=this.parseToInt(d/1e3),void 0!==i?o.from=this.parseToInt(i/1e3):void 0===s&&(s=100),void 0!==s){if("1y"===t)throw new r.BadRequest(this.id+' fetchOHLCV () does not accept a limit parameter when timeframe == "1y"');const e=this.parseTimeframe(t)*(s-1);if(void 0!==i){const t=this.parseToInt(i/1e3)+e;o.to=Math.min(o.to,t)}else o.from=this.parseToInt(d/1e3)-e}const c=await this.graphGetKlinesHistory(this.extend(o,a));return this.parseOHLCVs(c,n,t,i,s)}parseOHLCVs(e,t=undefined,i="1m",s=undefined,r=undefined){const a=[],n=this.safeValue(e,"t"),o=this.safeValue(e,"h"),d=this.safeValue(e,"o"),c=this.safeValue(e,"l"),h=this.safeValue(e,"c"),u=this.safeValue(e,"v");for(let e=0;e<n.length;e++){const i={timestamp:this.safeValue(n,e),high:this.safeValue(o,e),open:this.safeValue(d,e),low:this.safeValue(c,e),close:this.safeValue(h,e),volume:this.safeValue(u,e)};a.push(this.parseOHLCV(i,t))}const l=this.sortBy(a,0),p=void 0===s;return this.filterBySinceLimit(l,s,r,0,p)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={orderType:i,orderMethod:t,pairSymbol:n.id,quantity:this.amountToPrecision(e,s)};"market"!==t&&(o.price=this.priceToPrecision(e,r)),"clientOrderId"in a?o.newClientOrderId=a.clientOrderId:"newClientOrderId"in a||(o.newClientOrderId=this.uuid());const d=await this.privatePostOrder(this.extend(o,a)),c=this.safeValue(d,"data");return this.parseOrder(c,n)}async cancelOrder(e,t=undefined,i={}){const s={id:e};return await this.privateDeleteOrder(this.extend(s,i))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.pairSymbol=a.id);const n=await this.privateGetOpenOrders(this.extend(r,s)),o=this.safeValue(n,"data"),d=this.safeValue(o,"bids",[]),c=this.safeValue(o,"asks",[]);return this.parseOrders(this.arrayConcat(d,c),a,t,i)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pairSymbol:r.id};void 0!==i&&(a.last=i),void 0!==t&&(a.startTime=Math.floor(t/1e3));const n=await this.privateGetAllOrders(this.extend(a,s)),o=this.safeValue(n,"data");return this.parseOrders(o,r,t,i)}parseOrderStatus(e){return this.safeString({Untouched:"open",Partial:"open",Canceled:"canceled",Closed:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"price"),r=this.safeString2(e,"amount","quantity"),n=a.O.stringAbs(r),o=this.safeString(e,"leftAmount"),d=this.safeString(e,"pairSymbol"),c=this.safeSymbol(d,t),h=this.safeString(e,"type"),u=this.safeString(e,"method"),l=this.safeString(e,"orderClientId"),p=this.safeInteger2(e,"updateTime","datetime"),f=this.safeString(e,"status"),m=this.parseOrderStatus(f);return this.safeOrder({info:e,id:i,price:s,amount:n,remaining:o,filled:void 0,cost:void 0,average:void 0,status:m,side:h,type:u,clientOrderId:l,timestamp:p,datetime:this.iso8601(p),symbol:c,fee:void 0},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privateGetUsersTransactionsTrade(),n=this.safeValue(a,"data");return this.parseTrades(n,r,t,i)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},a=undefined,n=undefined){if("btctrader"===this.id)throw new r.ExchangeError(this.id+" is an abstract base API for BTCExchange, BTCTurk");let d=this.urls.api[t]+"/"+e;if("GET"===i||"DELETE"===i?Object.keys(s).length&&(d+="?"+this.urlencode(s)):n=this.json(s),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.base64ToBinary(this.secret),i=this.apiKey+e;a={"X-PCK":this.apiKey,"X-Stamp":e,"X-Signature":this.hmac(this.encode(i),t,o.J,"base64"),"Content-Type":"application/json"}}return{url:d,method:i,body:n,headers:a}}handleErrors(e,t,i,s,a,n,o,d,c){const h=this.safeString(o,"code","0"),u=this.safeString(o,"message"),l=void 0===u?n:u;if(this.throwExactlyMatchedException(this.exceptions.exact,u,this.id+" "+l),"0"!==h&&"SUCCESS"!==h)throw new r.ExchangeError(this.id+" "+l)}}},5396:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5740),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"buda",name:"Buda",countries:["AR","CL","CO","PE"],rateLimit:1e3,version:"v2",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/47380619-8a029200-d706-11e8-91e0-8a391fe48de3.jpg",api:{rest:"https://www.buda.com/api"},www:"https://www.buda.com",doc:"https://api.buda.com",fees:"https://www.buda.com/comisiones"},status:{status:"error",updated:void 0,eta:void 0,url:void 0},api:{public:{get:["pairs","markets","currencies","markets/{market}","markets/{market}/ticker","markets/{market}/volume","markets/{market}/order_book","markets/{market}/trades","currencies/{currency}/fees/deposit","currencies/{currency}/fees/withdrawal","tv/history"],post:["markets/{market}/quotations"]},private:{get:["balances","balances/{currency}","currencies/{currency}/balances","orders","orders/{id}","markets/{market}/orders","deposits","currencies/{currency}/deposits","withdrawals","currencies/{currency}/withdrawals","currencies/{currency}/receive_addresses","currencies/{currency}/receive_addresses/{id}"],post:["markets/{market}/orders","currencies/{currency}/deposits","currencies/{currency}/withdrawals","currencies/{currency}/simulated_withdrawals","currencies/{currency}/receive_addresses"],put:["orders/{id}"]}},timeframes:{"1m":"1","5m":"5","30m":"30","1h":"60","2h":"120","1d":"D","1w":"W"},fees:{trading:{tierBased:!0,percentage:!0,taker:.008,maker:.004,tiers:{taker:[[0,.008],[2e3,.007],[2e4,.006],[1e5,.005],[5e5,.004],[25e5,.003],[125e5,.002]],maker:[[0,.004],[2e3,.0035],[2e4,.003],[1e5,.0025],[5e5,.002],[25e5,.0015],[125e5,.001]]}}},precisionMode:n.sh,exceptions:{not_authorized:r.AuthenticationError,forbidden:r.PermissionDenied,invalid_record:r.ExchangeError,not_found:r.ExchangeError,parameter_missing:r.ExchangeError,bad_parameter:r.ExchangeError}})}async fetchCurrencyInfo(e,t=undefined){if(!t){const e=await this.publicGetCurrencies();t=this.safeValue(e,"currencies")}for(let i=0;i<t.length;i++){const s=t[i];if(s.id===e)return s}}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),i=this.safeValue(t,"markets",[]),s=await this.publicGetCurrencies(),r=this.safeValue(s,"currencies"),n=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"base_currency"),o=this.safeString(t,"quote_currency"),d=this.safeCurrencyCode(s),c=this.safeCurrencyCode(o),h=await this.fetchCurrencyInfo(s,r),u=await this.fetchCurrencyInfo(o,r),l=this.safeValue(t,"minimum_order_amount",[]),p=this.safeString(t,"taker_fee"),f=this.safeString(t,"maker_fee");n.push({id:this.safeString(t,"id"),symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:s,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,taker:this.parseNumber(a.O.stringDiv(p,"1000")),maker:this.parseNumber(a.O.stringDiv(f,"1000")),precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(h,"input_decimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(u,"input_decimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(l,0),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return n}async fetchCurrencies(e={}){const t=(await this.publicGetCurrencies()).currencies,i={};for(let e=0;e<t.length;e++){const s=t[e];if(!this.safeValue(s,"managed",!1))continue;const r=this.safeString(s,"id"),a=this.safeCurrencyCode(r),n=this.parseNumber(this.parsePrecision(this.safeString(s,"input_decimals"))),o=this.safeValue(s,"deposit_minimum",[]),d=this.safeValue(s,"withdrawal_minimum",[]),c=this.safeNumber(o,0),h=this.safeNumber(d,0);i[a]={id:r,code:a,info:s,name:void 0,active:!0,deposit:void 0,withdraw:void 0,fee:void 0,precision:n,limits:{amount:{min:n,max:void 0},deposit:{min:c,max:void 0},withdraw:{min:h}}}}return i}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i={},s={},r={};void 0===e&&(e=Object.keys(this.currencies));for(let t=0;t<e.length;t++){const a=e[t],n={currency:this.currency(a).id},o=await this.publicGetCurrenciesCurrencyFeesWithdrawal(n),d=await this.publicGetCurrenciesCurrencyFeesDeposit(n);i[a]=this.parseTransactionFee(o.fee),s[a]=this.parseTransactionFee(d.fee),r[a]={withdraw:o,deposit:d}}return{withdraw:i,deposit:s,info:r}}parseTransactionFee(e,t=undefined){return void 0===t&&(t=e.name),"withdrawal"===t&&(t="withdraw"),{type:t,currency:e.base[1],rate:e.percent,cost:parseFloat(e.base[0])}}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={market:i.id},r=await this.publicGetMarketsMarketTicker(this.extend(s,t)),a=this.safeValue(r,"ticker");return this.parseTicker(a,i)}parseTicker(e,t=undefined){const i=this.milliseconds(),s=this.safeString(e,"market_id"),r=this.safeSymbol(s,t,"-"),n=this.safeValue(e,"last_price",[]),o=this.safeString(n,0);let d=this.safeString(e,"price_variation_24h");d=a.O.stringMul(d,"100");const c=this.safeValue(e,"max_bid",[]),h=this.safeValue(e,"min_ask",[]),u=this.safeValue(e,"volume",[]);return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeString(c,0),bidVolume:void 0,ask:this.safeString(h,0),askVolume:void 0,vwap:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:d,average:void 0,baseVolume:this.safeString(u,0),quoteVolume:void 0,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetMarketsMarketTrades(this.extend(a,s));return this.parseTrades(n.trades.entries,r,t,i)}parseTrade(e,t=undefined){let i,s,r,a,n,o;return t&&(o=t.symbol),Array.isArray(e)&&(i=this.safeInteger(e,0),r=this.safeString(e,1),a=this.safeString(e,2),s=this.safeString(e,3),n=this.safeString(e,4)),this.safeTrade({id:n,order:void 0,info:e,timestamp:i,datetime:this.iso8601(i),symbol:o,type:void 0,side:s,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:void 0},t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={market:s.id},a=await this.publicGetMarketsMarketOrderBook(this.extend(r,i)),n=this.safeValue(a,"order_book");return this.parseOrderBook(n,s.symbol)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);void 0===i&&(i=this.milliseconds()-864e5);const n={symbol:a.id,resolution:this.safeString(this.timeframes,t,t),from:i/1e3,to:this.seconds()},o=await this.publicGetTvHistory(this.extend(n,r));return this.parseTradingViewOHLCV(o,a,t,i,s)}parseBalance(e){const t={info:e},i=this.safeValue(e,"balances",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"id"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s.available_amount,0),n.total=this.safeString(s.amount,0),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalances(e);return this.parseBalance(t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:parseInt(e)},r=await this.privateGetOrdersId(this.extend(s,i)),a=this.safeValue(r,"order");return this.parseOrder(a)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={market:r.id,per:i},n=await this.privateGetMarketsMarketOrders(this.extend(a,s)),o=this.safeValue(n,"orders");return this.parseOrders(o,r,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({state:"pending"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({state:"traded"},s))}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets(),i="buy"===i?"Bid":"Ask";const n={market:this.market(e).id,price_type:t,type:i,amount:this.amountToPrecision(e,s)};"limit"===t&&(n.limit=this.priceToPrecision(e,r));const o=await this.privatePostMarketsMarketOrders(this.extend(n,a)),d=this.safeValue(o,"order");return this.parseOrder(d)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:parseInt(e),state:"canceling"},r=await this.privatePutOrdersId(this.extend(s,i)),a=this.safeValue(r,"order");return this.parseOrder(a)}parseOrderStatus(e){return this.safeString({traded:"closed",received:"open",canceling:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.parse8601(this.safeString(e,"created_at")),r=this.iso8601(s),a=this.safeString(e,"market_id"),n=this.safeSymbol(a,t,"-"),o=this.safeString(e,"price_type"),d=this.safeStringLower(e,"type"),c=this.parseOrderStatus(this.safeString(e,"state")),h=this.safeValue(e,"original_amount",[]),u=this.safeString(h,0),l=this.safeValue(e,"amount",[]),p=this.safeString(l,0),f=this.safeValue(e,"traded_amount",[]),m=this.safeString(f,0),v=this.safeValue(e,"total_exchanged",[]),g=this.safeString(v,0),y=this.safeValue(e,"limit",[]);let b=this.safeString(y,0);void 0===b&&void 0!==y&&(b=y);const w=this.safeValue(e,"paid_fee",[]),S=this.safeString(w,0);let P;if(void 0!==S){const e=this.safeString(w,1),t=this.safeCurrencyCode(e);P={cost:S,code:t,currency:t}}return this.safeOrder({info:e,id:i,clientOrderId:void 0,datetime:r,timestamp:s,lastTradeTimestamp:void 0,status:c,symbol:n,type:o,timeInForce:void 0,postOnly:void 0,side:d,price:b,stopPrice:void 0,triggerPrice:void 0,average:void 0,cost:g,amount:u,filled:m,remaining:p,trades:void 0,fee:P},t)}isFiat(e){return this.safeValue({ARS:!0,CLP:!0,COP:!0,PEN:!0},e,!1)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e);if(this.isFiat(e))throw new r.NotSupported(this.id+" fetchDepositAddress() for fiat "+e+" is not supported");const s={currency:i.id},a=await this.privateGetCurrenciesCurrencyReceiveAddresses(this.extend(s,t)),n=this.safeValue(a,"receive_addresses"),o=[];for(let e=1;e<n.length;e++){const t=n[e];if(t.ready){const e=t.address;this.checkAddress(e),o.push(e)}}if(o.length<1)throw new r.AddressPending(this.id+": there are no addresses ready for receiving "+e+", retry again later)");return{currency:e,address:o[0],tag:void 0,network:void 0,info:n}}async createDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e);if(this.isFiat(e))throw new r.NotSupported(this.id+" createDepositAddress() of fiat for "+e+" is not supported");const s={currency:i.id},a=await this.privatePostCurrenciesCurrencyReceiveAddresses(this.extend(s,t));return{currency:e,address:this.safeString(a.receive_address,"address"),tag:void 0,info:a}}parseTransactionStatus(e){return this.safeString({rejected:"failed",confirmed:"ok",anulled:"canceled",retained:"canceled",pending_confirmation:"pending"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t),n=parseFloat(e.amount[0]),o=parseFloat(e.fee[0]),d=e.fee[1],c=this.parseTransactionStatus(this.safeString(e,"state")),h="deposit_data"in e?"deposit":"withdrawal",u=this.safeValue(e,h+"_data",{}),l=this.safeValue(u,"target_address"),p=this.safeString(u,"tx_hash"),f=this.parse8601(this.safeString(u,"updated_at"));return{info:e,id:i,txid:p,timestamp:s,datetime:this.iso8601(s),network:void 0,address:l,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:h,amount:n,currency:a,status:c,updated:f,fee:{cost:o,rate:d}}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires a currency code argument");const a=this.currency(e),n={currency:a.id,per:i},o=await this.privateGetCurrenciesCurrencyDeposits(this.extend(n,s)),d=this.safeValue(o,"deposits");return this.parseTransactions(d,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires a currency code argument");const a=this.currency(e),n={currency:a.id,per:i},o=await this.privateGetCurrenciesCurrencyWithdrawals(this.extend(n,s)),d=this.safeValue(o,"withdrawals");return this.parseTransactions(d,a,t,i)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a={currency:this.currency(e).id,amount:t,withdrawal_data:{target_address:i}},n=await this.privatePostCurrenciesCurrencyWithdrawals(this.extend(a,r)),o=this.safeValue(n,"withdrawal");return this.parseTransaction(o)}nonce(){return this.microseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));Object.keys(d).length&&("GET"===i?n+="?"+this.urlencode(d):a=this.json(d));const c=this.urls.api.rest+"/"+this.version+"/"+n;if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=[i,"/api/"+this.version+"/"+n];if(a){const e=this.stringToBase64(a);t.push(e)}t.push(e);const s=t.join(" "),d=this.hmac(this.encode(s),this.encode(this.secret),o.iC);r={"X-SBTC-APIKEY":this.apiKey,"X-SBTC-SIGNATURE":d,"X-SBTC-NONCE":e,"Content-Type":"application/json"}}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&e>=400){const e=this.safeString(o,"code"),t=this.safeString(o,"message",n),i=this.id+" "+t;if(void 0!==e)throw this.throwExactlyMatchedException(this.exceptions,e,i),new r.ExchangeError(i)}}}},3527:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2090),r=i(9292),a=i(6689),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bybit",name:"Bybit",countries:["VG"],version:"v5",userAgent:void 0,rateLimit:20,hostname:"bybit.com",pro:!0,certified:!0,has:{CORS:!0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchLedger:!0,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositions:!0,fetchPremiumIndexOHLCV:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfers:!0,fetchWithdrawals:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1","3m":"3","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"D","1w":"W","1M":"M"},urls:{test:{spot:"https://api-testnet.{hostname}",futures:"https://api-testnet.{hostname}",v2:"https://api-testnet.{hostname}",public:"https://api-testnet.{hostname}",private:"https://api-testnet.{hostname}"},logo:"https://user-images.githubusercontent.com/51840849/76547799-daff5b80-649e-11ea-87fb-3be9bac08954.jpg",api:{spot:"https://api.{hostname}",futures:"https://api.{hostname}",v2:"https://api.{hostname}",public:"https://api.{hostname}",private:"https://api.{hostname}"},www:"https://www.bybit.com",doc:["https://bybit-exchange.github.io/docs/inverse/","https://bybit-exchange.github.io/docs/linear/","https://github.com/bybit-exchange"],fees:"https://help.bybit.com/hc/en-us/articles/360039261154",referral:"https://www.bybit.com/register?affiliate_id=35953"},api:{public:{get:{"v2/public/orderBook/L2":1,"v2/public/kline/list":3,"v2/public/tickers":1,"v2/public/trading-records":1,"v2/public/symbols":1,"v2/public/mark-price-kline":3,"v2/public/index-price-kline":3,"v2/public/premium-index-kline":2,"v2/public/open-interest":1,"v2/public/big-deal":1,"v2/public/account-ratio":1,"v2/public/funding-rate":1,"v2/public/elite-ratio":1,"v2/public/funding/prev-funding-rate":1,"v2/public/risk-limit/list":1,"public/linear/kline":3,"public/linear/recent-trading-records":1,"public/linear/risk-limit":1,"public/linear/funding/prev-funding-rate":1,"public/linear/mark-price-kline":1,"public/linear/index-price-kline":1,"public/linear/premium-index-kline":1,"spot/v1/time":1,"spot/v1/symbols":1,"spot/quote/v1/depth":1,"spot/quote/v1/depth/merged":1,"spot/quote/v1/trades":1,"spot/quote/v1/kline":1,"spot/quote/v1/ticker/24hr":1,"spot/quote/v1/ticker/price":1,"spot/quote/v1/ticker/book_ticker":1,"spot/v3/public/symbols":1,"spot/v3/public/quote/depth":1,"spot/v3/public/quote/depth/merged":1,"spot/v3/public/quote/trades":1,"spot/v3/public/quote/kline":1,"spot/v3/public/quote/ticker/24hr":1,"spot/v3/public/quote/ticker/price":1,"spot/v3/public/quote/ticker/bookTicker":1,"spot/v3/public/server-time":1,"spot/v3/public/infos":1,"spot/v3/public/margin-product-infos":1,"spot/v3/public/margin-ensure-tokens":1,"v2/public/time":1,"v3/public/time":1,"v2/public/announcement":1,"option/usdc/openapi/public/v1/order-book":1,"option/usdc/openapi/public/v1/symbols":1,"option/usdc/openapi/public/v1/tick":1,"option/usdc/openapi/public/v1/delivery-price":1,"option/usdc/openapi/public/v1/query-trade-latest":1,"option/usdc/openapi/public/v1/query-historical-volatility":1,"option/usdc/openapi/public/v1/all-tickers":1,"perpetual/usdc/openapi/public/v1/order-book":1,"perpetual/usdc/openapi/public/v1/symbols":1,"perpetual/usdc/openapi/public/v1/tick":1,"perpetual/usdc/openapi/public/v1/kline/list":1,"perpetual/usdc/openapi/public/v1/mark-price-kline":1,"perpetual/usdc/openapi/public/v1/index-price-kline":1,"perpetual/usdc/openapi/public/v1/premium-index-kline":1,"perpetual/usdc/openapi/public/v1/open-interest":1,"perpetual/usdc/openapi/public/v1/big-deal":1,"perpetual/usdc/openapi/public/v1/account-ratio":1,"perpetual/usdc/openapi/public/v1/prev-funding-rate":1,"perpetual/usdc/openapi/public/v1/risk-limit/list":1,"asset/v1/public/deposit/allowed-deposit-list":1,"contract/v3/public/copytrading/symbol/list":1,"derivatives/v3/public/order-book/L2":1,"derivatives/v3/public/kline":1,"derivatives/v3/public/tickers":1,"derivatives/v3/public/instruments-info":1,"derivatives/v3/public/mark-price-kline":1,"derivatives/v3/public/index-price-kline":1,"derivatives/v3/public/funding/history-funding-rate":1,"derivatives/v3/public/risk-limit/list":1,"derivatives/v3/public/delivery-price":1,"derivatives/v3/public/recent-trade":1,"derivatives/v3/public/open-interest":1,"derivatives/v3/public/insurance":1,"v5/market/kline":1,"v5/market/mark-price-kline":1,"v5/market/index-price-kline":1,"v5/market/premium-index-price-kline":1,"v5/market/instruments-info":1,"v5/market/orderbook":1,"v5/market/tickers":1,"v5/market/funding/history":1,"v5/market/recent-trade":1,"v5/market/open-interest":1,"v5/market/historical-volatility":1,"v5/market/insurance":1,"v5/market/risk-limit":1,"v5/market/delivery-price":1,"v5/spot-lever-token/info":1,"v5/spot-lever-token/reference":1,"v5/announcements/index":1}},private:{get:{"v2/private/order/list":5,"v2/private/order":5,"v2/private/stop-order/list":5,"v2/private/stop-order":1,"v2/private/position/list":25,"v2/private/position/fee-rate":40,"v2/private/execution/list":25,"v2/private/trade/closed-pnl/list":1,"v2/public/risk-limit/list":1,"v2/public/funding/prev-funding-rate":25,"v2/private/funding/prev-funding":25,"v2/private/funding/predicted-funding":25,"v2/private/account/api-key":5,"v2/private/account/lcp":1,"v2/private/wallet/balance":25,"v2/private/wallet/fund/records":25,"v2/private/wallet/withdraw/list":25,"v2/private/exchange-order/list":1,"private/linear/order/list":5,"private/linear/order/search":5,"private/linear/stop-order/list":5,"private/linear/stop-order/search":5,"private/linear/position/list":25,"private/linear/trade/execution/list":25,"private/linear/trade/closed-pnl/list":25,"public/linear/risk-limit":1,"private/linear/funding/predicted-funding":25,"private/linear/funding/prev-funding":25,"futures/private/order/list":5,"futures/private/order":5,"futures/private/stop-order/list":5,"futures/private/stop-order":5,"futures/private/position/list":25,"futures/private/execution/list":25,"futures/private/trade/closed-pnl/list":1,"spot/v1/account":2.5,"spot/v1/order":2.5,"spot/v1/open-orders":2.5,"spot/v1/history-orders":2.5,"spot/v1/myTrades":2.5,"spot/v1/cross-margin/order":10,"spot/v1/cross-margin/accounts/balance":10,"spot/v1/cross-margin/loan-info":10,"spot/v1/cross-margin/repay/history":10,"spot/v3/private/order":2.5,"spot/v3/private/open-orders":2.5,"spot/v3/private/history-orders":2.5,"spot/v3/private/my-trades":2.5,"spot/v3/private/account":2.5,"spot/v3/private/reference":2.5,"spot/v3/private/record":2.5,"spot/v3/private/cross-margin-orders":10,"spot/v3/private/cross-margin-account":10,"spot/v3/private/cross-margin-loan-info":10,"spot/v3/private/cross-margin-repay-history":10,"spot/v3/private/margin-loan-infos":10,"spot/v3/private/margin-repaid-infos":10,"spot/v3/private/margin-ltv":10,"asset/v1/private/transfer/list":50,"asset/v3/private/transfer/inter-transfer/list/query":.84,"asset/v1/private/sub-member/transfer/list":50,"asset/v3/private/transfer/sub-member/list/query":.84,"asset/v3/private/transfer/sub-member-transfer/list/query":.84,"asset/v3/private/transfer/universal-transfer/list/query":.84,"asset/v1/private/sub-member/member-ids":50,"asset/v1/private/deposit/record/query":50,"asset/v1/private/withdraw/record/query":25,"asset/v1/private/coin-info/query":25,"asset/v3/private/coin-info/query":25,"asset/v1/private/asset-info/query":50,"asset/v1/private/deposit/address":100,"asset/v3/private/deposit/address/query":.17,"asset/v1/private/universal/transfer/list":50,"contract/v3/private/copytrading/order/list":1,"contract/v3/private/copytrading/position/list":1,"contract/v3/private/copytrading/wallet/balance":1,"contract/v3/private/position/limit-info":25,"contract/v3/private/order/unfilled-orders":1,"contract/v3/private/order/list":1,"contract/v3/private/position/list":1,"contract/v3/private/execution/list":1,"contract/v3/private/position/closed-pnl":1,"contract/v3/private/account/wallet/balance":1,"contract/v3/private/account/fee-rate":1,"contract/v3/private/account/wallet/fund-records":1,"unified/v3/private/order/unfilled-orders":1,"unified/v3/private/order/list":1,"unified/v3/private/position/list":1,"unified/v3/private/execution/list":1,"unified/v3/private/delivery-record":1,"unified/v3/private/settlement-record":1,"unified/v3/private/account/wallet/balance":1,"unified/v3/private/account/transaction-log":1,"asset/v2/private/exchange/exchange-order-all":1,"unified/v3/private/account/borrow-history":1,"unified/v3/private/account/borrow-rate":1,"unified/v3/private/account/info":1,"user/v3/private/frozen-sub-member":10,"user/v3/private/query-sub-members":5,"user/v3/private/query-api":5,"asset/v3/private/transfer/transfer-coin/list/query":.84,"asset/v3/private/transfer/account-coin/balance/query":.84,"asset/v3/private/transfer/account-coins/balance/query":50,"asset/v3/private/transfer/asset-info/query":.84,"asset/v3/public/deposit/allowed-deposit-list/query":.17,"asset/v3/private/deposit/record/query":.17,"asset/v3/private/withdraw/record/query":.17,"v5/order/history":2.5,"v5/order/spot-borrow-check":2.5,"v5/order/realtime":2.5,"v5/position/list":2.5,"v5/execution/list":2.5,"v5/position/closed-pnl":2.5,"v5/account/wallet-balance":2.5,"v5/account/borrow-history":2.5,"v5/account/collateral-info":2.5,"v5/account/mmp-state":2.5,"v5/asset/coin-greeks":2.5,"v5/account/info":2.5,"v5/account/transaction-log":2.5,"v5/account/fee-rate":1,"v5/asset/exchange/order-record":2.5,"v5/asset/delivery-record":2.5,"v5/asset/settlement-record":2.5,"v5/asset/transfer/query-asset-info":2.5,"v5/asset/transfer/query-account-coin-balance":2.5,"v5/asset/transfer/query-transfer-coin-list":2.5,"v5/asset/transfer/query-inter-transfer-list":2.5,"v5/asset/transfer/query-sub-member-list":2.5,"v5/asset/transfer/query-universal-transfer-list":1,"v5/asset/deposit/query-allowed-list":2.5,"v5/asset/deposit/query-record":2.5,"v5/asset/deposit/query-sub-member-record":2.5,"v5/asset/deposit/query-address":2.5,"v5/asset/deposit/query-sub-member-address":2.5,"v5/asset/deposit/query-internal-record":2.5,"v5/asset/coin/query-info":2.5,"v5/asset/withdraw/query-record":2.5,"v5/asset/withdraw/withdrawable-amount":2.5,"v5/asset/transfer/query-account-coins-balance":2.5,"v5/user/query-sub-members":10,"v5/user/query-api":10},post:{"v2/private/order/create":30,"v2/private/order/cancel":30,"v2/private/order/cancelAll":300,"v2/private/order/replace":30,"v2/private/stop-order/create":30,"v2/private/stop-order/cancel":30,"v2/private/stop-order/cancelAll":300,"v2/private/stop-order/replace":30,"v2/private/position/change-position-margin":40,"v2/private/position/trading-stop":40,"v2/private/position/leverage/save":40,"v2/private/tpsl/switch-mode":40,"v2/private/position/switch-isolated":2.5,"v2/private/position/risk-limit":2.5,"v2/private/position/switch-mode":2.5,"private/linear/order/create":30,"private/linear/order/cancel":30,"private/linear/order/cancel-all":300,"private/linear/order/replace":30,"private/linear/stop-order/create":30,"private/linear/stop-order/cancel":30,"private/linear/stop-order/cancel-all":300,"private/linear/stop-order/replace":30,"private/linear/position/set-auto-add-margin":40,"private/linear/position/switch-isolated":40,"private/linear/position/switch-mode":40,"private/linear/tpsl/switch-mode":2.5,"private/linear/position/add-margin":40,"private/linear/position/set-leverage":40,"private/linear/position/trading-stop":40,"private/linear/position/set-risk":2.5,"futures/private/order/create":30,"futures/private/order/cancel":30,"futures/private/order/cancelAll":30,"futures/private/order/replace":30,"futures/private/stop-order/create":30,"futures/private/stop-order/cancel":30,"futures/private/stop-order/cancelAll":30,"futures/private/stop-order/replace":30,"futures/private/position/change-position-margin":40,"futures/private/position/trading-stop":40,"futures/private/position/leverage/save":40,"futures/private/position/switch-mode":40,"futures/private/tpsl/switch-mode":40,"futures/private/position/switch-isolated":40,"futures/private/position/risk-limit":2.5,"spot/v1/order":2.5,"spot/v1/cross-margin/loan":10,"spot/v1/cross-margin/repay":10,"spot/v3/private/order":2.5,"spot/v3/private/cancel-order":2.5,"spot/v3/private/cancel-orders":2.5,"spot/v3/private/cancel-orders-by-ids":2.5,"spot/v3/private/purchase":2.5,"spot/v3/private/redeem":2.5,"spot/v3/private/cross-margin-loan":10,"spot/v3/private/cross-margin-repay":10,"asset/v1/private/transfer":150,"asset/v3/private/transfer/inter-transfer":2.5,"asset/v1/private/sub-member/transfer":150,"asset/v1/private/withdraw":50,"asset/v3/private/withdraw/create":1,"asset/v1/private/withdraw/cancel":50,"asset/v3/private/withdraw/cancel":.84,"asset/v1/private/transferable-subs/save":3e3,"asset/v1/private/universal/transfer":1500,"asset/v3/private/transfer/sub-member-transfer":2.5,"asset/v3/private/transfer/transfer-sub-member-save":2.5,"asset/v3/private/transfer/universal-transfer":2.5,"user/v3/private/create-sub-member":10,"user/v3/private/create-sub-api":10,"user/v3/private/update-api":10,"user/v3/private/delete-api":10,"user/v3/private/update-sub-api":10,"user/v3/private/delete-sub-api":10,"option/usdc/openapi/private/v1/place-order":2.5,"option/usdc/openapi/private/v1/batch-place-order":2.5,"option/usdc/openapi/private/v1/replace-order":2.5,"option/usdc/openapi/private/v1/batch-replace-orders":2.5,"option/usdc/openapi/private/v1/cancel-order":2.5,"option/usdc/openapi/private/v1/batch-cancel-orders":2.5,"option/usdc/openapi/private/v1/cancel-all":2.5,"option/usdc/openapi/private/v1/query-active-orders":2.5,"option/usdc/openapi/private/v1/query-order-history":2.5,"option/usdc/openapi/private/v1/execution-list":2.5,"option/usdc/openapi/private/v1/query-transaction-log":2.5,"option/usdc/openapi/private/v1/query-wallet-balance":2.5,"option/usdc/openapi/private/v1/query-asset-info":2.5,"option/usdc/openapi/private/v1/query-margin-info":2.5,"option/usdc/openapi/private/v1/query-position":2.5,"option/usdc/openapi/private/v1/query-delivery-list":2.5,"option/usdc/openapi/private/v1/query-position-exp-date":2.5,"option/usdc/openapi/private/v1/mmp-modify":2.5,"option/usdc/openapi/private/v1/mmp-reset":2.5,"perpetual/usdc/openapi/private/v1/place-order":2.5,"perpetual/usdc/openapi/private/v1/replace-order":2.5,"perpetual/usdc/openapi/private/v1/cancel-order":2.5,"perpetual/usdc/openapi/private/v1/cancel-all":2.5,"perpetual/usdc/openapi/private/v1/position/leverage/save":2.5,"option/usdc/openapi/private/v1/session-settlement":2.5,"option/usdc/private/asset/account/setMarginMode":2.5,"perpetual/usdc/openapi/public/v1/risk-limit/list":2.5,"perpetual/usdc/openapi/private/v1/position/set-risk-limit":2.5,"perpetual/usdc/openapi/private/v1/predicted-funding":2.5,"contract/v3/private/copytrading/order/create":2.5,"contract/v3/private/copytrading/order/cancel":2.5,"contract/v3/private/copytrading/order/close":2.5,"contract/v3/private/copytrading/position/close":2.5,"contract/v3/private/copytrading/position/set-leverage":2.5,"contract/v3/private/copytrading/wallet/transfer":2.5,"contract/v3/private/copytrading/order/trading-stop":2.5,"contract/v3/private/order/create":1,"contract/v3/private/order/cancel":1,"contract/v3/private/order/cancel-all":1,"contract/v3/private/order/replace":1,"contract/v3/private/position/set-auto-add-margin":1,"contract/v3/private/position/switch-isolated":1,"contract/v3/private/position/switch-mode":1,"contract/v3/private/position/switch-tpsl-mode":1,"contract/v3/private/position/set-leverage":1,"contract/v3/private/position/trading-stop":1,"contract/v3/private/position/set-risk-limit":1,"contract/v3/private/account/setMarginMode":1,"unified/v3/private/order/create":2.5,"unified/v3/private/order/replace":2.5,"unified/v3/private/order/cancel":2.5,"unified/v3/private/order/create-batch":2.5,"unified/v3/private/order/replace-batch":2.5,"unified/v3/private/order/cancel-batch":2.5,"unified/v3/private/order/cancel-all":2.5,"unified/v3/private/position/set-leverage":2.5,"unified/v3/private/position/tpsl/switch-mode":2.5,"unified/v3/private/position/set-risk-limit":2.5,"unified/v3/private/position/trading-stop":2.5,"unified/v3/private/account/upgrade-unified-account":2.5,"unified/v3/private/account/setMarginMode":2.5,"fht/compliance/tax/v3/private/registertime":50,"fht/compliance/tax/v3/private/create":50,"fht/compliance/tax/v3/private/status":50,"fht/compliance/tax/v3/private/url":50,"v5/order/create":2.5,"v5/order/amend":2.5,"v5/order/cancel":2.5,"v5/order/cancel-all":2.5,"v5/order/create-batch":2.5,"v5/order/amend-batch":2.5,"v5/order/cancel-batch":2.5,"v5/order/disconnected-cancel-all":2.5,"v5/position/set-leverage":2.5,"v5/position/set-tpsl-mode":2.5,"v5/position/set-risk-limit":2.5,"v5/position/trading-stop":2.5,"v5/account/upgrade-to-uta":2.5,"v5/account/set-margin-mode":2.5,"v5/asset/transfer/inter-transfer":2.5,"v5/asset/transfer/save-transfer-sub-member":2.5,"v5/asset/transfer/universal-transfer":2.5,"v5/asset/deposit/deposit-to-account":2.5,"v5/asset/withdraw/create":2.5,"v5/asset/withdraw/cancel":2.5,"v5/spot-lever-token/purchase":2.5,"v5/spot-lever-token/redeem":2.5,"v5/spot-lever-token/order-record":2.5,"v5/spot-margin-trade/switch-mode":2.5,"v5/spot-margin-trade/set-leverage":2.5,"v5/user/create-sub-member":10,"v5/user/create-sub-api":10,"v5/user/frozen-sub-member":10,"v5/user/update-api":10,"v5/user/update-sub-api":10,"v5/user/delete-api":10,"v5/user/delete-sub-api":10},delete:{"spot/v1/order":2.5,"spot/v1/order/fast":2.5,"spot/order/batch-cancel":2.5,"spot/order/batch-fast-cancel":2.5,"spot/order/batch-cancel-by-ids":2.5}}},httpExceptions:{403:a.RateLimitExceeded},exceptions:{exact:{"-10009":a.BadRequest,"-1004":a.BadRequest,"-1021":a.BadRequest,"-1103":a.BadRequest,"-1140":a.InvalidOrder,"-1197":a.InvalidOrder,"-2013":a.InvalidOrder,"-2015":a.AuthenticationError,"-6017":a.BadRequest,"-6025":a.BadRequest,"-6029":a.BadRequest,5004:a.ExchangeError,7001:a.BadRequest,10001:a.BadRequest,10002:a.InvalidNonce,10003:a.AuthenticationError,10004:a.AuthenticationError,10005:a.PermissionDenied,10006:a.RateLimitExceeded,10007:a.AuthenticationError,10008:a.AuthenticationError,10009:a.AuthenticationError,10010:a.PermissionDenied,10014:a.BadRequest,10016:a.ExchangeError,10017:a.BadRequest,10018:a.RateLimitExceeded,10020:a.PermissionDenied,10024:a.PermissionDenied,10027:a.PermissionDenied,10028:a.PermissionDenied,10029:a.PermissionDenied,12201:a.BadRequest,100028:a.PermissionDenied,110001:a.InvalidOrder,110003:a.InvalidOrder,110004:a.InsufficientFunds,110005:a.InvalidOrder,110006:a.InsufficientFunds,110007:a.InsufficientFunds,110008:a.InvalidOrder,110009:a.InvalidOrder,110010:a.InvalidOrder,110011:a.InvalidOrder,110012:a.InsufficientFunds,110013:a.BadRequest,110014:a.InsufficientFunds,110015:a.BadRequest,110016:a.InvalidOrder,110017:a.InvalidOrder,110018:a.BadRequest,110019:a.InvalidOrder,110020:a.InvalidOrder,110021:a.InvalidOrder,110022:a.InvalidOrder,110023:a.InvalidOrder,110024:a.InvalidOrder,110025:a.InvalidOrder,110026:a.InvalidOrder,110027:a.InvalidOrder,110028:a.InvalidOrder,110029:a.InvalidOrder,110030:a.InvalidOrder,110031:a.InvalidOrder,110032:a.InvalidOrder,110033:a.InvalidOrder,110034:a.InvalidOrder,110035:a.InvalidOrder,110036:a.InvalidOrder,110037:a.InvalidOrder,110038:a.InvalidOrder,110039:a.InvalidOrder,110040:a.InvalidOrder,110041:a.InvalidOrder,110042:a.InvalidOrder,110043:a.BadRequest,110044:a.InsufficientFunds,110045:a.InsufficientFunds,110046:a.BadRequest,110047:a.BadRequest,110048:a.BadRequest,110049:a.BadRequest,110050:a.BadRequest,110051:a.InsufficientFunds,110052:a.InsufficientFunds,110053:a.InsufficientFunds,110054:a.InvalidOrder,110055:a.InvalidOrder,110056:a.InvalidOrder,110057:a.InvalidOrder,110058:a.InvalidOrder,110059:a.InvalidOrder,110060:a.BadRequest,110061:a.BadRequest,110062:a.BadRequest,110063:a.ExchangeError,110064:a.InvalidOrder,110065:a.PermissionDenied,110066:a.ExchangeError,110067:a.PermissionDenied,110068:a.PermissionDenied,110069:a.PermissionDenied,110070:a.InvalidOrder,110071:a.ExchangeError,110072:a.InvalidOrder,110073:a.ExchangeError,130006:a.InvalidOrder,130021:a.InsufficientFunds,130074:a.InvalidOrder,131001:a.InsufficientFunds,131084:a.ExchangeError,131200:a.ExchangeError,131201:a.ExchangeError,131202:a.BadRequest,131203:a.BadRequest,131204:a.BadRequest,131205:a.BadRequest,131206:a.ExchangeError,131207:a.BadRequest,131208:a.ExchangeError,131209:a.BadRequest,131210:a.BadRequest,131211:a.BadRequest,131212:a.InsufficientFunds,131213:a.BadRequest,131214:a.BadRequest,131215:a.BadRequest,131216:a.ExchangeError,131217:a.ExchangeError,131002:a.BadRequest,131003:a.ExchangeError,131004:a.AuthenticationError,131085:a.InsufficientFunds,131086:a.BadRequest,131088:a.BadRequest,131089:a.BadRequest,131090:a.ExchangeError,131091:a.ExchangeError,131092:a.ExchangeError,131093:a.ExchangeError,131094:a.BadRequest,131095:a.BadRequest,131096:a.BadRequest,131097:a.ExchangeError,131098:a.ExchangeError,131099:a.ExchangeError,140003:a.InvalidOrder,140004:a.InsufficientFunds,140005:a.InvalidOrder,140006:a.InsufficientFunds,140007:a.InsufficientFunds,140008:a.InvalidOrder,140009:a.InvalidOrder,140010:a.InvalidOrder,140011:a.InvalidOrder,140012:a.InsufficientFunds,140013:a.BadRequest,140014:a.InsufficientFunds,140015:a.InvalidOrder,140016:a.InvalidOrder,140017:a.InvalidOrder,140018:a.BadRequest,140019:a.InvalidOrder,140020:a.InvalidOrder,140021:a.InvalidOrder,140022:a.InvalidOrder,140023:a.InvalidOrder,140024:a.BadRequest,140025:a.BadRequest,140026:a.BadRequest,140027:a.BadRequest,140028:a.InvalidOrder,140029:a.BadRequest,140030:a.InvalidOrder,140031:a.BadRequest,140032:a.InvalidOrder,140033:a.InvalidOrder,140034:a.InvalidOrder,140035:a.InvalidOrder,140036:a.BadRequest,140037:a.InvalidOrder,140038:a.BadRequest,140039:a.BadRequest,140040:a.InvalidOrder,140041:a.InvalidOrder,140042:a.InvalidOrder,140043:a.BadRequest,140044:a.InsufficientFunds,140045:a.InsufficientFunds,140046:a.BadRequest,140047:a.BadRequest,140048:a.BadRequest,140049:a.BadRequest,140050:a.InvalidOrder,140051:a.InsufficientFunds,140052:a.InsufficientFunds,140053:a.InsufficientFunds,140054:a.InvalidOrder,140055:a.InvalidOrder,140056:a.InvalidOrder,140057:a.InvalidOrder,140058:a.InvalidOrder,140059:a.InvalidOrder,140060:a.BadRequest,140061:a.BadRequest,140062:a.BadRequest,140063:a.ExchangeError,140064:a.InvalidOrder,140065:a.PermissionDenied,140066:a.ExchangeError,140067:a.PermissionDenied,140068:a.PermissionDenied,140069:a.PermissionDenied,140070:a.InvalidOrder,170001:a.ExchangeError,170007:a.RequestTimeout,170005:a.InvalidOrder,170031:a.ExchangeError,170032:a.ExchangeError,170033:a.InsufficientFunds,170034:a.InsufficientFunds,170035:a.BadRequest,170036:a.BadRequest,170037:a.BadRequest,170105:a.BadRequest,170115:a.InvalidOrder,170116:a.InvalidOrder,170117:a.InvalidOrder,170121:a.InvalidOrder,170130:a.BadRequest,170131:a.InsufficientFunds,170132:a.InvalidOrder,170133:a.InvalidOrder,170134:a.InvalidOrder,170135:a.InvalidOrder,170136:a.InvalidOrder,170137:a.InvalidOrder,170139:a.InvalidOrder,170140:a.InvalidOrder,170124:a.InvalidOrder,170141:a.InvalidOrder,170142:a.InvalidOrder,170143:a.InvalidOrder,170144:a.InvalidOrder,170145:a.InvalidOrder,170146:a.InvalidOrder,170147:a.InvalidOrder,170148:a.InvalidOrder,170149:a.ExchangeError,170150:a.ExchangeError,170151:a.InvalidOrder,170157:a.InvalidOrder,170159:a.InvalidOrder,170190:a.InvalidOrder,170191:a.InvalidOrder,170192:a.InvalidOrder,170193:a.InvalidOrder,170194:a.InvalidOrder,170195:a.InvalidOrder,170196:a.InvalidOrder,170197:a.InvalidOrder,170198:a.InvalidOrder,170199:a.InvalidOrder,170200:a.InvalidOrder,170221:a.BadRequest,170222:a.RateLimitExceeded,170223:a.InsufficientFunds,170224:a.PermissionDenied,170226:a.InsufficientFunds,170227:a.ExchangeError,170228:a.InvalidOrder,170229:a.InvalidOrder,170234:a.ExchangeError,170210:a.InvalidOrder,170213:a.OrderNotFound,170217:a.InvalidOrder,170218:a.InvalidOrder,170010:a.InvalidOrder,170011:a.InvalidOrder,170019:a.InvalidOrder,170201:a.PermissionDenied,170202:a.InvalidOrder,170203:a.InvalidOrder,170204:a.InvalidOrder,170206:a.InvalidOrder,175e3:a.InvalidOrder,175001:a.InvalidOrder,175002:a.InvalidOrder,175003:a.InsufficientFunds,175004:a.InvalidOrder,175005:a.InvalidOrder,175006:a.InsufficientFunds,175007:a.InvalidOrder,175008:a.InvalidOrder,175009:a.InvalidOrder,175010:a.PermissionDenied,175012:a.InvalidOrder,175013:a.InvalidOrder,175014:a.InvalidOrder,175015:a.InvalidOrder,175016:a.InvalidOrder,175017:a.InvalidOrder,175027:a.ExchangeError,176002:a.BadRequest,176004:a.BadRequest,176003:a.BadRequest,176006:a.BadRequest,176005:a.BadRequest,176008:a.BadRequest,176007:a.BadRequest,176010:a.BadRequest,176009:a.BadRequest,176012:a.BadRequest,176011:a.BadRequest,176014:a.BadRequest,176013:a.BadRequest,176015:a.InsufficientFunds,176016:a.BadRequest,176017:a.BadRequest,176018:a.BadRequest,176019:a.BadRequest,176020:a.BadRequest,176021:a.BadRequest,176022:a.BadRequest,176023:a.BadRequest,176024:a.BadRequest,176025:a.BadRequest,176026:a.BadRequest,176027:a.BadRequest,176028:a.BadRequest,176029:a.BadRequest,176030:a.BadRequest,176031:a.BadRequest,176034:a.BadRequest,176035:a.PermissionDenied,176036:a.PermissionDenied,176037:a.PermissionDenied,176038:a.BadRequest,176039:a.BadRequest,176040:a.BadRequest,181e3:a.BadRequest,181001:a.BadRequest,181002:a.InvalidOrder,181003:a.InvalidOrder,181004:a.InvalidOrder,182e3:a.InvalidOrder,20001:a.OrderNotFound,20003:a.InvalidOrder,20004:a.InvalidOrder,20005:a.InvalidOrder,20006:a.InvalidOrder,20007:a.InvalidOrder,20008:a.InvalidOrder,20009:a.InvalidOrder,20010:a.InvalidOrder,20011:a.InvalidOrder,20012:a.InvalidOrder,20013:a.InvalidOrder,20014:a.InvalidOrder,20015:a.InvalidOrder,20016:a.InvalidOrder,20017:a.InvalidOrder,20018:a.InvalidOrder,20019:a.InvalidOrder,20020:a.InvalidOrder,20021:a.InvalidOrder,20022:a.BadRequest,20023:a.BadRequest,20031:a.BadRequest,20070:a.BadRequest,20071:a.BadRequest,20084:a.BadRequest,30001:a.BadRequest,30003:a.InvalidOrder,30004:a.InvalidOrder,30005:a.InvalidOrder,30007:a.InvalidOrder,30008:a.InvalidOrder,30009:a.ExchangeError,30010:a.InsufficientFunds,30011:a.PermissionDenied,30012:a.PermissionDenied,30013:a.PermissionDenied,30014:a.InvalidOrder,30015:a.InvalidOrder,30016:a.ExchangeError,30017:a.InvalidOrder,30018:a.InvalidOrder,30019:a.InvalidOrder,30020:a.InvalidOrder,30021:a.InvalidOrder,30022:a.InvalidOrder,30023:a.InvalidOrder,30024:a.InvalidOrder,30025:a.InvalidOrder,30026:a.InvalidOrder,30027:a.InvalidOrder,30028:a.InvalidOrder,30029:a.InvalidOrder,30030:a.InvalidOrder,30031:a.InsufficientFunds,30032:a.InvalidOrder,30033:a.RateLimitExceeded,30034:a.OrderNotFound,30035:a.RateLimitExceeded,30036:a.ExchangeError,30037:a.InvalidOrder,30041:a.ExchangeError,30042:a.InsufficientFunds,30043:a.InvalidOrder,30044:a.InvalidOrder,30045:a.InvalidOrder,30049:a.InsufficientFunds,30050:a.ExchangeError,30051:a.ExchangeError,30052:a.ExchangeError,30054:a.ExchangeError,30057:a.ExchangeError,30063:a.ExchangeError,30067:a.InsufficientFunds,30068:a.ExchangeError,30074:a.InvalidOrder,30075:a.InvalidOrder,30078:a.ExchangeError,33004:a.AuthenticationError,34026:a.ExchangeError,34036:a.BadRequest,35015:a.BadRequest,340099:a.ExchangeError,3400045:a.ExchangeError,3100116:a.BadRequest,3100198:a.BadRequest,3200300:a.InsufficientFunds},broad:{"Request timeout":a.RequestTimeout,"unknown orderInfo":a.OrderNotFound,"invalid api_key":a.AuthenticationError,oc_diff:a.InsufficientFunds,new_oc:a.InsufficientFunds,"openapi sign params error!":a.AuthenticationError}},precisionMode:r.sh,options:{enableUnifiedMargin:void 0,enableUnifiedAccount:void 0,createMarketBuyOrderRequiresPrice:!0,createUnifiedMarginAccount:!1,defaultType:"swap",defaultSubType:"linear",defaultSettle:"USDT",code:"BTC",recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,brokerId:"CCXT",accountsByType:{spot:"SPOT",margin:"SPOT",future:"CONTRACT",swap:"CONTRACT",option:"OPTION",investment:"INVESTMENT",unified:"UNIFIED",funding:"FUND",fund:"FUND",contract:"CONTRACT"},accountsById:{SPOT:"spot",MARGIN:"spot",CONTRACT:"contract",OPTION:"option",INVESTMENT:"investment",UNIFIED:"unified"},networks:{ERC20:"ETH",TRC20:"TRX",BEP20:"BSC",OMNI:"OMNI",SPL:"SOL"},networksById:{ETH:"ERC20",TRX:"TRC20",BSC:"BEP20",OMNI:"OMNI",SPL:"SOL"},defaultNetwork:"ERC20",defaultNetworks:{USDT:"TRC20"},intervals:{"5m":"5min","15m":"15min","30m":"30min","1h":"1h","4h":"4h","1d":"1d"}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,taker:75e-5,maker:1e-4},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{GAS:"GASDAO"}})}nonce(){return this.milliseconds()-this.options.timeDifference}async isUnifiedEnabled(e={}){const t=this.safeValue(this.options,"enableUnifiedMargin"),i=this.safeValue(this.options,"enableUnifiedAccount");if(void 0===t||void 0===i){const t=await this.privateGetUserV3PrivateQueryApi(e),i=this.safeValue(t,"result",{});this.options.enableUnifiedMargin=1===this.safeInteger(i,"unified"),this.options.enableUnifiedAccount=1===this.safeInteger(i,"uta")}return[this.options.enableUnifiedMargin,this.options.enableUnifiedAccount]}async upgradeUnifiedAccount(e={}){if(!this.safeValue(this.options,"createUnifiedMarginAccount"))throw new a.NotSupported(this.id+' upgradeUnifiedAccount() warning this method can only be called once, it is not reverseable and you will be stuck with a unified margin account, you also need at least 5000 USDT in your bybit account to do this. If you want to disable this warning set exchange.options["createUnifiedMarginAccount"]=true.');return await this.privatePostUnifiedV3PrivateAccountUpgradeUnifiedAccount(e)}async upgradeUnifiedTradeAccount(e={}){return await this.privatePostV5AccountUpgradeToUta(e)}async fetchTime(e={}){const t=await this.publicGetV3PublicTime(e);return this.safeInteger(t,"time")}async fetchCurrencies(e={}){if(!this.checkRequiredCredentials(!1))return;const t=await this.privateGetV5AssetCoinQueryInfo(e),i=this.safeValue(t,"result",[]),s=this.safeValue(i,"rows",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"coin"),a=this.safeCurrencyCode(i),n=this.safeString(t,"name"),o=this.safeValue(t,"chains",[]),d={};let c;for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,"chain"),s=this.networkIdToCode(i),r=this.parseNumber(this.parsePrecision(this.safeString(t,"minAccuracy")));c=void 0===c?r:Math.min(c,r);const a=1===this.safeInteger(t,"chainDeposit"),n=1===this.safeInteger(t,"chainWithdraw");d[s]={info:t,id:i,network:s,active:void 0,deposit:a,withdraw:n,fee:this.safeNumber(t,"withdrawFee"),precision:r,limits:{withdraw:{min:this.safeNumber(t,"withdrawMin"),max:void 0},deposit:{min:this.safeNumber(t,"depositMin"),max:void 0}}}}r[a]={info:t,code:a,id:i,name:n,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:c,limits:{amount:{min:void 0,max:void 0}},networks:d}}return r}async fetchMarkets(e={}){this.options.adjustForTimeDifference&&await this.loadTimeDifference();const t=[this.fetchSpotMarkets(e),this.fetchDerivativesMarkets({category:"linear"}),this.fetchDerivativesMarkets({category:"inverse"})],i=await Promise.all(t),s=i[0],r=i[1],a=i[2];let n=s;return n=this.arrayConcat(n,r),this.arrayConcat(n,a)}async fetchSpotMarkets(e){const t=await this.publicGetV5MarketInstrumentsInfo(this.extend({category:"spot"},e)),i=this.safeValue(t,"result",{}),s=this.safeValue(i,"list",[]),r=[],a=this.parseNumber("0.001"),n=this.parseNumber("0.001");for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"symbol"),o=this.safeString(t,"baseCoin"),d=this.safeString(t,"quoteCoin"),c=this.safeCurrencyCode(o),h=this.safeCurrencyCode(d),u=c+"/"+h,l="Trading"===this.safeString(t,"status"),p=this.safeValue(t,"lotSizeFilter"),f=this.safeValue(t,"priceFilter"),m=this.safeNumber(p,"quotePrecision");r.push({id:i,symbol:u,base:c,quote:h,settle:void 0,baseId:o,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:l,contract:!1,linear:void 0,inverse:void 0,taker:a,maker:n,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(p,"basePrecision"),price:this.safeNumber(f,"tickSize",m)},limits:{leverage:{min:this.parseNumber("1"),max:void 0},amount:{min:this.safeNumber(p,"minOrderQty"),max:this.safeNumber(p,"maxOrderQty")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(p,"minOrderAmt"),max:this.safeNumber(p,"maxOrderAmt")}},info:t})}return r}async fetchDerivativesMarkets(e){e.limit=1e3;const t=await this.publicGetV5MarketInstrumentsInfo(e),i=this.safeValue(t,"result",{});let s=this.safeValue(i,"list",[]),r=this.safeString(i,"nextPageCursor");if(void 0!==r)for(;void 0!==r;){e.cursor=r;const t=await this.publicGetDerivativesV3PublicInstrumentsInfo(e),i=this.safeValue(t,"result",{}),a=this.safeValue(i,"list",[]);if(0===a.length)break;s=this.arrayConcat(a,s),r=this.safeString(i,"nextPageCursor")}const a=[];let n=this.safeString(i,"category");for(let e=0;e<s.length;e++){const t=s[e];void 0===n&&(n=this.safeString(t,"category"));const i="linear"===n,r="inverse"===n,o=this.safeString(t,"contractType"),d="InverseFutures"===o,c="LinearFutures"===o,h="LinearPerpetual"===o,u="InversePerpetual"===o,l=this.safeString(t,"symbol"),p=this.safeString(t,"baseCoin"),f=this.safeString(t,"quoteCoin"),m=i?f:p,v=this.safeString(t,"settleCoin",m),g=this.safeCurrencyCode(p),y=this.safeCurrencyCode(f);let b;b=h&&"USD"===v?"USDC":this.safeCurrencyCode(v);let w=g+"/"+y;const S=this.safeValue(t,"lotSizeFilter",{}),P=this.safeValue(t,"priceFilter",{}),k=this.safeValue(t,"leverageFilter",{}),O="Trading"===this.safeString(t,"status"),T=h||u,A=d||c,G="option"===n;let I;T?I="swap":A?I="future":G&&(I="option");let C=this.omitZero(this.safeString(t,"deliveryTime"));void 0!==C&&(C=parseInt(C));const M=this.iso8601(C);let x,V;if(w=w+":"+b,void 0!==C&&(w=w+"-"+this.yymmdd(C),G)){const e=l.split("-");x=this.safeString(e,2);const t=this.safeString(e,3);w=w+"-"+x+"-"+t,"P"===t?V="put":"C"===t&&(V="call")}const E=r?this.safeNumber2(S,"minTradingQty","minOrderQty"):this.parseNumber("1");a.push({id:l,symbol:w,base:g,quote:y,settle:b,baseId:p,quoteId:f,settleId:v,type:I,spot:!1,margin:void 0,swap:T,future:A,option:G,active:O,contract:!0,linear:i,inverse:r,taker:this.safeNumber(t,"takerFee",this.parseNumber("0.0006")),maker:this.safeNumber(t,"makerFee",this.parseNumber("0.0001")),contractSize:E,expiry:C,expiryDatetime:M,strike:x,optionType:V,precision:{amount:this.safeNumber(S,"qtyStep"),price:this.safeNumber(P,"tickSize")},limits:{leverage:{min:this.safeNumber(k,"minLeverage"),max:this.safeNumber(k,"maxLeverage")},amount:{min:this.safeNumber2(S,"minTradingQty","minOrderQty"),max:this.safeNumber2(S,"maxTradingQty","maxOrderQty")},price:{min:this.safeNumber(P,"minPrice"),max:this.safeNumber(P,"maxPrice")},cost:{min:void 0,max:void 0}},info:t})}return a}parseTicker(e,t=undefined){const i=this.safeInteger(e,"time"),s=this.safeString(e,"symbol"),r=this.safeString(this.options,"defaultType","spot");t=this.safeMarket(s,t,void 0,r);const a=this.safeSymbol(s,t,void 0,r),o=this.safeString(e,"lastPrice"),d=this.safeString(e,"prevPrice24h");let c=this.safeString(e,"price24hPcnt");c=n.O.stringMul(c,"100");const h=this.safeString(e,"turnover24h"),u=this.safeString(e,"volume24h"),l=this.safeString(e,"bid1Price"),p=this.safeString(e,"ask1Price"),f=this.safeString(e,"highPrice24h"),m=this.safeString(e,"lowPrice24h");return this.safeTicker({symbol:a,timestamp:i,datetime:this.iso8601(i),high:f,low:m,bid:l,bidVolume:this.safeString2(e,"bidSize","bid1Size"),ask:p,askVolume:this.safeString2(e,"askSize","ask1Size"),vwap:void 0,open:d,close:o,last:o,previousClose:void 0,change:void 0,percentage:c,average:void 0,baseVolume:u,quoteVolume:h,info:e},t)}async fetchTicker(e,t={}){this.checkRequiredSymbol("fetchTicker",e),await this.loadMarkets();const i=this.market(e),s={symbol:i.id};i.spot?s.category="spot":i.option?s.category="option":i.linear?s.category="linear":i.inverse&&(s.category="inverse");const r=await this.publicGetV5MarketTickers(this.extend(s,t)),a=this.safeValue(r,"result",[]),n=this.safeValue(a,"list",[]),o=this.safeValue(n,0);return this.parseTicker(o,i)}async fetchTickers(e=undefined,t={}){let i;await this.loadMarkets(),void 0!==e&&(e=this.marketSymbols(e),i=this.market(e[0]));const s={};let r;const a="type"in t;if([r,t]=this.handleMarketTypeAndParams("fetchTickers",i,t),"spot"===r)s.category="spot";else if("swap"===r||"future"===r){let e;[e,t]=this.handleSubTypeAndParams("fetchTickers",i,t,"linear"),s.category=e}else"option"===r&&(s.category="option");const n=await this.publicGetV5MarketTickers(this.extend(s,t)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"list",[]),c={};void 0===i&&a&&(i={type:"swap"===r||"future"===r?"swap":r});for(let e=0;e<d.length;e++){const t=this.parseTicker(d[e],i),s=t.symbol;this.market(s).type===r&&(c[s]=t)}return this.filterByArray(c,"symbol",e)}parseOHLCV(e,t=undefined){const i=t.inverse?6:5;return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,i)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){this.checkRequiredSymbol("fetchOHLCV",e),await this.loadMarkets();const n=this.market(e),o={symbol:n.id};let d;if(void 0===s&&(s=200),void 0!==i&&(o.start=i),void 0!==s&&(o.limit=s),o.interval=this.safeString(this.timeframes,t,t),n.spot)o.category="spot",d="publicGetV5MarketKline";else{const e=this.safeString(r,"price");r=this.omit(r,"price");const t={mark:"publicGetV5MarketMarkPriceKline",index:"publicGetV5MarketIndexPriceKline",premiumIndex:"publicGetV5MarketPremiumIndexPriceKline"};if(d=this.safeValue(t,e,"publicGetV5MarketKline"),n.linear)o.category="linear";else{if(!n.inverse)throw new a.NotSupported(this.id+" fetchOHLCV() is not supported for option markets");o.category="inverse"}}const c=await this[d](this.extend(o,r)),h=this.safeValue(c,"result",{}),u=this.safeValue(h,"list",[]);return this.parseOHLCVs(u,n,t,i,s)}parseFundingRate(e,t=undefined){const i=this.safeInteger(e,"timestamp");e=this.omit(e,"timestamp");const s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t,void 0,"swap"),a=this.safeNumber(e,"fundingRate"),n=this.safeInteger(e,"nextFundingTime");return{info:e,symbol:r,markPrice:this.safeNumber(e,"markPrice"),indexPrice:this.safeNumber(e,"indexPrice"),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:i,datetime:this.iso8601(i),fundingRate:a,fundingTimestamp:n,fundingDatetime:this.iso8601(n),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRates(e=undefined,t={}){let i;await this.loadMarkets();const s={};let r;if(void 0!==e&&(e=this.marketSymbols(e),i=this.market(e[0]),1===e.length&&(s.symbol=i.id)),[r,t]=this.handleMarketTypeAndParams("fetchFundingRates",i,t),"swap"!==r)throw new a.NotSupported(this.id+" fetchFundingRates() does not support "+r+" markets");{let e;[e,t]=this.handleSubTypeAndParams("fetchFundingRates",i,t,"linear"),s.category=e}const n=await this.publicGetV5MarketTickers(this.extend(s,t));let o=this.safeValue(n,"result",[]);const d=this.safeInteger(n,"time");o=this.safeValue(o,"list");const c={};for(let e=0;e<o.length;e++){o[e].timestamp=d;const t=this.parseFundingRate(o[e],void 0);c[t.symbol]=t}return this.filterByArray(c,"symbol",e)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){this.checkRequiredSymbol("fetchFundingRateHistory",e),await this.loadMarkets();const r={},n=this.market(e);if(e=n.symbol,r.symbol=n.id,n.option)throw new a.NotSupported(this.id+" fetchFundingRateHistory() is not supported for option markets");n.linear?r.category="linear":n.inverse&&(r.category="inverse"),void 0!==t&&(r.startTime=t);const o=this.safeInteger2(s,"until","till"),d=this.safeInteger(s,"endTime",o);s=this.omit(s,["endTime","till","until"]),void 0!==d&&(r.endTime=d),void 0!==i&&(r.limit=i);const c=await this.publicGetV5MarketFundingHistory(this.extend(r,s)),h=[],u=this.safeValue(c,"result"),l=this.safeValue(u,"list");for(let e=0;e<l.length;e++){const t=l[e],i=this.safeInteger(t,"fundingRateTimestamp");h.push({info:t,symbol:this.safeSymbol(this.safeString(t,"symbol"),void 0,void 0,"swap"),fundingRate:this.safeNumber(t,"fundingRate"),timestamp:i,datetime:this.iso8601(i)})}const p=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(p,e,t,i)}parseTrade(e,t=undefined){return"isBuyerMaker"in e||"feeTokenId"in e?this.parseSpotTrade(e,t):this.parseContractTrade(e,t)}parseSpotTrade(e,t=undefined){const i=this.safeIntegerN(e,["time","creatTime"]);let s,r;const a=this.safeInteger(e,"isBuyerMaker");if(void 0!==a)r=1===a?"buy":"sell";else{const t=this.safeInteger(e,"isBuyer");s=0===this.safeInteger(e,"isMaker")?"maker":"taker",r=0===t?"buy":"sell"}const n=this.safeString(e,"symbol");let o;t=this.safeMarket(n,t,void 0,"spot");const d=this.safeString(e,"execFee");if(void 0!==d){const t=this.safeString(e,"feeTokenId");o={cost:d,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:this.safeString(e,"tradeId"),info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:this.safeString(e,"orderId"),type:void 0,side:r,takerOrMaker:s,price:this.safeString2(e,"price","orderPrice"),amount:this.safeString2(e,"qty","orderQty"),cost:void 0,fee:o},t)}parseContractTrade(e,t=undefined){const i=this.safeStringN(e,["execId","id","tradeId"]),s=this.safeString(e,"symbol");let r="contract";void 0!==t&&(r=t.type);const a=this.safeString(e,"category");void 0!==a&&"spot"===a&&(r="spot");const n=(t=this.safeMarket(s,t,void 0,r)).symbol,o=this.safeStringN(e,["execQty","orderQty","size"]),d=this.safeStringN(e,["execPrice","orderPrice","price"]),c=this.safeString(e,"execValue"),h=this.safeIntegerN(e,["time","execTime","tradeTime"]);let u=this.safeStringLower(e,"side");if(void 0===u){const t=this.safeInteger(e,"isBuyer");void 0!==t&&(u=t?"buy":"sell")}const l=this.safeValue(e,"isMaker");let p;if(void 0!==l)p=l?"maker":"taker";else{let t=this.safeString(e,"lastLiquidityInd");"UNKNOWN"===t&&(t=void 0),void 0!==t&&(p="TAKER"===t||"MAKER"===t?t.toLowerCase():"AddedLiquidity"===t?"maker":"taker")}let f=this.safeStringLower(e,"orderType");"unknown"===f&&(f=void 0);const m=this.safeString(e,"execFee");let v;if(void 0!==m){let i;i=t.spot?this.safeString(e,"commissionAsset"):t.inverse?t.base:t.settle,v={cost:m,currency:i}}return this.safeTrade({id:i,info:e,timestamp:h,datetime:this.iso8601(h),symbol:n,order:this.safeString(e,"orderId"),type:f,side:u,takerOrMaker:p,price:d,amount:o,cost:c,fee:v},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){this.checkRequiredSymbol("fetchTrades",e),await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i),"spot"===r.type?a.category="spot":r.option?a.category="option":r.linear?a.category="linear":r.inverse&&(a.category="inverse");const n=await this.publicGetV5MarketRecentTrade(this.extend(a,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"list",[]);return this.parseTrades(d,r,t,i)}async fetchOrderBook(e,t=undefined,i={}){this.checkRequiredSymbol("fetchOrderBook",e),await this.loadMarkets();const s=this.market(e),r={symbol:s.id};let a=25;s.spot?(a=50,r.category="spot"):s.option?r.category="option":s.linear?r.category="linear":s.inverse&&(r.category="inverse"),r.limit=void 0!==t?t:a;const n=await this.publicGetV5MarketOrderbook(this.extend(r,i)),o=this.safeValue(n,"result",[]),d=this.safeInteger(o,"ts");return this.parseOrderBook(o,e,d,"b","a")}parseBalance(e){const t={info:e},i=this.safeValue(e,"result",{}),s=this.safeValueN(i,["loanAccountList","list","coin","balances","balance"]);if(void 0===s){const e="USDC",s=this.account();s.free=this.safeString(i,"availableBalance"),s.total=this.safeString(i,"walletBalance"),t[e]=s}else for(let e=0;e<s.length;e++){const i=s[e],r=this.safeString(i,"accountType");if("UNIFIED"===r||"CONTRACT"===r){const e=this.safeValue(i,"coin");for(let i=0;i<e.length;i++){const s=this.account(),r=e[i],a=this.safeString(r,"borrowAmount"),o=this.safeString(r,"accruedInterest");void 0!==a&&void 0!==o&&(s.debt=n.O.stringAdd(a,o)),s.total=this.safeString(r,"walletBalance"),s.free=this.safeString(r,"availableToWithdraw");const d=this.safeString(r,"coin");t[this.safeCurrencyCode(d)]=s}}else{const e=this.account(),s=this.safeString(i,"loan"),r=this.safeString(i,"interest");void 0!==s&&void 0!==r&&(e.debt=n.O.stringAdd(s,r)),e.total=this.safeString2(i,"total","walletBalance"),e.free=this.safeStringN(i,["free","availableBalanceWithoutConvert","availableBalance","transferBalance"]),e.used=this.safeString(i,"locked");const a=this.safeStringN(i,["tokenId","coin","currencyCoin"]);t[this.safeCurrencyCode(a)]=e}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t={};let i;const[s,r]=await this.isUnifiedEnabled();let a;[a,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);const n="spot"===a;if(n)if(r||s)i="privateGetSpotV3PrivateAccount";else{let t;[t,e]=this.handleMarginModeAndParams("fetchBalance",e),i=void 0!==t?"privateGetSpotV3PrivateCrossMarginAccount":"privateGetSpotV3PrivateAccount"}else r||s?"swap"===a&&(a="unified"):"swap"===a&&(a="contract");if(!n){const e=this.safeValue(this.options,"accountsByType",{}),s=this.safeStringUpper(e,a,a);i="FUND"===s?"privateGetAssetV3PrivateTransferAccountCoinsBalanceQuery":r?"privateGetV5AccountWalletBalance":"privateGetContractV3PrivateAccountWalletBalance",t.accountType=s}const o=await this[i](this.extend(t,e));return this.parseBalance(o)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"open",PENDING_NEW:"open",REJECTED:"rejected",PARTIALLY_FILLED_CANCELLED:"canceled",Created:"open",New:"open",Rejected:"rejected",PartiallyFilled:"open",PartiallyFilledCanceled:"canceled",Filled:"closed",PendingCancel:"open",Cancelled:"canceled",Untriggered:"open",Deactivated:"canceled",Triggered:"open",Active:"open"},e,e)}parseTimeInForce(e){return this.safeString({GoodTillCancel:"GTC",ImmediateOrCancel:"IOC",FillOrKill:"FOK",PostOnly:"PO"},e,e)}parseOrder(e,t=undefined){return"orderCategory"in e?this.parseSpotOrder(e,t):this.parseContractOrder(e,t)}parseContractOrder(e,t=undefined){const i=this.safeString(e,"symbol");let s="contract";void 0!==t&&(s=t.type);const r=this.safeString(e,"category");void 0!==r&&"spot"===r&&(s="spot");const a=(t=this.safeMarket(i,t,void 0,s)).symbol,n=this.safeInteger(e,"createdTime"),o=this.safeString(e,"orderId"),d=this.safeStringLower(e,"orderType"),c=this.safeString(e,"price"),h=this.safeString(e,"qty"),u=this.safeString(e,"cumExecValue"),l=this.safeString(e,"cumExecQty"),p=this.safeString(e,"leavesQty"),f=this.safeInteger(e,"updateTime"),m=this.safeString(e,"orderStatus"),v=this.parseOrderStatus(m),g=this.safeStringLower(e,"side");let y;const b=this.safeString(e,"cumExecFee");void 0!==b&&(y={cost:b,currency:t.settle});let w=this.safeString(e,"orderLinkId");void 0!==w&&w.length<1&&(w=void 0);const S=this.safeString(e,"timeInForce"),P=this.parseTimeInForce(S),k=this.omitZero(this.safeString(e,"triggerPrice"));return this.safeOrder({info:e,id:o,clientOrderId:w,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:f,symbol:a,type:d,timeInForce:P,postOnly:void 0,reduceOnly:this.safeValue(e,"reduceOnly"),side:g,price:c,stopPrice:k,triggerPrice:k,amount:h,cost:u,average:void 0,filled:l,remaining:p,status:v,fee:y,trades:void 0},t)}parseSpotOrder(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t,void 0,"spot");const s=this.safeInteger(e,"createTime"),r=this.safeStringLower(e,"orderType");let a=this.safeString(e,"orderPrice");"0"===a&&"market"===r&&(a=void 0);const n=this.safeString(e,"execQty"),o=this.safeStringLower(e,"side"),d=this.parseTimeInForce(this.safeString(e,"timeInForce")),c=this.safeString(e,"triggerPrice"),h="PO"===d;let u;return u=t.spot&&"market"===r&&"buy"===o?n:this.safeString(e,"orderQty"),this.safeOrder({id:this.safeString(e,"orderId"),clientOrderId:this.safeString(e,"orderLinkId"),timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:this.safeInteger(e,"updateTime"),symbol:t.symbol,type:r,timeInForce:d,postOnly:h,side:o,price:a,triggerPrice:c,stopPrice:c,amount:u,cost:this.safeString(e,"cummulativeQuoteQty"),average:this.safeString(e,"avgPrice"),filled:n,remaining:void 0,status:this.parseOrderStatus(this.safeString(e,"status")),fee:void 0,trades:void 0,info:e},t)}async fetchOrder(e,t=undefined,i={}){let s,r;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[r,i]=this.handleMarketTypeAndParams("fetchOrder",s,i);const n=await this.isUnifiedEnabled();if(this.safeValue(n,1,!1))throw new a.NotSupported(this.id+" fetchOrder() does not support unified account. Please consider using fetchOpenOrders() or fetchClosedOrders()");if("spot"===r){const t={orderId:e},r=await this.privateGetSpotV3PrivateOrder(this.extend(i,t)),a=this.safeValue(r,"result",{});return this.parseOrder(a,s)}{this.checkRequiredSymbol("fetchOrder",t);const s={orderId:e},r=await this.fetchOrders(t,void 0,void 0,this.extend(s,i)),n=r.length;if(0===n)throw new a.OrderNotFound("Order "+e+" does not exist.");if(n>1)throw new a.InvalidOrder(this.id+" returned more than one order");return this.safeValue(r,0)}}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets(),this.checkRequiredSymbol("createOrder",e);const n=this.market(e);e=n.symbol;const[o,d]=await this.isUnifiedEnabled(),c="USDC"===n.settle;return d&&!n.inverse?await this.createUnifiedAccountOrder(e,t,i,s,r,a):n.spot?await this.createSpotOrder(e,t,i,s,r,a):o&&!n.inverse?await this.createUnifiedMarginOrder(e,t,i,s,r,a):c?await this.createUsdcOrder(e,t,i,s,r,a):await this.createContractV3Order(e,t,i,s,r,a)}async createUnifiedAccountOrder(e,t,i,s,r=undefined,o={}){await this.loadMarkets();const d=this.market(e),c=t.toLowerCase();if(void 0===r&&"limit"===c)throw new a.ArgumentsRequired(this.id+" createOrder requires a price argument for limit orders");const h={symbol:d.id,side:this.capitalize(i),orderType:this.capitalize(c)};if(d.spot)h.category="spot";else if(d.linear)h.category="linear";else{if(!d.option)throw new a.NotSupported(this.id+" createOrder does not allow inverse market orders for "+e+" markets");h.category="option"}if(d.spot&&"market"===t&&"buy"===i){if(this.options.createMarketBuyOrderRequiresPrice){const t=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),void 0===r&&void 0===t)throw new a.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");{const i=this.numberToString(s),a=this.numberToString(r),o=n.O.stringMul(i,a);s=void 0!==t?t:this.parseNumber(o),h.qty=this.costToPrecision(e,s)}}}else h.qty=this.amountToPrecision(e,s);const u="market"===c;"limit"===c&&(h.price=this.priceToPrecision(e,r));const l=this.safeString(o,"time_in_force"),p=this.safeStringLower(o,"timeInForce");this.isPostOnly(u,"PostOnly"===l,o)?h.timeInForce="PostOnly":"gtc"===p?h.timeInForce="GTC":"fok"===p?h.timeInForce="FOK":"ioc"===p&&(h.timeInForce="IOC");let f=this.safeNumber2(o,"triggerPrice","stopPrice");const m=this.safeNumber(o,"stopLossPrice"),v=this.safeNumber(o,"takeProfitPrice"),g=this.safeNumber(o,"stopLoss"),y=this.safeNumber(o,"takeProfit"),b=void 0!==m,w=void 0!==v,S=void 0!==g,P=void 0!==y,k="buy"===i,O=m?!k:k;void 0!==f?(h.triggerDirection=O?2:1,h.triggerPrice=this.priceToPrecision(e,f)):b||w?(h.triggerDirection=O?2:1,f=b?m:v,h.triggerPrice=this.priceToPrecision(e,f),h.reduceOnly=!0):(S||P)&&(S&&(h.stopLoss=this.priceToPrecision(e,g)),P&&(h.takeProfit=this.priceToPrecision(e,y))),d.spot&&(void 0!==f||void 0!==m||void 0!==v||S||P)&&(h.orderFilter="tpslOrder");const T=this.safeString(o,"clientOrderId");void 0!==T?h.orderLinkId=T:d.option&&(h.orderLinkId=this.uuid16()),o=this.omit(o,["stopPrice","timeInForce","stopLossPrice","takeProfitPrice","postOnly","clientOrderId"]);const A=await this.privatePostV5OrderCreate(this.extend(h,o)),G=this.safeValue(A,"result",{});return this.parseOrder(G)}async createSpotOrder(e,t,i,s,r=undefined,o={}){await this.loadMarkets();const d=this.market(e),c=t.toUpperCase(),h={symbol:d.id,side:this.capitalize(i),orderType:c,timeInForce:"GTC"};if("market"===t&&"buy"===i){if(this.options.createMarketBuyOrderRequiresPrice){const t=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),void 0===r&&void 0===t)throw new a.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");{const i=this.numberToString(s),a=this.numberToString(r),o=n.O.stringMul(i,a);s=void 0!==t?t:this.parseNumber(o),h.orderQty=this.costToPrecision(e,s)}}}else h.orderQty=this.amountToPrecision(e,s);if("LIMIT"===c||"LIMIT_MAKER"===c){if(void 0===r)throw new a.InvalidOrder(this.id+" createOrder requires a price argument for a "+t+" order");h.orderPrice=this.priceToPrecision(e,r)}this.isPostOnly("MARKET"===c,"LIMIT_MAKER"===t,o)&&(h.orderType="LIMIT_MAKER");const u=this.safeString2(o,"clientOrderId","orderLinkId");void 0!==u&&(h.orderLinkId=u),o=this.omit(o,["clientOrderId","orderLinkId","postOnly"]);const l=this.safeString(this.options,"brokerId");void 0!==l&&(h.agentSource=l);const p=this.safeNumber2(o,"triggerPrice","stopPrice");void 0!==p&&(h.triggerPrice=this.priceToPrecision(e,p)),o=this.omit(o,"stopPrice");const f=await this.privatePostSpotV3PrivateOrder(this.extend(h,o)),m=this.safeValue(f,"result",{});return this.parseOrder(m)}async createUnifiedMarginOrder(e,t,i,s,r=undefined,o={}){await this.loadMarkets();const d=this.market(e);if(!d.linear&&!d.option)throw new a.NotSupported(this.id+" createOrder does not allow inverse market orders for "+e+" markets");const c=t.toLowerCase();if(void 0===r&&"limit"===c)throw new a.ArgumentsRequired(this.id+" createOrder requires a price argument for limit orders");const h={symbol:d.id,side:this.capitalize(i),orderType:this.capitalize(c),timeInForce:"GoodTillCancel",qty:this.amountToPrecision(e,s)};d.linear?h.category="linear":h.category="option";const u="market"===c;"limit"===c&&(h.price=this.priceToPrecision(e,r));const l=this.safeString(o,"time_in_force"),p=this.safeStringLower(o,"timeInForce");this.isPostOnly(u,"PostOnly"===l,o)?h.timeInForce="PostOnly":"gtc"===p?h.timeInForce="GoodTillCancel":"fok"===p?h.timeInForce="FillOrKill":"ioc"===p&&(h.timeInForce="ImmediateOrCancel");const f=this.safeNumber2(o,"stopPrice","triggerPrice"),m=this.safeNumber(o,"stopLossPrice",f),v=this.safeNumber(o,"takeProfitPrice"),g=this.safeNumber(o,"stopLoss"),y=this.safeNumber(o,"takeProfit"),b=void 0!==m,w=void 0!==g,S=void 0!==y;if(b||void 0!==v){h.triggerBy="LastPrice";const t=b?m:v,s=this.priceToPrecision(e,t);h.triggerPrice=s;const r="buy"===i,a=m?!r:r,o=this.numberToString(d.precision.price);h.basePrice=a?n.O.stringAdd(s,o):n.O.stringSub(s,o)}else(w||S)&&(w&&(h.stopLoss=this.priceToPrecision(e,g)),S&&(h.takeProfit=this.priceToPrecision(e,y)));const P=this.safeString(o,"clientOrderId");void 0!==P?h.orderLinkId=P:d.option&&(h.orderLinkId=this.uuid16()),o=this.omit(o,["stopPrice","timeInForce","triggerPrice","stopLossPrice","takeProfitPrice","postOnly","clientOrderId"]);const k=await this.privatePostUnifiedV3PrivateOrderCreate(this.extend(h,o)),O=this.safeValue(k,"result",{});return this.parseOrder(O)}async createContractV3Order(e,t,i,s,r=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=t.toLowerCase();if(void 0===r&&"limit"===d)throw new a.ArgumentsRequired(this.id+" createContractV3Order requires a price argument for limit orders");const c={symbol:o.id,side:this.capitalize(i),orderType:this.capitalize(d),timeInForce:"GoodTillCancel",qty:this.amountToPrecision(e,s)};if(o.future){const e=this.safeInteger(n,"position_idx",0);c.position_idx=e,n=this.omit(n,"position_idx")}const h="market"===d;"limit"===d&&(c.price=this.priceToPrecision(e,r));const u=this.safeString(n,"time_in_force"),l=this.safeStringLower(n,"timeInForce");this.isPostOnly(h,"PostOnly"===u,n)?c.timeInForce="PostOnly":"gtc"===l?c.timeInForce="GoodTillCancel":"fok"===l?c.timeInForce="FillOrKill":"ioc"===l&&(c.timeInForce="ImmediateOrCancel");let p=this.safeNumber2(n,"triggerPrice","stopPrice");const f=this.safeNumber(n,"stopLossPrice"),m=this.safeNumber(n,"takeProfitPrice"),v=this.safeNumber(n,"stopLoss"),g=this.safeNumber(n,"takeProfit"),y=void 0!==f,b=void 0!==m,w=void 0!==v,S=void 0!==g,P="buy"===i,k=f?!P:P;void 0!==p?(c.triggerDirection=k?2:1,c.triggerPrice=this.priceToPrecision(e,p)):y||b?(c.triggerDirection=k?2:1,p=y?f:m,c.triggerPrice=this.priceToPrecision(e,p),c.reduceOnly=!0):(w||S)&&(w&&(c.stopLoss=this.priceToPrecision(e,v)),S&&(c.takeProfit=this.priceToPrecision(e,g)));const O=this.safeString(n,"clientOrderId");void 0!==O?c.orderLinkId=O:o.option&&(c.orderLinkId=this.uuid16()),n=this.omit(n,["stopPrice","timeInForce","stopLossPrice","takeProfitPrice","postOnly","clientOrderId"]);const T=await this.privatePostContractV3PrivateOrderCreate(this.extend(c,n)),A=this.safeValue(T,"result",{});return this.parseOrder(A)}async createUsdcOrder(e,t,i,s,r=undefined,o={}){await this.loadMarkets();const d=this.market(e);if("market"===t)throw new a.NotSupported(this.id+"createOrder does not allow market orders for "+e+" markets");const c=t.toLowerCase();if(void 0===r&&"limit"===c)throw new a.ArgumentsRequired(this.id+" createOrder requires a price argument for limit orders");const h={symbol:d.id,side:this.capitalize(i),orderType:this.capitalize(c),timeInForce:"GoodTillCancel",orderQty:this.amountToPrecision(e,s)},u="market"===c;void 0!==("limit"===c)&&(h.orderPrice=this.priceToPrecision(e,r));const l=this.safeString(o,"time_in_force"),p=this.safeStringLower(o,"timeInForce");if(this.isPostOnly(u,"PostOnly"===l,o)?h.time_in_force="PostOnly":"gtc"===p?h.time_in_force="GoodTillCancel":"fok"===p?h.time_in_force="FillOrKill":"ioc"===p&&(h.time_in_force="ImmediateOrCancel"),d.swap){const t=this.safeNumber2(o,"stopPrice","triggerPrice"),i=this.safeNumber(o,"stopLossPrice",t),s=this.safeNumber(o,"takeProfitPrice"),r=this.safeNumber(o,"stopLoss"),a=this.safeNumber(o,"takeProfit"),c=void 0!==i,u=void 0!==r,l=void 0!==a;if(c||void 0!==s){h.orderFilter="StopOrder",h.trigger_by="LastPrice";const t=c?i:s,r=this.priceToPrecision(e,t);h.triggerPrice=r;const a=this.numberToString(d.precision.price);h.basePrice=c?n.O.stringSub(r,a):n.O.stringAdd(r,a)}else u||l?(u&&(h.stopLoss=this.priceToPrecision(e,r)),l&&(h.takeProfit=this.priceToPrecision(e,a))):h.orderFilter="Order"}const f=this.safeString(o,"clientOrderId");void 0!==f?h.orderLinkId=f:d.option&&(h.orderLinkId=this.uuid16()),o=this.omit(o,["stopPrice","timeInForce","triggerPrice","stopLossPrice","takeProfitPrice","postOnly","clientOrderId"]);const m=d.option?"privatePostOptionUsdcOpenapiPrivateV1PlaceOrder":"privatePostPerpetualUsdcOpenapiPrivateV1PlaceOrder",v=await this[m](this.extend(h,o)),g=this.safeValue(v,"result",{});return this.parseOrder(g)}async editUnifiedAccountOrder(e,t,i,s,r=undefined,n=undefined,o={}){await this.loadMarkets();const d=this.market(t);if(!d.linear&&!d.option)throw new a.NotSupported(this.id+" editOrder does not allow inverse market orders for "+t+" markets");const c={symbol:d.id,orderId:e,qty:this.amountToPrecision(t,r)};d.linear?c.category="linear":c.category="option",void 0!==n&&(c.price=this.priceToPrecision(t,n));const h=this.safeValue2(o,"stopPrice","triggerPrice"),u=this.safeValue(o,"stopLossPrice"),l=void 0!==u,p=this.safeValue(o,"takeProfitPrice"),f=void 0!==p;l&&(c.stopLoss=this.priceToPrecision(t,u)),f&&(c.takeProfit=this.priceToPrecision(t,p)),void 0!==h&&(c.triggerPrice=this.priceToPrecision(t,h)),o=this.omit(o,["stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]);const m=await this.privatePostV5OrderAmend(this.extend(c,o)),v=this.safeValue(m,"result",{});return{info:m,id:this.safeString(v,"orderId")}}async editUnifiedMarginOrder(e,t,i,s,r,n=undefined,o={}){await this.loadMarkets();const d=this.market(t);if(!d.linear&&!d.option)throw new a.NotSupported(this.id+" editOrder does not allow inverse market orders for "+t+" markets");const c=i.toLowerCase();if(void 0===n&&"limit"===c)throw new a.ArgumentsRequired(this.id+" editOrder requires a price argument for limit orders");const h={orderId:e,symbol:d.id,side:this.capitalize(s),orderType:this.capitalize(c),timeInForce:"GoodTillCancel",qty:this.amountToPrecision(t,r)};d.linear?h.category="linear":h.category="option";const u="market"===c;"limit"===c&&(h.price=this.priceToPrecision(t,n));const l=this.safeString(o,"time_in_force"),p=this.safeStringLower(o,"timeInForce");this.isPostOnly(u,"PostOnly"===l,o)?h.timeInForce="PostOnly":"gtc"===p?h.timeInForce="GoodTillCancel":"fok"===p?h.timeInForce="FillOrKill":"ioc"===p&&(h.timeInForce="ImmediateOrCancel");const f=this.safeValue2(o,"stopPrice","triggerPrice"),m=this.safeValue(o,"stopLossPrice"),v=void 0!==m,g=this.safeValue(o,"takeProfitPrice"),y=void 0!==g;v&&(h.stopLoss=this.priceToPrecision(t,m)),y&&(h.takeProfit=this.priceToPrecision(t,g)),void 0!==f&&(h.triggerBy="LastPrice",h.triggerPrice=this.priceToPrecision(t,f));const b=this.safeString(o,"clientOrderId");void 0!==b&&(h.orderLinkId=b),o=this.omit(o,["stopPrice","timeInForce","triggerPrice","stopLossPrice","takeProfitPrice","postOnly","clientOrderId"]);const w=await this.privatePostUnifiedV3PrivateOrderReplace(this.extend(h,o)),S=this.safeValue(w,"result",{});return this.parseOrder(S)}async editContractV3Order(e,t,i,s,r=undefined,a=undefined,n={}){await this.loadMarkets();const o={symbol:this.market(t).id,orderId:e,qty:this.amountToPrecision(t,r)};void 0!==a&&(o.price=this.priceToPrecision(t,a));const d=this.safeValue2(n,"stopPrice","triggerPrice"),c=this.safeValue(n,"stopLossPrice"),h=void 0!==c,u=this.safeValue(n,"takeProfitPrice"),l=void 0!==u;h&&(o.stopLoss=this.priceToPrecision(t,c)),l&&(o.takeProfit=this.priceToPrecision(t,u)),void 0!==d&&(o.triggerPrice=this.priceToPrecision(t,d)),n=this.omit(n,["stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]);const p=await this.privatePostContractV3PrivateOrderReplace(this.extend(o,n)),f=this.safeValue(p,"result",{});return{info:p,id:this.safeString(f,"orderId")}}async editOrder(e,t,i,s,r=undefined,n=undefined,o={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" editOrder() requires an symbol argument");await this.loadMarkets();const d=this.market(t),[c,h]=await this.isUnifiedEnabled();if(h)return await this.editUnifiedAccountOrder(e,t,i,s,r,n,o);if(d.spot)throw new a.NotSupported(this.id+" editOrder() does not support spot markets");return c&&!d.inverse?await this.editUnifiedMarginOrder(e,t,i,s,r,n,o):await this.editContractV3Order(e,t,i,s,r,n,o)}async cancelUnifiedAccountOrder(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),r={symbol:s.id};if(s.spot){const e=this.safeValue(i,"stop",!1);i=this.omit(i,["stop"]),r.orderFilter=e?"tpslOrder":"Order"}if(void 0!==e&&(r.orderId=e),s.spot)r.category="spot";else if(s.option)r.category="option";else{if(!s.linear)throw new a.NotSupported(this.id+" cancelOrder() does not allow inverse market orders for "+t+" markets");r.category="linear"}const n=await this.privatePostV5OrderCancel(this.extend(r,i)),o=this.safeValue(n,"result",{});return this.parseOrder(o,s)}async cancelSpotOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(t),r={};void 0!==e&&(r.orderId=e);const a=await this.privatePostSpotV3PrivateCancelOrder(this.extend(r,i)),n=this.safeValue(a,"result",{});return this.parseOrder(n,s)}async cancelUnifiedMarginOrder(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" cancelUnifiedMarginOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),r={symbol:s.id},n=this.safeValue(i,"stop",!1);if(i=this.omit(i,["stop"]),r.orderFilter=n?"StopOrder":"Order",void 0!==e&&(r.orderId=e),s.option)r.category="option";else{if(!s.linear)throw new a.NotSupported(this.id+" cancelUnifiedMarginOrder() does not allow inverse market orders for "+t+" markets");r.category="linear"}const o=await this.privatePostUnifiedV3PrivateOrderCancel(this.extend(r,i)),d=this.safeValue(o,"result",{});return this.parseOrder(d,s)}async cancelUSDCOrder(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" cancelUSDCOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),r={symbol:s.id},n=this.safeValue(i,"stop",!1);let o;i=this.omit(i,["stop"]),void 0!==e&&(r.orderId=e),s.option?o="privatePostOptionUsdcOpenapiPrivateV1CancelOrder":(o="privatePostPerpetualUsdcOpenapiPrivateV1CancelOrder",r.orderFilter=n?"StopOrder":"Order");const d=await this[o](this.extend(r,i)),c=this.safeValue(d,"result",{});return this.parseOrder(c,s)}async cancelDerivativesOrder(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" cancelDerivativesOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),r={symbol:s.id,orderId:e},n=await this.privatePostContractV3PrivateOrderCancel(this.extend(r,i)),o=this.safeValue(n,"result",{});return this.parseOrder(o,s)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new a.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),[r,n]=await this.isUnifiedEnabled(),o="USDC"===s.settle;return n?await this.cancelUnifiedAccountOrder(e,t,i):s.spot?await this.cancelSpotOrder(e,t,i):r&&!s.inverse?await this.cancelUnifiedMarginOrder(e,t,i):o?await this.cancelUSDCOrder(e,t,i):await this.cancelDerivativesOrder(e,t,i)}async cancelAllUnifiedAccountOrders(e=undefined,t={}){let i,s,r,n;await this.loadMarkets();const o={};if(void 0!==e?(i=this.market(e),s=i.settle,o.symbol=i.id):[s,t]=this.handleOptionAndParams(t,"cancelAllOrders","settle","USDT"),[r,t]=this.handleMarketTypeAndParams("cancelAllOrders",i,t),[n,t]=this.handleSubTypeAndParams("cancelAllOrders",i,t,"linear"),"spot"===r)o.category="spot";else if("option"===r)o.category="option";else{if("linear"!==n)throw new a.NotSupported(this.id+" cancelAllOrders() does not allow inverse market orders for "+r+" markets");o.category="linear"}o.settleCoin=s;const d=this.safeValue(t,"stop",!1);t=this.omit(t,["stop"]),d&&(o.orderFilter="tpslOrder");const c=await this.privatePostV5OrderCancelAll(this.extend(o,t)),h=this.safeValue(c,"result",[]),u=this.safeValue(h,"list");return Array.isArray(u)?this.parseOrders(u,i):c}async cancelAllSpotOrders(e=undefined,t={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" cancelAllSpotOrders() requires a symbol argument");await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.privateDeleteSpotOrderBatchCancel(this.extend(s,t)),n=this.safeValue(r,"result",[]);return Array.isArray(n)?this.parseOrders(n,i):r}async cancelAllUnifiedMarginOrders(e=undefined,t={}){let i,s;await this.loadMarkets();const r={};let a;void 0!==e&&(i=this.market(e),s=i.settle,r.symbol=i.id),[a,t]=this.handleSubTypeAndParams("cancelAllOrders",i,t,"linear"),r.category=a,[s,t]=this.handleOptionAndParams(t,"cancelAllOrders","settle",s),void 0!==s&&(r.settleCoin=s);const n=this.safeValue(t,"stop",!1);t=this.omit(t,["stop"]),n&&(r.orderFilter="StopOrder");const o=await this.privatePostUnifiedV3PrivateOrderCancelAll(this.extend(r,t)),d=this.safeValue(o,"result",[]),c=this.safeValue(d,"list");return Array.isArray(c)?this.parseOrders(c,i):o}async cancelAllUSDCOrders(e=undefined,t={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" cancelAllUSDCOrders() requires a symbol argument");await this.loadMarkets();const i=this.market(e);let s;const r={symbol:i.id};if(i.option)s="privatePostOptionUsdcOpenapiPrivateV1CancelAll";else{s="privatePostPerpetualUsdcOpenapiPrivateV1CancelAll";const e=this.safeValue(t,"stop",!1);r.orderFilter=e?"StopOrder":"Order",t=this.omit(t,["stop"])}const n=await this[s](this.extend(r,t)),o=this.safeValue(n,"result",[]);return Array.isArray(o)?this.parseOrders(o,i):n}async cancelAllDerivativesOrders(e=undefined,t={}){let i,s;await this.loadMarkets();const r={};void 0!==e&&(i=this.market(e),s=i.settle,r.symbol=i.id),[s,t]=this.handleOptionAndParams(t,"cancelAllOrders","settle",s),void 0!==s&&(r.settleCoin=s);const a=await this.privatePostContractV3PrivateOrderCancelAll(this.extend(r,t)),n=this.safeValue(a,"result",[]),o=this.safeValue(n,"list",[]);return this.parseOrders(o,i)}async cancelAllOrders(e=undefined,t={}){let i;await this.loadMarkets();let s,r=this.safeString(t,"settleCoin");void 0===r&&([r,t]=this.handleOptionAndParams(t,"cancelAllOrders","settle",r)),void 0!==e&&(i=this.market(e),r=i.settle),[s,t]=this.handleSubTypeAndParams("cancelAllOrders",i,t);const n="USDC"===r,o="inverse"===s;if(o&&(n||"USDT"===r))throw new a.ArgumentsRequired(this.id+" cancelAllOrders with inverse subType requires settle to not be USDT or USDC");const[d,c]=this.handleMarketTypeAndParams("cancelAllOrders",i,t),[h,u]=await this.isUnifiedEnabled();return u?await this.cancelAllUnifiedAccountOrders(e,c):"spot"===d?await this.cancelAllSpotOrders(e,c):h&&!o?await this.cancelAllUnifiedMarginOrders(e,c):n?await this.cancelAllUSDCOrders(e,c):await this.cancelAllDerivativesOrders(e,c)}async fetchUnifiedAccountOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let n;if(void 0===e){let e;if([e,s]=this.handleMarketTypeAndParams("fetchOrders",n,s),r.category=e,"swap"===e){let e;[e,s]=this.handleSubTypeAndParams("fetchOrders",n,s,"linear"),r.category=e}}else if(n=this.market(e),r.symbol=n.id,n.spot)r.category="spot";else if(n.option)r.category="option";else{if(!n.linear)throw new a.NotSupported(this.id+" fetchOrders() does not allow inverse market orders for "+e+" markets");r.category="linear"}const o=this.safeValue(s,"stop",!1);s=this.omit(s,["stop"]),o&&(n.spot?r.orderFilter="tpslOrder":r.orderFilter="StopOrder"),void 0!==i&&(r.limit=i);const d=await this.privateGetV5OrderHistory(this.extend(r,s)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,"list",[]);return this.parseOrders(h,n,t,i)}async fetchUnifiedMarginOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let n;if(void 0===e){let e;[e,s]=this.handleSubTypeAndParams("fetchUnifiedMarginOrders",n,s,"linear"),r.category=e}else if(n=this.market(e),r.symbol=n.id,n.option)r.category="option";else{if(!n.linear)throw new a.NotSupported(this.id+" fetchUnifiedMarginOrders() does not allow inverse market orders for "+e+" markets");r.category="linear"}const o=this.safeValue(s,"stop",!1);s=this.omit(s,["stop"]),o&&(r.orderFilter="StopOrder"),void 0!==i&&(r.limit=i);const d=await this.privateGetUnifiedV3PrivateOrderList(this.extend(r,s)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,"list",[]);return this.parseOrders(h,n,t,i)}async fetchDerivativesOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};if(void 0===e){let e;if([e,s]=this.handleMarketTypeAndParams("fetchOrders",r,s),a.category=e,"swap"===e){let e;[e,s]=this.handleSubTypeAndParams("fetchOrders",r,s,"linear"),a.category=e}}else r=this.market(e),a.symbol=r.id,r.linear?a.category="linear":a.category="inverse";const n=this.safeValue(s,"stop",!1);s=this.omit(s,["stop"]),n&&(a.orderFilter="StopOrder"),void 0!==i&&(a.limit=i);const o=await this.privateGetV5OrderHistory(this.extend(a,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"list",[]);return this.parseOrders(c,r,t,i)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();let n,o=this.safeString(s,"settleCoin");void 0===o&&([o,s]=this.handleOptionAndParams(s,"fetchOrders","settle",o)),void 0!==e&&(r=this.market(e),o=r.settle),[n,s]=this.handleSubTypeAndParams("fetchOrders",r,s);const d="inverse"===n;if(d&&("USDC"===o||"USDT"===o))throw new a.ArgumentsRequired(this.id+" fetchOrders with inverse subType requires settle to not be USDT or USDC");const[c,h]=this.handleMarketTypeAndParams("fetchOrders",r,s),[u,l]=await this.isUnifiedEnabled();if(l&&!d)return await this.fetchUnifiedAccountOrders(e,t,i,h);if("spot"===c)throw new a.NotSupported(this.id+" fetchOrders() only support "+c+" markets for unified trade account, use exchange.fetchOpenOrders () and exchange.fetchClosedOrders () instead");return u&&!d?await this.fetchUnifiedMarginOrders(e,t,i,h):await this.fetchDerivativesOrders(e,t,i,h)}async fetchSpotClosedOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={};void 0!==e&&(a.symbol=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.startTime=t);const n=await this.privateGetSpotV3PrivateHistoryOrders(this.extend(a,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"list",[]);return this.parseOrders(d,r,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){let r,a;await this.loadMarkets(),void 0!==e&&(r=this.market(e)),[a,s]=this.handleMarketTypeAndParams("fetchClosedOrders",r,s);const n=await this.isUnifiedEnabled(),o={};return"spot"!==a||n[1]?(o.orderStatus="Filled",await this.fetchOrders(e,t,i,this.extend(o,s))):await this.fetchSpotClosedOrders(e,t,i,s)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){let r,n;await this.loadMarkets(),void 0!==e&&(r=this.market(e)),[n,s]=this.handleMarketTypeAndParams("fetchCanceledOrders",r,s);const o=await this.isUnifiedEnabled(),d={};if("spot"===n&&!o[1])throw new a.NotSupported(this.id+" fetchCanceledOrders() only allow spot market orders for unified trade account, use exchange.fetchOpenOrders () and exchange.fetchClosedOrders () instead");return d.orderStatus="Cancelled",await this.fetchOrders(e,t,i,this.extend(d,s))}async fetchUnifiedAccountOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let n;if(void 0===e){let t,i;if([t,s]=this.handleMarketTypeAndParams("fetchOpenOrders",n,s),[i,s]=this.handleSubTypeAndParams("fetchOpenOrders",n,s,"linear"),r.category=t,"swap"===t){if("linear"===i)this.checkRequiredSymbol("fetchOpenOrders",e);else if("inverse"===i)throw new a.NotSupported(this.id+" fetchOpenOrders() does not allow inverse market orders for "+e+" markets");r.category=i}}else if(n=this.market(e),r.symbol=n.id,n.spot)r.category="spot";else if(n.option)r.category="option";else{if(!n.linear)throw new a.NotSupported(this.id+" fetchOpenOrders() does not allow inverse market orders for "+e+" markets");r.category="linear"}const o=this.safeValue(s,"stop",!1);s=this.omit(s,["stop"]),o&&(n.spot?r.orderFilter="tpslOrder":r.orderFilter="StopOrder"),void 0!==i&&(r.limit=i);const d=await this.privateGetV5OrderRealtime(this.extend(r,s)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,"list",[]);return this.parseOrders(h,n,t,i)}async fetchSpotOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==i&&(r.limit=i);const n=await this.privateGetSpotV3PrivateOpenOrders(this.extend(r,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"list",[]);return this.parseOrders(d,a,t,i)}async fetchUnifiedMarginOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let n,o;if(void 0===e){let e;[e,s]=this.handleSubTypeAndParams("fetchUnifiedMarginOrders",n,s,"linear"),r.category=e}else if(n=this.market(e),r.symbol=n.id,n.option)r.category="option";else{if(!n.linear)throw new a.NotSupported(this.id+" fetchUnifiedMarginOpenOrders() does not allow inverse market orders for "+e+" markets");r.category="linear"}[o,s]=this.handleMarketTypeAndParams("fetchUnifiedMarginOpenOrders",n,s);const d=this.safeValue(s,"stop",!1)||"stop"===o||"conditional"===o;s=this.omit(s,["stop"]),d&&(r.orderFilter="StopOrder"),void 0!==i&&(r.limit=i);const c=await this.privateGetUnifiedV3PrivateOrderUnfilledOrders(this.extend(r,s)),h=this.safeValue(c,"result",{}),u=this.safeValue(h,"list",[]);return this.parseOrders(u,n,t,i)}async fetchDerivativesOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r,a;await this.loadMarkets();const n={};if(void 0!==e)r=this.market(e),n.symbol=r.id,r.linear?n.category="linear":n.category="inverse";else{let e,t;[e,s]=this.handleMarketTypeAndParams("fetchOpenOrders",r,s),[t,s]=this.handleSubTypeAndParams("fetchOpenOrders",r,s,"linear"),n.category=e,"swap"===e&&(n.category=t)}[a,s]=this.handleOptionAndParams(s,"fetchOpenOrders","settle",a),void 0!==a&&(n.settleCoin=a);const o=this.safeValue(s,"stop",!1);s=this.omit(s,["stop"]),o&&(n.orderFilter="StopOrder"),void 0!==i&&(n.limit=i);const d=await this.privateGetV5OrderRealtime(this.extend(n,s)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,"list",[]);return this.parseOrders(h,r,t,i)}async fetchUSDCOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n;void 0!==e&&(a=this.market(e),r.symbol=a.id),[n,s]=this.handleMarketTypeAndParams("fetchUSDCOpenOrders",a,s),r.category="swap"===n?"perpetual":"option";const o=await this.privatePostOptionUsdcOpenapiPrivateV1QueryActiveOrders(this.extend(r,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"dataList",[]);return this.parseOrders(c,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();let n,o=this.safeString(s,"settleCoin");void 0===o&&([o,s]=this.handleOptionAndParams(s,"fetchOpenOrders","settle",o)),void 0!==e&&(r=this.market(e),o=r.settle),[n,s]=this.handleSubTypeAndParams("fetchOpenOrders",r,s);const d="inverse"===n,c="USDC"===o;if(d&&(c||"USDT"===o))throw new a.ArgumentsRequired(this.id+" fetchOpenOrders with inverse subType requires settle to not be USDT or USDC");const[h,u]=this.handleMarketTypeAndParams("fetchOpenOrders",r,s),[l,p]=await this.isUnifiedEnabled();return p&&!d?await this.fetchUnifiedAccountOpenOrders(e,t,i,u):"spot"===h?await this.fetchSpotOpenOrders(e,t,i,u):l&&!d?await this.fetchUnifiedMarginOpenOrders(e,t,i,u):c?await this.fetchUSDCOpenOrders(e,t,i,u):await this.fetchDerivativesOpenOrders(e,t,i,u)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){const a={orderId:e};return await this.fetchMyTrades(t,i,s,this.extend(a,r))}async fetchMyUnifiedTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const n={};let o;if(void 0!==e&&(r=this.market(e),n.symbol=r.id),[o,s]=this.handleMarketTypeAndParams("fetchMyTrades",r,s),"spot"===o)n.category="spot";else{let e;if([e,s]=this.handleSubTypeAndParams("fetchMyTrades",r,s),"inverse"===e)throw new a.NotSupported(this.id+" fetchMyTrades() does not support "+e+" markets.");n.category=e}void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const d=await this.privateGetV5ExecutionList(this.extend(n,s)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,"list",[]);return this.parseTrades(h,r,t,i)}async fetchMySpotTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchMySpotTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={symbol:r.id};void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const o=await this.privateGetSpotV3PrivateMyTrades(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"list",[]);return this.parseTrades(c,r,t,i)}async fetchMyUnifiedMarginTrades(e=undefined,t=undefined,i=undefined,s={}){let r,a;await this.loadMarkets();const n={};let o;void 0!==e&&(r=this.market(e),a=r.settle,n.symbol=r.id),[o,s]=this.handleSubTypeAndParams("fetchMyTrades",r,s,"linear"),n.category=o,[a,s]=this.handleOptionAndParams(s,"cancelAllOrders","settle",a),void 0!==a&&(n.settleCoin=a),void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const d=await this.privateGetUnifiedV3PrivateExecutionList(this.extend(n,s)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,"list",[]);return this.parseTrades(h,r,t,i)}async fetchMyContractTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchMyContractTrades() requires a symbol argument");let r;await this.loadMarkets();const n={};let o;void 0!==e&&(r=this.market(e),n.symbol=r.id),[o,s]=this.handleSubTypeAndParams("fetchMyTrades",r,s),n.category=o,void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const d=await this.privateGetV5ExecutionList(this.extend(n,s)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,"list",[]);return this.parseTrades(h,r,t,i)}async fetchMyUsdcTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e?(r=this.market(e),a.symbol=r.id,a.category=r.option?"OPTION":"PERPETUAL"):a.category="PERPETUAL";const n=await this.privatePostOptionUsdcOpenapiPrivateV1ExecutionList(this.extend(a,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"dataList",[]);return this.parseTrades(d,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();let n,o=this.safeString(s,"settleCoin");void 0===o&&([o,s]=this.handleOptionAndParams(s,"fetchMyTrades","settle",o)),void 0!==e&&(r=this.market(e),o=r.settle),[n,s]=this.handleSubTypeAndParams("fetchMyTrades",r,s);const d="inverse"===n,c="USDC"===o;if(d&&(c||"USDT"===o))throw new a.ArgumentsRequired(this.id+" fetchMyTrades with inverse subType requires settle to not be USDT or USDC");const[h,u]=this.handleMarketTypeAndParams("fetchMyTrades",r,s),[l,p]=await this.isUnifiedEnabled();return p&&!d?(void 0===this.safeString(s,"orderId")&&"spot"!==h&&this.checkRequiredSymbol("fetchMyTrades",e),await this.fetchMyUnifiedTrades(e,t,i,u)):"spot"===h?await this.fetchMySpotTrades(e,t,i,u):l&&!d?await this.fetchMyUnifiedMarginTrades(e,t,i,u):c?await this.fetchMyUsdcTrades(e,t,i,u):await this.fetchMyContractTrades(e,t,i,u)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"addressDeposit"),s=this.safeString(e,"tagDeposit"),r=this.safeString(t,"code"),a=this.safeString(e,"chain");return this.checkAddress(i),{currency:r,address:i,tag:s,network:a,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();let i=this.currency(e);const s={coin:i.id},r=await this.privateGetV5AssetDepositQueryAddress(this.extend(s,t)),a=this.safeValue(r,"result",[]),n=this.safeValue(a,"chains",[]),o=this.safeString(a,"coin");i=this.currency(o);const d=this.parseDepositAddresses(n,[i.code],!1,{currency:i.id});return this.indexBy(d,"network")}async fetchDepositAddress(e,t={}){await this.loadMarkets();const[i,s]=this.handleNetworkCodeAndParams(t),r=this.networkCodeToId(i),a=this.currency(e),n={coin:a.id};void 0!==r&&(n.chainType=r);const o=await this.privateGetV5AssetDepositQueryAddress(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"chains",[]),h=this.indexBy(c,"chain"),u=this.selectNetworkIdFromRawNetworks(e,i,h),l=this.safeValue(h,u,{});return this.parseDepositAddress(l,a)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.coin=a.id),void 0!==t&&(r.startTime=t),void 0!==i&&(r.limit=i);const n=await this.privateGetV5AssetDepositQueryRecord(this.extend(r,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"rows",[]);return this.parseTransactions(d,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.coin=a.id),void 0!==t&&(r.startTime=t),void 0!==i&&(r.limit=i);const n=await this.privateGetV5AssetWithdrawQueryRecord(this.extend(r,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"rows",[]);return this.parseTransactions(d,a,t,i)}parseTransactionStatus(e){return this.safeString({ToBeConfirmed:"pending",UnderReview:"pending",Success:"ok",Expire:"expired",0:"unknown",1:"pending",2:"processing",3:"ok",4:"fail",SecurityCheck:"pending",Pending:"pending",success:"ok",CancelByUser:"canceled",Reject:"rejected",Fail:"failed",BlockchainConfirmed:"ok"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"coin"),s=this.safeCurrencyCode(i,t),r=this.safeInteger2(e,"createTime","successAt"),a=this.safeInteger(e,"updateTime"),n=this.parseTransactionStatus(this.safeString(e,"status")),o=this.safeNumber2(e,"depositFee","withdrawFee",0),d="depositFee"in e?"deposit":"withdrawal";let c;void 0!==o&&(c={cost:o,currency:s});const h=this.safeString(e,"toAddress");return{info:e,id:this.safeString2(e,"id","withdrawId"),txid:this.safeString(e,"txID"),timestamp:r,datetime:this.iso8601(r),network:this.networkIdToCode(this.safeString(e,"chain")),address:void 0,addressTo:h,addressFrom:void 0,tag:this.safeString(e,"tag"),tagTo:void 0,tagFrom:void 0,type:d,amount:this.safeNumber(e,"amount"),currency:s,status:n,updated:a,fee:c}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={},a=await this.isUnifiedEnabled();let n,o="coin";a[1]?(o="currency",void 0!==t&&(r.startTime=t)):void 0!==t&&(r.start_date=this.yyyymmdd(t));const d=a[1]?"privateGetV5AccountTransactionLog":"privateGetV2PrivateWalletFundRecords";void 0!==e&&(n=this.currency(e),r[o]=n.id),void 0!==i&&(r.limit=i);const c=await this[d](this.extend(r,s)),h=this.safeValue(c,"result",{}),u=this.safeValue2(h,"data","list",[]);return this.parseLedger(u,n,t,i)}parseLedgerEntry(e,t=undefined){const i=this.safeString2(e,"coin","currency"),s=this.safeCurrencyCode(i,t),r=this.safeString2(e,"amount","change"),a=this.safeString2(e,"wallet_balance","cashBalance"),o=n.O.stringLt(r,"0")?"out":"in";let d;if(void 0!==a&&void 0!==r){const e="out"===o?r:n.O.stringNeg(r);d=n.O.stringAdd(a,e)}let c=this.parse8601(this.safeString(e,"exec_time"));void 0===c&&(c=this.safeInteger(e,"transactionTime"));const h=this.parseLedgerEntryType(this.safeString(e,"type")),u=this.safeString(e,"id"),l=this.safeString(e,"tx_id");return{id:u,currency:s,account:this.safeString(e,"wallet_id"),referenceAccount:void 0,referenceId:l,status:void 0,amount:this.parseNumber(r),before:this.parseNumber(d),after:this.parseNumber(a),fee:this.parseNumber(this.safeString(e,"fee")),direction:o,timestamp:c,datetime:this.iso8601(c),type:h,info:e}}parseLedgerEntryType(e){return this.safeString({Deposit:"transaction",Withdraw:"transaction",RealisedPNL:"trade",Commission:"fee",Refund:"cashback",Prize:"prize",ExchangeOrderWithdraw:"transaction",ExchangeOrderDeposit:"transaction",TRANSFER_IN:"transaction",TRANSFER_OUT:"transaction",TRADE:"trade",SETTLEMENT:"trade",DELIVERY:"trade",LIQUIDATION:"trade",BONUS:"Prize",FEE_REFUND:"cashback",INTEREST:"transaction",CURRENCY_BUY:"trade",CURRENCY_SELL:"trade"},e,e)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);const a=this.currency(e),n={coin:a.id,amount:this.numberToString(t),address:i};void 0!==s&&(n.tag=s);const[o,d]=this.handleNetworkCodeAndParams(r),c=this.networkCodeToId(o);void 0!==c&&(n.chain=c.toUpperCase());const h=(await this.isUnifiedEnabled())[1]?"privatePostV5AssetWithdrawCreate":"privatePostAssetV3PrivateWithdrawCreate",u=await this[h](this.extend(n,d)),l=this.safeValue(u,"result",{});return this.parseTransaction(l,a)}async fetchPosition(e,t={}){this.checkRequiredSymbol("fetchPosition",e),await this.loadMarkets();const i=this.market(e),s={symbol:i.id};let r;const[n,o]=await this.isUnifiedEnabled(),d="USDC"===i.settle;if(n||o)if(r=o?"privateGetV5PositionList":"privateGetUnifiedV3PrivatePositionList",i.option)s.category="option";else{if(!i.linear)throw new a.NotSupported(this.id+" fetchPosition() does not allow inverse market orders for "+e+" markets");s.category="linear"}else if(d)r="privatePostOptionUsdcOpenapiPrivateV1QueryPosition",i.option?s.category="OPTION":i.linear&&(s.category="PERPETUAL");else{if(i.linear)s.category="linear";else{if(!i.inverse)throw new a.NotSupported(this.id+" fetchPosition() does not allow option market orders for "+e+" markets");s.category="inverse"}r="privateGetV5PositionList"}const c=await this[r](this.extend(s,t)),h=this.safeValue(c,"result",{}),u=this.safeValue2(h,"list","dataList",[]),l=this.safeInteger(c,"time"),p=this.safeValue(u,0),f=this.parsePosition(p,i);return this.extend(f,{timestamp:l,datetime:this.iso8601(l)})}async fetchUnifiedPositions(e=undefined,t={}){await this.loadMarkets();const i={};let s,r;const n=await this.isUnifiedEnabled();if(Array.isArray(e)){if(e.length>1)throw new a.ArgumentsRequired(this.id+" fetchPositions() does not accept an array with more than one symbol");r=this.market(e[0]).settle}else void 0!==e&&(e=[e]);if(void 0===(e=this.marketSymbols(e)))[r,t]=this.handleOptionAndParams(t,"fetchPositions","settle","USDT");else{const t=this.safeValue(e,0),s=this.market(t);r=s.settle,i.symbol=s.id}let o;n[1]&&(i.settleCoin=r,i.limit=200),[s,t]=this.handleMarketTypeAndParams("fetchPositions",void 0,t),[o,t]=this.handleSubTypeAndParams("fetchPositions",void 0,t,"linear"),i.category=o,"option"===s&&(i.category="option");const d=n[1]?"privateGetV5PositionList":"privateGetUnifiedV3PrivatePositionList",c=await this[d](this.extend(i,t)),h=this.safeValue(c,"result",{}),u=this.safeValue(h,"list",[]),l=[];for(let e=0;e<u.length;e++){let t=u[e];"data"in t&&"is_valid"in t&&(t=this.safeValue(t,"data")),l.push(this.parsePosition(t))}return this.filterByArray(l,"symbol",e,!1)}async fetchUSDCPositions(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i={};let s,r;if(Array.isArray(e)){if(1!==e.length)throw new a.ArgumentsRequired(this.id+" fetchUSDCPositions() takes an array with exactly one symbol");const t=this.safeString(e,0);s=this.market(t),i.symbol=s.id}else void 0!==e&&(s=this.market(e),i.symbol=s.id);[r,t]=this.handleMarketTypeAndParams("fetchUSDCPositions",s,t),i.category="option"===r?"OPTION":"PERPETUAL";const n=await this.privatePostOptionUsdcOpenapiPrivateV1QueryPosition(this.extend(i,t)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"dataList",[]),c=[];for(let e=0;e<d.length;e++){let t=d[e];"data"in t&&"is_valid"in t&&(t=this.safeValue(t,"data")),c.push(this.parsePosition(t,s))}return this.filterByArray(c,"symbol",e,!1)}async fetchDerivativesPositions(e=undefined,t={}){await this.loadMarkets();const i={};let s,r,n;if(Array.isArray(e)){const t=e.length;if(t>1)throw new a.ArgumentsRequired(this.id+" fetchPositions() does not accept an array with more than one symbol");1===t&&(s=this.market(e[0]),r=s.settle,i.symbol=s.id)}[r,t]=this.handleOptionAndParams(t,"fetchPositions","settle",r),void 0!==r&&(i.settleCoin=r),[n,t]=this.handleSubTypeAndParams("fetchPositions",s,t,"linear"),i.category=n;const o=await this.privateGetV5PositionList(this.extend(i,t)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"list",[]);return this.parsePositions(c,e,t)}async fetchPositions(e=undefined,t={}){if(Array.isArray(e)){if(e.length>1)throw new a.ArgumentsRequired(this.id+" fetchPositions() does not accept an array with more than one symbol")}else void 0!==e&&(e=[e]);await this.loadMarkets(),e=this.marketSymbols(e);const[i,s]=await this.isUnifiedEnabled();let r=this.safeString(t,"settleCoin");void 0===r&&([r,t]=this.handleOptionAndParams(t,"fetchPositions","settle",r));const n="USDC"===r,[o,d]=this.handleSubTypeAndParams("fetchPositions",void 0,t),c="inverse"===o;if(c&&(n||"USDT"===r))throw new a.ArgumentsRequired(this.id+" fetchPositions with inverse subType requires settle to not be USDT or USDC");return!i&&!s||c?n?await this.fetchUSDCPositions(e,d):await this.fetchDerivativesPositions(e,d):await this.fetchUnifiedPositions(e,d)}parsePosition(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t,void 0,"contract");const s=n.O.stringAbs(this.safeString(e,"size"));let r=this.safeString(e,"side");void 0!==r&&(r="Buy"===r?"long":"Sell"===r?"short":void 0);const a=this.safeString(e,"positionValue"),o=this.omitZero(this.safeString(e,"unrealisedPnl"));let d=this.safeString(e,"positionIM"),c=this.safeString(e,"positionMM"),h=this.parse8601(this.safeString(e,"updated_at"));void 0===h&&(h=this.safeInteger(e,"updatedAt"));const u=this.safeInteger(e,"tradeMode",0)?"isolated":"cross";let l=this.safeString(e,"positionBalance");const p=this.omitZero(this.safeString2(e,"entryPrice","avgPrice")),f=this.omitZero(this.safeString(e,"liqPrice")),m=this.safeString(e,"leverage");if(void 0!==f)if("USDC"===t.settle){const e=n.O.stringAbs(n.O.stringSub(p,f));l=n.O.stringAdd(n.O.stringAdd(n.O.stringMul(e,s),c),o)}else{const i=this.safeString(e,"bustPrice");if(t.linear){const e=n.O.stringAbs(n.O.stringSub(f,i));c=n.O.stringMul(e,s),void 0!==p&&(d=n.O.stringDiv(n.O.stringMul(s,p),m))}else{const e=n.O.stringAbs(n.O.stringSub(i,f)),t=n.O.stringMul(i,f);c=n.O.stringDiv(n.O.stringMul(s,e),t),void 0!==p&&(d=n.O.stringDiv(s,n.O.stringMul(p,m)))}}const v=n.O.stringDiv(c,a),g=n.O.stringMul(n.O.stringDiv(o,d),"100"),y=n.O.stringDiv(c,l,4);return{info:e,id:void 0,symbol:t.symbol,timestamp:h,datetime:this.iso8601(h),initialMargin:this.parseNumber(d),initialMarginPercentage:this.parseNumber(n.O.stringDiv(d,a)),maintenanceMargin:this.parseNumber(c),maintenanceMarginPercentage:this.parseNumber(v),entryPrice:this.parseNumber(p),notional:this.parseNumber(a),leverage:this.parseNumber(m),unrealizedPnl:this.parseNumber(o),contracts:this.parseNumber(s),contractSize:this.safeNumber(t,"contractSize"),marginRatio:this.parseNumber(y),liquidationPrice:this.parseNumber(f),markPrice:this.safeNumber(e,"markPrice"),collateral:this.parseNumber(l),marginMode:u,side:r,percentage:this.parseNumber(g)}}async setMarginMode(e,t=undefined,i={}){await this.loadMarkets();const s=await this.isUnifiedEnabled();return this.safeValue(s,1)?await this.setUnifiedMarginMode(e,t,i):await this.setDerivativesMarginMode(e,t,i)}async setUnifiedMarginMode(e,t=undefined,i={}){if(await this.loadMarkets(),"REGULAR_MARGIN"!==e&&"PORTFOLIO_MARGIN"!==e)throw new a.BadRequest(this.id+" setMarginMode() marginMode must be either REGULAR_MARGIN or PORTFOLIO_MARGIN");const s={setMarginMode:e};return await this.privatePostV5AccountSetMarginMode(this.extend(s,i))}async setDerivativesMarginMode(e,t=undefined,i={}){this.checkRequiredSymbol("setMarginMode",t),await this.loadMarkets();const s=this.market(t);if("USDC"===s.settle)throw new a.NotSupported(this.id+" setMarginMode() does not support market "+t);if("ISOLATED"!==(e=e.toUpperCase())&&"CROSS"!==e)throw new a.BadRequest(this.id+" setMarginMode() marginMode must be either isolated or cross");const r=this.safeString(i,"leverage");let n,o;if(void 0===r){if(n=this.safeString2(i,"sell_leverage","sellLeverage"),o=this.safeString2(i,"buy_leverage","buyLeverage"),void 0===n&&void 0===o)throw new a.ArgumentsRequired(this.id+" setMarginMode() requires a leverage parameter or sell_leverage and buy_leverage parameters");void 0===o&&(o=n),void 0===n&&(n=o),i=this.omit(i,["buy_leverage","sell_leverage","sellLeverage","buyLeverage"])}else i=this.omit(i,"leverage"),n=r,o=r;const d="ISOLATED"===e?1:0,c={symbol:s.id,tradeMode:d,buyLeverage:o,sellLeverage:n};return await this.privatePostContractV3PrivatePositionSwitchIsolated(this.extend(c,i))}async setLeverage(e,t=undefined,i={}){this.checkRequiredSymbol("setLeverage",t),await this.loadMarkets();const s=this.market(t),r="USDC"===s.settle,[n,o]=await this.isUnifiedEnabled();let d,c;if(e=this.numberToString(e),n||o||!r)if(c={symbol:s.id,buyLeverage:e,sellLeverage:e},o){if(!s.linear)throw new a.NotSupported(this.id+" setUnifiedMarginLeverage() leverage doesn't support inverse and option market in unified account");c.category="linear",d="privatePostV5PositionSetLeverage"}else if(n){if(s.option)c.category="option";else{if(!s.linear)throw new a.NotSupported(this.id+" setUnifiedMarginLeverage() leverage doesn't support inverse market in unified margin");c.category="linear"}d="privatePostUnifiedV3PrivatePositionSetLeverage"}else d="privatePostContractV3PrivatePositionSetLeverage";else c={symbol:s.id,leverage:e},d="privatePostPerpetualUsdcOpenapiPrivateV1PositionLeverageSave";return await this[d](this.extend(c,i))}async setPositionMode(e,t=undefined,i={}){let s;await this.loadMarkets(),s=e?3:0;const r={mode:s};if(void 0===t)r.coin="USDT";else{const e=this.market(t);r.symbol=e.id}return await this.privatePostContractV3PrivatePositionSwitchMode(this.extend(r,i))}async fetchDerivativesOpenInterestHistory(e,t="1h",i=undefined,s=undefined,r={}){await this.loadMarkets();let n=this.market(e);const o=n.linear?"linear":"inverse",d=this.safeString(r,"category",o),c=this.safeValue(this.options,"intervals"),h=this.safeString(c,t);if(void 0===h)throw new a.BadRequest(this.id+" fetchOpenInterestHistory() cannot use the "+t+" timeframe");const u={symbol:n.id,intervalTime:h,category:d};void 0!==i&&(u.startTime=i),void 0!==s&&(u.limit=s);const l=await this.publicGetV5MarketOpenInterest(this.extend(u,r)),p=this.safeValue(l,"result",{}),f=this.safeString(p,"symbol");n=this.safeMarket(f,n,void 0,"contract");const m=this.safeValue(p,"list",[]);return this.parseOpenInterests(m,n,i,s)}async fetchOpenInterest(e,t={}){await this.loadMarkets();let i=this.market(e);if(!i.contract)throw new a.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");const s=this.safeString(t,"interval","1h"),r=this.safeValue(this.options,"intervals"),n=this.safeString(r,s);if(void 0===n)throw new a.BadRequest(this.id+" fetchOpenInterest() cannot use the "+s+" timeframe");const o=i.linear?"linear":"inverse",d=this.safeString(t,"category",o),c={symbol:i.id,intervalTime:n,category:d},h=await this.publicGetV5MarketOpenInterest(this.extend(c,t)),u=this.safeValue(h,"result",{}),l=this.safeString(u,"symbol");i=this.safeMarket(l,i,void 0,"contract");const p=this.safeValue(u,"list",[]);return this.parseOpenInterest(p[0],i)}async fetchOpenInterestHistory(e,t="1h",i=undefined,s=undefined,r={}){if("1m"===t)throw new a.BadRequest(this.id+"fetchOpenInterestHistory cannot use the 1m timeframe");await this.loadMarkets();const n=this.market(e);if(n.spot||n.option)throw new a.BadRequest(this.id+" fetchOpenInterestHistory() symbol does not support market "+e);const o={symbol:n.id};return void 0!==s&&(o.limit=s),await this.fetchDerivativesOpenInterestHistory(e,t,i,s,r)}parseOpenInterest(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeNumber2(e,"open_interest","openInterest");return{symbol:t.symbol,openInterestAmount:void 0,openInterestValue:s,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchBorrowRate(e,t={}){await this.loadMarkets();const i=this.currency(e),s={coin:i.id},r=await this.privateGetSpotV3PrivateCrossMarginLoanInfo(this.extend(s,t)),a=this.safeValue(r,"result",{});return this.parseBorrowRate(a,i)}parseBorrowRate(e,t=undefined){const i=this.milliseconds(),s=this.safeString(e,"coin");return{currency:this.safeCurrencyCode(s,t),rate:this.safeNumber(e,"interestRate"),period:864e5,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a=await this.privateGetSpotV3PrivateCrossMarginAccount(this.extend({},r)),n=this.safeValue(a,"result",{}),o=this.safeValue(n,"loanAccountList",[]),d=this.parseBorrowInterests(o,void 0);return this.filterByCurrencySinceLimit(d,e,i,s)}parseBorrowInterest(e,t=undefined){return{symbol:void 0,marginMode:"cross",currency:this.safeCurrencyCode(this.safeString(e,"tokenId")),interest:this.safeNumber(e,"interest"),interestRate:void 0,amountBorrowed:this.safeNumber(e,"loan"),timestamp:void 0,datetime:void 0,info:e}}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.safeString(r,"transferId",this.uuid()),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c=this.currency(e),h=this.currencyToPrecision(e,t);let u,l;[u,r]=this.handleOptionAndParams(r,"transfer","method","privatePostAssetV1PrivateTransfer"),l="privatePostAssetV3PrivateTransferInterTransfer"===u||"privatePostV5AssetTransferInterTransfer"===u?{transferId:a,fromAccountType:o,toAccountType:d,coin:c.id,amount:h}:{transfer_id:a,from_account_type:o,to_account_type:d,coin:c.id,amount:h};const p=await this[u](this.extend(l,r)),f=this.safeInteger2(p,"time","time_now"),m=this.safeValue(p,"result",{}),v=this.safeStringN(p,["retCode","retMsg","ret_code","ret_msg"]),g=this.parseTransferStatus(v);return this.extend(this.parseTransfer(m,c),{timestamp:f,datetime:this.iso8601(f),amount:this.parseNumber(h),fromAccount:i,toAccount:s,status:g})}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.safeCurrencyCode(e),a.coin=r),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);const n=await this.privateGetV5AssetTransferQueryInterTransferList(this.extend(a,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"list",[]);return this.parseTransfers(d,r,t,i)}async borrowMargin(e,t,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e),[n,o]=this.handleMarginModeAndParams("borrowMargin",s);if("isolated"===n)throw new a.NotSupported(this.id+" borrowMargin () cannot use isolated margin");const d={coin:r.id,qty:this.currencyToPrecision(e,t)},c=await this.privatePostSpotV3PrivateCrossMarginLoan(this.extend(d,o)),h=this.safeValue(c,"result",{}),u=this.parseMarginLoan(h,r);return this.extend(u,{symbol:i,amount:t})}async repayMargin(e,t,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e),[n,o]=this.handleMarginModeAndParams("repayMargin",s);if("isolated"===n)throw new a.NotSupported(this.id+" repayMargin () cannot use isolated margin");const d={coin:r.id,qty:this.numberToString(t)},c=await this.privatePostSpotV3PrivateCrossMarginRepay(this.extend(d,o)),h=this.safeValue(c,"result",{}),u=this.parseMarginLoan(h,r);return this.extend(u,{symbol:i,amount:t})}parseMarginLoan(e,t=undefined){return{id:this.safeString2(e,"transactId","repayId"),currency:this.safeString(t,"code"),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}parseTransferStatus(e){return this.safeString({0:"ok",OK:"ok",SUCCESS:"ok"},e,e)}parseTransfer(e,t=undefined){const i=this.safeString(e,"coin"),s=this.safeInteger(e,"timestamp"),r=this.safeString2(e,"fromAccountType","from_account_type"),a=this.safeString2(e,"toAccountType","to_account_type"),n=this.safeValue(this.options,"accountsById",{}),o=this.safeString(n,r,r),d=this.safeString(n,a,a);return{info:e,id:this.safeString2(e,"transferId","transfer_id"),timestamp:s,datetime:this.iso8601(s),currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"amount"),fromAccount:o,toAccount:d,status:this.parseTransferStatus(this.safeString(e,"status"))}}async fetchDerivativesMarketLeverageTiers(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id};i.linear?s.category="linear":i.inverse&&(s.category="inverse");const r=await this.publicGetV5MarketRiskLimit(this.extend(s,t)),a=this.safeValue(r,"result"),n=this.safeValue(a,"list");return this.parseMarketLeverageTiers(n,i)}async fetchMarketLeverageTiers(e,t={}){let i;if(await this.loadMarkets(),i=this.market(e),i.spot||i.option)throw new a.BadRequest(this.id+" fetchMarketLeverageTiers() symbol does not support market "+e);return i.id,await this.fetchDerivativesMarketLeverageTiers(e,t)}parseMarketLeverageTiers(e,t=undefined){let i=0;const s=[];for(let r=0;r<e.length;r++){const a=e[r],n=this.safeNumber(a,"riskLimitValue");s.push({tier:this.sum(r,1),currency:t.base,minNotional:i,maxNotional:n,maintenanceMarginRate:this.safeNumber(a,"maintenanceMargin"),maxLeverage:this.safeNumber(a,"maxLeverage"),info:a}),i=n}return s}parseTradingFee(e,t=undefined){const i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i,void 0,void 0,"contract"),maker:this.safeNumber(e,"makerFeeRate"),taker:this.safeNumber(e,"takerFeeRate")}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e);if(i.spot)throw new a.NotSupported(this.id+" fetchTradingFee() is not supported for spot market");const s={symbol:i.id},r=await this.privateGetV5AccountFeeRate(this.extend(s,t)),n=this.safeValue(r,"result",{}),o=this.safeValue(n,"list",[]),d=this.safeValue(o,0,{});return this.parseTradingFee(d)}async fetchTradingFees(e={}){let t;if(await this.loadMarkets(),[t,e]=this.handleOptionAndParams(e,"fetchTradingFees","type","future"),"spot"===t)throw new a.NotSupported(this.id+" fetchTradingFees() is not supported for spot market");const i=await this.privateGetV5AccountFeeRate(e);let s=this.safeValue(i,"result",{});s=this.safeValue(s,"list",[]);const r={};for(let e=0;e<s.length;e++){const t=this.parseTradingFee(s[e]);r[t.symbol]=t}return r}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.implodeHostname(this.urls.api[t])+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.rawencode(s));else if("private"===t){this.checkRequiredCredentials();const e=n.indexOf("openapi")>=0,t=n.indexOf("unified/v3")>=0,d=n.indexOf("contract/v3")>=0,c=n.indexOf("v5")>=0,h=this.nonce().toString();if(e){a=Object.keys(s).length?this.json(s):"{}";const e=h+this.apiKey+a,t=this.hmac(this.encode(e),this.encode(this.secret),o.J,"hex");r={"Content-Type":"application/json","X-BAPI-API-KEY":this.apiKey,"X-BAPI-TIMESTAMP":h,"X-BAPI-SIGN":t}}else if(t||d||c){r={"Content-Type":"application/json","X-BAPI-API-KEY":this.apiKey,"X-BAPI-TIMESTAMP":h,"X-BAPI-RECV-WINDOW":this.options.recvWindow.toString()},(t||d)&&(r["X-BAPI-SIGN-TYPE"]="2");const e=this.extend({},s),c=this.rawencode(e),u=h.toString()+this.apiKey+this.options.recvWindow.toString();let l;"POST"===i?l=u+(a=this.json(e)):(l=u+c,n+="?"+this.rawencode(e)),r["X-BAPI-SIGN"]=this.hmac(this.encode(l),this.encode(this.secret),o.J)}else{const e=this.extend(s,{api_key:this.apiKey,recv_window:this.options.recvWindow,timestamp:h}),t=this.keysort(e),d=this.rawencode(t),c=this.hmac(this.encode(d),this.encode(this.secret),o.J);if("POST"===i){const t=n.indexOf("spot")>=0,i=this.extend(e,{sign:c});t?(a=this.urlencode(i),r={"Content-Type":"application/x-www-form-urlencoded"}):(a=this.json(i),r={"Content-Type":"application/json"})}else n+="?"+this.rawencode(t),n+="&sign="+c}}if("POST"===i){const e=this.safeString(this.options,"brokerId");void 0!==e&&(r.Referer=e)}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,n,o,d,c){if(!o)return;const h=this.safeString2(o,"ret_code","retCode");if("0"!==h){if("30084"===h)return;let e;throw e="10005"===h?this.id+' private api uses /user/v3/private/query-api to check if you have a unified account. The API key of user id must own one of permissions: "Account Transfer", "Subaccount Transfer", "Withdrawal" '+n:this.id+" "+n,this.throwBroadlyMatchedException(this.exceptions.broad,n,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),new a.ExchangeError(e)}}}},6445:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(1006),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"cex",name:"CEX.IO",countries:["GB","EU","CY","RU"],rateLimit:1500,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,fetchWithdrawalWhitelist:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,transfer:!1,withdraw:!1},timeframes:{"1m":"1m","1h":"1h","1d":"1d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766442-8ddc33b0-5ed8-11e7-8b98-f786aef0f3c9.jpg",api:{rest:"https://cex.io/api"},www:"https://cex.io",doc:"https://cex.io/cex-api",fees:["https://cex.io/fee-schedule","https://cex.io/limits-commissions"],referral:"https://cex.io/r/0/up105393824/0/"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["currency_profile","currency_limits/","last_price/{pair}/","last_prices/{currencies}/","ohlcv/hd/{yyyymmdd}/{pair}","order_book/{pair}/","ticker/{pair}/","tickers/{currencies}/","trade_history/{pair}/"],post:["convert/{pair}","price_stats/{pair}"]},private:{post:["active_orders_status/","archived_orders/{pair}/","balance/","cancel_order/","cancel_orders/{pair}/","cancel_replace_order/{pair}/","close_position/{pair}/","get_address/","get_crypto_address","get_myfee/","get_order/","get_order_tx/","open_orders/{pair}/","open_orders/","open_position/{pair}/","open_positions/{pair}/","place_order/{pair}/","raw_tx_history"]}},fees:{trading:{maker:this.parseNumber("0.0016"),taker:this.parseNumber("0.0025")},funding:{withdraw:{},deposit:{BTC:0,ETH:0,BCH:0,DASH:0,BTG:0,ZEC:0,XRP:0,XLM:0}}},precisionMode:n.sh,exceptions:{exact:{},broad:{"Insufficient funds":r.InsufficientFunds,"Nonce must be incremented":r.InvalidNonce,"Invalid Order":r.InvalidOrder,"Order not found":r.OrderNotFound,"limit exceeded":r.RateLimitExceeded,"Invalid API key":r.AuthenticationError,"There was an error while placing your order":r.InvalidOrder,"Sorry, too many clients already":r.DDoSProtection,"Invalid Symbols Pair":r.BadSymbol,"Wrong currency pair":r.BadSymbol}},options:{fetchOHLCVWarning:!0,createMarketBuyOrderRequiresPrice:!0,order:{status:{c:"canceled",d:"closed",cd:"canceled",a:"open"}},defaultNetwork:"ERC20",defaultNetworks:{USDT:"TRC20"},networks:{ERC20:"Ethereum",BTC:"BTC",BEP20:"Binance Smart Chain",BSC:"Binance Smart Chain",TRC20:"Tron"},networksById:{Ethereum:"ERC20",BTC:"BTC","Binance Smart Chain":"BEP20",Tron:"TRC20"}}})}async fetchCurrenciesFromCache(e={}){const t=this.safeValue(this.options,"fetchCurrencies",{}),i=this.safeInteger(t,"timestamp"),s=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===i||r-i>s){const i=await this.publicGetCurrencyProfile(e);this.options.fetchCurrencies=this.extend(t,{response:i,timestamp:r})}return this.safeValue(this.options.fetchCurrencies,"response")}async fetchCurrencies(e={}){const t=await this.fetchCurrenciesFromCache(e);this.options.currencies={timestamp:this.milliseconds(),response:t};const i=this.safeValue(t,"data",[]),s=this.safeValue(i,"symbols",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"code"),a=this.safeCurrencyCode(i),n=!0;r[a]={id:i,code:a,name:i,active:n,deposit:void 0,withdraw:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),fee:void 0,limits:{amount:{min:this.safeNumber(t,"minimumCurrencyAmount"),max:void 0},withdraw:{min:this.safeNumber(t,"minimalWithdrawalAmount"),max:void 0}},info:t}}return r}async fetchMarkets(e={}){const t=await this.fetchCurrenciesFromCache(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"symbols",[]),r=this.indexBy(s,"code"),n=this.safeValue(i,"pairs",[]),o=await this.publicGetCurrencyLimits(e),d=[],c=this.safeValue(o.data,"pairs");for(let e=0;e<c.length;e++){const t=c[e],i=this.safeString(t,"symbol1"),s=this.safeString(t,"symbol2"),o=this.safeCurrencyCode(i),h=this.safeCurrencyCode(s),u=this.safeValue(r,i,{}),l=this.safeValue(r,s,{});let p=this.safeString(l,"precision","8");for(let e=0;e<n.length;e++){const t=n[e];t.symbol1===i&&t.symbol2===s&&(p=this.safeString(t,"pricePrecision",p))}const f=this.safeString(u,"precision","8"),m=this.safeString(u,"scale","0"),v=a.O.stringSub(f,m);d.push({id:i+"/"+s,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(v)),price:this.parseNumber(this.parsePrecision(p))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minLotSize"),max:this.safeNumber(t,"maxLotSize")},price:{min:this.safeNumber(t,"minPrice"),max:this.safeNumber(t,"maxPrice")},cost:{min:this.safeNumber(t,"minLotSizeS2"),max:void 0}},info:t})}return d}parseBalance(e){const t={info:e},i=this.omit(e,["username","timestamp"]),s=Object.keys(i);for(let e=0;e<s.length;e++){const r=s[e],a=this.safeValue(i,r,{}),n=this.account();n.free=this.safeString(a,"available"),n.used=this.safeString(a,"orders","0"),t[this.safeCurrencyCode(r)]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetOrderBookPair(this.extend(r,i)),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,s.symbol,n)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e);if(void 0===i)i=this.milliseconds()-864e5;else if(this.options.fetchOHLCVWarning)throw new r.ExchangeError(this.id+" fetchOHLCV warning: CEX can return historical candles for a certain date only, this might produce an empty or null reply. Set exchange.options['fetchOHLCVWarning'] = false or add ({ 'options': { 'fetchOHLCVWarning': false }}) to constructor params to suppress this warning message.");const o={pair:n.id,yyyymmdd:this.yyyymmdd(i,"")};try{const e=await this.publicGetOhlcvHdYyyymmddPair(this.extend(o,a)),r="data"+this.safeString(this.timeframes,t,t),d=this.safeString(e,r),c=JSON.parse(d);return this.parseOHLCVs(c,n,t,i,s)}catch(e){if(e instanceof r.NullResponse)return[]}}parseTicker(e,t=undefined){const i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"volume"),r=this.safeString(e,"high"),a=this.safeString(e,"low"),n=this.safeString(e,"bid"),o=this.safeString(e,"ask"),d=this.safeString(e,"last"),c=this.safeSymbol(void 0,t);return this.safeTicker({symbol:c,timestamp:i,datetime:this.iso8601(i),high:r,low:a,bid:n,bidVolume:void 0,ask:o,askVolume:void 0,vwap:void 0,open:void 0,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:s,quoteVolume:void 0,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i={currencies:Object.keys(this.currencies).join("/")},s=await this.publicGetTickersCurrencies(this.extend(i,t)),r=this.safeValue(s,"data",[]),a={};for(let e=0;e<r.length;e++){const t=r[e],i=this.safeString(t,"pair"),s=this.safeMarket(i,void 0,":");a[s.symbol]=this.parseTicker(t,s)}return this.filterByArray(a,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetTickerPair(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=this.safeTimestamp(e,"date"),s=this.safeString(e,"tid"),r=this.safeString(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"amount");return t=this.safeMarket(void 0,t),this.safeTrade({info:e,id:s,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:r,order:void 0,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetTradeHistoryPair(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostGetMyfee(e),i=this.safeValue(t,"data",{}),s={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],r=this.market(t),n=this.safeValue(i,r.id,{}),o=this.safeString(n,"buyMaker"),d=this.safeString(n,"buy"),c=this.parseNumber(a.O.stringDiv(o,"100")),h=this.parseNumber(a.O.stringDiv(d,"100"));s[t]={info:n,symbol:t,maker:c,taker:h,percentage:!0}}return s}async createOrder(e,t,i,s,a=undefined,n={}){if("market"===t&&"buy"===i&&this.options.createMarketBuyOrderRequiresPrice){if(void 0===a)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");s*=a}await this.loadMarkets();const o=this.market(e),d={pair:o.id,type:i,amount:s};"limit"===t?d.price=a:d.order_type=t;const c=await this.privatePostPlaceOrderPair(this.extend(d,n)),h=this.safeNumber(c,"amount"),u=this.safeNumber(c,"pending"),l=this.safeValue(c,"time"),p=this.safeValue(c,"complete")?"closed":"open";let f;return void 0!==h&&void 0!==u&&(f=Math.max(h-u,0)),{id:this.safeString(c,"id"),info:c,clientOrderId:void 0,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,type:t,side:this.safeString(c,"type"),symbol:o.symbol,status:p,price:this.safeNumber(c,"price"),amount:h,cost:void 0,average:void 0,remaining:u,filled:f,fee:void 0,trades:void 0}}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e};return await this.privatePostCancelOrder(this.extend(s,i))}parseOrder(e,t=undefined){let i,s=this.safeValue(e,"time");if(s="string"==typeof s&&s.indexOf("T")>=0?this.parse8601(s):parseInt(s),void 0===t){const s=this.safeString(e,"symbol1"),r=this.safeString(e,"symbol2");i=this.safeCurrencyCode(s)+"/"+this.safeCurrencyCode(r),i in this.markets&&(t=this.market(i))}const r=this.parseOrderStatus(this.safeString(e,"status")),a=this.safeNumber(e,"price");let n=this.safeNumber(e,"amount");void 0!==n&&(n=Math.abs(n));const o=this.safeNumber2(e,"pending","remains"),d=n-o;let c,h;if(void 0!==t){i=t.symbol;const s=this.safeNumber(e,"ta:"+t.quote),r=this.safeNumber(e,"tta:"+t.quote);h=this.sum(s,r);const a="fa:"+t.base,n="tfa:"+t.base,o="fa:"+t.quote,d="tfa:"+t.quote;let u=this.safeNumber(e,"tradingFeeMaker");if(u||(u=this.safeNumber(e,"tradingFeeTaker",u)),u&&(u/=100),a in e||n in e){const i=this.safeNumber2(e,a,n);c={currency:t.base,rate:u,cost:i}}else if(o in e||d in e){const i=this.safeNumber2(e,o,d);c={currency:t.quote,rate:u,cost:i}}}h||(h=a*d);const u=e.type;let l;const p=e.id;if("vtx"in e){l=[];for(let s=0;s<e.vtx.length;s++){const r=e.vtx[s],a=this.safeString(r,"type");if("cancel"===a)continue;const n=this.safeNumber(r,"price");if(void 0===n)continue;if("costsNothing"===a)continue;const o=this.parse8601(this.safeString(r,"time")),d=this.safeNumber(r,"amount"),c=this.safeNumber(r,"fee_amount");let h,u=d<0?-d:d;"sell"===a?(h=u,u=this.sum(c,h)/n):h=u*n,l.push({id:this.safeString(r,"id"),timestamp:o,datetime:this.iso8601(o),order:p,symbol:i,price:n,amount:u,cost:h,side:a,fee:{cost:c,currency:t.quote},info:r,type:void 0,takerOrMaker:void 0})}}return{id:p,clientOrderId:void 0,datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:r,symbol:i,type:void 0===a?"market":"limit",timeInForce:void 0,postOnly:void 0,side:u,price:a,stopPrice:void 0,triggerPrice:void 0,cost:h,amount:n,filled:d,remaining:o,trades:l,fee:c,info:e,average:void 0}}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n="privatePostOpenOrders";void 0!==e&&(a=this.market(e),r.pair=a.id,n+="Pair");const o=await this[n](this.extend(r,s));for(let e=0;e<o.length;e++)o[e]=this.extend(o[e],{status:"open"});return this.parseOrders(o,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");const a=this.market(e),n={pair:a.id},o=await this.privatePostArchivedOrdersPair(this.extend(n,s));return this.parseOrders(o,a,t,i)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e.toString()},r=await this.privatePostGetOrderTx(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={limit:i,pair:this.market(e).id,dateFrom:t},a=await this.privatePostArchivedOrdersPair(this.extend(r,s)),n=[];for(let e=0;e<a.length;e++){const t=a[e],i=this.parseOrderStatus(this.safeString(t,"status")),s=this.safeString(t,"symbol1"),r=this.safeString(t,"symbol2"),o=this.safeCurrencyCode(s),d=this.safeCurrencyCode(r),c=o+"/"+d,h=this.safeString(t,"type"),u=this.safeNumber(t,"a:"+s+":cds"),l=this.safeNumber(t,"a:"+r+":cds"),p=this.safeNumber(t,"f:"+r+":cds"),f=this.safeNumber(t,"amount"),m=this.safeNumber(t,"price"),v=this.safeNumber(t,"remains"),g=f-v;let y,b,w,S;if(m){const e=this.safeNumber(t,"ta:"+r,0),i=this.safeNumber(t,"tta:"+r,0),s=this.safeNumber(t,"fa:"+r,0),a=this.safeNumber(t,"tfa:"+r,0);b="sell"===h?this.sum(this.sum(e,i),this.sum(s,a)):this.sum(e,i)-this.sum(s,a),S="limit",y=f,w=b/g}else S="market",y=u,b=l,w=y/b;const P=this.safeString(t,"time"),k=this.safeString(t,"lastTxTime"),O=this.parse8601(P);n.push({id:this.safeString(t,"id"),timestamp:O,datetime:this.iso8601(O),lastUpdated:this.parse8601(k),status:i,symbol:c,side:h,price:m,amount:y,average:w,type:S,filled:g,cost:b,remaining:v,fee:{cost:p,currency:d},info:t})}return n}parseOrderStatus(e){return this.safeString(this.options.order.status,e,e)}async editOrder(e,t,i,s,a=undefined,n=undefined,o={}){if(void 0===a)throw new r.ArgumentsRequired(this.id+" editOrder() requires a amount argument");if(void 0===n)throw new r.ArgumentsRequired(this.id+" editOrder() requires a price argument");await this.loadMarkets();const d=this.market(t),c={pair:d.id,type:s,amount:a,price:n,order_id:e},h=await this.privatePostCancelReplaceOrderPair(this.extend(c,o));return this.parseOrder(h,d)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},[s,r]=this.handleNetworkCodeAndParams(t),a=await this.privatePostGetCryptoAddress(this.extend(i,r)),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"addresses",[]),d=this.indexBy(o,"blockchain"),c=this.selectNetworkIdFromRawNetworks(e,s,d),h=this.safeValue(d,c,{}),u=this.safeString2(h,"address","destination");return this.checkAddress(u),{currency:e,address:u,tag:this.safeString2(h,"destinationTag","memo"),network:this.networkIdToCode(c),info:n}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret),o.J);a=this.json(this.extend({key:this.apiKey,signature:i.toUpperCase(),nonce:e},d)),r={"Content-Type":"application/json"}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(Array.isArray(o))return o;if("true"!==n){if(void 0===o)throw new r.NullResponse(this.id+" returned "+this.json(o));if((!("e"in o)||!("ok"in o)||"ok"!==o.ok)&&"error"in o){const e=this.safeString(o,"error"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r.ExchangeError(t)}}}}},437:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2456),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinbase",name:"Coinbase",countries:["US"],rateLimit:400,version:"v2",userAgent:this.userAgents.chrome,headers:{"CB-VERSION":"2018-05-30"},has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!0,createLimitBuyOrder:!0,createLimitSellOrder:!0,createMarketBuyOrder:!0,createMarketSellOrder:!0,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL2OrderBook:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyBuys:!0,fetchMySells:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!1,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:void 0},urls:{logo:"https://user-images.githubusercontent.com/1294454/40811661-b6eceae2-653a-11e8-829e-10bfadb078cf.jpg",api:{rest:"https://api.coinbase.com"},www:"https://www.coinbase.com",doc:["https://developers.coinbase.com/api/v2","https://docs.cloud.coinbase.com/advanced-trade-api/docs/welcome"],fees:["https://support.coinbase.com/customer/portal/articles/2109597-buy-sell-bank-transfer-fees","https://www.coinbase.com/advanced-fees"],referral:"https://www.coinbase.com/join/58cbe25a355148797479dbd2"},requiredCredentials:{apiKey:!0,secret:!0},api:{v2:{public:{get:["currencies","time","exchange-rates","users/{user_id}","prices/{symbol}/buy","prices/{symbol}/sell","prices/{symbol}/spot"]},private:{get:["accounts","accounts/{account_id}","accounts/{account_id}/addresses","accounts/{account_id}/addresses/{address_id}","accounts/{account_id}/addresses/{address_id}/transactions","accounts/{account_id}/transactions","accounts/{account_id}/transactions/{transaction_id}","accounts/{account_id}/buys","accounts/{account_id}/buys/{buy_id}","accounts/{account_id}/sells","accounts/{account_id}/sells/{sell_id}","accounts/{account_id}/deposits","accounts/{account_id}/deposits/{deposit_id}","accounts/{account_id}/withdrawals","accounts/{account_id}/withdrawals/{withdrawal_id}","payment-methods","payment-methods/{payment_method_id}","user","user/auth"],post:["accounts","accounts/{account_id}/primary","accounts/{account_id}/addresses","accounts/{account_id}/transactions","accounts/{account_id}/transactions/{transaction_id}/complete","accounts/{account_id}/transactions/{transaction_id}/resend","accounts/{account_id}/buys","accounts/{account_id}/buys/{buy_id}/commit","accounts/{account_id}/sells","accounts/{account_id}/sells/{sell_id}/commit","accounts/{account_id}/deposits","accounts/{account_id}/deposits/{deposit_id}/commit","accounts/{account_id}/withdrawals","accounts/{account_id}/withdrawals/{withdrawal_id}/commit"],put:["accounts/{account_id}","user"],delete:["accounts/{id}","accounts/{account_id}/transactions/{transaction_id}"]}},v3:{private:{get:["brokerage/accounts","brokerage/accounts/{account_uuid}","brokerage/orders/historical/batch","brokerage/orders/historical/fills","brokerage/orders/historical/{order_id}","brokerage/products","brokerage/products/{product_id}","brokerage/products/{product_id}/candles","brokerage/products/{product_id}/ticker","brokerage/transaction_summary"],post:["brokerage/orders","brokerage/orders/batch_cancel"]}}},fees:{trading:{taker:this.parseNumber("0.006"),maker:this.parseNumber("0.004"),tierBased:!0,percentage:!0,tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.006")],[this.parseNumber("10000"),this.parseNumber("0.004")],[this.parseNumber("50000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.002")],[this.parseNumber("1000000"),this.parseNumber("0.0018")],[this.parseNumber("15000000"),this.parseNumber("0.0016")],[this.parseNumber("75000000"),this.parseNumber("0.0012")],[this.parseNumber("250000000"),this.parseNumber("0.0008")],[this.parseNumber("400000000"),this.parseNumber("0.0005")]],maker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("10000"),this.parseNumber("0.0025")],[this.parseNumber("50000"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.001")],[this.parseNumber("1000000"),this.parseNumber("0.0008")],[this.parseNumber("15000000"),this.parseNumber("0.0006")],[this.parseNumber("75000000"),this.parseNumber("0.0003")],[this.parseNumber("250000000"),this.parseNumber("0.0")],[this.parseNumber("400000000"),this.parseNumber("0.0")]]}}},precisionMode:n.sh,exceptions:{exact:{two_factor_required:r.AuthenticationError,param_required:r.ExchangeError,validation_error:r.ExchangeError,invalid_request:r.ExchangeError,personal_details_required:r.AuthenticationError,identity_verification_required:r.AuthenticationError,jumio_verification_required:r.AuthenticationError,jumio_face_match_verification_required:r.AuthenticationError,unverified_email:r.AuthenticationError,authentication_error:r.AuthenticationError,invalid_authentication_method:r.AuthenticationError,invalid_token:r.AuthenticationError,revoked_token:r.AuthenticationError,expired_token:r.AuthenticationError,invalid_scope:r.AuthenticationError,not_found:r.ExchangeError,rate_limit_exceeded:r.RateLimitExceeded,internal_server_error:r.ExchangeError},broad:{"request timestamp expired":r.InvalidNonce,"order with this orderID was not found":r.OrderNotFound}},timeframes:{"1m":"ONE_MINUTE","5m":"FIVE_MINUTE","15m":"FIFTEEN_MINUTE","30m":"THIRTY_MINUTE","1h":"ONE_HOUR","2h":"TWO_HOUR","6h":"SIX_HOUR","1d":"ONE_DAY"},commonCurrencies:{CGLD:"CELO"},options:{stablePairs:["BUSD-USD","CBETH-ETH","DAI-USD","GUSD-USD","GYEN-USD","PAX-USD","PAX-USDT","USDC-EUR","USDC-GBP","USDT-EUR","USDT-GBP","USDT-USD","USDT-USDC","WBTC-BTC"],fetchCurrencies:{expires:5e3},accounts:["wallet","fiat"],createMarketBuyOrderRequiresPrice:!0,advanced:!0,fetchMarkets:"fetchMarketsV3",fetchTicker:"fetchTickerV3",fetchTickers:"fetchTickersV3",fetchAccounts:"fetchAccountsV3"}})}async fetchTime(e={}){const t=await this.v2PublicGetTime(e),i=this.safeValue(t,"data",{});return this.safeTimestamp(i,"epoch")}async fetchAccounts(e={}){return"fetchAccountsV3"===this.safeString(this.options,"fetchAccounts","fetchAccountsV3")?await this.fetchAccountsV3(e):await this.fetchAccountsV2(e)}async fetchAccountsV2(e={}){await this.loadMarkets();const t=await this.v2PrivateGetAccounts(this.extend({limit:100},e)),i=this.safeValue(t,"data",[]);return this.parseAccounts(i,e)}async fetchAccountsV3(e={}){await this.loadMarkets();const t=await this.v3PrivateGetBrokerageAccounts(this.extend({limit:100},e)),i=this.safeValue(t,"accounts",[]);return this.parseAccounts(i,e)}parseAccount(e){const t=this.safeValue(e,"active"),i=this.safeString(e,"currency"),s=this.safeValue(e,"currency",{}),r=this.safeString(s,"code",i),a=this.safeString(e,"name"),n=this.safeString(e,"type"),o=a.split(" ");return{id:this.safeString2(e,"id","uuid"),type:void 0!==t?this.safeStringLower(o,1):n,code:this.safeCurrencyCode(r),info:e}}async createDepositAddress(e,t={}){let i=this.safeString(t,"account_id");if(t=this.omit(t,"account_id"),void 0===i){await this.loadAccounts();for(let t=0;t<this.accounts.length;t++){const s=this.accounts[t];if(s.code===e&&"wallet"===s.type){i=s.id;break}}}if(void 0===i)throw new r.ExchangeError(this.id+" createDepositAddress() could not find the account with matching currency code, specify an `account_id` extra param");const s={account_id:i},a=await this.v2PrivatePostAccountsAccountIdAddresses(this.extend(s,t)),n=this.safeValue(a,"data",{});return{currency:e,tag:this.safeString(n,"destination_tag"),address:this.safeString(n,"address"),info:a}}async fetchMySells(e=undefined,t=undefined,i=undefined,s={}){const r=this.prepareAccountRequest(i,s);await this.loadMarkets();const a=this.omit(s,["account_id","accountId"]),n=await this.v2PrivateGetAccountsAccountIdSells(this.extend(r,a));return this.parseTrades(n.data,void 0,t,i)}async fetchMyBuys(e=undefined,t=undefined,i=undefined,s={}){const r=this.prepareAccountRequest(i,s);await this.loadMarkets();const a=this.omit(s,["account_id","accountId"]),n=await this.v2PrivateGetAccountsAccountIdBuys(this.extend(r,a));return this.parseTrades(n.data,void 0,t,i)}async fetchTransactionsWithMethod(e,t=undefined,i=undefined,s=undefined,r={}){const a=await this.prepareAccountRequestWithCurrencyCode(t,s,r);await this.loadMarkets();const n=this.omit(r,["account_id","accountId"]),o=await this[e](this.extend(a,n));return this.parseTransactions(o.data,void 0,i,s)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsWithMethod("v2PrivateGetAccountsAccountIdWithdrawals",e,t,i,s)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsWithMethod("v2PrivateGetAccountsAccountIdDeposits",e,t,i,s)}parseTransactionStatus(e){return this.safeString({created:"pending",completed:"ok",canceled:"canceled"},e,e)}parseTransaction(e,t=undefined){const i=this.safeValue(e,"subtotal",{}),s=this.safeValue(e,"fee",{}),r=this.safeString(e,"id"),a=this.parse8601(this.safeValue(e,"created_at")),n=this.parse8601(this.safeValue(e,"updated_at")),o=this.safeString(e,"resource"),d=this.safeNumber(i,"amount"),c=this.safeString(i,"currency"),h=this.safeCurrencyCode(c),u=this.safeNumber(s,"amount"),l=this.safeString(s,"currency"),p={cost:u,currency:this.safeCurrencyCode(l)};let f=this.parseTransactionStatus(this.safeString(e,"status"));return void 0===f&&(f=this.safeValue(e,"committed")?"ok":"pending"),{info:e,id:r,txid:r,timestamp:a,datetime:this.iso8601(a),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:o,amount:d,currency:h,status:f,updated:n,fee:p}}parseTrade(e,t=undefined){let i;const s=this.safeValue(e,"total",{}),r=this.safeValue(e,"amount",{}),n=this.safeValue(e,"subtotal",{}),o=this.safeValue(e,"fee",{}),d=this.safeString(e,"product_id");if(void 0!==(t=this.safeMarket(d,t,"-")))i=t.symbol;else{const e=this.safeString(r,"currency"),t=this.safeString(s,"currency");void 0!==e&&void 0!==t&&(i=this.safeCurrencyCode(e)+"/"+this.safeCurrencyCode(t))}const c=this.safeValue(e,"size_in_quote"),h=this.safeString(e,"price"),u=c?void 0:this.safeString(e,"size"),l=c?this.safeString(e,"size"):void 0,p=this.safeString(e,"commission"),f=this.safeString(r,"amount",u),m=this.safeString(n,"amount",l);let v,g;v=void 0!==m&&void 0!==f?a.O.stringDiv(m,f):h,g=void 0!==v&&void 0!==f?a.O.stringMul(v,f):m;const y=this.safeString(o,"currency"),b=this.safeStringN(e,["created_at","trade_time","time"]),w=this.safeStringLower2(e,"resource","side"),S=this.safeStringLower(e,"liquidity_indicator");return this.safeTrade({info:e,id:this.safeString2(e,"id","trade_id"),order:this.safeString(e,"order_id"),timestamp:this.parse8601(b),datetime:b,symbol:i,type:void 0,side:"unknown_order_side"===w?void 0:w,takerOrMaker:"unknown_liquidity_indicator"===S?void 0:S,price:v,amount:f,cost:g,fee:{cost:this.safeNumber(o,"amount",this.parseNumber(p)),currency:this.safeCurrencyCode(y)}})}async fetchMarkets(e={}){const t=this.safeString(this.options,"fetchMarkets","fetchMarketsV3");return await this[t](e)}async fetchMarketsV2(e={}){const t=await this.fetchCurrenciesFromCache(e),i=this.safeValue(t,"currencies",{}),s=this.safeValue(t,"exchangeRates",{}),r=this.safeValue(i,"data",[]),a=this.indexBy(r,"id"),n=this.safeValue(this.safeValue(s,"data",{}),"rates",{}),o=Object.keys(n),d=[];for(let e=0;e<o.length;e++){const t=o[e],i=this.safeCurrencyCode(t);if("crypto"==(t in a?"fiat":"crypto"))for(let e=0;e<r.length;e++){const s=r[e],a=this.safeString(s,"id"),n=this.safeCurrencyCode(a);d.push({id:t+"-"+a,symbol:i+"/"+n,base:i,quote:n,settle:void 0,baseId:t,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(s,"min_size"),max:void 0}},info:s})}}return d}async fetchMarketsV3(e={}){const t=await this.v3PrivateGetBrokerageProducts(e),i=await this.v3PrivateGetBrokerageTransactionSummary(e),s=this.safeValue(i,"fee_tier",{}),r=this.safeValue(t,"products",[]),a=[];for(let e=0;e<r.length;e++){const t=r[e],i=this.safeString(t,"product_id"),n=this.safeString(t,"base_currency_id"),o=this.safeString(t,"quote_currency_id"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=this.safeStringLower(t,"product_type"),u=this.safeValue(t,"trading_disabled"),l=this.safeValue(this.options,"stablePairs",[]);a.push({id:i,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:h,spot:"spot"===h,margin:void 0,swap:!1,future:!1,option:!1,active:!u,contract:!1,linear:void 0,inverse:void 0,taker:this.inArray(i,l)?1e-5:this.safeNumber(s,"taker_fee_rate"),maker:this.inArray(i,l)?0:this.safeNumber(s,"maker_fee_rate"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"base_increment"),price:this.safeNumber(t,"quote_increment")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"base_min_size"),max:this.safeNumber(t,"base_max_size")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"quote_min_size"),max:this.safeNumber(t,"quote_max_size")}},info:t})}return a}async fetchCurrenciesFromCache(e={}){const t=this.safeValue(this.options,"fetchCurrencies",{}),i=this.safeInteger(t,"timestamp"),s=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===i||r-i>s){const i=await this.v2PublicGetCurrencies(e),s=await this.v2PublicGetExchangeRates(e);this.options.fetchCurrencies=this.extend(t,{currencies:i,exchangeRates:s,timestamp:r})}return this.safeValue(this.options,"fetchCurrencies",{})}async fetchCurrencies(e={}){const t=await this.fetchCurrenciesFromCache(e),i=this.safeValue(t,"currencies",{}),s=this.safeValue(t,"exchangeRates",{}),r=this.safeValue(i,"data",[]),a=this.indexBy(r,"id"),n=this.safeValue(this.safeValue(s,"data",{}),"rates",{}),o=Object.keys(n),d={};for(let e=0;e<o.length;e++){const t=o[e],i=t in a?"fiat":"crypto",s=this.safeValue(a,t,{}),r=this.safeString(s,"id",t),n=this.safeString(s,"name"),c=this.safeCurrencyCode(r);d[c]={id:r,code:c,info:s,type:i,name:n,active:!0,deposit:void 0,withdraw:void 0,fee:void 0,precision:void 0,limits:{amount:{min:this.safeNumber(s,"min_size"),max:void 0},withdraw:{min:void 0,max:void 0}}}}return d}async fetchTickers(e=undefined,t={}){return"fetchTickersV3"===this.safeString(this.options,"fetchTickers","fetchTickersV3")?await this.fetchTickersV3(e,t):await this.fetchTickersV2(e,t)}async fetchTickersV2(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.v2PublicGetExchangeRates(this.extend({},t)),s=this.safeValue(i,"data",{}),r=this.safeValue(s,"rates",{}),a=this.safeString(s,"currency"),n={},o=Object.keys(r);for(let e=0;e<o.length;e++){const t=o[e],i=t+"-"+a,s=this.safeMarket(i,void 0,"-");n[s.symbol]=this.parseTicker(r[t],s)}return this.filterByArray(n,"symbol",e)}async fetchTickersV3(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.v3PrivateGetBrokerageProducts(t),s=this.safeValue(i,"products",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"product_id"),a=this.safeMarket(i,void 0,"-");r[a.symbol]=this.parseTicker(t,a)}return this.filterByArray(r,"symbol",e)}async fetchTicker(e,t={}){return"fetchTickerV3"===this.safeString(this.options,"fetchTicker","fetchTickerV3")?await this.fetchTickerV3(e,t):await this.fetchTickerV2(e,t)}async fetchTickerV2(e,t={}){await this.loadMarkets();const i=this.market(e),s=this.extend({symbol:i.id},t),r=await this.v2PublicGetPricesSymbolSpot(s),a=await this.v2PublicGetPricesSymbolBuy(s),n=await this.v2PublicGetPricesSymbolSell(s),o=this.safeValue(r,"data",{}),d=this.safeValue(a,"data",{}),c=this.safeValue(n,"data",{}),h={bid:this.safeNumber(c,"amount"),ask:this.safeNumber(d,"amount"),price:this.safeNumber(o,"amount")};return this.parseTicker(h,i)}async fetchTickerV3(e,t={}){await this.loadMarkets();const i=this.market(e),s={product_id:i.id,limit:1},r=await this.v3PrivateGetBrokerageProductsProductIdTicker(this.extend(s,t)),a=this.safeValue(r,"trades",[]);return this.parseTicker(a[0],i)}parseTicker(e,t=undefined){const i=this.safeString(e,"product_id"),s=this.safeNumber(e,"price");return this.safeTicker({symbol:this.safeSymbol(i,t),timestamp:void 0,datetime:void 0,bid:this.safeNumber(e,"bid"),ask:this.safeNumber(e,"ask"),last:s,high:void 0,low:void 0,bidVolume:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:s,previousClose:void 0,change:void 0,percentage:this.safeNumber(e,"price_percentage_change_24h"),average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}parseBalance(e,t={}){const i=this.safeValue(e,"data",[]),s=this.safeValue(t,"type",this.options.accounts),r={info:e};for(let e=0;e<i.length;e++){const t=i[e],n=this.safeString(t,"type");if(this.inArray(n,s)){const e=this.safeValue(t,"balance");if(void 0!==e){const t=this.safeString(e,"currency"),i=this.safeCurrencyCode(t),s=this.safeString(e,"amount"),n=s;let o=this.safeValue(r,i);void 0===o?(o=this.account(),o.free=n,o.total=s):(o.free=a.O.stringAdd(o.free,s),o.total=a.O.stringAdd(o.total,s)),r[i]=o}}}return this.safeBalance(r)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v2PrivateGetAccounts(this.extend({limit:100},e));return this.parseBalance(t,e)}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.prepareAccountRequestWithCurrencyCode(e,i,s),n=this.omit(s,["account_id","accountId"]),o=await this.v2PrivateGetAccountsAccountIdTransactions(this.extend(a,n));return this.parseLedger(o.data,r,t,i)}parseLedgerEntryStatus(e){return this.safeString({completed:"ok"},e,e)}parseLedgerEntryType(e){return this.safeString({buy:"trade",sell:"trade",fiat_deposit:"transaction",fiat_withdrawal:"transaction",exchange_deposit:"transaction",exchange_withdrawal:"transaction",send:"transaction",pro_deposit:"transaction",pro_withdrawal:"transaction"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeValue(e,"amount",{});let s,r=this.safeString(i,"amount");a.O.stringLt(r,"0")?(s="out",r=a.O.stringNeg(r)):s="in";const n=this.safeString(i,"currency"),o=this.safeCurrencyCode(n,t);let d;const c=this.safeValue(e,"network",{}),h=this.safeValue(c,"transaction_fee");if(void 0!==h){const e=this.safeString(h,"currency"),i=this.safeCurrencyCode(e,t);d={cost:this.safeNumber(h,"amount"),currency:i}}const u=this.parse8601(this.safeValue(e,"created_at")),l=this.safeString(e,"id"),p=this.parseLedgerEntryType(this.safeString(e,"type")),f=this.parseLedgerEntryStatus(this.safeString(e,"status")),m=this.safeString(e,"resource_path");let v;if(void 0!==m){const e=m.split("/");e.length>3&&(v=e[3])}return{info:e,id:l,timestamp:u,datetime:this.iso8601(u),direction:s,account:v,referenceId:void 0,referenceAccount:void 0,type:p,currency:o,amount:this.parseNumber(r),before:void 0,after:void 0,status:f,fee:d}}async findAccountId(e){await this.loadMarkets(),await this.loadAccounts();for(let t=0;t<this.accounts.length;t++){const i=this.accounts[t];if(i.code===e)return i.id}}prepareAccountRequest(e=undefined,t={}){const i=this.safeString2(t,"account_id","accountId");if(void 0===i)throw new r.ArgumentsRequired(this.id+" prepareAccountRequest() method requires an account_id (or accountId) parameter");const s={account_id:i};return void 0!==e&&(s.limit=e),s}async prepareAccountRequestWithCurrencyCode(e=undefined,t=undefined,i={}){let s=this.safeString2(i,"account_id","accountId");if(void 0===s){if(void 0===e)throw new r.ArgumentsRequired(this.id+" prepareAccountRequestWithCurrencyCode() method requires an account_id (or accountId) parameter OR a currency code argument");if(s=await this.findAccountId(e),void 0===s)throw new r.ExchangeError(this.id+" prepareAccountRequestWithCurrencyCode() could not find account id for "+e)}const a={account_id:s};return void 0!==t&&(a.limit=t),a}async createOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets();const d=this.market(e),c={client_order_id:this.uuid(),product_id:d.id,side:i.toUpperCase()},h=this.safeNumberN(o,["stopPrice","stop_price","triggerPrice"]),u=this.safeNumber(o,"stopLossPrice"),l=this.safeNumber(o,"takeProfitPrice"),p=void 0!==h,f=void 0!==u,m=void 0!==l,v=this.safeString(o,"timeInForce"),g="PO"===v||this.safeValue2(o,"postOnly","post_only",!1),y=this.safeString(o,"end_time");let b=this.safeString(o,"stop_direction");if("limit"===t)if(p)if(void 0===b&&(b="buy"===i?"STOP_DIRECTION_STOP_DOWN":"STOP_DIRECTION_STOP_UP"),"GTD"===v||void 0!==y){if(void 0===y)throw new r.ExchangeError(this.id+" createOrder() requires an end_time parameter for a GTD order");c.order_configuration={stop_limit_stop_limit_gtd:{base_size:this.amountToPrecision(e,s),limit_price:this.priceToPrecision(e,n),stop_price:this.priceToPrecision(e,h),stop_direction:b,end_time:y}}}else c.order_configuration={stop_limit_stop_limit_gtc:{base_size:this.amountToPrecision(e,s),limit_price:this.priceToPrecision(e,n),stop_price:this.priceToPrecision(e,h),stop_direction:b}};else if(f||m){let t;f?(void 0===b&&(b="buy"===i?"STOP_DIRECTION_STOP_UP":"STOP_DIRECTION_STOP_DOWN"),t=this.priceToPrecision(e,u)):(void 0===b&&(b="buy"===i?"STOP_DIRECTION_STOP_DOWN":"STOP_DIRECTION_STOP_UP"),t=this.priceToPrecision(e,l)),c.order_configuration={stop_limit_stop_limit_gtc:{base_size:this.amountToPrecision(e,s),limit_price:this.priceToPrecision(e,n),stop_price:t,stop_direction:b}}}else if("GTD"===v||void 0!==y){if(void 0===y)throw new r.ExchangeError(this.id+" createOrder() requires an end_time parameter for a GTD order");c.order_configuration={limit_limit_gtd:{base_size:this.amountToPrecision(e,s),limit_price:this.priceToPrecision(e,n),end_time:y,post_only:g}}}else c.order_configuration={limit_limit_gtc:{base_size:this.amountToPrecision(e,s),limit_price:this.priceToPrecision(e,n),post_only:g}};else{if(p||f||m)throw new r.NotSupported(this.id+" createOrder() only stop limit orders are supported");if("buy"===i){let t;if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0===n)throw new r.InvalidOrder(this.id+" createOrder() requires a price argument for market buy orders on spot markets to calculate the total amount to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option to false and pass in the cost to spend into the amount parameter");{const i=this.numberToString(s),r=this.numberToString(n),o=this.parseNumber(a.O.stringMul(i,r));t=this.priceToPrecision(e,o)}}else t=this.priceToPrecision(e,s);c.order_configuration={market_market_ioc:{quote_size:t}}}else c.order_configuration={market_market_ioc:{base_size:this.amountToPrecision(e,s)}}}o=this.omit(o,["timeInForce","triggerPrice","stopLossPrice","takeProfitPrice","stopPrice","stop_price","stopDirection","stop_direction","clientOrderId","postOnly","post_only","end_time"]);const w=await this.v3PrivatePostBrokerageOrders(this.extend(c,o));if(!0!==this.safeValue(w,"success"))throw new r.BadRequest(this.id+" createOrder() has failed, check your arguments and parameters");const S=this.safeValue(w,"success_response",{});return this.parseOrder(S,d)}parseOrder(e,t=undefined){const i=this.safeString(e,"product_id"),s=this.safeSymbol(i,t,"-");void 0!==s&&(t=this.market(s));const r=this.safeValue(e,"order_configuration",{}),a=this.safeValue(r,"limit_limit_gtc",{}),n=this.safeValue(r,"limit_limit_gtd",{}),o=this.safeValue(r,"stop_limit_stop_limit_gtc",{}),d=this.safeValue(r,"stop_limit_stop_limit_gtd",{}),c=this.safeValue(r,"market_market_ioc",{}),h=void 0!==o||void 0!==d;let u,l,p,f;if(void 0!==a||void 0!==n){const e=void 0!==a?a:n;u=this.safeString(e,"limit_price"),l=this.safeString(e,"base_size"),p=this.safeValue(e,"post_only")}else if(h){const e=void 0!==o?o:d;u=this.safeString(e,"limit_price"),l=this.safeString(e,"base_size"),p=this.safeValue(e,"post_only"),f=this.safeString(e,"stop_price")}else l=this.safeString(c,"base_size");const m=this.safeString(e,"created_time");return this.safeOrder({info:e,id:this.safeString(e,"order_id"),clientOrderId:this.safeString(e,"client_order_id"),timestamp:this.parse8601(m),datetime:m,lastTradeTimestamp:void 0,symbol:s,type:this.parseOrderType(this.safeString(e,"order_type")),timeInForce:this.parseTimeInForce(this.safeString(e,"time_in_force")),postOnly:p,side:this.safeStringLower(e,"side"),price:u,stopPrice:f,triggerPrice:f,amount:l,filled:this.safeString(e,"filled_size"),remaining:void 0,cost:void 0,average:this.safeString(e,"average_filled_price"),status:this.parseOrderStatus(this.safeString(e,"status")),fee:{cost:this.safeString(e,"total_fees"),currency:void 0},trades:void 0},t)}parseOrderStatus(e){return this.safeString({OPEN:"open",FILLED:"closed",CANCELLED:"canceled",EXPIRED:"canceled",FAILED:"canceled",UNKNOWN_ORDER_STATUS:void 0},e,e)}parseOrderType(e){if("UNKNOWN_ORDER_TYPE"!==e)return this.safeString({MARKET:"market",LIMIT:"limit",STOP:"limit",STOP_LIMIT:"limit"},e,e)}parseTimeInForce(e){return this.safeString({GOOD_UNTIL_CANCELLED:"GTC",GOOD_UNTIL_DATE_TIME:"GTD",IMMEDIATE_OR_CANCEL:"IOC",FILL_OR_KILL:"FOK",UNKNOWN_TIME_IN_FORCE:void 0},e,e)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=await this.cancelOrders([e],t,i);return this.safeValue(s,0,{})}async cancelOrders(e,t=undefined,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));const a={order_ids:e},n=await this.v3PrivatePostBrokerageOrdersBatchCancel(this.extend(a,i)),o=this.safeValue(n,"results",[]);for(let e=0;e<o.length;e++)if(!0!==this.safeValue(o[e],"success"))throw new r.BadRequest(this.id+" cancelOrders() has failed, check your arguments and parameters");return this.parseOrders(o,s)}async fetchOrder(e,t=undefined,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));const r={order_id:e},a=await this.v3PrivateGetBrokerageOrdersHistoricalOrderId(this.extend(r,i)),n=this.safeValue(a,"order",{});return this.parseOrder(n,s)}async fetchOrders(e=undefined,t=undefined,i=100,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={};void 0!==r&&(a.product_id=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.start_date=this.parse8601(t));const n=await this.v3PrivateGetBrokerageOrdersHistoricalBatch(this.extend(a,s)),o=this.safeValue(n,"orders",[]);return this.parseOrders(o,r,t,i)}async fetchOrdersByStatus(e,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={order_status:e};void 0!==a&&(n.product_id=a.id),void 0===s&&(s=100),n.limit=s,void 0!==i&&(n.start_date=this.parse8601(i));const o=await this.v3PrivateGetBrokerageOrdersHistoricalBatch(this.extend(n,r)),d=this.safeValue(o,"orders",[]);return this.parseOrders(d,a,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("OPEN",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("FILLED",e,t,i,s)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("CANCELLED",e,t,i,s)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const o=this.market(e),d=this.seconds().toString(),c={product_id:o.id,granularity:this.safeString(this.timeframes,t,t),end:d};if(void 0!==i){const e=i.toString(),t=a.O.stringDiv(e,"1000");c.start=this.decimalToPrecision(t,n.tk,0,n.nr)}else c.start=a.O.stringSub(d,"18000");const h=await this.v3PrivateGetBrokerageProductsProductIdCandles(this.extend(c,r)),u=this.safeValue(h,"candles",[]);return this.parseOHLCVs(u,o,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"start"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={product_id:r.id};void 0!==i&&(a.limit=i);const n=await this.v3PrivateGetBrokerageProductsProductIdTicker(this.extend(a,s)),o=this.safeValue(n,"trades",[]);return this.parseTrades(o,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={};void 0!==r&&(a.product_id=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.start_sequence_timestamp=this.iso8601(t));const n=await this.v3PrivateGetBrokerageOrdersHistoricalFills(this.extend(a,s)),o=this.safeValue(n,"fills",[]);return this.parseTrades(o,r,t,i)}sign(e,t=[],i="GET",s={},r=undefined,a=undefined){const n=t[0],d="private"===t[1];let c="/"+("v3"===n?"api/v3":"v2")+"/"+this.implodeParams(e,s);const h=this.omit(s,this.extractParams(e)),u=c;"GET"===i&&Object.keys(h).length&&(c+="?"+this.urlencode(h));const l=this.urls.api.rest+c;if(d){const e=this.safeString(this.headers,"Authorization");if(void 0!==e)r={Authorization:e,"Content-Type":"application/json"};else if(this.token)r={Authorization:"Bearer "+this.token,"Content-Type":"application/json"};else{this.checkRequiredCredentials();const e=this.nonce().toString();let t,s="";"GET"!==i&&Object.keys(h).length&&(s=a=this.json(h)),t="v3"===n?e+i+u+s:e+i+c+s;const d=this.hmac(this.encode(t),this.encode(this.secret),o.J);r={"CB-ACCESS-KEY":this.apiKey,"CB-ACCESS-SIGN":d,"CB-ACCESS-TIMESTAMP":e,"Content-Type":"application/json"}}}return{url:l,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.id+" "+n;let u=this.safeString(o,"error");if(void 0!==u){const e=this.safeString(o,"error_description");throw this.throwExactlyMatchedException(this.exceptions.exact,u,h),this.throwBroadlyMatchedException(this.exceptions.broad,e,h),new r.ExchangeError(h)}const l=this.safeValue(o,"errors");if(void 0!==l&&Array.isArray(l)&&l.length>0){u=this.safeString(l[0],"id");const e=this.safeString(l[0],"message");if(void 0!==u)throw this.throwExactlyMatchedException(this.exceptions.exact,u,h),this.throwBroadlyMatchedException(this.exceptions.broad,e,h),new r.ExchangeError(h)}const p=this.options.advanced;if(void 0===this.safeValue(o,"data")&&!p)throw new r.ExchangeError(this.id+" failed due to a malformed response "+this.json(o))}}},1741:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(8856);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinbaseprime",name:"Coinbase Prime",pro:!0,hostname:"exchange.coinbase.com",urls:{test:{public:"https://public.sandbox.exchange.coinbase.com",private:"https://public.sandbox.exchange.coinbase.com"},logo:"https://user-images.githubusercontent.com/1294454/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg",api:{public:"https://api.{hostname}",private:"https://api.{hostname}"},www:"https://exchange.coinbase.com",doc:"https://docs.exchange.coinbase.com"}})}}},8856:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2925),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinbasepro",name:"Coinbase Pro",countries:["US"],rateLimit:100,userAgent:this.userAgents.chrome,pro:!0,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchLedger:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!0,fetchWithdrawals:!0,withdraw:!0},timeframes:{"1m":60,"5m":300,"15m":900,"1h":3600,"6h":21600,"1d":86400},hostname:"pro.coinbase.com",urls:{test:{public:"https://api-public.sandbox.pro.coinbase.com",private:"https://api-public.sandbox.pro.coinbase.com"},logo:"https://user-images.githubusercontent.com/1294454/41764625-63b7ffde-760a-11e8-996d-a6328fa9347a.jpg",api:{public:"https://api.{hostname}",private:"https://api.{hostname}"},www:"https://pro.coinbase.com/",doc:"https://docs.pro.coinbase.com",fees:["https://docs.pro.coinbase.com/#fees","https://support.pro.coinbase.com/customer/en/portal/articles/2945310-fees"]},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{public:{get:["currencies","products","products/{id}","products/{id}/book","products/{id}/candles","products/{id}/stats","products/{id}/ticker","products/{id}/trades","time","products/spark-lines"]},private:{get:["accounts","accounts/{id}","accounts/{id}/holds","accounts/{id}/ledger","accounts/{id}/transfers","coinbase-accounts","fills","funding","fees","margin/profile_information","margin/buying_power","margin/withdrawal_power","margin/withdrawal_power_all","margin/exit_plan","margin/liquidation_history","margin/position_refresh_amounts","margin/status","oracle","orders","orders/{id}","orders/client:{client_oid}","otc/orders","payment-methods","position","profiles","profiles/{id}","reports/{report_id}","transfers","transfers/{transfer_id}","users/self/exchange-limits","users/self/hold-balances","users/self/trailing-volume","withdrawals/fee-estimate","conversions/{conversion_id}"],post:["conversions","deposits/coinbase-account","deposits/payment-method","coinbase-accounts/{id}/addresses","funding/repay","orders","position/close","profiles/margin-transfer","profiles/transfer","reports","withdrawals/coinbase","withdrawals/coinbase-account","withdrawals/crypto","withdrawals/payment-method"],delete:["orders","orders/client:{client_oid}","orders/{id}"]}},commonCurrencies:{CGLD:"CELO"},precisionMode:n.sh,fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.004"),taker:this.parseNumber("0.006")},funding:{tierBased:!1,percentage:!1,withdraw:{BCH:0,BTC:0,LTC:0,ETH:0,EUR:.15,USD:25},deposit:{BCH:0,BTC:0,LTC:0,ETH:0,EUR:.15,USD:10}}},exceptions:{exact:{"Insufficient funds":r.InsufficientFunds,NotFound:r.OrderNotFound,"Invalid API Key":r.AuthenticationError,"invalid signature":r.AuthenticationError,"Invalid Passphrase":r.AuthenticationError,"Invalid order id":r.InvalidOrder,"Private rate limit exceeded":r.RateLimitExceeded,"Trading pair not available":r.PermissionDenied,"Product not found":r.InvalidOrder},broad:{"Order already done":r.OrderNotFound,"order not found":r.OrderNotFound,"price too small":r.InvalidOrder,"price too precise":r.InvalidOrder,"under maintenance":r.OnMaintenance,"size is too small":r.InvalidOrder,"Cancel only mode":r.OnMaintenance}}})}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"id"),a=this.safeString(s,"name"),n=this.safeCurrencyCode(r),o=this.safeValue(s,"details",{}),d="online"===this.safeString(s,"status");i[n]={id:r,code:n,info:s,type:this.safeString(o,"type"),name:a,active:d,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.safeNumber(s,"max_precision"),limits:{amount:{min:this.safeNumber(o,"min_size"),max:void 0},withdraw:{min:this.safeNumber(o,"min_withdrawal_amount"),max:void 0}}}}return i}async fetchMarkets(e={}){const t=await this.publicGetProducts(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"id"),[a,n]=r.split("-"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=this.safeString(s,"status");i.push(this.extend(this.fees.trading,{id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:this.safeValue(s,"margin_enabled"),swap:!1,future:!1,option:!1,active:"online"===c,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(s,"base_increment"),price:this.safeNumber(s,"quote_increment")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(s,"min_market_funds"),max:void 0}},info:s}))}return i}async fetchAccounts(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e);return this.parseAccounts(t,e)}parseAccount(e){const t=this.safeString(e,"currency");return{id:this.safeString(e,"id"),type:void 0,code:this.safeCurrencyCode(t),info:e}}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"hold"),n.total=this.safeString(s,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={id:this.marketId(e),level:2},r=await this.publicGetProductsIdBook(this.extend(s,i)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"sequence"),a}parseTicker(e,t=undefined){let i,s,r,a,n,o,d,c;const h=void 0===t?void 0:t.symbol;return Array.isArray(e)?(a=this.safeString(e,4),i=this.milliseconds()):(i=this.parse8601(this.safeValue(e,"time")),s=this.safeString(e,"bid"),r=this.safeString(e,"ask"),n=this.safeString(e,"high"),o=this.safeString(e,"low"),d=this.safeString(e,"open"),a=this.safeString2(e,"price","last"),c=this.safeString(e,"volume")),this.safeTicker({symbol:h,timestamp:i,datetime:this.iso8601(i),high:n,low:o,bid:s,bidVolume:void 0,ask:r,askVolume:void 0,vwap:void 0,open:d,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:c,quoteVolume:void 0,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetProductsSparkLines(this.extend({},t)),s={},r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeValue(i,t,[]),n=this.safeValue(a,0,[]),o=this.safeMarket(t,void 0,"-");s[o.symbol]=this.parseTicker(n,o)}return this.filterByArray(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={id:i.id},r=this.safeString(this.options,"fetchTickerMethod","publicGetProductsIdTicker"),a=await this[r](this.extend(s,t));return this.parseTicker(a,i)}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString2(e,"time","created_at")),s=this.safeString(e,"product_id");let r,a,n;t=this.safeMarket(s,t,"-");const o=this.safeStringLower(t,"quoteId");if(void 0!==o){const i=o+"_value";n=this.safeString(e,i);const s=this.safeString(e,"liquidity");void 0!==s&&(a="T"===s?"taker":"maker",r=this.safeString(t,a))}const d={cost:this.safeString2(e,"fill_fees","fee"),currency:t.quote,rate:r},c=this.safeString(e,"trade_id");let h="buy"===e.side?"sell":"buy";const u=this.safeString(e,"order_id"),l=this.safeString(e,"maker_order_id"),p=this.safeString(e,"taker_order_id");(void 0!==u||void 0!==l&&void 0!==p)&&(h="buy"===e.side?"buy":"sell");const f=this.safeString(e,"price"),m=this.safeString(e,"size");return this.safeTrade({id:c,order:u,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,takerOrMaker:a,side:h,price:f,amount:m,fee:d,cost:n},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={product_id:a.id};void 0!==i&&(n.limit=i);const o=await this.privateGetFills(this.extend(n,s));return this.parseTrades(o,a,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={id:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetProductsIdTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetFees(e),i=this.safeNumber(t,"maker_fee_rate"),s=this.safeNumber(t,"taker_fee_rate"),r={};for(let e=0;e<this.symbols.length;e++){const a=this.symbols[e];r[a]={info:t,symbol:a,maker:i,taker:s,percentage:!0,tierBased:!0}}return r}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,3),this.safeNumber(e,2),this.safeNumber(e,1),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeInteger(this.timeframes,t),o={id:a.id};o.granularity=void 0!==n?n:t,void 0!==i&&(o.start=this.iso8601(i),s=void 0===s?300:Math.min(300,s),o.end=this.iso8601(this.sum((s-1)*n*1e3,i)));const d=await this.publicGetProductsIdCandles(this.extend(o,r));return this.parseOHLCVs(d,a,t,i,s)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeTimestamp(t,"epoch")}parseOrderStatus(e){return this.safeString({pending:"open",active:"open",open:"open",done:"closed",canceled:"canceled",canceling:"open"},e,e)}parseOrder(e,t=undefined){const i=this.parse8601(this.safeString(e,"created_at")),s=this.safeString(e,"product_id");t=this.safeMarket(s,t,"-");let r=this.parseOrderStatus(this.safeString(e,"status"));const a=this.safeString(e,"done_reason");"closed"===r&&"canceled"===a&&(r="canceled");const n=this.safeString(e,"price"),o=this.safeString(e,"filled_size"),d=this.safeString(e,"size",o),c=this.safeString(e,"executed_value"),h=this.safeNumber(e,"fill_fees");let u;void 0!==h&&(u={cost:h,currency:t.quote,rate:void 0});const l=this.safeString(e,"id"),p=this.safeString(e,"type"),f=this.safeString(e,"side"),m=this.safeString(e,"time_in_force"),v=this.safeValue(e,"post_only"),g=this.safeNumber(e,"stop_price"),y=this.safeString(e,"client_oid");return this.safeOrder({id:l,clientOrderId:y,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:r,symbol:t.symbol,type:p,timeInForce:m,postOnly:v,side:f,price:n,stopPrice:g,triggerPrice:g,cost:c,amount:d,filled:o,remaining:void 0,fee:u,average:void 0,trades:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={},r=this.safeString2(i,"clientOrderId","client_oid");let a;void 0===r?(a="privateGetOrdersId",s.id=e):(a="privateGetOrdersClientClientOid",s.client_oid=r,i=this.omit(i,["clientOrderId","client_oid"]));const n=await this[a](this.extend(s,i));return this.parseOrder(n)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={order_id:e},o=await this.privateGetFills(this.extend(n,r));return this.parseTrades(o,a,i,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOpenOrders(e,t,i,this.extend({status:"all"},s))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.product_id=a.id),void 0!==i&&(r.limit=i);const n=await this.privateGetOrders(this.extend(r,s));return this.parseOrders(n,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOpenOrders(e,t,i,this.extend({status:"done"},s))}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={type:t,side:i,product_id:n.id},d=this.safeString2(a,"clientOrderId","client_oid");void 0!==d&&(o.client_oid=d);const c=this.safeNumber2(a,"stopPrice","stop_price");void 0!==c&&(o.stop_price=this.priceToPrecision(e,c));const h=this.safeString2(a,"timeInForce","time_in_force");if(void 0!==h&&(o.time_in_force=h),this.safeValue2(a,"postOnly","post_only",!1)&&(o.post_only=!0),a=this.omit(a,["timeInForce","time_in_force","stopPrice","stop_price","clientOrderId","client_oid","postOnly","post_only"]),"limit"===t)o.price=this.priceToPrecision(e,r),o.size=this.amountToPrecision(e,s);else if("market"===t){let t=this.safeNumber2(a,"cost","funds");void 0===t?void 0!==r&&(t=s*r):a=this.omit(a,["cost","funds"]),void 0!==t?o.funds=this.costToPrecision(e,t):o.size=this.amountToPrecision(e,s)}const u=await this.privatePostOrders(this.extend(o,a));return this.parseOrder(u,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={},r=this.safeString2(i,"clientOrderId","client_oid");let a,n;return void 0===r?(a="privateDeleteOrdersId",s.id=e):(a="privateDeleteOrdersClientClientOid",s.client_oid=r,i=this.omit(i,["clientOrderId","client_oid"])),void 0!==t&&(n=this.market(t),s.product_id=n.symbol),await this[a](this.extend(s,i))}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s;return void 0!==e&&(s=this.market(e),i.product_id=s.symbol),await this.privateDeleteOrders(this.extend(i,t))}async fetchPaymentMethods(e={}){return await this.privateGetPaymentMethods(e)}async deposit(e,t,i,s={}){await this.loadMarkets();const a={currency:this.currency(e).id,amount:t};let n="privatePostDeposits";if("payment_method_id"in s)n+="PaymentMethod";else{if(!("coinbase_account_id"in s))throw new r.NotSupported(this.id+" deposit() requires one of `coinbase_account_id` or `payment_method_id` extra params");n+="CoinbaseAccount"}const o=await this[n](this.extend(a,s));if(!o)throw new r.ExchangeError(this.id+" deposit() error: "+this.json(o));return{info:o,id:o.id}}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e),o={currency:n.id,amount:t};let d="privatePostWithdrawals";"payment_method_id"in a?d+="PaymentMethod":"coinbase_account_id"in a?d+="CoinbaseAccount":(d+="Crypto",o.crypto_address=i,void 0!==s&&(o.destination_tag=s));const c=await this[d](this.extend(o,a));if(!c)throw new r.ExchangeError(this.id+" withdraw() error: "+this.json(c));return this.parseTransaction(c,n)}parseLedgerEntryType(e){return this.safeString({transfer:"transfer",match:"trade",fee:"fee",rebate:"rebate",conversion:"trade"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"id");let s,r=this.safeString(e,"amount");const n=this.safeString(e,"balance"),o=a.O.stringSub(n,r);a.O.stringLt(r,"0")?(s="out",r=a.O.stringAbs(r)):s="in";const d=this.parseNumber(r),c=this.parseNumber(n),h=this.parseNumber(o),u=this.parse8601(this.safeValue(e,"created_at")),l=this.parseLedgerEntryType(this.safeString(e,"type")),p=this.safeCurrencyCode(void 0,t),f=this.safeValue(e,"details",{});let m,v,g;return"transfer"===l?(m=this.safeString(f,"from"),v=this.safeString(f,"to"),g=this.safeString(f,"profile_transfer_id")):g=this.safeString(f,"order_id"),{id:i,currency:p,account:m,referenceAccount:v,referenceId:g,status:"ok",amount:d,before:h,after:c,fee:void 0,direction:s,timestamp:u,datetime:this.iso8601(u),type:l,info:e}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchLedger() requires a code param");await this.loadMarkets(),await this.loadAccounts();const a=this.currency(e),n=this.indexBy(this.accounts,"code"),o=this.safeValue(n,e);if(void 0===o)throw new r.ExchangeError(this.id+" fetchLedger() could not find account id for "+e);const d={id:o.id};void 0!==t&&(d.start_date=this.iso8601(t)),void 0!==i&&(d.limit=i);const c=await this.privateGetAccountsIdLedger(this.extend(d,s));for(let t=0;t<c.length;t++)c[t].currency=e;return this.parseLedger(c,a,t,i)}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){let a;await this.loadMarkets(),await this.loadAccounts();let n=this.safeString(s,"id");if(void 0===n&&void 0!==e){a=this.currency(e);const t=this.indexBy(this.accounts,"code"),i=this.safeValue(t,e);if(void 0===i)throw new r.ExchangeError(this.id+" fetchTransactions() could not find account id for "+e);n=i.id}const o={};let d;if(void 0!==n&&(o.id=n),void 0!==i&&(o.limit=i),void 0===n){d=await this.privateGetTransfers(this.extend(o,s));for(let e=0;e<d.length;e++){const t=this.safeString(d[e],"account_id"),i=this.safeValue(this.accountsById,t),s=this.safeString(i,"code");d[e].currency=s}}else{d=await this.privateGetAccountsIdTransfers(this.extend(o,s));for(let t=0;t<d.length;t++)d[t].currency=e}return this.parseTransactions(d,a,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactions(e,t,i,this.extend({type:"deposit"},s))}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactions(e,t,i,this.extend({type:"withdraw"},s))}parseTransactionStatus(e){if(this.safeValue(e,"canceled_at"))return"canceled";const t=this.safeValue(e,"processed_at"),i=this.safeValue(e,"completed_at");return i?"ok":t&&!i?"failed":"pending"}parseTransaction(e,t=undefined){const i=this.safeValue(e,"details",{}),s=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t);let n=this.safeNumber(e,"amount"),o=this.safeString(e,"type"),d=this.safeString(i,"crypto_address");d=this.safeString(e,"crypto_address",d);const c={currency:void 0,cost:void 0,rate:void 0};if("withdraw"===o){o="withdrawal",d=this.safeString(i,"sent_to_address",d);const e=this.safeNumber(i,"fee");void 0!==e&&(void 0!==n&&(n-=e),c.cost=e,c.currency=a)}const h=this.safeString(i,"network");return{info:e,id:this.safeString(e,"id"),txid:this.safeString(i,"crypto_transaction_hash"),type:o,currency:a,network:this.networkIdToCode(h),amount:n,status:this.parseTransactionStatus(e),timestamp:s,datetime:this.iso8601(s),address:d,addressFrom:void 0,addressTo:this.safeString(i,"crypto_address"),tag:this.safeString(i,"destination_tag"),tagFrom:void 0,tagTo:void 0,updated:this.parse8601(this.safeString(e,"processed_at")),comment:void 0,fee:c}}async createDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e);let s=this.safeValue(this.options,"coinbaseAccounts");void 0===s&&(s=await this.privateGetCoinbaseAccounts(),this.options.coinbaseAccounts=s,this.options.coinbaseAccountsByCurrencyId=this.indexBy(s,"currency"));const a=i.id,n=this.safeValue(this.options.coinbaseAccountsByCurrencyId,a);if(void 0===n)throw new r.InvalidAddress(this.id+" createDepositAddress() could not find currency code "+e+" with id = "+a+" in this.options['coinbaseAccountsByCurrencyId']");const o={id:n.id},d=await this.privatePostCoinbaseAccountsIdAddresses(this.extend(o,t)),c=this.safeString(d,"address"),h=this.safeString(d,"destination_tag");return{currency:e,address:this.checkAddress(c),tag:h,info:d}}sign(e,t="public",i="GET",s={},a=undefined,n=undefined){let d="/"+this.implodeParams(e,s);const c=this.omit(s,this.extractParams(e));"GET"===i&&Object.keys(c).length&&(d+="?"+this.urlencode(c));const h=this.implodeHostname(this.urls.api[t])+d;if("private"===t){this.checkRequiredCredentials();const e=this.nonce().toString();let t="";"GET"!==i&&Object.keys(c).length&&(t=n=this.json(c));const s=e+i+d+t;let h;try{h=this.base64ToBinary(this.secret)}catch(e){throw new r.AuthenticationError(this.id+" sign() invalid base64 secret")}const u=this.hmac(this.encode(s),h,o.J,"base64");a={"CB-ACCESS-KEY":this.apiKey,"CB-ACCESS-SIGN":u,"CB-ACCESS-TIMESTAMP":e,"CB-ACCESS-PASSPHRASE":this.password,"Content-Type":"application/json"}}return{url:h,method:i,body:n,headers:a}}handleErrors(e,t,i,s,a,n,o,d,c){if(400===e||404===e){if("{"===n[0]){const e=this.safeString(o,"message"),t=this.id+" "+e;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r.ExchangeError(t)}throw new r.ExchangeError(this.id+" "+n)}}async request(e,t="public",i="GET",s={},a=undefined,n=undefined,o={},d={}){const c=await this.fetch2(e,t,i,s,a,n,o,d);if("string"!=typeof c&&"message"in c)throw new r.ExchangeError(this.id+" "+this.json(c));return c}}},2117:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(7089),r=i(6689),a=i(9292),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coincheck",name:"coincheck",countries:["JP","ID"],rateLimit:1500,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/51840849/87182088-1d6d6380-c2ec-11ea-9c64-8ab9f9b289f5.jpg",api:{rest:"https://coincheck.com/api"},www:"https://coincheck.com",doc:"https://coincheck.com/documents/exchange/api",fees:["https://coincheck.com/exchange/fee","https://coincheck.com/info/fee"]},api:{public:{get:["exchange/orders/rate","order_books","rate/{pair}","ticker","trades"]},private:{get:["accounts","accounts/balance","accounts/leverage_balance","bank_accounts","deposit_money","exchange/orders/opens","exchange/orders/transactions","exchange/orders/transactions_pagination","exchange/leverage/positions","lending/borrows/matches","send_money","withdraws"],post:["bank_accounts","deposit_money/{id}/fast","exchange/orders","exchange/transfers/to_leverage","exchange/transfers/from_leverage","lending/borrows","lending/borrows/{id}/repay","send_money","withdraws"],delete:["bank_accounts/{id}","exchange/orders/{id}","withdraws/{id}"]}},markets:{"BTC/JPY":{id:"btc_jpy",symbol:"BTC/JPY",base:"BTC",quote:"JPY",baseId:"btc",quoteId:"jpy",type:"spot",spot:!0},"ETC/JPY":{id:"etc_jpy",symbol:"ETC/JPY",base:"ETC",quote:"JPY",baseId:"etc",quoteId:"jpy",type:"spot",spot:!0},"FCT/JPY":{id:"fct_jpy",symbol:"FCT/JPY",base:"FCT",quote:"JPY",baseId:"fct",quoteId:"jpy",type:"spot",spot:!0},"MONA/JPY":{id:"mona_jpy",symbol:"MONA/JPY",base:"MONA",quote:"JPY",baseId:"mona",quoteId:"jpy",type:"spot",spot:!0},"ETC/BTC":{id:"etc_btc",symbol:"ETC/BTC",base:"ETC",quote:"BTC",baseId:"etc",quoteId:"btc",type:"spot",spot:!0}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0"),taker:this.parseNumber("0")}},precisionMode:a.sh,exceptions:{exact:{"disabled API Key":r.AuthenticationError,"invalid authentication":r.AuthenticationError},broad:{}}})}parseBalance(e){const t={info:e},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){const r=i[s],a=this.currency(r).id;if(a in e){const i=this.account(),s=a+"_reserved";i.free=this.safeString(e,a),i.used=this.safeString(e,s),t[r]=i}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountsBalance(e);return this.parseBalance(t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privateGetExchangeOrdersOpens(s),n=this.safeValue(a,"orders",[]),o=this.parseOrders(n,r,t,i),d=[];for(let e=0;e<o.length;e++)d.push(this.extend(o[e],{status:"open"}));return d}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"order_type"),r=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"pending_amount"),n=this.safeString(e,"pending_amount"),o=this.safeString(e,"rate"),d=this.safeString(e,"pair"),c=this.safeSymbol(d,t,"_");return this.safeOrder({id:i,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,amount:a,remaining:n,filled:void 0,side:s,type:void 0,timeInForce:void 0,postOnly:void 0,status:void 0,symbol:c,price:o,stopPrice:void 0,triggerPrice:void 0,cost:void 0,fee:void 0,info:e,average:void 0,trades:void 0},t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id},a=await this.publicGetOrderBooks(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){if("BTC/JPY"!==e)throw new r.BadSymbol(this.id+" fetchTicker() supports BTC/JPY only");await this.loadMarkets();const i=this.market(e),s={pair:i.id},a=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(a,i)}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString(e,"created_at")),s=this.safeString(e,"id"),r=this.safeString(e,"rate"),a=this.safeString(e,"pair"),n=(t=this.safeMarket(a,t,"_")).baseId,o=t.quoteId,d=t.symbol;let c,h,u,l,p,f;if("liquidity"in e){"T"===this.safeString(e,"liquidity")?c="taker":"M"===this.safeString(e,"liquidity")&&(c="maker");const t=this.safeValue(e,"funds",{});h=this.safeString(t,n),u=this.safeString(t,o),p={currency:this.safeString(e,"fee_currency"),cost:this.safeString(e,"fee")},l=this.safeString(e,"side"),f=this.safeString(e,"order_id")}else h=this.safeString(e,"amount"),l=this.safeString(e,"order_type");return this.safeTrade({id:s,info:e,datetime:this.iso8601(i),timestamp:i,symbol:d,type:void 0,side:l,order:f,takerOrMaker:c,price:r,amount:h,cost:u,fee:p},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={};void 0!==i&&(a.limit=i);const n=await this.privateGetExchangeOrdersTransactionsPagination(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetTrades(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e),i=this.safeValue(t,"exchange_fees",{}),s={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],r=this.market(t),a=this.safeValue(i,r.id,{});s[t]={info:a,symbol:t,maker:this.safeNumber(a,"maker_fee"),taker:this.safeNumber(a,"taker_fee"),percentage:!0,tierBased:!1}}return s}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={pair:n.id};if("market"===t){const e=t+"_"+i;o.order_type=e,o[("buy"===i?e+"_":"")+"amount"]=s}else o.order_type=i,o.rate=r,o.amount=s;const d=await this.privatePostExchangeOrders(this.extend(o,a)),c=this.safeString(d,"id");return this.safeOrder({id:c,info:d},n)}async cancelOrder(e,t=undefined,i={}){const s={id:e};return await this.privateDeleteExchangeOrdersId(this.extend(s,i))}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==i&&(a.limit=i);const n=await this.privateGetDepositMoney(this.extend(a,s)),o=this.safeValue(n,"deposits",[]);return this.parseTransactions(o,r,t,i,{type:"deposit"})}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={};void 0!==i&&(a.limit=i);const n=await this.privateGetWithdraws(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,r,t,i,{type:"withdrawal"})}parseTransactionStatus(e){return this.safeString({pending:"pending",processing:"pending",finished:"ok",canceled:"canceled",confirmed:"pending",received:"ok"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.parse8601(this.safeString(e,"created_at")),r=this.safeString(e,"address"),a=this.safeNumber(e,"amount"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),d=this.parseTransactionStatus(this.safeString(e,"status")),c=this.parse8601(this.safeString(e,"confirmed_at"));let h;const u=this.safeNumber(e,"fee");return void 0!==u&&(h={cost:u,currency:o}),{info:e,id:i,txid:void 0,timestamp:s,datetime:this.iso8601(s),network:void 0,address:r,addressTo:r,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:void 0,amount:a,currency:o,status:d,updated:c,internal:void 0,fee:h}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let o=this.urls.api.rest+"/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(o+="?"+this.urlencode(d));else{this.checkRequiredCredentials();const e=this.nonce().toString();let t="";"GET"===i?Object.keys(d).length&&(o+="?"+this.urlencode(this.keysort(d))):Object.keys(d).length&&(t=a=this.urlencode(this.keysort(d)));const s=e+o+t;r={"Content-Type":"application/x-www-form-urlencoded","ACCESS-KEY":this.apiKey,"ACCESS-NONCE":e,"ACCESS-SIGNATURE":this.hmac(this.encode(s),this.encode(this.secret),n.J)}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&!this.safeValue(o,"success",!0)){const e=this.safeString(o,"error"),t=this.id+" "+this.json(o);throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,n,t),new r.ExchangeError(this.id+" "+this.json(o))}}}},332:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(8519),r=i(6689),a=i(2194),n=i(9292),o=i(1372),d=i(7311);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinex",name:"CoinEx",version:"v1",countries:["CN"],rateLimit:2.5,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:!0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!0,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddressByNetwork:!1,fetchDepositAddresses:!1,fetchDeposits:!0,fetchDepositWithdrawFees:!0,fetchDepsoitWithdrawFee:"emulated",fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!0,repayMargin:!0,setLeverage:!0,setMarginMode:!0,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","12h":"12hour","1d":"1day","3d":"3day","1w":"1week"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87182089-1e05fa00-c2ec-11ea-8da9-cc73b45abbbc.jpg",api:{public:"https://api.coinex.com",private:"https://api.coinex.com",perpetualPublic:"https://api.coinex.com/perpetual",perpetualPrivate:"https://api.coinex.com/perpetual"},www:"https://www.coinex.com",doc:"https://github.com/coinexcom/coinex_exchange_api/wiki",fees:"https://www.coinex.com/fees",referral:"https://www.coinex.com/register?refer_code=yw5fz"},api:{public:{get:{"amm/market":1,"common/currency/rate":1,"common/asset/config":1,"common/maintain/info":1,"common/temp-maintain/info":1,"margin/market":1,"market/info":1,"market/list":1,"market/ticker":1,"market/ticker/all":1,"market/depth":1,"market/deals":1,"market/kline":1,"market/detail":1}},private:{get:{"account/amm/balance":40,"account/investment/balance":40,"account/balance/history":40,"account/market/fee":40,"balance/coin/deposit":40,"balance/coin/withdraw":40,"balance/info":40,"balance/deposit/address/{coin_type}":40,"contract/transfer/history":40,"credit/info":40,"credit/balance":40,"investment/transfer/history":40,"margin/account":1,"margin/config":1,"margin/loan/history":40,"margin/transfer/history":40,"order/deals":40,"order/finished":40,"order/pending":8,"order/status":8,"order/status/batch":8,"order/user/deals":40,"order/stop/finished":40,"order/stop/pending":8,"order/user/trade/fee":1,"order/market/trade/info":1,"sub_account/balance":1,"sub_account/transfer/history":40,"sub_account/auth/api/{user_auth_id}":40},post:{"balance/coin/withdraw":40,"contract/balance/transfer":40,"margin/flat":40,"margin/loan":40,"margin/transfer":40,"order/limit/batch":40,"order/ioc":13.334,"order/limit":13.334,"order/market":13.334,"order/modify":13.334,"order/stop/limit":13.334,"order/stop/market":13.334,"order/stop/modify":13.334,"sub_account/transfer":40,"sub_account/register":1,"sub_account/unfrozen":40,"sub_account/frozen":40,"sub_account/auth/api":40},put:{"balance/deposit/address/{coin_type}":40,"sub_account/auth/api/{user_auth_id}":40,"v1/account/settings":40},delete:{"balance/coin/withdraw":40,"order/pending/batch":40,"order/pending":13.334,"order/stop/pending":40,"order/stop/pending/{id}":13.334,"sub_account/auth/api/{user_auth_id}":40}},perpetualPublic:{get:{ping:1,time:1,"market/list":1,"market/limit_config":1,"market/ticker":1,"market/ticker/all":1,"market/depth":1,"market/deals":1,"market/funding_history":1,"market/user_deals":1,"market/kline":1}},perpetualPrivate:{get:{"asset/query":40,"order/pending":8,"order/finished":40,"order/stop_finished":40,"order/stop_pending":8,"order/status":8,"order/stop_status":8,"position/pending":40,"position/funding":40},post:{"market/adjust_leverage":1,"market/position_expect":1,"order/put_limit":20,"order/put_market":20,"order/put_stop_limit":20,"order/put_stop_market":20,"order/modify":20,"order/modify_stop":20,"order/cancel":20,"order/cancel_all":40,"order/cancel_batch":40,"order/cancel_stop":20,"order/cancel_stop_all":40,"order/close_limit":20,"order/close_market":20,"position/adjust_margin":20,"position/stop_loss":20,"position/take_profit":20,"position/market_close":20}}},fees:{trading:{maker:.001,taker:.001},funding:{withdraw:{BCH:0,BTC:.001,LTC:.001,ETH:.001,ZEC:1e-4,DASH:1e-4}}},limits:{amount:{min:.001,max:void 0}},options:{createMarketBuyOrderRequiresPrice:!0,defaultType:"spot",defaultSubType:"linear",fetchDepositAddress:{fillResponseFromRequest:!0},accountsById:{spot:"0"}},commonCurrencies:{ACM:"Actinium"},precisionMode:n.sh})}async fetchCurrencies(e={}){const t=await this.publicGetCommonAssetConfig(e),i=this.safeValue(t,"data",[]),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){const t=i[s[e]],a=this.safeString(t,"asset"),n=this.safeString(t,"chain"),o=this.safeCurrencyCode(a),d=this.parseNumber(this.parsePrecision(this.safeString(t,"withdrawal_precision")));void 0===this.safeValue(r,o)&&(r[o]={id:a,numericId:void 0,code:o,info:t,name:void 0,active:!0,deposit:this.safeValue(t,"can_deposit"),withdraw:this.safeValue(t,"can_withdraw"),fee:this.safeNumber(t,"withdraw_tx_fee"),precision:d,limits:{amount:{min:void 0,max:void 0},deposit:{min:this.safeNumber(t,"deposit_least_amount"),max:void 0},withdraw:{min:this.safeNumber(t,"withdraw_least_amount"),max:void 0}}});const c=this.safeValue(r[o],"networks",{}),h={info:t,id:n,network:n,name:void 0,limits:{amount:{min:void 0,max:void 0},deposit:{min:this.safeNumber(t,"deposit_least_amount"),max:void 0},withdraw:{min:this.safeNumber(t,"withdraw_least_amount"),max:void 0}},active:!0,deposit:this.safeValue(t,"can_deposit"),withdraw:this.safeValue(t,"can_withdraw"),fee:this.safeNumber(t,"withdraw_tx_fee"),precision:d};c[n]=h,r[o].networks=c}return r}async fetchMarkets(e={}){let t=[this.fetchSpotMarkets(e),this.fetchContractMarkets(e)];t=await Promise.all(t);const i=t[0],s=t[1];return this.arrayConcat(i,s)}async fetchSpotMarkets(e){const t=await this.publicGetMarketInfo(e),i=this.safeValue(t,"data",{}),s=[],r=Object.keys(i);for(let e=0;e<r.length;e++){const t=i[r[e]],a=this.safeString(t,"name"),n=this.safeString(t,"trading_name"),o=n,d=this.safeString(t,"pricing_name"),c=this.safeCurrencyCode(o),h=this.safeCurrencyCode(d);let u=c+"/"+h;n===a&&(u=a),s.push({id:a,symbol:u,base:c,quote:h,settle:void 0,baseId:o,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(t,"taker_fee_rate"),maker:this.safeNumber(t,"maker_fee_rate"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"trading_decimal"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"pricing_decimal")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_amount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}async fetchContractMarkets(e){const t=await this.perpetualPublicGetMarketList(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.fees,a=this.safeValue(t,"leverages",[]),n=this.safeInteger(t,"type"),o=1===n,d=2===n,c=this.safeString(t,"name"),h=this.safeString(t,"stock"),u=this.safeString(t,"money"),l=this.safeCurrencyCode(h),p=this.safeCurrencyCode(u),f=1===n?"USDT":h,m=this.safeCurrencyCode(f),v=l+"/"+p+":"+m,g=a.length;s.push({id:c,symbol:v,base:l,quote:p,settle:m,baseId:h,quoteId:u,settleId:f,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:this.safeValue(t,"available"),contract:!0,linear:o,inverse:d,taker:r.trading.taker,maker:r.trading.maker,contractSize:this.safeNumber(t,"multiplier"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount_prec"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"money_prec")))},limits:{leverage:{min:this.safeNumber(a,0),max:this.safeNumber(a,g-1)},amount:{min:this.safeNumber(t,"amount_min"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}parseTicker(e,t=undefined){const i=this.safeInteger(e,"date"),s=this.safeSymbol(void 0,t);e=this.safeValue(e,"ticker",{});const r=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString2(e,"vol","volume"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={market:i.id},r=i.swap?"perpetualPublicGetMarketTicker":"publicGetMarketTicker",a=await this[r](this.extend(s,t));return this.parseTicker(a.data,i)}async fetchTickers(e=undefined,t={}){let i;if(await this.loadMarkets(),void 0!==(e=this.marketSymbols(e))){const t=this.safeValue(e,0);i=this.market(t)}const[s,r]=this.handleMarketTypeAndParams("fetchTickers",i,t),a="swap"===s?"perpetualPublicGetMarketTickerAll":"publicGetMarketTickerAll",n=await this[a](r),o=this.safeValue(n,"data"),d=this.safeInteger(o,"date"),c=this.safeValue(o,"ticker",{}),h=Object.keys(c),u={};for(let e=0;e<h.length;e++){const t=h[e],i=this.safeMarket(t,void 0,void 0,s),r=i.symbol,a=this.parseTicker({date:d,ticker:c[t]},i);a.symbol=r,u[r]=a}return this.filterByArray(u,"symbol",e)}async fetchTime(e={}){const t=await this.perpetualPublicGetTime(e);return this.safeNumber(t,"data")}async fetchOrderBook(e,t=20,i={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrderBook() requires a symbol argument");await this.loadMarkets();const s=this.market(e);void 0===t&&(t=20);const a={market:this.marketId(e),merge:"0",limit:t.toString()},n=s.swap?"perpetualPublicGetMarketDepth":"publicGetMarketDepth",o=await this[n](this.extend(a,i)),d=this.safeValue(o,"data",{}),c=this.safeInteger(d,"time");return this.parseOrderBook(d,e,c)}parseTrade(e,t=undefined){let i=this.safeTimestamp2(e,"create_time","time");void 0===i&&(i=this.safeInteger(e,"date_ms"));const s=this.safeString(e,"id"),r=this.safeString(e,"order_id"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"market"),d=this.safeString(this.options,"defaultType");t=this.safeMarket(o,t,void 0,d);const c=this.safeSymbol(o,t,void 0,d),h=this.safeString(e,"deal_money");let u;const l=this.safeString2(e,"fee","deal_fee");if(void 0!==l){const t=this.safeString(e,"fee_asset");u={cost:l,currency:this.safeCurrencyCode(t)}}let p,f=this.safeString(e,"role");return"1"===f?f="maker":"2"===f&&(f="taker"),"swap"===t.type?(p=this.safeInteger(e,"side"),1===p?p="sell":2===p&&(p="buy"),void 0===p&&(p=this.safeString(e,"type"))):p=this.safeString(e,"type"),this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:c,id:s,order:r,type:void 0,side:p,takerOrMaker:f,price:a,amount:n,cost:h,fee:u},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==i&&(a.limit=i);const n=r.swap?"perpetualPublicGetMarketDeals":"publicGetMarketDeals",o=await this[n](this.extend(a,s));return this.parseTrades(o.data,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i={market:this.market(e).id},s=await this.publicGetMarketDetail(this.extend(i,t)),r=this.safeValue(s,"data",{});return this.parseTradingFee(r)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetMarketInfo(e),i=this.safeValue(t,"data",{}),s={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],r=this.market(t),a=this.safeValue(i,r.id,{});s[t]=this.parseTradingFee(a,r)}return s}parseTradingFee(e,t=undefined){const i=this.safeValue(e,"name");return{info:e,symbol:this.safeSymbol(i,t),maker:this.safeNumber(e,"maker_fee_rate"),taker:this.safeNumber(e,"taker_fee_rate"),percentage:!0,tierBased:!0}}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,type:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=s);const o=a.swap?"perpetualPublicGetMarketKline":"publicGetMarketKline",d=await this[o](this.extend(n,r)),c=this.safeValue(d,"data",[]);return this.parseOHLCVs(c,a,t,i,s)}async fetchMarginBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"symbol");let i,s=this.safeString(e,"market");if(void 0!==t)i=this.market(t),s=i.id;else if(void 0===s)throw new r.ArgumentsRequired(this.id+" fetchMarginBalance() fetching a margin account requires a market parameter or a symbol parameter");e=this.omit(e,["symbol","market"]);const n={market:s},o=await this.privateGetMarginAccount(this.extend(n,e)),d={info:o},c=this.safeValue(o,"data",{}),h=this.safeValue(c,"can_transfer",{}),u=this.safeValue(c,"balance",{}),l=this.safeValue(c,"loan",{}),p=this.safeValue(c,"interest",{}),f=this.account(),m=this.safeString(c,"sell_asset_type"),v=this.safeCurrencyCode(m);f.free=this.safeString(h,"sell_type"),f.total=this.safeString(u,"sell_type");const g=this.safeString(l,"sell_type"),y=this.safeString(p,"sell_type");f.debt=a.O.stringAdd(g,y),d[v]=f;const b=this.account(),w=this.safeString(c,"buy_asset_type"),S=this.safeCurrencyCode(w);b.free=this.safeString(h,"buy_type"),b.total=this.safeString(u,"buy_type");const P=this.safeString(l,"buy_type"),k=this.safeString(p,"buy_type");return b.debt=a.O.stringAdd(P,k),d[S]=b,this.safeBalance(d)}async fetchSpotBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalanceInfo(e),i={info:t},s=this.safeValue(t,"data",{}),r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeCurrencyCode(t),n=this.safeValue(s,t,{}),o=this.account();o.free=this.safeString(n,"available"),o.used=this.safeString(n,"frozen"),i[a]=o}return this.safeBalance(i)}async fetchSwapBalance(e={}){await this.loadMarkets();const t=await this.perpetualPrivateGetAssetQuery(e),i={info:t},s=this.safeValue(t,"data",{}),r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeCurrencyCode(t),n=this.safeValue(s,t,{}),o=this.account();o.free=this.safeString(n,"available"),o.used=this.safeString(n,"frozen"),o.total=this.safeString(n,"balance_total"),i[a]=o}return this.safeBalance(i)}async fetchBalance(e={}){let t;return[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),t=this.safeValue(e,"margin",!1)?"margin":t,e=this.omit(e,"margin"),"margin"===t?await this.fetchMarginBalance(e):"swap"===t?await this.fetchSwapBalance(e):await this.fetchSpotBalance(e)}parseOrderStatus(e){return this.safeString({not_deal:"open",part_deal:"open",done:"closed",cancel:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeTimestamp(e,"create_time"),s=this.safeString(e,"price"),r=this.safeString(e,"deal_money"),a=this.safeString(e,"amount"),n=this.safeString(e,"deal_amount"),o=this.safeString(e,"avg_price"),d=this.safeString(e,"left"),c=this.safeString(e,"market"),h=this.safeString(this.options,"defaultType");t=this.safeMarket(c,t,void 0,h);const u=this.safeString(e,"fee_asset");let l=this.safeCurrencyCode(u);void 0===l&&(l=t.quote);const p=this.parseOrderStatus(this.safeString(e,"status")),f=this.safeInteger(e,"side");let m;m=1===f?"sell":2===f?"buy":this.safeString(e,"type");const v=this.safeString(e,"order_type");let g;return void 0===v?(g=this.safeInteger(e,"type"),1===g?g="limit":2===g&&(g="market")):g=v,this.safeOrder({id:this.safeString2(e,"id","order_id"),clientOrderId:void 0,datetime:this.iso8601(i),timestamp:i,lastTradeTimestamp:this.safeTimestamp(e,"update_time"),status:p,symbol:t.symbol,type:g,timeInForce:void 0,postOnly:void 0,reduceOnly:void 0,side:m,price:s,stopPrice:this.safeString(e,"stop_price"),triggerPrice:this.safeString(e,"stop_price"),cost:r,average:o,amount:a,filled:n,remaining:d,trades:void 0,fee:{currency:l,cost:this.safeString(e,"deal_fee")},info:e},t)}async createOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets();const d=this.market(e),c=d.swap,h=this.safeValue2(o,"stopPrice","triggerPrice"),u=this.safeValue(o,"stopLossPrice"),l=this.safeValue(o,"takeProfitPrice"),p=this.safeString(o,"option"),f="market"===t,m=this.isPostOnly(f,"MAKER_ONLY"===p,o),v=this.safeInteger2(o,"position_id","positionId"),g=this.safeString(o,"timeInForce"),y=this.safeValue(o,"reduceOnly");if(void 0!==y&&"swap"!==d.type)throw new r.InvalidOrder(this.id+" createOrder() does not support reduceOnly for "+d.type+" orders, reduceOnly orders are supported for swap markets only");let b;const w={market:d.id};if(c)if(u||l){if(w.stop_type=this.safeInteger(o,"stop_type",1),void 0===v)throw new r.ArgumentsRequired(this.id+" createOrder() requires a position_id parameter for stop loss and take profit orders");w.position_id=v,u?(b="perpetualPrivatePostPositionStopLoss",w.stop_loss_price=this.priceToPrecision(e,u)):l&&(b="perpetualPrivatePostPositionTakeProfit",w.take_profit_price=this.priceToPrecision(e,l))}else{let r;b="perpetualPrivatePostOrderPut"+this.capitalize(t),i="buy"===i?2:1,void 0!==h&&(w.stop_price=this.priceToPrecision(e,h),w.stop_type=this.safeInteger(o,"stop_type",1),w.amount=this.amountToPrecision(e,s),w.side=i,"limit"===t?(b="perpetualPrivatePostOrderPutStopLimit",w.price=this.priceToPrecision(e,n)):"market"===t&&(b="perpetualPrivatePostOrderPutStopMarket"),w.amount=this.amountToPrecision(e,s)),"market"===t&&void 0===h||(m?w.option=1:void 0!==g&&(r="IOC"===g?2:"FOK"===g?3:1,w.effect_type=r)),"limit"===t&&void 0===h?(y?(b="perpetualPrivatePostOrderCloseLimit",w.position_id=v):w.side=i,w.price=this.priceToPrecision(e,n),w.amount=this.amountToPrecision(e,s)):"market"===t&&void 0===h&&(y?(b="perpetualPrivatePostOrderCloseMarket",w.position_id=v):(w.side=i,w.amount=this.amountToPrecision(e,s)))}else{if(b="privatePostOrder"+this.capitalize(t),w.type=i,"market"===t&&"buy"===i)if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===n)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");{const t=this.amountToPrecision(e,s),i=this.priceToPrecision(e,n),r=a.O.stringMul(t,i),o=this.parseNumber(r);w.amount=this.costToPrecision(e,o)}}else w.amount=this.costToPrecision(e,s);else w.amount=this.amountToPrecision(e,s);if("limit"!==t&&"ioc"!==t||(w.price=this.priceToPrecision(e,n)),void 0!==h&&(w.stop_price=this.priceToPrecision(e,h),"limit"===t?b="privatePostOrderStopLimit":"market"===t&&(b="privatePostOrderStopMarket")),("market"!==t||void 0!==h)&&(void 0!==g||m)){if((m||"IOC"!==g)&&"limit"===t&&void 0!==h)throw new r.InvalidOrder(this.id+" createOrder() only supports the IOC option for stop-limit orders");m?w.option="MAKER_ONLY":void 0!==g&&(w.option=g)}}const S=this.safeInteger(o,"account_id");if("margin"===this.safeString(this.options,"defaultType")){if(void 0===S)throw new r.BadRequest(this.id+" createOrder() requires an account_id parameter for margin orders");w.account_id=S}o=this.omit(o,["reduceOnly","positionId","timeInForce","postOnly","stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]);const P=await this[b](this.extend(w,o)),k=this.safeValue(P,"data");return this.parseOrder(k,d)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(t),a=this.safeValue(i,"stop"),n=s.swap,o={market:s.id};o[n?"order_id":"id"]=e;let d=n?"perpetualPrivatePostOrderCancel":"privateDeleteOrderPending";a&&(d=n?"perpetualPrivatePostOrderCancelStop":"privateDeleteOrderStopPendingId");const c=this.safeInteger(i,"account_id");if("margin"===this.safeString(this.options,"defaultType")){if(void 0===c)throw new r.BadRequest(this.id+" cancelOrder() requires an account_id parameter for margin orders");o.account_id=c}const h=this.omit(i,["stop","account_id"]),u=await this[d](this.extend(o,h)),l=this.safeValue(u,"data");return this.parseOrder(l,s)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancellAllOrders() requires a symbol argument");await this.loadMarkets();const i=this.market(e),s=i.id,a=this.safeInteger(t,"account_id",0),n={market:s},o=i.swap,d=this.safeValue(t,"stop");let c;return o?(c="perpetualPrivatePostOrderCancelAll",d&&(c="perpetualPrivatePostOrderCancelStopAll")):(c="privateDeleteOrderPending",d&&(c="privateDeleteOrderStopPending"),n.account_id=a),t=this.omit(t,["stop","account_id"]),await this[c](this.extend(n,t))}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a=s.swap,n=this.safeValue(i,"stop"),o={market:s.id};let d;o[a?"order_id":"id"]=e,d=a?n?"perpetualPrivateGetOrderStopStatus":"perpetualPrivateGetOrderStatus":"privateGetOrderStatus",i=this.omit(i,"stop");const c=await this[d](this.extend(o,i)),h=this.safeValue(c,"data");return this.parseOrder(h,s)}async fetchOrdersByStatus(e,t=undefined,i=undefined,s=undefined,a={}){await this.loadMarkets();const n={limit:s=void 0===s?100:s},o=this.safeValue(a,"stop"),d=this.safeInteger(a,"side");let c;a=this.omit(a,"stop"),void 0!==t&&(c=this.market(t),n.market=c.id);const[h,u]=this.handleMarketTypeAndParams("fetchOrdersByStatus",c,a);let l;if("swap"===h){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrdersByStatus() requires a symbol argument for swap markets");l="perpetualPrivateGetOrder"+this.capitalize(e),o&&(l="perpetualPrivateGetOrderStopPending"),n.side=void 0!==d?d:0,n.offset=0}else l="privateGetOrder"+this.capitalize(e),o&&(l="privateGetOrderStop"+this.capitalize(e)),n.page=1;const p=this.safeInteger(a,"account_id");if("margin"===this.safeString(this.options,"defaultType")){if(void 0===p)throw new r.BadRequest(this.id+" fetchOpenOrders() and fetchClosedOrders() require an account_id parameter for margin orders");n.account_id=p}a=this.omit(u,"account_id");const f=await this[l](this.extend(n,a)),m="swap"===h?"records":"data",v=this.safeValue(f,"data"),g=this.safeValue(v,m,[]);return this.parseOrders(g,c,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("pending",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("finished",e,t,i,s)}async createDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={coin_type:i.id};if("network"in t){const e=this.safeString(t,"network");t=this.omit(t,"network"),s.smart_contract_name=e}const r=await this.privatePutBalanceDepositAddressCoinType(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseDepositAddress(a,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={coin_type:i.id},a=this.safeValue(i,"networks",{}),n=this.safeString(t,"network");t=this.omit(t,"network");const o=Object.keys(a).length;if(void 0!==a&&o>1){if(void 0===n)throw new r.ArgumentsRequired(this.id+" fetchDepositAddress() "+e+" requires a network parameter");if(!(n in a))throw new r.ExchangeError(this.id+" fetchDepositAddress() "+n+" network not supported for "+e)}void 0!==n&&(s.smart_contract_name=n);const d=await this.privateGetBalanceDepositAddressCoinType(this.extend(s,t)),c=this.safeValue(d,"data",{}),h=this.parseDepositAddress(c,i),u=this.safeValue(this.options,"fetchDepositAddress",{});return this.safeValue(u,"fillResponseFromRequest",!0)&&(h.network=this.safeNetworkCode(n,i)),h}safeNetwork(e,t=undefined){const i=this.safeValue(t,"networks",{}),s=Object.keys(i),r=s.length;return void 0===e&&1===r?i[s[0]]:{id:e,network:void 0===e?void 0:e.toUpperCase()}}safeNetworkCode(e,t=undefined){return this.safeNetwork(e,t).network}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"coin_address"),s=i.split(":");let r,a;return s.length>1?(r=s[0],a=s[1]):r=i,{info:e,currency:this.safeCurrencyCode(void 0,t),address:r,tag:a,network:void 0}}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let a;await this.loadMarkets(),void 0===i&&(i=100);const n={limit:i,offset:0};let o;if(void 0!==e&&(a=this.market(e),n.market=a.id),[o,s]=this.handleMarketTypeAndParams("fetchMyTrades",a,s),"spot"!==o&&void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument for non-spot markets");const d="swap"===o;let c;if(d){c="perpetualPublicGetMarketUserDeals";const e=this.safeInteger(s,"side");if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a side parameter for swap markets");void 0!==t&&(n.start_time=t),n.side=e,s=this.omit(s,"side")}else c="privateGetOrderUserDeals",n.page=1;const h=this.safeInteger(s,"account_id");if("margin"===this.safeString(this.options,"defaultType")){if(void 0===h)throw new r.BadRequest(this.id+" fetchMyTrades() requires an account_id parameter for margin trades");n.account_id=h,s=this.omit(s,"account_id")}const u=await this[c](this.extend(n,s)),l=d?"records":"data",p=this.safeValue(u,"data"),f=this.safeValue(p,l,[]);return this.parseTrades(f,a,t,i)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i={};let s;if(void 0!==(e=this.marketSymbols(e))){let t;if(Array.isArray(e)){if(e.length>1)throw new r.BadRequest(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");t=e[0]}else t=e;s=this.market(t),i.market=s.id}const a=await this.perpetualPrivateGetPositionPending(this.extend(i,t)),n=this.safeValue(a,"data",[]),o=[];for(let e=0;e<n.length;e++)o.push(this.parsePosition(n[e],s));return this.filterByArray(o,"symbol",e,!1)}async fetchPosition(e,t={}){await this.loadMarkets();const i=this.market(e),s={market:i.id},r=await this.perpetualPrivateGetPositionPending(this.extend(s,t)),a=this.safeValue(r,"data",[]);return this.parsePosition(a[0],i)}parsePosition(e,t=undefined){const i=this.safeString(e,"market"),s=this.safeString(this.options,"defaultType"),r=(t=this.safeMarket(i,t,void 0,s)).symbol,a=this.safeInteger(e,"position_id"),n=1===this.safeInteger(e,"type")?"isolated":"cross",o=this.safeString(e,"liq_price"),d=this.safeString(e,"open_price"),c=this.safeString(e,"profit_unreal"),h=this.safeString(e,"amount"),u=1===this.safeInteger(e,"side")?"short":"long",l=this.safeTimestamp(e,"update_time"),p=this.safeString(e,"mainten_margin_amount"),f=this.safeString(e,"mainten_margin"),m=this.safeString(e,"margin_amount"),v=this.safeNumber(e,"leverage");return{info:e,id:a,symbol:r,notional:void 0,marginMode:n,liquidationPrice:o,entryPrice:d,unrealizedPnl:c,percentage:void 0,contracts:void 0,contractSize:h,markPrice:void 0,side:u,hedged:void 0,timestamp:l,datetime:this.iso8601(l),maintenanceMargin:p,maintenanceMarginPercentage:f,collateral:m,initialMargin:void 0,initialMarginPercentage:void 0,leverage:v,marginRatio:void 0}}async setMarginMode(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("isolated"!==(e=e.toLowerCase())&&"cross"!==e)throw new r.BadRequest(this.id+" setMarginMode() marginMode argument should be isolated or cross");await this.loadMarkets();const s=this.market(t);if("swap"!==s.type)throw new r.BadSymbol(this.id+" setMarginMode() supports swap contracts only");let a;"isolated"===e?a=1:"cross"===e&&(a=2);const n=this.safeInteger(i,"leverage"),o=this.safeInteger(s.limits.leverage,"max",100),d=this.safeInteger(i,"position_type",a);if(void 0===n)throw new r.ArgumentsRequired(this.id+" setMarginMode() requires a leverage parameter");if(void 0===d)throw new r.ArgumentsRequired(this.id+" setMarginMode() requires a position_type parameter that will transfer margin to the specified trading pair");if(n<3||n>o)throw new r.BadRequest(this.id+" setMarginMode() leverage should be between 3 and "+o.toString()+" for "+t);const c={market:s.id,leverage:n.toString(),position_type:d};return await this.perpetualPrivatePostMarketAdjustLeverage(this.extend(c,i))}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();const s=this.safeString2(this.options,"defaultMarginMode","marginMode");let a;"isolated"===s?a=1:"cross"===s&&(a=2);const n=this.safeInteger(i,"position_type",a);if(void 0===n)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a position_type parameter that will transfer margin to the specified trading pair");const o=this.market(t),d=this.safeInteger(o.limits.leverage,"max",100);if("swap"!==o.type)throw new r.BadSymbol(this.id+" setLeverage() supports swap contracts only");if(e<3||e>d)throw new r.BadRequest(this.id+" setLeverage() leverage should be between 3 and "+d.toString()+" for "+t);const c={market:o.id,leverage:e.toString(),position_type:n};return await this.perpetualPrivatePostMarketAdjustLeverage(this.extend(c,i))}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.perpetualPublicGetMarketLimitConfig(t),s=this.safeValue(i,"data",{});return this.parseLeverageTiers(s,e,void 0)}parseLeverageTiers(e,t=undefined,i=undefined){const s={},r=Object.keys(e);for(let i=0;i<r.length;i++){const a=r[i],n=this.safeMarket(a,void 0,void 0,"spot"),o=this.safeString(n,"symbol");let d=0;void 0!==t&&(d=t.length),void 0===o||0!==d&&!this.inArray(t,o)||(s[o]=this.parseMarketLeverageTiers(e[a],n))}return s}parseMarketLeverageTiers(e,t=undefined){const i=[];let s=0;for(let r=0;r<e.length;r++){const a=e[r],n=this.safeNumber(a,0);i.push({tier:r+1,currency:t.linear?t.base:t.quote,minNotional:s,maxNotional:n,maintenanceMarginRate:this.safeNumber(a,2),maxLeverage:this.safeInteger(a,1),info:a}),s=n}return i}async modifyMarginHelper(e,t,i,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id,amount:this.amountToPrecision(e,t),type:i},n=await this.perpetualPrivatePostPositionAdjustMargin(this.extend(a,s)),o=this.safeString(n,"message"),d=1===i?"add":"reduce";return this.extend(this.parseMarginModification(n,r),{amount:this.parseNumber(t),type:d,status:o})}parseMarginModification(e,t=undefined){return{info:e,type:void 0,amount:void 0,code:t.quote,symbol:this.safeSymbol(void 0,t),status:void 0}}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,1,i)}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,2,i)}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingHistory() requires a symbol argument");i=void 0===i?100:i,await this.loadMarkets();const a={market:this.market(e).id,limit:i};void 0!==t&&(a.start_time=t);const n=await this.perpetualPrivateGetPositionFunding(this.extend(a,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"records",[]),c=[];for(let t=0;t<d.length;t++){const i=d[t],s=this.safeTimestamp(i,"time"),r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r);c.push({info:i,symbol:e,code:a,timestamp:s,datetime:this.iso8601(s),id:this.safeNumber(i,"position_id"),amount:this.safeNumber(i,"funding")})}return c}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");const s={market:i.id},a=await this.perpetualPublicGetMarketTicker(this.extend(s,t)),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"ticker",{}),d=this.safeInteger(n,"date");return o.timestamp=d,this.parseFundingRate(o,i)}parseFundingRate(e,t=undefined){const i=this.safeInteger(e,"timestamp");e=this.omit(e,"timestamp");const s=(i+60*this.safeInteger(e,"funding_time")*1e3)/36e5,r=36e5*Math.round(s);return{info:e,symbol:this.safeSymbol(void 0,t),markPrice:this.safeNumber(e,"sign_price"),indexPrice:this.safeNumber(e,"index_price"),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:i,datetime:this.iso8601(i),fundingRate:this.safeNumber(e,"funding_rate_next"),fundingTimestamp:r,fundingDatetime:this.iso8601(r),nextFundingRate:this.safeNumber(e,"funding_rate_predict"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:this.safeNumber(e,"funding_rate_last"),previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRates(e=undefined,t={}){let i;if(await this.loadMarkets(),void 0!==(e=this.marketSymbols(e))){const t=this.safeValue(e,0);if(i=this.market(t),!i.swap)throw new r.BadSymbol(this.id+" fetchFundingRates() supports swap contracts only")}const s=await this.perpetualPublicGetMarketTickerAll(t),a=this.safeValue(s,"data",{}),n=this.safeValue(a,"ticker",{}),o=this.safeInteger(a,"date"),d=[],c=Object.keys(n);for(let e=0;e<c.length;e++){const t=c[e];if(-1===t.indexOf("_")){const e=this.safeMarket(t,void 0,void 0,"swap"),i=n[t];i.timestamp=o,d.push(this.parseFundingRate(i,e))}}return this.filterByArray(d,"symbol",e)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e);s&&(i=i+":"+s);const n={coin_type:a.id,coin_address:i,actual_amount:parseFloat(t),transfer_method:"onchain"},o=await this.privatePostBalanceCoinWithdraw(this.extend(n,r)),d=this.safeValue(o,"data",{});return this.parseTransaction(d,a)}parseTransactionStatus(e){return this.safeString({audit:"pending",pass:"pending",processing:"pending",confirming:"pending",not_pass:"failed",cancel:"canceled",finish:"ok",fail:"failed"},e,e)}async fetchFundingRateHistory(e=undefined,t=undefined,i=100,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id,limit:i,offset:0};void 0!==t&&(n.start_time=t);const o=await this.perpetualPublicGetMarketFundingHistory(this.extend(n,s)),d=this.safeValue(o,"data"),c=this.safeValue(d,"records",[]),h=[];for(let e=0;e<c.length;e++){const t=c[e],i=this.safeString(t,"market"),s=this.safeSymbol(i),r=this.safeTimestamp(t,"time");h.push({info:t,symbol:s,fundingRate:this.safeString(t,"funding_rate"),timestamp:r,datetime:this.iso8601(r)})}const u=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(u,a.symbol,t,i)}parseTransaction(e,t=undefined){const i=this.safeString2(e,"coin_withdraw_id","coin_deposit_id"),s=this.safeString(e,"coin_address");let r=this.safeString(e,"remark");void 0!==r&&r.length<1&&(r=void 0);let a=this.safeValue(e,"tx_id");void 0!==a&&a.length<1&&(a=void 0);const n=this.safeString(e,"coin_type"),o=this.safeCurrencyCode(n,t),d=this.safeTimestamp(e,"create_time"),c="coin_withdraw_id"in e?"withdrawal":"deposit",h=this.parseTransactionStatus(this.safeString(e,"status")),u=this.safeString(e,"smart_contract_name"),l=this.safeNumber(e,"actual_amount");let p,f,m=this.safeString(e,"tx_fee");"deposit"===c?(m="0",p=s):f=s;const v={cost:this.parseNumber(m),currency:o};return{info:e,id:i,txid:a,timestamp:d,datetime:this.iso8601(d),network:this.networkIdToCode(u),address:s,addressTo:void 0,addressFrom:void 0,tag:r,tagTo:p,tagFrom:f,type:c,amount:this.parseNumber(l),currency:o,status:h,updated:void 0,fee:v}}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n=this.currencyToPrecision(e,t),o={amount:n,coin_type:a.id};let d="privatePostContractBalanceTransfer";if("spot"===i&&"swap"===s)o.transfer_side="in";else if("swap"===i&&"spot"===s)o.transfer_side="out";else{const e=this.safeValue(this.options,"accountsById",{}),t=this.safeString(e,i,i),r=this.safeString(e,s,s);o.from_account=parseInt(t),o.to_account=parseInt(r),d="privatePostMarginTransfer"}const c=await this[d](this.extend(o,r));return this.extend(this.parseTransfer(c,a),{amount:this.parseNumber(n),fromAccount:i,toAccount:s})}parseTransferStatus(e){return this.safeString({0:"ok",SUCCESS:"ok"},e,e)}parseTransfer(e,t=undefined){const i=this.safeTimestamp(e,"created_at"),s=this.safeString(e,"transfer_type");let r,a;"transfer_out"===s?(r="swap",a="spot"):"transfer_in"===s?(r="spot",a="swap"):"IN"===s?(r="spot",a="margin"):"OUT"===s&&(r="margin",a="spot");const n=this.safeString(e,"asset"),o=this.safeCurrencyCode(n,t);return{id:this.safeInteger(e,"id"),timestamp:i,datetime:this.iso8601(i),currency:o,amount:this.safeNumber(e,"amount"),fromAccount:r,toAccount:a,status:this.parseTransferStatus(this.safeString2(e,"code","status"))}}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={page:1,limit:i},n=this.safeInteger(s,"page");void 0!==n&&(a.page=n),void 0!==e&&(r=this.safeCurrencyCode(e),a.asset=r.id),void 0!==t&&(a.start_time=t),s=this.omit(s,"page");const o="margin"===this.safeString(this.options,"defaultType")?"privateGetMarginTransferHistory":"privateGetContractTransferHistory",d=await this[o](this.extend(a,s)),c=this.safeValue(d,"data",{}),h=this.safeValue(c,"records",[]);return this.parseTransfers(h,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const a=this.currency(e),n={coin_type:a.id};void 0!==i&&(n.Limit=i);const o=await this.privateGetBalanceCoinWithdraw(this.extend(n,s));let d=this.safeValue(o,"data");return Array.isArray(d)||(d=this.safeValue(d,"data",[])),this.parseTransactions(d,a,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const a=this.currency(e),n={coin_type:a.id};void 0!==i&&(n.Limit=i);const o=await this.privateGetBalanceCoinDeposit(this.extend(n,s));let d=this.safeValue(o,"data");return Array.isArray(d)||(d=this.safeValue(d,"data",[])),this.parseTransactions(d,a,t,i)}parseBorrowRate(e,t=undefined){const i=this.milliseconds(),s=this.safeValue(e,t,{});return{currency:this.safeCurrencyCode(t),rate:this.safeNumber(s,"day_rate"),period:864e5,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchBorrowRate(e,t={}){let i;if(await this.loadMarkets(),e in this.markets)i=this.market(e);else{const t=this.safeString(this.options,"defaultSettle","USDT");i=this.market(e+"/"+t)}const s={market:i.id},r=await this.privateGetMarginConfig(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseBorrowRate(a,i.base)}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.privateGetMarginConfig(e),i=this.milliseconds(),s=this.safeValue(t,"data",{}),r=[];for(let e=0;e<s.length;e++){const t=s[e],a=this.safeString(t,"market"),n=this.safeMarket(a,void 0,void 0,"spot"),o=this.safeValue(t,n.base);r.push({currency:n.base,rate:this.safeNumber(o,"day_rate"),period:864e5,timestamp:i,datetime:this.iso8601(i),info:t})}return r}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t),a.market=n.id),void 0!==s&&(a.limit=s);const o=await this.privateGetMarginLoanHistory(this.extend(a,r)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"data",[]),h=this.parseBorrowInterests(c,n);return this.filterByCurrencySinceLimit(h,e,i,s)}parseBorrowInterest(e,t=undefined){const i=this.safeString(e,"market_type");t=this.safeMarket(i,t,void 0,"spot");const s=this.safeString(t,"symbol"),r=this.safeTimestamp(e,"expire_time"),n=this.safeString(e,"unflat_amount"),o=this.safeString(e,"loan_amount");let d=a.O.stringSub(n,o);return"0"===n&&(d=void 0),{account:void 0,symbol:s,marginMode:"isolated",marginType:void 0,currency:this.safeCurrencyCode(this.safeString(e,"coin_type")),interest:this.parseNumber(d),interestRate:this.safeNumber(e,"day_rate"),amountBorrowed:this.parseNumber(o),timestamp:r,datetime:this.iso8601(r),info:e}}async borrowMargin(e,t,i=undefined,s={}){if(void 0===i)throw new r.ArgumentsRequired(this.id+" borrowMargin() requires a symbol argument");await this.loadMarkets();const a=this.market(i),n=this.currency(e),o={market:a.id,coin_type:n.id,amount:this.currencyToPrecision(e,t)},d=await this.privatePostMarginLoan(this.extend(o,s)),c=this.safeValue(d,"data",{}),h=this.parseMarginLoan(c,n);return this.extend(h,{amount:t,symbol:i})}async repayMargin(e,t,i=undefined,s={}){if(void 0===i)throw new r.ArgumentsRequired(this.id+" repayMargin() requires a symbol argument");await this.loadMarkets();const a=this.market(i),n=this.currency(e),o={market:a.id,coin_type:n.id,amount:this.currencyToPrecision(e,t)},d=this.safeInteger(s,"loan_id");void 0!==d&&(o.loan_id=d);const c=await this.privatePostMarginFlat(this.extend(o,s)),h=this.parseMarginLoan(c,n);return this.extend(h,{amount:t,symbol:i})}parseMarginLoan(e,t=undefined){return{id:this.safeInteger(e,"loan_id"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i={};void 0!==e&&1===e.length&&(i.coin_type=this.safeValue(e,0));const s=await this.publicGetCommonAssetConfig(this.extend(i,t));return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFees(e,t=undefined,i=undefined){const s={};t=this.marketCodes(t);const r=this.safeValue(e,"data"),a=Object.keys(r);for(let e=0;e<a.length;e++){const i=a[e],n=i.split("-"),o=r[a[e]],d=this.safeString(o,"asset"),c=this.safeCurrency(d),h=this.safeString(c,"code");if(void 0===t||this.inArray(h,t)){void 0===this.safeValue(s,h)&&(s[h]=this.depositWithdrawFee({})),s[h].info[i]=o;const e=this.safeString(n,1),t=this.safeValue(o,"withdraw_tx_fee"),r={fee:t,percentage:void 0===t&&void 0},a={fee:void 0,percentage:void 0};if(void 0!==e){const t=this.networkIdToCode(e);s[h].networks[t]={withdraw:r,deposit:a}}else s[h].withdraw=r,s[h].deposit=a}}const n=Object.keys(s);for(let e=0;e<n.length;e++){const t=n[e],i=this.currency(t);s[t]=this.assignDefaultDepositWithdrawFees(s[t],i)}return s}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){e=this.implodeParams(e,s);let n=this.urls.api[t]+"/"+this.version+"/"+e,c=this.omit(s,this.extractParams(e));const h=this.nonce().toString();if("perpetualPrivate"===t||"https://api.coinex.com/perpetual/v1/market/user_deals"===n){this.checkRequiredCredentials(),c=this.extend({access_id:this.apiKey,timestamp:h},c),c=this.keysort(c);const e=this.rawencode(c);r={Authorization:this.hash(this.encode(e+"&secret_key="+this.secret),o.J).toLowerCase(),AccessId:this.apiKey},"GET"===i||"PUT"===i?n+="?"+e:(r["Content-Type"]="application/x-www-form-urlencoded",a=e)}else if("public"===t||"perpetualPublic"===t)Object.keys(c).length&&(n+="?"+this.urlencode(c));else{this.checkRequiredCredentials(),c=this.extend({access_id:this.apiKey,tonce:h},c),c=this.keysort(c);const e=this.rawencode(c);r={Authorization:this.hash(this.encode(e+"&secret_key="+this.secret),d.F).toUpperCase(),"Content-Type":"application/json"},"GET"===i||"DELETE"===i||"PUT"===i?n+="?"+e:a=this.json(c)}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"code"),u=this.safeValue(o,"data"),l=this.safeString(o,"message");if("0"!==h||"Success"!==l&&"Succeeded"!==l&&"Ok"!==l&&!u){const e={23:r.PermissionDenied,24:r.AuthenticationError,25:r.AuthenticationError,34:r.AuthenticationError,35:r.ExchangeNotAvailable,36:r.RequestTimeout,213:r.RateLimitExceeded,107:r.InsufficientFunds,600:r.OrderNotFound,601:r.InvalidOrder,602:r.InvalidOrder,606:r.InvalidOrder};throw new(this.safeValue(e,h,r.ExchangeError))(o.message)}}}},5585:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(4507),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinfalcon",name:"CoinFalcon",countries:["GB"],rateLimit:1e3,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradinFee:!1,fetchTradingFees:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/41822275-ed982188-77f5-11e8-92bb-496bcd14ca52.jpg",api:{rest:"https://coinfalcon.com"},www:"https://coinfalcon.com",doc:"https://docs.coinfalcon.com",fees:"https://coinfalcon.com/fees",referral:"https://coinfalcon.com/?ref=CFJSVGTUPASB"},api:{public:{get:["markets","markets/{market}","markets/{market}/orders","markets/{market}/trades"]},private:{get:["user/accounts","user/orders","user/orders/{id}","user/orders/{id}/trades","user/trades","user/fees","account/withdrawals/{id}","account/withdrawals","account/deposit/{id}","account/deposits","account/deposit_address"],post:["user/orders","account/withdraw"],delete:["user/orders/{id}","account/withdrawals/{id}"]}},fees:{trading:{tierBased:!0,maker:0,taker:.002}},precisionMode:n.sh})}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],[r,a]=t.name.split("-"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a);s.push({id:t.name,symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"size_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minPrice"),max:void 0},price:{min:this.safeNumber(t,"minVolume"),max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}parseTicker(e,t=undefined){const i=this.safeString(e,"name");t=this.safeMarket(i,t,"-");const s=this.milliseconds(),r=this.safeString(e,"last_price");return this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),high:void 0,low:void 0,bid:this.safeString(e,"highest_bid"),bidVolume:void 0,ask:this.safeString(e,"lowest_ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeString(e,"change_in_24h"),percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchTicker(e,t={}){return await this.loadMarkets(),(await this.fetchTickers([e],t))[e]}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetMarkets(t),s=this.safeValue(i,"data",[]),r={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);r[t.symbol]=t}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={market:s.id,level:"3"},a=await this.publicGetMarketsMarketOrders(this.extend(r,i)),n=this.safeValue(a,"data",{});return this.parseOrderBook(n,s.symbol,void 0,"bids","asks","price","size")}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString(e,"created_at")),s=this.safeString(e,"price"),r=this.safeString(e,"size"),a=t.symbol,n=this.safeString(e,"id"),o=this.safeString(e,"side"),d=this.safeString(e,"order_id");let c;const h=this.safeString(e,"fee");if(void 0!==h){const t=this.safeString(e,"fee_currency_code");c={cost:h,currency:this.safeCurrencyCode(t)}}return this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:a,id:n,order:d,type:void 0,side:o,takerOrMaker:void 0,price:s,amount:r,cost:void 0,fee:c},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id};void 0!==t&&(n.start_time=this.iso8601(t)),void 0!==i&&(n.limit=i);const o=await this.privateGetUserTrades(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,a,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==t&&(a.since=this.iso8601(t));const n=await this.publicGetMarketsMarketTrades(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetUserFees(e),i=this.safeValue(t,"data",{}),s=this.safeString(i,"maker_fee"),r=this.safeString(i,"taker_fee"),n=this.parseNumber(a.O.stringDiv(s,"100")),o=this.parseNumber(a.O.stringDiv(r,"100")),d={};for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e];d[i]={info:t,symbol:i,maker:n,taker:o,percentage:!0,tierBased:!0}}return d}parseBalance(e){const t={info:e},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"currency_code"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available_balance"),n.used=this.safeString(s,"hold_balance"),n.total=this.safeString(s,"balance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUserAccounts(e);return this.parseBalance(t)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"tag");return this.checkAddress(i),{currency:this.safeCurrencyCode(void 0,t),address:i,tag:s,network:void 0,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.safeCurrency(e),s={currency:this.safeStringLower(i,"id")},r=await this.privateGetAccountDepositAddress(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseDepositAddress(a,i)}parseOrderStatus(e){return this.safeString({fulfilled:"closed",canceled:"canceled",pending:"open",open:"open",partially_filled:"open"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"-"),r=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"price"),n=this.safeString(e,"size"),o=this.safeString(e,"size_filled"),d=this.parseOrderStatus(this.safeString(e,"status"));let c=this.safeString(e,"operation_type");if(void 0!==c){const e=c.split("_");c=e[0]}const h=this.safeString(e,"order_type"),u=this.safeValue(e,"post_only");return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,status:d,symbol:s,type:c,timeInForce:void 0,postOnly:u,side:h,price:a,stopPrice:void 0,triggerPrice:void 0,cost:void 0,amount:n,filled:o,remaining:void 0,trades:void 0,fee:void 0,info:e,lastTradeTimestamp:void 0,average:void 0},t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={market:n.id,size:this.amountToPrecision(e,s),order_type:i};"limit"===t&&(r=this.priceToPrecision(e,r),o.price=r.toString()),o.operation_type=t+"_order";const d=await this.privatePostUserOrders(this.extend(o,a)),c=this.safeValue(d,"data",{});return this.parseOrder(c,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateDeleteUserOrdersId(this.extend(s,i)),a=this.market(t),n=this.safeValue(r,"data",{});return this.parseOrder(n,a)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetUserOrdersId(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.market=a.id),void 0!==t&&(r.since_time=this.iso8601(t));const n=await this.privateGetUserOrders(this.extend(r,s)),o=this.safeValue(n,"data",[]),d=this.filterByArray(o,"status",["pending","open","partially_filled"],!1);return this.parseOrders(d,a,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=this.safeStringLower(a,"id")),void 0!==t&&(r.since_time=this.iso8601(t));const n=await this.privateGetAccountDeposits(this.extend(r,s)),o=this.safeValue(n,"data",[]);return o.reverse(),this.parseTransactions(o,a,void 0,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=this.safeStringLower(a,"id")),void 0!==t&&(r.since_time=this.iso8601(t));const n=await this.privateGetAccountWithdrawals(this.extend(r,s)),o=this.safeValue(n,"data",[]);return o.reverse(),this.parseTransactions(o,a,void 0,i)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={currency:this.safeStringLower(a,"id"),address:i,amount:t};void 0!==s&&(n.tag=s);const o=await this.privatePostAccountWithdraw(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseTransaction(d,a)}parseTransactionStatus(e){return this.safeString({completed:"ok",denied:"failed",approval_pending:"pending"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"address"),r=this.safeString(e,"tag"),a=this.safeString(e,"txid"),n=this.safeString(e,"currency_code"),o=this.safeCurrencyCode(n,t);let d=this.safeString(e,"type");"withdraw"===d&&(d="withdrawal");const c=this.parseTransactionStatus(this.safeString(e,"status")),h=this.safeString(e,"amount"),u=this.parseNumber(h),l=this.safeString(e,"fee");let p=0;return void 0!==l&&(p=this.parseNumber(l)),{info:e,id:i,txid:a,timestamp:void 0,datetime:void 0,network:void 0,address:s,addressTo:void 0,addressFrom:void 0,tag:r,tagTo:void 0,tagFrom:void 0,type:d,amount:u,currency:o,status:c,updated:void 0,fee:{currency:o,cost:p}}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/api/"+this.version+"/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials(),"GET"===i?Object.keys(d).length&&(n+="?"+this.urlencode(d)):a=this.json(d);const e=this.seconds().toString();let t=[e,i,n].join("|");a&&(t+="|"+a);const s=this.hmac(this.encode(t),this.encode(this.secret),o.J);r={"CF-API-KEY":this.apiKey,"CF-API-TIMESTAMP":e,"CF-API-SIGNATURE":s,"Content-Type":"application/json"}}return{url:this.urls.api.rest+n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(!(e<400))throw new(this.safeValue({401:r.AuthenticationError,429:r.RateLimitExceeded},e,r.ExchangeError))(n)}}},9816:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(7044),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinmate",name:"CoinMate",countries:["GB","CZ","EU"],rateLimit:1e3,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87460806-1c9f3f00-c616-11ea-8c46-a77018a8f3f4.jpg",api:{rest:"https://coinmate.io/api"},www:"https://coinmate.io",fees:"https://coinmate.io/fees",doc:["https://coinmate.docs.apiary.io","https://coinmate.io/developers"],referral:"https://coinmate.io?referral=YTFkM1RsOWFObVpmY1ZjMGREQmpTRnBsWjJJNVp3PT0"},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},api:{public:{get:["orderBook","ticker","transactions","tradingPairs"]},private:{post:["balances","bitcoinCashWithdrawal","bitcoinCashDepositAddresses","bitcoinDepositAddresses","bitcoinWithdrawal","bitcoinWithdrawalFees","buyInstant","buyLimit","cancelOrder","cancelOrderWithInfo","createVoucher","dashDepositAddresses","dashWithdrawal","ethereumWithdrawal","ethereumDepositAddresses","litecoinWithdrawal","litecoinDepositAddresses","openOrders","order","orderHistory","orderById","pusherAuth","redeemVoucher","replaceByBuyLimit","replaceByBuyInstant","replaceBySellLimit","replaceBySellInstant","rippleDepositAddresses","rippleWithdrawal","sellInstant","sellLimit","transactionHistory","traderFees","tradeHistory","transfer","transferHistory","unconfirmedBitcoinDeposits","unconfirmedBitcoinCashDeposits","unconfirmedDashDeposits","unconfirmedEthereumDeposits","unconfirmedLitecoinDeposits","unconfirmedRippleDeposits"]}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0012"),taker:this.parseNumber("0.0025"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0035")],[this.parseNumber("10000"),this.parseNumber("0.0023")],[this.parseNumber("100000"),this.parseNumber("0.0021")],[this.parseNumber("250000"),this.parseNumber("0.0020")],[this.parseNumber("500000"),this.parseNumber("0.0015")],[this.parseNumber("1000000"),this.parseNumber("0.0013")],[this.parseNumber("3000000"),this.parseNumber("0.0010")],[this.parseNumber("15000000"),this.parseNumber("0.0005")]],maker:[[this.parseNumber("0"),this.parseNumber("0.003")],[this.parseNumber("10000"),this.parseNumber("0.0011")],[this.parseNumber("100000"),this.parseNumber("0.0010")],[this.parseNumber("250000"),this.parseNumber("0.0008")],[this.parseNumber("500000"),this.parseNumber("0.0005")],[this.parseNumber("1000000"),this.parseNumber("0.0003")],[this.parseNumber("3000000"),this.parseNumber("0.0002")],[this.parseNumber("15000000"),this.parseNumber("0")]]}}},options:{withdraw:{fillResponsefromRequest:!0,methods:{BTC:"privatePostBitcoinWithdrawal",LTC:"privatePostLitecoinWithdrawal",BCH:"privatePostBitcoinCashWithdrawal",ETH:"privatePostEthereumWithdrawal",XRP:"privatePostRippleWithdrawal",DASH:"privatePostDashWithdrawal",DAI:"privatePostDaiWithdrawal"}}},exceptions:{exact:{"No order with given ID":r.OrderNotFound},broad:{"Not enough account balance available":r.InsufficientFunds,"Incorrect order ID":r.InvalidOrder,"Minimum Order Size ":r.InvalidOrder,"max allowed precision":r.InvalidOrder,"TOO MANY REQUESTS":r.RateLimitExceeded,"Access denied.":r.AuthenticationError}},precisionMode:n.sh})}async fetchMarkets(e={}){const t=await this.publicGetTradingPairs(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"name"),a=this.safeString(t,"firstCurrency"),n=this.safeString(t,"secondCurrency"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=o+"/"+d;s.push({id:r,symbol:c,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"lotDecimals"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceDecimals")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}parseBalance(e){const t=this.safeValue(e,"data",{}),i={info:e},s=Object.keys(t);for(let e=0;e<s.length;e++){const r=s[e],a=this.safeCurrencyCode(r),n=this.safeValue(t,r),o=this.account();o.free=this.safeString(n,"available"),o.used=this.safeString(n,"reserved"),o.total=this.safeString(n,"balance"),i[a]=o}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalances(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={currencyPair:s.id,groupByPriceLimit:"False"},a=(await this.publicGetOrderBook(this.extend(r,i))).data,n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,s.symbol,n,"bids","asks","price","amount")}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={currencyPair:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeValue(r,"data"),n=this.safeTimestamp(a,"timestamp"),o=this.safeNumber(a,"last");return{symbol:i.symbol,timestamp:n,datetime:this.iso8601(n),high:this.safeNumber(a,"high"),low:this.safeNumber(a,"low"),bid:this.safeNumber(a,"bid"),bidVolume:void 0,ask:this.safeNumber(a,"ask"),vwap:void 0,askVolume:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeNumber(a,"amount"),quoteVolume:void 0,info:a}}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={limit:1e3};if(void 0!==i&&(r.limit=i),void 0!==t&&(r.timestampFrom=t),void 0!==e){const t=this.currency(e);r.currency=t.id}const a=(await this.privatePostTransferHistory(this.extend(r,s))).data;return this.parseTransactions(a,void 0,t,i)}parseTransactionStatus(e){return this.safeString({COMPLETED:"ok",WAITING:"pending",SENT:"pending",CREATED:"pending",OK:"ok",NEW:"pending",CANCELED:"canceled"},e,e)}parseTransaction(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeNumber(e,"amount"),r=this.safeNumber(e,"fee"),a=this.safeString(e,"txid"),n=this.safeString(e,"destination"),o=this.safeString(e,"destinationTag"),d=this.safeString(e,"amountCurrency"),c=this.safeCurrencyCode(d,t),h=this.safeStringLower(e,"transferType"),u=this.parseTransactionStatus(this.safeString(e,"transferStatus")),l=this.safeString2(e,"transactionId","id"),p=this.safeString(e,"walletType");return{id:l,timestamp:i,datetime:this.iso8601(i),currency:c,amount:s,type:h,txid:a,network:p,address:n,addressTo:void 0,addressFrom:void 0,tag:o,tagTo:void 0,tagFrom:void 0,status:u,fee:{cost:r,currency:c},info:e}}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e),o=this.safeValue(this.options,"withdraw",{}),d=this.safeValue(o,"methods",{}),c=this.safeString(d,e);if(void 0===c){const e=Object.keys(d);throw new r.ExchangeError(this.id+" withdraw() only allows withdrawing the following currencies: "+e.join(", "))}const h={amount:this.currencyToPrecision(e,t),address:i};void 0!==s&&(h.destinationTag=s);const u=await this[c](this.extend(h,a)),l=this.safeValue(u,"data"),p=this.parseTransaction(l,n);return this.safeValue(o,"fillResponseFromRequest",!0)&&(p.amount=t,p.currency=e,p.address=i,p.tag=s,p.type="withdrawal",p.status="pending"),p}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),void 0===i&&(i=1e3);const r={limit:i};if(void 0!==e){const t=this.market(e);r.currencyPair=t.id}void 0!==t&&(r.timestampFrom=t);const a=await this.privatePostTradeHistory(this.extend(r,s)),n=this.safeValue(a,"data",[]);return this.parseTrades(n,void 0,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"currencyPair");t=this.safeMarket(i,t,"_");const s=this.safeString(e,"price"),r=this.safeString(e,"amount"),a=this.safeStringLower2(e,"type","tradeType"),n=this.safeStringLower(e,"orderType"),o=this.safeString(e,"orderId"),d=this.safeString(e,"transactionId"),c=this.safeInteger2(e,"timestamp","createdTimestamp");let h;const u=this.safeString(e,"fee");void 0!==u&&(h={cost:u,currency:t.quote});let l=this.safeString(e,"feeType");return l="MAKER"===l?"maker":"taker",this.safeTrade({id:d,info:e,timestamp:c,datetime:this.iso8601(c),symbol:t.symbol,type:n,side:a,order:o,takerOrMaker:l,price:s,amount:r,cost:void 0,fee:h},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={currencyPair:r.id,minutesIntoHistory:10},n=await this.publicGetTransactions(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={currencyPair:i.id},r=await this.privatePostTraderFees(this.extend(s,t)),n=this.safeValue(r,"data",{}),o=this.safeString(n,"maker"),d=this.safeString(n,"taker"),c=this.parseNumber(a.O.stringDiv(o,"100")),h=this.parseNumber(a.O.stringDiv(d,"100"));return{info:n,symbol:i.symbol,maker:c,taker:h,percentage:!0,tierBased:!0}}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){const r=await this.privatePostOpenOrders(this.extend({},s));return this.parseOrders(r.data,void 0,t,i,{status:"open"})}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={currencyPair:a.id};void 0!==i&&(n.limit=i);const o=await this.privatePostOrderHistory(this.extend(n,s));return this.parseOrders(o.data,a,t,i)}parseOrderStatus(e){return this.safeString({FILLED:"closed",CANCELLED:"canceled",PARTIALLY_FILLED:"open",OPEN:"open"},e,e)}parseOrderType(e){return this.safeString({LIMIT:"limit",MARKET:"market"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeInteger(e,"timestamp"),r=this.safeStringLower(e,"type"),a=this.safeString(e,"price"),n=this.safeString(e,"originalAmount"),o=this.safeString2(e,"remainingAmount","amount"),d=this.parseOrderStatus(this.safeString(e,"status")),c=this.parseOrderType(this.safeString(e,"orderTradeType")),h=this.safeString(e,"avgPrice"),u=this.safeString(e,"currencyPair"),l=this.safeSymbol(u,t,"_"),p=this.safeString(e,"clientOrderId"),f=this.safeNumber(e,"stopPrice");return this.safeOrder({id:i,clientOrderId:p,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:l,type:c,timeInForce:void 0,postOnly:void 0,side:r,price:a,stopPrice:f,triggerPrice:f,amount:n,cost:void 0,average:h,filled:void 0,remaining:o,status:d,trades:void 0,info:e,fee:void 0},t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();let n="privatePost"+this.capitalize(i);const o=this.market(e),d={currencyPair:o.id};"market"===t?("buy"===i?d.total=this.amountToPrecision(e,s):d.amount=this.amountToPrecision(e,s),n+="Instant"):(d.amount=this.amountToPrecision(e,s),d.price=this.priceToPrecision(e,r),n+=this.capitalize(t));const c=await this[n](this.extend(d,a)),h=this.safeString(c,"data");return this.safeOrder({info:c,id:h},o)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderId:e};let r;t&&(r=this.market(t));const a=await this.privatePostOrderById(this.extend(s,i)),n=this.safeValue(a,"data");return this.parseOrder(n,r)}async cancelOrder(e,t=undefined,i={}){const s={orderId:e};return{info:await this.privatePostCancelOrderWithInfo(this.extend(s,i))}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret),o.J);a=this.urlencode(this.extend({clientId:this.uid,nonce:e,publicKey:this.apiKey,signature:i.toUpperCase()},s)),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"error"in o&&o.error){const e=this.safeString(o,"errorMessage"),t=this.id+" "+e;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r.ExchangeError(this.id+" "+this.json(o))}if(e>400){if(n){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,n,e),this.throwBroadlyMatchedException(this.exceptions.broad,n,e),new r.ExchangeError(e)}throw new r.ExchangeError(this.id+" "+n)}}}},7811:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(3767),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinone",name:"CoinOne",countries:["KR"],rateLimit:667,version:"v2",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!1,fetchDepositAddresses:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/38003300-adc12fba-323f-11e8-8525-725f53c4a659.jpg",api:{rest:"https://api.coinone.co.kr"},www:"https://coinone.co.kr",doc:"https://doc.coinone.co.kr"},requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:["orderbook/","trades/","ticker/"]},private:{post:["account/deposit_address/","account/btc_deposit_address/","account/balance/","account/daily_balance/","account/user_info/","account/virtual_account/","order/cancel_all/","order/cancel/","order/limit_buy/","order/limit_sell/","order/complete_orders/","order/limit_orders/","order/order_info/","transaction/auth_number/","transaction/history/","transaction/krw/history/","transaction/btc/","transaction/coin/"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:.002,maker:.002}},precisionMode:n.sh,exceptions:{405:r.OnMaintenance,104:r.OrderNotFound,108:r.BadSymbol,107:r.BadRequest},commonCurrencies:{SOC:"Soda Coin"}})}async fetchMarkets(e={}){const t=await this.publicGetTicker({currency:"all"}),i=[],s=this.safeCurrencyCode("krw"),r=Object.keys(t);for(let e=0;e<r.length;e++){const a=r[e],n=this.safeValue(t,a,{});if(void 0===this.safeValue(n,"currency"))continue;const o=this.safeCurrencyCode(a);i.push({id:a,symbol:o+"/"+s,base:o,quote:s,settle:void 0,baseId:a,quoteId:"krw",settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-4"),price:this.parseNumber("1e-4"),cost:this.parseNumber("1e-8")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:n})}return i}parseBalance(e){const t={info:e},i=this.omit(e,["errorCode","result","normalWallets"]),s=Object.keys(i);for(let e=0;e<s.length;e++){const r=s[e],a=i[r],n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(a,"avail"),o.total=this.safeString(a,"balance"),t[n]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostAccountBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={currency:s.id,format:"json"},a=await this.publicGetOrderbook(this.extend(r,i)),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,s.symbol,n,"bid","ask","price","qty")}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTicker(this.extend({currency:"all",format:"json"},t)),s={},r=Object.keys(i),a=this.safeTimestamp(i,"timestamp");for(let e=0;e<r.length;e++){const t=r[e],n=this.safeMarket(t),o=n.symbol,d=i[t];s[o]=this.parseTicker(d,n),s[o].timestamp=a}return this.filterByArray(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={currency:i.id,format:"json"},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTicker(e,t=undefined){const i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"first"),r=this.safeString(e,"last"),a=this.safeString(e,"yesterday_last"),n=this.safeSymbol(void 0,t);return this.safeTicker({symbol:n,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:s,close:r,last:r,previousClose:a,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0,info:e},t)}parseTrade(e,t=undefined){const i=this.safeTimestamp(e,"timestamp");t=this.safeMarket(void 0,t);const s=this.safeString(e,"is_ask");let r=this.safeString(e,"type");void 0!==s?"1"===s?r="sell":"0"===s&&(r="buy"):"ask"===r?r="sell":"bid"===r&&(r="buy");const n=this.safeString(e,"price"),o=this.safeString(e,"qty"),d=this.safeString(e,"orderId");let c,h=this.safeString(e,"fee");if(void 0!==h){h=a.O.stringAbs(h);let i=this.safeString(e,"feeRate");i=a.O.stringAbs(i),c={cost:h,currency:"sell"===r?t.quote:t.base,rate:i}}return this.safeTrade({id:this.safeString(e,"id"),info:e,timestamp:i,datetime:this.iso8601(i),order:d,symbol:t.symbol,type:void 0,side:r,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:c},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={currency:r.id,format:"json"},n=await this.publicGetTrades(this.extend(a,s)),o=this.safeValue(n,"completeOrders",[]);return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){if("limit"!==t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e),d={price:a,currency:o.id,qty:s},c="privatePostOrder"+this.capitalize(t)+this.capitalize(i),h=await this[c](this.extend(d,n));return this.parseOrder(h,o)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={order_id:e,currency:s.id},n=await this.privatePostOrderOrderInfo(this.extend(a,i)),o=this.safeValue(n,"info",{});return o.status=this.safeString(o,"status"),this.parseOrder(o,s)}parseOrderStatus(e){return this.safeString({live:"open",partially_filled:"open",filled:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"orderId"),s=this.safeString(e,"price"),r=this.safeTimestamp(e,"timestamp");let n=this.safeString(e,"type");"ask"===n?n="sell":"bid"===n&&(n="buy");const o=this.safeString(e,"remainQty"),d=this.safeString(e,"qty");let c=this.safeString(e,"status");"live"===c&&void 0!==o&&void 0!==d&&a.O.stringLt(o,d)&&(c="canceled"),c=this.parseOrderStatus(c);const h=t.symbol,u=t.base,l=t.quote;let p;const f=this.safeString(e,"fee");if(void 0!==f){const t="sell"===n?l:u;p={cost:f,rate:this.safeString(e,"feeRate"),currency:t}}return this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:h,type:"limit",timeInForce:void 0,postOnly:void 0,side:n,price:s,stopPrice:void 0,triggerPrice:void 0,cost:void 0,average:void 0,amount:d,filled:void 0,remaining:o,status:c,fee:p,trades:void 0},t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ExchangeError(this.id+" fetchOpenOrders() allows fetching closed orders with a specific symbol");await this.loadMarkets();const a=this.market(e),n={currency:a.id},o=await this.privatePostOrderLimitOrders(this.extend(n,s)),d=this.safeValue(o,"limitOrders",[]);return this.parseOrders(d,a,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={currency:a.id},o=await this.privatePostOrderCompleteOrders(this.extend(n,s)),d=this.safeValue(o,"completeOrders",[]);return this.parseTrades(d,a,t,i)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument. To cancel the order, pass a symbol argument and {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument of cancelOrder.");const s=this.safeNumber(i,"price"),a=this.safeNumber(i,"qty"),n=this.safeInteger(i,"is_ask");if(void 0===s||void 0===a||void 0===n)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires {'price': 12345, 'qty': 1.2345, 'is_ask': 0} in the params argument.");await this.loadMarkets();const o={order_id:e,price:s,qty:a,is_ask:n,currency:this.marketId(t)};return await this.privatePostOrderCancel(this.extend(o,i))}async fetchDepositAddresses(e=undefined,t={}){await this.loadMarkets();const i=await this.privatePostAccountDepositAddress(t),s=this.safeValue(i,"walletAddress",{}),r=Object.keys(s),a={};for(let e=0;e<r.length;e++){const t=r[e],i=s[t];if(!i||"-1"===i)continue;const n=t.split("_"),o=this.safeValue(n,0),d=this.safeValue(n,1),c=this.safeCurrencyCode(o);let h=this.safeValue(a,c);void 0===h&&(h={currency:c,address:void 0,tag:void 0,info:i});const u=this.safeString(h,"address",i);this.checkAddress(u),h.address=u,h.info=u,"tag"!==d&&"memo"!==d||(h.tag=i,h.info=[u,i]),a[c]=h}return a}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.implodeParams(e,s),d=this.omit(s,this.extractParams(e));let c=this.urls.api.rest+"/";if("public"===t)c+=n,Object.keys(d).length&&(c+="?"+this.urlencode(d));else{this.checkRequiredCredentials(),c+=this.version+"/"+n;const e=this.nonce().toString(),t=this.json(this.extend({access_token:this.apiKey,nonce:e},s)),i=this.stringToBase64(t);a=i;const d=this.secret.toUpperCase();r={"Content-Type":"application/json","X-COINONE-PAYLOAD":i,"X-COINONE-SIGNATURE":this.hmac(i,this.encode(d),o.o)}}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o){if(!("result"in o))throw new r.ExchangeError(this.id+" "+n);if("success"!==o.result){const e=this.safeString(o,"errorCode"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,t),new r.ExchangeError(t)}}}}},5782:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(435),r=i(6689),a=i(9292),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinsph",name:"Coins.ph",countries:["PH"],version:"v1",rateLimit:50,certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,borrowMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createPostOnlyOrder:!1,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,deposit:!0,editOrder:!1,fetchAccounts:!1,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!0,fetchCurrencies:!1,fetchDeposit:void 0,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:!1,fetchLedger:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawal:void 0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/225719995-48ab2026-4ddb-496c-9da7-0d7566617c9b.jpg",api:{public:"https://api.pro.coins.ph",private:"https://api.pro.coins.ph"},www:"https://coins.ph/",doc:["https://coins-docs.github.io/rest-api"],fees:"https://support.coins.ph/hc/en-us/sections/4407198694681-Limits-Fees"},api:{public:{get:{"openapi/v1/ping":1,"openapi/v1/time":1,"openapi/quote/v1/ticker/24hr":{cost:1,noSymbolAndNoSymbols:40,byNumberOfSymbols:[[101,40],[21,20],[0,1]]},"openapi/quote/v1/ticker/price":{cost:1,noSymbol:2},"openapi/quote/v1/ticker/bookTicker":{cost:1,noSymbol:2},"openapi/v1/exchangeInfo":10,"openapi/quote/v1/depth":{cost:1,byLimit:[[101,5],[0,1]]},"openapi/quote/v1/klines":1,"openapi/quote/v1/trades":1,"openapi/v1/pairs":1,"openapi/quote/v1/avgPrice":1}},private:{get:{"openapi/v1/account":10,"openapi/v1/openOrders":{cost:3,noSymbol:40},"openapi/v1/asset/tradeFee":1,"openapi/v1/order":2,"openapi/v1/historyOrders":{cost:10,noSymbol:40},"openapi/v1/myTrades":10,"openapi/v1/capital/deposit/history":1,"openapi/v1/capital/withdraw/history":1},post:{"openapi/v1/order/test":1,"openapi/v1/order":1,"openapi/v1/capital/withdraw/apply":1,"openapi/v1/capital/deposit/apply":1},delete:{"openapi/v1/order":1,"openapi/v1/openOrders":1}}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.003"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.003")],[this.parseNumber("500000"),this.parseNumber("0.0027")],[this.parseNumber("1000000"),this.parseNumber("0.0024")],[this.parseNumber("2500000"),this.parseNumber("0.002")],[this.parseNumber("5000000"),this.parseNumber("0.0018")],[this.parseNumber("10000000"),this.parseNumber("0.0015")],[this.parseNumber("100000000"),this.parseNumber("0.0012")],[this.parseNumber("500000000"),this.parseNumber("0.0009")],[this.parseNumber("1000000000"),this.parseNumber("0.0007")],[this.parseNumber("2500000000"),this.parseNumber("0.0005")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0025")],[this.parseNumber("500000"),this.parseNumber("0.0022")],[this.parseNumber("1000000"),this.parseNumber("0.0018")],[this.parseNumber("2500000"),this.parseNumber("0.0015")],[this.parseNumber("5000000"),this.parseNumber("0.0012")],[this.parseNumber("10000000"),this.parseNumber("0.001")],[this.parseNumber("100000000"),this.parseNumber("0.0008")],[this.parseNumber("500000000"),this.parseNumber("0.0007")],[this.parseNumber("1000000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000000"),this.parseNumber("0.0005")]]}}},precisionMode:a.sh,options:{createMarketBuyOrderRequiresPrice:!0,withdraw:{warning:!1},deposit:{warning:!1},createOrder:{timeInForce:"GTC",newOrderRespType:{market:"FULL",limit:"FULL"}},fetchTicker:{method:"publicGetOpenapiQuoteV1Ticker24hr"},fetchTickers:{method:"publicGetOpenapiQuoteV1Ticker24hr"}},exceptions:{exact:{"-1000":r.BadRequest,"-1001":r.BadRequest,"-1002":r.AuthenticationError,"-1003":r.RateLimitExceeded,"-1004":r.InvalidOrder,"-1006":r.BadResponse,"-1007":r.BadResponse,"-1014":r.InvalidOrder,"-1015":r.RateLimitExceeded,"-1016":r.NotSupported,"-1020":r.NotSupported,"-1021":r.BadRequest,"-1022":r.BadRequest,"-1023":r.AuthenticationError,"-1024":r.BadRequest,"-1025":r.BadRequest,"-1030":r.ExchangeError,"-1100":r.BadRequest,"-1101":r.BadRequest,"-1102":r.BadRequest,"-1103":r.BadRequest,"-1104":r.BadRequest,"-1105":r.BadRequest,"-1106":r.BadRequest,"-1111":r.BadRequest,"-1112":r.BadResponse,"-1114":r.BadRequest,"-1115":r.InvalidOrder,"-1116":r.InvalidOrder,"-1117":r.InvalidOrder,"-1118":r.InvalidOrder,"-1119":r.InvalidOrder,"-1120":r.BadRequest,"-1121":r.BadSymbol,"-1122":r.InvalidOrder,"-1125":r.BadRequest,"-1127":r.BadRequest,"-1128":r.BadRequest,"-1130":r.BadRequest,"-1131":r.InsufficientFunds,"-1132":r.InvalidOrder,"-1133":r.InvalidOrder,"-1134":r.InvalidOrder,"-1135":r.InvalidOrder,"-1136":r.InvalidOrder,"-1137":r.InvalidOrder,"-1138":r.InvalidOrder,"-1139":r.InvalidOrder,"-1140":r.InvalidOrder,"-1141":r.DuplicateOrderId,"-1142":r.InvalidOrder,"-1143":r.OrderNotFound,"-1144":r.InvalidOrder,"-1145":r.InvalidOrder,"-1146":r.InvalidOrder,"-1147":r.InvalidOrder,"-1148":r.InvalidOrder,"-1149":r.InvalidOrder,"-1150":r.InvalidOrder,"-1151":r.BadSymbol,"-1152":r.NotSupported,"-1153":r.AuthenticationError,"-1154":r.BadRequest,"-1155":r.BadRequest,"-1156":r.InvalidOrder,"-1157":r.BadSymbol,"-1158":r.InvalidOrder,"-1159":r.InvalidOrder,"-1160":r.BadRequest,"-1161":r.BadRequest,"-2010":r.InvalidOrder,"-2013":r.OrderNotFound,"-2011":r.BadRequest,"-2014":r.BadRequest,"-2015":r.AuthenticationError,"-2016":r.BadResponse,"-3126":r.InvalidOrder,"-3127":r.InvalidOrder,"-4001":r.BadRequest,"-100011":r.BadSymbol,"-100012":r.BadSymbol,"-30008":r.InsufficientFunds,"-30036":r.InsufficientFunds,403:r.ExchangeNotAvailable},broad:{"Unknown order sent":r.OrderNotFound,"Duplicate order sent":r.DuplicateOrderId,"Market is closed":r.BadSymbol,"Account has insufficient balance for requested action":r.InsufficientFunds,"Market orders are not supported for this symbol":r.BadSymbol,"Iceberg orders are not supported for this symbol":r.BadSymbol,"Stop loss orders are not supported for this symbol":r.BadSymbol,"Stop loss limit orders are not supported for this symbol":r.BadSymbol,"Take profit orders are not supported for this symbol":r.BadSymbol,"Take profit limit orders are not supported for this symbol":r.BadSymbol,"Price* QTY is zero or less":r.BadRequest,"IcebergQty exceeds QTY":r.BadRequest,"This action disabled is on this account":r.PermissionDenied,"Unsupported order combination":r.InvalidOrder,"Order would trigger immediately":r.InvalidOrder,"Cancel order is invalid. Check origClOrdId and orderId":r.InvalidOrder,"Order would immediately match and take":r.OrderImmediatelyFillable,PRICE_FILTER:r.InvalidOrder,LOT_SIZE:r.InvalidOrder,MIN_NOTIONAL:r.InvalidOrder,MAX_NUM_ORDERS:r.InvalidOrder,MAX_ALGO_ORDERS:r.InvalidOrder,BROKER_MAX_NUM_ORDERS:r.InvalidOrder,BROKER_MAX_ALGO_ORDERS:r.InvalidOrder,ICEBERG_PARTS:r.BadRequest}}})}calculateRateLimiterCost(e,t,i,s,r={},a={}){if("noSymbol"in r&&!("symbol"in s))return r.noSymbol;if("noSymbolAndNoSymbols"in r&&!("symbol"in s)&&!("symbols"in s))return r.noSymbolAndNoSymbols;if("byNumberOfSymbols"in r&&"symbols"in s){const e=s.symbols.length,t=r.byNumberOfSymbols;for(let i=0;i<t.length;i++){const s=t[i];if(e>=s[0])return s[1]}}else if("byLimit"in r&&"limit"in s){const e=s.limit,t=r.byLimit;for(let i=0;i<t.length;i++){const s=t[i];if(e>=s[0])return s[1]}}return this.safeValue(r,"cost",1)}async fetchStatus(e={}){return{status:"ok",updated:void 0,eta:void 0,url:void 0,info:await this.publicGetOpenapiV1Ping(e)}}async fetchTime(e={}){const t=await this.publicGetOpenapiV1Time(e);return this.safeInteger(t,"serverTime")}async fetchMarkets(e={}){const t=await this.publicGetOpenapiV1ExchangeInfo(e),i=this.safeValue(t,"symbols"),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseAsset"),n=this.safeString(t,"quoteAsset"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c="TRADING"===this.safeString(t,"status"),h=this.indexBy(this.safeValue(t,"filters"),"filterType"),u=this.safeValue(h,"LOT_SIZE",{}),l=this.safeValue(h,"PRICE_FILTER",{}),p=this.safeValue(h,"NOTIONAL",{});s.push({id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:c,contract:!1,linear:void 0,inverse:void 0,taker:void 0,maker:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.safeString(u,"stepSize")),price:this.parseNumber(this.safeString(l,"tickSize"))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(this.safeString(u,"minQty")),max:this.parseNumber(this.safeString(u,"maxQty"))},price:{min:this.parseNumber(this.safeString(l,"minPrice")),max:this.parseNumber(this.safeString(l,"maxPrice"))},cost:{min:this.parseNumber(this.safeString(p,"minNotional")),max:void 0}},info:t})}return this.setMarkets(s),s}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==e){const t=[];for(let i=0;i<e.length;i++){const s=this.market(e[i]).id;t.push(s)}i.symbols=t}const s=this.safeValue(this.options,"fetchTickers",{}),r=this.safeString(s,"method","publicGetOpenapiQuoteV1Ticker24hr"),a=await this[r](this.extend(i,t));return this.parseTickers(a,e,t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=this.safeValue(this.options,"fetchTicker",{}),a=this.safeString(r,"method","publicGetOpenapiQuoteV1Ticker24hr"),n=await this[a](this.extend(s,t));return this.parseTicker(n,i)}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const s=this.safeInteger(e,"closeTime"),r=this.safeString(e,"bidPrice"),a=this.safeString(e,"askPrice"),o=this.safeString(e,"bidQty"),d=this.safeString(e,"askQty"),c=this.safeString(e,"volume"),h=this.safeString(e,"quoteVolume"),u=this.safeString(e,"openPrice"),l=this.safeString(e,"highPrice"),p=this.safeString(e,"lowPrice"),f=this.safeString(e,"prevClosePrice"),m=this.safeString(e,"weightedAvgPrice"),v=this.safeString(e,"priceChange");let g=this.safeString(e,"priceChangePercent");return g=n.O.stringMul(g,"100"),this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),open:u,high:l,low:p,close:this.safeString2(e,"lastPrice","price"),bid:r,bidVolume:o,ask:a,askVolume:d,vwap:m,previousClose:f,change:v,percentage:g,average:void 0,baseVolume:c,quoteVolume:h,info:e},t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);const r=await this.publicGetOpenapiQuoteV1Depth(this.extend(s,i)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"lastUpdateId"),a}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(this.timeframes,t),o={symbol:a.id,interval:n};if(void 0!==i)if(o.startTime=i,o.limit=1e3,void 0!==s){const e=1e3*this.parseTimeframe(t);o.endTime=this.sum(i,e*(s-1))}else o.endTime=this.milliseconds();else void 0!==s&&(o.limit=s);const d=await this.publicGetOpenapiQuoteV1Klines(this.extend(o,r));return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t?a.limit=1e3:void 0!==i&&(a.limit=i);const n=await this.publicGetOpenapiQuoteV1Trades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==t?(n.startTime=t,n.limit=1e3):void 0!==i&&(n.limit=i);const o=await this.privateGetOpenapiV1MyTrades(this.extend(n,s));return this.parseTrades(o,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,a={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrderTrades() requires a symbol argument");const n={orderId:e};return await this.fetchMyTrades(t,i,s,this.extend(n,a))}parseTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString2(e,"id","tradeId"),a=this.safeString(e,"orderId"),n=this.safeInteger(e,"time"),o=this.safeString(e,"price"),d=this.safeString(e,"qty");let c;const h=this.safeString(e,"commission");if(void 0!==h){const t=this.safeString(e,"commissionAsset");c={cost:h,currency:this.safeCurrencyCode(t)}}const u=this.safeString2(e,"isBuyer","isBuyerMaker",void 0);let l;void 0!==u&&(l="true"===u?"buy":"sell");const p=this.safeString2(e,"isMaker",void 0);let f,m;return void 0!==p&&(f="true"===p?"maker":"taker"),void 0!==a&&(m=this.safeString(e,"quoteQty")),this.safeTrade({id:r,order:a,timestamp:n,datetime:this.iso8601(n),symbol:s,type:void 0,side:l,takerOrMaker:f,price:o,amount:d,cost:m,fee:c,info:e},t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetOpenapiV1Account(e);return this.parseBalance(t)}parseBalance(e){const t=this.safeValue(e,"balances",[]),i=this.milliseconds(),s={info:e,timestamp:i,datetime:this.iso8601(i)};for(let e=0;e<t.length;e++){const i=t[e],r=this.safeString(i,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"free"),n.used=this.safeString(i,"locked"),s[a]=n}return this.safeBalance(s)}async createOrder(e,t,i,s,a=undefined,o={}){await this.loadMarkets();const d=this.market(e);let c=this.safeString(o,"type",t);c=this.encodeOrderType(c),o=this.omit(o,"type");const h=this.encodeOrderSide(i),u={symbol:d.id,type:c,side:h},l=this.safeValue(this.options,"createOrder",{});let p=this.safeValue(l,"newOrderRespType",{});if("LIMIT"===c||"STOP_LOSS_LIMIT"===c||"TAKE_PROFIT_LIMIT"===c||"LIMIT_MAKER"===c){if(void 0===a)throw new r.ArgumentsRequired(this.id+" createOrder() requires a price argument for a "+t+" order");p=this.safeString(p,"limit","FULL"),u.price=this.priceToPrecision(e,a),u.quantity=this.amountToPrecision(e,s),"LIMIT_MAKER"!==c&&(u.timeInForce=this.safeString(l,"timeInForce","GTC"))}else if("MARKET"===c||"STOP_LOSS"===c||"TAKE_PROFIT"===c)if(p=this.safeString(p,"market","FULL"),"SELL"===h)u.quantity=this.amountToPrecision(e,s);else if("BUY"===h){const t=this.safeNumber2(o,"cost","quoteOrderQty"),i=this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0);if(void 0!==t)s=t;else if(i){if(void 0===a)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");{const e=this.numberToString(s),t=this.numberToString(a),i=n.O.stringMul(e,t);s=this.parseNumber(i)}}u.quoteOrderQty=this.costToPrecision(e,s),o=this.omit(o,"cost","quoteOrderQty")}if("STOP_LOSS"===c||"STOP_LOSS_LIMIT"===c||"TAKE_PROFIT"===c||"TAKE_PROFIT_LIMIT"===c){const t=this.safeString2(o,"triggerPrice","stopPrice");if(void 0===t)throw new r.InvalidOrder(this.id+" createOrder () requires a triggerPrice or stopPrice param for stop_loss, take_profit, stop_loss_limit, and take_profit_limit orders");u.stopPrice=this.priceToPrecision(e,t)}u.newOrderRespType=p,o=this.omit(o,"price","stopPrice","triggerPrice","quantity","quoteOrderQty");const f=await this.privatePostOpenapiV1Order(this.extend(u,o));return this.parseOrder(f,d)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={},r=this.safeValue2(i,"origClientOrderId","clientOrderId");void 0!==r?s.origClientOrderId=r:s.orderId=e,i=this.omit(i,["clientOrderId","origClientOrderId"]);const a=await this.privateGetOpenapiV1Order(this.extend(s,i));return this.parseOrder(a)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id);const n=await this.privateGetOpenapiV1OpenOrders(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==t?(n.startTime=t,n.limit=1e3):void 0!==i&&(n.limit=i);const o=await this.privateGetOpenapiV1HistoryOrders(this.extend(n,s));return this.parseOrders(o,a,t,i)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={},r=this.safeValue2(i,"origClientOrderId","clientOrderId");void 0!==r?s.origClientOrderId=r:s.orderId=e,i=this.omit(i,["clientOrderId","origClientOrderId"]);const a=await this.privateDeleteOpenapiV1Order(this.extend(s,i));return this.parseOrder(a)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");let i;await this.loadMarkets();const s={};void 0!==e&&(i=this.market(e),s.symbol=i.id);const a=await this.privateDeleteOpenapiV1OpenOrders(this.extend(s,t));return this.parseOrders(a,i)}parseOrder(e,t=undefined){const i=this.safeString(e,"orderId"),s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const r=this.safeInteger2(e,"time","transactTime"),a=this.safeValue(e,"fills",void 0);let o=this.safeString(e,"stopPrice");return n.O.stringEq(o,"0")&&(o=void 0),this.safeOrder({id:i,clientOrderId:this.safeString(e,"clientOrderId"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:this.parseOrderStatus(this.safeString(e,"status")),symbol:t.symbol,type:this.parseOrderType(this.safeString(e,"type")),timeInForce:this.parseOrderTimeInForce(this.safeString(e,"timeInForce")),side:this.parseOrderSide(this.safeString(e,"side")),price:this.safeString(e,"price"),stopPrice:o,triggerPrice:o,average:void 0,amount:this.safeString(e,"origQty"),cost:this.safeString(e,"cummulativeQuoteQty"),filled:this.safeString(e,"executedQty"),remaining:void 0,fee:void 0,fees:void 0,trades:a,info:e},t)}parseOrderSide(e){return this.safeString({BUY:"buy",SELL:"sell"},e,e)}encodeOrderSide(e){return this.safeString({buy:"BUY",sell:"SELL"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",LIMIT_MAKER:"limit",STOP_LOSS:"market",STOP_LOSS_LIMIT:"limit",TAKE_PROFIT:"market",TAKE_PROFIT_LIMIT:"limit"},e,e)}encodeOrderType(e){return this.safeString({market:"MARKET",limit:"LIMIT",limit_maker:"LIMIT_MAKER",stop_loss:"STOP_LOSS",stop_loss_limit:"STOP_LOSS_LIMIT",take_profit:"TAKE_PROFIT",take_profit_limit:"TAKE_PROFIT_LIMIT"},e,e)}parseOrderStatus(e){return this.safeString({NEW:"open",FILLED:"closed",CANCELED:"canceled",PARTIALLY_FILLED:"open",PARTIALLY_CANCELED:"canceled",REJECTED:"rejected"},e,e)}parseOrderTimeInForce(e){return this.safeString({GTC:"GTC",FOK:"FOK",IOC:"IOC"},e,e)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.privateGetOpenapiV1AssetTradeFee(this.extend(s,t)),a=this.safeValue(r,0,{});return this.parseTradingFee(a,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetOpenapiV1AssetTradeFee(e),i={};for(let e=0;e<t.length;e++){const s=this.parseTradingFee(t[e]);i[s.symbol]=s}return i}parseTradingFee(e,t=undefined){const i=this.safeString(e,"symbol");return{info:e,symbol:(t=this.safeMarket(i,t)).symbol,maker:this.safeNumber(e,"makerCommission"),taker:this.safeNumber(e,"takerCommission")}}async withdraw(e,t,i,s=undefined,a={}){const n=this.safeValue(this.options,"withdraw");if(this.safeValue(n,"warning",!0))throw new r.InvalidAddress(this.id+" withdraw() makes a withdrawals only to coins_ph account, add .options['withdraw']['warning'] = false to make a withdrawal to your coins_ph account");await this.loadMarkets();const o=this.currency(e),d={coin:o.id,amount:this.numberToString(t)};void 0!==s&&(d.withdrawOrderId=s);const c=await this.privatePostOpenapiV1CapitalWithdrawApply(this.extend(d,a));return this.parseTransaction(c,o)}async deposit(e,t,i,s=undefined,a={}){const n=this.safeValue(this.options,"deposit");if(this.safeValue(n,"warning",!0))throw new r.InvalidAddress(this.id+" deposit() makes a deposits only from your coins_ph account, add .options['deposit']['warning'] = false to make a deposit to your exchange account");await this.loadMarkets();const o=this.currency(e),d={coin:o.id,amount:this.numberToString(t)};void 0!==s&&(d.depositOrderId=s);const c=await this.privatePostOpenapiV1CapitalDepositApply(this.extend(d,a));return this.parseTransaction(c,o)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);const n=await this.privateGetOpenapiV1CapitalDepositHistory(this.extend(a,s));return this.parseTransactions(n,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);const n=await this.privateGetOpenapiV1CapitalWithdrawHistory(this.extend(a,s));return this.parseTransactions(n,r,t,i)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"address");let r=this.safeString(e,"addressTag");void 0!==r&&r.length<1&&(r=void 0);const a=this.safeString(e,"txId"),n=this.safeString(e,"coin"),o=this.safeCurrencyCode(n,t);let d,c;d=this.safeInteger2(e,"insertTime","applyTime");const h=this.safeString(e,"withdrawOrderId"),u=this.safeString(e,"depositOrderId");void 0!==h?c="withdrawal":void 0!==u&&(c="deposit");const l=this.parseTransactionStatus(this.safeString(e,"status")),p=this.safeNumber(e,"amount"),f=this.safeNumber(e,"transactionFee");let m;void 0!==f&&(m={currency:o,cost:f});let v=this.safeInteger(e,"transferType");void 0!==v&&(v=!!v);const g=this.safeString(e,"network");return{info:e,id:i,txid:a,timestamp:d,datetime:this.iso8601(d),network:g,address:s,addressTo:s,addressFrom:void 0,tag:r,tagTo:r,tagFrom:void 0,type:c,amount:p,currency:o,status:l,updated:void 0,internal:v,fee:m}}parseTransactionStatus(e){return this.safeString({0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",6:"ok"},e,e)}urlEncodeQuery(e={}){let t="";const i=Object.keys(e);for(let s=0;s<i.length;s++){const r=i[s];if(Array.isArray(e[r])){0!==s&&(t+="&");const i=e[r];e=this.omit(e,r),t+=this.parseArrayParam(i,r)}}const s=this.urlencode(e);return 0!==s.length?s+"&"+t:t}parseArrayParam(e,t){let i=this.json(e);return i=i.replace("[","%5B"),i=i.replace("]","%5D"),t+"="+i}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t],d=this.omit(s,this.extractParams(e));if(n=n+"/"+this.implodeParams(e,s),"private"===t){if(this.checkRequiredCredentials(),d.timestamp=this.milliseconds(),void 0===this.safeInteger(d,"recvWindow")){const e=this.safeInteger(this.options,"recvWindow");void 0!==e&&(d.recvWindow=e)}d=this.urlEncodeQuery(d),n=n+"?"+d+"&signature="+this.hmac(this.encode(d),this.encode(this.secret),o.J),r={"X-COINS-APIKEY":this.apiKey}}else d=this.urlEncodeQuery(d),0!==d.length&&(n+="?"+d);return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"code",void 0);if(void 0!==h&&"200"!==h&&"0"!==h){const e=this.id+" "+n;throw this.throwBroadlyMatchedException(this.exceptions.broad,n,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r.ExchangeError(e)}}}},7794:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(4663),r=i(6689),a=i(9292),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinspot",name:"CoinSpot",countries:["AU"],rateLimit:1e3,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/28208429-3cacdf9a-6896-11e7-854e-4c79a772a30f.jpg",api:{public:"https://www.coinspot.com.au/pubapi",private:"https://www.coinspot.com.au/api"},www:"https://www.coinspot.com.au",doc:"https://www.coinspot.com.au/api",referral:"https://www.coinspot.com.au/register?code=PJURCU"},api:{public:{get:["latest"]},private:{post:["orders","orders/history","my/coin/deposit","my/coin/send","quote/buy","quote/sell","my/balances","my/orders","my/buy","my/sell","my/buy/cancel","my/sell/cancel","ro/my/balances","ro/my/balances/{cointype}","ro/my/deposits","ro/my/withdrawals","ro/my/transactions","ro/my/transactions/{cointype}","ro/my/transactions/open","ro/my/transactions/{cointype}/open","ro/my/sendreceive","ro/my/affiliatepayments","ro/my/referralpayments"]}},markets:{"ADA/AUD":{id:"ada",symbol:"ADA/AUD",base:"ADA",quote:"AUD",baseId:"ada",quoteId:"aud",type:"spot",spot:!0},"BTC/AUD":{id:"btc",symbol:"BTC/AUD",base:"BTC",quote:"AUD",baseId:"btc",quoteId:"aud",type:"spot",spot:!0},"ETH/AUD":{id:"eth",symbol:"ETH/AUD",base:"ETH",quote:"AUD",baseId:"eth",quoteId:"aud",type:"spot",spot:!0},"XRP/AUD":{id:"xrp",symbol:"XRP/AUD",base:"XRP",quote:"AUD",baseId:"xrp",quoteId:"aud",type:"spot",spot:!0},"LTC/AUD":{id:"ltc",symbol:"LTC/AUD",base:"LTC",quote:"AUD",baseId:"ltc",quoteId:"aud",type:"spot",spot:!0},"DOGE/AUD":{id:"doge",symbol:"DOGE/AUD",base:"DOGE",quote:"AUD",baseId:"doge",quoteId:"aud",type:"spot",spot:!0},"RFOX/AUD":{id:"rfox",symbol:"RFOX/AUD",base:"RFOX",quote:"AUD",baseId:"rfox",quoteId:"aud",type:"spot",spot:!0},"POWR/AUD":{id:"powr",symbol:"POWR/AUD",base:"POWR",quote:"AUD",baseId:"powr",quoteId:"aud",type:"spot",spot:!0},"NEO/AUD":{id:"neo",symbol:"NEO/AUD",base:"NEO",quote:"AUD",baseId:"neo",quoteId:"aud",type:"spot",spot:!0},"TRX/AUD":{id:"trx",symbol:"TRX/AUD",base:"TRX",quote:"AUD",baseId:"trx",quoteId:"aud",type:"spot",spot:!0},"EOS/AUD":{id:"eos",symbol:"EOS/AUD",base:"EOS",quote:"AUD",baseId:"eos",quoteId:"aud",type:"spot",spot:!0},"XLM/AUD":{id:"xlm",symbol:"XLM/AUD",base:"XLM",quote:"AUD",baseId:"xlm",quoteId:"aud",type:"spot",spot:!0},"RHOC/AUD":{id:"rhoc",symbol:"RHOC/AUD",base:"RHOC",quote:"AUD",baseId:"rhoc",quoteId:"aud",type:"spot",spot:!0},"GAS/AUD":{id:"gas",symbol:"GAS/AUD",base:"GAS",quote:"AUD",baseId:"gas",quoteId:"aud",type:"spot",spot:!0}},commonCurrencies:{DRK:"DASH"},options:{fetchBalance:"private_post_my_balances"},precisionMode:a.sh})}parseBalance(e){const t={info:e},i=this.safeValue2(e,"balance","balances");if(Array.isArray(i))for(let e=0;e<i.length;e++){const s=i[e],r=Object.keys(s);for(let e=0;e<r.length;e++){const i=r[e],a=s[i],n=this.safeCurrencyCode(i),o=this.account();o.total=this.safeString(a,"balance"),t[n]=o}}else{const e=Object.keys(i);for(let s=0;s<e.length;s++){const r=e[s],a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(i,r),t[a]=n}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(this.options,"fetchBalance","private_post_my_balances"),i=await this[t](e);return this.parseBalance(i)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={cointype:s.id},a=await this.privatePostOrders(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"buyorders","sellorders","rate","amount")}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s=await this.publicGetLatest(t);let r=i.id;r=r.toLowerCase();const a=this.safeValue(s,"prices"),n=this.safeValue(a,r);return this.parseTicker(n,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetLatest(t),s={},r=this.safeValue(i,"prices"),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],i=this.safeMarket(t);if(i.spot){const e=i.symbol,a=r[t];s[e]=this.parseTicker(a,i)}}return this.filterByArray(s,"symbol",e)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={cointype:r.id},n=await this.privatePostOrdersHistory(this.extend(a,s)),o=this.safeValue(n,"orders",[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"rate"),s=this.safeString(e,"amount"),r=this.safeNumber(e,"total"),a=this.safeInteger(e,"solddate"),n=this.safeString(e,"market"),o=this.safeSymbol(n,t,"/");return this.safeTrade({info:e,id:void 0,symbol:o,timestamp:a,datetime:this.iso8601(a),order:void 0,type:void 0,side:void 0,takerOrMaker:void 0,price:i,amount:s,cost:r,fee:void 0},t)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o="privatePostMy"+this.capitalize(i);if("market"===t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");const d={cointype:this.market(e).id,amount:s,rate:a};return await this[o](this.extend(d,n))}async cancelOrder(e,t=undefined,i={}){const s=this.safeString(i,"side");if("buy"!==s&&"sell"!==s)throw new r.ArgumentsRequired(this.id+' cancelOrder() requires a side parameter, "buy" or "sell"');i=this.omit(i,"side");const a="privatePostMy"+this.capitalize(s)+"Cancel",n={id:e};return await this[a](this.extend(n,i))}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const o=this.urls.api[t]+"/"+e;if("private"===t){this.checkRequiredCredentials();const e=this.nonce();a=this.json(this.extend({nonce:e},s)),r={"Content-Type":"application/json",key:this.apiKey,sign:this.hmac(this.encode(a),this.encode(this.secret),n.o)}}return{url:o,method:i,body:a,headers:r}}}},9129:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6450),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"cryptocom",name:"Crypto.com",countries:["MT"],version:"v2",rateLimit:10,pro:!0,has:{CORS:!1,spot:!0,margin:!0,swap:void 0,future:void 0,option:void 0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowInterest:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!0,fetchClosedOrders:"emulated",fetchCurrencies:!1,fetchDepositAddress:!0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRates:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPositions:!1,fetchStatus:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!0,fetchWithdrawals:!0,repayMargin:!0,setLeverage:!1,setMarginMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"7D","2w":"14D","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/147792121-38ed5e36-c229-48d6-b49a-48d05fc19ed4.jpeg",test:{v1:"https://uat-api.3ona.co/exchange/v1",v2:"https://uat-api.3ona.co/v2",derivatives:"https://uat-api.3ona.co/v2"},api:{v1:"https://api.crypto.com/exchange/v1",v2:"https://api.crypto.com/v2",derivatives:"https://deriv-api.crypto.com/v1"},www:"https://crypto.com/",referral:"https://crypto.com/exch/5835vstech",doc:["https://exchange-docs.crypto.com/exchange/v1/rest-ws/index.html","https://exchange-docs.crypto.com/spot/index.html","https://exchange-docs.crypto.com/derivatives/index.html"],fees:"https://crypto.com/exchange/document/fees-limits"},api:{v1:{public:{get:{"public/auth":10/3,"public/get-instruments":10/3,"public/get-book":1,"public/get-candlestick":1,"public/get-trades":1,"public/get-tickers":1,"public/get-valuations":1,"public/get-expired-settlement-price":10/3,"public/get-insurance":1}},private:{post:{"private/set-cancel-on-disconnect":10/3,"private/get-cancel-on-disconnect":10/3,"private/user-balance":10/3,"private/user-balance-history":10/3,"private/get-positions":10/3,"private/create-order":2/3,"private/create-order-list":10/3,"private/cancel-order":2/3,"private/cancel-order-list":10/3,"private/cancel-all-orders":2/3,"private/close-position":10/3,"private/get-order-history":100,"private/get-open-orders":10/3,"private/get-order-detail":1/3,"private/get-trades":100,"private/change-account-leverage":10/3,"private/get-transactions":10/3,"private/create-subaccount-transfer":10/3,"private/get-subaccount-balances":10/3,"private/get-order-list":10/3,"private/create-withdrawal":10/3,"private/get-currency-networks":10/3,"private/get-deposit-address":10/3,"private/get-accounts":10/3}}},v2:{public:{get:{"public/auth":1,"public/get-instruments":1,"public/get-book":1,"public/get-candlestick":1,"public/get-ticker":1,"public/get-trades":1,"public/margin/get-transfer-currencies":1,"public/margin/get-load-currenices":1,"public/respond-heartbeat":1}},private:{post:{"private/set-cancel-on-disconnect":10/3,"private/get-cancel-on-disconnect":10/3,"private/create-withdrawal":10/3,"private/get-withdrawal-history":10/3,"private/get-currency-networks":10/3,"private/get-deposit-history":10/3,"private/get-deposit-address":10/3,"private/get-account-summary":10/3,"private/create-order":2/3,"private/cancel-order":2/3,"private/cancel-all-orders":2/3,"private/create-order-list":10/3,"private/get-order-history":10/3,"private/get-open-orders":10/3,"private/get-order-detail":1/3,"private/get-trades":100,"private/margin/get-user-config":10/3,"private/margin/get-account-summary":10/3,"private/margin/transfer":10/3,"private/margin/borrow":10/3,"private/margin/repay":10/3,"private/margin/get-transfer-history":10/3,"private/margin/get-borrow-history":10/3,"private/margin/get-interest-history":10/3,"private/margin/get-repay-history":10/3,"private/margin/get-liquidation-history":10/3,"private/margin/get-liquidation-orders":10/3,"private/margin/create-order":2/3,"private/margin/cancel-order":2/3,"private/margin/cancel-all-orders":2/3,"private/margin/get-order-history":10/3,"private/margin/get-open-orders":10/3,"private/margin/get-order-detail":1/3,"private/margin/get-trades":100,"private/deriv/transfer":10/3,"private/deriv/get-transfer-history":10/3,"private/get-accounts":10/3,"private/get-subaccount-balances":10/3,"private/create-subaccount-transfer":10/3,"private/otc/get-otc-user":10/3,"private/otc/get-instruments":10/3,"private/otc/request-quote":100,"private/otc/accept-quote":100,"private/otc/get-quote-history":10/3,"private/otc/get-trade-history":10/3}}},derivatives:{public:{get:{"public/auth":10/3,"public/get-instruments":10/3,"public/get-book":1,"public/get-candlestick":1,"public/get-trades":1,"public/get-tickers":1,"public/get-valuations":1,"public/get-expired-settlement-price":10/3,"public/get-insurance":1}},private:{post:{"private/set-cancel-on-disconnect":10/3,"private/get-cancel-on-disconnect":10/3,"private/user-balance":10/3,"private/user-balance-history":10/3,"private/get-positions":10/3,"private/create-order":2/3,"private/create-order-list":10/3,"private/cancel-order":2/3,"private/cancel-order-list":10/3,"private/cancel-all-orders":2/3,"private/close-position":10/3,"private/convert-collateral":10/3,"private/get-order-history":100,"private/get-open-orders":10/3,"private/get-order-detail":1/3,"private/get-trades":100,"private/change-account-leverage":10/3,"private/get-transactions":10/3,"private/create-subaccount-transfer":10/3,"private/get-subaccount-balances":10/3,"private/get-order-list":10/3}}}},fees:{trading:{maker:this.parseNumber("0.004"),taker:this.parseNumber("0.004"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("25000"),this.parseNumber("0.0035")],[this.parseNumber("50000"),this.parseNumber("0.0015")],[this.parseNumber("100000"),this.parseNumber("0.001")],[this.parseNumber("250000"),this.parseNumber("0.0009")],[this.parseNumber("1000000"),this.parseNumber("0.0008")],[this.parseNumber("20000000"),this.parseNumber("0.0007")],[this.parseNumber("100000000"),this.parseNumber("0.0006")],[this.parseNumber("200000000"),this.parseNumber("0.0004")]],taker:[[this.parseNumber("0"),this.parseNumber("0.004")],[this.parseNumber("25000"),this.parseNumber("0.0035")],[this.parseNumber("50000"),this.parseNumber("0.0025")],[this.parseNumber("100000"),this.parseNumber("0.0016")],[this.parseNumber("250000"),this.parseNumber("0.00015")],[this.parseNumber("1000000"),this.parseNumber("0.00014")],[this.parseNumber("20000000"),this.parseNumber("0.00013")],[this.parseNumber("100000000"),this.parseNumber("0.00012")],[this.parseNumber("200000000"),this.parseNumber("0.0001")]]}}},options:{defaultType:"spot",accountsById:{funding:"SPOT",spot:"SPOT",margin:"MARGIN",derivatives:"DERIVATIVES",swap:"DERIVATIVES",future:"DERIVATIVES"},networks:{BEP20:"BSC",ERC20:"ETH",TRX:"TRON",TRC20:"TRON"},networksById:{BSC:"BEP20",ETH:"ERC20",TRON:"TRC20"}},commonCurrencies:{USD_STABLE_COIN:"USDC"},precisionMode:n.sh,exceptions:{exact:{10001:r.ExchangeError,10002:r.PermissionDenied,10003:r.PermissionDenied,10004:r.BadRequest,10005:r.PermissionDenied,10006:r.DDoSProtection,10007:r.InvalidNonce,10008:r.BadRequest,10009:r.BadRequest,20001:r.BadRequest,20002:r.InsufficientFunds,20005:r.AccountNotEnabled,30003:r.BadSymbol,30004:r.BadRequest,30005:r.BadRequest,30006:r.InvalidOrder,30007:r.InvalidOrder,30008:r.InvalidOrder,30009:r.InvalidOrder,30010:r.BadRequest,30013:r.InvalidOrder,30014:r.InvalidOrder,30016:r.InvalidOrder,30017:r.InvalidOrder,30023:r.InvalidOrder,30024:r.InvalidOrder,30025:r.InvalidOrder,40001:r.BadRequest,40002:r.BadRequest,40003:r.BadRequest,40004:r.BadRequest,40005:r.BadRequest,40006:r.BadRequest,40007:r.BadRequest,40101:r.AuthenticationError,50001:r.BadRequest,9010001:r.OnMaintenance}}})}async fetchMarkets(e={}){let t=[this.fetchSpotMarkets(e),this.fetchDerivativesMarkets(e)];t=await Promise.all(t);const i=t[0],s=t[1];return this.arrayConcat(i,s)}async fetchSpotMarkets(e={}){const t=await this.v2PublicGetPublicGetInstruments(e),i=this.safeValue(t,"result",{}),s=this.safeValue(i,"instruments",[]),r=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"instrument_name"),n=this.safeString(t,"base_currency"),o=this.safeString(t,"quote_currency"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=this.safeString(t,"min_price"),u=this.safeString(t,"min_quantity");let l=this.parseNumber("1");this.safeValue(t,"margin_trading_enabled_5x")&&(l=this.parseNumber("5")),this.safeValue(t,"margin_trading_enabled_10x")&&(l=this.parseNumber("10")),r.push({id:i,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:this.safeValue(t,"margin_trading_enabled"),swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"quantity_tick_size"),price:this.safeNumber(t,"price_tick_size")},limits:{leverage:{min:this.parseNumber("1"),max:l},amount:{min:this.parseNumber(u),max:this.safeNumber(t,"max_quantity")},price:{min:this.parseNumber(h),max:this.safeNumber(t,"max_price")},cost:{min:this.parseNumber(a.O.stringMul(u,h)),max:void 0}},info:t})}return r}async fetchDerivativesMarkets(e={}){const t=[],i=await this.derivativesPublicGetPublicGetInstruments(),s=this.safeValue(i,"result",{}),r=this.safeValue(s,"data",[]);for(let e=0;e<r.length;e++){const i=r[e],s=this.safeString(i,"inst_type"),a="PERPETUAL_SWAP"===s,n="FUTURE"===s;if("CCY_PAIR"===s)continue;const o=this.safeString(i,"base_ccy"),d=this.safeString(i,"quote_ccy"),c=this.safeCurrencyCode(o),h=this.safeCurrencyCode(d);let u=c+"/"+h+":"+h,l=this.safeInteger(i,"expiry_timestamp_ms");0===l&&(l=void 0);let p="swap";n&&(p="future",u=u+"-"+this.yymmdd(l));const f=this.safeNumber(i,"contract_size");t.push({id:this.safeString(i,"symbol"),symbol:u,base:c,quote:h,settle:h,baseId:o,quoteId:d,settleId:d,type:p,spot:!1,margin:!1,swap:a,future:n,option:!1,active:this.safeValue(i,"tradable"),contract:!0,linear:!0,inverse:!1,contractSize:f,expiry:l,expiryDatetime:this.iso8601(l),strike:void 0,optionType:void 0,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(i,"quote_decimals"))),amount:this.parseNumber(this.parsePrecision(this.safeString(i,"quantity_decimals")))},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(i,"max_leverage")},amount:{min:this.parseNumber(f),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:i})}return t}async fetchTickers(e=undefined,t={}){let i;if(await this.loadMarkets(),void 0!==(e=this.marketSymbols(e))){const t=this.safeValue(e,0);i=this.market(t)}const[s,r]=this.handleMarketTypeAndParams("fetchTickers",i,t),a=this.getSupportedMapping(s,{spot:"v2PublicGetPublicGetTicker",future:"derivativesPublicGetPublicGetTickers",swap:"derivativesPublicGetPublicGetTickers"}),n=await this[a](r),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"data",[]);return this.parseTickers(d,e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={instrument_name:i.id},[a,n]=this.handleMarketTypeAndParams("fetchTicker",i,t);if("spot"!==a)throw new r.NotSupported(this.id+" fetchTicker() only supports spot markets");const o=await this.v2PublicGetPublicGetTicker(this.extend(s,n)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"data",{}),h=this.safeValue(c,0,{});return this.parseTicker(h,i)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={instrument_name:a.id};void 0!==t&&(n.start_ts=t),void 0!==i&&(n.page_size=i);const[o,d]=this.handleMarketTypeAndParams("fetchOrders",a,s);let c=this.getSupportedMapping(o,{spot:"v2PrivatePostPrivateGetOrderHistory",margin:"v2PrivatePostPrivateMarginGetOrderHistory",future:"derivativesPrivatePostPrivateGetOrderHistory",swap:"derivativesPrivatePostPrivateGetOrderHistory"});const[h,u]=this.customHandleMarginModeAndParams("fetchOrders",d);void 0!==h&&(c="v2PrivatePostPrivateMarginGetOrderHistory");const l=await this[c](this.extend(n,u)),p=this.safeValue(l,"result",{}),f=this.safeValue2(p,"order_list","data",[]);return this.parseOrders(f,a,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={instrument_name:r.id};void 0!==t&&(a.start_ts=t),void 0!==i&&(a.page_size=i);const[n,o]=this.handleMarketTypeAndParams("fetchTrades",r,s),d=this.getSupportedMapping(n,{spot:"v2PublicGetPublicGetTrades",future:"derivativesPublicGetPublicGetTrades",swap:"derivativesPublicGetPublicGetTrades"}),c=await this[d](this.extend(a,o)),h=this.safeValue(c,"result",{}),u=this.safeValue(h,"data",[]);return this.parseTrades(u,r,t,i)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={instrument_name:a.id,timeframe:this.safeString(this.timeframes,t,t)},[o,d]=this.handleMarketTypeAndParams("fetchOHLCV",a,r),c=this.getSupportedMapping(o,{spot:"v2PublicGetPublicGetCandlestick",future:"derivativesPublicGetPublicGetCandlestick",swap:"derivativesPublicGetPublicGetCandlestick"});if("spot"!==o){let e=100;void 0!==s&&(e=s),n.count=e}const h=await this[c](this.extend(n,d)),u=this.safeValue(h,"result",{}),l=this.safeValue(u,"data",[]);return this.parseOHLCVs(l,a,t,i,s)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={instrument_name:s.id};t&&(r.depth=t);const[a,n]=this.handleMarketTypeAndParams("fetchOrderBook",s,i),o=this.getSupportedMapping(a,{spot:"v2PublicGetPublicGetBook",future:"derivativesPublicGetPublicGetBook",swap:"derivativesPublicGetPublicGetBook"}),d=await this[o](this.extend(r,n)),c=this.safeValue(d,"result"),h=this.safeValue(c,"data"),u=this.safeValue(h,0),l=this.safeInteger(u,"t");return this.parseOrderBook(u,e,l)}parseSwapBalance(e){const t=this.safeValue(e,"result",{}),i=this.safeValue(t,"data",[]),s={info:e};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"instrument_name"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(t,"total_cash_balance"),n.free=this.safeString(t,"total_available_balance"),s[a]=n}return this.safeBalance(s)}parseSpotBalance(e){const t=this.safeValue(e,"result",{}),i=this.safeValue(t,"accounts",[]),s={info:e};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(t,"balance"),n.free=this.safeString(t,"available"),n.used=this.safeString(t,"order"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const[t,i]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let s=this.getSupportedMapping(t,{spot:"v2PrivatePostPrivateGetAccountSummary",margin:"v2PrivatePostPrivateMarginGetAccountSummary",future:"derivativesPrivatePostPrivateUserBalance",swap:"derivativesPrivatePostPrivateUserBalance"});const[r,a]=this.customHandleMarginModeAndParams("fetchBalance",i);void 0!==r&&(s="v2PrivatePostPrivateMarginGetAccountSummary");const n=await this[s](a);return this[this.getSupportedMapping(t,{spot:"parseSpotBalance",margin:"parseSpotBalance",future:"parseSwapBalance",swap:"parseSwapBalance"})](n)}async fetchOrder(e,t=undefined,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));const r={},[a,n]=this.handleMarketTypeAndParams("fetchOrder",s,i),[o,d]=this.customHandleMarginModeAndParams("fetchOrder",n);r.order_id="spot"===a||"margin"===a||void 0!==o?e.toString():parseInt(e);let c=this.getSupportedMapping(a,{spot:"v2PrivatePostPrivateGetOrderDetail",margin:"v2PrivatePostPrivateMarginGetOrderDetail",future:"derivativesPrivatePostPrivateGetOrderDetail",swap:"derivativesPrivatePostPrivateGetOrderDetail"});void 0!==o&&(c="v2PrivatePostPrivateMarginGetOrderDetail");const h=await this[c](this.extend(r,d)),u=this.safeValue(h,"result",{}),l=this.safeValue(u,"order_info",u);return this.parseOrder(l,s)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),d={instrument_name:n.id,side:i.toUpperCase(),type:o,quantity:this.amountToPrecision(e,s)};"LIMIT"!==o&&"STOP_LIMIT"!==o||(d.price=this.priceToPrecision(e,r));const c=this.safeString(a,"clientOrderId");c&&(d.client_oid=c,a=this.omit(a,["clientOrderId"])),this.safeValue(a,"postOnly",!1)&&(d.exec_inst="POST_ONLY",a=this.omit(a,["postOnly"]));const[h,u]=this.handleMarketTypeAndParams("createOrder",n,a);let l=this.getSupportedMapping(h,{spot:"v2PrivatePostPrivateCreateOrder",margin:"v2PrivatePostPrivateMarginCreateOrder",future:"derivativesPrivatePostPrivateCreateOrder",swap:"derivativesPrivatePostPrivateCreateOrder"});const[p,f]=this.customHandleMarginModeAndParams("createOrder",u);void 0!==p&&(l="v2PrivatePostPrivateMarginCreateOrder");const m=await this[l](this.extend(d,f)),v=this.safeValue(m,"result",{});return this.parseOrder(v,n)}async cancelAllOrders(e=undefined,t={}){let i;await this.loadMarkets(),void 0!==e&&(i=this.market(e));const s={},[a,n]=this.handleMarketTypeAndParams("cancelAllOrders",i,t),[o,d]=this.customHandleMarginModeAndParams("cancelAllOrders",n);if("spot"===a||"margin"===a||void 0!==o){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument for "+a+" orders");s.instrument_name=i.id}let c=this.getSupportedMapping(a,{spot:"v2PrivatePostPrivateCancelAllOrders",margin:"v2PrivatePostPrivateMarginCancelAllOrders",future:"derivativesPrivatePostPrivateCancelAllOrders",swap:"derivativesPrivatePostPrivateCancelAllOrders"});return void 0!==o&&(c="v2PrivatePostPrivateMarginCancelAllOrders"),await this[c](this.extend(s,d))}async cancelOrder(e,t=undefined,i={}){let s;await this.loadMarkets(),void 0!==t&&(s=this.market(t));const a={},[n,o]=this.handleMarketTypeAndParams("cancelOrder",s,i),[d,c]=this.customHandleMarginModeAndParams("cancelOrder",o);if("spot"===n||"margin"===n||void 0!==d){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument for "+n+" orders");a.instrument_name=s.id,a.order_id=e.toString()}else a.order_id=parseInt(e);let h=this.getSupportedMapping(n,{spot:"v2PrivatePostPrivateCancelOrder",margin:"v2PrivatePostPrivateMarginCancelOrder",future:"derivativesPrivatePostPrivateCancelOrder",swap:"derivativesPrivatePostPrivateCancelOrder"});void 0!==d&&(h="v2PrivatePostPrivateMarginCancelOrder");const u=await this[h](this.extend(a,c)),l=this.safeValue(u,"result",u);return this.parseOrder(l)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.instrument_name=r.id),void 0!==i&&(a.page_size=i);const[n,o]=this.handleMarketTypeAndParams("fetchOpenOrders",r,s);let d=this.getSupportedMapping(n,{spot:"v2PrivatePostPrivateGetOpenOrders",margin:"v2PrivatePostPrivateMarginGetOpenOrders",future:"derivativesPrivatePostPrivateGetOpenOrders",swap:"derivativesPrivatePostPrivateGetOpenOrders"});const[c,h]=this.customHandleMarginModeAndParams("fetchOpenOrders",o);void 0!==c&&(d="v2PrivatePostPrivateMarginGetOpenOrders");const u=await this[d](this.extend(a,h)),l=this.safeValue(u,"result",{}),p=this.safeValue2(l,"order_list","data",[]);return this.parseOrders(p,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.market(e),r.instrument_name=a.id),void 0!==t){r.start_ts=t;const e=this.sum(t,864e5);r.end_ts=e}void 0!==i&&(r.page_size=i);const[n,o]=this.handleMarketTypeAndParams("fetchMyTrades",a,s);let d=this.getSupportedMapping(n,{spot:"v2PrivatePostPrivateGetTrades",margin:"v2PrivatePostPrivateMarginGetTrades",future:"derivativesPrivatePostPrivateGetTrades",swap:"derivativesPrivatePostPrivateGetTrades"});const[c,h]=this.customHandleMarginModeAndParams("fetchMyTrades",o);void 0!==c&&(d="v2PrivatePostPrivateMarginGetTrades");const u=await this[d](this.extend(r,h)),l=this.safeValue(u,"result",{}),p=this.safeValue2(l,"trade_list","data",[]);return this.parseTrades(p,a,t,i)}parseAddress(e){let t,i,s;return e.indexOf("?")>0?([t,s]=e.split("?"),i=s.split("=")[1]):t=e,[t,i]}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,amount:t,address:i};void 0!==s&&(n.address_tag=s);const o=await this.v2PrivatePostPrivateCreateWithdrawal(this.extend(n,r)),d=this.safeValue(o,"result");return this.parseTransaction(d,a)}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.v2PrivatePostPrivateGetDepositAddress(this.extend(i,t)),a=this.safeValue(s,"result",{}),n=this.safeValue(a,"deposit_address_list",[]),o=n.length;if(0===o)throw new r.ExchangeError(this.id+" fetchDepositAddressesByNetwork() generating address...");const d={};for(let e=0;e<o;e++){const t=this.safeValue(n,e),i=this.safeString(t,"address"),s=this.safeString(t,"currency"),r=this.safeCurrencyCode(s),[a,o]=this.parseAddress(i);this.checkAddress(a);const c=this.safeString(t,"network"),h=this.safeNetwork(c);d[h]={info:t,currency:r,address:a,tag:o,network:h}}return d}async fetchDepositAddress(e,t={}){const i=this.safeStringUpper(t,"network");t=this.omit(t,["network"]);const s=await this.fetchDepositAddressesByNetwork(e,t);return i in s?s[i]:s[Object.keys(s)[0]]}safeNetwork(e){return this.safeString({BTC:"BTC",ETH:"ETH",SOL:"SOL",BNB:"BNB",CRONOS:"CRONOS",MATIC:"MATIC",OP:"OP"},e,e)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==t&&(a.start_ts=t),void 0!==i&&(a.page_size=i);const n=await this.v2PrivatePostPrivateGetDepositHistory(this.extend(a,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"deposit_list",[]);return this.parseTransactions(d,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currency=r.id),void 0!==t&&(a.start_ts=t),void 0!==i&&(a.page_size=i);const n=await this.v2PrivatePostPrivateGetWithdrawalHistory(this.extend(a,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"withdrawal_list",[]);return this.parseTransactions(d,r,t,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e);i=i.toLowerCase(),s=s.toLowerCase();const n=this.safeValue(this.options,"accountsById",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c={currency:a.id,amount:parseFloat(t),from:o,to:d};let h="v2PrivatePostPrivateDerivTransfer";"margin"!==i&&"margin"!==s||(h="v2PrivatePostPrivateMarginTransfer");const u=await this[h](this.extend(c,r));return this.parseTransfer(u,a)}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){if(!("direction"in s))throw new r.ArgumentsRequired(this.id+' fetchTransfers() requires a direction param to be either "IN" or "OUT"');let a;await this.loadMarkets();const n={direction:"OUT"};void 0!==e&&(a=this.currency(e),n.currency=a.id),void 0!==t&&(n.start_ts=t),void 0!==i&&(n.page_size=i);let o="v2PrivatePostPrivateDerivGetTransferHistory";const[d,c]=this.customHandleMarginModeAndParams("fetchTransfers",s);void 0!==d&&(o="v2PrivatePostPrivateMarginGetTransferHistory");const h=await this[o](this.extend(n,c)),u=[];return u.push({response:h}),this.parseTransfers(u,a,t,i,s)}parseTransferStatus(e){return this.safeString({COMPLETED:"ok",PROCESSING:"pending"},e,e)}parseTransfer(e,t=undefined){const i=this.safeValue(e,"response",{}),s=this.safeValue(i,"result",{}),r=this.safeValue(s,"transfer_list",[]);let a,n,o,d,c,h,u;for(let e=0;e<r.length;e++){const t=r[e];a=this.safeInteger(t,"time"),n=this.safeNumber(t,"amount");const i=this.safeString(t,"currency");o=this.safeCurrencyCode(i),d=this.safeString(t,"information");const s=this.safeString(t,"status");c=this.parseTransferStatus(s)}if(void 0!==d){const e=d.split(" "),t=this.safeStringLower(e,0),s=this.safeString(i,"method");"from"===t?(h=this.safeStringLower(e,1),u="private/margin/get-transfer-history"===s?"margin":"derivative"):"to"===t&&(u=this.safeStringLower(e,1),h="private/margin/get-transfer-history"===s?"margin":"derivative")}return{info:r,id:this.safeString(i,"id"),timestamp:a,datetime:this.iso8601(a),currency:o,amount:n,fromAccount:h,toAccount:u,status:c}}parseTicker(e,t=undefined){const i=this.safeInteger(e,"t"),s=this.safeString(e,"i"),r=(t=this.safeMarket(s,t,"_")).symbol,a=this.safeString(e,"a"),n=this.safeString(e,"c");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"h"),low:this.safeString(e,"l"),bid:this.safeString(e,"b"),bidVolume:void 0,ask:this.safeString(e,"k"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:n,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"v"),quoteVolume:void 0,info:e},t)}parseTrade(e,t=undefined){const i=this.safeInteger2(e,"t","create_time"),s=this.safeString2(e,"i","instrument_name"),r=(t=this.safeMarket(s,t,"_")).symbol,n=this.safeString2(e,"p","traded_price"),o=this.safeString2(e,"q","traded_quantity");let d=this.safeString2(e,"s","side");void 0!==d&&(d=d.toLowerCase());const c=this.safeString2(e,"d","trade_id"),h=this.safeStringLower2(e,"liquidity_indicator","taker_side"),u=this.safeString(e,"order_id");let l,p=this.safeString2(e,"fee","fees");if(void 0!==p){let i;this.safeValue(t,"contract",!1)&&(p=a.O.stringNeg(p)),t.spot?i=this.safeString(e,"fee_currency"):t.linear&&(i=t.quote),l={currency:i,cost:p}}return this.safeTrade({info:e,id:c,timestamp:i,datetime:this.iso8601(i),symbol:r,side:d,price:n,amount:o,cost:void 0,order:u,takerOrMaker:h,type:void 0,fee:l},t)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}parseOrderStatus(e){return this.safeString({ACTIVE:"open",CANCELED:"canceled",FILLED:"closed",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseTimeInForce(e){return this.safeString({GOOD_TILL_CANCEL:"GTC",IMMEDIATE_OR_CANCEL:"IOC",FILL_OR_KILL:"FOK"},e,e)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"create_time"),s=this.safeInteger(e,"update_time"),r=this.safeString(e,"instrument_name"),a=this.safeSymbol(r,t),n=this.safeString(e,"quantity"),o=this.safeString(e,"cumulative_quantity"),d=this.parseOrderStatus(this.safeString(e,"status")),c=this.safeString(e,"order_id"),h=this.safeString(e,"client_oid"),u=this.safeString2(e,"price","limit_price"),l=this.safeString(e,"avg_price"),p=this.safeStringLower2(e,"type","order_type"),f=this.safeStringLower(e,"side"),m=this.parseTimeInForce(this.safeString(e,"time_in_force")),v=this.safeString(e,"exec_inst");let g;void 0!==v&&(g="POST_ONLY"===v);const y=this.safeString(e,"cumulative_value"),b=this.safeString(e,"cumulative_fee");let w;if(void 0!==b){const t=this.safeString(e,"fee_instrument_name");w={cost:b,currency:this.safeCurrencyCode(t)}}return this.safeOrder({info:e,id:c,clientOrderId:h,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,status:d,symbol:a,type:p,timeInForce:m,postOnly:g,side:f,price:u,amount:n,filled:o,remaining:void 0,cost:y,fee:w,average:l,trades:[]},t)}parseDepositStatus(e){return this.safeString({0:"pending",1:"ok",2:"failed",3:"pending"},e,e)}parseWithdrawalStatus(e){return this.safeString({0:"pending",1:"pending",2:"failed",3:"pending",4:"failed",5:"ok",6:"canceled"},e,e)}parseTransaction(e,t=undefined){let i;const s=this.safeString(e,"status");let r;"client_wid"in e?(i="withdrawal",r=this.parseWithdrawalStatus(s)):(i="deposit",r=this.parseDepositStatus(s));const a=this.safeString(e,"id"),n=this.safeString(e,"address"),[o,d]=this.parseAddress(n),c=this.safeString(e,"currency"),h=this.safeCurrencyCode(c,t),u=this.safeInteger(e,"create_time"),l=this.safeNumber(e,"amount"),p=this.safeString(e,"txid"),f=this.safeNumber(e,"fee");let m;void 0!==f&&(m={currency:h,cost:f});const v=this.safeInteger(e,"update_time");return{info:e,id:a,txid:p,timestamp:u,datetime:this.iso8601(u),network:void 0,address:o,addressTo:o,addressFrom:void 0,tag:d,tagTo:d,tagFrom:void 0,type:i,amount:l,currency:h,status:r,updated:v,internal:void 0,fee:m}}async repayMargin(e,t,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e),a={currency:r.id,amount:this.currencyToPrecision(e,t)},n=await this.v2PrivatePostPrivateMarginRepay(this.extend(a,s)),o=this.parseMarginLoan(n,r);return this.extend(o,{amount:t})}async borrowMargin(e,t,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e),a={currency:r.id,amount:this.currencyToPrecision(e,t)},n=await this.v2PrivatePostPrivateMarginBorrow(this.extend(a,s)),o=this.parseMarginLoan(n,r);return this.extend(o,{amount:t})}parseMarginLoan(e,t=undefined){return{id:this.safeInteger(e,"id"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n,o;void 0!==t&&(n=this.market(t)),void 0!==e&&(o=this.currency(e),a.currency=o.id),void 0!==i&&(a.start_ts=i),void 0!==s&&(a.page_size=s);const d=await this.v2PrivatePostPrivateMarginGetInterestHistory(this.extend(a,r)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,"list",[]);let u;for(let e=0;e<h.length;e++)u=this.parseBorrowInterests(h,n);return this.filterByCurrencySinceLimit(u,e,i,s)}parseBorrowInterest(e,t=undefined){const i=this.safeInteger(e,"time");let s;return void 0!==t&&(s=t.symbol),{symbol:s,marginMode:void 0,currency:this.safeCurrencyCode(this.safeString(e,"currency")),interest:this.safeNumber(e,"interest"),interestRate:this.safeNumber(e,"interest_rate"),amountBorrowed:void 0,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.v2PrivatePostPrivateMarginGetUserConfig(e),i=this.safeValue(t,"result",{}),s=this.safeValue(i,"currency_configs",[]);return this.parseBorrowRates(s,"currency")}parseBorrowRates(e,t){const i=this.milliseconds(),s=[];for(let t=0;t<e.length;t++){const r=e[t];s.push({currency:this.safeCurrencyCode(this.safeString(r,"currency")),rate:this.safeNumber(r,"hourly_rate"),period:36e5,timestamp:i,datetime:this.iso8601(i),info:r})}return s}customHandleMarginModeAndParams(e,t={}){const i=this.safeString(this.options,"defaultType"),s=this.safeValue(t,"margin",!1);let a;if(t=this.omit(t,"margin"),[a,t]=this.handleMarginModeAndParams(e,t),void 0!==a){if("cross"!==a)throw new r.NotSupported(this.id+" only cross margin is supported")}else"margin"!==i&&!0!==s||(a="cross");return[a,t]}parseDepositWithdrawFee(e,t=undefined){const i=this.safeValue(e,"network_list"),s=i.length,r={info:e,withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0},networks:{}};if(void 0!==i)for(let e=0;e<s;e++){const a=i[e],n=this.safeString(a,"network_id"),o=this.safeString(t,"code"),d=this.networkIdToCode(n,o);r.networks[d]={deposit:{fee:void 0,percentage:void 0},withdraw:{fee:this.safeNumber(a,"withdrawal_fee"),percentage:!1}},1===s&&(r.withdraw.fee=this.safeNumber(a,"withdrawal_fee"),r.withdraw.percentage=!1)}return r}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.v2PrivatePostPrivateGetCurrencyNetworks(t),s=this.safeValue(i,"result"),r=this.safeValue(s,"currency_map");return this.parseDepositWithdrawFees(r,e,"full_name")}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const[n,d]=t;let c=this.urls.api[n]+"/"+e;const h=this.omit(s,this.extractParams(e));if("public"===d)Object.keys(h).length&&(c+="?"+this.urlencode(h));else{this.checkRequiredCredentials();const t=this.nonce().toString(),i=this.extend({},s),n=this.keysort(i),d=Object.keys(n);let c="";for(let e=0;e<d.length;e++)c=c+d[e].toString()+i[d[e]].toString();const h=e+t+this.apiKey+c+t,u=this.hmac(this.encode(h),this.encode(this.secret),o.J),l=d.length;if(a=this.json({id:t,method:e,params:s,api_key:this.apiKey,sig:u,nonce:t}),0===l){const e="{}",t="[]";a=a.replace(t,e)}r={"Content-Type":"application/json"}}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){const h=this.safeString(o,"code");if("0"!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r.ExchangeError(this.id+" "+n)}}}},3214:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(1304),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"currencycom",name:"Currency.com",countries:["BY"],rateLimit:100,certified:!1,pro:!0,version:"v2",has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:void 0,cancelAllOrders:void 0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:void 0,createLimitOrder:!0,createMarketOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:"emulated",fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowRate:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchBorrowRatesPerSymbol:void 0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:void 0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL2OrderBook:!0,fetchLedger:!0,fetchLedgerEntry:!1,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:void 0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:void 0,fetchOrderTrades:void 0,fetchPosition:void 0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchTransactions:!0,fetchTransfers:void 0,fetchWithdrawal:void 0,fetchWithdrawals:!0,reduceMargin:void 0,setLeverage:void 0,setMarginMode:void 0,setPositionMode:void 0,signIn:void 0,transfer:void 0,withdraw:void 0},timeframes:{"1m":"1m","5m":"5m","10m":"10m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","1d":"1d","1w":"1w"},hostname:"backend.currency.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/83718672-36745c00-a63e-11ea-81a9-677b1f789a4d.jpg",api:{public:"https://api-adapter.{hostname}/api",private:"https://api-adapter.{hostname}/api",marketcap:"https://marketcap.{hostname}/api"},test:{public:"https://demo-api-adapter.{hostname}/api",private:"https://demo-api-adapter.{hostname}/api"},www:"https://www.currency.com",referral:"https://currency.com/trading/signup?c=362jaimv&pid=referral",doc:["https://currency.com/api"],fees:"https://currency.com/fees-charges"},api:{public:{get:{"v1/time":1,"v1/exchangeInfo":1,"v1/depth":1,"v1/aggTrades":1,"v1/klines":1,"v1/ticker/24hr":1,"v2/time":1,"v2/exchangeInfo":1,"v2/depth":1,"v2/aggTrades":1,"v2/klines":1,"v2/ticker/24hr":1}},marketcap:{get:{"v1/assets":1,"v1/candles":1,"v1/orderbook":1,"v1/summary":1,"v1/ticker":1,"v1/token/assets":1,"v1/token/orderbook":1,"v1/token/summary":1,"v1/token/ticker":1,"v1/token/trades":1,"v1/token_crypto/OHLC":1,"v1/token_crypto/assets":1,"v1/token_crypto/orderbook":1,"v1/token_crypto/summary":1,"v1/token_crypto/ticker":1,"v1/token_crypto/trades":1,"v1/trades":1}},private:{get:{"v1/account":1,"v1/currencies":1,"v1/deposits":1,"v1/depositAddress":1,"v1/ledger":1,"v1/leverageSettings":1,"v1/myTrades":1,"v1/openOrders":1,"v1/tradingPositions":1,"v1/tradingPositionsHistory":1,"v1/transactions":1,"v1/withdrawals":1,"v2/account":1,"v2/currencies":1,"v2/deposits":1,"v2/depositAddress":1,"v2/ledger":1,"v2/leverageSettings":1,"v2/myTrades":1,"v2/openOrders":1,"v2/tradingPositions":1,"v2/tradingPositionsHistory":1,"v2/transactions":1,"v2/withdrawals":1},post:{"v1/order":1,"v1/updateTradingPosition":1,"v1/updateTradingOrder":1,"v1/closeTradingPosition":1,"v2/order":1,"v2/updateTradingPosition":1,"v2/updateTradingOrder":1,"v2/closeTradingPosition":1},delete:{"v1/order":1,"v2/order":1}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}},precisionMode:n.sh,options:{defaultTimeInForce:"GTC",warnOnFetchOpenOrdersWithoutSymbol:!0,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,parseOrderToPrecision:!1,newOrderRespType:{market:"FULL",limit:"RESULT",stop:"RESULT"},leverage_markets_suffix:"_LEVERAGE",collateralCurrencies:["USD","EUR","USDT"]},exceptions:{broad:{"FIELD_VALIDATION_ERROR Cancel is available only for LIMIT order":r.InvalidOrder,"API key does not exist":r.AuthenticationError,"Order would trigger immediately.":r.InvalidOrder,"Account has insufficient balance for requested action.":r.InsufficientFunds,"Rest API trading is not enabled.":r.ExchangeNotAvailable,"Combination of parameters invalid":r.BadRequest,"Invalid limit price":r.BadRequest,"Only leverage symbol allowed here:":r.BadSymbol,"market data service is not available":r.ExchangeNotAvailable,"your time is ahead of server":r.InvalidNonce},exact:{"-1000":r.ExchangeNotAvailable,"-1013":r.InvalidOrder,"-1022":r.AuthenticationError,"-1030":r.InvalidOrder,"-1100":r.InvalidOrder,"-1104":r.ExchangeError,"-1025":r.AuthenticationError,"-1128":r.BadRequest,"-2010":r.ExchangeError,"-2011":r.OrderNotFound,"-2013":r.OrderNotFound,"-2014":r.AuthenticationError,"-2015":r.AuthenticationError}},commonCurrencies:{ACN:"Accenture",AMC:"AMC Entertainment Holdings",BNS:"Bank of Nova Scotia",CAR:"Avis Budget Group Inc",CLR:"Continental Resources",EDU:"New Oriental Education & Technology Group Inc",ETN:"Eaton",FOX:"Fox Corporation",GM:"General Motors Co",IQ:"iQIYI",OSK:"Oshkosh",PLAY:"Dave & Buster's Entertainment"}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=await this.publicGetV2Time(e);return this.safeInteger(t,"serverTime")}async fetchCurrencies(e={}){if(!this.checkRequiredCredentials(!1))return;const t=await this.privateGetV2Currencies(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"displaySymbol"),a=this.safeCurrencyCode(r),n=this.safeNumber(s,"commissionFixed");i[a]={id:r,code:a,type:this.safeStringLower(s,"type"),name:this.safeString(s,"name"),active:void 0,deposit:void 0,withdraw:void 0,fee:n,precision:this.parseNumber(this.parsePrecision(this.safeString(s,"precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(s,"minWithdrawal"),max:this.safeNumber(s,"maxWithdrawal")},deposit:{min:this.safeNumber(s,"minDeposit"),max:void 0}},info:s}}return i}async fetchMarkets(e={}){const t=await this.publicGetV2ExchangeInfo(e);this.options.adjustForTimeDifference&&await this.loadTimeDifference();const i=this.safeValue(t,"symbols",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),n=this.safeString(t,"baseAsset"),o=this.safeString(t,"quoteAsset"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o);let h=d+"/"+c;const u=this.safeString(t,"marketType"),l="SPOT"===u,p=!1,f="LEVERAGE"===u,m=f;f&&(h=h.replace(this.options.leverage_markets_suffix,""),h+=":"+c);const v="TRADING"===this.safeString(t,"status"),g=this.safeString2(t,"exchangeFee","tradingFee");let y=this.safeString(t,"makerFee",g),b=this.safeString(t,"takerFee",g);y=a.O.stringDiv(y,"100"),b=a.O.stringDiv(b,"100");const w=this.safeValue(t,"filters",[]),S=this.indexBy(w,"filterType");let P,k,O=this.safeNumber(t,"tickSize");if("PRICE_FILTER"in S){const e=this.safeValue(S,"PRICE_FILTER",{});O=this.safeNumber(e,"tickSize"),P=this.safeNumber(e,"minPrice");const t=this.safeString(e,"maxPrice");void 0!==t&&a.O.stringGt(t,"0")&&(k=t)}let T=this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),A={min:void 0,max:void 0};if("LOT_SIZE"in S){const e=this.safeValue(S,"LOT_SIZE",{});T=this.safeNumber(e,"stepSize"),A={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}let G,I={min:void 0,max:void 0};if("MARKET_LOT_SIZE"in S){const e=this.safeValue(S,"MARKET_LOT_SIZE",{});I={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MIN_NOTIONAL"in S){const e=this.safeValue(S,"MIN_NOTIONAL",{});G=this.safeNumber(e,"minNotional")}const C=f||p;s.push({id:r,symbol:h,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:u,spot:l,margin:m,swap:f,future:p,option:!1,active:v,contract:C,linear:!!C||void 0,inverse:void 0,taker:this.parseNumber(b),maker:this.parseNumber(y),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:T,price:O},limits:{leverage:{min:void 0,max:void 0},amount:A,market:I,price:{min:P,max:this.parseNumber(k)},cost:{min:G,max:void 0}},info:t})}return s}async fetchAccounts(e={}){const t=await this.privateGetV2Account(e),i=this.safeValue(t,"balances",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeInteger(t,"accountId"),a=this.safeString(t,"asset"),n=this.safeCurrencyCode(a);s.push({id:r,type:void 0,currency:n,info:t})}return s}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetV2Account(e),i=this.safeNumber(t,"makerCommission"),s=this.safeNumber(t,"takerCommission"),r={};for(let e=0;e<this.symbols.length;e++){const a=this.symbols[e];r[a]={info:t,symbol:a,maker:i,taker:s,percentage:!0,tierBased:!1}}return r}parseBalance(e,t=undefined){const i={info:e},s=this.safeValue(e,"balances",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"free"),n.used=this.safeString(t,"locked"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetV2Account(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);const r=await this.publicGetV2Depth(this.extend(s,i)),a=this.parseOrderBook(r,e);return a.nonce=this.safeInteger(r,"lastUpdateId"),a}parseTicker(e,t=undefined){const i=this.safeInteger2(e,"closeTime","timestamp"),s=this.safeString2(e,"symbol","symbolName");t=this.safeMarket(s,t,"/");const r=this.safeString(e,"lastPrice");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString2(e,"bidPrice","bid"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString2(e,"askPrice","ofr"),askVolume:this.safeString(e,"ofrQty"),vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"openPrice"),close:r,last:r,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercent"),average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetV2Ticker24hr(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetV2Ticker24hr(t);return this.parseTickers(i,e)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,interval:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.startTime=i),void 0!==s&&(n.limit=s);const o=await this.publicGetV2Klines(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}parseTrade(e,t=undefined){const i=this.safeInteger2(e,"T","time"),s=this.safeString2(e,"p","price"),r=this.safeString2(e,"q","qty"),a=this.safeString2(e,"a","id");let n;const o=this.safeString(e,"orderId");let d,c;"m"in e?(n=e.m?"sell":"buy",d="taker"):"isBuyer"in e&&(n=e.isBuyer?"buy":"sell",d=e.isMaker?"maker":"taker"),"commission"in e&&(c={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAsset"))});const h=this.safeString(e,"symbol"),u=this.safeSymbol(h,t);return this.safeTrade({id:a,order:o,timestamp:i,datetime:this.iso8601(i),symbol:u,type:void 0,takerOrMaker:d,side:n,price:s,amount:r,cost:void 0,fee:c,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i),void 0!==t&&(a.startTime=t);const n=await this.publicGetV2AggTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseOrder(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,"/"),r=this.safeString(e,"orderId"),n=this.safeString(e,"price"),o=this.safeString(e,"origQty"),d=this.safeString(e,"executedQty"),c=a.O.stringAbs(d),h=this.parseOrderStatus(this.safeString(e,"status")),u=this.parseOrderTimeInForce(this.safeString(e,"timeInForce")),l=this.parseOrderType(this.safeString(e,"type")),p=this.parseOrderSide(this.safeString(e,"side")),f=this.safeInteger2(e,"time","transactTime"),m=this.safeValue(e,"fills");return this.safeOrder({info:e,id:r,timestamp:f,datetime:this.iso8601(f),lastTradeTimestamp:void 0,symbol:s,type:l,timeInForce:u,side:p,price:n,stopPrice:void 0,triggerPrice:void 0,amount:o,cost:void 0,average:void 0,filled:c,remaining:void 0,status:h,fee:void 0,trades:m},t)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",STOP:"stop"},e,e)}parseOrderTimeInForce(e){return this.safeString({GTC:"GTC",FOK:"FOK",IOC:"IOC"},e,e)}parseOrderSide(e){return this.safeString({BUY:"buy",SELL:"sell"},e,e)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e);let d;if(o.margin&&(d=this.safeString(this.options,"accountId"),d=this.safeString(n,"accountId",d),void 0===d))throw new r.ArgumentsRequired(this.id+" createOrder() requires an accountId parameter or an exchange.options['accountId'] option for "+o.type+" markets");const c=this.safeValue(this.options.newOrderRespType,t,"RESULT"),h={symbol:o.id,quantity:this.amountToPrecision(e,s),type:t.toUpperCase(),side:i.toUpperCase(),newOrderRespType:c};if("limit"===t)h.price=this.priceToPrecision(e,a),h.timeInForce=this.options.defaultTimeInForce;else if("stop"===t)h.type="STOP",h.price=this.priceToPrecision(e,a);else if("market"===t){const t=this.safeValue2(n,"triggerPrice","stopPrice");n=this.omit(n,["triggerPrice","stopPrice"]),void 0!==t&&(h.type="STOP",h.price=this.priceToPrecision(e,t))}const u=await this.privatePostV2Order(this.extend(h,n));return this.parseOrder(u,o)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let a;await this.loadMarkets();const n={};if(void 0!==e)a=this.market(e),n.symbol=a.id;else if(this.options.warnOnFetchOpenOrdersWithoutSymbol){const e=this.symbols.length,t=this.parseToInt(e/2);throw new r.ExchangeError(this.id+" fetchOpenOrders() WARNING: fetching open orders without specifying a symbol is rate-limited to one call per "+t.toString()+" seconds. Do not call this method frequently to avoid ban. Set "+this.id+'.options["warnOnFetchOpenOrdersWithoutSymbol"] = false to suppress this warning message.')}const o=await this.privateGetV2OpenOrders(this.extend(n,s));return this.parseOrders(o,a,t,i,s)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a=this.safeValue(i,"origClientOrderId"),n={symbol:s.id};void 0===a?n.orderId=e:n.origClientOrderId=a;const o=await this.privateDeleteV2Order(this.extend(n,i));return this.parseOrder(o,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.limit=i);const o=await this.privateGetV2MyTrades(this.extend(n,s));return this.parseTrades(o,a,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsByMethod("privateGetV2Deposits",e,t,i,s)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsByMethod("privateGetV2Withdrawals",e,t,i,s)}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsByMethod("privateGetV2Transactions",e,t,i,s)}async fetchTransactionsByMethod(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.currency(t)),void 0!==i&&(a.startTime=i),void 0!==s&&(a.limit=s);const o=await this[e](this.extend(a,r));return this.parseTransactions(o,n,i,s,r)}parseTransaction(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s,t),a=this.safeString(e,"commission"),n={currency:void 0,cost:void 0,rate:void 0};return void 0!==a&&(n.currency=r,n.cost=a),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"blockchainTransactionHash"),type:this.parseTransactionType(this.safeString(e,"type")),currency:r,network:void 0,amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatus(this.safeString(e,"state")),timestamp:i,datetime:this.iso8601(i),address:void 0,addressFrom:void 0,addressTo:void 0,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:void 0,comment:void 0,fee:n}}parseTransactionStatus(e){return this.safeString({APPROVAL:"pending",PROCESSED:"ok"},e,e)}parseTransactionType(e){return this.safeString({deposit:"deposit",withdrawal:"withdrawal"},e,e)}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e)),void 0!==t&&(r.startTime=t),void 0!==i&&(r.limit=i);const n=await this.privateGetV2Ledger(this.extend(r,s));return this.parseLedger(n,a,t,i)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"amount"),r=a.O.stringAbs(s),n=this.safeInteger(e,"timestamp"),o=this.safeString(e,"currency"),d=this.safeCurrencyCode(o,t),c=this.safeString(e,"commission");let h;void 0!==c&&(h={currency:d,cost:c});const u=a.O.stringLt(s,"0")?"out":"in";return{id:i,timestamp:n,datetime:this.iso8601(n),direction:u,account:void 0,referenceId:this.safeString(e,"blockchainTransactionHash"),referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeString(e,"type")),currency:d,amount:r,before:void 0,after:this.safeString(e,"balance"),status:this.parseLedgerEntryStatus(this.safeString(e,"status")),fee:h,info:e}}parseLedgerEntryStatus(e){return this.safeString({APPROVAL:"pending",PROCESSED:"ok",CANCELLED:"canceled"},e,e)}parseLedgerEntryType(e){return this.safeString({deposit:"transaction",withdrawal:"transaction",exchange_commission:"fee"},e,e)}async fetchLeverage(e,t={}){await this.loadMarkets();const i={symbol:this.market(e).id},s=await this.privateGetV2LeverageSettings(this.extend(i,t));return this.safeNumber(s,"value")}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={coin:i.id},r=await this.privateGetV2DepositAddress(this.extend(s,t));return this.parseDepositAddress(r,i)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address");return this.checkAddress(i),{currency:(t=this.safeCurrency(void 0,t)).code,address:i,tag:void 0,network:void 0,info:e}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t]+"/"+e;if("historicalTrades"===e&&(r={"X-MBX-APIKEY":this.apiKey}),"private"===t){this.checkRequiredCredentials();let e=this.urlencode(this.extend({timestamp:this.nonce(),recvWindow:this.options.recvWindow},s));e+="&signature="+this.hmac(this.encode(e),this.encode(this.secret),o.J),r={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i?n+="?"+e:(a=e,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(s).length&&(n+="?"+this.urlencode(s));return n=this.implodeHostname(n),{url:n,method:i,body:a,headers:r}}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetV2TradingPositions(t),s=this.safeValue(i,"positions",[]);return this.parsePositions(s,e)}parsePosition(e,t=undefined){const i=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,s=this.safeNumber(e,"createdTimestamp"),r=this.safeString(e,"openQuantity"),n=a.O.stringGt(r,"0")?"long":"short",o=a.O.stringAbs(r),d=this.safeNumber(e,"openPrice"),c=this.safeNumber(e,"upl"),h=this.safeString(e,"margin"),u=a.O.stringDiv("1",h);return{symbol:i,timestamp:s,datetime:this.iso8601(s),contracts:this.parseNumber(o),contractSize:void 0,entryPrice:d,collateral:void 0,side:n,unrealizedProfit:c,leverage:u,percentage:void 0,marginMode:void 0,notional:void 0,markPrice:void 0,liquidationPrice:void 0,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:this.parseNumber(h),maintenanceMarginPercentage:void 0,marginRatio:void 0,info:e,id:void 0}}handleErrors(e,t,i,s,a,n,o,d,c){if(418===e||429===e)throw new r.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+n);if(e>=400){if(n.indexOf("Price * QTY is zero or less")>=0)throw new r.InvalidOrder(this.id+" order cost = amount * price is zero or less "+n);if(n.indexOf("LOT_SIZE")>=0)throw new r.InvalidOrder(this.id+" order amount should be evenly divisible by lot size "+n);if(n.indexOf("PRICE_FILTER")>=0)throw new r.InvalidOrder(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid float value in general, use this.priceToPrecision (symbol, amount) "+n)}if(void 0===o)return;const h=this.safeString(o,"code");if(void 0!==h&&"0"!==h){const e=this.id+" "+this.json(o);this.throwExactlyMatchedException(this.exceptions.exact,h,e);const t=this.safeString(o,"msg");throw this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new r.ExchangeError(e)}}}},1753:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2708),r=i(6689),a=i(9292),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"delta",name:"Delta Exchange",countries:["VC"],rateLimit:300,version:"v2",has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDeposits:void 0,fetchLedger:!0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTransfer:void 0,fetchTransfers:void 0,fetchWithdrawal:void 0,fetchWithdrawals:void 0,transfer:!1,withdraw:!1},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","1d":"1d","7d":"7d","1w":"1w","2w":"2w","1M":"30d"},urls:{logo:"https://user-images.githubusercontent.com/1294454/99450025-3be60a00-2931-11eb-9302-f4fd8d8589aa.jpg",test:{public:"https://testnet-api.delta.exchange",private:"https://testnet-api.delta.exchange"},api:{public:"https://api.delta.exchange",private:"https://api.delta.exchange"},www:"https://www.delta.exchange",doc:["https://docs.delta.exchange"],fees:"https://www.delta.exchange/fees",referral:"https://www.delta.exchange/app/signup/?code=IULYNB"},api:{public:{get:["assets","settings","indices","products","tickers","tickers/{symbol}","l2orderbook/{symbol}","trades/{symbol}","history/candles","history/sparklines"]},private:{get:["orders","orders/leverage","positions","positions/margined","orders/history","fills","fills/history/download/csv","wallet/balances","wallet/transactions","wallet/transactions/download","deposits/address"],post:["orders","orders/batch","orders/leverage","positions/change_margin"],put:["orders","orders/batch"],delete:["orders","orders/all","orders/batch"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.0010"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0015")],[this.parseNumber("100"),this.parseNumber("0.0013")],[this.parseNumber("250"),this.parseNumber("0.0013")],[this.parseNumber("1000"),this.parseNumber("0.001")],[this.parseNumber("5000"),this.parseNumber("0.0009")],[this.parseNumber("10000"),this.parseNumber("0.00075")],[this.parseNumber("20000"),this.parseNumber("0.00065")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("100"),this.parseNumber("0.001")],[this.parseNumber("250"),this.parseNumber("0.0009")],[this.parseNumber("1000"),this.parseNumber("0.00075")],[this.parseNumber("5000"),this.parseNumber("0.0006")],[this.parseNumber("10000"),this.parseNumber("0.0005")],[this.parseNumber("20000"),this.parseNumber("0.0005")]]}}},options:{networks:{TRC20:"TRC20(TRON)",TRX:"TRC20(TRON)",BEP20:"BEP20(BSC)",BSC:"BEP20(BSC)"},networksById:{"BEP20(BSC)":"BSC","TRC20(TRON)":"TRC20"}},precisionMode:a.sh,requiredCredentials:{apiKey:!0,secret:!0},exceptions:{exact:{insufficient_margin:r.InsufficientFunds,order_size_exceed_available:r.InvalidOrder,risk_limits_breached:r.BadRequest,invalid_contract:r.BadSymbol,immediate_liquidation:r.InvalidOrder,out_of_bankruptcy:r.InvalidOrder,self_matching_disrupted_post_only:r.InvalidOrder,immediate_execution_post_only:r.InvalidOrder,bad_schema:r.BadRequest,invalid_api_key:r.AuthenticationError,invalid_signature:r.AuthenticationError,open_order_not_found:r.OrderNotFound,unavailable:r.ExchangeNotAvailable},broad:{}}})}async fetchTime(e={}){const t=await this.publicGetSettings(e),i=this.safeValue(t,"result",{});return this.safeIntegerProduct(i,"server_time",.001)}async fetchStatus(e={}){const t=await this.publicGetSettings(e),i=this.safeValue(t,"result",{});return{status:"true"===this.safeString(i,"under_maintenance")?"maintenance":"ok",updated:this.safeIntegerProduct(i,"server_time",.001,this.milliseconds()),eta:void 0,url:void 0,info:t}}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),i=this.safeValue(t,"result",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeInteger(t,"id"),n=this.safeCurrencyCode(r),o="enabled"===this.safeString(t,"deposit_status"),d="enabled"===this.safeString(t,"withdrawal_status"),c=o&&d;s[n]={id:r,numericId:a,code:n,name:this.safeString(t,"name"),info:t,active:c,deposit:o,withdraw:d,fee:this.safeNumber(t,"base_withdrawal_fee"),precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(t,"min_withdrawal_amount"),max:void 0}}}}return s}async loadMarkets(e=!1,t={}){const i=await super.loadMarkets(e,t);return(void 0===this.safeValue(this.options,"currenciesByNumericId")||e)&&(this.options.currenciesByNumericId=this.indexBy(this.currencies,"numericId")),(void 0===this.safeValue(this.options,"marketsByNumericId")||e)&&(this.options.marketsByNumericId=this.indexBy(this.markets,"numericId")),i}async fetchMarkets(e={}){const t=await this.publicGetProducts(e),i=this.safeValue(t,"result",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e];let r=this.safeString(t,"contract_type");const a=this.safeValue(t,"quoting_asset",{}),n=this.safeValue(t,"underlying_asset",{}),o=this.safeValue(t,"settling_asset"),d=this.safeValue(t,"product_specs",{}),c=this.safeString(n,"symbol"),h=this.safeString(a,"symbol"),u=this.safeString(o,"symbol"),l=this.safeString(t,"symbol"),p=this.safeInteger(t,"id"),f=this.safeCurrencyCode(c),m=this.safeCurrencyCode(h),v=this.safeCurrencyCode(u),g="put_options"===r,y="move_options"===r,b="spot"===r,w="perpetual_futures"===r,S="futures"===r,P="call_options"===r||g||y,k=this.safeString(t,"strike_price"),O=this.safeString(t,"settlement_time"),T=this.parse8601(O),A=this.safeNumber(t,"contract_value");let G;G=b?this.parseNumber(this.parsePrecision(this.safeString(d,"underlying_precision"))):this.parseNumber("1");const I=v===f;let C,M=f+"/"+m;if(w||S||P)if(M=M+":"+v,S||P)if(M=M+"-"+this.yymmdd(T),P){r="option";let e="C";C="call",g?(e="P",C="put"):y&&(e="M",C="move"),M=M+":"+k+":"+e}else r="future";else r="swap";else M=l;const x=this.safeString(t,"state");s.push({id:l,numericId:p,symbol:M,base:f,quote:m,settle:v,baseId:c,quoteId:h,settleId:u,type:r,spot:b,margin:!!b&&void 0,swap:w,future:S,option:P,active:"live"===x,contract:!b,linear:b?void 0:I,inverse:b?void 0:!I,taker:this.safeNumber(t,"taker_commission_rate"),maker:this.safeNumber(t,"maker_commission_rate"),contractSize:A,expiry:T,expiryDatetime:O,strike:this.parseNumber(k),optionType:C,precision:{amount:G,price:this.safeNumber(t,"tick_size")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber("1"),max:this.safeNumber(t,"position_size_limit")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_size"),max:void 0}},info:t})}return s}parseTicker(e,t=undefined){const i=this.safeIntegerProduct(e,"timestamp",.001),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeString(e,"close"),n=this.safeString(e,"open"),o=this.safeString(e,"volume"),d=this.safeString(e,"turnover");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:d,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetTickersSymbol(this.extend(s,t)),a=this.safeValue(r,"result",{});return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTickers(t),s=this.safeValue(i,"result",[]),r={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);r[t.symbol]=t}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetL2orderbookSymbol(this.extend(r,i)),n=this.safeValue(a,"result",{});return this.parseOrderBook(n,s.symbol,void 0,"buy","sell","price","size")}parseTrade(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"order_id");let r=this.parse8601(this.safeString(e,"created_at"));r=this.safeIntegerProduct(e,"timestamp",.001,r);const a=this.safeString(e,"price"),n=this.safeString(e,"size"),o=this.safeValue(e,"product",{}),d=this.safeString(o,"symbol"),c=this.safeSymbol(d,t),h=this.safeString(e,"seller_role");let u=this.safeString(e,"side");void 0===u&&("taker"===h?u="sell":"maker"===h&&(u="buy"));const l=this.safeString(e,"role"),p=this.safeValue(e,"meta_data",{});let f=this.safeString(p,"order_type");void 0!==f&&(f=f.replace("_order",""));const m=this.safeString(e,"commission");let v;if(void 0!==m){const e=this.safeValue(o,"settling_asset",{}),t=this.safeString(e,"symbol");v={cost:m,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:i,order:s,timestamp:r,datetime:this.iso8601(r),symbol:c,type:f,side:u,price:a,amount:n,cost:void 0,takerOrMaker:l,fee:v,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetTradesSymbol(this.extend(a,s)),o=this.safeValue(n,"result",[]);return this.parseTrades(o,r,t,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,resolution:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t);if(s=s||2e3,void 0===i){const e=this.seconds();n.end=e,n.start=e-s*o}else{const e=this.parseToInt(i/1e3);n.start=e,n.end=this.sum(e,s*o)}const d=await this.publicGetHistoryCandles(this.extend(n,r)),c=this.safeValue(d,"result",[]);return this.parseOHLCVs(c,a,t,i,s)}parseBalance(e){const t=this.safeValue(e,"result",[]),i={info:e},s=this.safeValue(this.options,"currenciesByNumericId",{});for(let e=0;e<t.length;e++){const r=t[e],a=this.safeString(r,"asset_id"),n=this.safeValue(s,a),o=void 0===n?a:n.code,d=this.account();d.total=this.safeString(r,"balance"),d.free=this.safeString(r,"available_balance"),i[o]=d}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetWalletBalances(e);return this.parseBalance(t)}async fetchPosition(e,t={}){await this.loadMarkets();const i=this.market(e),s={product_id:i.numericId},r=await this.privateGetPositions(this.extend(s,t)),a=this.safeValue(r,"result",{});return this.parsePosition(a,i)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetPositionsMargined(t),s=this.safeValue(i,"result",[]);return this.parsePositions(s,e)}parsePosition(e,t=undefined){const i=this.safeString(e,"product_symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeIntegerProduct(e,"timestamp",.001),a=this.safeString(e,"size");let o;return void 0!==a&&(n.O.stringGt(a,"0")?o="buy":n.O.stringLt(a,"0")&&(o="sell")),{info:e,id:void 0,symbol:s,notional:void 0,marginMode:void 0,liquidationPrice:this.safeNumber(e,"liquidation_price"),entryPrice:this.safeNumber(e,"entry_price"),unrealizedPnl:void 0,percentage:void 0,contracts:this.parseNumber(a),contractSize:this.safeNumber(t,"contractSize"),markPrice:void 0,side:o,hedged:void 0,timestamp:r,datetime:this.iso8601(r),maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:void 0,marginRatio:void 0}}parseOrderStatus(e){return this.safeString({open:"open",pending:"open",closed:"closed",cancelled:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"client_order_id"),r=this.parse8601(this.safeString(e,"created_at")),a=this.safeString(e,"product_id"),n=this.safeValue(this.options,"marketsByNumericId",{}),o=void 0===(t=this.safeValue(n,a,t))?a:t.symbol,d=this.parseOrderStatus(this.safeString(e,"state")),c=this.safeString(e,"side");let h=this.safeString(e,"order_type");h=h.replace("_order","");const u=this.safeString(e,"limit_price"),l=this.safeString(e,"size"),p=this.safeString(e,"unfilled_size"),f=this.safeString(e,"average_fill_price");let m;const v=this.safeString(e,"paid_commission");if(void 0!==v){let e;if(void 0!==t){const i=this.safeValue(t.info,"settling_asset",{}),s=this.safeString(i,"symbol");e=this.safeCurrencyCode(s)}m={cost:v,currency:e}}return this.safeOrder({info:e,id:i,clientOrderId:s,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,symbol:o,type:h,side:c,price:u,amount:l,cost:void 0,average:f,filled:void 0,remaining:p,status:d,fee:m,trades:void 0},t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=t+"_order",o=this.market(e),d={product_id:o.numericId,size:this.amountToPrecision(o.symbol,s),side:i,order_type:n};"limit"===t&&(d.limit_price=this.priceToPrecision(o.symbol,r));const c=this.safeString2(a,"clientOrderId","client_order_id");a=this.omit(a,["clientOrderId","client_order_id"]),void 0!==c&&(d.client_order_id=c);const h=await this.privatePostOrders(this.extend(d,a)),u=this.safeValue(h,"result",{});return this.parseOrder(u,o)}async editOrder(e,t,i,s,r,a=undefined,n={}){await this.loadMarkets();const o=this.market(t),d={id:parseInt(e),product_id:o.numericId};void 0!==r&&(d.size=parseInt(this.amountToPrecision(t,r))),void 0!==a&&(d.limit_price=this.priceToPrecision(t,a));const c=await this.privatePutOrders(this.extend(d,n)),h=this.safeValue(c,"result");return this.parseOrder(h,o)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={id:parseInt(e),product_id:s.numericId},n=await this.privateDeleteOrders(this.extend(a,i)),o=this.safeValue(n,"result");return this.parseOrder(o,s)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const i={product_id:this.market(e).numericId};return this.privateDeleteOrdersAll(this.extend(i,t))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersWithMethod("privateGetOrders",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersWithMethod("privateGetOrdersHistory",e,t,i,s)}async fetchOrdersWithMethod(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t),a.product_ids=n.numericId),void 0!==i&&(a.start_time=i.toString()+"000"),void 0!==s&&(a.page_size=s);const o=await this[e](this.extend(a,r)),d=this.safeValue(o,"result",[]);return this.parseOrders(d,n,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.product_ids=a.numericId),void 0!==t&&(r.start_time=t.toString()+"000"),void 0!==i&&(r.page_size=i);const n=await this.privateGetFills(this.extend(r,s)),o=this.safeValue(n,"result",[]);return this.parseTrades(o,a,t,i)}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset_id=a.numericId),void 0!==i&&(r.page_size=i);const n=await this.privateGetWalletTransactions(this.extend(r,s)),o=this.safeValue(n,"result",[]);return this.parseLedger(o,a,t,i)}parseLedgerEntryType(e){return this.safeString({pnl:"pnl",deposit:"transaction",withdrawal:"transaction",commission:"fee",conversion:"trade",referral_bonus:"referral",commission_rebate:"rebate"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"uuid");let s;const r=this.safeValue(e,"meta_data",{}),a=this.safeString(r,"transaction_id");let o=this.safeString(e,"transaction_type");"deposit"===o||"commission_rebate"===o||"referral_bonus"===o||"pnl"===o||"withdrawal_cancellation"===o||"promo_credit"===o?s="in":"withdrawal"!==o&&"commission"!==o&&"conversion"!==o&&"perpetual_futures_funding"!==o||(s="out"),o=this.parseLedgerEntryType(o);const d=this.safeInteger(e,"asset_id"),c=this.safeValue(this.options,"currenciesByNumericId"),h=void 0===(t=this.safeValue(c,d,t))?void 0:t.code,u=this.safeString(e,"amount"),l=this.parse8601(this.safeString(e,"created_at")),p=this.safeString(e,"balance"),f=n.O.stringMax("0",n.O.stringSub(p,u));return{info:e,id:i,direction:s,account:void 0,referenceId:a,referenceAccount:void 0,type:o,currency:h,amount:this.parseNumber(u),before:this.parseNumber(f),after:this.parseNumber(p),status:"ok",timestamp:l,datetime:this.iso8601(l),fee:void 0}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={asset_symbol:i.id},r=this.safeStringUpper(t,"network");void 0!==r&&(s.network=this.networkCodeToId(r,e),t=this.omit(t,"network"));const a=await this.privateGetDepositsAddress(this.extend(s,t)),n=this.safeValue(a,"result",{});return this.parseDepositAddress(n,i)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"asset_symbol"),r=this.safeString(e,"network");return this.checkAddress(i),{currency:this.safeCurrencyCode(s,t),address:i,tag:this.safeString(e,"memo"),network:this.networkIdToCode(r),info:e}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n="/"+this.version+"/"+this.implodeParams(e,s);let d=this.urls.api[t]+n;const c=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(c).length&&(d+="?"+this.urlencode(c));else if("private"===t){this.checkRequiredCredentials();const e=this.seconds().toString();r={"api-key":this.apiKey,timestamp:e};let t=i+e+n;if("GET"===i||"DELETE"===i){if(Object.keys(c).length){const e="?"+this.urlencode(c);t+=e,d+=e}}else t+=a=this.json(c),r["Content-Type"]="application/json";const s=this.hmac(this.encode(t),this.encode(this.secret),o.J);r.signature=s}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeValue(o,"error",{}),u=this.safeString(h,"code");if(void 0!==u){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,u,e),new r.ExchangeError(e)}}}},24:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(6563),r=i(9292),a=i(6689),n=i(2194),o=i(1372),d=i(2523);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"deribit",name:"Deribit",countries:["NL"],version:"v2",userAgent:void 0,rateLimit:50,pro:!0,has:{CORS:!0,spot:!1,margin:!1,swap:!0,future:!0,option:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDeposit:!1,fetchDepositAddress:!0,fetchDeposits:!0,fetchHistoricalVolatility:!0,fetchIndexOHLCV:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1","3m":"3","5m":"5","10m":"10","15m":"15","30m":"30","1h":"60","2h":"120","3h":"180","6h":"360","12h":"720","1d":"1D"},urls:{test:{rest:"https://test.deribit.com"},logo:"https://user-images.githubusercontent.com/1294454/41933112-9e2dd65a-798b-11e8-8440-5bab2959fcb8.jpg",api:{rest:"https://www.deribit.com"},www:"https://www.deribit.com",doc:["https://docs.deribit.com/v2","https://github.com/deribit"],fees:"https://www.deribit.com/pages/information/fees",referral:{url:"https://www.deribit.com/reg-1189.4038",discount:.1}},api:{public:{get:{auth:1,exchange_token:1,fork_token:1,set_heartbeat:1,disable_heartbeat:1,get_time:1,hello:1,status:1,test:1,subscribe:1,unsubscribe:1,unsubscribe_all:1,get_announcements:1,get_book_summary_by_currency:1,get_book_summary_by_instrument:1,get_contract_size:1,get_currencies:1,get_delivery_prices:1,get_funding_chart_data:1,get_funding_rate_history:1,get_funding_rate_value:1,get_historical_volatility:1,get_index:1,get_index_price:1,get_index_price_names:1,get_instrument:1,get_instruments:1,get_last_settlements_by_currency:1,get_last_settlements_by_instrument:1,get_last_trades_by_currency:1,get_last_trades_by_currency_and_time:1,get_last_trades_by_instrument:1,get_last_trades_by_instrument_and_time:1,get_mark_price_history:1,get_order_book:1,get_trade_volumes:1,get_tradingview_chart_data:1,get_volatility_index_data:1,ticker:1}},private:{get:{logout:1,enable_cancel_on_disconnect:1,disable_cancel_on_disconnect:1,get_cancel_on_disconnect:1,subscribe:1,unsubscribe:1,unsubscribe_all:1,change_api_key_name:1,change_scope_in_api_key:1,change_subaccount_name:1,create_api_key:1,create_subaccount:1,disable_api_key:1,disable_tfa_for_subaccount:1,enable_affiliate_program:1,enable_api_key:1,get_access_log:1,get_account_summary:1,get_affiliate_program_info:1,get_email_language:1,get_new_announcements:1,get_portfolio_margins:1,get_position:1,get_positions:1,get_subaccounts:1,get_subaccounts_details:1,get_transaction_log:1,list_api_keys:1,remove_api_key:1,remove_subaccount:1,reset_api_key:1,set_announcement_as_read:1,set_api_key_as_default:1,set_email_for_subaccount:1,set_email_language:1,set_password_for_subaccount:1,toggle_notifications_from_subaccount:1,toggle_subaccount_login:1,execute_block_trade:4,get_block_trade:1,get_last_block_trades_by_currency:1,invalidate_block_trade_signature:1,verify_block_trade:4,buy:4,sell:4,edit:4,edit_by_label:4,cancel:4,cancel_all:4,cancel_all_by_currency:4,cancel_all_by_instrument:4,cancel_by_label:4,close_position:4,get_margins:1,get_mmp_config:1,get_open_orders_by_currency:1,get_open_orders_by_instrument:1,get_order_history_by_currency:1,get_order_history_by_instrument:1,get_order_margin_by_ids:1,get_order_state:1,get_stop_order_history:1,get_trigger_order_history:1,get_user_trades_by_currency:1,get_user_trades_by_currency_and_time:1,get_user_trades_by_instrument:1,get_user_trades_by_instrument_and_time:1,get_user_trades_by_order:1,reset_mmp:1,set_mmp_config:1,get_settlement_history_by_instrument:1,get_settlement_history_by_currency:1,cancel_transfer_by_id:1,cancel_withdrawal:1,create_deposit_address:1,get_current_deposit_address:1,get_deposits:1,get_transfers:1,get_withdrawals:1,submit_transfer_to_subaccount:1,submit_transfer_to_user:1,withdraw:1}}},exceptions:{9999:a.PermissionDenied,1e4:a.AuthenticationError,10001:a.ExchangeError,10002:a.InvalidOrder,10003:a.InvalidOrder,10004:a.OrderNotFound,10005:a.InvalidOrder,10006:a.InvalidOrder,10007:a.InvalidOrder,10008:a.InvalidOrder,10009:a.InsufficientFunds,10010:a.OrderNotFound,10011:a.InvalidOrder,10012:a.InvalidOrder,10013:a.PermissionDenied,10014:a.PermissionDenied,10015:a.PermissionDenied,10016:a.PermissionDenied,10017:a.PermissionDenied,10018:a.PermissionDenied,10019:a.PermissionDenied,10020:a.ExchangeError,10021:a.InvalidOrder,10022:a.InvalidOrder,10023:a.InvalidOrder,10024:a.InvalidOrder,10025:a.InvalidOrder,10026:a.InvalidOrder,10027:a.InvalidOrder,10028:a.DDoSProtection,10029:a.OrderNotFound,10030:a.ExchangeError,10031:a.ExchangeError,10032:a.InvalidOrder,10033:a.NotSupported,10034:a.InvalidOrder,10035:a.InvalidOrder,10036:a.InvalidOrder,10040:a.ExchangeNotAvailable,10041:a.OnMaintenance,10043:a.InvalidOrder,10044:a.InvalidOrder,10045:a.InvalidOrder,10046:a.InvalidOrder,10047:a.DDoSProtection,10048:a.ExchangeError,11008:a.InvalidOrder,11029:a.BadRequest,11030:a.ExchangeError,11031:a.ExchangeError,11035:a.DDoSProtection,11036:a.InvalidOrder,11037:a.BadRequest,11038:a.InvalidOrder,11039:a.InvalidOrder,11041:a.InvalidOrder,11042:a.PermissionDenied,11043:a.BadRequest,11044:a.InvalidOrder,11045:a.BadRequest,11046:a.BadRequest,11047:a.BadRequest,11048:a.ExchangeError,11049:a.BadRequest,11050:a.BadRequest,11051:a.OnMaintenance,11052:a.ExchangeError,11053:a.ExchangeError,11090:a.InvalidAddress,11091:a.InvalidAddress,11092:a.InvalidAddress,11093:a.DDoSProtection,11094:a.ExchangeError,11095:a.ExchangeError,11096:a.ExchangeError,12e3:a.AuthenticationError,12001:a.DDoSProtection,12002:a.ExchangeError,12998:a.AuthenticationError,12003:a.AuthenticationError,12004:a.AuthenticationError,12005:a.AuthenticationError,12100:a.ExchangeError,12999:a.AuthenticationError,13e3:a.AuthenticationError,13001:a.AuthenticationError,13002:a.PermissionDenied,13003:a.AuthenticationError,13004:a.AuthenticationError,13005:a.AuthenticationError,13006:a.AuthenticationError,13007:a.AuthenticationError,13008:a.ExchangeError,13009:a.AuthenticationError,13010:a.BadRequest,13011:a.BadRequest,13012:a.PermissionDenied,13013:a.BadRequest,13014:a.BadRequest,13015:a.BadRequest,13016:a.BadRequest,13017:a.ExchangeError,13018:a.ExchangeError,13019:a.ExchangeError,13020:a.ExchangeError,13021:a.PermissionDenied,13025:a.ExchangeError,"-32602":a.BadRequest,"-32601":a.BadRequest,"-32700":a.BadRequest,"-32000":a.BadRequest,11054:a.InvalidOrder},precisionMode:r.sh,options:{code:"BTC",fetchBalance:{code:"BTC"},fetchPositions:{code:"BTC"},transfer:{method:"privateGetSubmitTransferToSubaccount"}}})}async fetchTime(e={}){const t=await this.publicGetGetTime(e);return this.safeInteger(t,"result")}codeFromOptions(e,t={}){const i=this.safeValue(this.options,"code","BTC"),s=this.safeValue(this.options,e,{}),r=this.safeValue(s,"code",i);return this.safeValue(t,"code",r)}async fetchStatus(e={}){const t=await this.publicGetStatus(e),i=this.safeValue(t,"result");return{status:"false"===this.safeString(i,"locked")?"ok":"maintenance",updated:this.safeIntegerProduct(t,"usIn",.001,this.milliseconds()),eta:void 0,url:void 0,info:t}}async fetchAccounts(e={}){await this.loadMarkets();const t=await this.privateGetGetSubaccounts(e),i=this.safeValue(t,"result",[]);return this.parseAccounts(i)}parseAccount(e,t=undefined){return{info:e,id:this.safeString(e,"id"),type:this.safeString(e,"type"),code:this.safeCurrencyCode(void 0,t)}}async fetchMarkets(e={}){const t=await this.publicGetGetCurrencies(e),i=this.safeValue(t,"result",[]),s=[];for(let t=0;t<i.length;t++){const r={currency:this.safeString(i[t],"currency")},a=await this.publicGetGetInstruments(this.extend(r,e)),n=this.safeValue(a,"result",[]);for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"instrument_name"),r=this.safeString(t,"base_currency"),a=this.safeString(t,"counter_currency"),o=this.safeString(t,"settlement_currency"),d=this.safeCurrencyCode(r),c=this.safeCurrencyCode(a),h=this.safeCurrencyCode(o),u=this.safeString(t,"kind"),l="perpetual"===this.safeValue(t,"settlement_period"),p=!l&&u.indexOf("future")>=0,f=u.indexOf("option")>=0,m=u.indexOf("combo")>=0,v=this.safeInteger(t,"expiration_timestamp");let g,y,b=i,w="swap";if(p?w="future":f&&(w="option"),!m&&(b=d+"/"+c+":"+h,(f||p)&&(b=b+"-"+this.yymmdd(v,""),f))){g=this.safeNumber(t,"strike"),y=this.safeString(t,"option_type");const e="call"===y?"C":"P";b=b+"-"+this.numberToString(g)+"-"+e}const S=this.safeNumber(t,"min_trade_amount"),P=this.safeNumber(t,"tick_size");s.push({id:i,symbol:b,base:d,quote:c,settle:h,baseId:r,quoteId:a,settleId:o,type:w,spot:!1,margin:!1,swap:l,future:p,option:f,active:this.safeValue(t,"is_active"),contract:!0,linear:h===c,inverse:h!==c,taker:this.safeNumber(t,"taker_commission"),maker:this.safeNumber(t,"maker_commission"),contractSize:this.safeNumber(t,"contract_size"),expiry:v,expiryDatetime:this.iso8601(v),strike:g,optionType:y,precision:{amount:S,price:P},limits:{leverage:{min:void 0,max:void 0},amount:{min:S,max:void 0},price:{min:P,max:void 0},cost:{min:void 0,max:void 0}},info:t})}}return s}parseBalance(e){const t={info:e},i=this.safeString(e,"currency"),s=this.safeCurrencyCode(i),r=this.account();return r.free=this.safeString(e,"available_funds"),r.used=this.safeString(e,"maintenance_margin"),r.total=this.safeString(e,"equity"),t[s]=r,this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.codeFromOptions("fetchBalance",e),i={currency:this.currency(t).id},s=await this.privateGetGetAccountSummary(this.extend(i,e)),r=this.safeValue(s,"result",{});return this.parseBalance(r)}async createDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.privateGetCreateDepositAddress(this.extend(i,t)),r=this.safeValue(s,"result",{}),a=this.safeString(r,"address");return this.checkAddress(a),{currency:e,address:a,tag:void 0,info:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.privateGetGetCurrentDepositAddress(this.extend(i,t)),r=this.safeValue(s,"result",{}),a=this.safeString(r,"address");return this.checkAddress(a),{currency:e,address:a,tag:void 0,network:void 0,info:s}}parseTicker(e,t=undefined){const i=this.safeInteger2(e,"timestamp","creation_timestamp"),s=this.safeString(e,"instrument_name"),r=this.safeSymbol(s,t),a=this.safeString2(e,"last_price","last"),n=this.safeValue(e,"stats",e);return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString2(n,"high","max_price"),low:this.safeString2(n,"low","min_price"),bid:this.safeString2(e,"best_bid_price","bid_price"),bidVolume:this.safeString(e,"best_bid_amount"),ask:this.safeString2(e,"best_ask_price","ask_price"),askVolume:this.safeString(e,"best_ask_amount"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(n,"volume"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={instrument_name:i.id},r=await this.publicGetTicker(this.extend(s,t)),a=this.safeValue(r,"result");return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.codeFromOptions("fetchTickers",t),s={currency:this.currency(i).id},r=await this.publicGetGetBookSummaryByCurrency(this.extend(s,t)),a=this.safeValue(r,"result",[]),n={};for(let e=0;e<a.length;e++){const t=this.parseTicker(a[e]);n[t.symbol]=t}return this.filterByArray(n,"symbol",e)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={instrument_name:a.id,resolution:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t),d=this.milliseconds();void 0===i?(void 0===s&&(s=1e3),n.start_timestamp=d-(s-1)*o*1e3,n.end_timestamp=d):(n.start_timestamp=i,n.end_timestamp=void 0===s?d:this.sum(i,s*o*1e3));const c=await this.publicGetGetTradingviewChartData(this.extend(n,r)),h=this.safeValue(c,"result",{}),u=this.convertTradingViewToOHLCV(h,"ticks","open","high","low","close","volume",!0);return this.parseOHLCVs(u,a,t,i,s)}parseTrade(e,t=undefined){const i=this.safeString(e,"trade_id"),s=this.safeString(e,"instrument_name"),r=this.safeSymbol(s,t),a=this.safeInteger(e,"timestamp"),o=this.safeString(e,"direction"),d=this.safeString(e,"price");t=this.safeMarket(s,t);const c=this.safeString(e,"amount");let h=n.O.stringMul(c,d);t.inverse&&(h=n.O.stringDiv(c,d));const u=this.safeString(e,"liquidity");let l;void 0!==u&&(l="M"===u?"maker":"taker");const p=this.safeString(e,"fee");let f;if(void 0!==p){const t=this.safeString(e,"fee_currency");f={cost:p,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:i,info:e,timestamp:a,datetime:this.iso8601(a),symbol:r,order:this.safeString(e,"order_id"),type:this.safeString(e,"order_type"),side:o,takerOrMaker:l,price:d,amount:c,cost:h,fee:f},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={instrument_name:r.id,include_old:!0},n=void 0===t?"publicGetGetLastTradesByInstrument":"publicGetGetLastTradesByInstrumentAndTime";void 0!==t&&(a.start_timestamp=t),void 0!==i&&(a.count=i);const o=await this[n](this.extend(a,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"trades",[]);return this.parseTrades(c,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=this.codeFromOptions("fetchTradingFees",e),i={currency:this.currency(t).id,extended:!0},s=await this.privateGetGetAccountSummary(this.extend(i,e)),r=this.safeValue(s,"result",{}),a=this.safeValue(r,"fees",[]);let n={},o={},d={};for(let e=0;e<a.length;e++){const t=a[e],i=this.safeString(t,"instrument_type");"future"===i?o={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")}:"perpetual"===i?n={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")}:"option"===i&&(d={info:t,maker:this.safeNumber(t,"maker_fee"),taker:this.safeNumber(t,"taker_fee")})}const c={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],i=this.market(t);let s={info:i,symbol:t,percentage:!0,tierBased:!0,maker:i.maker,taker:i.taker};i.swap?s=this.extend(s,n):i.future?s=this.extend(s,o):i.option&&(s=this.extend(s,d)),c[t]=s}return c}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={instrument_name:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetGetOrderBook(this.extend(r,i)),n=this.safeValue(a,"result",{}),o=this.safeInteger(n,"timestamp"),d=this.safeInteger(n,"change_id"),c=this.parseOrderBook(n,s.symbol,o);return c.nonce=d,c}parseOrderStatus(e){return this.safeString({open:"open",cancelled:"canceled",filled:"closed",rejected:"rejected",untriggered:"open"},e,e)}parseTimeInForce(e){return this.safeString({good_til_cancelled:"GTC",fill_or_kill:"FOK",immediate_or_cancel:"IOC"},e,e)}parseOrderType(e){return this.safeString({stop_limit:"limit",take_limit:"limit",stop_market:"market",take_market:"market"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"instrument_name");t=this.safeMarket(i,t);const s=this.safeInteger(e,"creation_timestamp"),r=this.safeInteger(e,"last_update_timestamp"),a=this.safeString(e,"order_id");let o=this.safeString(e,"price");"market_price"===o&&(o=void 0);const d=this.safeString(e,"average_price"),c=this.safeString(e,"filled_amount"),h=this.safeString(e,"amount");let u,l=n.O.stringMul(c,d);t.inverse&&0!==this.parseNumber(d)&&(l=n.O.stringDiv(h,d)),void 0!==c&&n.O.stringGt(c,"0")&&(u=r);const p=this.parseOrderStatus(this.safeString(e,"order_state")),f=this.safeStringLower(e,"direction");let m,v=this.safeString(e,"commission");void 0!==v&&(v=n.O.stringAbs(v),m={cost:v,currency:t.base});const g=this.safeString(e,"order_type"),y=this.parseOrderType(g),b=this.safeValue(e,"trades"),w=this.parseTimeInForce(this.safeString(e,"time_in_force")),S=this.safeValue(e,"stop_price"),P=this.safeValue(e,"post_only");return this.safeOrder({info:e,id:a,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:u,symbol:t.symbol,type:y,timeInForce:w,postOnly:P,side:f,price:o,stopPrice:S,triggerPrice:S,amount:h,cost:l,average:d,filled:c,remaining:void 0,status:p,fee:m,trades:b},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},r=await this.privateGetGetOrderState(this.extend(s,i)),a=this.safeValue(r,"result");return this.parseOrder(a)}async createOrder(e,t,i,s,r=undefined,n={}){await this.loadMarkets();const o=this.market(e);s=o.inverse||"USDC"===o.settle?this.amountToPrecision(e,s):this.currencyToPrecision(e,s);const d={instrument_name:o.id,amount:s,type:t},c=this.safeStringUpper(n,"timeInForce"),h=this.safeValue2(n,"reduceOnly","reduce_only"),u=this.safeValue(n,"stopLossPrice"),l=this.safeValue(n,"takeProfitPrice"),p="stop_limit"===t,f="stop_market"===t,m="take_limit"===t,v="take_market"===t,g=p||f||void 0!==u,y=m||v||void 0!==l;if(g&&y)throw new a.InvalidOrder(this.id+" createOrder () only allows one of stopLossPrice or takeProfitPrice to be specified");const b=g||y,w="limit"===t||p||m,S="market"===t||f||v,P=this.safeValue(n,"post_only"),k=this.isPostOnly(S,P,n);if(w?(d.type="limit",d.price=this.priceToPrecision(e,r)):d.type="market",b){const t=void 0!==u?u:l;d.trigger_price=this.priceToPrecision(e,t),d.trigger="last_price",d.type=g?S?"stop_market":"stop_limit":S?"take_market":"take_limit"}h&&(d.reduce_only=!0),k&&(d.post_only=!0,d.reject_post_only=!0),void 0!==c&&("GTC"===c&&(d.time_in_force="good_til_cancelled"),"IOC"===c&&(d.time_in_force="immediate_or_cancel"),"FOK"===c&&(d.time_in_force="fill_or_kill"));const O="privateGet"+this.capitalize(i);n=this.omit(n,["timeInForce","stopLossPrice","takeProfitPrice","postOnly","reduceOnly"]);const T=await this[O](this.extend(d,n)),A=this.safeValue(T,"result",{}),G=this.safeValue(A,"order"),I=this.safeValue(A,"trades",[]);return G.trades=I,this.parseOrder(G,o)}async editOrder(e,t,i,s,r=undefined,n=undefined,o={}){if(void 0===r)throw new a.ArgumentsRequired(this.id+" editOrder() requires an amount argument");if(void 0===n)throw new a.ArgumentsRequired(this.id+" editOrder() requires a price argument");await this.loadMarkets();const d={order_id:e,amount:this.amountToPrecision(t,r),price:this.priceToPrecision(t,n)},c=await this.privateGetEdit(this.extend(d,o)),h=this.safeValue(c,"result",{}),u=this.safeValue(h,"order"),l=this.safeValue(h,"trades",[]);return u.trades=l,this.parseOrder(u)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},r=await this.privateGetCancel(this.extend(s,i)),a=this.safeValue(r,"result",{});return this.parseOrder(a)}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s;if(void 0===e)s="privateGetCancelAll";else{s="privateGetCancelAllByInstrument";const t=this.market(e);i.instrument_name=t.id}return await this[s](this.extend(i,t))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n;if(void 0===e){const e=this.codeFromOptions("fetchOpenOrders",s),t=this.currency(e);r.currency=t.id,n="privateGetGetOpenOrdersByCurrency"}else a=this.market(e),r.instrument_name=a.id,n="privateGetGetOpenOrdersByInstrument";const o=await this[n](this.extend(r,s)),d=this.safeValue(o,"result",[]);return this.parseOrders(d,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n;if(void 0===e){const e=this.codeFromOptions("fetchClosedOrders",s),t=this.currency(e);r.currency=t.id,n="privateGetGetOrderHistoryByCurrency"}else a=this.market(e),r.instrument_name=a.id,n="privateGetGetOrderHistoryByInstrument";const o=await this[n](this.extend(r,s)),d=this.safeValue(o,"result",[]);return this.parseOrders(d,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={order_id:e},n=await this.privateGetGetUserTradesByOrder(this.extend(a,r)),o=this.safeValue(n,"result",{});return this.parseTrades(o,void 0,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={include_old:!0};let a,n;if(void 0===e){const e=this.codeFromOptions("fetchMyTrades",s),i=this.currency(e);r.currency=i.id,void 0===t?n="privateGetGetUserTradesByCurrency":(n="privateGetGetUserTradesByCurrencyAndTime",r.start_timestamp=t)}else a=this.market(e),r.instrument_name=a.id,void 0===t?n="privateGetGetUserTradesByInstrument":(n="privateGetGetUserTradesByInstrumentAndTime",r.start_timestamp=t);void 0!==i&&(r.count=i);const o=await this[n](this.extend(r,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"trades",[]);return this.parseTrades(c,a,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),n={currency:r.id};void 0!==i&&(n.count=i);const o=await this.privateGetGetDeposits(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"data",[]);return this.parseTransactions(c,r,t,i,s)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),n={currency:r.id};void 0!==i&&(n.count=i);const o=await this.privateGetGetWithdrawals(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"data",[]);return this.parseTransactions(c,r,t,i,s)}parseTransactionStatus(e){return this.safeString({completed:"ok",unconfirmed:"pending"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"currency"),s=this.safeCurrencyCode(i,t),r=this.safeInteger2(e,"created_timestamp","received_timestamp"),a=this.safeInteger(e,"updated_timestamp"),n=this.parseTransactionStatus(this.safeString(e,"state")),o=this.safeString(e,"address"),d=this.safeNumber(e,"fee");let c,h="deposit";return void 0!==d&&(h="withdrawal",c={cost:d,currency:s}),{info:e,id:this.safeString(e,"id"),txid:this.safeString(e,"transaction_id"),timestamp:r,datetime:this.iso8601(r),address:o,addressTo:o,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:h,amount:this.safeNumber(e,"amount"),currency:s,status:n,updated:a,fee:c}}parsePosition(e,t=undefined){const i=this.safeString(e,"instrument_name");t=this.safeMarket(i,t);let s=this.safeString(e,"direction");s="buy"===s?"long":"short";const r=this.safeString(e,"floating_profit_loss"),a=this.safeString(e,"initial_margin"),o=this.safeString(e,"size_currency"),d=this.safeString(e,"maintenance_margin"),c=n.O.stringMul(n.O.stringDiv(r,a),"100"),h=this.milliseconds();return{info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:h,datetime:this.iso8601(h),initialMargin:this.parseNumber(a),initialMarginPercentage:this.parseNumber(n.O.stringMul(n.O.stringDiv(a,o),"100")),maintenanceMargin:this.parseNumber(d),maintenanceMarginPercentage:this.parseNumber(n.O.stringMul(n.O.stringDiv(d,o),"100")),entryPrice:this.safeNumber(e,"average_price"),notional:this.parseNumber(o),leverage:this.safeInteger(e,"leverage"),unrealizedPnl:this.parseNumber(r),contracts:void 0,contractSize:this.safeNumber(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"estimated_liquidation_price"),markPrice:this.safeNumber(e,"mark_price"),collateral:void 0,marginMode:void 0,side:s,percentage:this.parseNumber(c)}}async fetchPosition(e,t={}){await this.loadMarkets();const i={instrument_name:this.market(e).id},s=await this.privateGetGetPosition(this.extend(i,t)),r=this.safeValue(s,"result");return this.parsePosition(r)}async fetchPositions(e=undefined,t={}){let i;if(await this.loadMarkets(),void 0===e)i=this.codeFromOptions("fetchPositions",t);else if("string"==typeof e)i=e,e=void 0;else if(Array.isArray(e)){if(1!==e.length)throw new a.BadRequest(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");i=this.market(e[0]).base}const s={currency:this.currency(i).id},r=await this.privateGetGetPositions(this.extend(s,t)),n=this.safeValue(r,"result");return this.parsePositions(n,e)}async fetchHistoricalVolatility(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.publicGetGetHistoricalVolatility(this.extend(i,t)),r=this.safeValue(s,"result",{}),a=[];for(let e=0;e<r.length;e++){const t=this.safeInteger(r[e],0),i=this.safeNumber(r[e],1);a.push({info:s,timestamp:t,datetime:this.iso8601(t),volatility:i})}return a}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchTransfers() requires a currency code argument");await this.loadMarkets();const r=this.currency(e),n={currency:r.id};void 0!==i&&(n.count=i);const o=await this.privateGetGetTransfers(this.extend(n,s)),d=this.safeValue(o,"result",{}),c=this.safeValue(d,"data",[]);return this.parseTransfers(c,r,t,i,s)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n={amount:t,currency:a.id,destination:s};let o=this.safeString(r,"method");if(r=this.omit(r,"method"),void 0===o){const e=this.safeValue(this.options,"transfer",{});o=this.safeString(e,"method","privateGetSubmitTransferToSubaccount")}const d=await this[o](this.extend(n,r)),c=this.safeValue(d,"result",{});return this.parseTransfer(c,a)}parseTransfer(e,t=undefined){const i=this.safeTimestamp(e,"created_timestamp"),s=this.safeString(e,"state"),r=this.safeString(e,"other_side"),a=this.safeString(e,"direction"),n=this.safeString(e,"currency");return{info:e,id:this.safeString(e,"id"),status:this.parseTransferStatus(s),amount:this.safeNumber(e,"amount"),code:this.safeCurrencyCode(n,t),fromAccount:"payment"!==a?r:void 0,toAccount:"payment"===a?r:void 0,timestamp:i,datetime:this.iso8601(i)}}parseTransferStatus(e){return this.safeString({prepared:"pending",confirmed:"ok",cancelled:"cancelled",waiting_for_admin:"pending"},e,e)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,address:i,amount:t};void 0!==this.twofa&&(n.tfa=(0,d.Z)(this.twofa));const o=await this.privateGetWithdraw(this.extend(n,r));return this.parseTransaction(o,a)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/api/"+this.version+"/"+t+"/"+e;if("public"===t&&Object.keys(s).length&&(n+="?"+this.urlencode(s)),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.milliseconds().toString(),a="";Object.keys(s).length&&(n+="?"+this.urlencode(s));const d=t+"\n"+e+"\n"+i+"\n"+n+"\n"+a+"\n",c=this.hmac(this.encode(d),this.encode(this.secret),o.J);r={Authorization:"deri-hmac-sha256 id="+this.apiKey+",ts="+t+",sig="+c+",nonce="+e}}return{url:this.urls.api.rest+n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,n,o,d,c){if(!o)return;const h=this.safeValue(o,"error");if(void 0!==h){const e=this.safeString(h,"code"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,t),new a.ExchangeError(t)}}}},8846:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(823),r=i(6689),a=i(9292),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"digifinex",name:"DigiFinex",countries:["SG"],version:"v3",rateLimit:900,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!0,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","4h":"240","12h":"720","1d":"1D","1w":"1W"},urls:{logo:"https://user-images.githubusercontent.com/51840849/87443315-01283a00-c5fe-11ea-8628-c2a0feaf07ac.jpg",api:{rest:"https://openapi.digifinex.com"},www:"https://www.digifinex.com",doc:["https://docs.digifinex.com"],fees:"https://digifinex.zendesk.com/hc/en-us/articles/360000328422-Fee-Structure-on-DigiFinex",referral:"https://www.digifinex.com/en-ww/from/DhOzBg?channelCode=ljaUPp"},api:{public:{spot:{get:["{market}/symbols","kline","margin/currencies","margin/symbols","markets","order_book","ping","spot/symbols","time","trades","trades/symbols","ticker","currencies"]},swap:{get:["public/api_weight","public/candles","public/candles_history","public/depth","public/funding_rate","public/funding_rate_history","public/instrument","public/instruments","public/ticker","public/tickers","public/time","public/trades"]}},private:{spot:{get:["{market}/financelog","{market}/mytrades","{market}/order","{market}/order/detail","{market}/order/current","{market}/order/history","margin/assets","margin/financelog","margin/mytrades","margin/order","margin/order/current","margin/order/history","margin/positions","otc/financelog","spot/assets","spot/financelog","spot/mytrades","spot/order","spot/order/current","spot/order/history","deposit/address","deposit/history","withdraw/history"],post:["{market}/order/cancel","{market}/order/new","{market}/order/batch_new","margin/order/cancel","margin/order/new","margin/position/close","spot/order/cancel","spot/order/new","transfer","withdraw/new","withdraw/cancel"]},swap:{get:["account/balance","account/positions","account/finance_record","account/trading_fee_rate","account/transfer_record","trade/history_orders","trade/history_trades","trade/open_orders","trade/order_info"],post:["account/leverage","trade/batch_cancel_order","trade/batch_order","trade/cancel_order","trade/order_place"]}}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:a.sh,exceptions:{exact:{10001:[r.BadRequest,"Wrong request method, please check it's a GET ot POST request"],10002:[r.AuthenticationError,"Invalid ApiKey"],10003:[r.AuthenticationError,"Sign doesn't match"],10004:[r.BadRequest,"Illegal request parameters"],10005:[r.DDoSProtection,"Request frequency exceeds the limit"],10006:[r.PermissionDenied,"Unauthorized to execute this request"],10007:[r.PermissionDenied,"IP address Unauthorized"],10008:[r.InvalidNonce,"Timestamp for this request is invalid, timestamp must within 1 minute"],10009:[r.NetworkError,"Unexist endpoint, please check endpoint URL"],10011:[r.AccountSuspended,"ApiKey expired. Please go to client side to re-create an ApiKey"],20001:[r.PermissionDenied,"Trade is not open for this trading pair"],20002:[r.PermissionDenied,"Trade of this trading pair is suspended"],20003:[r.InvalidOrder,"Invalid price or amount"],20007:[r.InvalidOrder,"Price precision error"],20008:[r.InvalidOrder,"Amount precision error"],20009:[r.InvalidOrder,"Amount is less than the minimum requirement"],20010:[r.InvalidOrder,"Cash Amount is less than the minimum requirement"],20011:[r.InsufficientFunds,"Insufficient balance"],20012:[r.BadRequest,"Invalid trade type, valid value: buy/sell)"],20013:[r.InvalidOrder,"No order info found"],20014:[r.BadRequest,"Invalid date, Valid format: 2018-07-25)"],20015:[r.BadRequest,"Date exceeds the limit"],20018:[r.PermissionDenied,"Your trading rights have been banned by the system"],20019:[r.BadSymbol,'Wrong trading pair symbol. Correct format:"usdt_btc". Quote asset is in the front'],20020:[r.DDoSProtection,"You have violated the API operation trading rules and temporarily forbid trading. At present, we have certain restrictions on the user's transaction rate and withdrawal rate."],5e4:[r.ExchangeError,"Exception error"],20021:[r.BadRequest,"Invalid currency"],20022:[r.BadRequest,"The ending timestamp must be larger than the starting timestamp"],20023:[r.BadRequest,"Invalid transfer type"],20024:[r.BadRequest,"Invalid amount"],20025:[r.BadRequest,"This currency is not transferable at the moment"],20026:[r.InsufficientFunds,"Transfer amount exceed your balance"],20027:[r.PermissionDenied,"Abnormal account status"],20028:[r.PermissionDenied,"Blacklist for transfer"],20029:[r.PermissionDenied,"Transfer amount exceed your daily limit"],20030:[r.BadRequest,"You have no position on this trading pair"],20032:[r.PermissionDenied,"Withdrawal limited"],20033:[r.BadRequest,"Wrong Withdrawal ID"],20034:[r.PermissionDenied,"Withdrawal service of this crypto has been closed"],20035:[r.PermissionDenied,"Withdrawal limit"],20036:[r.ExchangeError,"Withdrawal cancellation failed"],20037:[r.InvalidAddress,"The withdrawal address, Tag or chain type is not included in the withdrawal management list"],20038:[r.InvalidAddress,"The withdrawal address is not on the white list"],20039:[r.ExchangeError,"Can't be canceled in current status"],20040:[r.RateLimitExceeded,"Withdraw too frequently; limitation: 3 times a minute, 100 times a day"],20041:[r.PermissionDenied,"Beyond the daily withdrawal limit"],20042:[r.BadSymbol,"Current trading pair does not support API trading"],400002:[r.BadRequest,"Invalid Parameter"]},broad:{}},options:{defaultType:"spot",types:["spot","margin","otc"],accountsByType:{spot:"1",margin:"2",OTC:"3"},networks:{ARBITRUM:"Arbitrum",AVALANCEC:"AVAX-CCHAIN",AVALANCEX:"AVAX-XCHAIN",BEP20:"BEP20",BSC:"BEP20",CARDANO:"Cardano",CELO:"Celo",CHILIZ:"Chiliz",COSMOS:"COSMOS",CRC20:"Crypto.com",CRONOS:"Crypto.com",DOGECOIN:"DogeChain",ERC20:"ERC20",ETH:"ERC20",ETHW:"ETHW",IOTA:"MIOTA",KLAYTN:"KLAY",MATIC:"Polygon",METIS:"MetisDAO",MOONBEAM:"GLMR",MOONRIVER:"Moonriver",OPTIMISM:"OPETH",POLYGON:"Polygon",RIPPLE:"XRP",SOLANA:"SOL",STELLAR:"Stella",TERRACLASSIC:"TerraClassic",TERRA:"Terra",TON:"Ton",TRC20:"TRC20",TRON:"TRC20",TRX:"TRC20",VECHAIN:"Vechain"},networksById:{Arbitrum:"ARBITRUM","AVAX-CCHAIN":"AVALANCEC","AVAX-XCHAIN":"AVALANCEX",BEP20:"BEP20",Cardano:"CARDANO",Celo:"CELO",Chiliz:"CHILIZ",COSMOS:"COSMOS","Crypto.com":"CRC20",DogeChain:"DOGECOIN",ERC20:"ERC20",ETHW:"ETHW",MIOTA:"IOTA",KLAY:"KLAYTN",Polygon:"POLYGON",MetisDAO:"METIS",Moonriver:"MOONRIVER",GLMR:"MOONBEAM",OPETH:"OPTIMISM",XRP:"RIPPLE",SOL:"SOLANA",Stella:"STELLAR",Terra:"TERRA",TerraClassic:"TERRACLASSIC",Ton:"TON",TRC20:"TRC20",Vechain:"VECHAIN"}},commonCurrencies:{BHT:"Black House Test",EPS:"Epanus",FREE:"FreeRossDAO",MBN:"Mobilian Coin",TEL:"TEL666"}})}async fetchCurrencies(e={}){const t=await this.publicSpotGetCurrencies(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),o=this.safeInteger(t,"deposit_status",1)>0,d=this.safeInteger(t,"withdraw_status",1)>0,c=o&&d,h=this.safeString(t,"min_withdraw_fee"),u=this.safeString(t,"min_withdraw_amount"),l=this.safeString(t,"min_deposit_amount"),p=this.parseNumber(l),f=this.parseNumber(u),m=this.parseNumber(h),v=n.O.stringMin(h,n.O.stringMin(l,u)),g=this.parseNumber(v),y=this.safeString(t,"chain"),b={info:t,id:y,network:this.networkIdToCode(y),active:c,fee:m,precision:g,deposit:o,withdraw:d,limits:{amount:{min:void 0,max:void 0},withdraw:{min:f,max:void 0},deposit:{min:p,max:void 0}}};a in s?(Array.isArray(s[a].info)?s[a].info.push(t):s[a].info=[s[a].info,t],d&&(s[a].withdraw=!0,s[a].limits.withdraw.min=Math.min(s[a].limits.withdraw.min,f)),o&&(s[a].deposit=!0,s[a].limits.deposit.min=Math.min(s[a].limits.deposit.min,p)),c&&(s[a].active=!0)):s[a]={id:r,code:a,info:t,type:void 0,name:void 0,active:c,deposit:o,withdraw:d,fee:this.parseNumber(h),precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:f,max:void 0},deposit:{min:p,max:void 0}},networks:{}},void 0!==y?s[a].networks[y]=b:(s[a].active=c,s[a].fee=this.parseNumber(h),s[a].deposit=o,s[a].withdraw=d,s[a].limits={amount:{min:void 0,max:void 0},withdraw:{min:f,max:void 0},deposit:{min:p,max:void 0}}),s[a].precision=void 0===s[a].precision?g:Math.max(s[a].precision,g)}return s}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets",{}),i=this.safeString(t,"method","fetch_markets_v2");return await this[i](e)}async fetchMarketsV2(e={}){const t=this.safeString(this.options,"defaultType"),[i,s]=this.handleMarginModeAndParams("fetchMarketsV2",e);let r=[this[void 0!==i?"publicSpotGetMarginSymbols":"publicSpotGetTradesSymbols"](s),this.publicSwapGetPublicInstruments(e)];r=await Promise.all(r);const a=r[0],n=r[1],o=this.safeValue(a,"symbol_list",[]),d=this.safeValue(n,"data",[]),c=this.arrayConcat(o,d),h=[];for(let e=0;e<c.length;e++){const s=c[e],r=this.safeString2(s,"symbol","instrument_id"),a=this.safeString2(s,"base_asset","base_currency"),n=this.safeString2(s,"quote_asset","quote_currency"),o=this.safeString(s,"clear_currency"),d=this.safeCurrencyCode(a),u=this.safeCurrencyCode(n),l=this.safeCurrencyCode(o);let p=this.safeInteger(s,"is_allow",1),f="margin"===t?"margin":"spot";const m=void 0===l,v=!m,g=void 0!==i||void 0;let y,b,w=d+"/"+u;v&&(f="swap",w=d+"/"+u+":"+l,y=this.safeValue(s,"is_inverse"),b=!y,this.safeValue(s,"isTrading")&&(p=1)),h.push({id:r,symbol:w,base:d,quote:u,settle:l,baseId:a,quoteId:n,settleId:o,type:f,spot:m,margin:g,swap:v,future:!1,option:!1,active:!!p,contract:v,linear:b,inverse:y,contractSize:this.safeNumber(s,"contract_value"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"amount_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber2(s,"minimum_amount","min_order_amount"),max:void 0},price:{min:this.safeNumber(s,"tick_size"),max:void 0},cost:{min:this.safeNumber(s,"minimum_value"),max:void 0}},info:s})}return h}async fetchMarketsV1(e={}){const t=await this.publicSpotGetMarkets(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"market"),[a,n]=r.split("_"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n);s.push({id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_precision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(t,"volume_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_volume"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_amount"),max:void 0}},info:t})}return s}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),o=this.account(),d=this.safeString2(s,"free","avail_balance"),c=this.safeString2(s,"total","equity");o.free=d,o.used=n.O.stringSub(c,d),o.total=c,t[a]=o}return this.safeBalance(t)}async fetchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let i=this.getSupportedMapping(t,{spot:"privateSpotGetSpotAssets",margin:"privateSpotGetMarginAssets",swap:"privateSwapGetAccountBalance"});const[s,r]=this.handleMarginModeAndParams("fetchBalance",e);void 0!==s&&(i="privateSpotGetMarginAssets",t="margin");const a=await this[i](r),n="swap"===t?"data":"list",o=this.safeValue(a,n,[]);return this.parseBalance(o)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),[r,a]=this.handleMarketTypeAndParams("fetchOrderBook",s,i),n={};let o;"swap"===r?(o="publicSwapGetPublicDepth",n.instrument_id=s.id):(o="publicSpotGetOrderBook",n.symbol=s.id),void 0!==t&&(n.limit=t);const d=await this[o](this.extend(n,a));let c,h;return"swap"===r?(h=this.safeValue(d,"data",{}),c=this.safeInteger(h,"timestamp")):(h=d,c=this.safeTimestamp(d,"date")),this.parseOrderBook(h,s.symbol,c)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.safeString(e,0);let s,r;void 0!==i&&(s=this.market(i)),[r,t]=this.handleMarketTypeAndParams("fetchTickers",s,t);let a="publicSpotGetTicker";"swap"===r&&(a="publicSwapGetPublicTickers");const n=await this[a](this.extend({},t)),o={},d=this.safeValue2(n,"ticker","data",[]),c=this.safeInteger(n,"date");for(let e=0;e<d.length;e++){const t=this.extend({date:c},d[e]),i=this.parseTicker(t);o[i.symbol]=i}return this.filterByArray(o,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);let s="publicSpotGetTicker";const r={};i.swap?(s="publicSwapGetPublicTicker",r.instrument_id=i.id):r.symbol=i.id;const a=await this[s](this.extend(r,t)),n=this.safeInteger(a,"date"),o=this.safeValue(a,"ticker",[]),d=this.safeValue(a,"data",{}),c=this.safeValue(o,0,{});let h;return h=i.swap?d:this.extend({date:n},c),this.parseTicker(h,i)}parseTicker(e,t=undefined){const i=this.safeStringUpper2(e,"symbol","instrument_id"),s=this.safeSymbol(i,t);t=this.safeMarket(i);let r=this.safeTimestamp(e,"date");t.swap&&(r=this.safeInteger(e,"timestamp"));const a=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString2(e,"high","high_24h"),low:this.safeString2(e,"low","low_24h"),bid:this.safeString2(e,"buy","best_bid"),bidVolume:this.safeString(e,"best_bid_size"),ask:this.safeString2(e,"sell","best_ask"),askVolume:this.safeString(e,"best_ask_size"),vwap:void 0,open:this.safeString(e,"open_24h"),close:a,last:a,previousClose:void 0,change:void 0,percentage:this.safeString2(e,"change","price_change_percent"),average:void 0,baseVolume:this.safeString2(e,"vol","volume_24h"),quoteVolume:this.safeString(e,"base_vol"),info:e},t)}parseTrade(e,t=undefined){const i=this.safeString2(e,"id","trade_id"),s=this.safeString(e,"order_id"),r=this.safeString(e,"price"),a=this.safeStringN(e,["amount","volume","size"]),n=this.safeStringUpper2(e,"symbol","instrument_id"),o=this.safeSymbol(n,t);void 0===t&&(t=this.safeMarket(n));let d,c,h,u=this.safeTimestamp2(e,"date","timestamp"),l=this.safeString2(e,"type","side");if("swap"===t.type){u=this.safeInteger(e,"trade_time");const t=this.safeString(e,"order_type"),i=this.safeString(e,"match_role"),s=this.safeString(e,"direction");void 0!==t&&(d="0"===t?"limit":void 0),c="1"===i?"taker":"2"===i?"maker":void 0,"1"===l||"1"===s?l="buy":"2"===l||"2"===s||"3"===l||"3"===s?l="sell":"4"!==l&&"4"!==s||(l="buy")}else{const t=l.split("_");l=this.safeString(t,0),d=this.safeString(t,1),void 0===d&&(d="limit"),c=this.safeValue(e,"is_maker")?"maker":"taker"}const p=this.safeString(e,"fee");if(void 0!==p){const t=this.safeString(e,"fee_currency");let i;void 0!==t&&(i=this.safeCurrencyCode(t)),h={cost:p,currency:i}}return this.safeTrade({id:i,info:e,timestamp:u,datetime:this.iso8601(u),symbol:o,type:d,order:s,side:l,price:r,amount:a,cost:void 0,takerOrMaker:c,fee:h},t)}async fetchTime(e={}){const t=await this.publicSpotGetTime(e);return this.safeTimestamp(t,"server_time")}async fetchStatus(e={}){const t=await this.publicSpotGetPing(e);return{status:0===this.safeInteger(t,"code")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);let a="publicSpotGetTrades";const n={};r.swap?(a="publicSwapGetPublicTrades",n.instrument_id=r.id):n.symbol=r.id,void 0!==i&&(n.limit=i);const o=await this[a](this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,r,t,i)}parseOHLCV(e,t=undefined){return t.swap?[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]:[this.safeTimestamp(e,0),this.safeNumber(e,5),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,1)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);let n="publicSpotGetKline";const o={};if(a.swap)n="publicSwapGetPublicCandles",o.instrument_id=a.id,o.granularity=t,void 0!==s&&(o.limit=s);else if(o.symbol=a.id,o.period=this.safeString(this.timeframes,t,t),void 0!==i){const e=this.parseToInt(i/1e3);if(o.start_time=e,void 0!==s){const i=this.parseTimeframe(t);o.end_time=this.sum(e,s*i)}}else if(void 0!==s){const e=this.seconds(),i=this.parseTimeframe(t);o.start_time=this.sum(e,-s*i)}const d=await this[n](this.extend(o,r));let c;if(a.swap){const e=this.safeValue(d,"data",{});c=this.safeValue(e,"candles",[])}else c=this.safeValue(d,"data",[]);return this.parseOHLCVs(c,a,t,i,s)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e);let o,d;e=n.symbol,[o,a]=this.handleMarketTypeAndParams("createOrder",n,a);let c=this.getSupportedMapping(o,{spot:"privateSpotPostSpotOrderNew",margin:"privateSpotPostMarginOrderNew",swap:"privateSwapPostTradeOrderPlace"});[d,a]=this.handleMarginModeAndParams("createOrder",a),void 0!==d&&(c="privateSpotPostMarginOrderNew",o="margin");const h={},u="swap"===o,l="market"===t,p="limit"===t;h[u?"instrument_id":"symbol"]=n.id;let f,m=this.isPostOnly(l,!1,a);if(u){const t=this.safeValue(a,"reduceOnly",!1),n=this.safeString(a,"timeInForce");let o;if("buy"===i){const e=t?4:1;h.type=e}else{const e=t?3:2;h.type=e}p&&(o=0),"FOK"===n?o=l?15:9:"IOC"===n?o=l?13:4:"GTC"===n||l?o=14:"PO"===n&&(m=!0),void 0!==r&&(h.price=this.priceToPrecision(e,r)),h.order_type=o,h.size=s,a=this.omit(a,["reduceOnly","timeInForce"])}else{f=!0===m?1:2,h.market=o;let a="";"market"===t?a="_market":h.price=this.priceToPrecision(e,r),h.type=i+a,h.amount=this.amountToPrecision(e,s)}m&&(h.postOnly=f||m);const v=this.omit(a,["postOnly","post_only"]),g=await this[c](this.extend(h,v)),y=this.parseOrder(g,n);return this.extend(y,{symbol:e,type:t,side:i,amount:s,price:r})}async cancelOrder(e,t=undefined,i={}){let s,a;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[a,i]=this.handleMarketTypeAndParams("cancelOrder",s,i);let n=this.getSupportedMapping(a,{spot:"privateSpotPostSpotOrderCancel",margin:"privateSpotPostMarginOrderCancel",swap:"privateSwapPostTradeCancelOrder"});const[o,d]=this.handleMarginModeAndParams("cancelOrder",i);void 0!==o&&(n="privateSpotPostMarginOrderCancel",a="margin");const c={order_id:e=e.toString()};"swap"===a?(this.checkRequiredSymbol("cancelOrder",t),c.instrument_id=s.id):c.market=a;const h=await this[n](this.extend(c,d));if(("spot"===a||"margin"===a)&&1!==this.safeValue(h,"success",[]).length)throw new r.OrderNotFound(this.id+" cancelOrder() "+e+" not found");return h}async cancelOrders(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeString(this.options,"defaultType","spot"),a=this.safeString(i,"type",s);i=this.omit(i,"type");const n={market:a,order_id:e.join(",")},o=await this.privateSpotPostSpotOrderCancel(this.extend(n,i));if(this.safeValue(o,"success",[]).length<1)throw new r.OrderNotFound(this.id+" cancelOrders() error");return o}parseOrderStatus(e){return this.safeString({0:"open",1:"open",2:"closed",3:"canceled",4:"canceled"},e,e)}parseOrder(e,t=undefined){let i,s,r,a,n=this.safeString(e,"type");const o=this.safeString2(e,"symbol","instrument_id"),d=this.safeSymbol(o,t,"_");if("swap"===(t=this.market(d)).type){const t=this.safeInteger(e,"order_type");9===t||10===t||11===t||12===t||15===t?r="FOK":1===t||2===t||3===t||4===t||13===t?r="IOC":6!==t&&7!==t&&8!==t&&14!==t||(r="GTC"),a=0===t||1===t||4===t||5===t||9===t||10===t?"limit":"market","1"===n?n="open long":"2"===n?n="open short":"3"===n?n="close long":"4"===n&&(n="close short"),i=this.safeInteger(e,"insert_time"),s=this.safeInteger(e,"time_stamp")}else if(i=this.safeTimestamp(e,"created_date"),s=this.safeTimestamp(e,"finished_date"),void 0!==n){const e=n.split("_");e.length>1?(n=e[0],a=e[1]):a="limit"}return this.safeOrder({info:e,id:this.safeString2(e,"order_id","data"),clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,symbol:d,type:a,timeInForce:r,postOnly:void 0,side:n,price:this.safeNumber(e,"price"),stopPrice:void 0,triggerPrice:void 0,amount:this.safeNumber2(e,"amount","size"),filled:this.safeNumber2(e,"executed_amount","filled_qty"),remaining:void 0,cost:void 0,average:this.safeNumber2(e,"avg_price","price_avg"),status:this.parseOrderStatus(this.safeString2(e,"status","state")),fee:{cost:this.safeNumber(e,"fee")},trades:void 0},t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r,a;await this.loadMarkets(),void 0!==e&&(r=this.market(e)),[a,s]=this.handleMarketTypeAndParams("fetchOpenOrders",r,s);let n=this.getSupportedMapping(a,{spot:"privateSpotGetSpotOrderCurrent",margin:"privateSpotGetMarginOrderCurrent",swap:"privateSwapGetTradeOpenOrders"});const[o,d]=this.handleMarginModeAndParams("fetchOpenOrders",s);void 0!==o&&(n="privateSpotGetMarginOrderCurrent",a="margin");const c={},h="swap"===a;h?(void 0!==t&&(c.start_timestamp=t),void 0!==i&&(c.limit=i)):c.market=a,void 0!==r&&(c[h?"instrument_id":"symbol"]=r.id);const u=await this[n](this.extend(c,d)),l=this.safeValue(u,"data",[]);return this.parseOrders(l,r,t,i)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){let r,a;await this.loadMarkets(),void 0!==e&&(r=this.market(e)),[a,s]=this.handleMarketTypeAndParams("fetchOrders",r,s);let n=this.getSupportedMapping(a,{spot:"privateSpotGetSpotOrderHistory",margin:"privateSpotGetMarginOrderHistory",swap:"privateSwapGetTradeHistoryOrders"});const[o,d]=this.handleMarginModeAndParams("fetchOrders",s);void 0!==o&&(n="privateSpotGetMarginOrderHistory",a="margin");const c={};"swap"===a?void 0!==t&&(c.start_timestamp=t):(c.market=a,void 0!==t&&(c.start_time=this.parseToInt(t/1e3))),void 0!==r&&(c["swap"===a?"instrument_id":"symbol"]=r.id),void 0!==i&&(c.limit=i);const h=await this[n](this.extend(c,d)),u=this.safeValue(h,"data",[]);return this.parseOrders(u,r,t,i)}async fetchOrder(e,t=undefined,i={}){let s,a;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[a,i]=this.handleMarketTypeAndParams("fetchOrder",s,i);let n=this.getSupportedMapping(a,{spot:"privateSpotGetSpotOrder",margin:"privateSpotGetMarginOrder",swap:"privateSwapGetTradeOrderInfo"});const[o,d]=this.handleMarginModeAndParams("fetchOrder",i);void 0!==o&&(n="privateSpotGetMarginOrder",a="margin");const c={order_id:e};"swap"===a?void 0!==s&&(c.instrument_id=s.id):c.market=a;const h=await this[n](this.extend(c,d)),u=this.safeValue(h,"data"),l="swap"===a?u:this.safeValue(u,0);if(void 0===l)throw new r.OrderNotFound(this.id+" fetchOrder() order "+e.toString()+" not found");return this.parseOrder(l,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};let n;void 0!==e&&(r=this.market(e)),[n,s]=this.handleMarketTypeAndParams("fetchMyTrades",r,s);let o=this.getSupportedMapping(n,{spot:"privateSpotGetSpotMytrades",margin:"privateSpotGetMarginMytrades",swap:"privateSwapGetTradeHistoryTrades"});const[d,c]=this.handleMarginModeAndParams("fetchMyTrades",s);void 0!==d&&(o="privateSpotGetMarginMytrades",n="margin"),"swap"===n?void 0!==t&&(a.start_timestamp=t):(a.market=n,void 0!==t&&(a.start_time=this.parseToInt(t/1e3))),void 0!==e&&(a["swap"===n?"instrument_id":"symbol"]=r.id),void 0!==i&&(a.limit=i);const h=await this[o](this.extend(a,c)),u="swap"===n?"data":"list",l=this.safeValue(h,u,[]);return this.parseTrades(l,r,t,i)}parseLedgerEntryType(e){return this.safeString({},e,e)}parseLedgerEntry(e,t=undefined){const i=this.parseLedgerEntryType(this.safeString2(e,"type","finance_type")),s=this.safeCurrencyCode(this.safeString2(e,"currency_mark","currency"),t),r=this.safeNumber2(e,"num","change"),a=this.safeNumber(e,"balance");let n=this.safeTimestamp(e,"time");return void 0===n&&(n=this.safeInteger(e,"timestamp")),{info:e,id:void 0,direction:void 0,account:void 0,referenceId:void 0,referenceAccount:void 0,type:i,currency:s,amount:r,before:void 0,after:a,status:void 0,timestamp:n,datetime:this.iso8601(n),fee:void 0}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;[a,s]=this.handleMarketTypeAndParams("fetchLedger",void 0,s);let n=this.getSupportedMapping(a,{spot:"privateSpotGetSpotFinancelog",margin:"privateSpotGetMarginFinancelog",swap:"privateSwapGetAccountFinanceRecord"});const[o,d]=this.handleMarginModeAndParams("fetchLedger",s);void 0!==o&&(n="privateSpotGetMarginFinancelog",a="margin"),"swap"===a?void 0!==t&&(r.start_timestamp=t):(r.market=a,void 0!==t&&(r.start_time=this.parseToInt(t/1e3)));const c="swap"===a?"currency":"currency_mark";let h;void 0!==e&&(h=this.currency(e),r[c]=h.id),void 0!==i&&(r.limit=i);const u=await this[n](this.extend(r,d));let l;if("swap"===a)l=this.safeValue(u,"data",[]);else{const e=this.safeValue(u,"data",{});l=this.safeValue(e,"finance",[])}return this.parseLedger(l,h,t,i)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"addressTag"),r=this.safeStringUpper(e,"currency");return{info:e,currency:this.safeCurrencyCode(r),address:i,tag:s,network:void 0}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},a=await this.privateSpotGetDepositAddress(this.extend(s,t)),n=this.safeValue(a,"data",[]),o=this.parseDepositAddresses(n,[i.code]),d=this.safeValue(o,e);if(void 0===d)throw new r.InvalidAddress(this.id+" fetchDepositAddress() did not return an address for "+e+" - create the deposit address in the user settings on the exchange website first.");return d}async fetchTransactionsByType(e,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets();const n={};void 0!==t&&(a=this.currency(t),n.currency=a.id),void 0!==s&&(n.size=Math.min(500,s));const o="deposit"===e?"privateSpotGetDepositHistory":"privateSpotGetWithdrawHistory",d=await this[o](this.extend(n,r)),c=this.safeValue(d,"data",[]);return this.parseTransactions(c,a,i,s,{type:e})}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsByType("deposit",e,t,i,s)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsByType("withdrawal",e,t,i,s)}parseTransactionStatus(e){return this.safeString({1:"pending",2:"pending",3:"ok",4:"failed"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString2(e,"id","withdraw_id"),s=this.safeString(e,"address"),r=this.safeString(e,"memo"),a=this.safeString(e,"hash"),n=this.safeStringUpper(e,"currency"),o=this.safeCurrencyCode(n,t),d=this.parse8601(this.safeString(e,"created_date")),c=this.parse8601(this.safeString(e,"finished_date")),h=this.parseTransactionStatus(this.safeString(e,"state")),u=this.safeNumber(e,"amount"),l=this.safeNumber(e,"fee");let p;void 0!==l&&(p={currency:o,cost:l});const f=this.safeString(e,"chain");return{info:e,id:i,txid:a,timestamp:d,datetime:this.iso8601(d),network:f,address:s,addressTo:s,addressFrom:void 0,tag:r,tagTo:r,tagFrom:void 0,type:void 0,amount:u,currency:o,status:h,updated:c,fee:p}}parseTransferStatus(e){return this.safeString({0:"ok"},e,e)}parseTransfer(e,t=undefined){let i,s;const r=this.safeInteger(e,"type");1===r?(i="spot",s="swap"):2===r&&(i="swap",s="spot");const a=this.safeInteger(e,"timestamp");return{info:e,id:this.safeString(e,"transfer_id"),timestamp:a,datetime:this.iso8601(a),currency:this.safeCurrencyCode(this.safeString(e,"currency"),t),amount:this.safeNumber(e,"amount"),fromAccount:i,toAccount:s,status:this.parseTransferStatus(this.safeString(e,"code"))}}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c={currency_mark:a.id,num:this.currencyToPrecision(e,t),from:o,to:d},h=await this.privateSpotPostTransfer(this.extend(c,r));return this.parseTransfer(h,a)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={address:i,amount:this.currencyToPrecision(e,t),currency:a.id};void 0!==s&&(n.memo=s);const o=await this.privateSpotPostWithdrawNew(this.extend(n,r));return this.parseTransaction(o,a)}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t),a.symbol=n.id);const o=await this.privateSpotGetMarginPositions(this.extend(a,r)),d=this.safeValue(o,"positions"),c=this.parseBorrowInterests(d,n);return this.filterByCurrencySinceLimit(c,e,i,s)}parseBorrowInterest(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeString(e,"amount"),r=this.safeString(e,"leverage_ratio"),a=n.O.stringDiv(s,r),o=n.O.stringSub(s,a),d=void 0===t?void 0:t.base;return{account:this.safeSymbol(i,t),currency:d,interest:void 0,interestRate:.001,amountBorrowed:this.parseNumber(o),timestamp:void 0,datetime:void 0,info:e}}async fetchBorrowRate(e,t={}){await this.loadMarkets();const i=await this.privateSpotGetMarginAssets(this.extend({},t)),s=this.safeValue(i,"list",[]);let r=[];for(let t=0;t<s.length;t++){const i=s[t];this.safeString(i,"currency")===e&&(r=i)}const a=this.safeString(r,"currency");return this.parseBorrowRate(r,a)}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.privateSpotGetMarginAssets(e),i=this.safeValue(t,"list");return this.parseBorrowRates(i,"currency")}parseBorrowRate(e,t=undefined){const i=this.milliseconds(),s=this.safeString(e,"currency");return{currency:this.safeCurrencyCode(s,t),rate:.001,period:864e5,timestamp:i,datetime:this.iso8601(i),info:e}}parseBorrowRates(e,t){const i={};for(let s=0;s<e.length;s++){const r=e[s],a=this.safeString(r,t),n=this.safeCurrencyCode(a),o=this.parseBorrowRate(r,a);i[n]=o}return i}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");const s={instrument_id:i.id},a=await this.publicSwapGetPublicFundingRate(this.extend(s,t)),n=this.safeValue(a,"data",{});return this.parseFundingRate(n,i)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"instrument_id"),s=this.safeInteger(e,"funding_time"),r=this.safeInteger(e,"next_funding_time");return{info:e,symbol:this.safeSymbol(i,t),markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeString(e,"funding_rate"),fundingTimestamp:s,fundingDatetime:this.iso8601(s),nextFundingRate:this.safeString(e,"next_funding_rate"),nextFundingTimestamp:r,nextFundingDatetime:this.iso8601(r),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){this.checkRequiredSymbol("fetchFundingRateHistory",e),await this.loadMarkets();const a=this.market(e);if(!a.swap)throw new r.BadSymbol(this.id+" fetchFundingRateHistory() supports swap contracts only");const n={instrument_id:a.id};void 0!==t&&(n.start_timestamp=t),void 0!==i&&(n.limit=i);const o=await this.publicSwapGetPublicFundingRateHistory(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"funding_rates",[]),h=[];for(let e=0;e<c.length;e++){const t=c[e],i=this.safeString(d,"instrument_id"),s=this.safeSymbol(i),r=this.safeInteger(t,"time");h.push({info:t,symbol:s,fundingRate:this.safeString(t,"rate"),timestamp:r,datetime:this.iso8601(r)})}const u=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(u,e,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.BadRequest(this.id+" fetchTradingFee() supports swap markets only");const s={instrument_id:i.id},a=await this.privateSwapGetAccountTradingFeeRate(this.extend(s,t)),n=this.safeValue(a,"data",{});return this.parseTradingFee(n,i)}parseTradingFee(e,t=undefined){const i=this.safeString(e,"instrument_id");return{info:e,symbol:this.safeSymbol(i,t),maker:this.safeNumber(e,"maker_fee_rate"),taker:this.safeNumber(e,"taker_fee_rate")}}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i={};let s,a;if(void 0!==(e=this.marketSymbols(e))){let t;if(Array.isArray(e)){if(e.length>1)throw new r.BadRequest(this.id+" fetchPositions() symbols argument cannot contain more than 1 symbol");t=e[0]}else t=e;s=this.market(t)}[a,t]=this.handleMarketTypeAndParams("fetchPositions",s,t);const[n,o]=this.handleMarginModeAndParams("fetchPositions",t);void 0!==n&&(a="margin"),void 0!==s&&(i["swap"===a?"instrument_id":"symbol"]=s.id);const d=this.getSupportedMapping(a,{spot:"privateSpotGetMarginPositions",margin:"privateSpotGetMarginPositions",swap:"privateSwapGetAccountPositions"}),c=await this[d](this.extend(i,o)),h="swap"===a?"data":"positions",u=this.safeValue(c,h,[]),l=[];for(let e=0;e<u.length;e++)l.push(this.parsePosition(u[e],s));return this.filterByArray(l,"symbol",e,!1)}async fetchPosition(e,t={}){await this.loadMarkets();const i=this.market(e),s={};let r;[r,t]=this.handleMarketTypeAndParams("fetchPosition",i,t);const[a,n]=this.handleMarginModeAndParams("fetchPosition",t);void 0!==a&&(r="margin");const o=this.getSupportedMapping(r,{spot:"privateSpotGetMarginPositions",margin:"privateSpotGetMarginPositions",swap:"privateSwapGetAccountPositions"});s["swap"===r?"instrument_id":"symbol"]=i.id;const d=await this[o](this.extend(s,n)),c="swap"===r?"data":"positions",h=this.safeValue(d,c,[]),u=this.parsePosition(h[0],i);return"swap"===r?u:this.extend(u,{collateral:this.safeNumber(d,"margin"),marginRatio:this.safeNumber(d,"margin_rate")})}parsePosition(e,t=undefined){const i=this.safeString2(e,"instrument_id","symbol"),s=(t=this.safeMarket(i,t)).symbol;let r=this.safeString(e,"margin_mode");r=void 0!==r?"crossed"===r?"cross":"isolated":"crossed";const a=this.safeInteger(e,"timestamp");let n=this.safeString(e,"side");return"go_long"===n?n="long":"go_short"===n&&(n="short"),{info:e,id:void 0,symbol:s,notional:this.safeNumber(e,"amount"),marginMode:r,liquidationPrice:this.safeNumber(e,"liquidation_price"),entryPrice:this.safeNumber2(e,"avg_cost","entry_price"),unrealizedPnl:this.safeNumber(e,"unrealized_pnl"),contracts:this.safeNumber(e,"avail_position"),contractSize:this.safeNumber(t,"contractSize"),markPrice:this.safeNumber(e,"last"),side:n,hedged:void 0,timestamp:a,datetime:this.iso8601(a),maintenanceMargin:this.safeNumber(e,"margin"),maintenanceMarginPercentage:this.safeNumber(e,"maint_margin_ratio"),collateral:void 0,initialMargin:void 0,initialMarginPercentage:void 0,leverage:this.safeNumber2(e,"leverage","leverage_ratio"),marginRatio:this.safeNumber(e,"margin_ratio"),percentage:void 0}}async setLeverage(e,t=undefined,i={}){await this.loadMarkets(),this.checkRequiredSymbol("setLeverage",t);const s=this.market(t);if("swap"!==s.type)throw new r.BadSymbol(this.id+" setLeverage() supports swap contracts only");if(e<1||e>100)throw new r.BadRequest(this.id+" leverage should be between 1 and 100");const a={instrument_id:s.id,leverage:e},n=this.safeString2(this.options,"marginMode","defaultMarginMode");let o=this.safeStringLower2(i,"marginMode","defaultMarginMode",n);if(void 0!==o&&(o="cross"===o?"crossed":"isolated",a.margin_mode=o,i=this.omit(i,["marginMode","defaultMarginMode"])),"isolated"===o){const e=this.safeString(i,"side");void 0!==e?(a.side=e,i=this.omit(i,"side")):this.checkRequiredArgument("setLeverage",e,"side",["long","short"])}return await this.privateSwapPostAccountLeverage(this.extend(a,i))}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.safeCurrencyCode(e),a.currency=r.id),void 0!==t&&(a.start_timestamp=t),void 0!==i&&(a.limit=i);const n=await this.privateSwapGetAccountTransferRecord(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTransfers(o,r,t,i)}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicSwapGetPublicInstruments(t),s=this.safeValue(i,"data",[]);return e=this.marketSymbols(e),this.parseLeverageTiers(s,e,"symbol")}parseLeverageTiers(e,t=undefined,i=undefined){const s={},r={};for(let i=0;i<e.length;i++){const a=e[i],n=this.safeString(a,"instrument_id"),o=this.safeMarket(n),d=this.safeSymbol(n,o);let c=0;s[d]=this.parseMarketLeverageTiers(e[i],o),void 0!==t&&(c=t.length,this.inArray(d,t)&&(r[d]=this.parseMarketLeverageTiers(e[i],o))),void 0===d||0!==c&&!this.inArray(t,d)||(r[d]=this.parseMarketLeverageTiers(e[i],o))}return r}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.BadRequest(this.id+" fetchMarketLeverageTiers() supports swap markets only");const s={instrument_id:i.id},a=await this.publicSwapGetPublicInstrument(this.extend(s,t)),n=this.safeValue(a,"data",{});return this.parseMarketLeverageTiers(n,i)}parseMarketLeverageTiers(e,t=undefined){const i=[],s=this.safeValue(e,"open_max_limits",{});for(let r=0;r<s.length;r++){const a=s[r],n=this.safeString(e,"instrument_id");t=this.safeMarket(n),i.push({tier:this.sum(r,1),currency:t.settle,minNotional:void 0,maxNotional:this.safeNumber(a,"max_limit"),maintenanceMarginRate:void 0,maxLeverage:this.safeNumber(a,"leverage"),info:a})}return i}handleMarginModeAndParams(e,t={},i=undefined){const s=this.safeString(this.options,"defaultType"),a=this.safeValue(t,"margin",!1);let n;if([n,t]=super.handleMarginModeAndParams(e,t,i),void 0!==n){if("cross"!==n)throw new r.NotSupported(this.id+" only cross margin is supported")}else"margin"!==s&&!0!==a||(n="cross");return[n,t]}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicSpotGetCurrencies(t),s=this.safeValue(i,"data");return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFees(e,t=undefined,i=undefined){const s={};t=this.marketCodes(t);for(let i=0;i<e.length;i++){const r=e[i],a=this.safeString(r,"currency"),n=this.safeCurrencyCode(a);if(void 0===t||this.inArray(n,t)){void 0===this.safeValue(s,n)&&(s[n]=this.depositWithdrawFee({}),s[n].info=[]),s[n].info.push(r);const e=this.safeString(r,"chain"),t=this.safeValue(r,"min_withdraw_fee"),i={fee:t,percentage:void 0===t&&void 0},a={fee:void 0,percentage:void 0};if(void 0!==e){const t=this.networkIdToCode(e);s[n].networks[t]={withdraw:i,deposit:a}}else s[n].withdraw=i,s[n].deposit=a}}const r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e],i=this.currency(t);s[t]=this.assignDefaultDepositWithdrawFees(s[t],i)}return s}sign(e,t=[],i="GET",s={},r=undefined,a=undefined){const n="private"===t[0],d="spot"===t[1]?"/v3":"/swap/v2",c=d+"/"+this.implodeParams(e,s);let h=this.urls.api.rest+c;const u=this.omit(s,this.extractParams(e));let l=this.urlencode(this.keysort(u));if(n){let e,t;if("/swap/v2"===d){if(t=this.milliseconds().toString(),e=t+i+c,"GET"===i)l&&(e+="?"+l);else if("POST"===i){const t=JSON.stringify(s);l=t,e+=t}}else t=this.nonce().toString(),e=l;const n=this.hmac(this.encode(e),this.encode(this.secret),o.J);"GET"===i?l&&(h+="?"+l):"POST"===i&&(r={"Content-Type":"application/x-www-form-urlencoded"},l&&(a=l)),r={"ACCESS-KEY":this.apiKey,"ACCESS-SIGN":n,"ACCESS-TIMESTAMP":t}}else l&&(h+="?"+l);return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(!o)return;const h=this.safeString(o,"code");if("0"===h||"200"===h)return;const u=this.id+" "+n;if(void 0===h)throw new r.BadResponse(u);const l=[r.ExchangeError,u],[p,f]=this.safeValue(this.exceptions.exact,h,l);throw new p(f)}}},1729:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(4680),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"exmo",name:"EXMO",countries:["LT"],rateLimit:350,version:"v1.1",has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchCanceledOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:"emulated",fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!0,setMargin:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","45m":"45","1h":"60","2h":"120","3h":"180","4h":"240","1d":"D","1w":"W","1M":"M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766491-1b0ea956-5eda-11e7-9225-40d67b481b8d.jpg",api:{public:"https://api.exmo.com",private:"https://api.exmo.com",web:"https://exmo.me"},www:"https://exmo.me",referral:"https://exmo.me/?ref=131685",doc:["https://exmo.me/en/api_doc?ref=131685"],fees:"https://exmo.com/en/docs/fees"},api:{web:{get:["ctrl/feesAndLimits","en/docs/fees"]},public:{get:["currency","currency/list/extended","order_book","pair_settings","ticker","trades","candles_history","required_amount","payments/providers/crypto/list"]},private:{post:["user_info","order_create","order_cancel","stop_market_order_create","stop_market_order_cancel","user_open_orders","user_trades","user_cancelled_orders","order_trades","deposit_address","withdraw_crypt","withdraw_get_txid","excode_create","excode_load","code_check","wallet_history","wallet_operations","margin/user/order/create","margin/user/order/update","margin/user/order/cancel","margin/user/position/close","margin/user/position/margin_add","margin/user/position/margin_remove","margin/currency/list","margin/pair/list","margin/settings","margin/funding/list","margin/user/info","margin/user/order/list","margin/user/order/history","margin/user/order/trades","margin/user/order/max_quantity","margin/user/position/list","margin/user/position/margin_remove_info","margin/user/position/margin_add_info","margin/user/wallet/list","margin/user/wallet/history","margin/user/trade/list","margin/trades","margin/liquidation/feed"]}},fees:{trading:{feeSide:"get",tierBased:!0,percentage:!0,maker:this.parseNumber("0.004"),taker:this.parseNumber("0.004")},transaction:{tierBased:!1,percentage:!1}},options:{networks:{ETH:"ERC20",TRX:"TRC20"},fetchTradingFees:{method:"fetchPrivateTradingFees"},margin:{fillResponseFromRequest:!0}},commonCurrencies:{GMT:"GMT Token"},precisionMode:n.sh,exceptions:{exact:{40005:r.AuthenticationError,40009:r.InvalidNonce,40015:r.ExchangeError,40016:r.OnMaintenance,40017:r.AuthenticationError,40032:r.PermissionDenied,40033:r.PermissionDenied,40034:r.RateLimitExceeded,50052:r.InsufficientFunds,50054:r.InsufficientFunds,50304:r.OrderNotFound,50173:r.OrderNotFound,50277:r.InvalidOrder,50319:r.InvalidOrder,50321:r.InvalidOrder,50381:r.InvalidOrder},broad:{"range period is too long":r.BadRequest,"invalid syntax":r.BadRequest,"API rate limit exceeded":r.RateLimitExceeded}}})}async modifyMarginHelper(e,t,i,s={}){await this.loadMarkets();const r=this.market(e),a={position_id:r.id,quantity:t};let n;"add"===i?n="privatePostMarginUserPositionMarginAdd":"reduce"===i&&(n="privatePostMarginUserPositionMarginReduce");const o=await this[n](this.extend(a,s)),d=this.parseMarginModification(o,r),c=this.safeValue(this.options,"margin",{});return this.safeValue(c,"fillResponseFromRequest",!0)&&(d.type=i,d.amount=t),d}parseMarginModification(e,t=undefined){return{info:e,type:void 0,amount:void 0,code:this.safeValue(t,"quote"),symbol:this.safeSymbol(void 0,t),total:void 0,status:"ok"}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"reduce",i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"add",i)}async fetchTradingFees(e={}){let t=this.safeString(e,"method");if(e=this.omit(e,"method"),void 0===t){const e=this.safeValue(this.options,"fetchTradingFees",{});t=this.safeString(e,"method","fetchPrivateTradingFees")}return await this[t](e)}async fetchPrivateTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostMarginPairList(e),i=this.safeValue(t,"pairs",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"name"),n=this.safeSymbol(r,void 0,"_"),o=this.safeString(t,"trade_maker_fee"),d=this.safeString(t,"trade_taker_fee"),c=this.parseNumber(a.O.stringDiv(o,"100")),h=this.parseNumber(a.O.stringDiv(d,"100"));s[n]={info:t,symbol:n,maker:c,taker:h,percentage:!0,tierBased:!0}}return s}async fetchPublicTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetPairSettings(e),i={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e],r=this.market(s),n=this.safeValue(t,r.id,{}),o=this.safeString(n,"commission_maker_percent"),d=this.safeString(n,"commission_taker_percent"),c=this.parseNumber(a.O.stringDiv(o,"100")),h=this.parseNumber(a.O.stringDiv(d,"100"));i[s]={info:n,symbol:s,maker:c,taker:h,percentage:!0,tierBased:!0}}return i}parseFixedFloatValue(e){if(void 0===e||"-"===e)return;if(""===e)return 0;const t=e.indexOf("%")>=0,i=e.split(" ")[0].replace("%",""),s=parseFloat(i);if(s>0&&t)throw new r.ExchangeError(this.id+" parseFixedFloatValue() detected an unsupported non-zero percentage-based fee "+e);return s}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetPaymentsProvidersCryptoList(t),s={},r=Object.keys(i);for(let t=0;t<r.length;t++){const a=r[t];if(void 0!==e&&!this.inArray(a,e))continue;s[a]={deposit:void 0,withdraw:void 0};const n=this.currency(a),o=this.safeString(n,"id"),d=this.safeValue(i,o,[]);for(let e=0;e<d.length;e++){const t=d[e],i=this.safeString(t,"type"),r=this.safeString(t,"commission_desc"),n=this.parseFixedFloatValue(r);s[a][i]=n}s[a].info=d}return this.options.transactionFees=s,s}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetPaymentsProvidersCryptoList(t),s=this.parseDepositWithdrawFees(i,e);return this.options.transactionFees=s,s}parseDepositWithdrawFee(e,t=undefined){const i=this.depositWithdrawFee(e);for(let s=0;s<e.length;s++){const r=e[s],a=this.safeString(r,"type"),n=this.safeString(r,"name"),o=this.networkIdToCode(n,this.safeString(t,"code")),d=this.safeString(r,"commission_desc");let c,h=[];void 0!==d&&(h=d.split("%"),c=h.length>=2),void 0===this.safeValue(i.networks,o)&&(i.networks[o]={withdraw:{fee:void 0,percentage:void 0},deposit:{fee:void 0,percentage:void 0}}),i.networks[o][a]={fee:this.parseFixedFloatValue(this.safeString(h,0)),percentage:c}}return this.assignDefaultDepositWithdrawFees(i)}async fetchCurrencies(e={}){const t=await this.publicGetCurrencyListExtended(e),i=await this.publicGetPaymentsProvidersCryptoList(e),s={};for(let e=0;e<t.length;e++){const r=t[e],a=this.safeString(r,"name"),n=this.safeString(r,"description"),o=this.safeValue(i,a);let d=!1,c="crypto";const h={deposit:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}};let u,l,p;if(void 0===o)d=!0,c="fiat";else for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,"type"),s=this.safeNumber(t,"min");let r=this.safeNumber(t,"max");0===r&&(r=void 0);const a=this.safeValue(t,"enabled");if("deposit"===i?a&&!l?l=!0:a||(l=!1):"withdraw"===i&&(a&&!p?p=!0:a||(p=!1)),a&&(d=!0,(void 0===h[i].min||s<h[i].min)&&(h[i].min=s,h[i].max=r,"withdraw"===i))){const e=this.safeString(t,"commission_desc");u=this.parseFixedFloatValue(e)}}const f=this.safeCurrencyCode(a);s[f]={id:a,code:f,name:n,type:c,active:d,deposit:l,withdraw:p,fee:u,precision:this.parseNumber("1e-8"),limits:h,info:o}}return s}async fetchMarkets(e={}){const t=await this.publicGetPairSettings(e),i=Object.keys(t),s=[];for(let e=0;e<i.length;e++){const r=i[e],n=t[r],o=r.replace("_","/"),[d,c]=o.split("/"),h=this.safeCurrencyCode(d),u=this.safeCurrencyCode(c),l=this.safeString(n,"commission_taker_percent"),p=this.safeString(n,"commission_maker_percent");s.push({id:r,symbol:o,base:h,quote:u,settle:void 0,baseId:d,quoteId:c,settleId:void 0,type:"spot",spot:!0,margin:!0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(a.O.stringDiv(l,"100")),maker:this.parseNumber(a.O.stringDiv(p,"100")),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber(this.parsePrecision(this.safeString(n,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"min_quantity"),max:this.safeNumber(n,"max_quantity")},price:{min:this.safeNumber(n,"min_price"),max:this.safeNumber(n,"max_price")},cost:{min:this.safeNumber(n,"min_amount"),max:this.safeNumber(n,"max_amount")}},info:n})}return s}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={symbol:n.id,resolution:this.safeString(this.timeframes,t,t)},d=this.safeValue(this.options,"fetchOHLCV"),c=this.safeInteger(d,"maxLimit",3e3),h=this.parseTimeframe(t),u=this.milliseconds();if(void 0===i)void 0===s&&(s=1e3),s>c&&(s=c),o.from=this.parseToInt(u/1e3)-s*h-1,o.to=this.parseToInt(u/1e3);else if(o.from=this.parseToInt(i/1e3)-1,void 0===s)o.to=this.parseToInt(u/1e3);else{if(s>c)throw new r.BadRequest(this.id+" fetchOHLCV() will serve "+c.toString()+" candles at most");const e=this.sum(i,s*h*1e3);o.to=this.parseToInt(e/1e3)}const l=await this.publicGetCandlesHistory(this.extend(o,a)),p=this.safeValue(l,"candles",[]);return this.parseOHLCVs(p,n,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}parseBalance(e){const t={info:e},i=this.safeValue(e,"balances",{}),s=this.safeValue(e,"reserved",{}),r=Object.keys(i);for(let e=0;e<r.length;e++){const a=r[e],n=this.safeCurrencyCode(a),o=this.account();a in i&&(o.free=this.safeString(i,a)),a in s&&(o.used=this.safeString(s,a)),t[n]=o}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostUserInfo(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id};void 0!==t&&(r.limit=t);const a=await this.publicGetOrderBook(this.extend(r,i)),n=this.safeValue(a,s.id);return this.parseOrderBook(n,s.symbol,void 0,"bid","ask")}async fetchOrderBooks(e=undefined,t=undefined,i={}){let s;if(await this.loadMarkets(),void 0===e){if(s=this.ids.join(","),s.length>2048){const e=this.ids.length;throw new r.ExchangeError(this.id+" fetchOrderBooks() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else s=this.marketIds(e),s=s.join(",");const a={pair:s};void 0!==t&&(a.limit=t);const n=await this.publicGetOrderBook(this.extend(a,i)),o={},d=Object.keys(n);for(let e=0;e<d.length;e++){const t=d[e],i=this.safeSymbol(t);o[i]=this.parseOrderBook(n[t],i,void 0,"bid","ask")}return o}parseTicker(e,t=undefined){const i=this.safeTimestamp(e,"updated");t=this.safeMarket(void 0,t);const s=this.safeString(e,"last_trade");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy_price"),bidVolume:void 0,ask:this.safeString(e,"sell_price"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"avg"),baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"vol_curr"),info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTicker(t),s={},r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeMarket(t,void 0,"_"),n=a.symbol,o=this.safeValue(i,t);s[n]=this.parseTicker(o,a)}return this.filterByArray(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=await this.publicGetTicker(t),s=this.market(e);return this.parseTicker(i[s.id],s)}parseTrade(e,t=undefined){const i=this.safeTimestamp(e,"date"),s=this.safeString(e,"trade_id"),r=this.safeString(e,"order_id"),n=this.safeString(e,"price"),o=this.safeString(e,"quantity"),d=this.safeString(e,"amount"),c=this.safeString(e,"type"),h=this.safeString(e,"pair"),u=(t=this.safeMarket(h,t,"_")).symbol,l=this.safeString(e,"exec_type");let p;const f=this.safeString(e,"commission_amount");if(void 0!==f){const t=this.safeString(e,"commission_currency"),i=this.safeCurrencyCode(t);let s=this.safeString(e,"commission_percent");void 0!==s&&(s=a.O.stringDiv(s,"1000",18)),p={cost:f,currency:i,rate:s}}return this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:u,order:r,type:void 0,side:c,takerOrMaker:l,price:n,amount:o,cost:d,fee:p},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetTrades(this.extend(a,s)),o=this.safeValue(n,r.id,[]);return this.parseTrades(o,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument (a single symbol or an array)");let a,n;if(await this.loadMarkets(),Array.isArray(e)){if(e.length<1)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a non-empty symbol array");a=this.marketIds(e).join(",")}else n=this.market(e),a=n.id;const o={pair:a};void 0!==i&&(o.limit=i);const d=await this.privatePostUserTrades(this.extend(o,s));let c=[];const h=Object.keys(d);for(let e=0;e<h.length;e++){const s=h[e],r=this.safeMarket(s,void 0,"_"),a=d[s],n=this.parseTrades(a,r,t,i);c=this.arrayConcat(c,n)}return this.filterBySinceLimit(c,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=("market"===t?t+"_":"")+i;let c=a;"market"===t&&void 0===a&&(c=0);const h={pair:o.id,quantity:this.amountToPrecision(o.symbol,s),type:d,price:this.priceToPrecision(o.symbol,c)};let u="privatePostOrderCreate",l=this.safeValue2(n,"client_id","clientOrderId");if(void 0!==l){if(l=this.safeInteger2(n,"client_id","clientOrderId"),void 0===l)throw new r.BadRequest(this.id+" createOrder() client order id must be an integer / numeric literal");h.client_id=l,n=this.omit(n,["client_id","clientOrderId"])}if("stop"===t||"stop_limit"===t||"trailing_stop"===t){const i=this.safeNumber2(n,"stop_price","stopPrice");if(void 0===i)throw new r.InvalidOrder(this.id+" createOrder() requires a stopPrice extra param for a "+t+" order");n=this.omit(n,["stopPrice","stop_price"]),h.stop_price=this.priceToPrecision(e,i),u="privatePostMarginUserOrderCreate"}const p=await this[u](this.extend(h,n)),f=this.safeString(p,"order_id"),m=this.milliseconds();return{id:f,info:p,timestamp:m,datetime:this.iso8601(m),lastTradeTimestamp:void 0,status:"open",symbol:o.symbol,type:t,side:i,price:a,cost:void 0,amount:s,remaining:s,filled:0,fee:void 0,trades:void 0,clientOrderId:l,average:void 0}}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e};return await this.privatePostOrderCancel(this.extend(s,i))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e.toString()},r=await this.privatePostOrderTrades(this.extend(s,i)),a=this.parseOrder(r);return this.extend(a,{id:e.toString()})}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){let a;void 0!==t&&(a=this.market(t));const n={order_id:e.toString()},o=await this.privatePostOrderTrades(this.extend(n,r)),d=this.safeValue(o,"trades");return this.parseTrades(d,a,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),void 0!==e&&(e=this.market(e).symbol);const r=await this.privatePostUserOpenOrders(s),a=Object.keys(r);let n=[];for(let e=0;e<a.length;e++){const o=a[e],d=this.safeMarket(o);s=this.extend(s,{status:"open"});const c=this.parseOrders(r[o],d,t,i,s);n=this.arrayConcat(n,c)}return this.filterBySymbolSinceLimit(n,e,t,i)}parseOrder(e,t=undefined){const i=this.safeString(e,"order_id"),s=this.safeTimestamp(e,"created"),r=this.safeString(e,"type");let a;"pair"in e?a=e.pair:"in_currency"in e&&"out_currency"in e&&(a="buy"===r?e.in_currency+"_"+e.out_currency:e.out_currency+"_"+e.in_currency);const n=(t=this.safeMarket(a,t)).symbol;let o=this.safeString(e,"quantity");if(void 0===o){const t="buy"===r?"in_amount":"out_amount";o=this.safeString(e,t)}const d=this.safeString(e,"price"),c=this.safeString(e,"amount"),h=this.safeValue(e,"trades",[]),u=this.safeInteger(e,"client_id");return this.safeOrder({id:i,clientOrderId:u,datetime:this.iso8601(s),timestamp:s,lastTradeTimestamp:void 0,status:void 0,symbol:n,type:"limit",timeInForce:void 0,postOnly:void 0,side:r,price:d,stopPrice:void 0,triggerPrice:void 0,cost:c,amount:o,filled:void 0,remaining:void 0,average:void 0,trades:h,fee:void 0,info:e},t)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==t&&(r.offset=i),void 0!==i&&(r.limit=i),void 0!==e&&(a=this.market(e));const n=await this.privatePostUserCancelledOrders(this.extend(r,s));return s=this.extend(s,{status:"canceled"}),this.parseOrders(n,a,t,i,s)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=await this.privatePostDepositAddress(t),s=this.safeString(i,e);let r,a;if(s){const e=s.split(",");r=e[0],e.length>1&&(a=e[1])}return this.checkAddress(r),{currency:e,address:r,tag:a,network:void 0,info:i}}getMarketFromTrades(e){const t=this.indexBy(e,"pair"),i=Object.keys(t);if(1===i.length)return this.markets[i[0]]}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();const a=this.currency(e),n={amount:t,currency:a.id,address:i};void 0!==s&&(n.invoice=s);const o=this.safeValue(this.options,"networks",{});let d=this.safeStringUpper(r,"network");d=this.safeString(o,d,d),void 0!==d&&(n.transport=d,r=this.omit(r,"network"));const c=await this.privatePostWithdrawCrypt(this.extend(n,r));return this.parseTransaction(c,a)}parseTransactionStatus(e){return this.safeString({transferred:"ok",paid:"ok",pending:"pending",processing:"pending",verifying:"pending"},e,e)}parseTransaction(e,t=undefined){const i=this.safeTimestamp2(e,"dt","created");let s=this.safeString(e,"amount");void 0!==s&&(s=a.O.stringAbs(s));let r=this.safeString(e,"txid");if(void 0===r){const t=this.safeValue(e,"extra",{}),i=this.safeString(t,"txid");""!==i&&(r=i)}const n=this.safeString(e,"type"),o=this.safeString2(e,"curr","currency"),d=this.safeCurrencyCode(o,t);let c,h;const u=this.safeString(e,"account");if("deposit"===n)h=u;else if("withdrawal"===n&&(c=u,void 0!==c)){const e=c.split(":");2===e.length&&(c=this.safeString(e,1),c=c.replace(" ",""))}const l={currency:void 0,cost:void 0,rate:void 0};if(!this.fees.transaction.percentage){const t="withdrawal"===n?"withdraw":"deposit";let i=this.safeString(e,"commission");if(void 0===i){const e=this.safeValue(this.options,"transactionFees",{}),s=this.safeValue(e,d,{});i=this.safeString(s,t)}"cashback"===this.safeString(e,"provider")&&(i="0"),void 0!==i&&("withdrawal"===n&&(s=a.O.stringSub(s,i)),l.cost=this.parseNumber(i),l.currency=d)}return{info:e,id:this.safeString2(e,"order_id","task_id"),txid:r,type:n,currency:d,network:this.safeString(e,"provider"),amount:s,status:this.parseTransactionStatus(this.safeStringLower(e,"status")),timestamp:i,datetime:this.iso8601(i),address:c,addressFrom:void 0,addressTo:c,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:this.safeTimestamp(e,"updated"),comment:h,fee:l}}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==t&&(r.date=this.parseToInt(t/1e3)),void 0!==e&&(a=this.currency(e));const n=await this.privatePostWalletHistory(this.extend(r,s));return this.parseTransactions(n.history,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={type:"withdraw"};void 0!==i&&(a.limit=i),void 0!==e&&(r=this.currency(e),a.currency=r.id);const n=await this.privatePostWalletOperations(this.extend(a,s)),o=this.safeValue(n,"items",[]);return this.parseTransactions(o,r,t,i)}async fetchWithdrawal(e,t=undefined,i={}){let s;await this.loadMarkets();const r={order_id:e,type:"withdraw"};void 0!==t&&(s=this.currency(t),r.currency=s.id);const a=await this.privatePostWalletOperations(this.extend(r,i)),n=this.safeValue(a,"items",[]),o=this.safeValue(n,0,{});return this.parseTransaction(o,s)}async fetchDeposit(e=undefined,t=undefined,i={}){let s;await this.loadMarkets();const r={order_id:e,type:"deposit"};void 0!==t&&(s=this.currency(t),r.currency=s.id);const a=await this.privatePostWalletOperations(this.extend(r,i)),n=this.safeValue(a,"items",[]),o=this.safeValue(n,0,{});return this.parseTransaction(o,s)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={type:"deposit"};void 0!==i&&(a.limit=i),void 0!==e&&(r=this.currency(e),a.currency=r.id);const n=await this.privatePostWalletOperations(this.extend(a,s)),o=this.safeValue(n,"items",[]);return this.parseTransactions(o,r,t,i)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t]+"/";if("web"!==t&&(n+=this.version+"/"),n+=e,"public"===t||"web"===t)Object.keys(s).length&&(n+="?"+this.urlencode(s));else if("private"===t){this.checkRequiredCredentials();const e=this.nonce();a=this.urlencode(this.extend({nonce:e},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),o.o)}}return{url:n,method:i,body:a,headers:r}}nonce(){return this.milliseconds()}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&("result"in o||"errmsg"in o)){let e=this.safeValue(o,"result",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){let e;const t=this.safeString2(o,"error","errmsg"),i=t.split(":");if(i.length>1){const t=i[0].split(" ");e=t.length>1?t[1]:t[0]}const s=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,s),this.throwBroadlyMatchedException(this.exceptions.broad,t,s),new r.ExchangeError(s)}}}}},5991:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(4531);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"flowbtc",name:"flowBTC",countries:["BR"],rateLimit:1e3,urls:{logo:"https://user-images.githubusercontent.com/51840849/87443317-01c0d080-c5fe-11ea-95c2-9ebe1a8fafd9.jpg",api:{public:"https://api.flowbtc.com.br:8443/ap/",private:"https://api.flowbtc.com.br:8443/ap/"},www:"https://www.flowbtc.com.br",doc:"https://www.flowbtc.com.br/api.html"},fees:{trading:{tierBased:!1,percentage:!0,maker:.0025,taker:.005}}})}}},5788:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(4714);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"fmfwio",name:"FMFW.io",countries:["KN"],urls:{logo:"https://user-images.githubusercontent.com/1294454/159177712-b685b40c-5269-4cea-ac83-f7894c49525d.jpg",api:{public:"https://api.fmfw.io",private:"https://api.fmfw.io"},www:"https://fmfw.io",doc:"https://api.fmfw.io/api/2/explore/",fees:"https://fmfw.io/fees-and-limits",referral:"https://fmfw.io/referral/da948b21d6c92d69"},fees:{trading:{maker:this.parseNumber("0.005"),taker:this.parseNumber("0.005")}}})}}},7290:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2465),r=i(2194),a=i(9292),n=i(6689),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"gate",name:"Gate.io",countries:["KR"],rateLimit:10/3,version:"v4",certified:!0,pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/31784029-0313c702-b509-11e7-9ccc-bc0da6a0e435.jpg",doc:"https://www.gate.io/docs/developers/apiv4/en/",www:"https://gate.io/",api:{public:{wallet:"https://api.gateio.ws/api/v4",futures:"https://api.gateio.ws/api/v4",margin:"https://api.gateio.ws/api/v4",delivery:"https://api.gateio.ws/api/v4",spot:"https://api.gateio.ws/api/v4",options:"https://api.gateio.ws/api/v4",sub_accounts:"https://api.gateio.ws/api/v4",earn:"https://api.gateio.ws/api/v4"},private:{withdrawals:"https://api.gateio.ws/api/v4",wallet:"https://api.gateio.ws/api/v4",futures:"https://api.gateio.ws/api/v4",margin:"https://api.gateio.ws/api/v4",delivery:"https://api.gateio.ws/api/v4",spot:"https://api.gateio.ws/api/v4",options:"https://api.gateio.ws/api/v4",subAccounts:"https://api.gateio.ws/api/v4",rebate:"https://api.gateio.ws/api/v4",earn:"https://api.gateio.ws/api/v4"}},test:{public:{futures:"https://fx-api-testnet.gateio.ws/api/v4",delivery:"https://fx-api-testnet.gateio.ws/api/v4",options:"https://fx-api-testnet.gateio.ws/api/v4"},private:{futures:"https://fx-api-testnet.gateio.ws/api/v4",delivery:"https://fx-api-testnet.gateio.ws/api/v4",options:"https://fx-api-testnet.gateio.ws/api/v4"}},referral:{url:"https://www.gate.io/ref/2436035",discount:.2}},has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,addMargin:!0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!0,createOrder:!0,createPostOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchNetworkDepositAddress:!0,fetchOHLCV:!0,fetchOpenInterest:!1,fetchOpenInterestHistory:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactionFees:!0,fetchWithdrawals:!0,reduceMargin:!0,repayMargin:!0,setLeverage:!0,setMarginMode:!1,transfer:!0,withdraw:!0},api:{public:{wallet:{get:{currency_chains:1.5}},spot:{get:{currencies:1,"currencies/{currency}":1,currency_pairs:1,"currency_pairs/{currency_pair}":1,tickers:1,order_book:1,trades:1,candlesticks:1}},margin:{get:{currency_pairs:1,"currency_pairs/{currency_pair}":1,"cross/currencies":1,"cross/currencies/{currency}":1,funding_book:1}},futures:{get:{"{settle}/contracts":1.5,"{settle}/contracts/{contract}":1.5,"{settle}/order_book":1.5,"{settle}/trades":1.5,"{settle}/candlesticks":1.5,"{settle}/tickers":1.5,"{settle}/funding_rate":1.5,"{settle}/insurance":1.5,"{settle}/contract_stats":1.5,"{settle}/liq_orders":1.5}},delivery:{get:{"{settle}/contracts":1.5,"{settle}/contracts/{contract}":1.5,"{settle}/order_book":1.5,"{settle}/trades":1.5,"{settle}/candlesticks":1.5,"{settle}/tickers":1.5,"{settle}/insurance":1.5}},options:{get:{underlyings:1.5,expirations:1.5,contracts:1.5,"contracts/{contract}":1.5,settlements:1.5,"settlements/{contract}":1.5,order_book:1.5,tickers:1.5,"underlying/tickers/{underlying}":1.5,candlesticks:1.5,"underlying/candlesticks":1.5,trades:1.5}},earn:{get:{"uni/currencies":1.5,"uni/currencies/{currency}":1.5}}},private:{withdrawals:{post:{withdrawals:3e3},delete:{"withdrawals/{withdrawal_id}":300}},wallet:{get:{deposit_address:300,withdrawals:300,deposits:300,sub_account_transfers:300,withdraw_status:300,sub_account_balances:300,fee:300,total_balance:300},post:{transfers:300,sub_account_transfers:300}},subAccounts:{get:{sub_accounts:1,"sub_accounts/{user_id}":1,"sub_accounts/{user_id}/keys":1,"sub_accounts/{user_id}/keys/{key}":1},post:{sub_accounts:1,"sub_accounts/{user_id}/keys":1,"sub_accounts/{user_id}/lock":1,"sub_accounts/{user_id}/unlock":1},put:{"sub_accounts/{user_id}/keys/{key}":1},delete:{"sub_accounts/{user_id}/keys/{key}":1}},spot:{get:{accounts:1,open_orders:1,orders:1,"orders/{order_id}":1,my_trades:1,price_orders:1,"price_orders/{order_id}":1},post:{batch_orders:1,orders:1,cancel_batch_orders:1,price_orders:1},delete:{orders:1,"orders/{order_id}":1,price_orders:1,"price_orders/{order_id}":1},patch:{"orders/{order_id}":1}},margin:{get:{accounts:1.5,account_book:1.5,funding_accounts:1.5,loans:1.5,"loans/{loan_id}":1.5,"loans/{loan_id}/repayment":1.5,loan_records:1.5,"loan_records/{load_record_id}":1.5,auto_repay:1.5,transferable:1.5,"cross/accounts":1.5,"cross/account_book":1.5,"cross/loans":1.5,"cross/loans/{loan_id}":1.5,"cross/loans/repayments":1.5,"cross/transferable":1.5,"loan_records/{loan_record_id}":1.5,borrowable:1.5,"cross/repayments":1.5,"cross/borrowable":1.5},post:{loans:1.5,merged_loans:1.5,"loans/{loan_id}/repayment":1.5,auto_repay:1.5,"cross/loans":1.5,"cross/loans/repayments":1.5,"cross/repayments":1.5},patch:{"loans/{loan_id}":1.5,"loan_records/{loan_record_id}":1.5},delete:{"loans/{loan_id}":1.5}},futures:{get:{"{settle}/accounts":1.5,"{settle}/account_book":1.5,"{settle}/positions":1.5,"{settle}/positions/{contract}":1.5,"{settle}/orders":1.5,"{settle}/orders/{order_id}":1.5,"{settle}/my_trades":1.5,"{settle}/position_close":1.5,"{settle}/liquidates":1.5,"{settle}/price_orders":1.5,"{settle}/price_orders/{order_id}":1.5,"{settle}/dual_comp/positions/{contract}":1.5,"{settle}/auto_deleverages":1.5},post:{"{settle}/positions/{contract}/margin":1.5,"{settle}/positions/{contract}/leverage":1.5,"{settle}/positions/{contract}/risk_limit":1.5,"{settle}/dual_mode":1.5,"{settle}/dual_comp/positions/{contract}":1.5,"{settle}/dual_comp/positions/{contract}/margin":1.5,"{settle}/dual_comp/positions/{contract}/leverage":1.5,"{settle}/dual_comp/positions/{contract}/risk_limit":1.5,"{settle}/orders":1.5,"{settle}/price_orders":1.5},delete:{"{settle}/orders":1.5,"{settle}/orders/{order_id}":1.5,"{settle}/price_orders":1.5,"{settle}/price_orders/{order_id}":1.5}},delivery:{get:{"{settle}/accounts":1.5,"{settle}/account_book":1.5,"{settle}/positions":1.5,"{settle}/positions/{contract}":1.5,"{settle}/orders":1.5,"{settle}/orders/{order_id}":1.5,"{settle}/my_trades":1.5,"{settle}/position_close":1.5,"{settle}/liquidates":1.5,"{settle}/price_orders":1.5,"{settle}/price_orders/{order_id}":1.5,"{settle}/settlements":1.5},post:{"{settle}/positions/{contract}/margin":1.5,"{settle}/positions/{contract}/leverage":1.5,"{settle}/positions/{contract}/risk_limit":1.5,"{settle}/orders":1.5,"{settle}/price_orders":1.5},delete:{"{settle}/orders":1.5,"{settle}/orders/{order_id}":1.5,"{settle}/price_orders":1.5,"{settle}/price_orders/{order_id}":1.5}},options:{get:{accounts:1.5,account_book:1.5,positions:1.5,"positions/{contract}":1.5,position_close:1.5,orders:1.5,"orders/{order_id}":1.5,my_trades:1.5},post:{orders:1.5},delete:{orders:1.5,"orders/{order_id}":1.5}},rebate:{get:{"agency/transaction_history":1.5,"agency/commission_history":1.5}},earn:{get:{"uni/lends":1.5,"uni/lend_records":1.5,"uni/interests/{currency}":1.5,"uni/interest_records":1.5},post:{"uni/lends":1.5},patch:{"uni/lends":1.5}}}},timeframes:{"10s":"10s","1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","8h":"8h","1d":"1d","7d":"7d","1w":"7d"},commonCurrencies:{"88MPH":"MPH",AXIS:"Axis DeFi",BIFI:"Bitcoin File",BOX:"DefiBox",BTCBEAR:"BEAR",BTCBULL:"BULL",BYN:"BeyondFi",EGG:"Goose Finance",GTC:"Game.com",GTC_HT:"Game.com HT",GTC_BSC:"Game.com BSC",HIT:"HitChain",MM:"Million",MPH:"Morpher",POINT:"GatePoint",RAI:"Rai Reflex Index",SBTC:"Super Bitcoin",TNC:"Trinity Network Credit",VAI:"VAIOT"},requiredCredentials:{apiKey:!0,secret:!0},headers:{"X-Gate-Channel-Id":"ccxt"},options:{sandboxMode:!1,createOrder:{expiration:86400},networks:{TRC20:"TRX",ERC20:"ETH",BEP20:"BSC"},timeInForce:{GTC:"gtc",IOC:"ioc",PO:"poc",POC:"poc",FOK:"fok"},accountsByType:{funding:"spot",spot:"spot",margin:"margin",cross_margin:"cross_margin",cross:"cross_margin",isolated:"margin",swap:"futures",future:"delivery",futures:"futures",delivery:"delivery"},defaultType:"spot",swap:{fetchMarkets:{settlementCurrencies:["usdt","btc"]}},future:{fetchMarkets:{settlementCurrencies:["usdt"]}}},precisionMode:a.sh,fees:{trading:{tierBased:!0,feeSide:"get",percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("1.5"),this.parseNumber("0.00185")],[this.parseNumber("3"),this.parseNumber("0.00175")],[this.parseNumber("6"),this.parseNumber("0.00165")],[this.parseNumber("12.5"),this.parseNumber("0.00155")],[this.parseNumber("25"),this.parseNumber("0.00145")],[this.parseNumber("75"),this.parseNumber("0.00135")],[this.parseNumber("200"),this.parseNumber("0.00125")],[this.parseNumber("500"),this.parseNumber("0.00115")],[this.parseNumber("1250"),this.parseNumber("0.00105")],[this.parseNumber("2500"),this.parseNumber("0.00095")],[this.parseNumber("3000"),this.parseNumber("0.00085")],[this.parseNumber("6000"),this.parseNumber("0.00075")],[this.parseNumber("11000"),this.parseNumber("0.00065")],[this.parseNumber("20000"),this.parseNumber("0.00055")],[this.parseNumber("40000"),this.parseNumber("0.00055")],[this.parseNumber("75000"),this.parseNumber("0.00055")]],taker:[[this.parseNumber("0"),this.parseNumber("0.002")],[this.parseNumber("1.5"),this.parseNumber("0.00195")],[this.parseNumber("3"),this.parseNumber("0.00185")],[this.parseNumber("6"),this.parseNumber("0.00175")],[this.parseNumber("12.5"),this.parseNumber("0.00165")],[this.parseNumber("25"),this.parseNumber("0.00155")],[this.parseNumber("75"),this.parseNumber("0.00145")],[this.parseNumber("200"),this.parseNumber("0.00135")],[this.parseNumber("500"),this.parseNumber("0.00125")],[this.parseNumber("1250"),this.parseNumber("0.00115")],[this.parseNumber("2500"),this.parseNumber("0.00105")],[this.parseNumber("3000"),this.parseNumber("0.00095")],[this.parseNumber("6000"),this.parseNumber("0.00085")],[this.parseNumber("11000"),this.parseNumber("0.00075")],[this.parseNumber("20000"),this.parseNumber("0.00065")],[this.parseNumber("40000"),this.parseNumber("0.00065")],[this.parseNumber("75000"),this.parseNumber("0.00065")]]}},swap:{tierBased:!0,feeSide:"base",percentage:!0,maker:this.parseNumber("0.0"),taker:this.parseNumber("0.0005"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.0000")],[this.parseNumber("1.5"),this.parseNumber("-0.00005")],[this.parseNumber("3"),this.parseNumber("-0.00005")],[this.parseNumber("6"),this.parseNumber("-0.00005")],[this.parseNumber("12.5"),this.parseNumber("-0.00005")],[this.parseNumber("25"),this.parseNumber("-0.00005")],[this.parseNumber("75"),this.parseNumber("-0.00005")],[this.parseNumber("200"),this.parseNumber("-0.00005")],[this.parseNumber("500"),this.parseNumber("-0.00005")],[this.parseNumber("1250"),this.parseNumber("-0.00005")],[this.parseNumber("2500"),this.parseNumber("-0.00005")],[this.parseNumber("3000"),this.parseNumber("-0.00008")],[this.parseNumber("6000"),this.parseNumber("-0.01000")],[this.parseNumber("11000"),this.parseNumber("-0.01002")],[this.parseNumber("20000"),this.parseNumber("-0.01005")],[this.parseNumber("40000"),this.parseNumber("-0.02000")],[this.parseNumber("75000"),this.parseNumber("-0.02005")]],taker:[[this.parseNumber("0"),this.parseNumber("0.00050")],[this.parseNumber("1.5"),this.parseNumber("0.00048")],[this.parseNumber("3"),this.parseNumber("0.00046")],[this.parseNumber("6"),this.parseNumber("0.00044")],[this.parseNumber("12.5"),this.parseNumber("0.00042")],[this.parseNumber("25"),this.parseNumber("0.00040")],[this.parseNumber("75"),this.parseNumber("0.00038")],[this.parseNumber("200"),this.parseNumber("0.00036")],[this.parseNumber("500"),this.parseNumber("0.00034")],[this.parseNumber("1250"),this.parseNumber("0.00032")],[this.parseNumber("2500"),this.parseNumber("0.00030")],[this.parseNumber("3000"),this.parseNumber("0.00030")],[this.parseNumber("6000"),this.parseNumber("0.00030")],[this.parseNumber("11000"),this.parseNumber("0.00030")],[this.parseNumber("20000"),this.parseNumber("0.00030")],[this.parseNumber("40000"),this.parseNumber("0.00030")],[this.parseNumber("75000"),this.parseNumber("0.00030")]]}}},exceptions:{exact:{INVALID_PARAM_VALUE:n.BadRequest,INVALID_PROTOCOL:n.BadRequest,INVALID_ARGUMENT:n.BadRequest,INVALID_REQUEST_BODY:n.BadRequest,MISSING_REQUIRED_PARAM:n.ArgumentsRequired,BAD_REQUEST:n.BadRequest,INVALID_CONTENT_TYPE:n.BadRequest,NOT_ACCEPTABLE:n.BadRequest,METHOD_NOT_ALLOWED:n.BadRequest,NOT_FOUND:n.ExchangeError,INVALID_CREDENTIALS:n.AuthenticationError,INVALID_KEY:n.AuthenticationError,IP_FORBIDDEN:n.AuthenticationError,READ_ONLY:n.PermissionDenied,INVALID_SIGNATURE:n.AuthenticationError,MISSING_REQUIRED_HEADER:n.AuthenticationError,REQUEST_EXPIRED:n.AuthenticationError,ACCOUNT_LOCKED:n.AccountSuspended,FORBIDDEN:n.PermissionDenied,SUB_ACCOUNT_NOT_FOUND:n.ExchangeError,SUB_ACCOUNT_LOCKED:n.AccountSuspended,MARGIN_BALANCE_EXCEPTION:n.ExchangeError,MARGIN_TRANSFER_FAILED:n.ExchangeError,TOO_MUCH_FUTURES_AVAILABLE:n.ExchangeError,FUTURES_BALANCE_NOT_ENOUGH:n.InsufficientFunds,ACCOUNT_EXCEPTION:n.ExchangeError,SUB_ACCOUNT_TRANSFER_FAILED:n.ExchangeError,ADDRESS_NOT_USED:n.ExchangeError,TOO_FAST:n.RateLimitExceeded,WITHDRAWAL_OVER_LIMIT:n.ExchangeError,API_WITHDRAW_DISABLED:n.ExchangeNotAvailable,INVALID_WITHDRAW_ID:n.ExchangeError,INVALID_WITHDRAW_CANCEL_STATUS:n.ExchangeError,INVALID_PRECISION:n.InvalidOrder,INVALID_CURRENCY:n.BadSymbol,INVALID_CURRENCY_PAIR:n.BadSymbol,POC_FILL_IMMEDIATELY:n.OrderImmediatelyFillable,ORDER_NOT_FOUND:n.OrderNotFound,CLIENT_ID_NOT_FOUND:n.OrderNotFound,ORDER_CLOSED:n.InvalidOrder,ORDER_CANCELLED:n.InvalidOrder,QUANTITY_NOT_ENOUGH:n.InvalidOrder,BALANCE_NOT_ENOUGH:n.InsufficientFunds,MARGIN_NOT_SUPPORTED:n.InvalidOrder,MARGIN_BALANCE_NOT_ENOUGH:n.InsufficientFunds,AMOUNT_TOO_LITTLE:n.InvalidOrder,AMOUNT_TOO_MUCH:n.InvalidOrder,REPEATED_CREATION:n.InvalidOrder,LOAN_NOT_FOUND:n.OrderNotFound,LOAN_RECORD_NOT_FOUND:n.OrderNotFound,NO_MATCHED_LOAN:n.ExchangeError,NOT_MERGEABLE:n.ExchangeError,NO_CHANGE:n.ExchangeError,REPAY_TOO_MUCH:n.ExchangeError,TOO_MANY_CURRENCY_PAIRS:n.InvalidOrder,TOO_MANY_ORDERS:n.InvalidOrder,MIXED_ACCOUNT_TYPE:n.InvalidOrder,AUTO_BORROW_TOO_MUCH:n.ExchangeError,TRADE_RESTRICTED:n.InsufficientFunds,USER_NOT_FOUND:n.AccountNotEnabled,CONTRACT_NO_COUNTER:n.ExchangeError,CONTRACT_NOT_FOUND:n.BadSymbol,RISK_LIMIT_EXCEEDED:n.ExchangeError,INSUFFICIENT_AVAILABLE:n.InsufficientFunds,LIQUIDATE_IMMEDIATELY:n.InvalidOrder,LEVERAGE_TOO_HIGH:n.InvalidOrder,LEVERAGE_TOO_LOW:n.InvalidOrder,ORDER_NOT_OWNED:n.ExchangeError,ORDER_FINISHED:n.ExchangeError,POSITION_CROSS_MARGIN:n.ExchangeError,POSITION_IN_LIQUIDATION:n.ExchangeError,POSITION_IN_CLOSE:n.ExchangeError,POSITION_EMPTY:n.InvalidOrder,REMOVE_TOO_MUCH:n.ExchangeError,RISK_LIMIT_NOT_MULTIPLE:n.ExchangeError,RISK_LIMIT_TOO_HIGH:n.ExchangeError,RISK_LIMIT_TOO_lOW:n.ExchangeError,PRICE_TOO_DEVIATED:n.InvalidOrder,SIZE_TOO_LARGE:n.InvalidOrder,SIZE_TOO_SMALL:n.InvalidOrder,PRICE_OVER_LIQUIDATION:n.InvalidOrder,PRICE_OVER_BANKRUPT:n.InvalidOrder,ORDER_POC_IMMEDIATE:n.OrderImmediatelyFillable,INCREASE_POSITION:n.InvalidOrder,CONTRACT_IN_DELISTING:n.ExchangeError,INTERNAL:n.ExchangeNotAvailable,SERVER_ERROR:n.ExchangeNotAvailable,TOO_BUSY:n.ExchangeNotAvailable,CROSS_ACCOUNT_NOT_FOUND:n.ExchangeError,RISK_LIMIT_TOO_LOW:n.BadRequest,AUTO_TRIGGER_PRICE_LESS_LAST:n.InvalidOrder,AUTO_TRIGGER_PRICE_GREATE_LAST:n.InvalidOrder},broad:{}}})}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e}async fetchMarkets(e={}){const t=this.safeValue(this.options,"sandboxMode",!1);let i=[this.fetchContractMarkets(e),this.fetchOptionMarkets(e)];if(!t){const t=[this.fetchSpotMarkets(e)];i=this.arrayConcat(i,t)}const s=await Promise.all(i),r=this.safeValue(s,0,[]),a=this.safeValue(s,1,[]),n=this.safeValue(s,2,[]),o=this.arrayConcat(r,a);return this.arrayConcat(o,n)}async fetchSpotMarkets(e={}){const t=await this.publicMarginGetCurrencyPairs(e),i=await this.publicSpotGetCurrencyPairs(e),s=this.indexBy(t,"id"),a=[];for(let e=0;e<i.length;e++){const t=i[e],n=this.safeString(t,"id"),o=this.safeValue(s,n),d=this.deepExtend(o,t),[c,h]=n.split("_"),u=this.safeCurrencyCode(c),l=this.safeCurrencyCode(h),p=this.safeString(d,"fee"),f=this.safeString(d,"maker_fee_rate",p),m=this.parseNumber(this.parsePrecision(this.safeString(d,"amount_precision"))),v=this.safeString(d,"trade_status"),g=void 0!==this.safeNumber(d,"leverage");a.push({id:n,symbol:u+"/"+l,base:u,quote:l,settle:void 0,baseId:c,quoteId:h,settleId:void 0,type:"spot",spot:!0,margin:g,swap:!1,future:!1,option:!1,active:"tradable"===v,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(r.O.stringDiv(p,"100")),maker:this.parseNumber(r.O.stringDiv(f,"100")),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:m,price:this.parseNumber(this.parsePrecision(this.safeString(d,"precision")))},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(d,"leverage",1)},amount:{min:this.safeNumber(t,"min_base_amount",m),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(d,"min_quote_amount"),max:g?this.safeNumber(d,"max_quote_amount"):void 0}},info:d})}return a}async fetchContractMarkets(e={}){const t=[],i=this.getSettlementCurrencies("swap","fetchMarkets"),s=this.getSettlementCurrencies("future","fetchMarkets");for(let s=0;s<i.length;s++){const r=i[s],a={settle:r},n=await this.publicFuturesGetSettleContracts(this.extend(a,e));for(let e=0;e<n.length;e++){const i=this.parseContractMarket(n[e],r);t.push(i)}}for(let i=0;i<s.length;i++){const r=s[i],a={settle:r},n=await this.publicDeliveryGetSettleContracts(this.extend(a,e));for(let e=0;e<n.length;e++){const i=this.parseContractMarket(n[e],r);t.push(i)}}return t}parseContractMarket(e,t){const i=this.safeString(e,"name"),s=i.split("_"),a=this.safeString(s,0),n=this.safeString(s,1),o=this.safeString(s,2),d=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),h=this.safeCurrencyCode(t),u=this.safeTimestamp(e,"expire_time");let l="",p="swap";void 0!==o?(l=d+"/"+c+":"+h+"-"+this.yymmdd(u,""),p="future"):l=d+"/"+c+":"+h;const f=this.safeString(e,"order_price_deviate"),m=this.safeString(e,"mark_price"),v=r.O.stringSub("1",f),g=r.O.stringAdd("1",f),y=r.O.stringMul(v,m),b=r.O.stringMul(g,m),w=this.safeString(e,"taker_fee_rate"),S=this.safeString(e,"maker_fee_rate",w),P=c===h;return{id:i,symbol:l,base:d,quote:c,settle:h,baseId:a,quoteId:n,settleId:t,type:p,spot:!1,margin:!1,swap:"swap"===p,future:"future"===p,option:"option"===p,active:!0,contract:!0,linear:P,inverse:!P,taker:this.parseNumber(r.O.stringDiv(w,"100")),maker:this.parseNumber(r.O.stringDiv(S,"100")),contractSize:this.safeNumber(e,"quanto_multiplier"),expiry:u,expiryDatetime:this.iso8601(u),strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1"),price:this.safeNumber(e,"order_price_round")},limits:{leverage:{min:this.safeNumber(e,"leverage_min"),max:this.safeNumber(e,"leverage_max")},amount:{min:this.safeNumber(e,"order_size_min"),max:this.safeNumber(e,"order_size_max")},price:{min:this.parseNumber(y),max:this.parseNumber(b)},cost:{min:void 0,max:void 0}},info:e}}async fetchOptionMarkets(e={}){const t=[],i=await this.fetchOptionUnderlyings();for(let s=0;s<i.length;s++){const a=i[s],n=this.extend({},e);n.underlying=a;const o=await this.publicOptionsGetContracts(n);for(let e=0;e<o.length;e++){const i=o[e],s=this.safeString(i,"name"),n=a.split("_"),d=this.safeString(n,0),c=this.safeString(n,1),h=this.safeCurrencyCode(d),u=this.safeCurrencyCode(c);let l=h+"/"+u;const p=this.safeTimestamp(i,"expiration_time"),f=this.safeString(i,"strike_price"),m=this.safeValue(i,"is_call"),v=m?"C":"P",g=m?"call":"put";l=l+":"+u+"-"+this.yymmdd(p)+"-"+f+"-"+v;const y=this.safeString(i,"order_price_deviate"),b=this.safeString(i,"mark_price"),w=r.O.stringSub("1",y),S=r.O.stringAdd("1",y),P=r.O.stringMul(w,b),k=r.O.stringMul(S,b),O=this.safeString(i,"taker_fee_rate"),T=this.safeString(i,"maker_fee_rate",O);t.push({id:s,symbol:l,base:h,quote:u,settle:u,baseId:d,quoteId:c,settleId:c,type:"option",spot:!1,margin:!1,swap:!1,future:!1,option:!0,active:!0,contract:!0,linear:!0,inverse:!1,taker:this.parseNumber(r.O.stringDiv(O,"100")),maker:this.parseNumber(r.O.stringDiv(T,"100")),contractSize:this.parseNumber("1"),expiry:p,expiryDatetime:this.iso8601(p),strike:f,optionType:g,precision:{amount:this.parseNumber("1"),price:this.safeNumber(i,"order_price_round")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(i,"order_size_min"),max:this.safeNumber(i,"order_size_max")},price:{min:this.parseNumber(P),max:this.parseNumber(k)},cost:{min:void 0,max:void 0}},info:i})}}return t}async fetchOptionUnderlyings(){const e=await this.publicOptionsGetUnderlyings(),t=[];for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"name");void 0!==r&&t.push(r)}return t}prepareRequest(e=undefined,t=undefined,i={}){const s={};if(void 0!==e)e.contract?(s.contract=e.id,s.settle=e.settleId):s.currency_pair=e.id;else{const e="swap"===t;if(e||"future"===t){const t=e?"usdt":"btc",r=this.safeStringLower(i,"settle",t);i=this.omit(i,"settle"),s.settle=r}}return[s,i]}spotOrderPrepareRequest(e=undefined,t=!1,i={}){const[s,r]=this.getMarginMode(t,i),a={};if(!t){if(void 0===e)throw new n.ArgumentsRequired(this.id+" spotOrderPrepareRequest() requires a market argument for non-stop orders");a.account=s,a.currency_pair=e.id}return[a,r]}multiOrderSpotPrepareRequest(e=undefined,t=!1,i={}){const[s,r]=this.getMarginMode(t,i),a={account:s};return void 0!==e&&(t?a.market=e.id:a.currency_pair=e.id),[a,r]}getMarginMode(e,t){const i=this.safeStringLower2(this.options,"defaultMarginMode","marginMode","spot");let s=this.safeStringLower2(t,"marginMode","account",i);if(t=this.omit(t,["marginMode","account"]),"cross"===s?s="cross_margin":"isolated"===s?s="margin":""===s&&(s="spot"),e&&("spot"===s&&(s="normal"),"cross_margin"===s))throw new n.BadRequest(this.id+" getMarginMode() does not support stop orders for cross margin");return[s,t]}getSettlementCurrencies(e,t){const i=this.safeValue(this.options,e,{}),s=this.safeValue(i,t,{}),r="swap"===e?["usdt"]:["btc"];return this.safeValue(s,"settlementCurrencies",r)}async fetchCurrencies(e={}){if(void 0!==this.safeValue(this.urls,"apiBackup"))return;const t=await this.publicSpotGetCurrencies(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency"),a=this.safeStringLower(s,"currency"),n=this.safeCurrencyCode(r),o=this.safeValue(s,"delisted"),d=this.safeValue(s,"withdraw_disabled",!1),c=this.safeValue(s,"deposit_disabled",!1),h=this.safeValue(s,"trade_disabled",!1),u=!d,l=!c,p=!o&&!h&&u&&l;i[n]={id:r,lowerCaseId:a,name:void 0,code:n,precision:this.parseNumber("1e-4"),info:s,active:p,deposit:l,withdraw:u,fee:void 0,fees:[],limits:this.limits}}return i}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new n.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");const[s,r]=this.prepareRequest(i,void 0,t),a=await this.publicFuturesGetSettleContractsContract(this.extend(s,r));return this.parseFundingRate(a)}async fetchFundingRates(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const[i,s]=this.prepareRequest(void 0,"swap",t),r=await this.publicFuturesGetSettleContracts(this.extend(i,s)),a=this.parseFundingRates(r);return this.filterByArray(a,"symbol",e)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"name"),s=this.safeSymbol(i,t,"_","swap"),r=this.safeNumber(e,"mark_price"),a=this.safeNumber(e,"index_price"),n=this.safeNumber(e,"interest_rate"),o=this.safeNumber(e,"funding_rate"),d=this.safeTimestamp(e,"funding_next_apply"),c=this.safeNumber(e,"funding_rate_indicative");return{info:e,symbol:s,markPrice:r,indexPrice:a,interestRate:n,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:o,fundingTimestamp:d,fundingDatetime:this.iso8601(d),nextFundingRate:c,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchNetworkDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.privateWalletGetDepositAddress(this.extend(i,t)),r=this.safeValue(s,"multichain_addresses"),a=this.safeString(s,"currency");e=this.safeCurrencyCode(a);const n={};for(let t=0;t<r.length;t++){const i=r[t];if(this.safeInteger(i,"obtain_failed"))continue;const s=this.safeString(i,"chain"),a=this.safeString(i,"address"),o=this.safeString(i,"payment_id");n[s]={info:i,code:e,currency:e,address:a,tag:o}}return n}async createDepositAddress(e,t={}){return await this.fetchDepositAddress(e,t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.privateWalletGetDepositAddress(this.extend(i,t)),r=this.safeString(s,"currency");e=this.safeCurrencyCode(r);const a=this.safeString(s,"address");let o,d;if(void 0!==a){if(a.indexOf("New address is being generated for you, please wait")>=0)throw new n.BadResponse(this.id+" New address is being generated for you, please wait a few seconds and try again to get the address.");if(a.indexOf(" ")>=0){const e=a.split(" ");d=e[0],o=e[1]}else d=a}return this.checkAddress(d),{info:s,code:e,currency:e,address:d,tag:o,network:void 0}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={currency_pair:i.id},r=await this.privateWalletGetFee(this.extend(s,t));return this.parseTradingFee(r,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateWalletGetFee(e);return this.parseTradingFees(t)}parseTradingFees(e){const t={};for(let i=0;i<this.symbols.length;i++){const s=this.symbols[i],r=this.market(s);t[s]=this.parseTradingFee(e,r)}return t}parseTradingFee(e,t=undefined){const i=this.safeValue(t,"contract"),s=i?"futures_taker_fee":"taker_fee",r=i?"futures_maker_fee":"maker_fee";return{info:e,symbol:this.safeString(t,"symbol"),maker:this.safeNumber(e,r),taker:this.safeNumber(e,s)}}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privateWalletGetWithdrawStatus(t),s={};let r={};for(let t=0;t<i.length;t++){r={};const a=i[t],n=this.safeString(a,"currency"),o=this.safeCurrencyCode(n);if(void 0!==e&&!this.inArray(o,e))continue;const d=this.safeValue(a,"withdraw_fix_on_chains");if(void 0===d)r=this.safeNumber(a,"withdraw_fix");else{const e=Object.keys(d);for(let t=0;t<e.length;t++){const i=e[t];r[i]=this.parseNumber(d[i])}}s[o]={withdraw:r,deposit:void 0,info:a}}return s}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privateWalletGetWithdrawStatus(t);return this.parseDepositWithdrawFees(i,e,"currency")}parseDepositWithdrawFee(e,t=undefined){const i=this.safeValue(e,"withdraw_fix_on_chains"),s={info:e,withdraw:{fee:this.safeNumber(e,"withdraw_fix"),percentage:!1},deposit:{fee:this.safeNumber(e,"deposit"),percentage:!1},networks:{}};if(void 0!==i){const e=Object.keys(i);for(let t=0;t<e.length;t++){const r=e[t];s.networks[r]={withdraw:{fee:this.parseNumber(i[r]),percentage:!1},deposit:{fee:void 0,percentage:void 0}}}}return s}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e),e=r.symbol);const[a,n]=this.handleMarketTypeAndParams("fetchFundingHistory",r,s),[o,d]=this.prepareRequest(r,a,n);o.type="fund",void 0!==t&&(o.from=t/1e3),void 0!==i&&(o.limit=i);const c=this.getSupportedMapping(a,{swap:"privateFuturesGetSettleAccountBook",future:"privateDeliveryGetSettleAccountBook"}),h=await this[c](this.extend(o,d));return this.parseFundingHistories(h,e,t,i)}parseFundingHistories(e,t,i,s){const r=[];for(let t=0;t<e.length;t++){const i=e[t],s=this.parseFundingHistory(i);r.push(s)}const a=this.sortBy(r,"timestamp");return this.filterBySymbolSinceLimit(a,t,i,s)}parseFundingHistory(e,t=undefined){const i=this.safeTimestamp(e,"time"),s=this.safeString(e,"text");return t=this.safeMarket(s,t,"_","swap"),{info:e,symbol:this.safeString(t,"symbol"),code:this.safeString(t,"settle"),timestamp:i,datetime:this.iso8601(i),id:void 0,amount:this.safeNumber(e,"change")}}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),[r,a]=this.prepareRequest(s,void 0,i),n=this.getSupportedMapping(s.type,{spot:"publicSpotGetOrderBook",margin:"publicSpotGetOrderBook",swap:"publicFuturesGetSettleOrderBook",future:"publicDeliveryGetSettleOrderBook"});void 0!==t&&(r.limit=t),r.with_id=!0;const o=await this[n](this.extend(r,a));let d=this.safeInteger(o,"current");s.spot||(d*=1e3);const c=s.spot?0:"p",h=s.spot?1:"s",u=this.safeInteger(o,"id"),l=this.parseOrderBook(o,e,d,"bids","asks",c,h);return l.nonce=u,l}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),[s,r]=this.prepareRequest(i,void 0,t),a=this.getSupportedMapping(i.type,{spot:"publicSpotGetTickers",margin:"publicSpotGetTickers",swap:"publicFuturesGetSettleTickers",future:"publicDeliveryGetSettleTickers"}),n=await this[a](this.extend(s,r)),o=this.safeValue(n,0);return this.parseTicker(o,i)}parseTicker(e,t=undefined){const i=this.safeString2(e,"currency_pair","contract"),s="contract"in e?"contract":"spot",r=this.safeSymbol(i,t,"_",s),a=this.safeString(e,"last"),n=this.safeString2(e,"lowest_ask","a"),o=this.safeString2(e,"highest_bid","b"),d=this.safeString(e,"high_24h"),c=this.safeString(e,"low_24h"),h=this.safeString(e,"B"),u=this.safeString(e,"A"),l=this.safeInteger(e,"t");let p=this.safeString2(e,"base_volume","volume_24h_base");"nan"===p&&(p="0");let f=this.safeString2(e,"quote_volume","volume_24h_quote");"nan"===f&&(f="0");const m=this.safeString(e,"change_percentage");return this.safeTicker({symbol:r,timestamp:l,datetime:this.iso8601(l),high:d,low:c,bid:o,bidVolume:h,ask:n,askVolume:u,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:m,average:void 0,baseVolume:p,quoteVolume:f,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.safeString(e,0);let s;void 0!==i&&(s=this.market(i));const[r,a]=this.handleMarketTypeAndParams("fetchTickers",s,t),[n,o]=this.prepareRequest(void 0,r,a),d=this.getSupportedMapping(r,{spot:"publicSpotGetTickers",margin:"publicSpotGetTickers",swap:"publicFuturesGetSettleTickers",future:"publicDeliveryGetSettleTickers"}),c=await this[d](this.extend(n,o));return this.parseTickers(c,e)}parseBalanceHelper(e){const t=this.account();return t.used=this.safeString2(e,"freeze","locked"),t.free=this.safeString(e,"available"),t.total=this.safeString(e,"total"),"borrowed"in e&&(t.debt=this.safeString(e,"borrowed")),t}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"symbol");e=this.omit(e,"symbol");const[i,s]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),[r,a]=this.prepareRequest(void 0,i,s),[n,o]=this.getMarginMode(!1,a);if(void 0!==t){const e=this.market(t);r.currency_pair=e.id}const d=this.getSupportedMapping(i,{spot:this.getSupportedMapping(n,{spot:"privateSpotGetAccounts",margin:"privateMarginGetAccounts",cross_margin:"privateMarginGetCrossAccounts"}),funding:"privateMarginGetFundingAccounts",swap:"privateFuturesGetSettleAccounts",future:"privateDeliveryGetSettleAccounts"});let c=await this[d](this.extend(r,o));("swap"===i||"future"===i)&&(c=[c]);const h={info:c},u="margin"===n;let l=c;if("balances"in l){const e=[],t=this.safeValue(l,"balances",[]),i=Object.keys(t);for(let s=0;s<i.length;s++){const r=i[s],a=t[r];a.currency=r,e.push(a)}l=e}for(let e=0;e<l.length;e++){const t=l[e];if(u){const e=this.safeString(t,"currency_pair"),i=this.safeSymbol(e,void 0,"_","margin"),s=this.safeValue(t,"base",{}),r=this.safeValue(t,"quote",{}),a=this.safeCurrencyCode(this.safeString(s,"currency")),n=this.safeCurrencyCode(this.safeString(r,"currency")),o={};o[a]=this.parseBalanceHelper(s),o[n]=this.parseBalanceHelper(r),h[i]=this.safeBalance(o)}else h[this.safeCurrencyCode(this.safeString(t,"currency"))]=this.parseBalanceHelper(t)}return u?h:this.safeBalance(h)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(r,"price");let o={};[o,r]=this.prepareRequest(a,void 0,r),o.interval=this.safeString(this.timeframes,t,t);let d="publicSpotGetCandlesticks",c=1e3;a.contract&&(c=1999,s=void 0===s?c:Math.min(s,c),a.future?d="publicDeliveryGetSettleCandlesticks":a.swap&&(d="publicFuturesGetSettleCandlesticks"),("mark"===n||"index"===n)&&(o.contract=n+"_"+a.id,r=this.omit(r,"price"))),s=void 0===s?c:Math.min(s,c);let h=this.safeInteger(r,"until");if(void 0!==h&&(h=this.parseToInt(h/1e3),r=this.omit(r,"until")),void 0!==i){const e=this.parseTimeframe(t);o.from=this.parseToInt(i/1e3);const r=this.sum(o.from,s*e-1),a=this.seconds(),n=Math.min(r,a);o.to=void 0!==h?Math.min(n,h):n}else void 0!==h&&(o.to=h),o.limit=s;const u=await this[d](this.extend(o,r));return this.parseOHLCVs(u,a,t,i,s)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const r=this.market(e);if(!r.swap)throw new n.BadSymbol(this.id+" fetchFundingRateHistory() supports swap contracts only");const[a,o]=this.prepareRequest(r,void 0,s);void 0!==i&&(a.limit=i);const d=await this.publicFuturesGetSettleFundingRate(this.extend(a,o)),c=[];for(let t=0;t<d.length;t++){const i=d[t],s=this.safeTimestamp(i,"t");c.push({info:i,symbol:e,fundingRate:this.safeNumber(i,"r"),timestamp:s,datetime:this.iso8601(s)})}const h=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(h,r.symbol,t,i)}parseOHLCV(e,t=undefined){return Array.isArray(e)?[this.safeTimestamp(e,0),this.safeNumber(e,5),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,6)]:[this.safeTimestamp(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber(e,"v")]}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),[a,n]=this.prepareRequest(r,void 0,s),o=this.getSupportedMapping(r.type,{spot:"publicSpotGetTrades",margin:"publicSpotGetTrades",swap:"publicFuturesGetSettleTrades",future:"publicDeliveryGetSettleTrades"});void 0!==i&&(a.limit=i),void 0!==t&&r.contract&&(a.from=this.parseToInt(t/1e3));const d=await this[o](this.extend(a,n));return this.parseTrades(d,r,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){if(await this.loadMarkets(),void 0===t)throw new n.ArgumentsRequired(this.id+" fetchOrderTrades requires a symbol argument");return await this.fetchMyTrades(t,i,s,{order_id:e})}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r,a;await this.loadMarkets();let n={};const o=void 0!==e?this.market(e):void 0,d=this.safeInteger2(s,"until","till");s=this.omit(s,["until","till"]),[r,s]=this.handleMarketTypeAndParams("fetchMyTrades",o,s),"swap"===r||"future"===r?[n,s]=this.prepareRequest(o,r,s):(void 0!==o&&(n.currency_pair=o.id),[a,s]=this.getMarginMode(!1,s),n.account=a),void 0!==i&&(n.limit=i),void 0!==t&&(n.from=this.parseToInt(t/1e3)),void 0!==d&&(n.to=this.parseToInt(d/1e3));const c=this.getSupportedMapping(r,{spot:"privateSpotGetMyTrades",margin:"privateSpotGetMyTrades",swap:"privateFuturesGetSettleMyTrades",future:"privateDeliveryGetSettleMyTrades"}),h=await this[c](this.extend(n,s));return this.parseTrades(h,o,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"id");let s=this.safeTimestamp2(e,"time","create_time");s=this.safeInteger(e,"create_time_ms",s);const a=this.safeString2(e,"currency_pair","contract"),n="contract"in e?"contract":"spot";t=this.safeMarket(a,t,"_",n);let o=this.safeString2(e,"amount","size");const d=this.safeString(e,"price"),c=r.O.stringLt(o,"0")?"sell":"buy";o=r.O.stringAbs(o);const h=this.safeString2(e,"side","type",c),u=this.safeString(e,"order_id"),l=this.safeString(e,"fee"),p=this.safeString(e,"gt_fee"),f=this.safeString(e,"point_fee"),m=[];if(void 0!==l){const i=this.safeString(e,"fee_currency");let s=this.safeCurrencyCode(i);void 0===s&&(s=this.safeString(t,"settle")),m.push({cost:l,currency:s})}void 0!==p&&m.push({cost:p,currency:"GT"}),void 0!==f&&m.push({cost:f,currency:"GatePoint"});const v=this.safeString(e,"role");return this.safeTrade({info:e,id:i,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:u,type:void 0,side:h,takerOrMaker:v,price:d,amount:o,cost:void 0,fee:void 0,fees:m},t)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.limit=i),void 0!==t){const e=this.parseToInt(t/1e3);r.from=e,r.to=this.sum(e,2592e3)}const n=await this.privateWalletGetDeposits(this.extend(r,s));return this.parseTransactions(n,a)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;if(void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.limit=i),void 0!==t){const e=this.parseToInt(t/1e3);r.from=e,r.to=this.sum(e,2592e3)}const n=await this.privateWalletGetWithdrawals(this.extend(r,s));return this.parseTransactions(n,a)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,address:i,amount:this.currencyToPrecision(e,t)};void 0!==s&&(n.memo=s);const o=this.safeValue(this.options,"networks",{});let d=this.safeStringUpper(r,"network");d=this.safeStringLower(o,d,d),void 0!==d?(n.chain=d,r=this.omit(r,"network")):n.chain=a.id;const c=await this.privateWithdrawalsPostWithdrawals(this.extend(n,r));return this.parseTransaction(c,a)}parseTransactionStatus(e){return this.safeString({PEND:"pending",REQUEST:"pending",DMOVE:"pending",CANCEL:"failed",DONE:"ok",BCODE:"ok"},e,e)}parseTransactionType(e){return this.safeString({d:"deposit",w:"withdrawal"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id");let s,a=this.safeString(e,"amount");void 0!==i&&("b"===i[0]?(s=r.O.stringGt(a,"0")?"deposit":"withdrawal",a=r.O.stringAbs(a)):s=this.parseTransactionType(i[0]));const n=this.safeString(e,"fee");"withdrawal"===s&&(a=r.O.stringSub(a,n));const o=this.safeString(e,"currency"),d=this.safeCurrencyCode(o),c=this.safeString(e,"txid"),h=this.safeString(e,"status"),u=this.parseTransactionStatus(h),l=this.safeString(e,"address"),p=this.safeString(e,"memo"),f=this.safeTimestamp(e,"timestamp");return{info:e,id:i,txid:c,currency:d,amount:this.parseNumber(a),network:void 0,address:l,addressTo:void 0,addressFrom:void 0,tag:p,tagTo:void 0,tagFrom:void 0,status:u,type:s,timestamp:f,datetime:this.iso8601(f),updated:void 0,fee:{currency:d,cost:this.parseNumber(n)}}}async createOrder(e,t,i,s,a=undefined,o={}){await this.loadMarkets();const d=this.market(e),c=d.contract,h=this.safeValue(o,"trigger"),u=this.safeValue2(o,"triggerPrice","stopPrice"),l=this.safeValue(o,"stopLossPrice",u),p=this.safeValue(o,"takeProfitPrice"),f=void 0!==l,m=void 0!==p,v=f||m;if(f&&m)throw new n.ExchangeError(this.id+" createOrder() stopLossPrice and takeProfitPrice cannot both be defined");let g="Orders";const y=this.safeValue(o,"reduceOnly"),b=this.safeStringLowerN(o,["timeInForce","tif","time_in_force"]);let w;[w,o]=this.handlePostOnly("market"===t,"poc"===b,o);let S=this.handleTimeInForce(o);w&&(S="poc"),o=this.omit(o,["stopPrice","triggerPrice","stopLossPrice","takeProfitPrice","reduceOnly","timeInForce","postOnly"]);const P="limit"===t,k="market"===t;if(P&&void 0===a)throw new n.ArgumentsRequired(this.id+" createOrder () requires a price argument for "+t+" orders");if(k){if("poc"===S||"gtc"===S)throw new n.ExchangeError(this.id+' createOrder () timeInForce for market order can only be "FOK" or "IOC"');if(void 0===S){const e=this.safeString(this.options,"defaultTimeInForce","IOC");S=this.safeString(this.options.timeInForce,e,"ioc")}c&&(a=0)}if(c){const t=this.amountToPrecision(e,s),a="sell"===i?r.O.stringNeg(t):t;s=parseInt(a)}let O;if(v||void 0!==h){if(c){if(O={initial:{contract:d.id,size:s,price:this.priceToPrecision(e,a)},settle:d.settleId},void 0===h){let t,s;f?(t="buy"===i?1:2,s=this.priceToPrecision(e,l)):m&&(t="buy"===i?2:1,s=this.priceToPrecision(e,p));const r=this.safeInteger(o,"price_type",0);if(r<0||r>2)throw new n.BadRequest(this.id+" createOrder () price_type should be 0 latest deal price, 1 mark price, 2 index price");o=this.omit(o,["price_type"]),O.trigger={price_type:r,price:this.priceToPrecision(e,s),rule:t}}void 0!==y&&(O.initial.reduce_only=y),void 0!==S&&(O.initial.tif=S)}else{const r=this.safeValue(this.options,"createOrder",{});let n;if([n,o]=this.getMarginMode(!0,o),void 0===S&&(S="gtc"),O={put:{type:t,side:i,price:this.priceToPrecision(e,a),amount:this.amountToPrecision(e,s),account:n,time_in_force:S},market:d.id},void 0===h){const t=this.safeInteger(r,"expiration"),s=this.safeInteger(o,"expiration",t);let a,n;f?(a="buy"===i?">=":"<=",n=this.priceToPrecision(e,l)):m&&(a="buy"===i?"<=":">=",n=this.priceToPrecision(e,p)),O.trigger={price:this.priceToPrecision(e,n),rule:a,expiration:s}}}g="PriceOrders"}else{if(c)O={contract:d.id,size:s,settle:d.settleId},O.price=k?a:this.priceToPrecision(e,a),void 0!==y&&(O.reduce_only=y),void 0!==S&&(O.tif=S);else{let c;[c,o]=this.getMarginMode(!1,o),O={currency_pair:d.id,type:t,account:c,side:i};const h=this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0);if(k&&"buy"===i)if(h){if(void 0===a)throw new n.InvalidOrder(this.id+" createOrder() requires price argument for market buy orders on spot markets to calculate the total amount to spend (amount * price), alternatively set the createMarketBuyOrderRequiresPrice option to false and pass in the cost to spend into the amount parameter");{const t=this.numberToString(s),i=this.numberToString(a),n=this.parseNumber(r.O.stringMul(t,i));O.amount=this.costToPrecision(e,n)}}else{const t=this.safeNumber(o,"cost",s);o=this.omit(o,"cost"),O.amount=this.costToPrecision(e,t)}else O.amount=this.amountToPrecision(e,s);P&&(O.price=this.priceToPrecision(e,a)),void 0!==S&&(O.time_in_force=S)}let h=this.safeString2(o,"text","clientOrderId");if(void 0!==h){if(h.length>28)throw new n.BadRequest(this.id+" createOrder () clientOrderId or text param must be up to 28 characters");o=this.omit(o,["text","clientOrderId"]),"t"!==h[0]&&(h="t-"+h),O.text=h}}const T=this.getSupportedMapping(d.type,{spot:"privateSpotPost"+g,margin:"privateSpotPost"+g,swap:"privateFuturesPostSettle"+g,future:"privateDeliveryPostSettle"+g}),A=await this[T](this.deepExtend(O,o));return this.parseOrder(A,d)}async editOrder(e,t,i,s,r,a=undefined,o={}){await this.loadMarkets();const d=this.market(t);if(!d.spot)throw new n.BadRequest(this.id+" editOrder() supports only spot markets");const[c,h]=this.handleMarketTypeAndParams("editOrder",d,o),u=this.convertTypeToAccount(c);if("spot"===u&&"limit"!==i)throw new n.InvalidOrder(this.id+" editOrder() does not support "+i+" orders for "+c+" markets");const l={order_id:e,currency_pair:d.id,account:u};void 0!==r&&(l.amount=this.amountToPrecision(t,r)),void 0!==a&&(l.price=this.priceToPrecision(t,a));const p=await this.privateSpotPatchOrdersOrderId(this.extend(l,h));return this.parseOrder(p,d)}parseOrderStatus(e){return this.safeString({open:"open",_new:"open",filled:"closed",cancelled:"canceled",liquidated:"closed",ioc:"canceled",failed:"canceled",expired:"canceled",finished:"closed",succeeded:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeValue2(e,"put","initial"),s=this.safeValue(e,"trigger");let a=this.safeString(i,"contract"),n=this.safeString(i,"type"),o=this.safeStringUpper2(i,"time_in_force","tif"),d=this.safeString2(i,"amount","size"),c=this.safeString(i,"side"),h=this.safeString(i,"price");a=this.safeString(e,"contract",a),n=this.safeString(e,"type",n),o=this.safeStringUpper2(e,"time_in_force","tif",o),"POC"===o&&(o="PO");const u="PO"===o;d=this.safeString2(e,"amount","size",d),c=this.safeString(e,"side",c),h=this.safeString(e,"price",h);let l,p=this.safeString(e,"left"),f=r.O.stringSub(d,p),m=this.safeString(e,"filled_total"),v=this.safeNumber2(e,"avg_deal_price","fill_price");i&&(p=d,f="0",m="0"),a?(n=r.O.stringEquals(h,"0")&&"IOC"===o?"market":"limit",c=r.O.stringGt(d,"0")?"buy":"sell",l=this.safeString(e,"finish_as","open")):l=this.safeString(e,"status");let g=this.safeInteger(e,"create_time_ms");void 0===g&&(g=this.safeTimestamp2(e,"create_time","ctime"));let y=this.safeInteger(e,"update_time_ms");void 0===y&&(y=this.safeTimestamp2(e,"update_time","finish_time"));const b="currency_pair"in e?"spot":"contract",w=this.safeString2(e,"currency_pair","market",a),S=this.safeSymbol(w,t,"_",b),P=[],k=this.safeString(e,"gt_fee");k&&P.push({currency:"GT",cost:k});const O=this.safeString(e,"fee");O&&P.push({currency:this.safeCurrencyCode(this.safeString(e,"fee_currency")),cost:O});const T=this.safeString(e,"rebated_fee");T&&P.push({currency:this.safeCurrencyCode(this.safeString(e,"rebated_fee_currency")),cost:r.O.stringNeg(T)});const A=P.length>1,G=this.parseOrderStatus(l);let I=r.O.stringAbs(f),C=r.O.stringAbs(p);if("spot"===this.safeString(e,"account")){const t=this.safeString(e,"avg_deal_price");v=this.parseNumber(t),"market"===n&&"buy"===c&&(I=r.O.stringDiv(f,t),C=r.O.stringDiv(p,t),h=void 0,m=d,d=r.O.stringDiv(d,t))}return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:this.safeString(e,"text"),timestamp:g,datetime:this.iso8601(g),lastTradeTimestamp:y,status:G,symbol:S,type:n,timeInForce:o,postOnly:u,reduceOnly:this.safeValue(e,"is_reduce_only"),side:c,price:this.parseNumber(h),stopPrice:this.safeNumber(s,"price"),triggerPrice:this.safeNumber(s,"price"),average:v,amount:this.parseNumber(r.O.stringAbs(d)),cost:r.O.stringAbs(m),filled:I,remaining:C,fee:A?void 0:this.safeValue(P,0),fees:A?P:[],trades:void 0,info:e},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue2(i,"is_stop_order","stop",!1);i=this.omit(i,["is_stop_order","stop"]);let r=this.safeString2(i,"text","clientOrderId"),a=e;void 0!==r&&(i=this.omit(i,["text","clientOrderId"]),"t"!==r[0]&&(r="t-"+r),a=r);const n=void 0===t?void 0:this.market(t),[o,d]=this.handleMarketTypeAndParams("fetchOrder",n,i),c="swap"===o||"future"===o,[h,u]=c?this.prepareRequest(n,o,d):this.spotOrderPrepareRequest(n,s,d);h.order_id=a;const l=s?"PriceOrders":"Orders",p=this.getSupportedMapping(o,{spot:"privateSpotGet"+l+"OrderId",margin:"privateSpotGet"+l+"OrderId",swap:"privateFuturesGetSettle"+l+"OrderId",future:"privateDeliveryGetSettle"+l+"OrderId"}),f=await this[p](this.extend(h,u));return this.parseOrder(f,n)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("open",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("finished",e,t,i,s)}async fetchOrdersByStatus(e,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t),t=a.symbol);const n=this.safeValue(r,"stop");r=this.omit(r,"stop");const[o,d]=this.handleMarketTypeAndParams("fetchOrdersByStatus",a,r),c="spot"===o||"margin"===o,[h,u]=c?this.multiOrderSpotPrepareRequest(a,n,d):this.prepareRequest(a,o,d);"closed"===e&&(e="finished"),h.status=e,void 0!==s&&(h.limit=s),void 0!==i&&c&&(h.from=this.parseToInt(i/1e3));let l=n?"PriceOrders":"Orders";const p=c&&"open"===e&&!n;p&&(l="OpenOrders");const f=this.getSupportedMapping(o,{spot:"privateSpotGet"+l,margin:"privateSpotGet"+l,swap:"privateFuturesGetSettle"+l,future:"privateDeliveryGetSettle"+l}),m=await this[f](this.extend(h,u));let v=m;if(p){v=[];for(let e=0;e<m.length;e++){const t=this.safeValue(m[e],"orders");v=this.arrayConcat(v,t)}}const g=this.parseOrders(v,a,i,s);return this.filterBySymbolSinceLimit(g,t,i,s)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=void 0===t?void 0:this.market(t),r=this.safeValue2(i,"is_stop_order","stop",!1);i=this.omit(i,["is_stop_order","stop"]);const[a,n]=this.handleMarketTypeAndParams("cancelOrder",s,i),[o,d]="spot"===a||"margin"===a?this.spotOrderPrepareRequest(s,r,n):this.prepareRequest(s,a,n);o.order_id=e;const c=r?"Price":"",h=this.getSupportedMapping(a,{spot:"privateSpotDelete"+c+"OrdersOrderId",margin:"privateSpotDelete"+c+"OrdersOrderId",swap:"privateFuturesDeleteSettle"+c+"OrdersOrderId",future:"privateDeliveryDeleteSettle"+c+"OrdersOrderId"}),u=await this[h](this.extend(o,d));return this.parseOrder(u,s)}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i=void 0===e?void 0:this.market(e),s=this.safeValue(t,"stop");t=this.omit(t,"stop");const[r,a]=this.handleMarketTypeAndParams("cancelAllOrders",i,t),[n,o]="spot"===r?this.multiOrderSpotPrepareRequest(i,s,a):this.prepareRequest(i,r,a),d=s?"PriceOrders":"Orders",c=this.getSupportedMapping(r,{spot:"privateSpotDelete"+d,margin:"privateSpotDelete"+d,swap:"privateFuturesDeleteSettle"+d,future:"privateDeliveryDeleteSettle"+d}),h=await this[c](this.extend(n,o));return this.parseOrders(h,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),o=this.convertTypeToAccount(i),d=this.convertTypeToAccount(s),c=this.currencyToPrecision(e,t),h={currency:a.id,amount:c};if(o in this.options.accountsByType?h.from=o:(h.from="margin",h.currency_pair=o),d in this.options.accountsByType?h.to=d:(h.to="margin",h.currency_pair=d),"margin"===o||"margin"===d){const e=this.safeString2(r,"symbol","currency_pair");if(void 0===e)throw new n.ArgumentsRequired(this.id+' transfer requires params["symbol"] for isolated margin transfers');const t=this.market(e);h.currency_pair=t.id,r=this.omit(r,"symbol")}"futures"!==d&&"delivery"!==d&&"futures"!==o&&"delivery"!==o||(h.settle=a.lowerCaseId);const u=await this.privateWalletPostTransfers(this.extend(h,r));return this.parseTransfer(u,a)}parseTransfer(e,t=undefined){const i=this.milliseconds();return{id:void 0,timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0,info:e}}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<0||e>100)throw new n.BadRequest(this.id+" setLeverage() leverage should be between 1 and 100");await this.loadMarkets();const s=this.market(t),r=this.getSupportedMapping(s.type,{swap:"privateFuturesPostSettlePositionsContractLeverage",future:"privateDeliveryPostSettlePositionsContractLeverage"}),[a,o]=this.prepareRequest(s,void 0,i),d=this.safeString2(this.options,"marginMode","defaultMarginMode"),c=this.safeString(o,"cross_leverage_limit");let h=this.safeString(o,"marginMode",d);return void 0!==c&&(h="cross",e=c),"cross"===h||"cross_margin"===h?(a.cross_leverage_limit=e.toString(),a.leverage="0"):a.leverage=e.toString(),await this[r](this.extend(a,o))}parsePosition(e,t=undefined){const i=this.safeString(e,"contract");t=this.safeMarket(i,t,"_","contract");const s=this.safeString(e,"size");let a;r.O.stringGt(s,"0")?a="long":r.O.stringLt(s,"0")&&(a="short");const n=this.safeString(e,"maintenance_rate"),o=this.safeString(e,"value"),d=this.safeString(e,"leverage");let c;c="0"===d?"cross":"isolated";const h=this.safeString(e,"unrealised_pnl"),u=r.O.stringMul("0.00075",o),l=r.O.stringAdd(r.O.stringDiv(o,d),u),p=r.O.stringMul(r.O.stringDiv(h,l),"100");return{info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:void 0,datetime:void 0,initialMargin:this.parseNumber(l),initialMarginPercentage:this.parseNumber(r.O.stringDiv(l,o)),maintenanceMargin:this.parseNumber(r.O.stringMul(n,o)),maintenanceMarginPercentage:this.parseNumber(n),entryPrice:this.safeNumber(e,"entry_price"),notional:this.parseNumber(o),leverage:this.safeNumber(e,"leverage"),unrealizedPnl:this.parseNumber(h),contracts:this.parseNumber(r.O.stringAbs(s)),contractSize:this.safeValue(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"liq_price"),markPrice:this.safeNumber(e,"mark_price"),collateral:this.safeNumber(e,"margin"),marginMode:c,side:a,percentage:this.parseNumber(p)}}async fetchPositions(e=undefined,t={}){let i;if(await this.loadMarkets(),void 0!==e&&(e=this.marketSymbols(e)).length>0){i=this.market(e[0]);for(let t=1;t<e.length;t++)if(this.market(e[t]).type!==i.type)throw new n.BadRequest(this.id+" fetchPositions() does not support multiple types of positions at the same time")}const[s,r]=this.handleMarketTypeAndParams("fetchPositions",i,t);if("swap"!==s&&"future"!==s)throw new n.ArgumentsRequired(this.id+' fetchPositions requires a type parameter, "swap" or "future"');const[a,o]=this.prepareRequest(void 0,s,r),d=this.getSupportedMapping(s,{swap:"privateFuturesGetSettlePositions",future:"privateDeliveryGetSettlePositions"}),c=await this[d](this.extend(a,o));return this.parsePositions(c,e)}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const[i,s]=this.handleMarketTypeAndParams("fetchLeverageTiers",void 0,t),[r,a]=this.prepareRequest(void 0,i,s);if("future"!==i&&"swap"!==i)throw new n.BadRequest(this.id+" fetchLeverageTiers only supports swap and future");const o=this.getSupportedMapping(i,{swap:"publicFuturesGetSettleContracts",future:"publicDeliveryGetSettleContracts"}),d=await this[o](this.extend(r,a));return this.parseLeverageTiers(d,e,"name")}parseMarketLeverageTiers(e,t=undefined){const i=this.safeString(e,"maintenance_rate"),s=this.safeString(e,"leverage_max"),a=this.safeString(e,"risk_limit_step"),n=this.safeString(e,"risk_limit_max"),o=r.O.stringDiv("1",s);let d=i,c=o,h="0";const u=[];for(;r.O.stringLt(h,n);){const s=r.O.stringAdd(h,a);u.push({tier:this.parseNumber(r.O.stringDiv(s,a)),currency:this.safeString(t,"settle"),minNotional:this.parseNumber(h),maxNotional:this.parseNumber(s),maintenanceMarginRate:this.parseNumber(d),maxLeverage:this.parseNumber(r.O.stringDiv("1",c)),info:e}),d=r.O.stringAdd(d,i),c=r.O.stringAdd(c,o),h=s}return u}async repayMargin(e,t,i=undefined,s={}){const r=this.safeString(s,"marginMode");s=this.omit(s,"marginMode"),this.checkRequiredMarginArgument("repayMargin",i,r),await this.loadMarkets();const a=this.currency(e),o={currency:a.id,amount:this.currencyToPrecision(e,t)};let d;if(void 0===i)d="privateMarginPostCrossRepayments";else{d="privateMarginPostLoansLoanIdRepayment";const e=this.market(i);o.currency_pair=e.id,o.mode="partial";const t=this.safeString2(s,"loan_id","id");if(void 0===t)throw new n.ArgumentsRequired(this.id+" repayMargin() requires loan_id param for isolated margin");o.loan_id=t}s=this.omit(s,["marginMode","loan_id","id"]);let c=await this[d](this.extend(o,s));return"cross"===r&&(c=c[0]),this.parseMarginLoan(c,a)}async borrowMargin(e,t,i=undefined,s={}){const r=this.safeString(s,"marginMode");s=this.omit(s,"marginMode"),this.checkRequiredMarginArgument("borrowMargin",i,r),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,amount:this.currencyToPrecision(e,t)};let o;if(void 0===i)o="privateMarginPostCrossLoans";else{const e=this.market(i);n.currency_pair=e.id,n.side="borrow",n.rate=this.safeString(s,"rate","0.0001"),n.auto_renew=!0,o="privateMarginPostLoans"}s=this.omit(s,["marginMode","rate"]);const d=await this[o](this.extend(n,s));return this.parseMarginLoan(d,a)}parseMarginLoan(e,t=undefined){const i=this.safeString2(this.options,"defaultMarginMode","marginMode","cross");let s=this.safeInteger(e,"create_time");"isolated"===i&&(s=this.safeTimestamp(e,"create_time"));const r=this.safeString(e,"currency"),a=this.safeString(e,"currency_pair");return{id:this.safeInteger(e,"id"),currency:this.safeCurrencyCode(r,t),amount:this.safeNumber(e,"amount"),symbol:this.safeSymbol(a,void 0,"_","margin"),timestamp:s,datetime:this.iso8601(s),info:e}}sign(e,t=[],i="GET",s={},r=undefined,a=undefined){const d=t[0],c=t[1];let h=this.omit(s,this.extractParams(e));const u=""===(e=this.implodeParams(e,s))?"":"/"+e;let l="/"+c+u;"subAccounts"!==c&&"withdrawals"!==c||(l=u);let p=this.urls.api[d][c];if(void 0===p)throw new n.NotSupported(this.id+" does not have a testnet for the "+c+" market type.");if(p+=l,"public"===d)Object.keys(h).length&&(p+="?"+this.urlencode(h));else{this.checkRequiredCredentials();let t="",s=!1;if(("futures"===c||"delivery"===c)&&"POST"===i){const t=e.split("/"),i=this.safeString(t,1,"");s=i.indexOf("dual")>=0||i.indexOf("positions")>=0}if("GET"===i||"DELETE"===i||s||"PATCH"===i)Object.keys(h).length&&(t=this.urlencode(h),p+="?"+t),"PATCH"===i&&(a=this.json(h));else{const e=this.safeValue(h,"query",{});Object.keys(e).length&&(t=this.urlencode(e),p+="?"+t),h=this.omit(h,"query"),a=this.json(h)}const n=void 0===a?"":a,d=this.hash(this.encode(n),o.o),u=this.seconds().toString(),f="/api/"+this.version+l,m=[i.toUpperCase(),f,t,d,u].join("\n"),v=this.hmac(this.encode(m),this.encode(this.secret),o.o);r={KEY:this.apiKey,Timestamp:u,SIGN:v,"Content-Type":"application/json"}}return{url:p,method:i,body:a,headers:r}}async modifyMarginHelper(e,t,i={}){await this.loadMarkets();const s=this.market(e),[r,a]=this.prepareRequest(s,void 0,i);r.change=this.numberToString(t);const n=this.getSupportedMapping(s.type,{swap:"privateFuturesPostSettlePositionsContractMargin",future:"privateDeliveryPostSettlePositionsContractMargin"}),o=await this[n](this.extend(r,a));return this.parseMarginModification(o,s)}parseMarginModification(e,t=undefined){const i=this.safeString(e,"contract");t=this.safeMarket(i,t,"_","contract");const s=this.safeNumber(e,"margin");return{info:e,amount:void 0,code:this.safeValue(t,"quote"),symbol:t.symbol,total:s,status:"ok"}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,-t,i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,i)}async fetchOpenInterestHistory(e,t="5m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);if(!a.contract)throw new n.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");const o={contract:a.id,settle:a.settleId,interval:this.safeString(this.timeframes,t,t)};void 0!==s&&(o.limit=s),void 0!==i&&(o.from=i);const d=await this.publicFuturesGetSettleContractStats(this.extend(o,r));return this.parseOpenInterests(d,a,i,s)}parseOpenInterest(e,t=undefined){const i=this.safeIntegerProduct(e,"time",1e3);return{symbol:this.safeString(t,"symbol"),openInterestAmount:this.safeNumber(e,"open_interest"),openInterestValue:this.safeNumber(e,"open_interest_usd"),timestamp:i,datetime:this.iso8601(i),info:e}}handleErrors(e,t,i,s,r,a,o,d,c){if(void 0===o)return;const h=this.safeString(o,"label");if(void 0!==h){const e=this.id+" "+a;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),new n.ExchangeError(e)}}}},7036:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(7290);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"gateio",alias:!0})}}},6743:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(8185),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"gemini",name:"Gemini",countries:["US"],rateLimit:100,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBidsAsks:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!1,fetchDepositAddress:void 0,fetchDepositAddressesByNetwork:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!0,postOnly:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27816857-ce7be644-6096-11e7-82d6-3c257263229c.jpg",api:{public:"https://api.gemini.com",private:"https://api.gemini.com",web:"https://docs.gemini.com"},www:"https://gemini.com/",doc:["https://docs.gemini.com/rest-api","https://docs.sandbox.gemini.com"],test:{public:"https://api.sandbox.gemini.com",private:"https://api.sandbox.gemini.com",web:"https://docs.gemini.com"},fees:["https://gemini.com/api-fee-schedule","https://gemini.com/trading-fees","https://gemini.com/transfer-fees"]},api:{web:{get:["rest-api"]},public:{get:{"v1/symbols":5,"v1/symbols/details/{symbol}":5,"v1/staking/rates":5,"v1/pubticker/{symbol}":5,"v2/ticker/{symbol}":5,"v2/candles/{symbol}/{timeframe}":5,"v1/trades/{symbol}":5,"v1/auction/{symbol}":5,"v1/auction/{symbol}/history":5,"v1/pricefeed":5,"v1/book/{symbol}":5,"v1/earn/rates":5}},private:{post:{"v1/staking/unstake":1,"v1/staking/stake":1,"v1/staking/rewards":1,"v1/staking/history":1,"v1/order/new":1,"v1/order/cancel":1,"v1/wrap/{symbol}":1,"v1/order/cancel/session":1,"v1/order/cancel/all":1,"v1/order/status":1,"v1/orders":1,"v1/mytrades":1,"v1/notionalvolume":1,"v1/tradevolume":1,"v1/clearing/new":1,"v1/clearing/status":1,"v1/clearing/cancel":1,"v1/clearing/confirm":1,"v1/balances":1,"v1/balances/staking":1,"v1/notionalbalances/{currency}":1,"v1/transfers":1,"v1/addresses/{network}":1,"v1/deposit/{network}/newAddress":1,"v1/deposit/{currency}/newAddress":1,"v1/withdraw/{currency}":1,"v1/account/transfer/{currency}":1,"v1/payments/addbank":1,"v1/payments/methods":1,"v1/payments/sen/withdraw":1,"v1/balances/earn":1,"v1/earn/interest":1,"v1/earn/history":1,"v1/approvedAddresses/{network}/request":1,"v1/approvedAddresses/account/{network}":1,"v1/approvedAddresses/{network}/remove":1,"v1/account":1,"v1/account/create":1,"v1/account/list":1,"v1/heartbeat":1}}},precisionMode:n.sh,fees:{trading:{taker:.004,maker:.002}},httpExceptions:{400:r.BadRequest,403:r.PermissionDenied,404:r.OrderNotFound,406:r.InsufficientFunds,429:r.RateLimitExceeded,500:r.ExchangeError,502:r.ExchangeNotAvailable,503:r.OnMaintenance},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1hr","6h":"6hr","1d":"1day"},exceptions:{exact:{AuctionNotOpen:r.BadRequest,ClientOrderIdTooLong:r.BadRequest,ClientOrderIdMustBeString:r.BadRequest,ConflictingOptions:r.BadRequest,EndpointMismatch:r.BadRequest,EndpointNotFound:r.BadRequest,IneligibleTiming:r.BadRequest,InsufficientFunds:r.InsufficientFunds,InvalidJson:r.BadRequest,InvalidNonce:r.InvalidNonce,InvalidOrderType:r.InvalidOrder,InvalidPrice:r.InvalidOrder,InvalidQuantity:r.InvalidOrder,InvalidSide:r.InvalidOrder,InvalidSignature:r.AuthenticationError,InvalidSymbol:r.BadRequest,InvalidTimestampInPayload:r.BadRequest,Maintenance:r.OnMaintenance,MarketNotOpen:r.InvalidOrder,MissingApikeyHeader:r.AuthenticationError,MissingOrderField:r.InvalidOrder,MissingRole:r.AuthenticationError,MissingPayloadHeader:r.AuthenticationError,MissingSignatureHeader:r.AuthenticationError,NoSSL:r.AuthenticationError,OptionsMustBeArray:r.BadRequest,OrderNotFound:r.OrderNotFound,RateLimit:r.RateLimitExceeded,System:r.ExchangeError,UnsupportedOption:r.BadRequest},broad:{"The Gemini Exchange is currently undergoing maintenance.":r.OnMaintenance,"We are investigating technical issues with the Gemini Exchange.":r.ExchangeNotAvailable}},options:{fetchMarketsMethod:"fetch_markets_from_web",fetchMarketFromWebRetries:10,fetchMarketsFromAPI:{fetchDetailsForAllSymbols:!1,fetchDetailsForMarketIds:[]},fetchUsdtMarkets:["btcusdt","ethusdt"],fetchTickerMethod:"fetchTickerV1",networkIds:{bitcoin:"BTC",ethereum:"ERC20",bitcoincash:"BCH",litecoin:"LTC",zcash:"ZEC",filecoin:"FIL",dogecoin:"DOGE",tezos:"XTZ"},networks:{BTC:"bitcoin",ERC20:"ethereum",BCH:"bitcoincash",LTC:"litecoin",ZEC:"zcash",FIL:"filecoin",DOGE:"dogecoin",XTZ:"tezos"},nonce:"milliseconds"}})}async fetchMarkets(e={}){if("fetch_markets_from_web"===this.safeValue(this.options,"fetchMarketsMethod","fetch_markets_from_api")){const t=await this.fetchMarketsFromWeb(e),i=await this.fetchUSDTMarkets(e);return this.arrayConcat(t,i)}return await this.fetchMarketsFromAPI(e)}async fetchMarketsFromWeb(e={}){const t=this.safeInteger(this.options,"fetchMarketFromWebRetries",10);let i,s=0;for(;s<t;)try{i=await this.webGetRestApi(e);break}catch(e){if(s+=1,s===t)throw e}const a=i.split('<h1 id="symbols-and-minimums">Symbols and minimums</h1>'),n=a.length,o=this.id+" fetchMarketsFromWeb() the "+this.name+" API doc HTML markup has changed, breaking the parser of order limits and precision info for "+this.name+" markets.";if(2!==n)throw new r.NotSupported(o);const d=a[1].split("tbody>");if(d.length<2)throw new r.NotSupported(o);const c=d[1].split("\n<tr>\n"),h=c.length;if(h<2)throw new r.NotSupported(o);const u=[];for(let e=1;e<h;e++){const t=c[e],i=t.split("</td>\n");if(i.length<5)throw new r.NotSupported(o);const s=i[0].replace("<td>",""),a=i[1].replace("<td>","").split(" "),n=this.safeNumber(a,0),d=i[2].replace("<td>","").split(" "),h=s.length-0,l=h-3,p=i[3].replace("<td>","").split(" "),f=this.safeStringLower(p,1,s.slice(l,h)),m=this.safeStringLower(d,1,s.replace(f,"")),v=this.safeCurrencyCode(m),g=this.safeCurrencyCode(f);u.push({id:s,symbol:v+"/"+g,base:v,quote:g,settle:void 0,baseId:m,quoteId:f,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(d,0),price:this.safeNumber(p,0)},limits:{leverage:{min:void 0,max:void 0},amount:{min:n,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return u}parseMarketActive(e){return this.safeValue({open:!0,closed:!1,cancel_only:!0,post_only:!0,limit_only:!0},e,!0)}async fetchUSDTMarkets(e={}){if("test"in this.urls)return[];const t=this.safeValue(this.options,"fetchUsdtMarkets",[]),i=[];for(let s=0;s<t.length;s++){const r={symbol:t[s]},a=await this.publicGetV1SymbolsDetailsSymbol(this.extend(r,e));i.push(this.parseMarket(a))}return i}async fetchMarketsFromAPI(e={}){const t=await this.publicGetV1Symbols(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r={symbol:s};i[s]=this.parseMarket(r)}const s=this.safeValue(this.options,"fetchMarketsFromAPI",{}),r=this.safeValue(s,"fetchDetailsForAllSymbols",!1),a=this.safeValue(s,"fetchDetailsForMarketIds",[]);let n=[],o=[];o=r?t:a;for(let t=0;t<o.length;t++){const i="publicGetV1SymbolsDetailsSymbol",s={symbol:o[t]};n.push(this[i](this.extend(s,e)))}n=await Promise.all(n);for(let e=0;e<n.length;e++){const t=n[e];i[this.safeStringLower(t,"symbol")]=this.parseMarket(t)}return this.toArray(i)}parseMarket(e){const t=this.safeStringLower(e,"symbol");let i=this.safeString(e,"base_currency"),s=this.safeString(e,"quote_currency");if(void 0===i){const e=t.length-0,r=-1!==t.indexOf("usdt")?4:3;i=t.slice(0,e-r),s=t.slice(e-r,e)}const r=this.safeCurrencyCode(i),a=this.safeCurrencyCode(s),n=this.safeString(e,"status");return{id:t,symbol:r+"/"+a,base:r,quote:a,settle:void 0,baseId:i,quoteId:s,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.parseMarketActive(n),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.safeNumber(e,"quote_increment"),amount:this.safeNumber(e,"tick_size")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(e,"min_order_size"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:e}}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit_bids=t,r.limit_asks=t);const a=await this.publicGetV1BookSymbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","amount")}async fetchTickerV1(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetV1PubtickerSymbol(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickerV2(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetV2TickerSymbol(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickerV1AndV2(e,t={}){const i=await this.fetchTickerV1(e,t),s=await this.fetchTickerV2(e,t);return this.deepExtend(i,{open:s.open,high:s.high,low:s.low,change:s.change,percentage:s.percentage,average:s.average,info:s.info})}async fetchTicker(e,t={}){const i=this.safeValue(this.options,"fetchTickerMethod","fetchTickerV1");return await this[i](e,t)}parseTicker(e,t=undefined){const i=this.safeValue(e,"volume",{}),s=this.safeInteger(i,"timestamp");let r;const a=this.safeStringLower(e,"pair");let n,o,d,c;t=this.safeMarket(a,t),void 0!==a&&void 0===t&&(7==a.length-0?(n=a.slice(0,4),o=a.slice(4,7)):(n=a.slice(0,3),o=a.slice(3,6)),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),r=d+"/"+c),void 0===r&&void 0!==t&&(r=t.symbol,n=this.safeStringUpper(t,"baseId"),o=this.safeStringUpper(t,"quoteId"));const h=this.safeString(e,"price"),u=this.safeString2(e,"last","close",h),l=this.safeString(e,"percentChange24h"),p=this.safeString(e,"open"),f=this.safeString(i,n),m=this.safeString(i,o);return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:p,close:u,last:u,previousClose:void 0,change:void 0,percentage:l,average:void 0,baseVolume:f,quoteVolume:m,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetV1Pricefeed(t);return this.parseTickers(i,e)}parseTrade(e,t=undefined){const i=this.safeInteger(e,"timestampms"),s=this.safeString(e,"tid"),r=this.safeString(e,"order_id"),a=this.safeString(e,"fee_currency"),n=this.safeCurrencyCode(a),o={cost:this.safeString(e,"fee_amount"),currency:n},d=this.safeString(e,"price"),c=this.safeString(e,"amount"),h=this.safeStringLower(e,"type"),u=this.safeSymbol(void 0,t);return this.safeTrade({id:s,order:r,info:e,timestamp:i,datetime:this.iso8601(i),symbol:u,type:void 0,side:h,takerOrMaker:void 0,price:d,cost:void 0,amount:c,fee:o},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit_trades=i),void 0!==t&&(a.timestamp=t);const n=await this.publicGetV1TradesSymbol(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.total=this.safeString(s,"amount"),t[a]=n}return this.safeBalance(t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostV1Notionalvolume(e),i=this.safeString(t,"api_maker_fee_bps"),s=this.safeString(t,"api_taker_fee_bps"),r=a.O.stringDiv(i,"10000"),n=a.O.stringDiv(s,"10000"),o=this.parseNumber(r),d=this.parseNumber(n),c={};for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e];c[i]={info:t,symbol:i,maker:o,taker:d,percentage:!0,tierBased:!0}}return c}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostV1Balances(e);return this.parseBalance(t)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"timestampms"),s=this.safeString(e,"original_amount"),r=this.safeString(e,"remaining_amount"),a=this.safeString(e,"executed_amount");let n="closed";e.is_live&&(n="open"),e.is_cancelled&&(n="canceled");const o=this.safeString(e,"price"),d=this.safeString(e,"avg_execution_price");let c=this.safeString(e,"type");c="exchange limit"===c?"limit":"market buy"===c||"market sell"===c?"market":e.type;const h=this.safeString(e,"symbol"),u=this.safeSymbol(h,t),l=this.safeString(e,"order_id"),p=this.safeStringLower(e,"side"),f=this.safeString(e,"client_order_id"),m=this.safeValue(e,"options",[]),v=this.safeString(m,0);let g="GTC",y=!1;return void 0!==v&&("immediate-or-cancel"===v?g="IOC":"fill-or-kill"===v?g="FOK":"maker-or-cancel"===v&&(g="PO",y=!0)),this.safeOrder({id:l,clientOrderId:f,info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:n,symbol:u,type:c,timeInForce:g,postOnly:y,side:p,price:o,stopPrice:void 0,triggerPrice:void 0,average:d,cost:void 0,amount:s,filled:a,remaining:r,fee:void 0,trades:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},r=await this.privatePostV1OrderStatus(this.extend(s,i));return this.parseOrder(r)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.privatePostV1Orders(s);let a;return void 0!==e&&(a=this.market(e)),this.parseOrders(r,a,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){if(await this.loadMarkets(),"limit"!==t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");let o=this.safeString2(n,"clientOrderId","client_order_id");n=this.omit(n,["clientOrderId","client_order_id"]),void 0===o&&(o=this.milliseconds().toString());const d=this.market(e),c=this.amountToPrecision(e,s),h=this.priceToPrecision(e,a),u={client_order_id:o,symbol:d.id,amount:c,price:h,side:i,type:"exchange limit"};t=this.safeString(n,"type",t),n=this.omit(n,"type");const l=this.safeString2(n,"stop_price","stopPrice");if(n=this.omit(n,["stop_price","stopPrice","type"]),"stopLimit"===t)throw new r.ArgumentsRequired(this.id+" createOrder() requires a stopPrice parameter or a stop_price parameter for "+t+" orders");if(void 0!==l)u.stop_price=this.priceToPrecision(e,l),u.type="exchange stop limit";else{const e=this.safeString(n,"timeInForce");n=this.omit(n,"timeInForce"),void 0!==e&&("IOC"===e||"immediate-or-cancel"===e?u.options=["immediate-or-cancel"]:"FOK"===e||"fill-or-kill"===e?u.options=["fill-or-kill"]:"PO"===e&&(u.options=["maker-or-cancel"]));const t=this.safeValue(n,"postOnly",!1);n=this.omit(n,"postOnly"),t&&(u.options=["maker-or-cancel"]);const i=this.safeString(n,"options");void 0!==i&&(u.options=[i])}const p=await this.privatePostV1OrderNew(this.extend(u,n));return this.parseOrder(p)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},r=await this.privatePostV1OrderCancel(this.extend(s,i));return this.parseOrder(r)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.limit_trades=i),void 0!==t&&(n.timestamp=this.parseToInt(t/1e3));const o=await this.privatePostV1Mytrades(this.extend(n,s));return this.parseTrades(o,a,t,i)}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e),o={currency:n.id,amount:t,address:i},d=await this.privatePostV1WithdrawCurrency(this.extend(o,a));if("error"===this.safeString(d,"result"))throw new r.ExchangeError(this.id+" withdraw() failed: "+this.json(d));return this.parseTransaction(d,n)}nonce(){return"milliseconds"===this.safeString(this.options,"nonce","milliseconds")?this.milliseconds():this.seconds()}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==i&&(r.limit_transfers=i),void 0!==t&&(r.timestamp=t);const a=await this.privatePostV1Transfers(this.extend(r,s));return this.parseTransactions(a)}parseTransaction(e,t=undefined){const i=this.safeInteger(e,"timestampms"),s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s,t),a=this.safeString(e,"destination"),n=this.safeStringLower(e,"type"),o=this.safeString(e,"status");let d;const c=this.safeNumber(e,"feeAmount");return void 0!==c&&(d={cost:c,currency:r}),{info:e,id:this.safeString2(e,"eid","withdrawalId"),txid:this.safeString(e,"txHash"),timestamp:i,datetime:this.iso8601(i),network:void 0,address:a,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:n,amount:this.safeNumber(e,"amount"),currency:r,status:this.parseTransactionStatus(o),updated:void 0,fee:d}}parseTransactionStatus(e){return this.safeString({Advanced:"ok",Complete:"ok"},e,e)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address");return{currency:this.safeCurrencyCode(void 0,t),network:void 0,address:i,tag:void 0,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const i=this.currency(e),s=this.safeString(t,"network");if(void 0===s)throw new r.ArgumentsRequired(this.id+" fetchDepositAddressesByNetwork() requires a network parameter");t=this.omit(t,"network");const a=this.safeValue(this.options,"networks",{}),n=this.safeString(a,s,s),o=this.safeValue(this.options,"networkIds",{}),d=this.safeString(o,n,s),c={network:n},h=await this.privatePostV1AddressesNetwork(this.extend(c,t)),u=this.parseDepositAddresses(h,[i.code],!1,{network:d,currency:e});return this.groupBy(u,"network")}sign(e,t="public",i="GET",s={},a=undefined,n=undefined){let d="/"+this.implodeParams(e,s);const c=this.omit(s,this.extractParams(e));if("private"===t){if(this.checkRequiredCredentials(),this.apiKey.indexOf("account")<0)throw new r.AuthenticationError(this.id+" sign() requires an account-key, master-keys are not-supported");const e=this.nonce(),t=this.extend({request:d,nonce:e},c);let i=this.json(t);i=this.stringToBase64(i);const s=this.hmac(i,this.encode(this.secret),o.iC);a={"Content-Type":"text/plain","X-GEMINI-APIKEY":this.apiKey,"X-GEMINI-PAYLOAD":i,"X-GEMINI-SIGNATURE":s}}else Object.keys(c).length&&(d+="?"+this.urlencode(c));return d=this.urls.api[t]+d,"POST"!==i&&"DELETE"!==i||(n=this.json(c)),{url:d,method:i,body:n,headers:a}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o){if("error"===this.safeString(o,"result")){const e=this.safeString(o,"reason"),t=this.safeString(o,"message"),i=this.id+" "+t;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwExactlyMatchedException(this.exceptions.exact,t,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new r.ExchangeError(i)}}else if("string"==typeof n){const e=this.id+" "+n;this.throwBroadlyMatchedException(this.exceptions.broad,n,e)}}async createDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.privatePostV1DepositCurrencyNewAddress(this.extend(i,t)),r=this.safeString(s,"address");return this.checkAddress(r),{currency:e,address:r,tag:void 0,info:s}}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={timeframe:this.safeString(this.timeframes,t,t),symbol:a.id},o=await this.publicGetV2CandlesSymbolTimeframe(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}}},4714:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(9190),r=i(6689),a=i(2194),n=i(9292);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"hitbtc",name:"HitBTC",countries:["HK"],rateLimit:3.333,version:"2",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!0,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"D7","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg",test:{public:"https://api.demo.hitbtc.com",private:"https://api.demo.hitbtc.com"},api:{public:"https://api.hitbtc.com",private:"https://api.hitbtc.com"},www:"https://hitbtc.com",referral:"https://hitbtc.com/?ref_id=5a5d39a65d466",doc:["https://api.hitbtc.com/v2"],fees:["https://hitbtc.com/fees-and-limits","https://support.hitbtc.com/hc/en-us/articles/115005148605-Fees-and-limits"]},api:{public:{get:{currency:3,"currency/{currency}":3,symbol:3,"symbol/{symbol}":3,ticker:3,"ticker/{symbol}":3,trades:3,"trades/{symbol}":3,orderbook:3,"orderbook/{symbol}":3,candles:3,"candles/{symbol}":3}},private:{get:{"trading/balance":15.0015,order:15.0015,"order/{clientOrderId}":15.0015,"trading/fee/all":15.0015,"trading/fee/{symbol}":15.0015,"margin/account":15.0015,"margin/account/{symbol}":15.0015,"margin/position":15.0015,"margin/position/{symbol}":15.0015,"margin/order":15.0015,"margin/order/{clientOrderId}":15.0015,"history/order":15.0015,"history/trades":15.0015,"history/order/{orderId}/trades":15.0015,"account/balance":15.0015,"account/crypto/address/{currency}":15.0015,"account/crypto/addresses/{currency}":15.0015,"account/crypto/used-addresses/{currency}":15.0015,"account/crypto/estimate-withdraw":15.0015,"account/crypto/is-mine/{address}":15.0015,"account/transactions":15.0015,"account/transactions/{id}":15.0015,"sub-acc":15.0015,"sub-acc/acl":15.0015,"sub-acc/balance/{subAccountUserID}":15.0015,"sub-acc/deposit-address/{subAccountUserId}/{currency}":15.0015},post:{order:1,"margin/order":1,"account/crypto/address/{currency}":1,"account/crypto/withdraw":1,"account/crypto/transfer-convert":1,"account/transfer":1,"account/transfer/internal":1,"sub-acc/freeze":1,"sub-acc/activate":1,"sub-acc/transfer":1},put:{"order/{clientOrderId}":1,"margin/account/{symbol}":1,"margin/order/{clientOrderId}":1,"account/crypto/withdraw/{id}":1,"sub-acc/acl/{subAccountUserId}":1},delete:{order:1,"order/{clientOrderId}":1,"margin/account":1,"margin/account/{symbol}":1,"margin/position":1,"margin/position/{symbol}":1,"margin/order":1,"margin/order/{clientOrderId}":1,"account/crypto/withdraw/{id}":1},patch:{"order/{clientOrderId}":1}}},precisionMode:n.sh,fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.002")}},options:{networks:{ETH:"T20",ERC20:"T20",TRX:"TTRX",TRC20:"TTRX",OMNI:""},defaultTimeInForce:"FOK",accountsByType:{funding:"bank",spot:"exchange"},fetchBalanceMethod:{account:"account",bank:"account",main:"account",funding:"account",exchange:"trading",spot:"trading",trade:"trading",trading:"trading"}},commonCurrencies:{AUTO:"Cube",BCC:"BCC",BDP:"BidiPass",BET:"DAO.Casino",BOX:"BOX Token",CPT:"Cryptaur",GET:"Themis",GMT:"GMT Token",HSR:"HC",IQ:"IQ.Cash",LNC:"LinkerCoin",PLA:"PlayChip",PNT:"Penta",SBTC:"Super Bitcoin",STEPN:"GMT",STX:"STOX",TV:"Tokenville",USD:"USDT",XMT:"MTL",XPNT:"PNT"},exceptions:{504:r.RequestTimeout,1002:r.AuthenticationError,1003:r.PermissionDenied,2010:r.InvalidOrder,2001:r.BadSymbol,2011:r.InvalidOrder,2020:r.InvalidOrder,20002:r.OrderNotFound,20001:r.InsufficientFunds,20010:r.BadSymbol,20045:r.InvalidOrder}})}feeToPrecision(e,t){return this.decimalToPrecision(t,n.tk,1e-8,n.sh)}async fetchMarkets(e={}){const t=await this.publicGetSymbol(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"id"),n=this.safeString(s,"baseCurrency"),o=this.safeString(s,"quoteCurrency"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o);let h=d+"/"+c;r.indexOf("_")>=0&&(h=r);const u=this.safeString(s,"quantityIncrement"),l=this.safeString(s,"tickSize"),p=this.parseNumber(u),f=this.parseNumber(l),m=this.safeString(s,"feeCurrency");i.push(this.extend(this.fees.trading,{id:r,symbol:h,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(s,"takeLiquidityRate"),maker:this.safeNumber(s,"provideLiquidityRate"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,feeCurrency:this.safeCurrencyCode(m),precision:{amount:p,price:f},limits:{leverage:{min:void 0,max:void 0},amount:{min:p,max:void 0},price:{min:f,max:void 0},cost:{min:this.parseNumber(a.O.stringMul(u,l)),max:void 0}},info:s}))}return i}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.currency(e),o=this.currencyToPrecision(e,t),d={currency:n.id,amount:o};let c=this.safeString(a,"type");if(void 0===c){const e=this.safeValue(this.options,"accountsByType",{}),t=this.safeString(e,i,i),a=this.safeString(e,s,s);if(t===a)throw new r.ExchangeError(this.id+" transfer() from and to cannot be the same account");c=t+"To"+this.capitalize(a)}d.type=c;const h=await this.privatePostAccountTransfer(this.extend(d,a));return this.parseTransfer(h,n)}parseTransfer(e,t=undefined){const i=this.milliseconds();return{id:this.safeString(e,"id"),timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0,info:e}}async fetchCurrencies(e={}){const t=await this.publicGetCurrency(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"id"),a=this.safeString(s,"precisionTransfer","8"),n=this.safeCurrencyCode(r),o=this.safeValue(s,"payinEnabled"),d=this.safeValue(s,"payoutEnabled"),c=this.safeValue(s,"transferEnabled");let h=o&&d&&c;"disabled"in s&&s.disabled&&(h=!1);let u="fiat";"crypto"in s&&s.crypto&&(u="crypto");const l=this.safeString(s,"fullName");i[n]={id:r,code:n,type:u,payin:o,payout:d,transfer:c,info:s,name:l,active:h,deposit:o,withdraw:d,fee:this.safeNumber(s,"payoutFee"),precision:this.parseNumber(this.parsePrecision(a)),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}parseTradingFee(e,t=undefined){return{info:e,symbol:this.safeSymbol(void 0,t),maker:this.safeNumber(e,"provideLiquidityRate"),taker:this.safeNumber(e,"takeLiquidityRate"),percentage:!0,tierBased:!0}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.privateGetTradingFeeSymbol(s);return this.parseTradingFee(r,i)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"reserved"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"type","trading"),i=this.safeValue(this.options,"fetchBalanceMethod",{}),s=this.safeString(i,t);if(void 0===s)throw new r.ExchangeError(this.id+" fetchBalance() account type must be either main or trading");const a="privateGet"+this.capitalize(s)+"Balance",n=this.omit(e,"type"),o=await this[a](n);return this.parseBalance(o)}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"max"),this.safeNumber(e,"min"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,period:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.from=this.iso8601(i)),void 0!==s&&(n.limit=s);const o=await this.publicGetCandlesSymbol(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit=t);const a=await this.publicGetOrderbookSymbol(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bid","ask","price","size")}parseTicker(e,t=undefined){const i=this.parse8601(e.timestamp),s=this.safeSymbol(void 0,t),r=this.safeString(e,"volume"),a=this.safeString(e,"volumeQuote"),n=this.safeString(e,"open"),o=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:a,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTicker(t),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeMarket(r);s[a.symbol]=this.parseTicker(t,a)}return this.filterByArray(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},a=await this.publicGetTickerSymbol(this.extend(s,t));if("message"in a)throw new r.ExchangeError(this.id+" "+a.message);return this.parseTicker(a,i)}parseTrade(e,t=undefined){const i=this.parse8601(e.timestamp),s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t)).symbol;let a;const n=this.safeString(e,"fee");void 0!==n&&(a={cost:n,currency:t?t.feeCurrency:void 0});const o=this.safeString(e,"clientOrderId"),d=this.safeString(e,"price"),c=this.safeString(e,"quantity"),h=this.safeString(e,"side"),u=this.safeString(e,"id");return this.safeTrade({info:e,id:u,order:o,timestamp:i,datetime:this.iso8601(i),symbol:r,type:void 0,side:h,takerOrMaker:void 0,price:d,amount:c,cost:void 0,fee:a},t)}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.asset=r.id),void 0!==t&&(a.startTime=t);const n=await this.privateGetAccountTransactions(this.extend(a,s));return this.parseTransactions(n,r,t,i)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.parse8601(this.safeString(e,"createdAt")),r=this.parse8601(this.safeString(e,"updatedAt")),a=this.safeString(e,"currency"),n=this.safeCurrencyCode(a,t),o=this.parseTransactionStatus(this.safeString(e,"status")),d=this.safeNumber(e,"amount"),c=this.safeString(e,"address"),h=this.safeString(e,"hash"),u={currency:void 0,cost:void 0,rate:void 0},l=this.safeNumber(e,"fee");return void 0!==l&&(u.cost=l,u.currency=n),{info:e,id:i,txid:h,type:this.parseTransactionType(this.safeString(e,"type")),currency:n,network:void 0,amount:d,status:o,timestamp:s,datetime:this.iso8601(s),address:c,addressFrom:void 0,addressTo:void 0,tag:void 0,tagFrom:void 0,tagTo:void 0,updated:r,comment:void 0,fee:u}}parseTransactionStatus(e){return this.safeString({pending:"pending",failed:"failed",success:"ok"},e,e)}parseTransactionType(e){return this.safeString({payin:"deposit",payout:"withdrawal",withdraw:"withdrawal"},e,e)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i),void 0!==t&&(a.sort="ASC",a.from=this.iso8601(t));const n=await this.publicGetTradesSymbol(this.extend(a,s));return this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e);let d=this.uuid().split("-").join("");d=d.slice(0,32),s=parseFloat(s);const c={clientOrderId:d,symbol:o.id,side:i,quantity:this.amountToPrecision(e,s),type:t};"limit"===t?c.price=this.priceToPrecision(e,a):c.timeInForce=this.options.defaultTimeInForce;const h=await this.privatePostOrder(this.extend(c,n)),u=this.parseOrder(h);if("rejected"===u.status)throw new r.InvalidOrder(this.id+" order was rejected by the exchange "+this.json(u));return u}async editOrder(e,t,i,s,r=undefined,a=undefined,n={}){await this.loadMarkets();let o=this.uuid().split("-").join("");o=o.slice(0,32);const d={clientOrderId:e,requestClientId:o};void 0!==r&&(d.quantity=this.amountToPrecision(t,r)),void 0!==a&&(d.price=this.priceToPrecision(t,a));const c=await this.privatePatchOrderClientOrderId(this.extend(d,n));return this.parseOrder(c)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={clientOrderId:e},r=await this.privateDeleteOrderClientOrderId(this.extend(s,i));return this.parseOrder(r)}parseOrderStatus(e){return this.safeString({new:"open",suspended:"open",partiallyFilled:"open",filled:"closed",canceled:"canceled",expired:"failed"},e,e)}parseOrder(e,t=undefined){const i=this.parse8601(this.safeString(e,"createdAt")),s=this.parse8601(this.safeString(e,"updatedAt")),r=this.safeString(e,"symbol"),a=(t=this.safeMarket(r,t)).symbol,n=this.safeString(e,"quantity"),o=this.safeString(e,"cumQuantity"),d=this.parseOrderStatus(this.safeString(e,"status")),c=this.safeString(e,"clientOrderId"),h=c,u=this.safeString(e,"price"),l=this.safeString(e,"type"),p=this.safeString(e,"side"),f=this.safeValue(e,"tradesReport"),m=this.safeString(e,"avgPrice"),v=this.safeString(e,"timeInForce");return this.safeOrder({id:c,clientOrderId:h,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,status:d,symbol:a,type:l,timeInForce:v,side:p,price:u,stopPrice:void 0,triggerPrice:void 0,average:m,amount:n,cost:void 0,filled:o,remaining:void 0,fee:void 0,trades:f,info:e},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={clientOrderId:e},a=await this.privateGetHistoryOrder(this.extend(s,i));if(a.length>0)return this.parseOrder(a[0]);throw new r.OrderNotFound(this.id+" order "+e+" not found")}async fetchOpenOrder(e,t=undefined,i={}){await this.loadMarkets();const s={clientOrderId:e},r=await this.privateGetOrderClientOrderId(this.extend(s,i));return this.parseOrder(r)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id);const n=await this.privateGetOrder(this.extend(a,s));return this.parseOrders(n,r,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.from=this.iso8601(t));const n=await this.privateGetHistoryOrder(this.extend(a,s)),o=this.parseOrders(n,r),d=[];for(let e=0;e<o.length;e++){const t=o[e],i=t.status;"closed"!==i&&"canceled"!==i||d.push(t)}return this.filterBySinceLimit(d,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.from=this.iso8601(t)),void 0!==i&&(r.limit=i);const n=await this.privateGetHistoryTrades(this.extend(r,s));return this.parseTrades(n,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,a={}){let n;await this.loadMarkets(),void 0!==t&&(n=this.market(t));const o={orderId:e},d=await this.privateGetHistoryOrderOrderIdTrades(this.extend(o,a));if(d.length>0)return this.parseTrades(d,n,i,s);throw new r.OrderNotFound(this.id+" order "+e+" not found, "+this.id+'.fetchOrderTrades() requires an exchange-specific order id, you need to grab it from order["info"]["id"]')}async createDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.privatePostAccountCryptoAddressCurrency(this.extend(s,t)),a=this.safeString(r,"address");return this.checkAddress(a),{currency:i,address:a,tag:this.safeString(r,"paymentId"),info:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=this.safeString(t,"network");if(void 0!==r){t=this.omit(t,"network");const e=this.safeValue(this.options,"networks"),i=this.safeString(e,r,r);s.currency+=i}const a=await this.privateGetAccountCryptoAddressCurrency(this.extend(s,t)),n=this.safeString(a,"address");this.checkAddress(n);const o=this.safeString(a,"paymentId");return{currency:i.code,address:n,tag:o,network:void 0,info:a}}async convertCurrencyNetwork(e,t,i,s,a){await this.loadMarkets();const n=this.currency(e),o=this.safeValue(this.options,"networks",{});if((i=this.safeString(o,i,i))===(s=this.safeString(o,s,s)))throw new r.ExchangeError(this.id+" convertCurrencyNetwork() fromNetwork cannot be the same as toNetwork");const d={fromCurrency:n.id+i,toCurrency:n.id+s,amount:parseFloat(this.currencyToPrecision(e,t))};return{info:await this.privatePostAccountCryptoTransferConvert(this.extend(d,a))}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);const a=this.currency(e),n={currency:a.id,amount:parseFloat(t),address:i};s&&(n.paymentId=s);const o=this.safeValue(this.options,"networks",{});let d=this.safeStringUpper(r,"network");d=this.safeString(o,d,d),void 0!==d&&(n.currency+=d,r=this.omit(r,"network"));const c=await this.privatePostAccountCryptoWithdraw(this.extend(n,r));return this.parseTransaction(c,a)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/api/"+this.version+"/";const o=this.omit(s,this.extractParams(e));if("public"===t)n+=t+"/"+this.implodeParams(e,s),Object.keys(o).length&&(n+="?"+this.urlencode(o));else{this.checkRequiredCredentials(),n+=this.implodeParams(e,s),"GET"===i?Object.keys(o).length&&(n+="?"+this.urlencode(o)):Object.keys(o).length&&(a=this.json(o));const t=this.apiKey+":"+this.secret;r={Authorization:"Basic "+this.stringToBase64(t),"Content-Type":"application/json"}}return n=this.urls.api[t]+n,{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&e>=400){const t=this.id+" "+n;if(503===e||504===e)throw new r.ExchangeNotAvailable(t);if(429===e)return;if("{"===n[0]&&"error"in o){const e=this.safeString(o.error,"code");if(this.throwExactlyMatchedException(this.exceptions,e,t),"Duplicate clientOrderId"===this.safeString(o.error,"message"))throw new r.InvalidOrder(t)}throw new r.ExchangeError(t)}}}},4815:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(9426),r=i(9292),a=i(2194),n=i(6689),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"hitbtc3",name:"HitBTC",countries:["HK"],rateLimit:3.333,version:"3",pro:!1,has:{CORS:!1,spot:!0,margin:!0,swap:!0,future:!1,option:void 0,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:void 0,fetchBorrowRateHistories:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:void 0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!0,fetchLeverage:!0,fetchLeverageTiers:void 0,fetchMarketLeverageTiers:void 0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!1,fetchOrderTrades:!0,fetchPosition:!0,fetchPositions:!0,fetchPremiumIndexOHLCV:!0,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!0,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},precisionMode:r.sh,urls:{logo:"https://user-images.githubusercontent.com/1294454/27766555-8eaec20e-5edc-11e7-9c5b-6dc69fc42f5e.jpg",test:{public:"https://api.demo.hitbtc.com/api/3",private:"https://api.demo.hitbtc.com/api/3"},api:{public:"https://api.hitbtc.com/api/3",private:"https://api.hitbtc.com/api/3"},www:"https://hitbtc.com",referral:"https://hitbtc.com/?ref_id=5a5d39a65d466",doc:["https://api.hitbtc.com","https://github.com/hitbtc-com/hitbtc-api/blob/master/APIv2.md"],fees:["https://hitbtc.com/fees-and-limits","https://support.hitbtc.com/hc/en-us/articles/115005148605-Fees-and-limits"]},api:{public:{get:{"public/currency":10,"public/symbol":10,"public/ticker":10,"public/price/rate":10,"public/trades":10,"public/orderbook":10,"public/candles":10,"public/futures/info":10,"public/futures/history/funding":10,"public/futures/candles/index_price":10,"public/futures/candles/mark_price":10,"public/futures/candles/premium_index":10,"public/futures/candles/open_interest":10}},private:{get:{"spot/balance":15,"spot/order":15,"spot/order/{client_order_id}":15,"spot/fee":15,"spot/fee/{symbol}":15,"spot/history/order":15,"spot/history/trade":15,"margin/account":15,"margin/account/isolated/{symbol}":15,"margin/order":15,"margin/order/{client_order_id}":15,"margin/history/clearing":15,"margin/history/order":15,"margin/history/positions":15,"margin/history/trade":15,"futures/balance":15,"futures/account":15,"futures/account/isolated/{symbol}":15,"futures/order":15,"futures/order/{client_order_id}":15,"futures/fee":15,"futures/fee/{symbol}":15,"futures/history/clearing":15,"futures/history/order":15,"futures/history/positions":15,"futures/history/trade":15,"wallet/balance":15,"wallet/crypto/address":15,"wallet/crypto/address/recent-deposit":15,"wallet/crypto/address/recent-withdraw":15,"wallet/crypto/address/check-mine":15,"wallet/transactions":15,"wallet/crypto/check-offchain-available":15,"wallet/crypto/fee/estimate":15,"sub-account":15,"sub-account/acl":15,"sub-account/balance/{subAccID}":15,"sub-account/crypto/address/{subAccID}/{currency}":15},post:{"spot/order":1,"margin/order":1,"futures/order":1,"wallet/convert":15,"wallet/crypto/address":15,"wallet/crypto/withdraw":15,"wallet/transfer":15,"sub-account/freeze":15,"sub-account/activate":15,"sub-account/transfer":15,"sub-account/acl":15},patch:{"spot/order/{client_order_id}":1,"margin/order/{client_order_id}":1,"futures/order/{client_order_id}":1},delete:{"spot/order":1,"spot/order/{client_order_id}":1,"margin/position":1,"margin/position/isolated/{symbol}":1,"margin/order":1,"margin/order/{client_order_id}":1,"futures/position":1,"futures/position/isolated/{symbol}":1,"futures/order":1,"futures/order/{client_order_id}":1,"wallet/crypto/withdraw/{id}":1},put:{"margin/account/isolated/{symbol}":1,"futures/account/isolated/{symbol}":1,"wallet/crypto/withdraw/{id}":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0009"),maker:this.parseNumber("0.0009"),tiers:{maker:[[this.parseNumber("0"),this.parseNumber("0.0009")],[this.parseNumber("10"),this.parseNumber("0.0007")],[this.parseNumber("100"),this.parseNumber("0.0006")],[this.parseNumber("500"),this.parseNumber("0.0005")],[this.parseNumber("1000"),this.parseNumber("0.0003")],[this.parseNumber("5000"),this.parseNumber("0.0002")],[this.parseNumber("10000"),this.parseNumber("0.0001")],[this.parseNumber("20000"),this.parseNumber("0")],[this.parseNumber("50000"),this.parseNumber("-0.0001")],[this.parseNumber("100000"),this.parseNumber("-0.0001")]],taker:[[this.parseNumber("0"),this.parseNumber("0.0009")],[this.parseNumber("10"),this.parseNumber("0.0008")],[this.parseNumber("100"),this.parseNumber("0.0007")],[this.parseNumber("500"),this.parseNumber("0.0007")],[this.parseNumber("1000"),this.parseNumber("0.0006")],[this.parseNumber("5000"),this.parseNumber("0.0006")],[this.parseNumber("10000"),this.parseNumber("0.0005")],[this.parseNumber("20000"),this.parseNumber("0.0004")],[this.parseNumber("50000"),this.parseNumber("0.0003")],[this.parseNumber("100000"),this.parseNumber("0.0002")]]}}},timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"D7","1M":"1M"},exceptions:{exact:{429:n.RateLimitExceeded,500:n.ExchangeError,503:n.ExchangeNotAvailable,504:n.ExchangeNotAvailable,600:n.PermissionDenied,800:n.ExchangeError,1002:n.AuthenticationError,1003:n.PermissionDenied,1004:n.AuthenticationError,1005:n.AuthenticationError,2001:n.BadSymbol,2002:n.BadRequest,2003:n.BadRequest,2010:n.BadRequest,2011:n.BadRequest,2012:n.BadRequest,2020:n.BadRequest,2022:n.BadRequest,10001:n.BadRequest,10021:n.AccountSuspended,10022:n.BadRequest,20001:n.InsufficientFunds,20002:n.OrderNotFound,20003:n.ExchangeError,20004:n.ExchangeError,20005:n.ExchangeError,20006:n.ExchangeError,20007:n.ExchangeError,20008:n.InvalidOrder,20009:n.InvalidOrder,20010:n.OnMaintenance,20011:n.ExchangeError,20012:n.ExchangeError,20014:n.ExchangeError,20016:n.ExchangeError,20031:n.ExchangeError,20032:n.ExchangeError,20033:n.ExchangeError,20034:n.ExchangeError,20040:n.ExchangeError,20041:n.ExchangeError,20042:n.ExchangeError,20043:n.ExchangeError,20044:n.PermissionDenied,20045:n.InvalidOrder,20080:n.ExchangeError,21001:n.ExchangeError,21003:n.AccountSuspended,21004:n.AccountSuspended},broad:{}},options:{networks:{ETH:"USDT20",ERC20:"USDT20",TRX:"USDTRX",TRC20:"USDTRX",OMNI:"USDT"},accountsByType:{spot:"spot",funding:"wallet",future:"derivatives"}},commonCurrencies:{AUTO:"Cube",BCC:"BCC",BDP:"BidiPass",BET:"DAO.Casino",BIT:"BitRewards",BOX:"BOX Token",CPT:"Cryptaur",GET:"Themis",GMT:"GMT Token",HSR:"HC",IQ:"IQ.Cash",LNC:"LinkerCoin",PLA:"PlayChip",PNT:"Penta",SBTC:"Super Bitcoin",STEPN:"GMT",STX:"STOX",TV:"Tokenville",USD:"USDT",XMT:"MTL",XPNT:"PNT"}})}nonce(){return this.milliseconds()}async fetchMarkets(e={}){const t=await this.publicGetPublicSymbol(e),i=[],s=Object.keys(t);for(let e=0;e<s.length;e++){const r=s[e],n=this.safeValue(t,r),o=this.safeString(n,"type"),d=this.safeInteger(n,"expiry"),c="futures"===o,h="spot"===o,u=this.safeValue(n,"margin_trading",!1),l=h&&u,p=void 0!==d,f=c&&!p,m=!1,v=this.safeString2(n,"base_currency","underlying"),g=this.safeString(n,"quote_currency"),y=this.safeString(n,"fee_currency"),b=this.safeCurrencyCode(v),w=this.safeCurrencyCode(g),S=this.safeCurrencyCode(y);let P,k,O,T,A,G=b+"/"+w,I="spot";c&&(O=this.parseNumber("1"),P=y,k=this.safeCurrencyCode(P),T=void 0!==w&&w===k,A=!T,G=G+":"+k,p?(G=G+"-"+d,I="future"):I="swap");const C=this.safeString(n,"quantity_increment"),M=this.safeString(n,"tick_size"),x=this.parseNumber(C),V=this.parseNumber(M);i.push({id:r,symbol:G,base:b,quote:w,settle:k,baseId:v,quoteId:g,settleId:P,type:I,spot:h,margin:l,swap:f,future:p,option:m,active:!0,contract:c,linear:T,inverse:A,taker:this.safeNumber(n,"take_rate"),maker:this.safeNumber(n,"make_rate"),contractSize:O,expiry:d,expiryDatetime:void 0,strike:void 0,optionType:void 0,feeCurrency:S,precision:{amount:x,price:V},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(n,"max_initial_leverage",1)},amount:{min:x,max:void 0},price:{min:V,max:void 0},cost:{min:this.parseNumber(a.O.stringMul(C,M)),max:void 0}},info:n})}return i}async fetchCurrencies(e={}){const t=await this.publicGetPublicCurrency(e),i={},s=Object.keys(t);for(let e=0;e<s.length;e++){const r=s[e],a=this.safeCurrencyCode(r),n=t[r],o=this.safeString(n,"full_name"),d=this.safeNumber(n,"precision_transfer"),c=this.safeValue(n,"payin_enabled",!1),h=this.safeValue(n,"payout_enabled",!1),u=this.safeValue(n,"transfer_enabled",!1),l=c&&h&&u,p=this.safeValue(n,"networks",[]),f={};let m,v,g;for(let e=0;e<p.length;e++){const t=p[e],i=this.safeString2(t,"protocol","network"),s=this.safeNetwork(i);m=this.safeNumber(t,"payout_fee");const r=this.safeNumber(t,"precision_payout"),a=this.safeValue(n,"payin_enabled",!1),o=this.safeValue(n,"payout_enabled",!1),d=a&&o;a&&!v?v=!0:a||(v=!1),o&&!g?g=!0:o||(g=!1),f[s]={info:t,id:i,network:s,fee:m,active:d,deposit:a,withdraw:o,precision:r,limits:{withdraw:{min:void 0,max:void 0}}}}const y=Object.keys(f).length;i[a]={info:n,code:a,id:r,precision:d,name:o,active:l,deposit:v,withdraw:g,networks:f,fee:y<=1?m:void 0,limits:{amount:{min:void 0,max:void 0}}}}return i}safeNetwork(e){return void 0===e?void 0:e.toUpperCase()}async createDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=this.safeStringUpper(t,"network");if(void 0!==s&&"USDT"===e){const e=this.safeValue(this.options,"networks"),r=this.safeString(e,s);void 0!==r&&(i.currency=r),t=this.omit(t,"network")}const r=await this.privatePostWalletCryptoAddress(this.extend(i,t)),a=this.safeString(r,"currency");return{currency:this.safeCurrencyCode(a),address:this.safeString(r,"address"),tag:this.safeString(r,"payment_id"),network:void 0,info:r}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=this.safeStringUpper(t,"network");if(void 0!==s&&"USDT"===e){const e=this.safeValue(this.options,"networks"),r=this.safeString(e,s);void 0!==r&&(i.currency=r),t=this.omit(t,"network")}const r=await this.privateGetWalletCryptoAddress(this.extend(i,t)),a=this.safeValue(r,0),n=this.safeString(a,"address"),o=this.safeString(a,"currency"),d=this.safeString(a,"payment_id"),c=this.safeCurrencyCode(o);return{info:r,address:n,tag:d,code:c,currency:c,network:void 0}}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"reserved"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){const t=this.safeStringLower(e,"type","spot");e=this.omit(e,["type"]);const i=this.safeValue(this.options,"accountsByType",{}),s=this.safeString(i,t,t);let r;if("wallet"===s)r=await this.privateGetWalletBalance(e);else if("spot"===s)r=await this.privateGetSpotBalance(e);else{if("derivatives"!==s){const e=Object.keys(i);throw new n.BadRequest(this.id+" fetchBalance() type parameter must be one of "+e.join(", "))}r=await this.privateGetFuturesBalance(e)}return this.parseBalance(r)}async fetchTicker(e,t={}){const i=await this.fetchTickers([e],t);return this.safeValue(i,e)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==(e=this.marketSymbols(e))){const t=this.marketIds(e).join(",");i.symbols=t}const s=await this.publicGetPublicTicker(this.extend(i,t)),r={},a=Object.keys(s);for(let e=0;e<a.length;e++){const t=a[e],i=this.safeMarket(t),n=i.symbol,o=s[t];r[n]=this.parseTicker(o,i)}return this.filterByArray(r,"symbol",e)}parseTicker(e,t=undefined){const i=this.parse8601(e.timestamp),s=this.safeSymbol(void 0,t),r=this.safeString(e,"volume"),a=this.safeString(e,"volume_quote"),n=this.safeString(e,"open"),o=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:r,quoteVolume:a,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbols=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.from=t);const n=await this.publicGetPublicTrades(this.extend(a,s)),o=Object.keys(n);let d=[];for(let e=0;e<o.length;e++){const t=o[e],i=this.market(t),s=n[t],r=this.parseTrades(s,i);d=this.arrayConcat(d,r)}return d}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};let n;void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.from=t),[n,s]=this.handleMarketTypeAndParams("fetchMyTrades",r,s);let o=this.getSupportedMapping(n,{spot:"privateGetSpotHistoryTrade",swap:"privateGetFuturesHistoryTrade",margin:"privateGetMarginHistoryTrade"});const[d,c]=this.handleMarginModeAndParams("fetchMyTrades",s);void 0!==d&&(o="privateGetMarginHistoryTrade");const h=await this[o](this.extend(a,c));return this.parseTrades(h,r,t,i)}parseTrade(e,t=undefined){const i=this.parse8601(e.timestamp),s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t)).symbol;let a;const n=this.safeString(e,"fee"),o=this.safeValue(e,"taker");let d;if(void 0!==o&&(d=o?"taker":"maker"),void 0!==n){const e=this.safeValue(t,"info",{}),i=this.safeString(e,"fee_currency");a={cost:n,currency:this.safeCurrencyCode(i)}}const c=this.safeString2(e,"clientOrderId","client_order_id"),h=this.safeString(e,"price"),u=this.safeString2(e,"quantity","qty"),l=this.safeString(e,"side"),p=this.safeString(e,"id");return this.safeTrade({info:e,id:p,order:c,timestamp:i,datetime:this.iso8601(i),symbol:r,type:void 0,side:l,takerOrMaker:d,price:h,amount:u,cost:void 0,fee:a},t)}async fetchTransactionsHelper(e,t,i,s,r){await this.loadMarkets();const a={types:e};let n;void 0!==t&&(n=this.currency(t),a.currencies=n.id),void 0!==i&&(a.from=this.iso8601(i)),void 0!==s&&(a.limit=s);const o=await this.privateGetWalletTransactions(this.extend(a,r));return this.parseTransactions(o,n,i,s,r)}parseTransactionStatus(e){return this.safeString({PENDING:"pending",FAILED:"failed",SUCCESS:"ok"},e,e)}parseTransactionType(e){return this.safeString({DEPOSIT:"deposit",WITHDRAW:"withdrawal"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.parse8601(this.safeString(e,"created_at")),r=this.parse8601(this.safeString(e,"updated_at")),a=this.parseTransactionType(this.safeString(e,"type")),n=this.parseTransactionStatus(this.safeString(e,"status")),o=this.safeValue(e,"native",{}),d=this.safeString(o,"currency"),c=this.safeCurrencyCode(d),h=this.safeString(o,"hash"),u=this.safeString(o,"address"),l=u,p=this.safeString(o,"payment_id"),f=p,m=this.safeValue(o,"senders"),v=this.safeString(m,0),g=this.safeNumber(o,"amount"),y={currency:void 0,cost:void 0,rate:void 0},b=this.safeNumber(o,"fee");return void 0!==b&&(y.currency=c,y.cost=b),{info:e,id:i,txid:h,type:a,code:c,currency:c,network:void 0,amount:g,status:n,timestamp:s,datetime:this.iso8601(s),address:u,addressFrom:v,addressTo:l,tag:p,tagFrom:void 0,tagTo:f,updated:r,comment:void 0,fee:y}}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsHelper("DEPOSIT,WITHDRAW",e,t,i,s)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsHelper("DEPOSIT",e,t,i,s)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactionsHelper("WITHDRAW",e,t,i,s)}async fetchOrderBooks(e=undefined,t=undefined,i={}){await this.loadMarkets();const s={};if(void 0!==e){const t=this.marketIds(e);s.symbols=t.join(",")}void 0!==t&&(s.depth=t);const r=await this.publicGetPublicOrderbook(this.extend(s,i)),a={},n=Object.keys(r);for(let e=0;e<n.length;e++){const t=n[e],i=r[t],s=this.safeSymbol(t),o=this.parse8601(this.safeString(i,"timestamp"));a[s]=this.parseOrderBook(r[t],s,o,"bid","ask")}return a}async fetchOrderBook(e,t=undefined,i={}){return(await this.fetchOrderBooks([e],t,i))[e]}parseTradingFee(e,t=undefined){const i=this.safeNumber(e,"take_rate"),s=this.safeNumber(e,"make_rate"),r=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(r,t),taker:i,maker:s}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=this.getSupportedMapping(i.type,{spot:"privateGetSpotFeeSymbol",swap:"privateGetFuturesFeeSymbol"}),a=await this[r](this.extend(s,t));return this.parseTradingFee(a,i)}async fetchTradingFees(e=undefined,t={}){await this.loadMarkets();const[i,s]=this.handleMarketTypeAndParams("fetchTradingFees",void 0,t),r=this.getSupportedMapping(i,{spot:"privateGetSpotFee",swap:"privateGetFuturesFee"}),a=await this[r](s),n={};for(let e=0;e<a.length;e++){const t=this.parseTradingFee(a[e]);n[t.symbol]=t}return n}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbols:a.id,period:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.from=this.iso8601(i)),void 0!==s&&(n.limit=s);const o=this.safeString(r,"price");r=this.omit(r,"price");let d="publicGetPublicCandles";"mark"===o?d="publicGetPublicFuturesCandlesMarkPrice":"index"===o?d="publicGetPublicFuturesCandlesIndexPrice":"premiumIndex"===o&&(d="publicGetPublicFuturesCandlesPremiumIndex");const c=await this[d](this.extend(n,r)),h=this.safeValue(c,a.id);return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"max"),this.safeNumber(e,"min"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};let n;void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.from=this.iso8601(t)),void 0!==i&&(a.limit=i),[n,s]=this.handleMarketTypeAndParams("fetchClosedOrders",r,s);let o=this.getSupportedMapping(n,{spot:"privateGetSpotHistoryOrder",swap:"privateGetFuturesHistoryOrder",margin:"privateGetMarginHistoryOrder"});const[d,c]=this.handleMarginModeAndParams("fetchClosedOrders",s);void 0!==d&&(o="privateGetMarginHistoryOrder");const h=await this[o](this.extend(a,c)),u=this.parseOrders(h,r,t,i);return this.filterByArray(u,"status",["closed","canceled"],!1)}async fetchOrder(e,t=undefined,i={}){let s,r;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[r,i]=this.handleMarketTypeAndParams("fetchOrder",s,i);let a=this.getSupportedMapping(r,{spot:"privateGetSpotHistoryOrder",swap:"privateGetFuturesHistoryOrder",margin:"privateGetMarginHistoryOrder"});const[n,o]=this.handleMarginModeAndParams("fetchOrder",i);void 0!==n&&(a="privateGetMarginHistoryOrder");const d={client_order_id:e},c=await this[a](this.extend(d,o)),h=this.safeValue(c,0);return this.parseOrder(h,s)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={order_id:e};let o;[o,r]=this.handleMarketTypeAndParams("fetchOrderTrades",a,r);let d=this.getSupportedMapping(o,{spot:"privateGetSpotHistoryTrade",swap:"privateGetFuturesHistoryTrade",margin:"privateGetMarginHistoryTrade"});const[c,h]=this.handleMarginModeAndParams("fetchOrderTrades",r);void 0!==c&&(d="privateGetMarginHistoryTrade");const u=await this[d](this.extend(n,h));return this.parseTrades(u,a,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};let n;void 0!==e&&(r=this.market(e),a.symbol=r.id),[n,s]=this.handleMarketTypeAndParams("fetchOpenOrders",r,s);let o=this.getSupportedMapping(n,{spot:"privateGetSpotOrder",swap:"privateGetFuturesOrder",margin:"privateGetMarginOrder"});const[d,c]=this.handleMarginModeAndParams("fetchOpenOrders",s);void 0!==d&&(o="privateGetMarginOrder");const h=await this[o](this.extend(a,c));return this.parseOrders(h,r,t,i)}async fetchOpenOrder(e,t=undefined,i={}){let s,r;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[r,i]=this.handleMarketTypeAndParams("fetchOpenOrder",s,i);let a=this.getSupportedMapping(r,{spot:"privateGetSpotOrderClientOrderId",swap:"privateGetFuturesOrderClientOrderId",margin:"privateGetMarginOrderClientOrderId"});const[n,o]=this.handleMarginModeAndParams("fetchOpenOrder",i);void 0!==n&&(a="privateGetMarginOrderClientOrderId");const d={client_order_id:e},c=await this[a](this.extend(d,o));return this.parseOrder(c,s)}async cancelAllOrders(e=undefined,t={}){let i;await this.loadMarkets();const s={};let r;void 0!==e&&(i=this.market(e),s.symbol=i.id),[r,t]=this.handleMarketTypeAndParams("cancelAllOrders",i,t);let a=this.getSupportedMapping(r,{spot:"privateDeleteSpotOrder",swap:"privateDeleteFuturesOrder",margin:"privateDeleteMarginOrder"});const[n,o]=this.handleMarginModeAndParams("cancelAllOrders",t);void 0!==n&&(a="privateDeleteMarginOrder");const d=await this[a](this.extend(s,o));return this.parseOrders(d,i)}async cancelOrder(e,t=undefined,i={}){let s;await this.loadMarkets();const r={client_order_id:e};let a;void 0!==t&&(s=this.market(t)),[a,i]=this.handleMarketTypeAndParams("cancelOrder",s,i);let n=this.getSupportedMapping(a,{spot:"privateDeleteSpotOrderClientOrderId",swap:"privateDeleteFuturesOrderClientOrderId",margin:"privateDeleteMarginOrderClientOrderId"});const[o,d]=this.handleMarginModeAndParams("cancelOrder",i);void 0!==o&&(n="privateDeleteMarginOrderClientOrderId");const c=await this[n](this.extend(r,d));return this.parseOrder(c,s)}async editOrder(e,t,i,s,r,a=undefined,o={}){let d;await this.loadMarkets();const c={client_order_id:e,quantity:this.amountToPrecision(t,r)};if("limit"===i||"stopLimit"===i){if(void 0===a)throw new n.ExchangeError(this.id+" editOrder() limit order requires price");c.price=this.priceToPrecision(t,a)}let h;void 0!==t&&(d=this.market(t)),[h,o]=this.handleMarketTypeAndParams("editOrder",d,o);let u=this.getSupportedMapping(h,{spot:"privatePatchSpotOrderClientOrderId",swap:"privatePatchFuturesOrderClientOrderId",margin:"privatePatchMarginOrderClientOrderId"});const[l,p]=this.handleMarginModeAndParams("editOrder",o);void 0!==l&&(u="privatePatchMarginOrderClientOrderId");const f=await this[u](this.extend(c,p));return this.parseOrder(f,d)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const o=this.market(e),d={type:t,side:i,quantity:this.amountToPrecision(e,s),symbol:o.id},c=this.safeValue(a,"reduceOnly");if(void 0!==c&&"swap"!==o.type&&"margin"!==o.type)throw new n.InvalidOrder(this.id+" createOrder() does not support reduce_only for "+o.type+" orders, reduce_only orders are supported for swap and margin markets only");!0===c&&(d.reduce_only=c);const h=this.safeString2(a,"timeInForce","time_in_force"),u=this.safeString(a,"expire_time"),l=this.safeNumber2(a,"stopPrice","stop_price");if("limit"===t||"stopLimit"===t||"takeProfitLimit"===t){if(void 0===r)throw new n.ExchangeError(this.id+" createOrder() requires a price argument for limit orders");d.price=this.priceToPrecision(e,r)}if("GTD"===h){if(void 0===u)throw new n.ExchangeError(this.id+" createOrder() requires an expire_time parameter for a GTD order");d.expire_time=u}if("stopLimit"===t||"stopMarket"===t||"takeProfitLimit"===t||"takeProfitMarket"===t){if(void 0===l)throw new n.ExchangeError(this.id+" createOrder() requires a stopPrice parameter for stop-loss and take-profit orders");d.stop_price=this.priceToPrecision(e,l)}let p;[p,a]=this.handleMarketTypeAndParams("createOrder",o,a);let f=this.getSupportedMapping(p,{spot:"privatePostSpotOrder",swap:"privatePostFuturesOrder",margin:"privatePostMarginOrder"});const[m,v]=this.handleMarginModeAndParams("createOrder",a);void 0!==m&&(f="privatePostMarginOrder");const g=await this[f](this.extend(d,v));return this.parseOrder(g,o)}parseOrderStatus(e){return this.safeString({new:"open",suspended:"open",partiallyFilled:"open",filled:"closed",canceled:"canceled",expired:"failed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"client_order_id"),s=this.safeString(e,"side"),r=this.safeString(e,"type"),a=this.safeString(e,"quantity"),n=this.safeString(e,"price"),o=this.safeString(e,"price_average"),d=this.safeString(e,"created_at"),c=this.parse8601(d),h=this.safeString(e,"updated_at");let u;h!==d&&(u=this.parse8601(h));const l=this.safeString(e,"quantity_cumulative"),p=this.parseOrderStatus(this.safeString(e,"status")),f=this.safeString(e,"symbol"),m=(t=this.safeMarket(f,t)).symbol,v=this.safeValue(e,"post_only"),g=this.safeString(e,"time_in_force"),y=this.safeValue(e,"trades");return this.safeOrder({info:e,id:i,clientOrderId:i,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:u,symbol:m,price:n,amount:a,type:r,side:s,timeInForce:g,postOnly:v,reduceOnly:this.safeValue(e,"reduce_only"),filled:l,remaining:void 0,cost:void 0,status:p,average:o,trades:y,fee:void 0},t)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),o=this.currencyToPrecision(e,t),d=this.safeValue(this.options,"accountsByType",{});i=i.toLowerCase(),s=s.toLowerCase();const c=this.safeString(d,i,i),h=this.safeString(d,s,s);if(c===h)throw new n.BadRequest(this.id+" transfer() fromAccount and toAccount arguments cannot be the same account");const u={currency:a.id,amount:o,source:c,destination:h},l=await this.privatePostWalletTransfer(this.extend(u,r));return this.parseTransfer(l,a)}parseTransfer(e,t=undefined){const i=this.milliseconds();return{id:this.safeString(e,0),timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0,info:e}}async convertCurrencyNetwork(e,t,i,s,r){if(await this.loadMarkets(),"USDT"!==e)throw new n.ExchangeError(this.id+" convertCurrencyNetwork() only supports USDT currently");const a=this.safeValue(this.options,"networks",{});if(i=i.toUpperCase(),s=s.toUpperCase(),(i=this.safeString(a,i))===(s=this.safeString(a,s)))throw new n.BadRequest(this.id+" convertCurrencyNetwork() fromNetwork cannot be the same as toNetwork");if(void 0===i||void 0===s){const e=Object.keys(a);throw new n.ArgumentsRequired(this.id+" convertCurrencyNetwork() requires a fromNetwork parameter and a toNetwork parameter, supported networks are "+e.join(", "))}const o={from_currency:i,to_currency:s,amount:this.currencyToPrecision(e,t)};return{info:await this.privatePostWalletConvert(this.extend(o,r))}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);const a=this.currency(e),n={currency:a.id,amount:t,address:i};void 0!==s&&(n.payment_id=s);const o=this.safeValue(this.options,"networks",{}),d=this.safeStringUpper(r,"network");if(void 0!==d&&"USDT"===e){const e=this.safeString(o,d);void 0!==e&&(n.currency=e),r=this.omit(r,"network")}const c=await this.privatePostWalletCryptoWithdraw(this.extend(n,r));return this.parseTransaction(c,a)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),e=r.symbol,a.symbols=r.id),void 0!==t&&(a.from=t),void 0!==i&&(a.limit=i);const n=await this.publicGetPublicFuturesHistoryFunding(this.extend(a,s)),o=Object.keys(n),d=[];for(let e=0;e<o.length;e++){const t=o[e],i=this.safeMarket(t),s=n[t];for(let e=0;e<s.length;e++){const t=s[e],r=this.safeSymbol(i.symbol),a=this.safeNumber(t,"funding_rate"),n=this.safeString(t,"timestamp");d.push({info:t,symbol:r,fundingRate:a,timestamp:this.parse8601(n),datetime:n})}}const c=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(c,e,t,i)}async fetchPositions(e=undefined,t={}){let i;await this.loadMarkets(),[i,t]=this.handleMarketTypeAndParams("fetchPositions",void 0,t);let s=this.getSupportedMapping(i,{swap:"privateGetFuturesAccount",margin:"privateGetMarginAccount"});const[r,a]=this.handleMarginModeAndParams("fetchPositions",t);void 0!==r&&(s="privateGetMarginAccount");const n=await this[s](this.extend({},a)),o=[];for(let e=0;e<n.length;e++)o.push(this.parsePosition(n[e]));return o}async fetchPosition(e,t={}){let i;await this.loadMarkets(),[i,t]=this.handleMarketTypeAndParams("fetchPosition",void 0,t);let s=this.getSupportedMapping(i,{swap:"privateGetFuturesAccountIsolatedSymbol",margin:"privateGetMarginAccountIsolatedSymbol"});const[r,a]=this.handleMarginModeAndParams("fetchPosition",t);void 0!==r&&(s="privateGetMarginAccountIsolatedSymbol");const n=this.market(e),o={symbol:n.id},d=await this[s](this.extend(o,a));return this.parsePosition(d,n)}parsePosition(e,t=undefined){const i=this.safeString(e,"type"),s=this.safeNumber(e,"leverage"),r=this.safeString(e,"updated_at"),a=this.safeValue(e,"positions",[]);let n,o,d;for(let e=0;e<a.length;e++){const t=a[e];n=this.safeNumber(t,"price_liquidation"),o=this.safeNumber(t,"price_entry"),d=this.safeNumber(t,"quantity")}const c=this.safeValue(e,"currencies",[]);let h;for(let e=0;e<c.length;e++){const t=c[e];h=this.safeNumber(t,"margin_balance")}const u=this.safeString(e,"symbol");return{info:e,id:void 0,symbol:(t=this.safeMarket(u,t)).symbol,notional:void 0,marginMode:i,marginType:i,liquidationPrice:n,entryPrice:o,unrealizedPnl:void 0,percentage:void 0,contracts:d,contractSize:void 0,markPrice:void 0,side:void 0,hedged:void 0,timestamp:this.parse8601(r),datetime:r,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,collateral:h,initialMargin:void 0,initialMarginPercentage:void 0,leverage:s,marginRatio:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new n.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");const s={};void 0!==e&&(e=i.symbol,s.symbols=i.id);const r=await this.publicGetPublicFuturesInfo(this.extend(s,t)),a=this.safeValue(r,i.id,{});return this.parseFundingRate(a,i)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"next_funding_time"),s=this.safeString(e,"timestamp");return{info:e,symbol:this.safeSymbol(void 0,t),markPrice:this.safeNumber(e,"mark_price"),indexPrice:this.safeNumber(e,"index_price"),interestRate:this.safeNumber(e,"interest_rate"),estimatedSettlePrice:void 0,timestamp:this.parse8601(s),datetime:s,fundingRate:this.safeNumber(e,"funding_rate"),fundingTimestamp:this.parse8601(i),fundingDatetime:i,nextFundingRate:this.safeNumber(e,"indicative_funding_rate"),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async modifyMarginHelper(e,t,i,s={}){await this.loadMarkets();const r=this.market(e),a=this.safeString(s,"leverage");if("swap"===r.type&&void 0===a)throw new n.ArgumentsRequired(this.id+" modifyMarginHelper() requires a leverage parameter for swap markets");t=this.amountToPrecision(e,t);const o={symbol:r.id,margin_balance:t};let d;void 0!==a&&(o.leverage=a),[d,s]=this.handleMarketTypeAndParams("modifyMarginHelper",void 0,s);let c=this.getSupportedMapping(d,{swap:"privatePutFuturesAccountIsolatedSymbol",margin:"privatePutMarginAccountIsolatedSymbol"});const[h,u]=this.handleMarginModeAndParams("modifyMarginHelper",s);void 0!==h&&(c="privatePutMarginAccountIsolatedSymbol");const l=await this[c](this.extend(o,u));return this.extend(this.parseMarginModification(l,r),{amount:this.parseNumber(t),type:i})}parseMarginModification(e,t=undefined){const i=this.safeValue(e,"currencies",[]),s=this.safeValue(i,0);return{info:e,type:void 0,amount:void 0,code:this.safeString(s,"code"),symbol:t.symbol,status:void 0}}async reduceMargin(e,t,i={}){if(0!==t)throw new n.BadRequest(this.id+" reduceMargin() on hitbtc3 requires the amount to be 0 and that will remove the entire margin amount");return await this.modifyMarginHelper(e,t,"reduce",i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"add",i)}async fetchLeverage(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id};let r=this.getSupportedMapping(i.type,{spot:"privateGetMarginAccountIsolatedSymbol",margin:"privateGetMarginAccountIsolatedSymbol",swap:"privateGetFuturesAccountIsolatedSymbol"});const[a,n]=this.handleMarginModeAndParams("modifyMarginHelper",t);void 0!==a&&(r="privateGetMarginAccountIsolatedSymbol");const o=await this[r](this.extend(s,n));return this.safeNumber(o,"leverage")}async setLeverage(e,t=undefined,i={}){if(await this.loadMarkets(),void 0===t)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(void 0===i.margin_balance)throw new n.ArgumentsRequired(this.id+" setLeverage() requires a margin_balance parameter that will transfer margin to the specified trading pair");const s=this.market(t),r=this.safeNumber(i,"margin_balance"),a=this.safeInteger(s.limits.leverage,"max",50);if("swap"!==s.type)throw new n.BadSymbol(this.id+" setLeverage() supports swap contracts only");if(e<1||e>a)throw new n.BadRequest(this.id+" setLeverage() leverage should be between 1 and "+a.toString()+" for "+t);const o={symbol:s.id,leverage:e.toString(),margin_balance:this.amountToPrecision(t,r)};return await this.privatePutFuturesAccountIsolatedSymbol(this.extend(o,i))}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetPublicCurrency(t);return this.parseDepositWithdrawFees(i,e)}parseDepositWithdrawFee(e,t=undefined){const i=this.safeValue(e,"networks",[]),s=this.depositWithdrawFee(e);for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"network"),a=this.networkIdToCode(r),n=this.safeNumber(t,"payout_fee"),o={fee:n,percentage:void 0===n&&void 0};!0===this.safeValue(t,"default")&&(s.withdraw=o),s.networks[a]={withdraw:o,deposit:{fee:void 0,percentage:void 0}}}return s}handleMarginModeAndParams(e,t={},i=undefined){const s=this.safeString(this.options,"defaultType"),r=this.safeValue(t,"margin",!1);let a;if([a,t]=super.handleMarginModeAndParams(e,t,i),void 0!==a){if("isolated"!==a)throw new n.NotSupported(this.id+" only isolated margin is supported")}else"margin"!==s&&!0!==r||(a="isolated");return[a,t]}handleErrors(e,t,i,s,r,a,o,d,c){const h=this.safeValue(o,"error"),u=this.safeString(h,"code");if(void 0!==u){const e=this.id+" "+a,t=this.safeString2(h,"message","description");throw this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new n.ExchangeError(e)}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.omit(s,this.extractParams(e)),d=this.implodeParams(e,s);let c,h=this.urls.api[t]+"/"+d;const u=Object.keys(n).length;if(r={"Content-Type":"application/json"},"GET"===i?u&&(c="?"+this.urlencode(n),h+=c):a=this.json(s),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=[i,"/api/3/"+d];"GET"===i?void 0!==c&&t.push(c):t.push(a),t.push(e);const s=t.join(""),n=this.hmac(this.encode(s),this.encode(this.secret),o.J,"hex"),h=this.apiKey+":"+n+":"+e,u=this.stringToBase64(h);r.Authorization="HS256 "+u}return{url:h,method:i,body:a,headers:r}}}},8422:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(3727),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"hollaex",name:"HollaEx",countries:["KR"],rateLimit:250,version:"v2",pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createLimitBuyOrder:!0,createLimitSellOrder:!0,createMarketBuyOrder:!0,createMarketSellOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:"emulated",fetchDepositAddresses:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","1h":"1h","4h":"4h","1d":"1d","1w":"1w"},urls:{logo:"https://user-images.githubusercontent.com/1294454/75841031-ca375180-5ddd-11ea-8417-b975674c23cb.jpg",test:{rest:"https://api.sandbox.hollaex.com"},api:{rest:"https://api.hollaex.com"},www:"https://hollaex.com",doc:"https://apidocs.hollaex.com",referral:"https://pro.hollaex.com/signup?affiliation_code=QSWA6G"},precisionMode:n.sh,requiredCredentials:{apiKey:!0,secret:!0},api:{public:{get:{health:1,constants:1,kit:1,tiers:1,ticker:1,tickers:1,orderbook:1,orderbooks:1,trades:1,chart:1,charts:1,"udf/config":1,"udf/history":1,"udf/symbols":1}},private:{get:{user:1,"user/balance":1,"user/deposits":1,"user/withdrawals":1,"user/withdrawal/fee":1,"user/trades":1,orders:1,order:1},post:{"user/withdrawal":1,order:1},delete:{"order/all":1,order:1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:.001,maker:.001}},exceptions:{broad:{"Invalid token":r.AuthenticationError,"Order not found":r.OrderNotFound,"Insufficient balance":r.InsufficientFunds,"Error 1001 - Order rejected. Order could not be submitted as this order was set to a post only order.":r.OrderImmediatelyFillable},exact:{400:r.BadRequest,403:r.AuthenticationError,404:r.BadRequest,405:r.BadRequest,410:r.BadRequest,429:r.BadRequest,500:r.NetworkError,503:r.NetworkError}},options:{"api-expires":this.parseToInt(this.timeout/1e3),networks:{BTC:"btc",ETH:"eth",ERC20:"eth",TRX:"trx",TRC20:"trx",XRP:"xrp",XLM:"xlm"}}})}async fetchMarkets(e={}){const t=await this.publicGetConstants(e),i=this.safeValue(t,"pairs",{}),s=Object.keys(i),r=[];for(let e=0;e<s.length;e++){const t=i[s[e]],a=this.safeString(t,"pair_base"),n=this.safeString(t,"pair_2"),o=this.commonCurrencyCode(a.toUpperCase()),d=this.commonCurrencyCode(n.toUpperCase());r.push({id:this.safeString(t,"name"),symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"active"),contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"increment_size"),price:this.safeNumber(t,"increment_price")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_size"),max:this.safeNumber(t,"max_size")},price:{min:this.safeNumber(t,"min_price"),max:this.safeNumber(t,"max_price")},cost:{min:void 0,max:void 0}},info:t})}return r}async fetchCurrencies(e={}){const t=await this.publicGetConstants(e),i=this.safeValue(t,"coins",{}),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){const t=i[s[e]],a=this.safeString(t,"symbol"),n=this.safeInteger(t,"id"),o=this.safeCurrencyCode(a),d=this.safeString(t,"fullname"),c=this.safeValue(t,"allow_deposit"),h=this.safeValue(t,"allow_withdrawal"),u=this.safeValue(t,"active")&&c&&h,l=this.safeNumber(t,"withdrawal_fee"),p=this.safeValue(t,"withdrawal_limits",[]);r[o]={id:a,numericId:n,code:o,info:t,name:d,active:u,deposit:c,withdraw:h,fee:l,precision:this.safeNumber(t,"increment_unit"),limits:{amount:{min:this.safeNumber(t,"min"),max:this.safeNumber(t,"max")},withdraw:{min:void 0,max:this.safeValue(p,0)}}}}return r}async fetchOrderBooks(e=undefined,t=undefined,i={}){await this.loadMarkets();const s=await this.publicGetOrderbooks(i),r={},a=Object.keys(s);for(let e=0;e<a.length;e++){const t=a[e],i=s[t],n=this.safeSymbol(t,void 0,"-"),o=this.parse8601(this.safeString(i,"timestamp"));r[n]=this.parseOrderBook(s[t],n,o)}return r}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id},a=await this.publicGetOrderbooks(this.extend(r,i)),n=this.safeValue(a,s.id),o=this.parse8601(this.safeString(n,"timestamp"));return this.parseOrderBook(n,s.symbol,o)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTickers(this.extend(t));return this.parseTickers(i,e)}parseTickers(e,t=undefined,i={}){const s={},r=Object.keys(e);for(let t=0;t<r.length;t++){const a=r[t],n=e[a],o=this.safeString(n,"symbol",a),d=this.safeMarket(o,void 0,"-");s[d.symbol]=this.extend(this.parseTicker(n,d),i)}return this.filterByArray(s,"symbol",t)}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.parse8601(this.safeString2(e,"time","timestamp")),a=this.safeString(e,"close");return this.safeTicker({symbol:s,info:e,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:this.safeString(e,"last",a),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetTrades(this.extend(a,s)),o=this.safeValue(n,r.id,[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.safeString(e,"timestamp"),a=this.parse8601(r),n=this.safeString(e,"side"),o=this.safeString(e,"order_id"),d=this.safeString(e,"price"),c=this.safeString(e,"size"),h=this.safeString(e,"fee");let u;return void 0!==h&&(u={cost:h,currency:t.quote}),this.safeTrade({info:e,id:void 0,timestamp:a,datetime:r,symbol:s,order:o,type:void 0,side:n,takerOrMaker:void 0,price:d,amount:c,cost:void 0,fee:u},t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetTiers(e),i=this.safeValue(t,"1",{}),s=this.safeValue(i,"fees",{}),r=this.safeValue(s,"maker",{}),n=this.safeValue(s,"taker",{}),o={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],i=this.market(t),d=this.safeString(r,i.id),c=this.safeString(n,i.id);o[t]={info:s,symbol:t,maker:this.parseNumber(a.O.stringDiv(d,"100")),taker:this.parseNumber(a.O.stringDiv(c,"100")),percentage:!0,tierBased:!0}}return o}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,resolution:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t);if(void 0===i){void 0===s&&(s=1e3);const e=this.seconds(),t=e-o*s;n.to=e,n.from=t}else if(void 0===s)n.from=this.parseToInt(i/1e3),n.to=this.seconds();else{const e=this.parseToInt(i/1e3);n.from=e,n.to=this.sum(e,o*s)}const d=await this.publicGetChart(this.extend(n,r));return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t=undefined,i="1h",s=undefined,r=undefined){return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}parseBalance(e){const t=this.parse8601(this.safeString(e,"updated_at")),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=Object.keys(this.currencies_by_id);for(let t=0;t<s.length;t++){const r=s[t],a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(e,r+"_available"),n.total=this.safeString(e,r+"_balance"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUserBalance(e);return this.parseBalance(t)}async fetchOpenOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},r=await this.privateGetOrder(this.extend(s,i));return this.parseOrder(r)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({open:!0},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({open:!1},s))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},a=await this.privateGetOrder(this.extend(s,i));if(void 0===a)throw new r.OrderNotFound(this.id+" fetchOrder() could not find order id "+e);return this.parseOrder(a)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==t&&(a.start_date=this.iso8601(t)),void 0!==i&&(a.limit=i);const n=await this.privateGetOrders(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseOrders(o,r,t,i)}parseOrderStatus(e){return this.safeString({new:"open",pfilled:"open",filled:"closed",canceled:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,"-"),r=this.safeString(e,"id"),a=this.parse8601(this.safeString(e,"created_at")),n=this.safeString(e,"type"),o=this.safeString(e,"side"),d=this.safeString(e,"price"),c=this.safeString(e,"stop"),h=this.safeString(e,"size"),u=this.safeString(e,"filled"),l=this.parseOrderStatus(this.safeString(e,"status")),p=this.safeValue(e,"meta",{}),f=this.safeValue(p,"post_only",!1);return this.safeOrder({id:r,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,status:l,symbol:s,type:n,timeInForce:void 0,postOnly:f,side:o,price:d,stopPrice:c,triggerPrice:c,amount:h,filled:u,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=parseFloat(this.amountToPrecision(e,s)),d={symbol:n.id,side:i,size:this.normalizeNumberIfNeeded(o),type:t},c=this.safeNumberN(a,["triggerPrice","stopPrice","stop"]),h=this.safeValue(a,"meta",{}),u=this.safeValue(h,"post_only",!1),l="market"===t,p=this.isPostOnly(l,u,a);if(!l){const t=parseFloat(this.priceToPrecision(e,r));d.price=this.normalizeNumberIfNeeded(t)}void 0!==c&&(d.stop=this.normalizeNumberIfNeeded(parseFloat(this.priceToPrecision(e,c)))),p&&(d.meta={post_only:!0}),a=this.omit(a,["postOnly","timeInForce","stopPrice","triggerPrice","stop"]);const f=await this.privatePostOrder(this.extend(d,a));return this.parseOrder(f,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e},r=await this.privateDeleteOrder(this.extend(s,i));return this.parseOrder(r)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a 'symbol' argument");await this.loadMarkets();const i={};let s;s=this.market(e),i.symbol=s.id;const a=await this.privateDeleteOrderAll(this.extend(i,t));return this.parseOrders(a,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==i&&(r.limit=i),void 0!==t&&(r.start_date=this.iso8601(t));const n=await this.privateGetUserTrades(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,a,t,i)}parseDepositAddress(e,t=undefined){let i,s=this.safeString(e,"address");if(void 0!==s){const e=s.split(":");s=this.safeString(e,0),i=this.safeString(e,1)}this.checkAddress(s);const r=this.safeString(e,"currency");t=this.safeCurrency(r,t);const a=this.safeString(e,"network");return{currency:t.code,address:s,tag:i,network:a,info:e}}async fetchDepositAddresses(e=undefined,t={}){await this.loadMarkets();const i=this.safeString(t,"network");t=this.omit(t,"network");const s=await this.privateGetUser(t),r=this.safeValue(s,"wallet",[]),a=void 0===i?r:this.filterBy(r,"network",i);return this.parseDepositAddresses(a,e)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.limit=i),void 0!==t&&(r.start_date=this.iso8601(t));const n=await this.privateGetUserDeposits(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,i)}async fetchWithdrawal(e,t=undefined,i={}){await this.loadMarkets();const s={transaction_id:e};let r;void 0!==t&&(r=this.currency(t),s.currency=r.id);const a=await this.privateGetUserWithdrawals(this.extend(s,i)),n=this.safeValue(a,"data",[]),o=this.safeValue(n,0,{});return this.parseTransaction(o,r)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.limit=i),void 0!==t&&(r.start_date=this.iso8601(t));const n=await this.privateGetUserWithdrawals(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,i)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"transaction_id"),r=this.parse8601(this.safeString(e,"created_at")),a=this.parse8601(this.safeString(e,"updated_at")),n=this.safeString(e,"type"),o=this.safeNumber(e,"amount");let d,c,h,u=this.safeString(e,"address");if(void 0!==u){const e=u.split(":");u=this.safeString(e,0),c=this.safeString(e,1),d=u,h=c}const l=this.safeString(e,"currency");t=this.safeCurrency(l,t);let p=this.safeValue(e,"status");const f=this.safeValue(e,"dismissed"),m=this.safeValue(e,"rejected");p=p?"ok":f?"canceled":m?"failed":"pending";const v=this.safeString(e,"fee_coin"),g=this.safeCurrencyCode(v,t),y=this.safeNumber(e,"fee");let b;return void 0!==y&&(b={currency:g,cost:y}),{info:e,id:i,txid:s,timestamp:r,datetime:this.iso8601(r),network:void 0,addressFrom:void 0,address:u,addressTo:d,tagFrom:void 0,tag:c,tagTo:h,type:n,amount:o,currency:t.code,status:p,updated:a,fee:b}}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e);void 0!==s&&(i+=":"+s);const o=this.safeString(a,"network");if(void 0===o)throw new r.ArgumentsRequired(this.id+" withdraw() requires a network parameter");a=this.omit(a,"network");const d=this.safeValue(this.options,"networks",{}),c=this.safeStringLower2(d,o,e,o),h={currency:n.id,amount:t,address:i,network:c},u=await this.privatePostUserWithdrawal(this.extend(h,a));return this.parseTransaction(u,n)}normalizeNumberIfNeeded(e){return e%1==0&&(e=parseInt(e)),e}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.omit(s,this.extractParams(e));e="/"+this.version+"/"+this.implodeParams(e,s),"GET"!==i&&"DELETE"!==i||Object.keys(n).length&&(e+="?"+this.urlencode(n));const d=this.urls.api.rest+e;if("private"===t){this.checkRequiredCredentials();const t=this.safeInteger2(this.options,"api-expires","expires",parseInt((this.timeout/1e3).toString())),s=this.sum(this.seconds(),t).toString();let d=i+e+s;r={"api-key":this.apiKey,"api-expires":s},"POST"===i&&(r["Content-type"]="application/json",Object.keys(n).length&&(d+=a=this.json(n)));const c=this.hmac(this.encode(d),this.encode(this.secret),o.J);r["api-signature"]=c}return{url:d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,d){if(void 0!==n&&e>=400&&e<=503){const t=this.id+" "+a,i=this.safeString(n,"message");this.throwBroadlyMatchedException(this.exceptions.broad,i,t);const s=e.toString();this.throwExactlyMatchedException(this.exceptions.exact,s,t)}}}},8146:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2498),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"huobi",name:"Huobi",countries:["CN"],rateLimit:100,userAgent:this.userAgents.chrome100,certified:!0,version:"v1",hostname:"api.huobi.pro",pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,addMargin:void 0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:void 0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowInterest:!0,fetchBorrowRate:void 0,fetchBorrowRateHistories:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:!0,fetchBorrowRatesPerSymbol:!0,fetchCanceledOrders:void 0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchL3OrderBook:void 0,fetchLedger:!0,fetchLedgerEntry:void 0,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!0,fetchSettlementHistory:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTradingLimits:!0,fetchTransactionFee:void 0,fetchTransactionFees:void 0,fetchTransactions:void 0,fetchTransfers:void 0,fetchWithdrawAddresses:!0,fetchWithdrawal:void 0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:void 0,reduceMargin:void 0,repayMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!1,signIn:void 0,transfer:!0,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"60min","4h":"4hour","1d":"1day","1w":"1week","1M":"1mon","1y":"1year"},urls:{logo:"https://user-images.githubusercontent.com/1294454/76137448-22748a80-604e-11ea-8069-6e389271911d.jpg",hostnames:{contract:"api.hbdm.com",spot:"api.huobi.pro",status:{spot:"status.huobigroup.com",future:{inverse:"status-dm.huobigroup.com",linear:"status-linear-swap.huobigroup.com"},swap:{inverse:"status-swap.huobigroup.com",linear:"status-linear-swap.huobigroup.com"}}},api:{status:"https://{hostname}",contract:"https://{hostname}",spot:"https://{hostname}",public:"https://{hostname}",private:"https://{hostname}",v2Public:"https://{hostname}",v2Private:"https://{hostname}"},www:"https://www.huobi.com",referral:{url:"https://www.huobi.com/en-us/v/register/double-invite/?inviter_id=11343840&invite_code=6rmm2223",discount:.15},doc:["https://huobiapi.github.io/docs/spot/v1/en/","https://huobiapi.github.io/docs/dm/v1/en/","https://huobiapi.github.io/docs/coin_margined_swap/v1/en/","https://huobiapi.github.io/docs/usdt_swap/v1/en/"],fees:"https://www.huobi.com/about/fee/"},api:{v2Public:{get:{"reference/currencies":1,"market-status":1}},v2Private:{get:{"account/ledger":1,"account/withdraw/quota":1,"account/withdraw/address":1,"account/deposit/address":1,"account/repayment":5,"reference/transact-fee-rate":1,"account/asset-valuation":.2,"point/account":5,"sub-user/user-list":1,"sub-user/user-state":1,"sub-user/account-list":1,"sub-user/deposit-address":1,"sub-user/query-deposit":1,"user/api-key":1,"user/uid":1,"algo-orders/opening":1,"algo-orders/history":1,"algo-orders/specific":1,"c2c/offers":1,"c2c/offer":1,"c2c/transactions":1,"c2c/repayment":1,"c2c/account":1,"etp/reference":1,"etp/transactions":5,"etp/transaction":5,"etp/rebalance":1,"etp/limit":1},post:{"account/transfer":1,"account/repayment":5,"point/transfer":5,"sub-user/management":1,"sub-user/creation":1,"sub-user/tradable-market":1,"sub-user/transferability":1,"sub-user/api-key-generation":1,"sub-user/api-key-modification":1,"sub-user/api-key-deletion":1,"sub-user/deduct-mode":1,"algo-orders":1,"algo-orders/cancel-all-after":1,"algo-orders/cancellation":1,"c2c/offer":1,"c2c/cancellation":1,"c2c/cancel-all":1,"c2c/repayment":1,"c2c/transfer":1,"etp/creation":5,"etp/redemption":5,"etp/{transactId}/cancel":10,"etp/batch-cancel":50}},public:{get:{"common/symbols":1,"common/currencys":1,"common/timestamp":1,"common/exchange":1,"settings/currencys":1}},private:{get:{"account/accounts":.2,"account/accounts/{id}/balance":.2,"account/accounts/{sub-uid}":1,"account/history":4,"cross-margin/loan-info":1,"margin/loan-info":1,"fee/fee-rate/get":1,"order/openOrders":.4,"order/orders":.4,"order/orders/{id}":.4,"order/orders/{id}/matchresults":.4,"order/orders/getClientOrder":.4,"order/history":1,"order/matchresults":1,"query/deposit-withdraw":1,"margin/loan-orders":.2,"margin/accounts/balance":.2,"cross-margin/loan-orders":1,"cross-margin/accounts/balance":1,"points/actions":1,"points/orders":1,"subuser/aggregate-balance":10,"stable-coin/exchange_rate":1,"stable-coin/quote":1},post:{"account/transfer":1,"futures/transfer":1,"order/batch-orders":.4,"order/orders/place":.2,"order/orders/submitCancelClientOrder":.2,"order/orders/batchCancelOpenOrders":.4,"order/orders/{id}/submitcancel":.2,"order/orders/batchcancel":.4,"dw/withdraw/api/create":1,"dw/withdraw-virtual/{id}/cancel":1,"dw/transfer-in/margin":10,"dw/transfer-out/margin":10,"margin/orders":10,"margin/orders/{id}/repay":10,"cross-margin/transfer-in":1,"cross-margin/transfer-out":1,"cross-margin/orders":1,"cross-margin/orders/{id}/repay":1,"stable-coin/exchange":1,"subuser/transfer":10}},status:{public:{spot:{get:{"api/v2/summary.json":1}},future:{inverse:{get:{"api/v2/summary.json":1}},linear:{get:{"api/v2/summary.json":1}}},swap:{inverse:{get:{"api/v2/summary.json":1}},linear:{get:{"api/v2/summary.json":1}}}}},spot:{public:{get:{"v2/market-status":1,"v1/common/symbols":1,"v1/common/currencys":1,"v2/settings/common/currencies":1,"v2/reference/currencies":1,"v1/common/timestamp":1,"v1/common/exchange":1,"v1/settings/common/chains":1,"v1/settings/common/currencys":1,"v1/settings/common/symbols":1,"v2/settings/common/symbols":1,"v1/settings/common/market-symbols":1,"market/history/candles":1,"market/history/kline":1,"market/detail/merged":1,"market/tickers":1,"market/detail":1,"market/depth":1,"market/trade":1,"market/history/trade":1,"market/etp":1,"v2/etp/reference":1,"v2/etp/rebalance":1}},private:{get:{"v1/account/accounts":.2,"v1/account/accounts/{account-id}/balance":.2,"v2/account/valuation":1,"v2/account/asset-valuation":.2,"v1/account/history":4,"v2/account/ledger":1,"v2/point/account":5,"v2/account/deposit/address":1,"v2/account/withdraw/quota":1,"v2/account/withdraw/address":1,"v2/reference/currencies":1,"v1/query/deposit-withdraw":1,"v1/query/withdraw/client-order-id":1,"v2/user/api-key":1,"v2/user/uid":1,"v2/sub-user/user-list":1,"v2/sub-user/user-state":1,"v2/sub-user/account-list":1,"v2/sub-user/deposit-address":1,"v2/sub-user/query-deposit":1,"v1/subuser/aggregate-balance":10,"v1/account/accounts/{sub-uid}":1,"v1/order/openOrders":.4,"v1/order/orders/{order-id}":.4,"v1/order/orders/getClientOrder":.4,"v1/order/orders/{order-id}/matchresult":.4,"v1/order/orders/{order-id}/matchresults":.4,"v1/order/orders":.4,"v1/order/history":1,"v1/order/matchresults":1,"v2/reference/transact-fee-rate":1,"v2/algo-orders/opening":1,"v2/algo-orders/history":1,"v2/algo-orders/specific":1,"v1/margin/loan-info":1,"v1/margin/loan-orders":.2,"v1/margin/accounts/balance":.2,"v1/cross-margin/loan-info":1,"v1/cross-margin/loan-orders":1,"v1/cross-margin/accounts/balance":1,"v2/account/repayment":5,"v1/stable-coin/quote":1,"v1/stable_coin/exchange_rate":1,"v2/etp/transactions":5,"v2/etp/transaction":5,"v2/etp/limit":1},post:{"v1/account/transfer":1,"v1/futures/transfer":1,"v2/point/transfer":5,"v2/account/transfer":1,"v1/dw/withdraw/api/create":1,"v1/dw/withdraw-virtual/{withdraw-id}/cancel":1,"v2/sub-user/deduct-mode":1,"v2/sub-user/creation":1,"v2/sub-user/management":1,"v2/sub-user/tradable-market":1,"v2/sub-user/transferability":1,"v2/sub-user/api-key-generation":1,"v2/sub-user/api-key-modification":1,"v2/sub-user/api-key-deletion":1,"v1/subuser/transfer":10,"v1/order/orders/place":.2,"v1/order/batch-orders":.4,"v1/order/orders/{order-id}/submitcancel":.2,"v1/order/orders/submitCancelClientOrder":.2,"v1/order/orders/batchCancelOpenOrders":.4,"v1/order/orders/batchcancel":.4,"v2/algo-orders/cancel-all-after":1,"v2/algo-orders":1,"v2/algo-orders/cancellation":1,"v2/account/repayment":5,"v1/dw/transfer-in/margin":10,"v1/dw/transfer-out/margin":10,"v1/margin/orders":10,"v1/margin/orders/{order-id}/repay":10,"v1/cross-margin/transfer-in":1,"v1/cross-margin/transfer-out":1,"v1/cross-margin/orders":1,"v1/cross-margin/orders/{order-id}/repay":1,"v1/stable-coin/exchange":1,"v2/etp/creation":5,"v2/etp/redemption":5,"v2/etp/{transactId}/cancel":10,"v2/etp/batch-cancel":50}}},contract:{public:{get:{"api/v1/timestamp":1,"heartbeat/":1,"api/v1/contract_contract_info":1,"api/v1/contract_index":1,"api/v1/contract_price_limit":1,"api/v1/contract_open_interest":1,"api/v1/contract_delivery_price":1,"market/depth":1,"market/bbo":1,"market/history/kline":1,"index/market/history/mark_price_kline":1,"market/detail/merged":1,"market/detail/batch_merged":1,"v2/market/detail/batch_merged":1,"market/trade":1,"market/history/trade":1,"api/v1/contract_risk_info":1,"api/v1/contract_insurance_fund":1,"api/v1/contract_adjustfactor":1,"api/v1/contract_his_open_interest":1,"api/v1/contract_ladder_margin":1,"api/v1/contract_api_state":1,"api/v1/contract_elite_account_ratio":1,"api/v1/contract_elite_position_ratio":1,"api/v1/contract_liquidation_orders":1,"api/v1/contract_settlement_records":1,"index/market/history/index":1,"index/market/history/basis":1,"api/v1/contract_estimated_settlement_price":1,"api/v3/contract_liquidation_orders":1,"swap-api/v1/swap_contract_info":1,"swap-api/v1/swap_index":1,"swap-api/v1/swap_price_limit":1,"swap-api/v1/swap_open_interest":1,"swap-ex/market/depth":1,"swap-ex/market/bbo":1,"swap-ex/market/history/kline":1,"index/market/history/swap_mark_price_kline":1,"swap-ex/market/detail/merged":1,"v2/swap-ex/market/detail/batch_merged":1,"index/market/history/swap_premium_index_kline":1,"swap-ex/market/detail/batch_merged":1,"swap-ex/market/trade":1,"swap-ex/market/history/trade":1,"swap-api/v1/swap_risk_info":1,"swap-api/v1/swap_insurance_fund":1,"swap-api/v1/swap_adjustfactor":1,"swap-api/v1/swap_his_open_interest":1,"swap-api/v1/swap_ladder_margin":1,"swap-api/v1/swap_api_state":1,"swap-api/v1/swap_elite_account_ratio":1,"swap-api/v1/swap_elite_position_ratio":1,"swap-api/v1/swap_estimated_settlement_price":1,"swap-api/v1/swap_liquidation_orders":1,"swap-api/v1/swap_settlement_records":1,"swap-api/v1/swap_funding_rate":1,"swap-api/v1/swap_batch_funding_rate":1,"swap-api/v1/swap_historical_funding_rate":1,"swap-api/v3/swap_liquidation_orders":1,"index/market/history/swap_estimated_rate_kline":1,"index/market/history/swap_basis":1,"linear-swap-api/v1/swap_contract_info":1,"linear-swap-api/v1/swap_index":1,"linear-swap-api/v1/swap_price_limit":1,"linear-swap-api/v1/swap_open_interest":1,"linear-swap-ex/market/depth":1,"linear-swap-ex/market/bbo":1,"linear-swap-ex/market/history/kline":1,"index/market/history/linear_swap_mark_price_kline":1,"linear-swap-ex/market/detail/merged":1,"linear-swap-ex/market/detail/batch_merged":1,"v2/linear-swap-ex/market/detail/batch_merged":1,"linear-swap-ex/market/trade":1,"linear-swap-ex/market/history/trade":1,"linear-swap-api/v1/swap_risk_info":1,"swap-api/v1/linear-swap-api/v1/swap_insurance_fund":1,"linear-swap-api/v1/swap_adjustfactor":1,"linear-swap-api/v1/swap_cross_adjustfactor":1,"linear-swap-api/v1/swap_his_open_interest":1,"linear-swap-api/v1/swap_ladder_margin":1,"linear-swap-api/v1/swap_cross_ladder_margin":1,"linear-swap-api/v1/swap_api_state":1,"linear-swap-api/v1/swap_cross_transfer_state":1,"linear-swap-api/v1/swap_cross_trade_state":1,"linear-swap-api/v1/swap_elite_account_ratio":1,"linear-swap-api/v1/swap_elite_position_ratio":1,"linear-swap-api/v1/swap_liquidation_orders":1,"linear-swap-api/v1/swap_settlement_records":1,"linear-swap-api/v1/swap_funding_rate":1,"linear-swap-api/v1/swap_batch_funding_rate":1,"linear-swap-api/v1/swap_historical_funding_rate":1,"linear-swap-api/v3/swap_liquidation_orders":1,"index/market/history/linear_swap_premium_index_kline":1,"index/market/history/linear_swap_estimated_rate_kline":1,"index/market/history/linear_swap_basis":1,"linear-swap-api/v1/swap_estimated_settlement_price":1}},private:{get:{"api/v1/contract_api_trading_status":1,"swap-api/v1/swap_api_trading_status":1,"linear-swap-api/v1/swap_api_trading_status":1,"linear-swap-api/v3/unified_account_info":1,"linear-swap-api/v3/swap_unified_account_type":1},post:{"api/v1/contract_balance_valuation":1,"api/v1/contract_account_info":1,"api/v1/contract_position_info":1,"api/v1/contract_sub_auth":1,"api/v1/contract_sub_account_list":1,"api/v1/contract_sub_account_info_list":1,"api/v1/contract_sub_account_info":1,"api/v1/contract_sub_position_info":1,"api/v1/contract_financial_record":1,"api/v1/contract_financial_record_exact":1,"api/v1/contract_user_settlement_records":1,"api/v1/contract_order_limit":1,"api/v1/contract_fee":1,"api/v1/contract_transfer_limit":1,"api/v1/contract_position_limit":1,"api/v1/contract_account_position_info":1,"api/v1/contract_master_sub_transfer":1,"api/v1/contract_master_sub_transfer_record":1,"api/v1/contract_available_level_rate":1,"api/v3/contract_financial_record":1,"api/v3/contract_financial_record_exact":1,"api/v1/contract_order":1,"v1/contract_batchorder":1,"api/v1/contract_cancel":1,"api/v1/contract_cancelall":1,"api/v1/contract_switch_lever_rate":1,"api/v1/lightning_close_position":1,"api/v1/contract_order_info":1,"api/v1/contract_order_detail":1,"api/v1/contract_openorders":1,"api/v1/contract_hisorders":1,"api/v1/contract_hisorders_exact":1,"api/v1/contract_matchresults":1,"api/v1/contract_matchresults_exact":1,"api/v3/contract_hisorders":1,"api/v3/contract_hisorders_exact":1,"api/v3/contract_matchresults":1,"api/v3/contract_matchresults_exact":1,"api/v1/contract_trigger_order":1,"api/v1/contract_trigger_cancel":1,"api/v1/contract_trigger_cancelall":1,"api/v1/contract_trigger_openorders":1,"api/v1/contract_trigger_hisorders":1,"api/v1/contract_tpsl_order":1,"api/v1/contract_tpsl_cancel":1,"api/v1/contract_tpsl_cancelall":1,"api/v1/contract_tpsl_openorders":1,"api/v1/contract_tpsl_hisorders":1,"api/v1/contract_relation_tpsl_order":1,"api/v1/contract_track_order":1,"api/v1/contract_track_cancel":1,"api/v1/contract_track_cancelall":1,"api/v1/contract_track_openorders":1,"api/v1/contract_track_hisorders":1,"swap-api/v1/swap_balance_valuation":1,"swap-api/v1/swap_account_info":1,"swap-api/v1/swap_position_info":1,"swap-api/v1/swap_account_position_info":1,"swap-api/v1/swap_sub_auth":1,"swap-api/v1/swap_sub_account_list":1,"swap-api/v1/swap_sub_account_info_list":1,"swap-api/v1/swap_sub_account_info":1,"swap-api/v1/swap_sub_position_info":1,"swap-api/v1/swap_financial_record":1,"swap-api/v1/swap_financial_record_exact":1,"swap-api/v1/swap_user_settlement_records":1,"swap-api/v1/swap_available_level_rate":1,"swap-api/v1/swap_order_limit":1,"swap-api/v1/swap_fee":1,"swap-api/v1/swap_transfer_limit":1,"swap-api/v1/swap_position_limit":1,"swap-api/v1/swap_master_sub_transfer":1,"swap-api/v1/swap_master_sub_transfer_record":1,"swap-api/v3/swap_financial_record":1,"swap-api/v3/swap_financial_record_exact":1,"swap-api/v1/swap_order":1,"swap-api/v1/swap_batchorder":1,"swap-api/v1/swap_cancel":1,"swap-api/v1/swap_cancelall":1,"swap-api/v1/swap_lightning_close_position":1,"swap-api/v1/swap_switch_lever_rate":1,"swap-api/v1/swap_order_info":1,"swap-api/v1/swap_order_detail":1,"swap-api/v1/swap_openorders":1,"swap-api/v1/swap_hisorders":1,"swap-api/v1/swap_hisorders_exact":1,"swap-api/v1/swap_matchresults":1,"swap-api/v1/swap_matchresults_exact":1,"swap-api/v3/swap_matchresults":1,"swap-api/v3/swap_matchresults_exact":1,"swap-api/v3/swap_hisorders":1,"swap-api/v3/swap_hisorders_exact":1,"swap-api/v1/swap_trigger_order":1,"swap-api/v1/swap_trigger_cancel":1,"swap-api/v1/swap_trigger_cancelall":1,"swap-api/v1/swap_trigger_openorders":1,"swap-api/v1/swap_trigger_hisorders":1,"swap-api/v1/swap_tpsl_order":1,"swap-api/v1/swap_tpsl_cancel":1,"swap-api/v1/swap_tpsl_cancelall":1,"swap-api/v1/swap_tpsl_openorders":1,"swap-api/v1/swap_tpsl_hisorders":1,"swap-api/v1/swap_relation_tpsl_order":1,"swap-api/v1/swap_track_order":1,"swap-api/v1/swap_track_cancel":1,"swap-api/v1/swap_track_cancelall":1,"swap-api/v1/swap_track_openorders":1,"swap-api/v1/swap_track_hisorders":1,"linear-swap-api/v1/swap_lever_position_limit":1,"linear-swap-api/v1/swap_cross_lever_position_limit":1,"linear-swap-api/v1/swap_balance_valuation":1,"linear-swap-api/v1/swap_account_info":1,"linear-swap-api/v1/swap_cross_account_info":1,"linear-swap-api/v1/swap_position_info":1,"linear-swap-api/v1/swap_cross_position_info":1,"linear-swap-api/v1/swap_account_position_info":1,"linear-swap-api/v1/swap_cross_account_position_info":1,"linear-swap-api/v1/swap_sub_auth":1,"linear-swap-api/v1/swap_sub_account_list":1,"linear-swap-api/v1/swap_cross_sub_account_list":1,"linear-swap-api/v1/swap_sub_account_info_list":1,"linear-swap-api/v1/swap_cross_sub_account_info_list":1,"linear-swap-api/v1/swap_sub_account_info":1,"linear-swap-api/v1/swap_cross_sub_account_info":1,"linear-swap-api/v1/swap_sub_position_info":1,"linear-swap-api/v1/swap_cross_sub_position_info":1,"linear-swap-api/v1/swap_financial_record":1,"linear-swap-api/v1/swap_financial_record_exact":1,"linear-swap-api/v1/swap_user_settlement_records":1,"linear-swap-api/v1/swap_cross_user_settlement_records":1,"linear-swap-api/v1/swap_available_level_rate":1,"linear-swap-api/v1/swap_cross_available_level_rate":1,"linear-swap-api/v1/swap_order_limit":1,"linear-swap-api/v1/swap_fee":1,"linear-swap-api/v1/swap_transfer_limit":1,"linear-swap-api/v1/swap_cross_transfer_limit":1,"linear-swap-api/v1/swap_position_limit":1,"linear-swap-api/v1/swap_cross_position_limit":1,"linear-swap-api/v1/swap_master_sub_transfer":1,"linear-swap-api/v1/swap_master_sub_transfer_record":1,"linear-swap-api/v1/swap_transfer_inner":1,"linear-swap-api/v3/swap_financial_record":1,"linear-swap-api/v3/swap_financial_record_exact":1,"linear-swap-api/v1/swap_order":1,"linear-swap-api/v1/swap_cross_order":1,"linear-swap-api/v1/swap_batchorder":1,"linear-swap-api/v1/swap_cross_batchorder":1,"linear-swap-api/v1/swap_cancel":1,"linear-swap-api/v1/swap_cross_cancel":1,"linear-swap-api/v1/swap_cancelall":1,"linear-swap-api/v1/swap_cross_cancelall":1,"linear-swap-api/v1/swap_switch_lever_rate":1,"linear-swap-api/v1/swap_cross_switch_lever_rate":1,"linear-swap-api/v1/swap_lightning_close_position":1,"linear-swap-api/v1/swap_cross_lightning_close_position":1,"linear-swap-api/v1/swap_order_info":1,"linear-swap-api/v1/swap_cross_order_info":1,"linear-swap-api/v1/swap_order_detail":1,"linear-swap-api/v1/swap_cross_order_detail":1,"linear-swap-api/v1/swap_openorders":1,"linear-swap-api/v1/swap_cross_openorders":1,"linear-swap-api/v1/swap_hisorders":1,"linear-swap-api/v1/swap_cross_hisorders":1,"linear-swap-api/v1/swap_hisorders_exact":1,"linear-swap-api/v1/swap_cross_hisorders_exact":1,"linear-swap-api/v1/swap_matchresults":1,"linear-swap-api/v1/swap_cross_matchresults":1,"linear-swap-api/v1/swap_matchresults_exact":1,"linear-swap-api/v1/swap_cross_matchresults_exact":1,"linear-swap-api/v1/swap_switch_position_mode":1,"linear-swap-api/v1/swap_cross_switch_position_mode":1,"linear-swap-api/v3/swap_matchresults":1,"linear-swap-api/v3/swap_cross_matchresults":1,"linear-swap-api/v3/swap_matchresults_exact":1,"linear-swap-api/v3/swap_cross_matchresults_exact":1,"linear-swap-api/v3/swap_hisorders":1,"linear-swap-api/v3/swap_cross_hisorders":1,"linear-swap-api/v3/swap_hisorders_exact":1,"linear-swap-api/v3/swap_cross_hisorders_exact":1,"linear-swap-api/v3/swap_switch_account_type":1,"linear-swap-api/v1/swap_trigger_order":1,"linear-swap-api/v1/swap_cross_trigger_order":1,"linear-swap-api/v1/swap_trigger_cancel":1,"linear-swap-api/v1/swap_cross_trigger_cancel":1,"linear-swap-api/v1/swap_trigger_cancelall":1,"linear-swap-api/v1/swap_cross_trigger_cancelall":1,"linear-swap-api/v1/swap_trigger_openorders":1,"linear-swap-api/v1/swap_cross_trigger_openorders":1,"linear-swap-api/v1/swap_trigger_hisorders":1,"linear-swap-api/v1/swap_cross_trigger_hisorders":1,"linear-swap-api/v1/swap_tpsl_order":1,"linear-swap-api/v1/swap_cross_tpsl_order":1,"linear-swap-api/v1/swap_tpsl_cancel":1,"linear-swap-api/v1/swap_cross_tpsl_cancel":1,"linear-swap-api/v1/swap_tpsl_cancelall":1,"linear-swap-api/v1/swap_cross_tpsl_cancelall":1,"linear-swap-api/v1/swap_tpsl_openorders":1,"linear-swap-api/v1/swap_cross_tpsl_openorders":1,"linear-swap-api/v1/swap_tpsl_hisorders":1,"linear-swap-api/v1/swap_cross_tpsl_hisorders":1,"linear-swap-api/v1/swap_relation_tpsl_order":1,"linear-swap-api/v1/swap_cross_relation_tpsl_order":1,"linear-swap-api/v1/swap_track_order":1,"linear-swap-api/v1/swap_cross_track_order":1,"linear-swap-api/v1/swap_track_cancel":1,"linear-swap-api/v1/swap_cross_track_cancel":1,"linear-swap-api/v1/swap_track_cancelall":1,"linear-swap-api/v1/swap_cross_track_cancelall":1,"linear-swap-api/v1/swap_track_openorders":1,"linear-swap-api/v1/swap_cross_track_openorders":1,"linear-swap-api/v1/swap_track_hisorders":1,"linear-swap-api/v1/swap_cross_track_hisorders":1}}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},exceptions:{broad:{"contract is restricted of closing positions on API.  Please contact customer service":r.OnMaintenance,maintain:r.OnMaintenance},exact:{403:r.AuthenticationError,1010:r.AccountNotEnabled,1003:r.AuthenticationError,1013:r.BadSymbol,1017:r.OrderNotFound,1034:r.InvalidOrder,1036:r.InvalidOrder,1039:r.InvalidOrder,1041:r.InvalidOrder,1047:r.InsufficientFunds,1048:r.InsufficientFunds,1051:r.InvalidOrder,1066:r.BadSymbol,1067:r.InvalidOrder,1094:r.InvalidOrder,1220:r.AccountNotEnabled,1303:r.BadRequest,1461:r.InvalidOrder,"bad-request":r.BadRequest,"validation-format-error":r.BadRequest,"validation-constraints-required":r.BadRequest,"base-date-limit-error":r.BadRequest,"api-not-support-temp-addr":r.PermissionDenied,timeout:r.RequestTimeout,"gateway-internal-error":r.ExchangeNotAvailable,"account-frozen-balance-insufficient-error":r.InsufficientFunds,"invalid-amount":r.InvalidOrder,"order-limitorder-amount-min-error":r.InvalidOrder,"order-limitorder-amount-max-error":r.InvalidOrder,"order-marketorder-amount-min-error":r.InvalidOrder,"order-limitorder-price-min-error":r.InvalidOrder,"order-limitorder-price-max-error":r.InvalidOrder,"order-stop-order-hit-trigger":r.InvalidOrder,"order-value-min-error":r.InvalidOrder,"order-invalid-price":r.InvalidOrder,"order-holding-limit-failed":r.InvalidOrder,"order-orderprice-precision-error":r.InvalidOrder,"order-etp-nav-price-max-error":r.InvalidOrder,"order-orderstate-error":r.OrderNotFound,"order-queryorder-invalid":r.OrderNotFound,"order-update-error":r.ExchangeNotAvailable,"api-signature-check-failed":r.AuthenticationError,"api-signature-not-valid":r.AuthenticationError,"base-record-invalid":r.OrderNotFound,"base-symbol-trade-disabled":r.BadSymbol,"base-symbol-error":r.BadSymbol,"system-maintenance":r.OnMaintenance,"base-request-exceed-frequency-limit":r.RateLimitExceeded,"invalid symbol":r.BadSymbol,"symbol trade not open now":r.BadSymbol,"require-symbol":r.BadSymbol,"invalid-address":r.BadRequest,"base-currency-chain-error":r.BadRequest,"dw-insufficient-balance":r.InsufficientFunds,"base-withdraw-fee-error":r.BadRequest,"dw-withdraw-min-limit":r.BadRequest}},precisionMode:n.sh,options:{fetchMarkets:{types:{spot:!0,future:{linear:!0,inverse:!0},swap:{linear:!0,inverse:!0}}},withdraw:{includeFee:!1},defaultType:"spot",defaultSubType:"linear",defaultNetwork:"ERC20",defaultNetworks:{ETH:"ERC20",BTC:"BTC",USDT:"TRC20"},networks:{ALGO:"ALGO",ALGORAND:"ALGO",BEP20:"BEP20",BSC:"BEP20",ERC20:"ERC20",ETH:"ERC20",AVALANCHE:"AVAXCCHAIN",AVAX:"AVAXCCHAIN",HRC20:"HECO",HECO:"HECO",TRC20:"TRC20",TRX:"TRC20",BTC:"BTC",BITCOIN:"BTC",ARBITRUM:"ARB",ARB:"ARB",SOLANA:"SOL",SOL:"SOL",SPL:"SOL",PRC20:"PRC20",POLYGON:"PRC20",MATIC:"PRC20"},networksById:{ALGO:"ALGO",BEP20:"BEP20",ERC20:"ERC20",AVAXCCHAIN:"AVALANCHE",HECO:"HRC20",TRC20:"TRC20",BTC:"BTC",ARB:"ARBITRUM",SOL:"SOLANA",PRC20:"POLYGON"},fetchOrdersByStatesMethod:"spot_private_get_v1_order_orders",createMarketBuyOrderRequiresPrice:!0,language:"en-US",broker:{id:"AA03022abc"},accountsByType:{spot:"pro",funding:"pro",future:"futures"},accountsById:{spot:"spot",margin:"margin",otc:"otc",point:"point","super-margin":"super-margin",investment:"investment",borrow:"borrow","grid-trading":"grid-trading","deposit-earning":"deposit-earning","otc-options":"otc-options"},marginAccounts:{cross:"super-margin",isolated:"margin"},typesByAccount:{pro:"spot",futures:"future"},spot:{stopOrderTypes:{"stop-limit":!0,"buy-stop-limit":!0,"sell-stop-limit":!0,"stop-limit-fok":!0,"buy-stop-limit-fok":!0,"sell-stop-limit-fok":!0},limitOrderTypes:{limit:!0,"buy-limit":!0,"sell-limit":!0,ioc:!0,"buy-ioc":!0,"sell-ioc":!0,"limit-maker":!0,"buy-limit-maker":!0,"sell-limit-maker":!0,"stop-limit":!0,"buy-stop-limit":!0,"sell-stop-limit":!0,"limit-fok":!0,"buy-limit-fok":!0,"sell-limit-fok":!0,"stop-limit-fok":!0,"buy-stop-limit-fok":!0,"sell-stop-limit-fok":!0}}},commonCurrencies:{GET:"Themis",GTC:"Game.com",HIT:"HitChain",HOT:"Hydro Protocol",PNT:"Penta",SBTC:"Super Bitcoin",SOUL:"Soulsaver",BIFI:"Bitcoin File"}})}async fetchStatus(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchMyTrades",void 0,e);let i="statusPublicSpotGetApiV2SummaryJson";if("spot"!==t){const s=this.safeString(e,"subType",this.options.defaultSubType);"swap"===t?"linear"===s?i="statusPublicSwapLinearGetApiV2SummaryJson":"inverse"===s&&(i="statusPublicSwapInverseGetApiV2SummaryJson"):"future"===t?"linear"===s?i="statusPublicFutureLinearGetApiV2SummaryJson":"inverse"===s&&(i="statusPublicFutureInverseGetApiV2SummaryJson"):"contract"===t&&(i="contractPublicGetHeartbeat")}const s=await this[i]();let r,a,n;if("contractPublicGetHeartbeat"===i)r="ok"===this.safeString(s,"status")?"ok":"maintenance",a=this.safeString(s,"ts");else{const e=this.safeValue(s,"status",{});r="none"===this.safeString(e,"indicator")?"ok":"maintenance";const t=this.safeValue(s,"page",{}),i=this.safeString(t,"updated_at");a=this.parse8601(i),n=this.safeString(t,"url")}return{status:r,updated:a,eta:void 0,url:n,info:s}}async fetchTime(e={}){const t=this.safeValue(this.options,"fetchTime",{}),i=this.safeString(this.options,"defaultType","spot");let s=this.safeString(t,"type",i);s=this.safeString(e,"type",s);let r="spotPublicGetV1CommonTimestamp";"future"!==s&&"swap"!==s||(r="contractPublicGetApiV1Timestamp");const a=await this[r](e);return this.safeInteger2(a,"data","ts")}parseTradingFee(e,t=undefined){const i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i,t),maker:this.safeNumber(e,"actualMakerRate"),taker:this.safeNumber(e,"actualTakerRate")}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbols:i.id},r=await this.spotPrivateGetV2ReferenceTransactFeeRate(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTradingFee(n,i)}async fetchTradingLimits(e=undefined,t={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);const i={};for(let s=0;s<e.length;s++){const r=e[s];i[r]=await this.fetchTradingLimitsById(this.marketId(r),t)}return i}async fetchTradingLimitsById(e,t={}){const i={symbol:e},s=await this.spotPublicGetV1CommonExchange(this.extend(i,t));return this.parseTradingLimits(this.safeValue(s,"data",{}))}parseTradingLimits(e,t=undefined,i={}){return{info:e,limits:{amount:{min:this.safeNumber(e,"limit-order-must-greater-than"),max:this.safeNumber(e,"limit-order-must-less-than")}}}}costToPrecision(e,t){return this.decimalToPrecision(t,n.tk,this.markets[e].precision.cost,this.precisionMode)}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets",{}),i=this.safeValue(t,"types",{});let s=[],r=[];const a=Object.keys(i);for(let t=0;t<a.length;t++){const s=a[t],n=this.safeValue(i,s);if(!0===n)r.push(this.fetchMarketsByTypeAndSubType(s,void 0,e));else if(n){const t=Object.keys(n);for(let i=0;i<t.length;i++){const a=t[i];this.safeValue(n,a)&&r.push(this.fetchMarketsByTypeAndSubType(s,a,e))}}}r=await Promise.all(r);for(let e=0;e<r.length;e++)s=this.arrayConcat(s,r[e]);return s}async fetchMarketsByTypeAndSubType(e,t,i={}){let s="spotPublicGetV1CommonSymbols";const n=this.omit(i,["type","subType"]),o="spot"===e,d="spot"!==e,c="future"===e,h="swap"===e;let u,l;const p={};d&&(u="linear"===t,l="inverse"===t,u?(s="contractPublicGetLinearSwapApiV1SwapContractInfo",c&&(p.business_type="futures")):l&&(c?s="contractPublicGetApiV1ContractContractInfo":h&&(s="contractPublicGetSwapApiV1SwapContractInfo")));const f=await this[s](this.extend(p,n)),m=this.safeValue(f,"data",[]);if(m.length<1)throw new r.NetworkError(this.id+" fetchMarkets() returned an empty response: "+this.json(m));const v=[];for(let t=0;t<m.length;t++){const i=m[t];let s,r,n,p,f,g;if(d){if(p=this.safeString(i,"contract_code"),f=p.toLowerCase(),h){const e=p.split("-");s=this.safeString(i,"symbol"),g=s.toLowerCase(),r=this.safeStringLower(e,1),n=l?s:r}else if(c)if(s=this.safeString(i,"symbol"),g=s.toLowerCase(),l)r="USD",n=s;else{const e=this.safeString(i,"pair").split("-");r=this.safeString(e,1),n=r}}else s=this.safeString(i,"base-currency"),g=s.toLowerCase(),r=this.safeString(i,"quote-currency"),p=s+r,f=p.toLowerCase();const y=this.safeCurrencyCode(s),b=this.safeCurrencyCode(r),w=this.safeCurrencyCode(n);let S,P=y+"/"+b;d&&(l?P+=":"+y:u&&(P+=":"+b),c&&(S=this.safeInteger(i,"delivery_time"),P+="-"+this.yymmdd(S)));const k=this.safeNumber(i,"contract_size");let O=this.safeNumber(i,"min-order-value");const T=this.safeNumber(i,"max-order-amt");let A,G,I,C,M,x,V=this.safeNumber(i,"min-order-amt");d&&(u?V=k:l&&(O=k)),o?(A=this.parseNumber(this.parsePrecision(this.safeString(i,"price-precision"))),G=this.parseNumber(this.parsePrecision(this.safeString(i,"amount-precision"))),I=this.parseNumber(this.parsePrecision(this.safeString(i,"value-precision")))):(A=this.safeNumber(i,"price_tick"),G=this.parseNumber("1")),o&&(C="OMG"===y?this.parseNumber("0"):this.parseNumber("0.002"),M="OMG"===y?this.parseNumber("0"):this.parseNumber("0.002")),o?x="online"===this.safeString(i,"state"):d&&(x=1===this.safeInteger(i,"contract_status"));const E=this.safeString(i,"leverage-ratio","1"),B=this.safeString(i,"super-margin-leverage-ratio","1"),_=a.O.stringGt(E,"1")||a.O.stringGt(B,"1");v.push({id:p,lowercaseId:f,symbol:P,base:y,quote:b,settle:w,baseId:s,lowercaseBaseId:g,quoteId:r,settleId:n,type:e,spot:o,margin:o&&_,swap:h,future:c,option:!1,active:x,contract:d,linear:u,inverse:l,taker:M,maker:C,contractSize:k,expiry:S,expiryDatetime:this.iso8601(S),strike:void 0,optionType:void 0,precision:{amount:G,price:A,cost:I},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(E),superMax:this.parseNumber(B)},amount:{min:V,max:T},price:{min:void 0,max:void 0},cost:{min:O,max:void 0}},info:i})}return v}parseTicker(e,t=undefined){const i=this.safeString2(e,"symbol","contract_code"),s=this.safeSymbol(i,t),r=this.safeInteger2(e,"ts","quoteTime");let a,n,o,d;"bid"in e&&(Array.isArray(e.bid)?(a=this.safeString(e.bid,0),n=this.safeString(e.bid,1)):(a=this.safeString(e,"bid"),n=this.safeString(e,"bidSize"))),"ask"in e&&(Array.isArray(e.ask)?(o=this.safeString(e.ask,0),d=this.safeString(e.ask,1)):(o=this.safeString(e,"ask"),d=this.safeString(e,"askSize")));const c=this.safeString(e,"open"),h=this.safeString(e,"close"),u=this.safeString(e,"amount"),l=this.safeString(e,"vol");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:a,bidVolume:n,ask:o,askVolume:d,vwap:void 0,open:c,close:h,last:h,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:u,quoteVolume:l,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={};let r="symbol",a="spotPublicGetMarketDetailMerged";i.linear?(a="contractPublicGetLinearSwapExMarketDetailMerged",r="contract_code"):i.inverse&&(i.future?a="contractPublicGetMarketDetailMerged":i.swap&&(a="contractPublicGetSwapExMarketDetailMerged",r="contract_code")),s[r]=i.id;const n=await this[a](this.extend(s,t)),o=this.safeValue(n,"tick",{}),d=this.parseTicker(o,i),c=this.safeInteger(n,"ts");return d.timestamp=c,d.datetime=this.iso8601(c),d}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.safeString(e,0);let s,r,a;void 0!==i&&(s=this.market(i));let n="spotPublicGetMarketTickers";[r,t]=this.handleMarketTypeAndParams("fetchTickers",s,t),[a,t]=this.handleSubTypeAndParams("fetchTickers",s,t);const o={},d="future"===r,c="swap"===r,h="linear"===a,u="inverse"===a;(d||c)&&(h?(n="contractPublicGetLinearSwapExMarketDetailBatchMerged",d&&(o.business_type="futures")):u&&(d?n="contractPublicGetMarketDetailBatchMerged":c&&(n="contractPublicGetSwapExMarketDetailBatchMerged"))),t=this.omit(t,["type","subType"]);const l=await this[n](this.extend(o,t)),p=this.safeValue2(l,"data","ticks",[]),f=this.safeInteger(l,"ts"),m={};for(let e=0;e<p.length;e++){const t=this.parseTicker(p[e]);if(d&&h)for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e],s=this.market(i),r=this.safeString(s.info,"contract_type");if("this_week"===r&&t.symbol===s.baseId+"-"+s.quoteId+"-CW"){t.symbol=s.symbol;break}if("next_week"===r&&t.symbol===s.baseId+"-"+s.quoteId+"-NW"){t.symbol=s.symbol;break}if("this_quarter"===r&&t.symbol===s.baseId+"-"+s.quoteId+"-CQ"){t.symbol=s.symbol;break}if("next_quarter"===r&&t.symbol===s.baseId+"-"+s.quoteId+"-NQ"){t.symbol=s.symbol;break}}const i=t.symbol;t.timestamp=f,t.datetime=this.iso8601(f),m[i]=t}return this.filterByArray(m,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),a={type:"step0"};let n="symbol",o="spotPublicGetMarketDepth";if(s.linear)o="contractPublicGetLinearSwapExMarketDepth",n="contract_code";else if(s.inverse)s.future?o="contractPublicGetMarketDepth":s.swap&&(o="contractPublicGetSwapExMarketDepth",n="contract_code");else if(void 0!==t){if(5!==t&&10!==t&&20!==t&&150!==t)throw new r.BadRequest(this.id+" fetchOrderBook() limit argument must be undefined, 5, 10, 20, or 150, default is 150");150!==t&&(a.depth=t)}a[n]=s.id;const d=await this[o](this.extend(a,i));if("tick"in d){if(!d.tick)throw new r.BadSymbol(this.id+" fetchOrderBook() returned empty response: "+this.json(d));const t=this.safeValue(d,"tick"),i=this.safeInteger(t,"ts",this.safeInteger(d,"ts")),s=this.parseOrderBook(t,e,i);return s.nonce=this.safeInteger(t,"version"),s}throw new r.ExchangeError(this.id+" fetchOrderBook() returned unrecognized response: "+this.json(d))}parseTrade(e,t=undefined){const i=this.safeString2(e,"contract_code","symbol"),s=(t=this.safeMarket(i,t)).symbol;let r=this.safeInteger2(e,"ts","created-at");r=this.safeInteger2(e,"created_at","create_date",r);const n=this.safeString2(e,"order-id","order_id");let o=this.safeString(e,"direction"),d=this.safeString(e,"type");if(void 0!==d){const e=d.split("-");o=e[0],d=e[1]}const c=this.safeStringLower(e,"role"),h=this.safeString2(e,"price","trade_price");let u=this.safeString2(e,"filled-amount","amount");u=this.safeString(e,"trade_volume",u);const l=this.safeString(e,"trade_turnover");let p,f=this.safeString2(e,"filled-fees","trade_fee");const m=this.safeString2(e,"fee-currency","fee_asset");let v=this.safeCurrencyCode(m);const g=this.safeString(e,"filled-points");if(void 0!==g&&(void 0===f||a.O.stringEquals(f,"0"))){const t=this.safeString(e,"fee-deduct-currency");void 0!==t&&(f=g,v=this.safeCurrencyCode(t))}void 0!==f&&(p={cost:f,currency:v});const y=this.safeString2(e,"trade-id","tradeId"),b=this.safeString2(e,"trade_id","id",y);return this.safeTrade({id:b,info:e,order:n,timestamp:r,datetime:this.iso8601(r),symbol:s,type:d,side:o,takerOrMaker:c,price:h,amount:u,cost:l,fee:p},t)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){let a,n;void 0!==t&&(a=this.market(t)),[n,r]=this.handleMarketTypeAndParams("fetchOrderTrades",a,r);const o=this.getSupportedMapping(n,{spot:"fetchSpotOrderTrades"});return await this[o](e,t,i,s,r)}async fetchSpotOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={"order-id":e},n=await this.spotPrivateGetV1OrderOrdersOrderIdMatchresults(this.extend(a,r));return this.parseTrades(n.data,void 0,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let a,n;await this.loadMarkets(),void 0!==e&&(a=this.market(e)),[n,s]=this.handleMarketTypeAndParams("fetchMyTrades",a,s);const o={};let d;if("spot"===n)void 0!==e&&(a=this.market(e),o.symbol=a.id),void 0!==i&&(o.size=i),void 0!==t&&(o["start-time"]=t),d="spotPrivateGetV1OrderMatchresults";else{if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol for "+n+" orders");if(o.contract=a.id,o.trade_type=0,void 0!==t&&(o.start_time=t),void 0!==i&&(o.page_size=i),a.linear){let e;[e,s]=this.handleMarginModeAndParams("fetchMyTrades",s),e=void 0===e?"cross":e,"isolated"===e?d="contractPrivatePostLinearSwapApiV3SwapMatchresultsExact":"cross"===e&&(d="contractPrivatePostLinearSwapApiV3SwapCrossMatchresultsExact")}else if(a.inverse)if("future"===n)d="contractPrivatePostApiV3ContractMatchresultsExact",o.symbol=a.settleId;else{if("swap"!==n)throw new r.NotSupported(this.id+" fetchMyTrades() does not support "+n+" markets");d="contractPrivatePostSwapApiV3SwapMatchresultsExact"}}const c=await this[d](this.extend(o,s));let h=this.safeValue(c,"data");return Array.isArray(h)||(h=this.safeValue(h,"trades")),this.parseTrades(h,a,t,i)}async fetchTrades(e,t=undefined,i=1e3,s={}){await this.loadMarkets();const r=this.market(e),a={};let n="symbol",o="spotPublicGetMarketHistoryTrade";r.future?r.inverse?o="contractPublicGetMarketHistoryTrade":r.linear&&(o="contractPublicGetLinearSwapExMarketHistoryTrade",n="contract_code"):r.swap&&(r.inverse?o="contractPublicGetSwapExMarketHistoryTrade":r.linear&&(o="contractPublicGetLinearSwapExMarketHistoryTrade"),n="contract_code"),a[n]=r.id,void 0!==i&&(a.size=i);const d=await this[o](this.extend(a,s)),c=this.safeValue(d,"data",[]);let h=[];for(let e=0;e<c.length;e++){const t=this.safeValue(c[e],"data",[]);for(let e=0;e<t.length;e++){const i=this.parseTrade(t[e],r);h.push(i)}}return h=this.sortBy(h,"timestamp"),this.filterBySymbolSinceLimit(h,r.symbol,t,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"id"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"amount")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={period:this.safeString(this.timeframes,t,t)};let d="symbol";const c=this.safeString(a,"price");a=this.omit(a,"price");let h="spotPublicGetMarketHistoryCandles";if(n.spot)void 0!==i&&(o.from=this.parseToInt(i/1e3)),void 0!==s&&(o.size=s);else if(n.future){if(n.inverse)if("mark"===c)h="contractPublicGetIndexMarketHistoryMarkPriceKline";else if("index"===c)h="contractPublicGetIndexMarketHistoryIndex";else{if("premiumIndex"===c)throw new r.BadRequest(this.id+" "+n.type+" has no api endpoint for "+c+" kline data");h="contractPublicGetMarketHistoryKline"}else if(n.linear){if("mark"===c)h="contractPublicGetIndexMarketHistoryLinearSwapMarkPriceKline";else{if("index"===c)throw new r.BadRequest(this.id+" "+n.type+" has no api endpoint for "+c+" kline data");h="premiumIndex"===c?"contractPublicGetIndexMarketHistoryLinearSwapPremiumIndexKline":"contractPublicGetLinearSwapExMarketHistoryKline"}d="contract_code"}}else if(n.swap){if(n.inverse)if("mark"===c)h="contractPublicGetIndexMarketHistorySwapMarkPriceKline";else{if("index"===c)throw new r.BadRequest(this.id+" "+n.type+" has no api endpoint for "+c+" kline data");h="premiumIndex"===c?"contractPublicGetIndexMarketHistorySwapPremiumIndexKline":"contractPublicGetSwapExMarketHistoryKline"}else if(n.linear)if("mark"===c)h="contractPublicGetIndexMarketHistoryLinearSwapMarkPriceKline";else{if("index"===c)throw new r.BadRequest(this.id+" "+n.type+" has no api endpoint for "+c+" kline data");h="premiumIndex"===c?"contractPublicGetIndexMarketHistoryLinearSwapPremiumIndexKline":"contractPublicGetLinearSwapExMarketHistoryKline"}d="contract_code"}if(n.contract&&(void 0===s&&(s=2e3),o.size=s,void 0===c)){const e=this.parseTimeframe(t);if(void 0===i){const t=this.seconds();o.from=t-e*(s-1),o.to=t}else{const t=this.parseToInt(i/1e3);o.from=t,o.to=this.sum(t,e*(s-1))}}o[d]=n.id;const u=await this[h](this.extend(o,a)),l=this.safeValue(u,"data",[]);return this.parseOHLCVs(l,n,t,i,s)}async fetchAccounts(e={}){await this.loadMarkets();const t=await this.spotPrivateGetV1AccountAccounts(e),i=this.safeValue(t,"data");return this.parseAccounts(i)}parseAccount(e){const t=this.safeString(e,"type"),i=this.safeValue(this.options,"accountsById",{}),s=this.safeValue(i,t,t);return{info:e,id:this.safeString(e,"id"),type:s,code:void 0}}async fetchAccountIdByType(e,t={}){const i=await this.loadAccounts(),s=this.safeValue(t,"account-id");if(void 0!==s)return s;const r=this.indexBy(i,"type"),a=this.safeValue(i,0,{}),n=this.safeValue(r,e,a);return this.safeString(n,"id")}async fetchCurrencies(e={}){const t=await this.spotPublicGetV2ReferenceCurrencies(e),i=this.safeValue(t,"data",[]),s={};this.options.networkChainIdsByNames={},this.options.networkNamesByChainIds={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),n=this.safeCurrencyCode(r);this.options.networkChainIdsByNames[n]={};const o=this.safeValue(t,"chains",[]),d={},c="normal"===this.safeString(t,"instStatus");let h,u,l,p,f;for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,"chain"),s=this.safeString(t,"displayName");this.options.networkChainIdsByNames[n][s]=i,this.options.networkNamesByChainIds[i]=s;const r=this.networkIdToCode(s,n);u=this.safeNumber(t,"minWithdrawAmt"),l=this.safeNumber(t,"maxWithdrawAmt");const c="allowed"===this.safeString(t,"withdrawStatus"),m="allowed"===this.safeString(t,"depositStatus"),v=c&&m,g=this.parsePrecision(this.safeString(t,"withdrawPrecision"));void 0!==g&&(h=void 0===h?g:a.O.stringMin(g,h)),c&&!f?f=!0:c||(f=!1),m&&!p?p=!0:m||(p=!1);const y=this.safeNumber(t,"transactFeeWithdraw");d[r]={info:t,id:i,network:r,limits:{withdraw:{min:u,max:l}},active:v,deposit:m,withdraw:c,fee:y,precision:this.parseNumber(g)}}s[n]={info:t,code:n,id:r,active:c,deposit:p,withdraw:f,fee:void 0,name:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:u,max:l}},precision:this.parseNumber(h),networks:d}}return s}networkIdToCode(e,t=undefined){if(0===Object.keys(this.options.networkNamesByChainIds).length)throw new r.ExchangeError(this.id+" networkIdToCode() - markets need to be loaded at first");const i=this.safeValue(this.options.networkNamesByChainIds,e,e);return super.networkIdToCode(i)}networkCodeToId(e,t=undefined){if(void 0===t)throw new r.ArgumentsRequired(this.id+" networkCodeToId() requires a currencyCode argument");if(0===Object.keys(this.options.networkChainIdsByNames).length)throw new r.ExchangeError(this.id+" networkCodeToId() - markets need to be loaded at first");const i=this.safeValue(this.options.networkChainIdsByNames,t,{}),s=super.networkCodeToId(e);return this.safeValue(i,s,s)}async fetchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);const i=this.safeValue(this.options,"fetchBalance",{}),s={};let r;const a="spot"===t,n="future"===t,o="swap"===t,d=this.safeString2(this.options,"defaultSubType","subType","linear");let c=this.safeString2(i,"defaultSubType","subType",d);c=this.safeString2(e,"defaultSubType","subType",c);const h="inverse"===c,u="linear"===c;let l;[l,e]=this.handleMarginModeAndParams("fetchBalance",e),e=this.omit(e,["defaultSubType","subType"]);const p="isolated"===l,f="margin"===t||a&&("cross"===l||p);if(a||f)if(f)r=p?"spotPrivateGetV1MarginAccountsBalance":"spotPrivateGetV1CrossMarginAccountsBalance";else{await this.loadAccounts();const i=await this.fetchAccountIdByType(t,e);s["account-id"]=i,r="spotPrivateGetV1AccountAccountsAccountIdBalance"}else u?r=p?"contractPrivatePostLinearSwapApiV1SwapAccountInfo":"contractPrivatePostLinearSwapApiV1SwapCrossAccountInfo":h&&(n?r="contractPrivatePostApiV1ContractAccountInfo":o&&(r="contractPrivatePostSwapApiV1SwapAccountInfo"));const m=await this[r](this.extend(s,e));let v={info:m};const g=this.safeValue(m,"data");if(a||f)if(p)for(let e=0;e<g.length;e++){const t=g[e],i=this.safeSymbol(this.safeString(t,"symbol")),s=this.safeValue(t,"list"),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"currency"),a=this.safeCurrencyCode(i);r[a]=this.parseMarginBalanceHelper(t,a,r)}v[i]=this.safeBalance(r)}else{const e=this.safeValue(g,"list",[]);for(let t=0;t<e.length;t++){const i=e[t],s=this.safeString(i,"currency"),r=this.safeCurrencyCode(s);v[r]=this.parseMarginBalanceHelper(i,r,v)}v=this.safeBalance(v)}else if(u){const e=this.safeValue(g,0,{});if(p)for(let e=0;e<g.length;e++){const t=g[e],i=this.safeString2(t,"contract_code","margin_account"),s=this.safeMarket(i),r=this.safeString(t,"margin_asset"),a=this.safeCurrency(r),n=this.safeString(s,"settle",a.code);if(void 0!==n){const e=this.account();e.free=this.safeString(t,"margin_balance"),e.used=this.safeString(t,"margin_frozen");const i={};i[n]=e,v[s.symbol]=this.safeBalance(i)}}else{const t=this.account();t.free=this.safeString(e,"margin_balance","margin_available"),t.used=this.safeString(e,"margin_frozen");const i=this.safeString2(e,"margin_asset","symbol");v[this.safeCurrencyCode(i)]=t,v=this.safeBalance(v)}}else if(h){for(let e=0;e<g.length;e++){const t=g[e],i=this.safeString(t,"symbol"),s=this.safeCurrencyCode(i),r=this.account();r.free=this.safeString(t,"margin_available"),r.used=this.safeString(t,"margin_frozen"),v[s]=r}v=this.safeBalance(v)}return v}async fetchOrder(e,t=undefined,i={}){let s,a;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[a,i]=this.handleMarketTypeAndParams("fetchOrder",s,i);const n={};let o;if("spot"===a)o="spotPrivateGetV1OrderOrdersOrderId",void 0!==this.safeString(i,"clientOrderId")?o="spotPrivateGetV1OrderOrdersGetClientOrder":n["order-id"]=e;else{if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol for "+a+" orders");if(n.contract_code=s.id,s.linear){let e;[e,i]=this.handleMarginModeAndParams("fetchOrder",i),e=void 0===e?"cross":e,"isolated"===e?o="contractPrivatePostLinearSwapApiV1SwapOrderInfo":"cross"===e&&(o="contractPrivatePostLinearSwapApiV1SwapCrossOrderInfo")}else if(s.inverse)if("future"===a)o="contractPrivatePostApiV1ContractOrderInfo",n.symbol=s.settleId;else{if("swap"!==a)throw new r.NotSupported(this.id+" fetchOrder() does not support "+a+" markets");o="contractPrivatePostSwapApiV1SwapOrderInfo"}const d=this.safeString2(i,"client_order_id","clientOrderId");void 0===d?n.order_id=e:(n.client_order_id=d,i=this.omit(i,["client_order_id","clientOrderId"]))}const d=await this[o](this.extend(n,i));let c=this.safeValue(d,"data");return Array.isArray(c)&&(c=this.safeValue(c,0)),this.parseOrder(c)}parseMarginBalanceHelper(e,t,i){let s;return s=t in i?i[t]:this.account(),"trade"===e.type&&(s.free=this.safeString(e,"balance")),"frozen"===e.type&&(s.used=this.safeString(e,"balance")),s}async fetchSpotOrdersByStates(e,t=undefined,i=undefined,s=undefined,a={}){const n=this.safeString(this.options,"fetchOrdersByStatesMethod","spot_private_get_v1_order_orders");if("spot_private_get_v1_order_orders"===n&&void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");let o;await this.loadMarkets();const d={states:e};void 0!==t&&(o=this.market(t),d.symbol=o.id),void 0!==i&&(d["start-time"]=i,d["end-time"]=this.sum(i,1728e5)),void 0!==s&&(d.size=s);const c=await this[n](this.extend(d,a)),h=this.safeValue(c,"data",[]);return this.parseOrders(h,o,i,s)}async fetchSpotOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchSpotOrdersByStates("pre-submitted,submitted,partial-filled,filled,partial-canceled,canceled",e,t,i,s)}async fetchClosedSpotOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchSpotOrdersByStates("filled,partial-canceled,canceled",e,t,i,s)}async fetchContractOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchContractOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e);let n;[n,s]=this.handleMarketTypeAndParams("fetchOrders",a,s);const o={contract:a.id,trade_type:0,type:1,status:"0"};let d;if(void 0!==t&&(o.start_time=t),a.linear){let e;[e,s]=this.handleMarginModeAndParams("fetchContractOrders",s),e=void 0===e?"cross":e,d=this.getSupportedMapping(e,{isolated:"contractPrivatePostLinearSwapApiV3SwapHisorders",cross:"contractPrivatePostLinearSwapApiV3SwapCrossHisorders"})}else a.inverse&&(d=this.getSupportedMapping(n,{future:"contractPrivatePostApiV3ContractHisorders",swap:"contractPrivatePostSwapApiV3SwapHisorders"}),"future"===n&&(o.symbol=a.settleId));void 0!==i&&(o.page_size=i);const c=await this[d](this.extend(o,s)),h=this.safeValue(c,"data",[]);return this.parseOrders(h,a,t,i)}async fetchClosedContractOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchContractOrders(e,t,i,this.extend({status:"5,6,7"},s))}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){let a,n;await this.loadMarkets(),void 0!==e&&(a=this.market(e)),[n,s]=this.handleMarketTypeAndParams("fetchOrders",a,s);const o=this.getSupportedMapping(n,{spot:"fetchSpotOrders",swap:"fetchContractOrders",future:"fetchContractOrders"});if(void 0===o)throw new r.NotSupported(this.id+" fetchOrders() does not support "+n+" markets yet");if(("swap"===n||"future"===n)&&void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument for "+n+" orders");return await this[o](e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){let a,n;await this.loadMarkets(),void 0!==e&&(a=this.market(e)),[n,s]=this.handleMarketTypeAndParams("fetchClosedOrders",a,s);const o=this.getSupportedMapping(n,{spot:"fetchClosedSpotOrders",swap:"fetchClosedContractOrders",future:"fetchClosedContractOrders"});if(void 0===o)throw new r.NotSupported(this.id+" fetchClosedOrders() does not support "+n+" markets yet");return await this[o](e,t,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let a,n;await this.loadMarkets(),void 0!==e&&(a=this.market(e)),[n,s]=this.handleMarketTypeAndParams("fetchOpenOrders",a,s);const o={};let d;if("spot"===n){d="spotPrivateGetV1OrderOpenOrders",void 0!==e&&(a=this.market(e),o.symbol=a.id);let t=this.safeString(s,"account-id");if(void 0===t){await this.loadAccounts();for(let e=0;e<this.accounts.length;e++){const i=this.accounts[e];if("spot"===i.type&&(t=this.safeString(i,"id"),void 0!==t))break}}o["account-id"]=t,void 0!==i&&(o.size=i),s=this.omit(s,"account-id")}else{if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol for "+n+" orders");const t=this.market(e);if(o.contract_code=t.id,t.linear){let e;[e,s]=this.handleMarginModeAndParams("fetchOpenOrders",s),e=void 0===e?"cross":e,"isolated"===e?d="contractPrivatePostLinearSwapApiV1SwapOpenorders":"cross"===e&&(d="contractPrivatePostLinearSwapApiV1SwapCrossOpenorders")}else t.inverse&&(t.future?(d="contractPrivatePostApiV1ContractOpenorders",o.symbol=t.settleId):t.swap&&(d="contractPrivatePostSwapApiV1SwapOpenorders"));void 0!==i&&(o.page_size=i)}const c=await this[d](this.extend(o,s));let h=this.safeValue(c,"data");return Array.isArray(h)||(h=this.safeValue(h,"orders",[])),this.parseOrders(h,a,t,i)}parseOrderStatus(e){return this.safeString({"partial-filled":"open","partial-canceled":"canceled",filled:"closed",canceled:"canceled",submitted:"open",created:"open",1:"open",2:"open",3:"open",4:"open",5:"canceled",6:"closed",7:"canceled",11:"canceling"},e,e)}parseOrder(e,t=undefined){const i=this.safeString2(e,"id","order_id_str");let s=this.safeString(e,"direction"),r=this.safeString(e,"order_price_type");if("type"in e){const t=e.type.split("-");s=t[0],r=t[1]}const a=this.parseOrderStatus(this.safeString2(e,"state","status")),n=this.safeString2(e,"contract_code","symbol");t=this.safeMarket(n,t);const o=this.safeIntegerN(e,["created_at","created-at","create_date"]),d=this.safeString2(e,"client_order_id","client-order-id");let c,h;void 0!==r&&r.indexOf("market")>=0?c="sell"===s?this.safeString(e,"field-cash-amount"):this.safeString(e,"amount"):(h=this.safeString2(e,"volume","amount"),c=this.safeStringN(e,["filled-cash-amount","field-cash-amount","trade_turnover"]));const u=this.safeStringN(e,["filled-amount","field-amount","trade_volume"]),l=this.safeString(e,"price");let p,f=this.safeString2(e,"filled-fees","field-fees");if(f=this.safeString(e,"fee",f),void 0!==f){let i;const r=this.safeString(e,"fee_asset");i=void 0!==r?this.safeCurrencyCode(r):"sell"===s?t.quote:t.base,p={cost:f,currency:i}}const m=this.safeString(e,"stop-price"),v=this.safeString(e,"trade_avg_price"),g=this.safeValue(e,"trades");return this.safeOrder({info:e,id:i,clientOrderId:d,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:t.symbol,type:r,timeInForce:void 0,postOnly:void 0,side:s,price:l,stopPrice:m,triggerPrice:m,average:v,cost:c,amount:h,filled:u,remaining:void 0,status:a,fee:p,trades:g},t)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),[d,c]=this.handleMarketTypeAndParams("createOrder",o,n),h=this.getSupportedMapping(d,{spot:"createSpotOrder",swap:"createContractOrder",future:"createContractOrder"});if(void 0===h)throw new r.NotSupported(this.id+" createOrder() does not support "+d+" markets yet");return await this[h](e,t,i,s,a,c)}async createSpotOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets(),await this.loadAccounts();const d=this.market(e),c={"account-id":await this.fetchAccountIdByType(d.type),symbol:d.id};let h=t.replace("buy-","");h=h.replace("sell-","");const u=this.safeValue(this.options,d.type,{}),l=this.safeString2(o,"stopPrice","stop-price");if(void 0===l){if(h in this.safeValue(u,"stopOrderTypes",{}))throw new r.ArgumentsRequired(this.id+" createOrder() requires a stopPrice or a stop-price parameter for a stop order")}else{const i=this.safeString(o,"operator");if(void 0===i)throw new r.ArgumentsRequired(this.id+' createOrder() requires an operator parameter "gte" or "lte" for a stop order');if(o=this.omit(o,["stopPrice","stop-price"]),c["stop-price"]=this.priceToPrecision(e,l),c.operator=i,"limit"===h||"limit-fok"===h)h="stop-"+h;else if("stop-limit"!==h&&"stop-limit-fok"!==h)throw new r.NotSupported(this.id+" createOrder() does not support "+t+" orders")}this.safeValue(o,"postOnly",!1)&&(h="limit-maker"),c.type=i+"-"+h;const p=this.safeString2(o,"clientOrderId","client-order-id");if(void 0===p){const e=this.safeValue(this.options,"broker",{}),t=this.safeString(e,"id");c["client-order-id"]=t+this.uuid()}else c["client-order-id"]=p;if(o=this.omit(o,["clientOrderId","client-order-id","postOnly"]),"market"===h&&"buy"===i)if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===n)throw new r.InvalidOrder(this.id+" market buy order requires price argument to calculate cost (total amount of quote currency to spend for buying, amount * price). To switch off this warning exception and specify cost in the amount argument, set .options['createMarketBuyOrderRequiresPrice'] = false. Make sure you know what you're doing.");{const t=this.numberToString(s),i=this.numberToString(n);c.amount=this.costToPrecision(e,a.O.stringMul(t,i))}}else c.amount=this.costToPrecision(e,s);else c.amount=this.amountToPrecision(e,s);h in this.safeValue(u,"limitOrderTypes",{})&&(c.price=this.priceToPrecision(e,n));const f=await this.spotPrivatePostV1OrderOrdersPlace(this.extend(c,o));return{info:f,id:this.safeString(f,"data"),timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:void 0,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,clientOrderId:void 0,average:void 0}}async createContractOrder(e,t,i,s,a=undefined,n={}){const o=this.safeString(n,"offset");if(void 0!==this.safeString(n,"stopPrice"))throw new r.NotSupported(this.id+" createOrder() supports tp_trigger_price + tp_order_price for take profit orders and/or sl_trigger_price + sl_order price for stop loss orders, stop orders are supported only with open long orders and open short orders");const d=this.market(e),c={contract_code:d.id,volume:this.amountToPrecision(e,s),direction:i,lever_rate:1},h=this.safeString(n,"sl_order_price"),u=this.safeString(n,"sl_trigger_price"),l=this.safeString(n,"tp_order_price"),p=this.safeString(n,"tp_trigger_price"),f="open"===o;let m=!1;if(void 0!==u&&(c.sl_trigger_price=this.priceToPrecision(e,u),m=!0,void 0!==a&&(c.sl_order_price=this.priceToPrecision(e,a))),void 0!==h&&(c.sl_order_price=this.priceToPrecision(e,h),m=!0),void 0!==p&&(c.tp_trigger_price=this.priceToPrecision(e,p),m=!0,void 0!==a&&(c.tp_order_price=this.priceToPrecision(e,a))),void 0!==l&&(c.tp_order_price=this.priceToPrecision(e,l),m=!0),m&&!f)throw new r.NotSupported(this.id+" createOrder() supports tp_trigger_price + tp_order_price for take profit orders and/or sl_trigger_price + sl_order price for stop loss orders, stop orders are supported only with open long orders and open short orders");n=this.omit(n,["sl_order_price","sl_trigger_price","tp_order_price","tp_trigger_price"]),this.safeValue(n,"postOnly",!1)&&(t="post_only"),"limit"!==t&&"ioc"!==t&&"fok"!==t&&"post_only"!==t||(c.price=this.priceToPrecision(e,a)),c.order_price_type=t;const v=this.safeValue(this.options,"broker",{}),g=this.safeString(v,"id");c.channel_code=g;const y=this.safeString2(n,"client_order_id","clientOrderId");let b;if(void 0!==y&&(c.client_order_id=y,n=this.omit(n,["client_order_id","clientOrderId"])),d.linear){let e;[e,n]=this.handleMarginModeAndParams("createOrder",n),e=void 0===e?"cross":e,"isolated"===e?b="contractPrivatePostLinearSwapApiV1SwapOrder":"cross"===e&&(b="contractPrivatePostLinearSwapApiV1SwapCrossOrder")}else d.inverse&&(d.swap?b="contractPrivatePostSwapApiV1SwapOrder":d.future&&(b="contractPrivatePostApiV1ContractOrder"));const w=await this[b](this.extend(c,n)),S=this.safeValue(w,"data",{});return this.parseOrder(S,d)}async cancelOrder(e,t=undefined,i={}){let s,a;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[a,i]=this.handleMarketTypeAndParams("cancelOrder",s,i);const n={};let o;if("spot"===a){const t=this.safeString2(i,"client-order-id","clientOrderId");o="spotPrivatePostV1OrderOrdersOrderIdSubmitcancel",void 0===t?n["order-id"]=e:(n["client-order-id"]=t,o="spotPrivatePostV1OrderOrdersSubmitCancelClientOrder",i=this.omit(i,["client-order-id","clientOrderId"]))}else{if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol for "+a+" orders");if(n.contract_code=s.id,s.linear){let e;[e,i]=this.handleMarginModeAndParams("cancelOrder",i),e=void 0===e?"cross":e,"isolated"===e?o="contractPrivatePostLinearSwapApiV1SwapCancel":"cross"===e&&(o="contractPrivatePostLinearSwapApiV1SwapCrossCancel")}else{if(!s.inverse)throw new r.NotSupported(this.id+" cancelOrder() does not support "+a+" markets");s.future?(o="contractPrivatePostApiV1ContractCancel",n.symbol=s.settleId):s.swap&&(o="contractPrivatePostSwapApiV1SwapCancel")}const d=this.safeString2(i,"client_order_id","clientOrderId");void 0===d?n.order_id=e:(n.client_order_id=d,i=this.omit(i,["client_order_id","clientOrderId"]))}const d=await this[o](this.extend(n,i));return this.extend(this.parseOrder(d,s),{id:e,status:"canceled"})}async cancelOrders(e,t=undefined,i={}){let s,a;await this.loadMarkets(),void 0!==t&&(s=this.market(t)),[a,i]=this.handleMarketTypeAndParams("cancelOrders",s,i);const n={};let o;if("spot"===a){let t=this.safeValue2(i,"client-order-id","clientOrderId");t=this.safeValue2(i,"client-order-ids","clientOrderIds",t),void 0===t?n["order-ids"]="string"==typeof t?e:e.join(","):(n["client-order-ids"]="string"==typeof t?t:t.join(","),i=this.omit(i,["client-order-id","client-order-ids","clientOrderId","clientOrderIds"])),o="spotPrivatePostV1OrderOrdersBatchcancel"}else{if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrders() requires a symbol for "+a+" orders");const s=this.market(t);if(n.contract_code=s.id,s.linear){let e;[e,i]=this.handleMarginModeAndParams("cancelOrders",i),e=void 0===e?"cross":e,"isolated"===e?o="contractPrivatePostLinearSwapApiV1SwapCancel":"cross"===e&&(o="contractPrivatePostLinearSwapApiV1SwapCrossCancel")}else if(s.inverse)if(s.future)o="contractPrivatePostApiV1ContractCancel",n.symbol=s.settleId;else{if(!s.swap)throw new r.NotSupported(this.id+" cancelOrders() does not support "+a+" markets");o="contractPrivatePostSwapApiV1SwapCancel"}let d=this.safeString2(i,"client_order_id","clientOrderId");d=this.safeString2(i,"client_order_ids","clientOrderIds",d),void 0===d?n.order_id=e.join(","):(n.client_order_id=d,i=this.omit(i,["client_order_id","client_order_ids","clientOrderId","clientOrderIds"]))}return await this[o](this.extend(n,i))}async cancelAllOrders(e=undefined,t={}){let i,s;await this.loadMarkets(),void 0!==e&&(i=this.market(e)),[s,t]=this.handleMarketTypeAndParams("cancelAllOrders",i,t);const a={};let n;if("spot"===s)void 0!==e&&(i=this.market(e),a.symbol=i.id),n="spotPrivatePostV1OrderOrdersBatchCancelOpenOrders";else{if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol for "+s+" orders");const i=this.market(e);if(a.contract_code=i.id,i.linear){let e;[e,t]=this.handleMarginModeAndParams("cancelAllOrders",t),e=void 0===e?"cross":e,"isolated"===e?n="contractPrivatePostLinearSwapApiV1SwapCancelallall":"cross"===e&&(n="contractPrivatePostLinearSwapApiV1SwapCrossCancelall")}else if(i.inverse)if("future"===s)n="contractPrivatePostApiV1ContractCancelall",a.symbol=i.settleId;else{if("swap"!==s)throw new r.NotSupported(this.id+" cancelAllOrders() does not support "+s+" markets");n="contractPrivatePostSwapApiV1SwapCancelall"}}return await this[n](this.extend(a,t))}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"addressTag"),r=this.safeString(e,"currency");t=this.safeCurrency(r,t);const a=this.safeCurrencyCode(r,t),n=this.safeString(e,"note"),o=this.safeString(e,"chain");return this.checkAddress(i),{currency:a,address:i,tag:s,network:this.networkIdToCode(o,a),note:n,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.spotPrivateGetV2AccountDepositAddress(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.parseDepositAddresses(a,[i.code],!1);return this.indexBy(n,"network")}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),[s,r]=this.handleNetworkCodeAndParams(t),a=await this.fetchDepositAddressesByNetwork(e,r);return a[this.selectNetworkCodeFromUnifiedNetworks(i.code,s,a)]}async fetchWithdrawAddresses(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e),a={currency:r.id},n=await this.spotPrivateGetV2AccountWithdrawAddress(this.extend(a,s)),o=this.safeValue(n,"data",[]),d=this.parseDepositAddresses(o,[r.code],!1),c=[];for(let e=0;e<d.length;e++){const s=d[e],r=void 0===t||s.note===t,a=void 0===i||s.network===i;r&&a&&c.push(s)}return c}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;(void 0===i||i>100)&&(i=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"deposit",direct:"next",from:0};void 0!==r&&(a.currency=r.id),void 0!==i&&(a.size=i);const n=await this.spotPrivateGetV1QueryDepositWithdraw(this.extend(a,s));return this.parseTransactions(n.data,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;(void 0===i||i>100)&&(i=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"withdraw",direct:"next",from:0};void 0!==r&&(a.currency=r.id),void 0!==i&&(a.size=i);const n=await this.spotPrivateGetV1QueryDepositWithdraw(this.extend(a,s));return this.parseTransactions(n.data,r,t,i)}parseTransaction(e,t=undefined){const i=this.safeInteger(e,"created-at"),s=this.safeCurrencyCode(this.safeString(e,"currency"));let r=this.safeString(e,"type");"withdraw"===r&&(r="withdrawal");let n=this.safeString(e,"fee");void 0!==n&&(n=a.O.stringAbs(n));const o=this.safeString(e,"chain");return{info:e,id:this.safeString2(e,"id","data"),txid:this.safeString(e,"tx-hash"),timestamp:i,datetime:this.iso8601(i),network:this.networkIdToCode(o,s),address:this.safeString(e,"address"),addressTo:void 0,addressFrom:void 0,tag:this.safeString(e,"address-tag"),tagTo:void 0,tagFrom:void 0,type:r,amount:this.safeNumber(e,"amount"),currency:s,status:this.parseTransactionStatus(this.safeString(e,"state")),updated:this.safeInteger(e,"updated-at"),fee:{currency:s,cost:this.parseNumber(n),rate:void 0}}}parseTransactionStatus(e){return this.safeString({unknown:"failed",confirming:"pending",confirmed:"ok",safe:"ok",orphan:"failed",submitted:"pending",canceled:"canceled",reexamine:"pending",reject:"failed",pass:"pending","wallet-reject":"failed","confirm-error":"failed",repealed:"failed","wallet-transfer":"pending","pre-transfer":"pending"},e,e)}async withdraw(e,t,i,s=undefined,n={}){[s,n]=this.handleWithdrawTagAndParams(s,n),await this.loadMarkets(),this.checkAddress(i);const o=this.currency(e),d={address:i,currency:o.id.toLowerCase()};let c;void 0!==s&&(d["addr-tag"]=s),[c,n]=this.handleNetworkCodeAndParams(n),void 0!==c&&(d.chain=this.networkCodeToId(c,e)),t=parseFloat(this.currencyToPrecision(e,t,c));const h=this.safeValue(this.options,"withdraw",{});if(this.safeValue(h,"includeFee",!1)){let i=this.safeNumber(n,"fee");if(void 0===i){const e=await this.fetchCurrencies();this.currencies=this.deepExtend(this.currencies,e);const t=this.safeValue(o.networks,c,{});if(i=this.safeNumber(t,"fee"),void 0===i)throw new r.ArgumentsRequired(this.id+' withdraw() function can not find withdraw fee for chosen network. You need to re-load markets with "exchange.loadMarkets(true)", or provide the "fee" parameter')}const s=this.currencyToPrecision(e,i,c);n=this.omit(n,"fee");const h=this.numberToString(t),u=a.O.stringSub(h,s),l=parseFloat(u);d.fee=parseFloat(s),t=parseFloat(this.currencyToPrecision(e,l,c))}d.amount=t;const u=await this.spotPrivatePostV1DwWithdrawApiCreate(this.extend(d,n));return this.parseTransaction(u,o)}parseTransfer(e,t=undefined){return{info:e,id:this.safeString(e,"data"),timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.currency(e),o={currency:n.id,amount:parseFloat(this.currencyToPrecision(e,t))};let d,c;[d,a]=this.handleSubTypeAndParams("transfer",void 0,a);let h=this.convertTypeToAccount(i),u=this.convertTypeToAccount(s);const l="cross"===u,p="cross"===h,f=this.inArray(u,this.ids),m=this.inArray(h,this.ids),v="pro"===h,g="pro"===u;if(v&&g)throw new r.BadRequest(this.id+" transfer () cannot make a transfer between "+i+" and "+s);if("futures"===h||"futures"===u){let e=h+"-to-"+u;e=this.safeString(a,"type",e),o.type=e,c="spotPrivatePostV1FuturesTransfer"}else if(v&&l)c="privatePostCrossMarginTransferIn";else if(p&&g)c="privatePostCrossMarginTransferOut";else if(v&&f)o.symbol=u,c="privatePostDwTransferInMargin";else if(m&&g)o.symbol=h,c="privatePostDwTransferOutMargin";else{if(c="v2PrivatePostAccountTransfer","linear"===d){"swap"===h||"linear-swap"===i?h="linear-swap":u="linear-swap";let e=this.safeString(a,"symbol");a=this.omit(a,"symbol"),void 0!==e?(e=this.marketId(e),o["margin-account"]=e):o["margin-account"]="USDT"}o.from=v?"spot":h,o.to=g?"spot":u}const y=await this[c](this.extend(o,a));return this.parseTransfer(y,n)}async fetchBorrowRatesPerSymbol(e={}){await this.loadMarkets();const t=await this.spotPrivateGetV1MarginLoanInfo(e),i=this.milliseconds(),s=this.safeValue(t,"data",[]),r={info:t};for(let e=0;e<s.length;e++){const t=s[e],a=this.safeValue(t,"currencies",[]),n={};for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"currency"),r=this.safeCurrencyCode(s,"currency");n[r]={currency:r,rate:this.safeNumber(t,"actual-rate"),span:864e5,timestamp:i,datetime:this.iso8601(i)}}const o=this.safeString(t,"symbol");r[this.safeSymbol(o)]=n}return r}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.spotPrivateGetV1MarginLoanInfo(e),i=this.milliseconds(),s=this.safeValue(t,"data",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],a=this.safeValue(t,"currencies",[]);for(let e=0;e<a.length;e++){const t=a[e],s=this.safeString(t,"currency"),n=this.safeCurrencyCode(s,"currency");r[n]={currency:n,rate:this.safeNumber(t,"actual-rate"),span:864e5,timestamp:i,datetime:this.iso8601(i),info:void 0}}}return r}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={contract_code:a.id};let o;if(a.inverse)o="contractPublicGetSwapApiV1SwapHistoricalFundingRate";else{if(!a.linear)throw new r.NotSupported(this.id+" fetchFundingRateHistory() supports inverse and linear swaps only");o="contractPublicGetLinearSwapApiV1SwapHistoricalFundingRate"}const d=await this[o](this.extend(n,s)),c=this.safeValue(d,"data"),h=this.safeValue(c,"data",[]),u=[];for(let e=0;e<h.length;e++){const t=h[e],i=this.safeString(t,"contract_code"),s=this.safeSymbol(i),r=this.safeInteger(t,"funding_time");u.push({info:t,symbol:s,fundingRate:this.safeNumber(t,"funding_rate"),timestamp:r,datetime:this.iso8601(r)})}const l=this.sortBy(u,"timestamp");return this.filterBySymbolSinceLimit(l,a.symbol,t,i)}parseFundingRate(e,t=undefined){const i=this.safeNumber(e,"estimated_rate"),s=this.safeInteger(e,"funding_time"),r=this.safeInteger(e,"next_funding_time"),a=this.safeString(e,"contract_code");return{info:e,symbol:this.safeSymbol(a,t),markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"funding_rate"),fundingTimestamp:s,fundingDatetime:this.iso8601(s),nextFundingRate:i,nextFundingTimestamp:r,nextFundingDatetime:this.iso8601(r),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);let s;if(i.inverse)s="contractPublicGetSwapApiV1SwapFundingRate";else{if(!i.linear)throw new r.NotSupported(this.id+" fetchFundingRate() supports inverse and linear swaps only");s="contractPublicGetLinearSwapApiV1SwapFundingRate"}const a={contract_code:i.id},n=await this[s](this.extend(a,t)),o=this.safeValue(n,"data",{});return this.parseFundingRate(o,i)}async fetchFundingRates(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.safeValue(this.options,"fetchFundingRates",{}),s=this.safeString(this.options,"defaultSubType","inverse");let r=this.safeString(i,"subType",s);r=this.safeString(t,"subType",r);const a=this.getSupportedMapping(r,{linear:"contractPublicGetLinearSwapApiV1SwapBatchFundingRate",inverse:"contractPublicGetSwapApiV1SwapBatchFundingRate"});t=this.omit(t,"subType");const n=await this[a](this.extend({},t)),o=this.safeValue(n,"data",[]),d=this.parseFundingRates(o);return this.filterByArray(d,"symbol",e)}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),[a,r]=this.handleMarginModeAndParams("fetchBorrowInterest",r),a=void 0===a?"cross":a;const n={};let o,d;if(void 0!==i&&(n["start-date"]=this.yyyymmdd(i)),void 0!==s&&(n.size=s),"isolated"===a)d="privateGetMarginLoanOrders",void 0!==t&&(o=this.market(t),n.symbol=o.id);else if(d="privateGetCrossMarginLoanOrders",void 0!==e){const t=this.currency(e);n.currency=t.id}const c=await this[d](this.extend(n,r)),h=this.safeValue(c,"data"),u=this.parseBorrowInterests(h,o);return this.filterByCurrencySinceLimit(u,e,i,s)}parseBorrowInterest(e,t=undefined){const i=this.safeString(e,"symbol"),s=void 0===i?"cross":"isolated";t=this.safeMarket(i);const r=this.safeString(t,"symbol"),a=this.safeNumber(e,"accrued-at");return{account:"isolated"===s?r:"cross",symbol:r,marginMode:s,currency:this.safeCurrencyCode(this.safeString(e,"currency")),interest:this.safeNumber(e,"interest-amount"),interestRate:this.safeNumber(e,"interest-rate"),amountBorrowed:this.safeNumber(e,"loan-amount"),timestamp:a,datetime:this.iso8601(a),info:e}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/";const d=this.omit(s,this.extractParams(e));if("string"==typeof t){if("public"===t||"private"===t?n+=this.version:"v2Public"!==t&&"v2Private"!==t||(n+="v2"),n+="/"+this.implodeParams(e,s),"private"===t||"v2Private"===t){this.checkRequiredCredentials();const e=this.ymdhms(this.milliseconds(),"T");let t={SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e};"POST"!==i&&(t=this.extend(t,d));const s=this.keysort(t);let c=this.urlencode(s);const h=[i,this.hostname,n,c].join("\n"),u=this.hmac(this.encode(h),this.encode(this.secret),o.J,"base64");c+="&"+this.urlencode({Signature:u}),n+="?"+c,"POST"===i?(a=this.json(d),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}else Object.keys(d).length&&(n+="?"+this.urlencode(d));n=this.implodeParams(this.urls.api[t],{hostname:this.hostname})+n}else{const c=this.safeString(t,0),h=this.safeString(t,1),u=this.safeString(t,2),l=this.safeString(t,3);let p,f=this.safeValue(this.urls.hostnames,c);if("string"!=typeof f&&(f=this.safeValue(f,u),"string"!=typeof p&&void 0!==l&&(f=this.safeValue(f,l))),p=f,n+=this.implodeParams(e,s),"public"===h)Object.keys(d).length&&(n+="?"+this.urlencode(d));else if("private"===h){this.checkRequiredCredentials();const e=this.ymdhms(this.milliseconds(),"T");let t={SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e};"POST"!==i&&(t=this.extend(t,d)),t=this.keysort(t);let s=this.urlencode(t);const c=[i,p,n,s].join("\n"),h=this.hmac(this.encode(c),this.encode(this.secret),o.J,"base64");s+="&"+this.urlencode({Signature:h}),n+="?"+s,"POST"===i?(2===(a=this.json(d)).length&&(a="{}"),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}n=this.implodeParams(this.urls.api[c],{hostname:p})+n}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o){if("status"in o&&"error"===this.safeString(o,"status")){const e=this.safeString2(o,"err-code","err_code"),t=this.id+" "+n;this.throwBroadlyMatchedException(this.exceptions.broad,n,t),this.throwExactlyMatchedException(this.exceptions.exact,e,t);const i=this.safeString2(o,"err-msg","err_msg");throw this.throwExactlyMatchedException(this.exceptions.exact,i,t),new r.ExchangeError(t)}if("code"in o){const e=this.id+" "+n,t=this.safeString(o,"code");this.throwExactlyMatchedException(this.exceptions.exact,t,e)}}}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),[a,n]=this.handleMarketTypeAndParams("fetchFundingHistory",r,s);let o;const d={type:"30,31"};if(void 0!==t&&(d.start_date=t),"swap"===a)if(d.contract=r.id,r.linear){let e;o="contractPrivatePostLinearSwapApiV3SwapFinancialRecordExact",[e,s]=this.handleMarginModeAndParams("fetchFundingHistory",s),e=void 0===e?"cross":e,d.mar_acct="isolated"===e?r.id:r.quoteId}else o="contractPrivatePostSwapApiV3SwapFinancialRecordExact";else o="contractPrivatePostApiV3ContractFinancialRecordExact",d.symbol=r.id;const c=await this[o](this.extend(d,n)),h=this.safeValue(c,"data",[]);return this.parseIncomes(h,r,t,i)}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");await this.loadMarkets();const s=this.market(t),[a,n]=this.handleMarketTypeAndParams("setLeverage",s,i);let o;if(s.linear){let e;[e,i]=this.handleMarginModeAndParams("setLeverage",i),e=void 0===e?"cross":e,o=this.getSupportedMapping(e,{isolated:"contractPrivatePostLinearSwapApiV1SwapSwitchLeverRate",cross:"contractPrivatePostLinearSwapApiV1SwapCrossSwitchLeverRate"})}else o=this.getSupportedMapping(a,{future:"contractPrivatePostApiV1ContractSwitchLeverRate",swap:"contractPrivatePostSwapApiV1SwapSwitchLeverRate"});const d={lever_rate:e};return"future"===a&&s.inverse?d.symbol=s.settleId:d.contract_code=s.id,await this[o](this.extend(d,n))}parseIncome(e,t=undefined){const i=this.safeString(e,"contract_code"),s=this.safeSymbol(i,t),r=this.safeNumber(e,"amount"),a=this.safeInteger(e,"ts"),n=this.safeString(e,"id"),o=this.safeString2(e,"symbol","asset");return{info:e,symbol:s,code:this.safeCurrencyCode(o),timestamp:a,datetime:this.iso8601(a),id:n,amount:r}}parsePosition(e,t=undefined){const i=(t=this.safeMarket(this.safeString(e,"contract_code"))).symbol,s=this.safeString(e,"volume"),r=this.safeValue(t,"contractSize"),n=this.numberToString(r),o=this.safeNumber(e,"cost_open"),d=this.safeString(e,"position_margin"),c="buy"===this.safeString(e,"direction")?"long":"short",h=this.safeNumber(e,"profit_unreal");let u=this.safeString(e,"margin_mode");const l=this.safeString(e,"lever_rate"),p=a.O.stringMul(this.safeString(e,"profit_rate"),"100"),f=this.safeString(e,"last_price"),m=a.O.stringMul(s,n);let v;t.linear?v=a.O.stringMul(m,f):(v=a.O.stringDiv(m,f),u="cross");const g=a.O.stringDiv(d,v),y=this.safeString(e,"margin_balance"),b=this.safeNumber(e,"liquidation_price"),w=this.safeString(e,"adjust_factor"),S=a.O.stringDiv(w,l),P=a.O.stringMul(S,v),k=a.O.stringDiv(P,y);return{info:e,id:void 0,symbol:i,contracts:this.parseNumber(s),contractSize:r,entryPrice:o,collateral:this.parseNumber(y),side:c,unrealizedProfit:h,leverage:this.parseNumber(l),percentage:this.parseNumber(p),marginMode:u,notional:this.parseNumber(v),markPrice:void 0,liquidationPrice:b,initialMargin:this.parseNumber(d),initialMarginPercentage:this.parseNumber(g),maintenanceMargin:this.parseNumber(P),maintenanceMarginPercentage:this.parseNumber(S),marginRatio:this.parseNumber(k),timestamp:void 0,datetime:void 0}}async fetchPositions(e=undefined,t={}){let i,s,r,a,n;if(await this.loadMarkets(),void 0!==(e=this.marketSymbols(e))){const t=this.safeString(e,0);i=this.market(t)}[s,t]=this.handleMarginModeAndParams("fetchPositions",t),s=void 0===s?"cross":s,[r,t]=this.handleSubTypeAndParams("fetchPositions",i,t,"linear"),[a,t]=this.handleMarketTypeAndParams("fetchPositions",i,t),"spot"===a&&(a="future"),n="linear"===r?this.getSupportedMapping(s,{isolated:"contractPrivatePostLinearSwapApiV1SwapPositionInfo",cross:"contractPrivatePostLinearSwapApiV1SwapCrossPositionInfo"}):this.getSupportedMapping(a,{future:"contractPrivatePostApiV1ContractPositionInfo",swap:"contractPrivatePostSwapApiV1SwapPositionInfo"});const o=await this[n](t),d=this.safeValue(o,"data",[]),c=this.safeInteger(o,"ts"),h=[];for(let e=0;e<d.length;e++){const t=d[e],i=this.parsePosition(t);h.push(this.extend(i,{timestamp:c,datetime:this.iso8601(c)}))}return this.filterByArray(h,"symbol",e,!1)}async fetchPosition(e,t={}){await this.loadMarkets();const i=this.market(e);let s;[s,t]=this.handleMarginModeAndParams("fetchPosition",t),s=void 0===s?"cross":s;const[r,a]=this.handleMarketTypeAndParams("fetchPosition",i,t);let n;n=i.linear?this.getSupportedMapping(s,{isolated:"contractPrivatePostLinearSwapApiV1SwapAccountPositionInfo",cross:"contractPrivatePostLinearSwapApiV1SwapCrossAccountPositionInfo"}):this.getSupportedMapping(r,{future:"contractPrivatePostApiV1ContractAccountPositionInfo",swap:"contractPrivatePostSwapApiV1SwapAccountPositionInfo"});const o={};i.future&&i.inverse?o.symbol=i.settleId:("cross"===s&&(o.margin_account="USDT"),o.contract_code=i.id);const d=await this[n](this.extend(o,a)),c=this.safeValue(d,"data");let h;h="cross"===s?c:this.safeValue(c,0);const u=this.omit(h,["positions"]),l=this.safeValue(h,"positions");let p;if(i.future&&i.inverse)for(let e=0;e<l.length;e++){const t=l[e];if(t.contract_code===i.id){p=t;break}}else p=this.safeValue(l,0);const f=this.safeInteger(d,"ts"),m=this.parsePosition(this.extend(p,u));return this.extend(m,{timestamp:f,datetime:this.iso8601(f)})}parseLedgerEntryType(e){return this.safeString({trade:"trade",etf:"trade","transact-fee":"fee","fee-deduction":"fee",transfer:"transfer",credit:"credit",liquidation:"trade",interest:"credit",deposit:"deposit",withdraw:"withdrawal","withdraw-fee":"fee",exchange:"exchange","other-types":"transfer",rebate:"rebate"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"transactId"),s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s,t),a=this.safeNumber(e,"transactAmt"),n=this.safeString(e,"transferType"),o=this.parseLedgerEntryType(n),d=this.safeString(e,"direction"),c=this.safeInteger(e,"transactTime"),h=this.iso8601(c),u=this.safeString(e,"accountId");return{id:i,direction:d,account:u,referenceId:i,referenceAccount:u,type:o,currency:r,amount:a,timestamp:c,datetime:h,before:void 0,after:void 0,status:void 0,fee:void 0,info:e}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={accountId:await this.fetchAccountIdByType("spot",s)};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.startTime=t),void 0!==i&&(r.limit=i);const n=await this.spotPrivateGetV2AccountLedger(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseLedger(o,a,t,i)}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.contractPublicGetLinearSwapApiV1SwapAdjustfactor(t),s=this.safeValue(i,"data");return this.parseLeverageTiers(s,e,"contract_code")}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const i={};if(void 0!==e){const t=this.market(e);if(!t.contract)throw new r.BadRequest(this.id+" fetchMarketLeverageTiers() symbol supports contract markets only");i.contract_code=t.id}const s=await this.contractPublicGetLinearSwapApiV1SwapAdjustfactor(this.extend(i,t)),a=this.safeValue(s,"data"),n=this.parseLeverageTiers(a,[e],"contract_code");return this.safeValue(n,e)}parseLeverageTiers(e,t=undefined,i=undefined){const s={};for(let r=0;r<e.length;r++){const n=e[r],o=this.safeValue(n,"list",[]),d=[],c=this.safeString(n,"trade_partition"),h=this.safeString(n,i),u=this.safeSymbol(h);if(this.inArray(u,t)){for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,"lever_rate"),s=this.safeValue(t,"ladders",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"adjust_factor");d.push({tier:this.safeInteger(t,"ladder"),currency:this.safeCurrencyCode(c),minNotional:this.safeNumber(t,"min_size"),maxNotional:this.safeNumber(t,"max_size"),maintenanceMarginRate:this.parseNumber(a.O.stringDiv(r,i)),maxLeverage:this.parseNumber(i),info:t})}}s[u]=d}}return s}async fetchOpenInterestHistory(e,t="1h",i=undefined,s=undefined,a={}){if("1h"!==t&&"4h"!==t&&"12h"!==t&&"1d"!==t)throw new r.BadRequest(this.id+" fetchOpenInterestHistory cannot only use the 1h, 4h, 12h and 1d timeframe");await this.loadMarkets();const n=this.market(e),o=this.safeNumber2(a,"amount_type","amountType");if(void 0===o)throw new r.ArgumentsRequired(this.id+" fetchOpenInterestHistory requires parameter params.amountType to be either 1 (cont), or 2 (cryptocurrency)");const d={period:{"1h":"60min","4h":"4hour","12h":"12hour","1d":"1day"}[t],amount_type:o};let c;n.future?(d.contract_type=this.safeString(n.info,"contract_type"),d.symbol=n.baseId,c="contractPublicGetApiV1ContractHisOpenInterest"):n.linear?(d.contract_type="swap",d.contract_code=n.id,d.contract_code=n.id,c="contractPublicGetLinearSwapApiV1SwapHisOpenInterest"):(d.contract_code=n.id,c="contractPublicGetSwapApiV1SwapHisOpenInterest"),void 0!==s&&(d.size=s);const h=await this[c](this.extend(d,a)),u=this.safeValue(h,"data"),l=this.safeValue(u,"tick");return this.parseOpenInterests(l,n,i,s)}async fetchOpenInterest(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.contract)throw new r.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");if(i.option)throw new r.NotSupported(this.id+" fetchOpenInterest() does not currently support option markets");const s={contract_code:i.id};let a;i.future?(s.contract_type=this.safeString(i.info,"contract_type"),s.symbol=i.baseId,a="contractPublicGetApiV1ContractOpenInterest"):i.linear?(s.contract_type="swap",a="contractPublicGetLinearSwapApiV1SwapOpenInterest"):a="contractPublicGetSwapApiV1SwapOpenInterest";const n=await this[a](this.extend(s,t)),o=this.safeValue(n,"data",[]),d=this.parseOpenInterest(o[0],i),c=this.safeInteger(n,"ts");return this.extend(d,{timestamp:c,datetime:this.iso8601(c)})}parseOpenInterest(e,t=undefined){const i=this.safeInteger(e,"ts"),s=this.safeNumber(e,"volume"),r=this.safeNumber(e,"value");return{symbol:this.safeString(t,"symbol"),baseVolume:s,quoteVolume:r,openInterestAmount:s,openInterestValue:r,timestamp:i,datetime:this.iso8601(i),info:e}}async borrowMargin(e,t,i=undefined,s={}){await this.loadMarkets();const a=this.currency(e),n={currency:a.id,amount:this.currencyToPrecision(e,t)};let o,d;if([o,s]=this.handleMarginModeAndParams("borrowMargin",s),o=void 0===o?"cross":o,"isolated"===o){if(void 0===i)throw new r.ArgumentsRequired(this.id+" borrowMargin() requires a symbol argument for isolated margin");const e=this.market(i);n.symbol=e.id,d="privatePostMarginOrders"}else"cross"===o&&(d="privatePostCrossMarginOrders");const c=await this[d](this.extend(n,s)),h=this.parseMarginLoan(c,a);return this.extend(h,{amount:t,symbol:i})}async repayMargin(e,t,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e);let a;[a,s]=this.handleMarginModeAndParams("repayMargin",s),a=void 0===a?"cross":a;const n=this.safeValue(this.options,"marginAccounts",{}),o=this.getSupportedMapping(a,n),d=await this.fetchAccountIdByType(o,s),c={currency:r.id,amount:this.currencyToPrecision(e,t),accountId:d},h=await this.v2PrivatePostAccountRepayment(this.extend(c,s)),u=this.safeValue(h,"Data",[]),l=this.safeValue(u,0),p=this.parseMarginLoan(l,r);return this.extend(p,{amount:t,symbol:i})}parseMarginLoan(e,t=undefined){const i=this.safeInteger(e,"repayTime");return{id:this.safeInteger2(e,"repayId","data"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:i,datetime:this.iso8601(i),info:e}}async fetchSettlementHistory(e=undefined,t=undefined,i=undefined,s={}){const a=this.safeString(s,"code"),n=this.safeInteger2(s,"until","till");s=this.omit(s,["until","till"]);const o=void 0===e?void 0:this.market(e),[d,c]=this.handleMarketTypeAndParams("fetchSettlementHistory",o,s);if("future"===d){if(void 0===e&&void 0===a)throw new r.ArgumentsRequired(this.id+' requires a symbol argument or params["code"] for fetchSettlementHistory future')}else if(void 0===e)throw new r.ArgumentsRequired(this.id+" requires a symbol argument for fetchSettlementHistory swap");const h={};o.future?h.symbol=o.baseId:h.contract_code=o.id,void 0!==t&&(h.start_at=t),void 0!==i&&(h.page_size=i),void 0!==n&&(h.end_at=n);let u="contractPublicGetApiV1ContractSettlementRecords";o.swap&&(u=o.linear?"contractPublicGetLinearSwapApiV1SwapSettlementRecords":"contractPublicGetSwapApiV1SwapSettlementRecords");const l=await this[u](this.extend(h,c)),p=this.safeValue(l,"data"),f=this.safeValue(p,"settlement_record"),m=this.parseSettlements(f,o);return this.sortBy(m,"timestamp")}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.spotPublicGetV2ReferenceCurrencies(t),s=this.safeValue(i,"data");return this.parseDepositWithdrawFees(s,e,"currency")}parseDepositWithdrawFee(e,t=undefined){const i=this.safeValue(e,"chains",[]);let s=this.depositWithdrawFee(e);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeString(r,"chain"),n=this.safeString(r,"withdrawFeeType"),o=this.networkIdToCode(a);let d,c;"fixed"===n?(d=this.safeNumber(r,"transactFeeWithdraw"),c={fee:d,percentage:!1}):(d=this.safeNumber(r,"transactFeeRateWithdraw"),c={fee:d,percentage:!0}),s.networks[o]={withdraw:c,deposit:{fee:void 0,percentage:void 0}},s=this.assignDefaultDepositWithdrawFees(s,t)}return s}parseSettlements(e,t){const i=[];for(let s=0;s<e.length;s++){const r=e[s],a=this.safeValue(r,"list");if(void 0!==a){const e=this.safeInteger(r,"settlement_time"),s={timestamp:e,datetime:this.iso8601(e)};for(let e=0;e<a.length;e++){const r=a[e],n=this.parseSettlement(r,t);i.push(this.extend(n,s))}}else i.push(this.parseSettlement(e[s],t))}return i}parseSettlement(e,t){const i=this.safeInteger(e,"settlement_time"),s=this.safeString(e,"contract_code");return{info:e,symbol:this.safeSymbol(s,t),price:this.safeNumber(e,"settlement_price"),timestamp:i,datetime:this.iso8601(i)}}}},7034:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(7758),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"huobijp",name:"Huobi Japan",countries:["JP"],rateLimit:100,userAgent:this.userAgents.chrome39,certified:!1,version:"v1",hostname:"api-cloud.bittrade.co.jp",pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingLimits:!0,fetchWithdrawals:!0,withdraw:!0},timeframes:{"1m":"1min","5m":"5min","15m":"15min","30m":"30min","1h":"60min","4h":"4hour","1d":"1day","1w":"1week","1M":"1mon","1y":"1year"},urls:{logo:"https://user-images.githubusercontent.com/1294454/85734211-85755480-b705-11ea-8b35-0b7f1db33a2f.jpg",api:{market:"https://{hostname}",public:"https://{hostname}",private:"https://{hostname}",v2Public:"https://{hostname}",v2Private:"https://{hostname}"},www:"https://www.huobi.co.jp",referral:"https://www.huobi.co.jp/register/?invite_code=znnq3",doc:"https://api-doc.huobi.co.jp",fees:"https://www.huobi.co.jp/support/fee"},api:{v2Public:{get:{"reference/currencies":1,"market-status":1}},v2Private:{get:{"account/ledger":1,"account/withdraw/quota":1,"account/withdraw/address":1,"account/deposit/address":1,"account/repayment":5,"reference/transact-fee-rate":1,"account/asset-valuation":.2,"point/account":5,"sub-user/user-list":1,"sub-user/user-state":1,"sub-user/account-list":1,"sub-user/deposit-address":1,"sub-user/query-deposit":1,"user/api-key":1,"user/uid":1,"algo-orders/opening":1,"algo-orders/history":1,"algo-orders/specific":1,"c2c/offers":1,"c2c/offer":1,"c2c/transactions":1,"c2c/repayment":1,"c2c/account":1,"etp/reference":1,"etp/transactions":5,"etp/transaction":5,"etp/rebalance":1,"etp/limit":1},post:{"account/transfer":1,"account/repayment":5,"point/transfer":5,"sub-user/management":1,"sub-user/creation":1,"sub-user/tradable-market":1,"sub-user/transferability":1,"sub-user/api-key-generation":1,"sub-user/api-key-modification":1,"sub-user/api-key-deletion":1,"sub-user/deduct-mode":1,"algo-orders":1,"algo-orders/cancel-all-after":1,"algo-orders/cancellation":1,"c2c/offer":1,"c2c/cancellation":1,"c2c/cancel-all":1,"c2c/repayment":1,"c2c/transfer":1,"etp/creation":5,"etp/redemption":5,"etp/{transactId}/cancel":10,"etp/batch-cancel":50}},market:{get:{"history/kline":1,"detail/merged":1,depth:1,trade:1,"history/trade":1,detail:1,tickers:1,etp:1}},public:{get:{"common/symbols":1,"common/currencys":1,"common/timestamp":1,"common/exchange":1,"settings/currencys":1}},private:{get:{"account/accounts":.2,"account/accounts/{id}/balance":.2,"account/accounts/{sub-uid}":1,"account/history":4,"cross-margin/loan-info":1,"margin/loan-info":1,"fee/fee-rate/get":1,"order/openOrders":.4,"order/orders":.4,"order/orders/{id}":.4,"order/orders/{id}/matchresults":.4,"order/orders/getClientOrder":.4,"order/history":1,"order/matchresults":1,"query/deposit-withdraw":1,"margin/loan-orders":.2,"margin/accounts/balance":.2,"cross-margin/loan-orders":1,"cross-margin/accounts/balance":1,"points/actions":1,"points/orders":1,"subuser/aggregate-balance":10,"stable-coin/exchange_rate":1,"stable-coin/quote":1},post:{"account/transfer":1,"futures/transfer":1,"order/batch-orders":.4,"order/orders/place":.2,"order/orders/submitCancelClientOrder":.2,"order/orders/batchCancelOpenOrders":.4,"order/orders/{id}/submitcancel":.2,"order/orders/batchcancel":.4,"dw/withdraw/api/create":1,"dw/withdraw-virtual/{id}/cancel":1,"dw/transfer-in/margin":10,"dw/transfer-out/margin":10,"margin/orders":10,"margin/orders/{id}/repay":10,"cross-margin/transfer-in":1,"cross-margin/transfer-out":1,"cross-margin/orders":1,"cross-margin/orders/{id}/repay":1,"stable-coin/exchange":1,"subuser/transfer":10}}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},precisionMode:n.sh,exceptions:{broad:{"contract is restricted of closing positions on API.  Please contact customer service":r.OnMaintenance,maintain:r.OnMaintenance},exact:{"bad-request":r.BadRequest,"base-date-limit-error":r.BadRequest,"api-not-support-temp-addr":r.PermissionDenied,timeout:r.RequestTimeout,"gateway-internal-error":r.ExchangeNotAvailable,"account-frozen-balance-insufficient-error":r.InsufficientFunds,"invalid-amount":r.InvalidOrder,"order-limitorder-amount-min-error":r.InvalidOrder,"order-limitorder-amount-max-error":r.InvalidOrder,"order-marketorder-amount-min-error":r.InvalidOrder,"order-limitorder-price-min-error":r.InvalidOrder,"order-limitorder-price-max-error":r.InvalidOrder,"order-holding-limit-failed":r.InvalidOrder,"order-orderprice-precision-error":r.InvalidOrder,"order-etp-nav-price-max-error":r.InvalidOrder,"order-orderstate-error":r.OrderNotFound,"order-queryorder-invalid":r.OrderNotFound,"order-update-error":r.ExchangeNotAvailable,"api-signature-check-failed":r.AuthenticationError,"api-signature-not-valid":r.AuthenticationError,"base-record-invalid":r.OrderNotFound,"base-symbol-trade-disabled":r.BadSymbol,"base-symbol-error":r.BadSymbol,"system-maintenance":r.OnMaintenance,"invalid symbol":r.BadSymbol,"symbol trade not open now":r.BadSymbol,"invalid-address":r.BadRequest,"base-currency-chain-error":r.BadRequest,"dw-insufficient-balance":r.InsufficientFunds}},options:{defaultNetwork:"ERC20",networks:{ETH:"erc20",TRX:"trc20",HRC20:"hrc20",HECO:"hrc20",HT:"hrc20",ALGO:"algo",OMNI:""},fetchOrdersByStatesMethod:"private_get_order_orders",fetchOpenOrdersMethod:"fetch_open_orders_v1",createMarketBuyOrderRequiresPrice:!0,fetchMarketsMethod:"publicGetCommonSymbols",fetchBalanceMethod:"privateGetAccountAccountsIdBalance",createOrderMethod:"privatePostOrderOrdersPlace",language:"en-US",broker:{id:"AA03022abc"}},commonCurrencies:{GET:"Themis",GTC:"Game.com",HIT:"HitChain",HOT:"Hydro Protocol",PNT:"Penta",SBTC:"Super Bitcoin",BIFI:"Bitcoin File"}})}async fetchTime(e={}){const t=await this.publicGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchTradingLimits(e=undefined,t={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);const i={};for(let s=0;s<e.length;s++){const r=e[s];i[r]=await this.fetchTradingLimitsById(this.marketId(r),t)}return i}async fetchTradingLimitsById(e,t={}){const i={symbol:e},s=await this.publicGetCommonExchange(this.extend(i,t));return this.parseTradingLimits(this.safeValue(s,"data",{}))}parseTradingLimits(e,t=undefined,i={}){return{info:e,limits:{amount:{min:this.safeNumber(e,"limit-order-must-greater-than"),max:this.safeNumber(e,"limit-order-must-less-than")}}}}costToPrecision(e,t){return this.decimalToPrecision(t,n.tk,this.markets[e].precision.cost,this.precisionMode)}async fetchMarkets(e={}){const t=this.options.fetchMarketsMethod,i=await this[t](e),s=this.safeValue(i,"data",[]);if(s.length<1)throw new r.NetworkError(this.id+" fetchMarkets() returned empty response: "+this.json(s));const n=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"base-currency"),r=this.safeString(t,"quote-currency"),o=this.safeCurrencyCode(i),d=this.safeCurrencyCode(r),c=this.safeString(t,"state"),h=this.safeString(t,"leverage-ratio","1"),u=this.safeString(t,"super-margin-leverage-ratio","1"),l=a.O.stringGt(h,"1")||a.O.stringGt(u,"1"),p="OMG"===o?this.parseNumber("0"):this.parseNumber("0.002");n.push({id:i+r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:i,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:l,swap:!1,future:!1,option:!1,active:"online"===c,contract:!1,linear:void 0,inverse:void 0,taker:p,maker:p,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.parseNumber(this.parsePrecision(this.safeString(t,"price-precision"))),amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount-precision"))),cost:this.parseNumber(this.parsePrecision(this.safeString(t,"value-precision")))},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(h),superMax:this.parseNumber(u)},amount:{min:this.safeNumber(t,"min-order-amt"),max:this.safeNumber(t,"max-order-amt")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min-order-value"),max:void 0}},info:t})}return n}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeInteger(e,"ts");let r,a,n,o;"bid"in e&&(Array.isArray(e.bid)?(r=this.safeString(e.bid,0),a=this.safeString(e.bid,1)):(r=this.safeString(e,"bid"),a=this.safeString(e,"bidSize"))),"ask"in e&&(Array.isArray(e.ask)?(n=this.safeString(e.ask,0),o=this.safeString(e.ask,1)):(n=this.safeString(e,"ask"),o=this.safeString(e,"askSize")));const d=this.safeString(e,"open"),c=this.safeString(e,"close"),h=this.safeString(e,"amount"),u=this.safeString(e,"vol");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:r,bidVolume:a,ask:n,askVolume:o,vwap:void 0,open:d,close:c,last:c,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:h,quoteVolume:u,info:e},t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id,type:"step0"},a=await this.marketGetDepth(this.extend(s,i));if("tick"in a){if(!a.tick)throw new r.BadSymbol(this.id+" fetchOrderBook() returned empty response: "+this.json(a));const t=this.safeValue(a,"tick"),i=this.safeInteger(t,"ts",this.safeInteger(a,"ts")),s=this.parseOrderBook(t,e,i);return s.nonce=this.safeInteger(t,"version"),s}throw new r.ExchangeError(this.id+" fetchOrderBook() returned unrecognized response: "+this.json(a))}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.marketGetDetailMerged(this.extend(s,t)),a=this.parseTicker(r.tick,i),n=this.safeInteger(r,"ts");return a.timestamp=n,a.datetime=this.iso8601(n),a}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.marketGetTickers(t),s=this.safeValue(i,"data",[]),r=this.safeInteger(i,"ts"),a={};for(let e=0;e<s.length;e++){const t=this.safeString(s[e],"symbol"),i=this.safeMarket(t),n=i.symbol,o=this.parseTicker(s[e],i);o.timestamp=r,o.datetime=this.iso8601(r),a[n]=o}return this.filterByArray(a,"symbol",e)}parseTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeInteger2(e,"ts","created-at"),n=this.safeString(e,"order-id");let o=this.safeString(e,"direction"),d=this.safeString(e,"type");if(void 0!==d){const e=d.split("-");o=e[0],d=e[1]}const c=this.safeString(e,"role"),h=this.safeString(e,"price"),u=this.safeString2(e,"filled-amount","amount"),l=this.parseNumber(h),p=this.parseNumber(u),f=this.parseNumber(a.O.stringMul(h,u));let m,v=this.safeNumber(e,"filled-fees"),g=this.safeCurrencyCode(this.safeString(e,"fee-currency"));const y=this.safeNumber(e,"filled-points");void 0!==y&&(void 0!==v&&0!==v||(v=y,g=this.safeCurrencyCode(this.safeString(e,"fee-deduct-currency")))),void 0!==v&&(m={cost:v,currency:g});const b=this.safeString2(e,"trade-id","tradeId");return{id:this.safeString(e,"id",b),info:e,order:n,timestamp:r,datetime:this.iso8601(r),symbol:s,type:d,side:o,takerOrMaker:c,price:l,amount:p,cost:f,fee:m}}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={id:e},n=await this.privateGetOrderOrdersIdMatchresults(this.extend(a,r));return this.parseTrades(n.data,void 0,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.size=i),void 0!==t&&(a["start-time"]=t);const n=await this.privateGetOrderMatchresults(this.extend(a,s));return this.parseTrades(n.data,r,t,i)}async fetchTrades(e,t=undefined,i=1e3,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.size=i);const n=await this.marketGetHistoryTrade(this.extend(a,s)),o=this.safeValue(n,"data",[]);let d=[];for(let e=0;e<o.length;e++){const t=this.safeValue(o[e],"data",[]);for(let e=0;e<t.length;e++){const i=this.parseTrade(t[e],r);d.push(i)}}return d=this.sortBy(d,"timestamp"),this.filterBySymbolSinceLimit(d,r.symbol,t,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,"id"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"amount")]}async fetchOHLCV(e,t="1m",i=undefined,s=1e3,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,period:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.size=s);const o=await this.marketGetHistoryKline(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseOHLCVs(d,a,t,i,s)}async fetchAccounts(e={}){return await this.loadMarkets(),(await this.privateGetAccountAccounts(e)).data}async fetchCurrencies(e={}){const t={language:this.options.language},i=await this.publicGetSettingsCurrencys(this.extend(t,e)),s=this.safeValue(i,"data",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeValue(t,"name"),a=this.safeCurrencyCode(i),n=this.safeValue(t,"deposit-enabled"),o=this.safeValue(t,"withdraw-enabled"),d=this.safeValue(t,"country-disabled"),c=this.safeValue(t,"visible",!1),h=this.safeString(t,"state"),u=c&&n&&o&&"online"===h&&!d,l=this.safeString(t,"display-name"),p=this.parseNumber(this.parsePrecision(this.safeString(t,"withdraw-precision")));r[a]={id:i,code:a,type:"crypto",name:l,active:u,deposit:n,withdraw:o,fee:void 0,precision:p,limits:{amount:{min:p,max:void 0},deposit:{min:this.safeNumber(t,"deposit-min-amount"),max:void 0},withdraw:{min:this.safeNumber(t,"withdraw-min-amount"),max:void 0}},info:t}}return r}parseBalance(e){const t=this.safeValue(e.data,"list",[]),i={info:e};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r);let n;n=a in i?i[a]:this.account(),"trade"===s.type&&(n.free=this.safeString(s,"balance")),"frozen"===s.type&&(n.used=this.safeString(s,"balance")),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets(),await this.loadAccounts();const t=this.options.fetchBalanceMethod,i={id:this.accounts[0].id},s=await this[t](this.extend(i,e));return this.parseBalance(s)}async fetchOrdersByStates(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={states:e};let n;void 0!==t&&(n=this.market(t),a.symbol=n.id);const o=this.safeString(this.options,"fetchOrdersByStatesMethod","private_get_order_orders"),d=await this[o](this.extend(a,r));return this.parseOrders(d.data,n,i,s)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetOrderOrdersId(this.extend(s,i)),a=this.safeValue(r,"data");return this.parseOrder(a)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled,filled,partial-canceled,canceled",e,t,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){const r=this.safeString(this.options,"fetchOpenOrdersMethod","fetch_open_orders_v1");return await this[r](e,t,i,s)}async fetchOpenOrdersV1(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrdersV1() requires a symbol argument");return await this.fetchOrdersByStates("pre-submitted,submitted,partial-filled",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStates("filled,partial-canceled,canceled",e,t,i,s)}async fetchOpenOrdersV2(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);let n=this.safeString(s,"account-id");if(void 0===n){await this.loadAccounts();for(let e=0;e<this.accounts.length;e++){const t=this.accounts[e];if("spot"===t.type&&(n=this.safeString(t,"id"),void 0!==n))break}}r["account-id"]=n,void 0!==i&&(r.size=i);const o=this.omit(s,"account-id"),d=await this.privateGetOrderOpenOrders(this.extend(r,o)),c=this.safeValue(d,"data",[]);return this.parseOrders(c,a,t,i)}parseOrderStatus(e){return this.safeString({"partial-filled":"open","partial-canceled":"canceled",filled:"closed",canceled:"canceled",submitted:"open"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id");let s,r,a;if("type"in e){const t=e.type.split("-");s=t[0],r=t[1],a=this.parseOrderStatus(this.safeString(e,"state"))}const n=this.safeString(e,"symbol");t=this.safeMarket(n,t);const o=this.safeInteger(e,"created-at"),d=this.safeString(e,"client-order-id"),c=this.safeString(e,"amount"),h=this.safeString2(e,"filled-amount","field-amount"),u=this.safeString(e,"price"),l=this.safeString2(e,"filled-cash-amount","field-cash-amount"),p=this.safeString2(e,"filled-fees","field-fees");let f;return void 0!==p&&(f={cost:p,currency:"sell"===s?t.quote:t.base}),this.safeOrder({info:e,id:i,clientOrderId:d,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:t.symbol,type:r,timeInForce:void 0,postOnly:void 0,side:s,price:u,stopPrice:void 0,triggerPrice:void 0,average:void 0,cost:l,amount:c,filled:h,remaining:void 0,status:a,fee:f,trades:void 0},t)}async createOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets(),await this.loadAccounts();const d=this.market(e),c={"account-id":this.accounts[0].id,symbol:d.id,type:i+"-"+t},h=this.safeString2(o,"clientOrderId","client-order-id");if(void 0===h){const e=this.safeValue(this.options,"broker",{}),t=this.safeString(e,"id");c["client-order-id"]=t+this.uuid()}else c["client-order-id"]=h;if(o=this.omit(o,["clientOrderId","client-order-id"]),"market"===t&&"buy"===i)if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===n)throw new r.InvalidOrder(this.id+" market buy order requires price argument to calculate cost (total amount of quote currency to spend for buying, amount * price). To switch off this warning exception and specify cost in the amount argument, set .options['createMarketBuyOrderRequiresPrice'] = false. Make sure you know what you're doing.");{const t=this.numberToString(s),i=this.numberToString(n),r=a.O.stringMul(t,i);c.amount=this.costToPrecision(e,r)}}else c.amount=this.costToPrecision(e,s);else c.amount=this.amountToPrecision(e,s);"limit"!==t&&"ioc"!==t&&"limit-maker"!==t&&"stop-limit"!==t&&"stop-limit-fok"!==t||(c.price=this.priceToPrecision(e,n));const u=this.options.createOrderMethod,l=await this[u](this.extend(c,o)),p=this.milliseconds();return{info:l,id:this.safeString(l,"data"),timestamp:p,datetime:this.iso8601(p),lastTradeTimestamp:void 0,status:void 0,symbol:e,type:t,side:i,price:n,amount:s,filled:void 0,remaining:void 0,cost:void 0,trades:void 0,fee:void 0,clientOrderId:void 0,average:void 0}}async cancelOrder(e,t=undefined,i={}){const s=await this.privatePostOrderOrdersIdSubmitcancel({id:e});return this.extend(this.parseOrder(s),{id:e,status:"canceled"})}async cancelOrders(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue2(i,"clientOrderIds","client-order-ids");i=this.omit(i,["clientOrderIds","client-order-ids"]);const r={};return void 0===s?r["order-ids"]=e:r["client-order-ids"]=s,await this.privatePostOrderOrdersBatchcancel(this.extend(r,i))}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s;return void 0!==e&&(s=this.market(e),i.symbol=s.id),await this.privatePostOrderOrdersBatchCancelOpenOrders(this.extend(i,t))}currencyToPrecision(e,t,i=undefined){return this.decimalToPrecision(t,0,this.currencies[e].precision,this.precisionMode)}safeNetwork(e){const t=e.length-1;return"1"===e[t]&&(e=e.slice(0,t)),this.safeString({},e,e)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"addressTag"),r=this.safeString(e,"currency");t=this.safeCurrency(r,t);const a=this.safeCurrencyCode(r,t),n=this.safeString(e,"chain"),o=this.safeValue(t,"networks",{}),d=this.indexBy(o,"id"),c=this.safeValue(d,n,n),h=this.safeString(c,"network");return this.checkAddress(i),{currency:a,address:i,tag:s,network:h,info:e}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;(void 0===i||i>100)&&(i=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"deposit",from:0};void 0!==r&&(a.currency=r.id),void 0!==i&&(a.size=i);const n=await this.privateGetQueryDepositWithdraw(this.extend(a,s));return this.parseTransactions(n.data,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;(void 0===i||i>100)&&(i=100),await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a={type:"withdraw",from:0};void 0!==r&&(a.currency=r.id),void 0!==i&&(a.size=i);const n=await this.privateGetQueryDepositWithdraw(this.extend(a,s));return this.parseTransactions(n.data,r,t,i)}parseTransaction(e,t=undefined){const i=this.safeInteger(e,"created-at"),s=this.safeCurrencyCode(this.safeString(e,"currency"));let r=this.safeString(e,"type");"withdraw"===r&&(r="withdrawal");let n=this.safeString(e,"fee");return void 0!==n&&(n=a.O.stringAbs(n)),{info:e,id:this.safeString2(e,"id","data"),txid:this.safeString(e,"tx-hash"),timestamp:i,datetime:this.iso8601(i),network:this.safeStringUpper(e,"chain"),address:this.safeString(e,"address"),addressTo:void 0,addressFrom:void 0,tag:this.safeString(e,"address-tag"),tagTo:void 0,tagFrom:void 0,type:r,amount:this.safeNumber(e,"amount"),currency:s,status:this.parseTransactionStatus(this.safeString(e,"state")),updated:this.safeInteger(e,"updated-at"),fee:{currency:s,cost:this.parseNumber(n),rate:void 0}}}parseTransactionStatus(e){return this.safeString({unknown:"failed",confirming:"pending",confirmed:"ok",safe:"ok",orphan:"failed",submitted:"pending",canceled:"canceled",reexamine:"pending",reject:"failed",pass:"pending","wallet-reject":"failed","confirm-error":"failed",repealed:"failed","wallet-transfer":"pending","pre-transfer":"pending"},e,e)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);const a=this.currency(e),n={address:i,amount:t,currency:a.id.toLowerCase()};void 0!==s&&(n["addr-tag"]=s);const o=this.safeValue(this.options,"networks",{});let d=this.safeStringUpper(r,"network");d=this.safeStringLower(o,d,d),void 0!==d&&(n.chain="erc20"===d?a.id+d:d+a.id,r=this.omit(r,"network"));const c=await this.privatePostDwWithdrawApiCreate(this.extend(n,r));return this.parseTransaction(c,a)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/";"market"===t?n+=t:"public"===t||"private"===t?n+=this.version:"v2Public"!==t&&"v2Private"!==t||(n+="v2"),n+="/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if("private"===t||"v2Private"===t){this.checkRequiredCredentials();const e=this.ymdhms(this.milliseconds(),"T");let t={SignatureMethod:"HmacSHA256",SignatureVersion:"2",AccessKeyId:this.apiKey,Timestamp:e};"POST"!==i&&(t=this.extend(t,d));const s=this.keysort(t);let c=this.urlencode(s);const h=[i,this.hostname,n,c].join("\n"),u=this.hmac(this.encode(h),this.encode(this.secret),o.J,"base64");c+="&"+this.urlencode({Signature:u}),n+="?"+c,"POST"===i?(a=this.json(d),r={"Content-Type":"application/json"}):r={"Content-Type":"application/x-www-form-urlencoded"}}else Object.keys(s).length&&(n+="?"+this.urlencode(s));return n=this.implodeParams(this.urls.api[t],{hostname:this.hostname})+n,{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"status"in o&&"error"===this.safeString(o,"status")){const e=this.safeString(o,"err-code"),t=this.id+" "+n;this.throwBroadlyMatchedException(this.exceptions.broad,n,t),this.throwExactlyMatchedException(this.exceptions.exact,e,t);const i=this.safeString(o,"err-msg");throw this.throwExactlyMatchedException(this.exceptions.exact,i,t),new r.ExchangeError(t)}}}},5547:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(8146);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"huobipro",alias:!0,name:"Huobi Pro"})}}},8232:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(5563),r=i(9292),a=i(6689),n=i(2194),o=i(1372),d=i(6739);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"idex",name:"IDEX",countries:["US"],rateLimit:200,version:"v3",pro:!0,certified:!0,requiresWeb3:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","6h":"6h","1d":"1d"},urls:{test:{MATIC:"https://api-sandbox-matic.idex.io"},logo:"https://user-images.githubusercontent.com/51840849/94481303-2f222100-01e0-11eb-97dd-bc14c5943a86.jpg",api:{MATIC:"https://api-matic.idex.io"},www:"https://idex.io",doc:["https://docs.idex.io/"]},api:{public:{get:{ping:1,time:1,exchange:1,assets:1,markets:1,tickers:1,candles:1,trades:1,orderbook:1}},private:{get:{user:1,wallets:1,balances:1,orders:1,fills:1,deposits:1,withdrawals:1,wsToken:1},post:{wallets:1,orders:1,"orders/test":1,withdrawals:1},delete:{orders:1}}},options:{defaultTimeInForce:"gtc",defaultSelfTradePrevention:"cn",network:"MATIC"},exceptions:{INVALID_ORDER_QUANTITY:a.InvalidOrder,INSUFFICIENT_FUNDS:a.InsufficientFunds,SERVICE_UNAVAILABLE:a.ExchangeNotAvailable,EXCEEDED_RATE_LIMIT:a.DDoSProtection,INVALID_PARAMETER:a.BadRequest,WALLET_NOT_ASSOCIATED:a.InvalidAddress,INVALID_WALLET_SIGNATURE:a.AuthenticationError},requiredCredentials:{walletAddress:!0,privateKey:!0,apiKey:!0,secret:!0},precisionMode:r.sh,paddingMode:r.Z_,commonCurrencies:{}})}priceToPrecision(e,t){const i=this.market(e),s=this.safeValue(i,"info",{}),a=this.safeInteger(s,"quoteAssetPrecision");return t=this.decimalToPrecision(t,r.oU,i.precision.price,this.precisionMode),this.decimalToPrecision(t,r.tk,a,r.nr,r.Z_)}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),i=await this.publicGetExchange(),s=this.safeNumber(i,"makerFeeRate"),r=this.safeNumber(i,"takerFeeRate"),a=this.safeString(i,"makerTradeMinimum"),o=this.safeString(i,"takerTradeMinimum"),d=this.parseNumber(n.O.stringMin(a,o)),c=[];for(let e=0;e<t.length;e++){const i=t[e],a=this.safeString(i,"market"),n=this.safeString(i,"baseAsset"),o=this.safeString(i,"quoteAsset"),h=this.safeCurrencyCode(n),u=this.safeCurrencyCode(o),l=this.parseNumber(this.parsePrecision(this.safeString(i,"baseAssetPrecision"))),p=this.parseNumber(this.parsePrecision(this.safeString(i,"quoteAssetPrecision"))),f=this.safeString(i,"status");let m;"ETH"===u&&(m=d),c.push({id:a,symbol:h+"/"+u,base:h,quote:u,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"inactive"!==f,contract:!1,linear:void 0,inverse:void 0,taker:r,maker:s,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:l,price:this.safeNumber(i,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:l,max:void 0},price:{min:p,max:void 0},cost:{min:m,max:void 0}},info:i})}return c}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={market:i.id},r=await this.publicGetTickers(this.extend(s,t)),a=this.safeValue(r,0);return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTickers(t);return this.parseTickers(i,e)}parseTicker(e,t=undefined){const i=this.safeString(e,"market"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.safeInteger(e,"time"),a=this.safeString(e,"close");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:a,last:a,previousClose:void 0,change:void 0,percentage:this.safeString(e,"percentChange"),average:void 0,baseVolume:this.safeString(e,"baseVolume"),quoteVolume:this.safeString(e,"quoteVolume"),info:e},t)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,interval:t};void 0!==i&&(n.start=i),void 0!==s&&(n.limit=s);const o=await this.publicGetCandles(this.extend(n,r));return Array.isArray(o)?this.parseOHLCVs(o,a,t,i,s):[]}parseOHLCV(e,t=undefined){return[this.safeInteger(e,"start"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==t&&(a.start=t),void 0!==i&&(a.limit=i);const n=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"fillId"),s=this.safeString(e,"price"),r=this.safeString(e,"quantity"),a=this.safeString(e,"quoteQuantity"),n=this.safeInteger(e,"time"),o=this.safeString(e,"market"),d=this.safeSymbol(o,t,"-"),c="buy"===this.safeString(e,"makerSide")?"sell":"buy",h=this.safeString(e,"side",c),u=this.safeString(e,"liquidity","taker"),l=this.safeString(e,"fee");let p;if(void 0!==l){const t=this.safeString(e,"feeAsset");p={cost:l,currency:this.safeCurrencyCode(t)}}const f=this.safeString(e,"orderId");return this.safeTrade({info:e,timestamp:n,datetime:this.iso8601(n),symbol:d,id:i,order:f,type:"limit",side:h,takerOrMaker:u,price:s,amount:r,cost:a,fee:p},t)}async fetchTradingFees(e={}){this.checkRequiredCredentials(),await this.loadMarkets();const t={nonce:this.uuidv1()};let i;i=await this.privateGetUser(this.extend(t,e));const s=this.safeNumber(i,"makerFeeRate"),r=this.safeNumber(i,"takerFeeRate"),a={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e];a[t]={info:i,symbol:t,maker:s,taker:r,percentage:!0,tierBased:!1}}return a}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={market:this.market(e).id,level:2};void 0!==t&&(s.limit=t);const r=await this.publicGetOrderbook(this.extend(s,i));return{symbol:e,timestamp:void 0,datetime:void 0,nonce:this.safeInteger(r,"sequence"),bids:this.parseSide(r,"bids"),asks:this.parseSide(r,"asks")}}parseSide(e,t){const i=this.safeValue(e,t,[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeNumber(t,0),a=this.safeNumber(t,1),n=this.safeInteger(t,2);s.push([r,a,n])}const r="bids"===t;return this.sortBy(s,0,r)}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"name"),a=this.safeString(s,"symbol"),n=this.safeCurrencyCode(a),o=this.parseNumber(this.parsePrecision(this.safeString(s,"exchangeDecimals")));i[n]={id:a,code:n,info:s,type:void 0,name:r,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:o,limits:{amount:{min:o,max:void 0},withdraw:{min:o,max:void 0}}}}return i}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"quantity"),n.free=this.safeString(s,"availableForTrade"),n.used=this.safeString(s,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){this.checkRequiredCredentials(),await this.loadMarkets();const t={nonce:this.uuidv1(),wallet:this.walletAddress},i=this.extend(t,e);if(void 0===i.wallet)throw new a.BadRequest(this.id+' fetchBalance() wallet is undefined, set this.walletAddress or "address" in params');let s;try{s=await this.privateGetBalances(i)}catch(e){if(!(e instanceof a.InvalidAddress))throw e;{const e=i.wallet;await this.associateWallet(e),s=await this.privateGetBalances(i)}}return this.parseBalance(s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;this.checkRequiredCredentials(),await this.loadMarkets();const n={nonce:this.uuidv1(),wallet:this.walletAddress};void 0!==e&&(r=this.market(e),n.market=r.id),void 0!==t&&(n.start=t),void 0!==i&&(n.limit=i);const o=this.extend(n,s);if(void 0===o.wallet)throw new a.BadRequest(this.id+' fetchMyTrades() walletAddress is undefined, set this.walletAddress or "address" in params');let d;try{d=await this.privateGetFills(o)}catch(e){if(!(e instanceof a.InvalidAddress))throw e;{const e=o.wallet;await this.associateWallet(e),d=await this.privateGetFills(o)}}return this.parseTrades(d,r,t,i)}async fetchOrder(e,t=undefined,i={}){const s={orderId:e};return await this.fetchOrdersHelper(t,void 0,void 0,this.extend(s,i))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersHelper(e,t,i,this.extend({closed:!1},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersHelper(e,t,i,this.extend({closed:!0},s))}async fetchOrdersHelper(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={nonce:this.uuidv1(),wallet:this.walletAddress};let a;void 0!==e&&(a=this.market(e),r.market=a.id),void 0!==t&&(r.start=t),void 0!==i&&(r.limit=i);const n=await this.privateGetOrders(this.extend(r,s));return Array.isArray(n)?this.parseOrders(n,a,t,i):this.parseOrder(n,a)}parseOrderStatus(e){return this.safeString({active:"open",partiallyFilled:"open",rejected:"canceled",filled:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"time"),s=this.safeValue(e,"fills",[]),r=this.safeString(e,"orderId"),a=this.safeString(e,"clientOrderId"),n=this.safeString(e,"market"),o=this.safeString(e,"side"),d=this.safeSymbol(n,t,"-"),c=this.safeString(e,"type"),h=this.safeString(e,"originalQuantity"),u=this.safeString(e,"executedQuantity"),l=this.safeString(e,"avgExecutionPrice"),p=this.safeString(e,"price"),f=this.safeString(e,"status"),m=this.safeStringUpper(e,"timeInForce"),v=this.parseOrderStatus(f);return this.safeOrder({info:e,id:r,clientOrderId:a,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:d,type:c,timeInForce:m,postOnly:void 0,side:o,price:p,stopPrice:void 0,triggerPrice:void 0,amount:h,cost:void 0,average:l,filled:u,remaining:void 0,status:v,fee:void 0,trades:s},t)}async associateWallet(e,t={}){const i=this.uuidv1(),s=this.remove0xPrefix(e),r=[this.base16ToBinary(i),this.base16ToBinary(s)],a=this.binaryConcatArray(r),n=this.hash(a,d.fr,"hex"),o={parameters:{nonce:i,wallet:e},signature:this.signMessageString(n,this.privateKey)};return await this.privatePostWallets(o)}async createOrder(e,t,i,s,r=undefined,n={}){this.checkRequiredCredentials(),await this.loadMarkets();const o=this.market(e),c=this.uuidv1();let h;const u={stopLoss:3,stopLossLimit:4,takeProfit:5,takeProfitLimit:6};let l;if("stopLossLimit"===t||"takeProfitLimit"===t||"stopPrice"in n){if(!("stopPrice"in n))throw new a.BadRequest(this.id+" createOrder() stopPrice is a required parameter for "+t+"orders");l=this.priceToPrecision(e,n.stopPrice)}const p={limit:1,limitMaker:2};let f;const m=t.toLowerCase().indexOf("limit")>=0;if(t in p)h=p[t],f=this.priceToPrecision(e,r);else if(t in u)h=u[t],f=this.priceToPrecision(e,r);else{if("market"!==t)throw new a.BadRequest(this.id+" "+t+" is not a valid order type");h=0}let v=0;if("quoteOrderQuantity"in n){if("market"!==t)throw new a.NotSupported(this.id+" createOrder() quoteOrderQuantity is not supported for "+t+" orders, only supported for market orders");v=1,s=this.safeNumber(n,"quoteOrderQuantity")}const g="buy"===i?0:1,y=this.remove0xPrefix(this.walletAddress),b=this.safeString(this.options,"network","ETH"),w=this.getSupportedMapping(b,{ETH:1,BSC:2,MATIC:4}),S=this.amountToPrecision(e,s),P={gtc:0,ioc:2,fok:3},k=this.safeString(this.options,"defaultTimeInForce","gtc"),O=this.safeString(n,"timeInForce",k);let T;if(!(O in P)){const e=Object.keys(P).join(", ");throw new a.BadRequest(this.id+" "+O+" is not a valid timeInForce, please choose one of "+e)}T=P[O];const A={dc:0,co:1,cn:2,cb:3},G=this.safeString(this.options,"defaultSelfTradePrevention","cn"),I=this.safeString(n,"selfTradePrevention",G);let C;if(!(I in A)){const e=Object.keys(A).join(", ");throw new a.BadRequest(this.id+" "+I+" is not a valid selfTradePrevention, please choose one of "+e)}C=A[I];const M=[this.numberToBE(w,1),this.base16ToBinary(c),this.base16ToBinary(y),this.encode(o.id),this.numberToBE(h,1),this.numberToBE(g,1),this.encode(S),this.numberToBE(v,1)];if(m){const e=this.encode(f);M.push(e)}if(t in u){const e=this.encode(l||f);M.push(e)}const x=this.safeString(n,"clientOrderId");void 0!==x&&M.push(this.encode(x));const V=[this.numberToBE(T,1),this.numberToBE(C,1),this.numberToBE(0,8)],E=this.arrayConcat(M,V),B=this.binaryConcatArray(E),_=this.hash(B,d.fr,"hex"),R=this.signMessageString(_,this.privateKey),N={parameters:{nonce:c,market:o.id,side:i,type:t,wallet:this.walletAddress,selfTradePrevention:I},signature:R};"market"!==t&&(N.parameters.timeInForce=O),m&&(N.parameters.price=f),t in u&&(N.parameters.stopPrice=l||f),0===v?N.parameters.quantity=S:N.parameters.quoteOrderQuantity=S,void 0!==x&&(N.parameters.clientOrderId=x);const L=await this.privatePostOrders(N);return this.parseOrder(L,o)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkRequiredCredentials(),await this.loadMarkets();const a=this.uuidv1(),n=this.currencyToPrecision(e,t),o=this.currency(e),c=this.remove0xPrefix(this.walletAddress),h=[this.base16ToBinary(a),this.base16ToBinary(c),this.encode(o.id),this.encode(n),this.numberToBE(1,1)],u=this.binaryConcatArray(h),l=this.hash(u,d.fr,"hex"),p=this.signMessageString(l,this.privateKey),f={parameters:{nonce:a,wallet:i,asset:o.id,quantity:n},signature:p},m=await this.privatePostWithdrawals(f);return this.parseTransaction(m,o)}async cancelAllOrders(e=undefined,t={}){let i;this.checkRequiredCredentials(),await this.loadMarkets(),void 0!==e&&(i=this.market(e));const s=this.uuidv1(),r={parameters:{nonce:s,wallet:this.walletAddress}},a=this.remove0xPrefix(this.walletAddress),n=[this.base16ToBinary(s),this.base16ToBinary(a)];void 0!==i&&(n.push(this.encode(i.id)),r.parameters.market=i.id);const o=this.binaryConcatArray(n),c=this.hash(o,d.fr,"hex"),h=this.signMessageString(c,this.privateKey);r.signature=h;const u=await this.privateDeleteOrders(this.extend(r,t));return this.parseOrders(u,i)}async cancelOrder(e,t=undefined,i={}){let s;this.checkRequiredCredentials(),await this.loadMarkets(),void 0!==t&&(s=this.market(t));const r=this.uuidv1(),a=this.remove0xPrefix(this.walletAddress),n=[this.base16ToBinary(r),this.base16ToBinary(a),this.encode(e)],o=this.binaryConcatArray(n),c=this.hash(o,d.fr,"hex"),h=this.signMessageString(c,this.privateKey),u={parameters:{nonce:r,wallet:this.walletAddress,orderId:e},signature:h},l=await this.privateDeleteOrders(this.extend(u,i)),p=this.safeValue(l,0);return this.parseOrder(p,s)}handleErrors(e,t,i,s,r,n,o,d,c){const h=this.safeString(o,"code"),u=this.safeString(o,"message");if(h in this.exceptions)throw new(0,this.exceptions[h])(this.id+" "+u);if(void 0!==h)throw new a.ExchangeError(this.id+" "+u)}async fetchDeposit(e,t=undefined,i={}){await this.loadMarkets();const s={nonce:this.uuidv1(),wallet:this.walletAddress,depositId:e},r=await this.privateGetDeposits(this.extend(s,i));return this.parseTransaction(r,t)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return s=this.extend({method:"privateGetDeposits"},s),this.fetchTransactionsHelper(e,t,i,s)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeNumber(t,"serverTime")}async fetchWithdrawal(e,t=undefined,i={}){await this.loadMarkets();const s={nonce:this.uuidv1(),wallet:this.walletAddress,withdrawalId:e},r=await this.privateGetWithdrawals(this.extend(s,i));return this.parseTransaction(r,t)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return s=this.extend({method:"privateGetWithdrawals"},s),this.fetchTransactionsHelper(e,t,i,s)}async fetchTransactionsHelper(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={nonce:this.uuidv1(),wallet:this.walletAddress};let a;void 0!==e&&(a=this.currency(e),r.asset=a.id),void 0!==t&&(r.start=t),void 0!==i&&(r.limit=i);const n=s.method;s=this.omit(s,"method");const o=await this[n](this.extend(r,s));return this.parseTransactions(o,a,t,i)}parseTransactionStatus(e){return this.safeString({mined:"ok"},e,e)}parseTransaction(e,t=undefined){let i;"depositId"in e?i="deposit":("withdrawId"in e||"withdrawalId"in e)&&(i="withdrawal");let s=this.safeString2(e,"depositId","withdrawId");s=this.safeString(e,"withdrawalId",s);const r=this.safeCurrencyCode(this.safeString(e,"asset"),t),a=this.safeNumber(e,"quantity"),n=this.safeString(e,"txId"),o=this.safeInteger2(e,"txTime","time");let d;"fee"in e&&(d={cost:this.safeNumber(e,"fee"),currency:"ETH"});const c=this.safeString(e,"txStatus"),h=this.parseTransactionStatus(c),u=this.safeInteger(e,"confirmationTime");return{info:e,id:s,txid:n,timestamp:o,datetime:this.iso8601(o),network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:i,amount:a,currency:r,status:h,updated:u,fee:d}}calculateRateLimiterCost(e,t,i,s,r={},a={}){const n=void 0!==this.apiKey,o=void 0!==this.secret,d=void 0!==this.walletAddress,c=void 0!==this.privateKey,h=this.safeValue(r,"cost",1);return n&&o&&d&&c?h/2:h}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.safeString(this.options,"network","ETH"),d=this.safeString(this.options,"version","v1");let c,h=this.urls.api[n]+"/"+d+"/"+e;if(Object.keys(s).length>0&&("GET"===i?(c=this.urlencode(s),h=h+"?"+c):a=this.json(s)),r={"Content-Type":"application/json"},void 0!==this.apiKey&&(r["IDEX-API-Key"]=this.apiKey),"private"===t){let e;e="GET"===i?c:a,r["IDEX-HMAC-Signature"]=this.hmac(this.encode(e),this.encode(this.secret),o.J,"hex")}return{url:h,method:i,body:a,headers:r}}}},9570:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(1106),r=i(2194),a=i(9292),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"independentreserve",name:"Independent Reserve",countries:["AU","NZ"],rateLimit:1e3,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/51840849/87182090-1e9e9080-c2ec-11ea-8e49-563db9a38f37.jpg",api:{public:"https://api.independentreserve.com/Public",private:"https://api.independentreserve.com/Private"},www:"https://www.independentreserve.com",doc:"https://www.independentreserve.com/API"},api:{public:{get:["GetValidPrimaryCurrencyCodes","GetValidSecondaryCurrencyCodes","GetValidLimitOrderTypes","GetValidMarketOrderTypes","GetValidOrderTypes","GetValidTransactionTypes","GetMarketSummary","GetOrderBook","GetAllOrders","GetTradeHistorySummary","GetRecentTrades","GetFxRates","GetOrderMinimumVolumes","GetCryptoWithdrawalFees"]},private:{post:["GetOpenOrders","GetClosedOrders","GetClosedFilledOrders","GetOrderDetails","GetAccounts","GetTransactions","GetFiatBankAccounts","GetDigitalCurrencyDepositAddress","GetDigitalCurrencyDepositAddresses","GetTrades","GetBrokerageFees","GetDigitalCurrencyWithdrawal","PlaceLimitOrder","PlaceMarketOrder","CancelOrder","SynchDigitalCurrencyDepositAddressWithBlockchain","RequestFiatWithdrawal","WithdrawFiatCurrency","WithdrawDigitalCurrency"]}},fees:{trading:{taker:this.parseNumber("0.005"),maker:this.parseNumber("0.005"),percentage:!0,tierBased:!1}},commonCurrencies:{PLA:"PlayChip"},precisionMode:a.sh})}async fetchMarkets(e={}){const t=await this.publicGetGetValidPrimaryCurrencyCodes(e),i=await this.publicGetGetValidSecondaryCurrencyCodes(e),s=await this.publicGetGetOrderMinimumVolumes(e),r=[];for(let e=0;e<t.length;e++){const a=t[e],n=this.safeCurrencyCode(a),o=this.safeNumber(s,a);for(let e=0;e<i.length;e++){const t=i[e],s=this.safeCurrencyCode(t),d=a+"/"+t;r.push({id:d,symbol:n+"/"+s,base:n,quote:s,settle:void 0,baseId:a,quoteId:t,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:o,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:d})}}return r}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"CurrencyCode"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"AvailableBalance"),n.total=this.safeString(s,"TotalBalance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetAccounts(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={primaryCurrencyCode:s.baseId,secondaryCurrencyCode:s.quoteId},a=await this.publicGetGetOrderBook(this.extend(r,i)),n=this.parse8601(this.safeString(a,"CreatedTimestampUtc"));return this.parseOrderBook(a,s.symbol,n,"BuyOrders","SellOrders","Price","Volume")}parseTicker(e,t=undefined){const i=this.parse8601(this.safeString(e,"CreatedTimestampUtc")),s=this.safeString(e,"PrimaryCurrencyCode"),r=this.safeString(e,"SecondaryCurrencyCode");let a;void 0!==s&&void 0!==r&&(a=s+"/"+r);const n=(t=this.safeMarket(a,t,"/")).symbol,o=this.safeString(e,"LastPrice");return this.safeTicker({symbol:n,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"DayHighestPrice"),low:this.safeString(e,"DayLowestPrice"),bid:this.safeString(e,"CurrentHighestBidPrice"),bidVolume:void 0,ask:this.safeString(e,"CurrentLowestOfferPrice"),askVolume:void 0,vwap:void 0,open:void 0,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"DayAvgPrice"),baseVolume:this.safeString(e,"DayVolumeXbtInSecondaryCurrrency"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={primaryCurrencyCode:i.baseId,secondaryCurrencyCode:i.quoteId},r=await this.publicGetGetMarketSummary(this.extend(s,t));return this.parseTicker(r,i)}parseOrder(e,t=undefined){let i;const s=this.safeString(e,"PrimaryCurrencyCode"),a=this.safeString(e,"SecondaryCurrencyCode");let n,o;void 0!==s&&void 0!==a?(n=this.safeCurrencyCode(s),o=this.safeCurrencyCode(a),i=n+"/"+o):void 0!==t&&(i=t.symbol,n=t.base,o=t.quote);let d,c=this.safeString2(e,"Type","OrderType");void 0!==c&&(c.indexOf("Bid")>=0?d="buy":c.indexOf("Offer")>=0&&(d="sell"),c.indexOf("Market")>=0?c="market":c.indexOf("Limit")>=0&&(c="limit"));const h=this.parse8601(this.safeString(e,"CreatedTimestampUtc")),u=this.safeString(e,"VolumeFilled"),l=this.safeString(e,"FeePercent");let p;return void 0!==l&&void 0!==u&&(p=r.O.stringMul(l,u)),this.safeOrder({info:e,id:this.safeString(e,"OrderGuid"),clientOrderId:void 0,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,symbol:i,type:c,timeInForce:void 0,postOnly:void 0,side:d,price:this.safeString(e,"Price"),stopPrice:void 0,triggerPrice:void 0,cost:this.safeString(e,"Value"),average:this.safeString(e,"AvgPrice"),amount:this.safeString2(e,"VolumeOrdered","Volume"),filled:u,remaining:this.safeString(e,"Outstanding"),status:this.parseOrderStatus(this.safeString(e,"Status")),fee:{rate:l,cost:p,currency:n},trades:void 0},t)}parseOrderStatus(e){return this.safeString({Open:"open",PartiallyFilled:"open",Filled:"closed",PartiallyFilledAndCancelled:"canceled",Cancelled:"canceled",PartiallyFilledAndExpired:"canceled",Expired:"canceled"},e,e)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=await this.privatePostGetOrderDetails(this.extend({orderGuid:e},i));let r;return void 0!==t&&(r=this.market(t)),this.parseOrder(s,r)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.ordered({});let a;void 0!==e&&(a=this.market(e),r.primaryCurrencyCode=a.baseId,r.secondaryCurrencyCode=a.quoteId),void 0===i&&(i=50),r.pageIndex=1,r.pageSize=i;const n=await this.privatePostGetOpenOrders(this.extend(r,s)),o=this.safeValue(n,"Data",[]);return this.parseOrders(o,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.ordered({});let a;void 0!==e&&(a=this.market(e),r.primaryCurrencyCode=a.baseId,r.secondaryCurrencyCode=a.quoteId),void 0===i&&(i=50),r.pageIndex=1,r.pageSize=i;const n=await this.privatePostGetClosedOrders(this.extend(r,s)),o=this.safeValue(n,"Data",[]);return this.parseOrders(o,a,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=50,s={}){await this.loadMarkets();const r=this.safeInteger(s,"pageIndex",1);void 0===i&&(i=50);const a=this.ordered({pageIndex:r,pageSize:i}),n=await this.privatePostGetTrades(this.extend(a,s));let o;return void 0!==e&&(o=this.market(e)),this.parseTrades(n.Data,o,t,i)}parseTrade(e,t=undefined){const i=this.parse8601(e.TradeTimestampUtc),s=this.safeString(e,"TradeGuid"),a=this.safeString(e,"OrderGuid"),n=this.safeString2(e,"Price","SecondaryCurrencyTradePrice"),o=this.safeString2(e,"VolumeTraded","PrimaryCurrencyAmount"),d=this.parseNumber(n),c=this.parseNumber(o),h=this.parseNumber(r.O.stringMul(n,o)),u=this.safeString(e,"PrimaryCurrencyCode"),l=this.safeString(e,"SecondaryCurrencyCode");let p;void 0!==u&&void 0!==l&&(p=u+"/"+l);const f=this.safeSymbol(p,t,"/");let m=this.safeString(e,"OrderType");return void 0!==m&&(m.indexOf("Bid")>=0?m="buy":m.indexOf("Offer")>=0&&(m="sell")),this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:f,order:a,type:void 0,side:m,takerOrMaker:void 0,price:d,amount:c,cost:h,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={primaryCurrencyCode:r.baseId,secondaryCurrencyCode:r.quoteId,numberOfRecentTradesToRetrieve:50},n=await this.publicGetGetRecentTrades(this.extend(a,s));return this.parseTrades(n.Trades,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostGetBrokerageFees(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"CurrencyCode"),a=this.safeCurrencyCode(r),n=this.safeNumber(s,"Fee");i[a]={info:s,fee:n}}const s={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],r=this.market(t),a=this.safeValue(i,r.base,{});s[t]={info:this.safeValue(a,"info"),symbol:t,maker:this.safeNumber(a,"fee"),taker:this.safeNumber(a,"fee"),percentage:!0,tierBased:!0}}return s}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=this.capitalize(t),d="privatePostPlace"+o+"Order";let c=o;c+="sell"===i?"Offer":"Bid";const h=this.ordered({primaryCurrencyCode:n.baseId,secondaryCurrencyCode:n.quoteId,orderType:c});"limit"===t&&(h.price=r),h.volume=s;const u=await this[d](this.extend(h,a));return this.safeOrder({info:u,id:u.OrderGuid},n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderGuid:e};return await this.privatePostCancelOrder(this.extend(s,i))}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let o=this.urls.api[t]+"/"+e;if("public"===t)Object.keys(s).length&&(o+="?"+this.urlencode(s));else{this.checkRequiredCredentials();const e=this.nonce(),t=[o,"apiKey="+this.apiKey,"nonce="+e.toString()],i=Object.keys(s);for(let e=0;e<i.length;e++){const r=i[e],a=s[r].toString();t.push(r+"="+a)}const d=t.join(","),c=this.hmac(this.encode(d),this.encode(this.secret),n.J),h=this.ordered({});h.apiKey=this.apiKey,h.nonce=e,h.signature=c.toUpperCase();for(let e=0;e<i.length;e++){const t=i[e];h[t]=s[t]}a=this.json(h),r={"Content-Type":"application/json"}}return{url:o,method:i,body:a,headers:r}}}},1605:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(7872),r=i(6689),a=i(9292),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"indodax",name:"INDODAX",countries:["ID"],rateLimit:100,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDeposit:!1,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFee:!0,fetchTransactionFees:!1,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},version:"2.0",urls:{logo:"https://user-images.githubusercontent.com/51840849/87070508-9358c880-c221-11ea-8dc5-5391afbbb422.jpg",api:{public:"https://indodax.com/api",private:"https://indodax.com/tapi"},www:"https://www.indodax.com",doc:"https://github.com/btcid/indodax-official-api-docs",referral:"https://indodax.com/ref/testbitcoincoid/1"},api:{public:{get:{server_time:5,pairs:5,price_increments:5,summaries:5,ticker_all:5,"{pair}/ticker":5,"{pair}/trades":5,"{pair}/depth":5}},private:{post:{getInfo:4,transHistory:4,trade:1,tradeHistory:4,openOrders:4,orderHistory:4,getOrder:4,cancelOrder:4,withdrawFee:4,withdrawCoin:4,listDownline:4,checkDownline:4,createVoucher:4}}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:.003}},exceptions:{exact:{invalid_pair:r.BadSymbol,"Insufficient balance.":r.InsufficientFunds,"invalid order.":r.OrderNotFound,"Invalid credentials. API not found or session has expired.":r.AuthenticationError,"Invalid credentials. Bad sign.":r.AuthenticationError},broad:{"Minimum price":r.InvalidOrder,"Minimum order":r.InvalidOrder}},options:{recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1},commonCurrencies:{STR:"XLM",BCHABC:"BCH",BCHSV:"BSV",DRK:"DASH",NEM:"XEM"},precisionMode:a.sh})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=await this.publicGetServerTime(e);return this.safeInteger(t,"server_time")}async fetchMarkets(e={}){const t=await this.publicGetPairs(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"ticker_id"),a=this.safeString(s,"traded_currency"),n=this.safeString(s,"base_currency"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=this.safeInteger(s,"is_maintenance");i.push({id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!c,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(s,"trade_fee_percent"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,percentage:!0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber(this.parsePrecision(this.safeString(s,"price_round"))),cost:this.parseNumber(this.parsePrecision(this.safeString(s,"volume_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"trade_min_traded_currency"),max:void 0},price:{min:this.safeNumber(s,"trade_min_base_currency"),max:void 0},cost:{min:void 0,max:void 0}},info:s})}return i}parseBalance(e){const t=this.safeValue(e,"return",{}),i=this.safeValue(t,"balance",{}),s=this.safeValue(t,"balance_hold",{}),r=this.safeTimestamp(t,"server_time"),a={info:e,timestamp:r,datetime:this.iso8601(r)},n=Object.keys(i);for(let e=0;e<n.length;e++){const t=n[e],r=this.safeCurrencyCode(t),o=this.account();o.free=this.safeString(i,t),o.used=this.safeString(s,t),a[r]=o}return this.safeBalance(a)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id},a=await this.publicGetPairDepth(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"buy","sell")}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"server_time"),r="vol_"+t.baseId.toLowerCase(),a="vol_"+t.quoteId.toLowerCase(),n=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,r),quoteVolume:this.safeString(e,a),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetPairTicker(this.extend(s,t)),a=this.safeValue(r,"ticker",{});return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTickerAll(t),s=this.safeValue(i,"tickers");return this.parseTickers(s,e)}parseTrade(e,t=undefined){const i=this.safeTimestamp(e,"date");return this.safeTrade({id:this.safeString(e,"tid"),info:e,timestamp:i,datetime:this.iso8601(i),symbol:this.safeSymbol(void 0,t),type:void 0,side:this.safeString(e,"type"),order:void 0,takerOrMaker:void 0,price:this.safeString(e,"price"),amount:this.safeString(e,"amount"),cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetPairTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseOrderStatus(e){return this.safeString({open:"open",filled:"closed",cancelled:"canceled"},e,e)}parseOrder(e,t=undefined){let i;"type"in e&&(i=e.type);const s=this.parseOrderStatus(this.safeString(e,"status","open"));let r,a;const n=this.safeString(e,"price");let o,d;if(void 0!==t){r=t.symbol;let i=t.quoteId,s=t.baseId;"idr"===t.quoteId&&"order_rp"in e&&(i="rp"),"idr"===t.baseId&&"remain_rp"in e&&(s="rp"),a=this.safeString(e,"order_"+i),a||(o=this.safeString(e,"order_"+s),d=this.safeString(e,"remain_"+s))}const c=this.safeInteger(e,"submit_time"),h=this.safeString(e,"order_id");return this.safeOrder({info:e,id:h,clientOrderId:void 0,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,symbol:r,type:"limit",timeInForce:void 0,postOnly:void 0,side:i,price:n,stopPrice:void 0,triggerPrice:void 0,cost:a,average:void 0,amount:o,filled:void 0,remaining:d,status:s,fee:void 0,trades:void 0})}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol");await this.loadMarkets();const s=this.market(t),a={pair:s.id,order_id:e},n=await this.privatePostGetOrder(this.extend(a,i)),o=n.return,d=this.parseOrder(this.extend({id:e},o.order),s);return this.extend({info:n},d)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.pair=r.id);const n=(await this.privatePostOpenOrders(this.extend(a,s))).return.orders;if(!n)return[];if(void 0!==e)return this.parseOrders(n,r,t,i);const o=Object.keys(n);let d=[];for(let e=0;e<o.length;e++){const s=o[e],a=n[s];r=this.safeMarket(s);const c=this.parseOrders(a,r,t,i);d=this.arrayConcat(d,c)}return d}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const a={};let n;void 0!==e&&(n=this.market(e),e=n.symbol,a.pair=n.id);const o=await this.privatePostOrderHistory(this.extend(a,s));let d=this.parseOrders(o.return.orders,n);return d=this.filterBy(d,"status","closed"),this.filterBySymbolSinceLimit(d,e,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){if("limit"!==t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e),d={pair:o.id,type:i,price:a},c=o.baseId;"buy"===i?d[o.quoteId]=s*a:d[o.baseId]=s,d[c]=s;const h=await this.privatePostTrade(this.extend(d,n)),u=this.safeValue(h,"return",{}),l=this.safeString(u,"order_id");return this.safeOrder({info:h,id:l},o)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");const s=this.safeValue(i,"side");if(void 0===s)throw new r.ArgumentsRequired(this.id+' cancelOrder() requires an extra "side" param');await this.loadMarkets();const a={order_id:e,pair:this.market(t).id,type:s};return await this.privatePostCancelOrder(this.extend(a,i))}async fetchTransactionFee(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.privatePostWithdrawFee(this.extend(s,t)),a=this.safeValue(r,"return",{}),n=this.safeString(a,"currency");return{info:r,rate:this.safeNumber(a,"withdraw_fee"),currency:this.safeCurrencyCode(n,i)}}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};if(void 0!==t){const e=this.iso8601(t).slice(0,10);r.start=e,r.end=this.iso8601(this.milliseconds()).slice(0,10)}const a=await this.privatePostTransHistory(this.extend(r,s)),n=this.safeValue(a,"return",{}),o=this.safeValue(n,"withdraw",{}),d=this.safeValue(n,"deposit",{});let c,h=[];if(void 0===e){let e=Object.keys(o);for(let t=0;t<e.length;t++){const i=e[t];h=this.arrayConcat(h,o[i])}e=Object.keys(d);for(let t=0;t<e.length;t++){const i=e[t];h=this.arrayConcat(h,d[i])}}else{c=this.currency(e);const t=this.safeValue(o,c.id,[]),i=this.safeValue(d,c.id,[]);h=this.arrayConcat(t,i)}return this.parseTransactions(h,c,t,i)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n=this.milliseconds(),o={currency:a.id,withdraw_amount:t,withdraw_address:i,request_id:n.toString()};s&&(o.withdraw_memo=s);const d=await this.privatePostWithdrawCoin(this.extend(o,r));return this.parseTransaction(d,a)}parseTransaction(e,t=undefined){const i=this.safeString(e,"status"),s=this.safeTimestamp2(e,"success_time","submit_time"),r=this.safeString(e,"deposit_id"),a=this.safeNumber(e,"fee");let n;return void 0!==a&&(n={currency:this.safeCurrencyCode(void 0,t),cost:a,rate:void 0}),{id:this.safeString2(e,"withdraw_id","deposit_id"),txid:this.safeString2(e,"txid","tx"),timestamp:s,datetime:this.iso8601(s),network:void 0,addressFrom:void 0,address:this.safeString(e,"withdraw_address"),addressTo:void 0,amount:this.safeNumberN(e,["amount","withdraw_amount","deposit_amount"]),type:void 0===r?"withdraw":"deposit",currency:this.safeCurrencyCode(void 0,t),status:this.parseTransactionStatus(i),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:this.safeString(e,"withdraw_memo"),fee:n,info:e}}parseTransactionStatus(e){return this.safeString({success:"ok"},e,e)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let o=this.urls.api[t];return"public"===t?o+="/"+this.implodeParams(e,s):(this.checkRequiredCredentials(),a=this.urlencode(this.extend({method:e,timestamp:this.nonce(),recvWindow:this.options.recvWindow},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),n.o)}),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;if(Array.isArray(o))return;const h=this.safeValue(o,"error","");if(!("success"in o)&&""===h)return;if(1===this.safeInteger(o,"success",0)){if("return"in o)return;throw new r.ExchangeError(this.id+": malformed response: "+this.json(o))}const u=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,u),this.throwBroadlyMatchedException(this.exceptions.broad,h,u),new r.ExchangeError(u)}}},1679:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(329),r=i(6689),a=i(2194),n=i(9292),o=i(1372),d=i(7110);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"itbit",name:"itBit",countries:["US"],rateLimit:2e3,version:"v1",has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/27822159-66153620-60ad-11e7-89e7-005f6d7f3de0.jpg",api:{rest:"https://api.itbit.com"},www:"https://www.itbit.com",doc:["https://api.itbit.com/docs","https://www.itbit.com/api"]},api:{public:{get:["markets/{symbol}/ticker","markets/{symbol}/order_book","markets/{symbol}/trades"]},private:{get:["wallets","wallets/{walletId}","wallets/{walletId}/balances/{currencyCode}","wallets/{walletId}/funding_history","wallets/{walletId}/trades","wallets/{walletId}/orders","wallets/{walletId}/orders/{id}"],post:["wallet_transfers","wallets","wallets/{walletId}/cryptocurrency_deposits","wallets/{walletId}/cryptocurrency_withdrawals","wallets/{walletId}/orders","wire_withdrawal"],delete:["wallets/{walletId}/orders/{id}"]}},markets:{"BTC/USD":{id:"XBTUSD",symbol:"BTC/USD",base:"BTC",quote:"USD",baseId:"XBT",quoteId:"USD",type:"spot",spot:!0},"BTC/SGD":{id:"XBTSGD",symbol:"BTC/SGD",base:"BTC",quote:"SGD",baseId:"XBT",quoteId:"SGD",type:"spot",spot:!0},"BTC/EUR":{id:"XBTEUR",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"XBT",quoteId:"EUR",type:"spot",spot:!0},"ETH/USD":{id:"ETHUSD",symbol:"ETH/USD",base:"ETH",quote:"USD",baseId:"ETH",quoteId:"USD",type:"spot",spot:!0},"ETH/EUR":{id:"ETHEUR",symbol:"ETH/EUR",base:"ETH",quote:"EUR",baseId:"ETH",quoteId:"EUR",type:"spot",spot:!0},"ETH/SGD":{id:"ETHSGD",symbol:"ETH/SGD",base:"ETH",quote:"SGD",baseId:"ETH",quoteId:"SGD",type:"spot",spot:!0},PAXGUSD:{id:"PAXGUSD",symbol:"PAXG/USD",base:"PAXG",quote:"USD",baseId:"PAXG",quoteId:"USD",type:"spot",spot:!0},BCHUSD:{id:"BCHUSD",symbol:"BCH/USD",base:"BCH",quote:"USD",baseId:"BCH",quoteId:"USD",type:"spot",spot:!0},LTCUSD:{id:"LTCUSD",symbol:"LTC/USD",base:"LTC",quote:"USD",baseId:"LTC",quoteId:"USD",type:"spot",spot:!0}},fees:{trading:{maker:this.parseNumber("-0.0003"),taker:this.parseNumber("0.0035")}},commonCurrencies:{XBT:"BTC"},precisionMode:n.sh})}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id},a=await this.publicGetMarketsSymbolOrderBook(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeString(e,"serverTimeUTC");if(!s)throw new r.ExchangeError(this.id+" fetchTicker() returned a bad response: "+this.json(e));const n=this.parse8601(s),o=this.safeString(e,"vwap24h"),d=this.safeString(e,"volume24h"),c=a.O.stringMul(d,o),h=this.safeString(e,"lastPrice");return this.safeTicker({symbol:i,timestamp:n,datetime:this.iso8601(n),high:this.safeString(e,"high24h"),low:this.safeString(e,"low24h"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:o,open:this.safeString(e,"openToday"),close:h,last:h,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:c,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetMarketsSymbolTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=this.safeString2(e,"executionId","matchNumber"),s=this.parse8601(this.safeString(e,"timestamp")),r=this.safeString(e,"direction"),n=this.safeString(e,"orderId");let o=this.safeNumber(e,"commissionPaid");const d=this.safeString(e,"commissionCurrency"),c=this.safeCurrencyCode(d);let h=this.safeNumber(e,"rebatesApplied");void 0!==h&&(h=-h);const u=this.safeString(e,"rebateCurrency"),l=this.safeCurrencyCode(u),p=this.safeString2(e,"price","rate"),f=this.safeString2(e,"currency1Amount","amount"),m=this.parseNumber(p),v=this.parseNumber(f),g=this.parseNumber(a.O.stringMul(p,f));let y;if(void 0!==this.safeString(e,"instrument")){const t=this.safeString(e,"currency1"),i=this.safeString(e,"currency2");y=this.safeCurrencyCode(t)+"/"+this.safeCurrencyCode(i)}const b={info:e,id:i,timestamp:s,datetime:this.iso8601(s),symbol:y,order:n,type:void 0,side:r,takerOrMaker:void 0,price:m,amount:v,cost:g,fee:void 0};return void 0!==o&&(void 0!==h?c===l?(o=this.sum(o,h),b.fee={cost:o,currency:c}):b.fees=[{cost:o,currency:c},{cost:h,currency:l}]:b.fee={cost:o,currency:c}),"fee"in b||"fees"in b||(b.fee=void 0),b}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.safeString(s,"walletId");if(void 0===a)throw new r.ArgumentsRequired(this.id+" fetchTransactions() requires a walletId parameter");const n={walletId:a};void 0!==i&&(n.perPage=i);const o=(await this.privateGetWalletsWalletIdFundingHistory(this.extend(n,s))).fundingHistory,d=[];for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,"time"),s=this.parse8601(i),r=this.safeString(t,"currency"),a=this.safeString(t,"destinationAddress"),n=this.safeString(t,"txnHash"),c=this.safeStringLower(t,"transactionType"),h=this.safeString(t,"status"),u=this.parseTransferStatus(h);d.push({id:this.safeString(t,"withdrawalId"),timestamp:s,datetime:this.iso8601(s),currency:this.safeCurrencyCode(r),address:a,tag:void 0,txid:n,type:c,status:u,amount:this.safeNumber(t,"amount"),fee:void 0,info:t})}return d}parseTransferStatus(e){return this.safeString({cancelled:"canceled",completed:"ok"},e,"pending")}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.safeString(s,"walletId");if(void 0===a)throw new r.ExchangeError(this.id+" fetchMyTrades() requires a walletId parameter");const n={walletId:a};void 0!==t&&(n.rangeStart=this.ymdhms(t,"T")),void 0!==i&&(n.perPage=i);const o=await this.privateGetWalletsWalletIdTrades(this.extend(n,s)),d=this.safeValue(o,"tradingHistory",[]);let c;return void 0!==e&&(c=this.market(e)),this.parseTrades(d,c,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetMarketsSymbolTrades(this.extend(a,s)),o=this.safeValue(n,"recentTrades",[]);return this.parseTrades(o,r,t,i)}parseBalance(e){const t=e[0].balances,i={info:e};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"availableBalance"),n.total=this.safeString(s,"totalBalance"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.fetchWallets(e);return this.parseBalance(t)}async fetchWallets(e={}){if(await this.loadMarkets(),!this.uid)throw new r.AuthenticationError(this.id+" fetchWallets() requires uid API credential");const t={userId:this.uid};return await this.privateGetWallets(this.extend(t,e))}async fetchWallet(e,t={}){await this.loadMarkets();const i={walletId:e};return await this.privateGetWalletsWalletId(this.extend(i,t))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"open"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"filled"},s))}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){let a;if(await this.loadMarkets(),void 0!==e&&(a=this.market(e)),!("walletId"in s))throw new r.ExchangeError(this.id+" fetchOrders() requires a walletId parameter");const n={walletId:s.walletId},o=await this.privateGetWalletsWalletIdOrders(this.extend(n,s));return this.parseOrders(o,a,t,i)}parseOrderStatus(e){return this.safeString({submitted:"open",open:"open",filled:"closed",cancelled:"canceled",rejected:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"side"),s=this.safeString(e,"type"),r=this.safeString(e,"instrument"),a=this.safeSymbol(r,t),n=this.safeString(e,"createdTime"),o=this.parse8601(n),d=this.safeString(e,"amount"),c=this.safeString(e,"amountFilled"),h=this.safeString(e,"price"),u=this.safeString(e,"volumeWeightedAveragePrice"),l=this.safeString(e,"clientOrderIdentifier"),p=this.safeString(e,"id"),f="True"===this.safeString(e,"postOnly");return this.safeOrder({id:p,clientOrderId:l,info:e,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,status:this.parseOrderStatus(this.safeString(e,"status")),symbol:a,type:s,timeInForce:void 0,postOnly:f,side:i,price:h,stopPrice:void 0,triggerPrice:void 0,cost:void 0,average:u,amount:d,filled:c,remaining:void 0,fee:void 0,trades:void 0},t)}nonce(){return this.milliseconds()}async createOrder(e,t,i,s,a=undefined,n={}){if(await this.loadMarkets(),"market"===t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");if(!("walletId"in n))throw new r.ExchangeError(this.id+" createOrder() requires a walletId parameter");s=s.toString(),a=a.toString();const o=this.market(e),d={side:i,type:t,currency:o.id.replace(o.quote,""),amount:s,display:s,price:a,instrument:o.id},c=await this.privatePostWalletsWalletIdOrders(this.extend(d,n));return this.safeOrder({info:c,id:c.id},o)}async fetchOrder(e,t=undefined,i={}){if(await this.loadMarkets(),!("walletId"in i))throw new r.ExchangeError(this.id+" fetchOrder() requires a walletId parameter");const s={id:e},a=await this.privateGetWalletsWalletIdOrdersId(this.extend(s,i));return this.parseOrder(a)}async cancelOrder(e,t=undefined,i={}){if(!("walletId"in i))throw new r.ExchangeError(this.id+" cancelOrder() requires a walletId parameter");const s={id:e};return await this.privateDeleteWalletsWalletIdOrdersId(this.extend(s,i))}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,s);const c=this.omit(s,this.extractParams(e));if("GET"===i&&Object.keys(c).length&&(n+="?"+this.urlencode(c)),"POST"===i&&Object.keys(c).length&&(a=this.json(c)),"private"===t){this.checkRequiredCredentials();const e=this.nonce().toString(),t=e,s=[i,n,"POST"===i?a:"",e,t],c=e+this.json(s).replace("\\/","/"),h=this.hash(this.encode(c),o.J,"binary"),u=this.encode(n),l=this.binaryConcat(u,h),p=this.hmac(l,this.encode(this.secret),d.o,"base64");r={Authorization:this.apiKey+":"+p,"Content-Type":"application/json","X-Auth-Timestamp":t,"X-Auth-Nonce":e}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&void 0!==this.safeString(o,"code"))throw new r.ExchangeError(this.id+" "+this.json(o))}}},9922:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(3203),r=i(6689),a=i(2194),n=i(9292),o=i(1372),d=i(7110);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"kraken",name:"Kraken",countries:["US"],version:"0",rateLimit:1e3,certified:!1,pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowInterest:!1,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLedgerEntry:!0,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:"emulated",fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchWithdrawals:!0,setLeverage:!1,setMarginMode:!1,withdraw:!0},timeframes:{"1m":1,"5m":5,"15m":15,"30m":30,"1h":60,"4h":240,"1d":1440,"1w":10080,"2w":21600},urls:{logo:"https://user-images.githubusercontent.com/51840849/76173629-fc67fb00-61b1-11ea-84fe-f2de582f58a3.jpg",api:{public:"https://api.kraken.com",private:"https://api.kraken.com",zendesk:"https://kraken.zendesk.com/api/v2/help_center/en-us/articles"},www:"https://www.kraken.com",doc:"https://www.kraken.com/features/api",fees:"https://www.kraken.com/en-us/features/fee-schedule"},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0026"),maker:this.parseNumber("0.0016"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0026")],[this.parseNumber("50000"),this.parseNumber("0.0024")],[this.parseNumber("100000"),this.parseNumber("0.0022")],[this.parseNumber("250000"),this.parseNumber("0.0020")],[this.parseNumber("500000"),this.parseNumber("0.0018")],[this.parseNumber("1000000"),this.parseNumber("0.0016")],[this.parseNumber("2500000"),this.parseNumber("0.0014")],[this.parseNumber("5000000"),this.parseNumber("0.0012")],[this.parseNumber("10000000"),this.parseNumber("0.0001")]],maker:[[this.parseNumber("0"),this.parseNumber("0.0016")],[this.parseNumber("50000"),this.parseNumber("0.0014")],[this.parseNumber("100000"),this.parseNumber("0.0012")],[this.parseNumber("250000"),this.parseNumber("0.0010")],[this.parseNumber("500000"),this.parseNumber("0.0008")],[this.parseNumber("1000000"),this.parseNumber("0.0006")],[this.parseNumber("2500000"),this.parseNumber("0.0004")],[this.parseNumber("5000000"),this.parseNumber("0.0002")],[this.parseNumber("10000000"),this.parseNumber("0.0")]]}}},handleContentTypeApplicationZip:!0,api:{zendesk:{get:["360000292886","201893608"]},public:{get:{Assets:1,AssetPairs:1,Depth:1,OHLC:1,Spread:1,Ticker:1,Time:1,Trades:1}},private:{post:{AddOrder:0,AddOrderBatch:0,AddExport:3,Balance:3,CancelAll:3,CancelOrder:0,CancelOrderBatch:0,ClosedOrders:6,DepositAddresses:3,DepositMethods:3,DepositStatus:3,EditOrder:0,ExportStatus:3,GetWebSocketsToken:3,Ledgers:6,OpenOrders:3,OpenPositions:3,QueryLedgers:3,QueryOrders:3,QueryTrades:3,RetrieveExport:3,RemoveExport:3,TradeBalance:3,TradesHistory:6,TradeVolume:3,Withdraw:3,WithdrawCancel:3,WithdrawInfo:3,WithdrawStatus:3,Stake:3,Unstake:3,"Staking/Assets":3,"Staking/Pending":3,"Staking/Transactions":3}}},commonCurrencies:{LUNA:"LUNC",LUNA2:"LUNA",REPV2:"REP",REP:"REPV1",UST:"USTC",XBT:"BTC","XBT.M":"BTC.M",XDG:"DOGE"},options:{marketsByAltname:{},delistedMarketsById:{},inactiveCurrencies:["CAD","USD","JPY","GBP"],networks:{ETH:"ERC20",TRX:"TRC20"},depositMethods:{"1INCH":"1inch (1INCH)",AAVE:"Aave",ADA:"ADA",ALGO:"Algorand",ANKR:"ANKR (ANKR)",ANT:"Aragon (ANT)",ATOM:"Cosmos",AXS:"Axie Infinity Shards (AXS)",BADGER:"Bager DAO (BADGER)",BAL:"Balancer (BAL)",BAND:"Band Protocol (BAND)",BAT:"BAT",BCH:"Bitcoin Cash",BNC:"Bifrost (BNC)",BNT:"Bancor (BNT)",BTC:"Bitcoin",CHZ:"Chiliz (CHZ)",COMP:"Compound (COMP)",CQT:"\tCovalent Query Token (CQT)",CRV:"Curve DAO Token (CRV)",CTSI:"Cartesi (CTSI)",DAI:"Dai",DASH:"Dash",DOGE:"Dogecoin",DOT:"Polkadot",DYDX:"dYdX (DYDX)",ENJ:"Enjin Coin (ENJ)",EOS:"EOS",ETC:"Ether Classic (Hex)",ETH:"Ether (Hex)",EWT:"Energy Web Token",FEE:"Kraken Fee Credit",FIL:"Filecoin",FLOW:"Flow",GHST:"Aavegotchi (GHST)",GNO:"GNO",GRT:"GRT",ICX:"Icon",INJ:"Injective Protocol (INJ)",KAR:"Karura (KAR)",KAVA:"Kava",KEEP:"Keep Token (KEEP)",KNC:"Kyber Network (KNC)",KSM:"Kusama",LINK:"Link",LPT:"Livepeer Token (LPT)",LRC:"Loopring (LRC)",LSK:"Lisk",LTC:"Litecoin",MANA:"MANA",MATIC:"Polygon (MATIC)",MINA:"Mina",MIR:"Mirror Protocol (MIR)",MKR:"Maker (MKR)",MLN:"MLN",MOVR:"Moonriver (MOVR)",NANO:"NANO",OCEAN:"OCEAN",OGN:"Origin Protocol (OGN)",OMG:"OMG",OXT:"Orchid (OXT)",OXY:"Oxygen (OXY)",PAXG:"PAX (Gold)",PERP:"Perpetual Protocol (PERP)",PHA:"Phala (PHA)",QTUM:"QTUM",RARI:"Rarible (RARI)",RAY:"Raydium (RAY)",REN:"Ren Protocol (REN)",REP:"REPv2",REPV1:"REP",SAND:"The Sandbox (SAND)",SC:"Siacoin",SDN:"Shiden (SDN)",SOL:"Solana",SNX:"Synthetix  Network (SNX)",SRM:"Serum",STORJ:"Storj (STORJ)",SUSHI:"Sushiswap (SUSHI)",TBTC:"tBTC",TRX:"Tron",UNI:"UNI",USDC:"USDC",USDT:"Tether USD (ERC20)","USDT-TRC20":"Tether USD (TRC20)",WAVES:"Waves",WBTC:"Wrapped Bitcoin (WBTC)",XLM:"Stellar XLM",XMR:"Monero",XRP:"Ripple XRP",XTZ:"XTZ",YFI:"YFI",ZEC:"Zcash (Transparent)",ZRX:"0x (ZRX)"}},precisionMode:n.sh,exceptions:{"EQuery:Invalid asset pair":r.BadSymbol,"EAPI:Invalid key":r.AuthenticationError,"EFunding:Unknown withdraw key":r.InvalidAddress,"EFunding:Invalid amount":r.InsufficientFunds,"EService:Unavailable":r.ExchangeNotAvailable,"EDatabase:Internal error":r.ExchangeNotAvailable,"EService:Busy":r.ExchangeNotAvailable,"EQuery:Unknown asset":r.BadSymbol,"EAPI:Rate limit exceeded":r.DDoSProtection,"EOrder:Rate limit exceeded":r.DDoSProtection,"EGeneral:Internal error":r.ExchangeNotAvailable,"EGeneral:Temporary lockout":r.DDoSProtection,"EGeneral:Permission denied":r.PermissionDenied,"EOrder:Unknown order":r.InvalidOrder,"EOrder:Order minimum not met":r.InvalidOrder,"EGeneral:Invalid arguments":r.BadRequest,"ESession:Invalid session":r.AuthenticationError,"EAPI:Invalid nonce":r.InvalidNonce,"EFunding:No funding method":r.BadRequest,"EFunding:Unknown asset":r.BadSymbol,"EService:Market in post_only mode":r.OnMaintenance,"EGeneral:Too many requests":r.DDoSProtection,"ETrade:User Locked":r.AccountSuspended}})}feeToPrecision(e,t){return this.decimalToPrecision(t,n.tk,this.markets[e].precision.amount,this.precisionMode)}async fetchMarkets(e={}){const t=await this.publicGetAssetPairs(e),i=this.safeValue(t,"result",{}),s=Object.keys(i);let r=[];for(let e=0;e<s.length;e++){const t=s[e],n=i[t],o=this.safeString(n,"base"),d=this.safeString(n,"quote"),c=this.safeCurrencyCode(o),h=this.safeCurrencyCode(d),u=t.indexOf(".d")>=0,l=this.safeString(n,"altname"),p=this.safeValue(n,"fees_maker",[]),f=this.safeValue(p,0,[]),m=this.safeString(f,1);let v;void 0!==m&&(v=this.parseNumber(a.O.stringDiv(m,"100")));const g=this.safeValue(n,"fees",[]),y=this.safeValue(g,0,[]),b=this.safeString(y,1);let w;void 0!==b&&(w=this.parseNumber(a.O.stringDiv(b,"100")));const S=this.safeValue(n,"leverage_buy",[]),P=S.length,k=this.parseNumber(this.parsePrecision(this.safeString(n,"pair_decimals")));r.push({id:t,symbol:u?l:c+"/"+h,base:c,quote:h,settle:void 0,baseId:o,quoteId:d,settleId:void 0,darkpool:u,altname:n.altname,type:"spot",spot:!0,margin:P>0,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:w,maker:v,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(n,"lot_decimals"))),price:k},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(S,P-1,1)},amount:{min:this.safeNumber(n,"ordermin"),max:void 0},price:{min:k,max:void 0},cost:{min:void 0,max:void 0}},info:n})}return r=this.appendInactiveMarkets(r),this.options.marketsByAltname=this.indexBy(r,"altname"),r}safeCurrency(e,t=undefined){if(void 0!==e&&e.length>3&&(0===e.indexOf("X")||0===e.indexOf("Z"))){if(e.indexOf(".")>0)return super.safeCurrency(e,t);e=e.slice(1)}return super.safeCurrency(e,t)}appendInactiveMarkets(e){const t={amount:this.parseNumber("1e-8"),price:this.parseNumber("1e-8")},i={darkpool:!1,info:void 0,maker:void 0,taker:void 0,active:!1,precision:t,limits:{amount:{min:t.amount,max:void 0},price:{min:t.price,max:void 0},cost:{min:void 0,max:void 0}}},s=[];for(let t=0;t<s.length;t++)e.push(this.extend(i,s[t]));return e}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),i=this.safeValue(t,"result",{}),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){const t=s[e],a=i[t],n=this.safeCurrencyCode(this.safeString(a,"altname")),o=this.parseNumber(this.parsePrecision(this.safeString(a,"decimals"))),d=!this.inArray(n,this.options.inactiveCurrencies);r[n]={id:t,code:n,info:a,name:n,active:d,deposit:void 0,withdraw:void 0,fee:void 0,precision:o,limits:{amount:{min:o,max:void 0},withdraw:{min:void 0,max:void 0}}}}return r}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id,"fee-info":!0},r=await this.privatePostTradeVolume(this.extend(s,t)),a=this.safeValue(r,"result",{});return this.parseTradingFee(a,i)}parseTradingFee(e,t){const i=this.safeValue(e,"fees_maker",{}),s=this.safeValue(e,"fees",{}),r=this.safeValue(i,t.id,{}),a=this.safeValue(s,t.id,{});return{info:e,symbol:t.symbol,maker:this.safeNumber(r,"fee"),taker:this.safeNumber(a,"fee"),percentage:!0,tierBased:!0}}parseBidAsk(e,t=0,i=1){return[this.safeNumber(e,t),this.safeNumber(e,i),this.safeInteger(e,2)]}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);if(s.darkpool)throw new r.ExchangeError(this.id+" fetchOrderBook() does not provide an order book for darkpool symbol "+e);const a={pair:s.id};void 0!==t&&(a.count=t);const n=await this.publicGetDepth(this.extend(a,i)),o=this.safeValue(n,"result",{});let d=this.safeValue(o,s.id);const c=this.safeValue(s,"info",{}),h=this.safeValue(c,"wsname");return void 0!==h&&(d=this.safeValue(o,h,d)),this.parseOrderBook(d,e)}parseTicker(e,t=undefined){const i=this.milliseconds(),s=this.safeSymbol(void 0,t),r=this.safeValue(e,"v",[]),n=this.safeString(r,1),o=this.safeValue(e,"p",[]),d=this.safeString(o,1),c=a.O.stringMul(n,d),h=this.safeValue(e,"c",[]),u=this.safeString(h,0),l=this.safeValue(e,"h",[]),p=this.safeValue(e,"l",[]),f=this.safeValue(e,"b",[]),m=this.safeValue(e,"a",[]);return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(l,1),low:this.safeString(p,1),bid:this.safeString(f,0),bidVolume:void 0,ask:this.safeString(m,0),askVolume:void 0,vwap:d,open:this.safeString(e,"o"),close:u,last:u,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:c,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==e){e=this.marketSymbols(e);const t=[];for(let i=0;i<e.length;i++){const s=e[i],r=this.markets[s];r.active&&!r.darkpool&&t.push(r.id)}i.pair=t.join(",")}const s=(await this.publicGetTicker(this.extend(i,t))).result,r=Object.keys(s),a={};for(let e=0;e<r.length;e++){const t=r[e],i=this.safeMarket(t),n=i.symbol,o=s[t];a[n]=this.parseTicker(o,i)}return this.filterByArray(a,"symbol",e)}async fetchTicker(e,t={}){if(await this.loadMarkets(),e.indexOf(".d")>=0)throw new r.ExchangeError(this.id+" fetchTicker() does not provide a ticker for darkpool symbol "+e);const i=this.market(e),s={pair:i.id},a=(await this.publicGetTicker(this.extend(s,t))).result[i.id];return this.parseTicker(a,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,6)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeInteger(this.timeframes,t),o={pair:a.id};o.interval=void 0!==n?n:t,void 0!==i&&(o.since=this.parseToInt((i-1)/1e3));const d=await this.publicGetOHLC(this.extend(o,r)),c=this.safeValue(d,"result",{}),h=this.safeValue(c,a.id,[]);return this.parseOHLCVs(h,a,t,i,s)}parseLedgerEntryType(e){return this.safeString({trade:"trade",withdrawal:"transaction",deposit:"transaction",transfer:"transfer",margin:"margin"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"id");let s;const r=this.safeString(e,"refid"),n=this.parseLedgerEntryType(this.safeString(e,"type")),o=this.safeCurrencyCode(this.safeString(e,"asset"),t);let d=this.safeString(e,"amount");a.O.stringLt(d,"0")?(s="out",d=a.O.stringAbs(d)):s="in";const c=this.safeNumber(e,"time");let h;return void 0!==c&&(h=this.parseToInt(1e3*c)),{info:e,id:i,direction:s,account:void 0,referenceId:r,referenceAccount:void 0,type:n,currency:o,amount:this.parseNumber(d),before:void 0,after:this.safeNumber(e,"balance"),status:"ok",timestamp:h,datetime:this.iso8601(h),fee:{cost:this.safeNumber(e,"fee"),currency:o}}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.asset=a.id),void 0!==t&&(r.start=this.parseToInt(t/1e3));const n=await this.privatePostLedgers(this.extend(r,s)),o=this.safeValue(n,"result",{}),d=this.safeValue(o,"ledger",{}),c=Object.keys(d),h=[];for(let e=0;e<c.length;e++){const t=c[e],i=d[t];i.id=t,h.push(i)}return this.parseLedger(h,a,t,i)}async fetchLedgerEntriesByIds(e,t=undefined,i={}){await this.loadMarkets(),e=e.join(",");const s=this.extend({id:e},i),r=(await this.privatePostQueryLedgers(s)).result,a=Object.keys(r),n=[];for(let e=0;e<a.length;e++){const t=a[e],i=r[t];i.id=t,n.push(i)}return this.parseLedger(n)}async fetchLedgerEntry(e,t=undefined,i={}){return(await this.fetchLedgerEntriesByIds([e],t,i))[0]}parseTrade(e,t=undefined){let i,s,r,a,n,o,d,c,h;if(Array.isArray(e))i=this.safeTimestamp(e,2),s="s"===e[3]?"sell":"buy",r="l"===e[4]?"limit":"market",a=this.safeString(e,0),n=this.safeString(e,1),e.length>6&&(o=this.safeString(e,6));else if("string"==typeof e)o=e;else if("ordertxid"in e){const h=this.safeString(e,"pair"),u=this.findMarketByAltnameOrId(h);if(void 0!==u?t=u:void 0!==h&&(t=this.getDelistedMarketById(h)),d=this.safeString(e,"ordertxid"),o=this.safeString2(e,"id","postxid"),i=this.safeTimestamp(e,"time"),s=this.safeString(e,"type"),r=this.safeString(e,"ordertype"),a=this.safeString(e,"price"),n=this.safeString(e,"vol"),"fee"in e){let i;void 0!==t&&(i=t.quote),c={cost:this.safeString(e,"fee"),currency:i}}}void 0!==t&&(h=t.symbol);const u=this.safeString(e,"cost");return this.safeTrade({id:o,order:d,info:e,timestamp:i,datetime:this.iso8601(i),symbol:h,type:r,side:s,takerOrMaker:void 0,price:a,amount:n,cost:u,fee:c},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.market(e),n=a.id,o={pair:n};if(void 0!==t&&(o.since=1e6*t,o.since=t.toString()+"000000"),void 0!==i&&1e3!==i&&this.safeValue(this.options,"fetchTradesWarning",!0))throw new r.ExchangeError(this.id+" fetchTrades() cannot serve "+i.toString()+" trades without breaking the pagination, see https://github.com/ccxt/ccxt/issues/5698 for more details. Set exchange.options['fetchTradesWarning'] to acknowledge this warning and silence it.");const d=(await this.publicGetTrades(this.extend(o,s))).result,c=d[n],h=c.length;if(h<=0)return[];const u=c[h-1],l=this.safeString(d,"last");return u.push(l),this.parseTrades(c,a,t,i)}parseBalance(e){const t=this.safeValue(e,"result",{}),i={info:e,timestamp:void 0,datetime:void 0},s=Object.keys(t);for(let e=0;e<s.length;e++){const r=s[e],a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(t,r),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostBalance(e);return this.parseBalance(t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n={pair:this.market(e).id,type:i,ordertype:t,volume:this.amountToPrecision(e,s)},o=this.orderRequest("createOrder()",e,t,n,r,a),d=await this.privatePostAddOrder(this.extend(o[0],o[1])),c=this.safeValue(d,"result");return this.parseOrder(c)}findMarketByAltnameOrId(e){const t=this.safeValue(this.options,"marketsByAltname",{});return e in t?t[e]:this.safeMarket(e)}getDelistedMarketById(e){if(void 0===e)return e;let t=this.safeValue(this.options.delistedMarketsById,e);if(void 0!==t)return t;let i=3,s=3,r=6;8===e.length?(i=4,s=4,r=8):7===e.length&&(i=4,s=4,r=7);const a=e.slice(0,i),n=e.slice(s,r),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n);return t={symbol:o+"/"+d,base:o,quote:d,baseId:a,quoteId:n},this.options.delistedMarketsById[e]=t,t}parseOrderStatus(e){return this.safeString({pending:"open",open:"open",closed:"closed",canceled:"canceled",expired:"expired"},e,e)}parseOrder(e,t=undefined){const i=this.safeValue(e,"descr",{}),s=this.safeString(i,"order");let r,n,o,d,c,h;if(void 0!==s){const e=s.split(" ");r=this.safeString(e,0),c=this.safeString(e,1),o=this.safeString(e,2),n=this.safeString(e,4),"stop"===n?(h=this.safeString(e,6),d=this.safeString(e,9)):"limit"===n&&(d=this.safeString(e,5))}r=this.safeString(i,"type",r),n=this.safeString(i,"ordertype",n),o=this.safeString(i,"pair",o);const u=this.findMarketByAltnameOrId(o);let l;void 0!==u?t=u:void 0!==o&&(t=this.getDelistedMarketById(o));const p=this.safeTimestamp(e,"opentm");c=this.safeString(e,"vol",c);const f=this.safeString(e,"vol_exec");let m;d=this.safeString(i,"price",d),(void 0===d||a.O.stringEquals(d,"0"))&&(d=this.safeString(i,"price2")),(void 0===d||a.O.stringEquals(d,"0"))&&(d=this.safeString(e,"price",d));const v=this.safeNumber(e,"price");if(void 0!==t&&(l=t.symbol,"fee"in e)){const i=e.oflags;m={cost:this.safeString(e,"fee"),rate:void 0},i.indexOf("fciq")>=0?m.currency=t.quote:i.indexOf("fcib")>=0&&(m.currency=t.base)}const g=this.parseOrderStatus(this.safeString(e,"status"));let y=this.safeString2(e,"id","txid");if(void 0===y||"["===y.slice(0,1)){const t=this.safeValue(e,"txid");y=this.safeString(t,0)}const b=this.safeString(e,"userref"),w=this.safeValue(e,"trades");return h=this.safeNumber(e,"stopprice",h),this.safeOrder({id:y,clientOrderId:b,info:e,timestamp:p,datetime:this.iso8601(p),lastTradeTimestamp:void 0,status:g,symbol:l,type:n,timeInForce:void 0,postOnly:void 0,side:r,price:d,stopPrice:h,triggerPrice:h,cost:void 0,amount:c,filled:f,average:v,remaining:void 0,fee:m,trades:w},t)}orderRequest(e,t,i,s,a=undefined,n={}){const o=this.safeString2(n,"userref","clientOrderId");if(n=this.omit(n,["userref","clientOrderId"]),void 0!==o&&(s.userref=o),"limit"===i)s.price=this.priceToPrecision(t,a);else if("stop-loss"===i||"take-profit"===i){const o=this.safeNumber2(n,"price","stopPrice",a);if(void 0===o)throw new r.ArgumentsRequired(this.id+e+" requires a price argument or a price/stopPrice parameter for a "+i+" order");s.price=this.priceToPrecision(t,o)}else if("stop-loss-limit"===i||"take-profit-limit"===i){const o=this.safeNumber2(n,"price","stopPrice"),d=this.safeNumber(n,"price2"),c=void 0!==o,h=void 0!==d;if(c&&h)s.price=this.priceToPrecision(t,o),s.price2=this.priceToPrecision(t,d);else{if(void 0===a||!c&&!h)throw new r.ArgumentsRequired(this.id+e+" requires a price argument and/or price/stopPrice/price2 parameters for a "+i+" order");c?(s.price=this.priceToPrecision(t,o),s.price2=this.priceToPrecision(t,a)):h&&(s.price=this.priceToPrecision(t,a),s.price2=this.priceToPrecision(t,d))}}let d=this.safeValue(n,"close");if(void 0!==d){d=this.extend({},d);const e=this.safeValue(d,"price");void 0!==e&&(d.price=this.priceToPrecision(t,e));const i=this.safeValue(d,"price2");void 0!==i&&(d.price2=this.priceToPrecision(t,i)),s.close=d}return[s,n=this.omit(n,["price","stopPrice","price2","close"])]}async editOrder(e,t,i,s,a,n=undefined,o={}){await this.loadMarkets();const d=this.market(t);if(!d.spot)throw new r.NotSupported(this.id+" editOrder() does not support "+d.type+" orders, only spot orders are accepted");const c={txid:e,pair:d.id};void 0!==a&&(c.volume=this.amountToPrecision(t,a));const h=this.orderRequest("editOrder()",t,i,c,n,o),u=await this.privatePostEditOrder(this.extend(h[0],h[1])),l=this.safeValue(u,"result",{});return this.parseOrder(l,d)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeValue2(i,"userref","clientOrderId"),a={trades:!0};let n=i;void 0!==s?(a.userref=s,n=this.omit(i,["userref","clientOrderId"])):a.txid=e;const o=await this.privatePostQueryOrders(this.extend(a,n)),d=this.safeValue(o,"result",[]);if(!(e in d))throw new r.OrderNotFound(this.id+" fetchOrder() could not find order id "+e);const c=this.parseOrder(this.extend({id:e},d[e]));return this.extend({info:o},c)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,a={}){const n=this.safeValue(a,"trades"),o=[];if(void 0===n)throw new r.ArgumentsRequired(this.id+" fetchOrderTrades() requires a unified order structure in the params argument or a 'trades' param (an array of trade id strings)");for(let e=0;e<n.length;e++){const t=n[e];"string"==typeof t?o.push(t):o.push(t.id)}await this.loadMarkets(),void 0!==t&&(t=this.symbol(t));const d=this.safeValue(this.options,"fetchOrderTrades",{}),c=this.safeInteger(d,"batchSize",20),h=o.length;let u=this.parseToInt(h/c);u=this.sum(u,1);let l=[];for(let e=0;e<u;e++){const r=[];for(let t=0;t<c;t++){const i=this.sum(e*c,t);i<h&&r.push(o[i])}const a={txid:r.join(",")},n=await this.privatePostQueryTrades(a),d=this.safeValue(n,"result"),u=Object.keys(d);for(let e=0;e<u.length;e++)d[u[e]].id=u[e];const p=this.parseTrades(d,void 0,i,s),f=this.filterBySymbol(p,t);l=this.arrayConcat(l,f)}return l}async fetchOrdersByIds(e,t=undefined,i={}){await this.loadMarkets();const s=await this.privatePostQueryOrders(this.extend({trades:!0,txid:e.join(",")},i)),r=this.safeValue(s,"result",{}),a=[],n=Object.keys(r);for(let e=0;e<n.length;e++){const t=n[e],i=r[t],s=this.parseOrder(this.extend({id:t},i));a.push(s)}return a}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==t&&(r.start=this.parseToInt(t/1e3));const a=(await this.privatePostTradesHistory(this.extend(r,s))).result.trades,n=Object.keys(a);for(let e=0;e<n.length;e++)a[n[e]].id=n[e];let o;return void 0!==e&&(o=this.market(e)),this.parseTrades(a,o,t,i)}async cancelOrder(e,t=undefined,i={}){let s;await this.loadMarkets();const a={txid:this.safeValue2(i,"userref","clientOrderId",e)};i=this.omit(i,["userref","clientOrderId"]);try{s=await this.privatePostCancelOrder(this.extend(a,i))}catch(e){if(this.last_http_response&&this.last_http_response.indexOf("EOrder:Unknown order")>=0)throw new r.OrderNotFound(this.id+" cancelOrder() error "+this.last_http_response);throw e}return s}async cancelOrders(e,t=undefined,i={}){const s={orders:e};return await this.privatePostCancelOrderBatch(this.extend(s,i))}async cancelAllOrders(e=undefined,t={}){return await this.loadMarkets(),await this.privatePostCancelAll(t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==t&&(r.start=this.parseToInt(t/1e3));let a=s;const n=this.safeValue2(s,"userref","clientOrderId");void 0!==n&&(r.userref=n,a=this.omit(s,["userref","clientOrderId"]));const o=await this.privatePostOpenOrders(this.extend(r,a));let d;void 0!==e&&(d=this.market(e));const c=this.safeValue(o,"result",{}),h=this.safeValue(c,"open",[]);return this.parseOrders(h,d,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==t&&(r.start=this.parseToInt(t/1e3));let a=s;const n=this.safeValue2(s,"userref","clientOrderId");void 0!==n&&(r.userref=n,a=this.omit(s,["userref","clientOrderId"]));const o=await this.privatePostClosedOrders(this.extend(r,a));let d;void 0!==e&&(d=this.market(e));const c=this.safeValue(o,"result",{}),h=this.safeValue(c,"closed",[]);return this.parseOrders(h,d,t,i)}parseTransactionStatus(e){return this.safeString({Initial:"pending",Pending:"pending",Success:"ok",Settled:"pending",Failure:"failed",Partial:"ok"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"refid"),s=this.safeString(e,"txid"),r=this.safeTimestamp(e,"time"),a=this.safeString(e,"asset"),n=this.safeCurrencyCode(a,t),o=this.safeString(e,"info"),d=this.safeNumber(e,"amount");let c=this.parseTransactionStatus(this.safeString(e,"status"));const h=this.safeString(e,"status-prop");("on-hold"===h||"cancel-pending"===h||"onhold"===h)&&(c="pending");const u=this.safeString(e,"type");let l=this.safeNumber(e,"fee");return void 0===l&&"deposit"===u&&(l=0),{info:e,id:i,currency:n,amount:d,network:void 0,address:o,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,status:c,type:u,updated:void 0,txid:s,timestamp:r,datetime:this.iso8601(r),fee:{currency:n,cost:l}}}parseTransactionsByType(e,t,i=undefined,s=undefined,r=undefined){const a=[];for(let i=0;i<t.length;i++){const s=this.parseTransaction(this.extend({type:e},t[i]));a.push(s)}return this.filterByCurrencySinceLimit(a,i,s,r)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const a={asset:this.currency(e).id},n=await this.privatePostDepositStatus(this.extend(a,s));return this.parseTransactionsByType("deposit",n.result,e,t,i)}async fetchTime(e={}){const t=await this.publicGetTime(e),i=this.safeValue(t,"result",{});return this.safeTimestamp(i,"unixtime")}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const a={asset:this.currency(e).id},n=await this.privatePostWithdrawStatus(this.extend(a,s));return this.parseTransactionsByType("withdrawal",n.result,e,t,i)}async createDepositAddress(e,t={}){return await this.fetchDepositAddress(e,this.extend({new:"true"},t))}async fetchDepositMethods(e,t={}){await this.loadMarkets();const i={asset:this.currency(e).id},s=await this.privatePostDepositMethods(this.extend(i,t));return this.safeValue(s,"result")}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e);let s=this.safeStringUpper(t,"network");const a=this.safeValue(this.options,"networks",{});s=this.safeString(a,s,s),t=this.omit(t,"network"),"USDT"===e&&"TRC20"===s&&(e=e+"-"+s);const n=this.safeValue(this.options,"depositMethods",{}),o=this.safeString(n,e);let d=this.safeString(t,"method",o);if(void 0===d){const t=await this.fetchDepositMethods(e);if(void 0!==s)for(let e=0;e<t.length;e++){const i=this.safeString(t[e],"method");if(i.indexOf(s)>=0){d=i;break}}if(void 0===d){const e=this.safeValue(t,0,{});d=this.safeString(e,"method")}}const c={asset:i.id,method:d},h=await this.privatePostDepositAddresses(this.extend(c,t)),u=this.safeValue(h,"result",[]),l=this.safeValue(u,0,{});if(void 0===l)throw new r.InvalidAddress(this.id+" privatePostDepositAddresses() returned no addresses for "+e);return this.parseDepositAddress(l,i)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"tag"),r=(t=this.safeCurrency(void 0,t)).code;return this.checkAddress(i),{currency:r,address:i,tag:s,network:void 0,info:e}}async withdraw(e,t,i,s=undefined,a={}){if([s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),"key"in a){await this.loadMarkets();const i=this.currency(e),s={asset:i.id,amount:t},r=await this.privatePostWithdraw(this.extend(s,a)),n=this.safeValue(r,"result",{});return this.parseTransaction(n,i)}throw new r.ExchangeError(this.id+" withdraw() requires a 'key' parameter (withdrawal key name, as set up on your account)")}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.privatePostOpenPositions(this.extend({},t));return this.safeValue(i,"result")}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n="/"+this.version+"/"+t+"/"+e;if("public"===t)Object.keys(s).length&&(n+="?"+this.urlencodeNested(s));else if("private"===t){const t="CancelOrderBatch"===e;this.checkRequiredCredentials();const i=this.nonce().toString();a=t?this.json(this.extend({nonce:i},s)):this.urlencodeNested(this.extend({nonce:i},s));const c=this.encode(i+a),h=this.hash(c,o.J,"binary"),u=this.encode(n),l=this.binaryConcat(u,h),p=this.base64ToBinary(this.secret),f=this.hmac(l,p,d.o,"base64");(r={"API-Key":this.apiKey,"API-Sign":f})["Content-Type"]=t?"application/json":"application/x-www-form-urlencoded"}else n="/"+e;return n=this.urls.api[t]+n,{url:n,method:i,body:a,headers:r}}nonce(){return this.milliseconds()}handleErrors(e,t,i,s,a,n,o,d,c){if(520===e)throw new r.ExchangeNotAvailable(this.id+" "+e.toString()+" "+t);if(n.indexOf("Invalid order")>=0)throw new r.InvalidOrder(this.id+" "+n);if(n.indexOf("Invalid nonce")>=0)throw new r.InvalidNonce(this.id+" "+n);if(n.indexOf("Insufficient funds")>=0)throw new r.InsufficientFunds(this.id+" "+n);if(n.indexOf("Cancel pending")>=0)throw new r.CancelPending(this.id+" "+n);if(n.indexOf("Invalid arguments:volume")>=0)throw new r.InvalidOrder(this.id+" "+n);if(n.indexOf("Rate limit exceeded")>=0)throw new r.RateLimitExceeded(this.id+" "+n);if(void 0!==o&&"{"===n[0]&&"string"!=typeof o&&"error"in o&&o.error.length){const e=this.id+" "+n;for(let t=0;t<o.error.length;t++){const i=o.error[t];this.throwExactlyMatchedException(this.exceptions,i,e)}throw new r.ExchangeError(e)}}}},4470:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(3931),r=i(9292),a=i(6689),n=i(2194),o=i(1372),d=i(7110);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"krakenfutures",name:"Kraken Futures",countries:["US"],version:"v3",userAgent:void 0,rateLimit:600,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:!1,cancelAllOrders:!0,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:void 0,fetchFundingHistory:void 0,fetchFundingRate:!1,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedPositions:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!1,fetchOrderBook:!0,fetchOrders:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchTickers:!0,fetchTrades:!0,setLeverage:!1,setMarginMode:!1,transfer:!0},urls:{test:{public:"https://demo-futures.kraken.com/derivatives",private:"https://demo-futures.kraken.com/derivatives",www:"https://demo-futures.kraken.com"},logo:"https://user-images.githubusercontent.com/24300605/81436764-b22fd580-9172-11ea-9703-742783e6376d.jpg",api:{charts:"https://futures.kraken.com/api/charts/",history:"https://futures.kraken.com/api/history/",feeschedules:"https://futures.kraken.com/api/feeschedules/",public:"https://futures.kraken.com/derivatives/api/",private:"https://futures.kraken.com/derivatives/api/"},www:"https://futures.kraken.com/",doc:["https://support.kraken.com/hc/en-us/categories/360001806372-Futures-API"],fees:"https://support.kraken.com/hc/en-us/articles/360022835771-Transaction-fees-and-rebates-for-Kraken-Futures",referral:void 0},api:{public:{get:["instruments","orderbook","tickers","history","historicalfundingrates"]},private:{get:["openpositions","notifications","accounts","openorders","recentorders","fills","transfers"],post:["sendorder","editorder","cancelorder","transfer","batchorder","cancelallorders","cancelallordersafter","withdrawal"]},charts:{get:["{price_type}/{symbol}/{interval}"]},history:{get:["orders","executions","triggers","accountlogcsv","market/{symbol}/orders","market/{symbol}/executions"]},feeschedules:{get:["volumes"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("-0.0002"),taker:this.parseNumber("0.00075")}},exceptions:{exact:{apiLimitExceeded:a.RateLimitExceeded,marketUnavailable:a.ExchangeNotAvailable,requiredArgumentMissing:a.BadRequest,unavailable:a.ExchangeNotAvailable,authenticationError:a.AuthenticationError,accountInactive:a.ExchangeError,invalidAccount:a.BadRequest,invalidAmount:a.BadRequest,insufficientFunds:a.InsufficientFunds,"Bad Request":a.BadRequest,Unavailable:a.InsufficientFunds},broad:{invalidArgument:a.BadRequest,nonceBelowThreshold:a.InvalidNonce,nonceDuplicate:a.InvalidNonce}},precisionMode:r.sh,options:{access:{history:{GET:{orders:"private",executions:"private",triggers:"private",accountlogcsv:"private"}}},settlementCurrencies:{flex:["USDT","BTC","USD","GBP","EUR","USDC"]},symbol:{quoteIds:["USD","XBT"],reversed:!1},versions:{public:{GET:{historicalfundingrates:"v4"}},charts:{GET:{"{price_type}/{symbol}/{interval}":"v1"}},history:{GET:{orders:"v2",executions:"v2",triggers:"v2",accountlogcsv:"v2"}}}},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","12h":"12h","1d":"1d","1w":"1w"}})}async fetchMarkets(e={}){const t=await this.publicGetInstruments(e),i=this.safeValue(t,"instruments",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"type");let n;const o=a.indexOf(" index")>=0;let d,c,h;if(o)n="index";else{d=a.indexOf("_vanilla")>=0,c=!d;const e=this.safeString(t,"lastTradingTime");n=void 0===e?"swap":"future",h=this.parse8601(e)}const u="swap"===n,l="future"===n;let p=r;const f=r.split("_"),m=this.safeString(f,1).replace("usd",""),v="usd",g=this.safeCurrencyCode(m),y=this.safeCurrencyCode(v);let b,w;const S=this.parseNumber(this.parsePrecision(this.safeString(t,"contractValueTradePrecision","0"))),P=this.safeNumber(t,"tickSize"),k=u||l;k&&("futures_inverse"===this.safeString(t,"type")?(b=g,w=m,c=!0):(b=y,w=v,c=!1),d=!c,p=g+"/"+y+":"+b,l&&(p=p+"-"+this.yymmdd(h))),s.push({id:r,symbol:p,base:g,quote:y,settle:b,baseId:m,quoteId:v,settleId:w,type:n,spot:!1,margin:!1,swap:u,future:l,option:!1,index:o,active:void 0,contract:k,linear:d,inverse:c,contractSize:this.safeNumber(t,"contractSize"),maintenanceMarginRate:void 0,expiry:h,expiryDatetime:this.iso8601(h),strike:void 0,optionType:void 0,precision:{amount:S,price:P},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}const r=this.options.settlementCurrencies.flex,a=[];for(let e=0;e<r.length;e++){const t=r[e];a.push({id:t.toLowerCase(),numericId:void 0,code:t,precision:void 0})}return this.currencies=this.deepExtend(a,this.currencies),s}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id},r=await this.publicGetOrderbook(this.extend(s,i)),a=this.parse8601(r.serverTime);return this.parseOrderBook(r.orderBook,e,a)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTickers(t),s=this.safeValue(i,"tickers");return this.parseTickers(s,e)}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.parse8601(this.safeString(e,"lastTime")),a=this.safeString(e,"open24h"),o=this.safeString(e,"last"),d=n.O.stringSub(o,a),c=n.O.stringMul(n.O.stringDiv(d,a),"100"),h=n.O.stringDiv(n.O.stringAdd(a,o),"2"),u=this.safeString(e,"vol24h");let l,p;return this.safeValue(t,"index",!1)||(t.linear?l=u:t.inverse&&(p=u)),this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bidSize"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"askSize"),vwap:void 0,open:a,close:o,last:o,previousClose:void 0,change:d,percentage:c,average:h,baseVolume:l,quoteVolume:p,info:e})}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const n=this.market(e),o={symbol:n.id,price_type:this.safeString(r,"price","trade"),interval:this.timeframes[t]};if(r=this.omit(r,"price"),void 0!==i){const e=this.parseTimeframe(t);if(o.from=this.parseToInt(i/1e3),void 0===s)s=5e3;else if(s>5e3)throw new a.BadRequest(this.id+" fetchOHLCV() limit cannot exceed 5000");const r=this.sum(o.from,s*e-1),n=this.seconds();o.to=Math.min(r,n)}else if(void 0!==s){if(s>5e3)throw new a.BadRequest(this.id+" fetchOHLCV() limit cannot exceed 5000");const e=this.parseTimeframe(t);o.to=this.seconds(),o.from=this.parseToInt(o.to-e*s)}const d=await this.chartsGetPriceTypeSymbolInterval(this.extend(o,r)),c=this.safeValue(d,"candles");return this.parseOHLCVs(c,n,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=this.safeInteger(s,"until");void 0!==n&&(a.lastTime=this.iso8601(n));const o=await this.publicGetHistory(this.extend(a,s)),d=this.safeValue(o,"history");return this.parseTrades(d,r,t,i)}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString2(e,"time","fillTime")),s=this.safeString(e,"price"),r=this.safeString2(e,"size","amount","0.0");let a=this.safeString2(e,"uid","fill_id");void 0===a&&(a=this.safeString(e,"executionId"));let o,d=this.safeString(e,"order_id"),c=this.safeString(e,"symbol"),h=this.safeString(e,"side");const u=this.safeValue(e,"orderPriorEdit"),l=this.safeValue(e,"orderPriorExecution");let p,f,m;if(void 0!==l?(d=this.safeString(l,"orderId"),c=this.safeString(l,"symbol"),h=this.safeString(l,"side"),o=this.safeString(l,"type")):void 0!==u&&(d=this.safeString(u,"orderId"),c=this.safeString(u,"symbol"),h=this.safeString(u,"type"),o=this.safeString(u,"type")),void 0!==o&&(o=this.parseOrderType(o)),void 0!==c&&void 0===(t=this.safeValue(this.markets_by_id,c))&&(p=c),p=this.safeString(t,"symbol",p),void 0!==r&&void 0!==s&&void 0!==t){f=this.safeValue(t,"linear")?n.O.stringMul(r,s):n.O.stringDiv(r,s);const e=this.safeString(t,"contractSize");f=n.O.stringMul(f,e)}const v=this.safeString(e,"fillType");return void 0!==v&&(v.indexOf("taker")>=0?m="taker":v.indexOf("maker")>=0&&(m="maker")),this.safeTrade({info:e,id:a,timestamp:i,datetime:this.iso8601(i),symbol:p,order:d,type:o,side:h,takerOrMaker:m,price:s,amount:r,cost:f,fee:void 0})}async createOrder(e,t,i,s,r=undefined,n={}){await this.loadMarkets(),t=this.safeString(n,"orderType",t);const o=this.safeString(n,"timeInForce"),d=this.safeString(n,"stopPrice"),c=this.safeString(n,"postOnly"),h=this.safeString2(n,"clientOrderId","cliOrdId");if(n=this.omit(n,["clientOrderId","cliOrdId"]),("stp"===t||"take_profit"===t)&&void 0===d)throw new a.ArgumentsRequired(this.id+" createOrder requires params.stopPrice when type is "+t);void 0!==d?t="stp":c?t="postOnly":"ioc"===o?t="ioc":"limit"===t?t="lmt":"market"===t&&(t="mkt");const u={orderType:t,symbol:this.marketId(e),side:i,size:s};void 0!==r&&(u.limitPrice=r),void 0!==h&&(u.cliOrdId=h);const l=await this.privatePostSendorder(this.extend(u,n)),p=this.safeValue(l,"sendStatus"),f=this.safeString(p,"status");return this.verifyOrderActionSuccess(f,"createOrder",["filled"]),this.parseOrder(p)}async editOrder(e,t,i,s,r=undefined,a=undefined,n={}){await this.loadMarkets();const o={orderId:e};void 0!==r&&(o.size=r),void 0!==a&&(o.limitPrice=a);const d=await this.privatePostEditorder(this.extend(o,n)),c=this.safeString(d.editStatus,"status");this.verifyOrderActionSuccess(c,"editOrder",["filled"]);const h=this.parseOrder(d.editStatus);return this.extend({info:d},h)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=await this.privatePostCancelorder(this.extend({order_id:e},i)),r=this.safeString(this.safeValue(s,"cancelStatus",{}),"status");this.verifyOrderActionSuccess(r,"cancelOrder");let a={};return"cancelStatus"in s&&(a=this.parseOrder(s.cancelStatus)),this.extend({info:s},a)}async cancelAllOrders(e=undefined,t={}){const i={};return void 0!==e&&(i.symbol=this.marketId(e)),await this.privatePostCancelallorders(this.extend(i,t))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privateGetOpenorders(s),n=this.safeValue(a,"openOrders",[]);return this.parseOrders(n,r,t,i)}parseOrderType(e){return this.safeString({lmt:"limit",mkt:"market",post:"limit",ioc:"market"},e,e)}verifyOrderActionSuccess(e,t,i=[]){const s={invalidOrderType:a.InvalidOrder,invalidSide:a.InvalidOrder,invalidSize:a.InvalidOrder,invalidPrice:a.InvalidOrder,insufficientAvailableFunds:a.InsufficientFunds,selfFill:a.ExchangeError,tooManySmallOrders:a.ExchangeError,maxPositionViolation:a.BadRequest,marketSuspended:a.ExchangeNotAvailable,marketInactive:a.ExchangeNotAvailable,clientOrderIdAlreadyExist:a.DuplicateOrderId,clientOrderIdTooLong:a.BadRequest,outsidePriceCollar:a.InvalidOrder,postWouldExecute:a.OrderImmediatelyFillable,iocWouldNotExecute:a.OrderNotFillable,wouldNotReducePosition:a.ExchangeError,orderForEditNotFound:a.OrderNotFound,orderForEditNotAStop:a.InvalidOrder,filled:a.OrderNotFound,notFound:a.OrderNotFound};if(e in s&&!this.inArray(e,i))throw new s[e](this.id+": "+t+" failed due to "+e)}parseOrderStatus(e){return this.safeString({placed:"open",cancelled:"canceled",invalidOrderType:"rejected",invalidSide:"rejected",invalidSize:"rejected",invalidPrice:"rejected",insufficientAvailableFunds:"rejected",selfFill:"rejected",tooManySmallOrders:"rejected",maxPositionViolation:"rejected",marketSuspended:"rejected",marketInactive:"rejected",clientOrderIdAlreadyExist:"rejected",clientOrderIdTooLong:"rejected",outsidePriceCollar:"rejected",postWouldExecute:"rejected",iocWouldNotExecute:"rejected",wouldNotReducePosition:"rejected",edited:"open",orderForEditNotFound:"rejected",orderForEditNotAStop:"rejected",filled:"closed",notFound:"rejected",untouched:"open",partiallyFilled:"open"},e,e)}parseOrder(e,t=undefined){const i=this.safeValue(e,"orderEvents",[]);let s,r,a,o=!1,d=!1,c=[];if(i.length>0){const t=[];for(let e=0;e<i.length;e++){const r=i[e];"EXECUTION"===this.safeString(r,"type")&&t.push(r);const n=this.safeValue(r,"orderTrigger");if(s=this.safeValue2(r,"new","order",n),void 0!==s)o=!1,d=!0;else if(!d){const e=this.safeValue(r,"orderPriorExecution");s=this.safeValue2(r,"orderPriorExecution","orderPriorEdit"),a=this.safeString(e,"limitPrice"),void 0!==s&&(o=!0)}}c=this.parseTrades(t),r=this.safeString(e,"status")}void 0===s&&(s=e),void 0===r&&(r=this.safeString(s,"status"));let h=this.parseOrderStatus(r),u=this.inArray(h,["canceled","rejected","closed"]);const l=this.safeString(s,"symbol");t=this.safeMarket(l,t);const p=this.parse8601(this.safeString2(s,"timestamp","receivedTime"));void 0===a&&(a=this.safeString(s,"limitPrice"));let f,m,v=this.safeString(s,"quantity"),g=this.safeString2(s,"filledSize","filled","0.0"),y=this.safeString(s,"unfilledSize"),b="0.0";if(c.length>0){let e="0.0";for(let t=0;t<c.length;t++){const i=c[t],s=this.safeString(i,"amount"),r=this.safeString(i,"price");b=n.O.stringAdd(b,s),e=n.O.stringAdd(e,n.O.stringMul(s,r))}f=n.O.stringDiv(e,b),void 0!==v&&!u&&o&&n.O.stringGe(b,v)&&(h="closed",u=!0),g=o?n.O.stringAdd(g,b):n.O.stringMax(g,b)}if(void 0===y&&(o?void 0!==v&&(y=n.O.stringSub(v,b)):y=v),void 0!==v||o||void 0===y||(v=n.O.stringAdd(g,y)),void 0!==g&&void 0!==t){const e=void 0!==f?f:a;void 0!==e&&(m=t.linear?n.O.stringMul(g,e):n.O.stringDiv(g,e))}let w=this.safeString2(e,"order_id","orderId");void 0===w&&(w=this.safeString2(s,"orderId","uid"));const S=this.safeStringLower2(s,"type","orderType");let P="gtc";return"ioc"!==S&&"market"!==this.parseOrderType(S)||(P="ioc"),this.safeOrder({info:e,id:w,clientOrderId:this.safeString2(s,"clientOrderId","clientId"),timestamp:p,datetime:this.iso8601(p),lastTradeTimestamp:void 0,symbol:this.safeString(t,"symbol"),type:this.parseOrderType(S),timeInForce:P,postOnly:"post"===S,side:this.safeString(s,"side"),price:a,stopPrice:this.safeString(s,"triggerPrice"),triggerPrice:this.safeString(s,"triggerPrice"),amount:v,cost:m,average:f,filled:g,remaining:y,status:h,fee:void 0,fees:void 0,trades:c})}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a=await this.privateGetFills(s);return this.parseTrades(a.fills,r,t,i)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString2(e,"type","account"),i=this.safeString(e,"symbol");e=this.omit(e,["type","account","symbol"]);const s=await this.privateGetAccounts(e),r=this.safeString(s,"serverTime");if("marginAccount"===t||"margin"===t){if(void 0===i)throw new a.ArgumentsRequired(this.id+" fetchBalance requires symbol argument for margin accounts");t=i}void 0===t&&(t=void 0===i?"cash":i);const n=this.parseAccount(t),o=this.safeValue(s,"accounts"),d=this.safeValue(o,n);if(void 0===d)throw t=void 0===t?"":t,i=void 0===i?"":i,new a.BadRequest(this.id+" fetchBalance has no account for "+t);const c=this.parseBalance(d);return this.extend({info:s,timestamp:this.parse8601(r),datetime:r},c)}parseBalance(e){const t=this.safeString2(e,"accountType","type"),i="multiCollateralMarginAccount"===t,s="cashAccount"===t,r=this.safeValue2(e,"balances","currencies",{}),a={},n=Object.keys(r);for(let t=0;t<n.length;t++){const o=n[t],d=r[o],c=this.safeCurrencyCode(o);if(c.split("_").length>1)continue;const h=this.account();if(i)h.total=this.safeString(d,"quantity"),h.free=this.safeString(d,"available");else if(s)h.used="0.0",h.total=d;else{const t=this.safeValue(e,"auxiliary");h.free=this.safeString(t,"af"),h.total=this.safeString(t,"pv")}a[c]=h}return this.safeBalance(a)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){this.checkRequiredSymbol("fetchFundingRateHistory",e),await this.loadMarkets();const r=this.market(e);if(!r.swap)throw new a.BadRequest(this.id+" fetchFundingRateHistory() supports swap contracts only");const n={symbol:r.id.toUpperCase()},o=await this.publicGetHistoricalfundingrates(this.extend(n,s)),d=this.safeValue(o,"rates"),c=[];for(let t=0;t<d.length;t++){const i=d[t],s=this.safeString(i,"timestamp");c.push({info:i,symbol:e,fundingRate:this.safeNumber(i,"fundingRate"),timestamp:this.parse8601(s),datetime:s})}const h=this.sortBy(c,"timestamp");return this.filterBySymbolSinceLimit(h,e,t,i)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetOpenpositions({}),s=this.parsePositions(i);return this.filterByArray(s,"symbol",e,!1)}parsePositions(e,t=undefined,i={}){const s=[],r=this.safeValue(e,"openPositions");for(let e=0;e<r.length;e++){const t=this.parsePosition(r[e]);s.push(t)}return s}parsePosition(e,t=undefined){const i=this.safeNumber(e,"maxFixedLeverage");let s="cross";void 0!==i&&(s="isolated");const r=this.safeString(e,"fillTime"),a=this.safeString(e,"symbol");return{info:e,symbol:(t=this.safeMarket(a,t)).symbol,timestamp:this.parse8601(r),datetime:r,initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:this.safeNumber(e,"price"),notional:void 0,leverage:i,unrealizedPnl:this.safeNumber(e,"unrealizedFunding"),contracts:this.safeNumber(e,"size"),contractSize:this.safeNumber(t,"contractSize"),marginRatio:void 0,liquidationPrice:void 0,markPrice:void 0,collateral:void 0,marginType:s,side:this.safeString(e,"side"),percentage:void 0}}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetInstruments(t),s=this.safeValue(i,"instruments");return this.parseLeverageTiers(s,e,"symbol")}parseMarketLeverageTiers(e,t=undefined){const i=this.safeValue(e,"marginLevels"),s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const r=[];for(let e=0;e<i.length;e++){const s=i[e],a=this.safeString(s,"initialMargin"),o=this.safeNumber(s,"contracts");0!==e&&(r[r.length-1].notionalCap=o),r.push({tier:this.sum(e,1),currency:t.quote,notionalFloor:o,notionalCap:void 0,maintenanceMarginRate:this.safeNumber(s,"maintenanceMargin"),maxLeverage:this.parseNumber(n.O.stringDiv("1",a)),info:s})}return r}parseTransfer(e,t=undefined){const i=this.safeString(e,"serverTime");return{info:e,id:void 0,timestamp:this.parse8601(i),datetime:i,currency:this.safeString(t,"code"),amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.safeString(e,"result")}}parseAccount(e){const t={main:"cash",funding:"cash",future:"cash",futures:"cash",cashAccount:"cash",multiCollateralMarginAccount:"flex",multiCollateral:"flex",multiCollateralMargin:"flex"};if(e in t)return t[e];if(e in this.markets){const t=this.market(e),i=t.id.split("_");return t.inverse?"fi_"+this.safeString(i,1):"fv_"+this.safeString(i,1)}return e}async transferOut(e,t,i={}){return await this.transfer(e,t,"future","spot",i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const n=this.currency(e);let o="privatePostTransfer";const d={amount:this.currencyToPrecision(e,t)};if("spot"===i)throw new a.BadRequest(this.id+" transfer does not yet support transfers from spot");if("spot"===s){if("cash"!==this.parseAccount(i))throw new a.BadRequest(this.id+" transfer cannot transfer from "+i+" to "+s);o="privatePostWithdrawal",d.currency=n.id}else d.fromAccount=this.parseAccount(i),d.toAccount=this.parseAccount(s),d.unit=n.id;const c=await this[o](this.extend(d,r)),h=this.parseTransfer(c,n);return this.extend(h,{amount:t,fromAccount:i,toAccount:s})}handleErrors(e,t,i,s,r,n,o,d,c){if(void 0===o)return;if(429===e)throw new a.DDoSProtection(this.id+" "+n);const h=this.safeString(o,"error");if(void 0===h)return;const u=this.id+" "+n;if(this.throwExactlyMatchedException(this.exceptions.exact,h,u),this.throwBroadlyMatchedException(this.exceptions.broad,h,u),400===e)throw new a.BadRequest(u);throw new a.ExchangeError(u)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.safeValue(this.options.versions,t,{}),c=this.safeValue(n,i,{}),h=this.safeString(c,e,this.version),u=this.safeString(s,"version",h);s=this.omit(s,"version");const l=this.safeValue(this.options.access,t,{}),p=this.safeValue(l,i,{}),f=this.safeString(p,e,"public"),m=u+"/"+this.implodeParams(e,s);s=this.omit(s,this.extractParams(e));let v=m,g="";Object.keys(s).length&&(g=this.urlencode(s),v+="?"+g);const y=this.urls.api[t]+v;if("private"===t||"private"===f){const e=g+"/api/"+m,t=this.hash(this.encode(e),o.J,"binary"),i=this.base64ToBinary(this.secret),s=this.hmac(t,i,d.o,"base64");r={"Content-Type":"application/json",APIKey:this.apiKey,Authent:s}}return{url:y,method:i,body:a,headers:r}}}},3583:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5792),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"kucoin",name:"KuCoin",countries:["SC"],rateLimit:50,version:"v2",certified:!0,pro:!0,comment:"Platform 2.0",quoteJsonNumbers:!1,has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:void 0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowInterest:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!0,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchDepositWithdrawFee:!0,fetchDepositWithdrawFees:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:!0,fetchLedger:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrdersByStatus:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactionFee:!0,fetchWithdrawals:!0,repayMargin:!0,setMarginMode:!1,transfer:!0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87295558-132aaf80-c50e-11ea-9801-a2fb0c57c799.jpg",referral:"https://www.kucoin.com/ucenter/signup?rcode=E5wkqe",api:{public:"https://api.kucoin.com",private:"https://api.kucoin.com",futuresPrivate:"https://api-futures.kucoin.com",futuresPublic:"https://api-futures.kucoin.com"},test:{public:"https://openapi-sandbox.kucoin.com",private:"https://openapi-sandbox.kucoin.com",futuresPrivate:"https://api-sandbox-futures.kucoin.com",futuresPublic:"https://api-sandbox-futures.kucoin.com"},www:"https://www.kucoin.com",doc:["https://docs.kucoin.com"]},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{public:{get:{timestamp:1,status:1,symbols:1,markets:1,"market/allTickers":1,"market/orderbook/level{level}_{limit}":1,"market/orderbook/level2_20":1,"market/orderbook/level2_100":1,"market/histories":1,"market/candles":1,"market/stats":1,currencies:1,"currencies/{currency}":1,prices:1,"mark-price/{symbol}/current":1,"margin/config":1,"margin/trade/last":1},post:{"bullet-public":1}},private:{get:{"market/orderbook/level{level}":1,"market/orderbook/level2":{v3:2},"market/orderbook/level3":1,accounts:1,"accounts/{accountId}":1,"accounts/ledgers":3.333,"accounts/{accountId}/holds":1,"accounts/transferable":1,"base-fee":1,"sub/user":1,"user-info":1,"sub/api-key":1,"sub-accounts":1,"sub-accounts/{subUserId}":1,"deposit-addresses":1,deposits:10,"hist-deposits":10,"hist-withdrawals":10,withdrawals:10,"withdrawals/quotas":1,orders:2,"order/client-order/{clientOid}":1,"orders/{orderId}":1,"limit/orders":1,fills:6.66667,"limit/fills":1,"isolated/accounts":2,"isolated/account/{symbol}":2,"isolated/borrow/outstanding":2,"isolated/borrow/repaid":2,"isolated/symbols":2,"margin/account":1,"margin/borrow":1,"margin/borrow/outstanding":1,"margin/borrow/repaid":1,"margin/lend/active":1,"margin/lend/done":1,"margin/lend/trade/unsettled":1,"margin/lend/trade/settled":1,"margin/lend/assets":1,"margin/market":1,"stop-order/{orderId}":1,"stop-order":1,"stop-order/queryOrderByClientOid":1,"trade-fees":1.3333},post:{accounts:1,"accounts/inner-transfer":{v2:1},"accounts/sub-transfer":{v2:25},"deposit-addresses":1,withdrawals:1,orders:4,"orders/multi":20,"isolated/borrow":2,"isolated/repay/all":2,"isolated/repay/single":2,"margin/borrow":1,"margin/order":1,"margin/repay/all":1,"margin/repay/single":1,"margin/lend":1,"margin/toggle-auto-lend":1,"bullet-private":1,"stop-order":1,"sub/user":1,"sub/api-key":1,"sub/api-key/update":1},delete:{"withdrawals/{withdrawalId}":1,orders:20,"order/client-order/{clientOid}":1,"orders/{orderId}":1,"margin/lend/{orderId}":1,"stop-order/cancelOrderByClientOid":1,"stop-order/{orderId}":1,"stop-order/cancel":1,"sub/api-key":1}},futuresPublic:{get:{"contracts/active":1.3953,"contracts/{symbol}":1.3953,ticker:1.3953,"level2/snapshot":2,"level2/depth20":1.3953,"level2/depth100":1.3953,"level2/message/query":1.3953,"level3/message/query":1.3953,"level3/snapshot":1.3953,"trade/history":1.3953,"interest/query":1.3953,"index/query":1.3953,"mark-price/{symbol}/current":1.3953,"premium/query":1.3953,"funding-rate/{symbol}/current":1.3953,timestamp:1.3953,status:1.3953,"kline/query":1.3953},post:{"bullet-public":1.3953}},futuresPrivate:{get:{"account-overview":2,"transaction-history":6.666,"deposit-address":1.3953,"deposit-list":1.3953,"withdrawals/quotas":1.3953,"withdrawal-list":1.3953,"transfer-list":1.3953,orders:1.3953,stopOrders:1.3953,recentDoneOrders:1.3953,"orders/{orderId}":1.3953,"orders/byClientOid":1.3953,fills:6.666,recentFills:6.666,openOrderStatistics:1.3953,position:1.3953,positions:6.666,"funding-history":6.666},post:{withdrawals:1.3953,"transfer-out":1.3953,orders:1.3953,"position/margin/auto-deposit-status":1.3953,"position/margin/deposit-margin":1.3953,"bullet-private":1.3953},delete:{"withdrawals/{withdrawalId}":1.3953,"cancel/transfer-out":1.3953,"orders/{orderId}":1.3953,orders:6.666,stopOrders:1.3953}}},timeframes:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","8h":"8hour","12h":"12hour","1d":"1day","1w":"1week"},precisionMode:n.sh,exceptions:{exact:{"order not exist":r.OrderNotFound,"order not exist.":r.OrderNotFound,order_not_exist:r.OrderNotFound,order_not_exist_or_not_allow_to_cancel:r.InvalidOrder,"Order size below the minimum requirement.":r.InvalidOrder,"The withdrawal amount is below the minimum requirement.":r.ExchangeError,"Unsuccessful! Exceeded the max. funds out-transfer limit":r.InsufficientFunds,400:r.BadRequest,401:r.AuthenticationError,403:r.NotSupported,404:r.NotSupported,405:r.NotSupported,429:r.RateLimitExceeded,500:r.ExchangeNotAvailable,503:r.ExchangeNotAvailable,101030:r.PermissionDenied,103e3:r.InvalidOrder,200004:r.InsufficientFunds,210014:r.InvalidOrder,210021:r.InsufficientFunds,230003:r.InsufficientFunds,26e4:r.InvalidAddress,260100:r.InsufficientFunds,3e5:r.InvalidOrder,4e5:r.BadSymbol,400001:r.AuthenticationError,400002:r.InvalidNonce,400003:r.AuthenticationError,400004:r.AuthenticationError,400005:r.AuthenticationError,400006:r.AuthenticationError,400007:r.AuthenticationError,400008:r.NotSupported,400100:r.BadRequest,400200:r.InvalidOrder,400350:r.InvalidOrder,400370:r.InvalidOrder,400500:r.InvalidOrder,400600:r.BadSymbol,400760:r.InvalidOrder,401e3:r.BadRequest,411100:r.AccountSuspended,415e3:r.BadRequest,5e5:r.ExchangeNotAvailable,260220:r.InvalidAddress,900014:r.BadRequest},broad:{"Exceeded the access frequency":r.RateLimitExceeded,"require more permission":r.PermissionDenied}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("50"),this.parseNumber("0.001")],[this.parseNumber("200"),this.parseNumber("0.0009")],[this.parseNumber("500"),this.parseNumber("0.0008")],[this.parseNumber("1000"),this.parseNumber("0.0007")],[this.parseNumber("2000"),this.parseNumber("0.0007")],[this.parseNumber("4000"),this.parseNumber("0.0006")],[this.parseNumber("8000"),this.parseNumber("0.0005")],[this.parseNumber("15000"),this.parseNumber("0.00045")],[this.parseNumber("25000"),this.parseNumber("0.0004")],[this.parseNumber("40000"),this.parseNumber("0.00035")],[this.parseNumber("60000"),this.parseNumber("0.0003")],[this.parseNumber("80000"),this.parseNumber("0.00025")]],maker:[[this.parseNumber("0"),this.parseNumber("0.001")],[this.parseNumber("50"),this.parseNumber("0.0009")],[this.parseNumber("200"),this.parseNumber("0.0007")],[this.parseNumber("500"),this.parseNumber("0.0005")],[this.parseNumber("1000"),this.parseNumber("0.0003")],[this.parseNumber("2000"),this.parseNumber("0")],[this.parseNumber("4000"),this.parseNumber("0")],[this.parseNumber("8000"),this.parseNumber("0")],[this.parseNumber("15000"),this.parseNumber("-0.00005")],[this.parseNumber("25000"),this.parseNumber("-0.00005")],[this.parseNumber("40000"),this.parseNumber("-0.00005")],[this.parseNumber("60000"),this.parseNumber("-0.00005")],[this.parseNumber("80000"),this.parseNumber("-0.00005")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{BIFI:"BIFIF",EDGE:"DADI",HOT:"HOTNOW",TRY:"Trias",VAI:"VAIOT",WAX:"WAXP"},options:{version:"v1",symbolSeparator:"-",fetchMyTradesMethod:"private_get_fills",fetchMarkets:{fetchTickersFees:!0},withdraw:{includeFee:!1},versions:{public:{GET:{"currencies/{currency}":"v2",status:"v1","market/orderbook/level2_20":"v1","market/orderbook/level2_100":"v1","market/orderbook/level{level}_{limit}":"v1"}},private:{GET:{"market/orderbook/level2":"v3","market/orderbook/level3":"v3","market/orderbook/level{level}":"v3","deposit-addresses":"v1"},POST:{"accounts/inner-transfer":"v2","accounts/sub-transfer":"v2",accounts:"v2"}},futuresPrivate:{GET:{"account-overview":"v1",positions:"v1"},POST:{"transfer-out":"v2"}},futuresPublic:{GET:{"level3/snapshot":"v2"}}},partner:{spot:{id:"ccxt",key:"9e58cc35-5b5e-4133-92ec-166e3f077cb8"},future:{id:"ccxtfutures",key:"1b327198-f30c-4f14-a0ac-918871282f15"}},accountsByType:{spot:"trade",margin:"margin",cross:"margin",isolated:"isolated",main:"main",funding:"main",future:"contract",swap:"contract",mining:"pool"},networks:{Native:"bech32","BTC-Segwit":"btc",ERC20:"eth",BEP20:"bsc",TRC20:"trx",TERRA:"luna",BNB:"bsc",HRC20:"heco",HT:"heco"},networksById:{BEP20:"BSC"},marginModes:{cross:"MARGIN_TRADE",isolated:"MARGIN_ISOLATED_TRADE",spot:"TRADE"}}})}nonce(){return this.milliseconds()}async fetchTime(e={}){const t=await this.publicGetTimestamp(e);return this.safeInteger(t,"data")}async fetchStatus(e={}){const t=await this.publicGetStatus(e),i=this.safeValue(t,"data",{});return{status:"open"===this.safeString(i,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){const t=await this.publicGetSymbols(e),i=this.safeValue(t,"data"),s=this.safeValue(this.options,"fetchMarkets",{});let r={};this.safeValue(s,"fetchTickersFees",!0)&&(r=await this.publicGetMarketAllTickers(e));const n=this.safeValue(r,"data",{}),o=this.safeValue(n,"ticker",[]),d=this.indexBy(o,"symbol"),c=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"symbol"),[r,n]=s.split("-"),o=this.safeCurrencyCode(r),h=this.safeCurrencyCode(n),u=this.safeValue(d,s,{}),l=this.safeString(u,"makerFeeRate"),p=this.safeString(u,"takerFeeRate"),f=this.safeString(u,"makerCoefficient"),m=this.safeString(u,"takerCoefficient");c.push({id:s,symbol:o+"/"+h,base:o,quote:h,settle:void 0,baseId:r,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:this.safeValue(t,"isMarginEnabled"),swap:!1,future:!1,option:!1,active:this.safeValue(t,"enableTrading"),contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(a.O.stringMul(p,m)),maker:this.parseNumber(a.O.stringMul(l,f)),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"baseIncrement"),price:this.safeNumber(t,"priceIncrement")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"baseMinSize"),max:this.safeNumber(t,"baseMaxSize")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"quoteMinSize"),max:this.safeNumber(t,"quoteMaxSize")}},info:t})}return c}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),a=this.safeString(t,"fullName"),n=this.safeCurrencyCode(r),o=this.safeValue(t,"isWithdrawEnabled",!1),d=this.safeValue(t,"isDepositEnabled",!1),c=this.safeNumber(t,"withdrawalMinFee"),h=o&&d;s[n]={id:r,name:a,code:n,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),info:t,active:h,deposit:d,withdraw:o,fee:c,limits:this.limits}}return s}async fetchAccounts(e={}){const t=await this.privateGetAccounts(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"id"),a=this.safeString(t,"currency"),n=this.safeCurrencyCode(a),o=this.safeString(t,"type");s.push({id:r,type:o,currency:n,info:t})}return s}async fetchTransactionFee(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=this.safeValue(this.options,"networks",{});let r=this.safeStringUpper2(t,"network","chain");r=this.safeStringLower(s,r,r),void 0!==r&&(r=r.toLowerCase(),i.chain=r.toLowerCase(),t=this.omit(t,["network","chain"]));const a=await this.privateGetWithdrawalsQuotas(this.extend(i,t)),n=a.data,o={};return o[e]=this.safeNumber(n,"withdrawMinFee"),{info:a,withdraw:o,deposit:{}}}async fetchDepositWithdrawFee(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=this.safeStringUpper(t,"network"),a=this.networkCodeToId(r,e);void 0!==a&&(s.chain=a,t=this.omit(t,["network"]));const n=await this.privateGetWithdrawalsQuotas(this.extend(s,t)),o=this.safeValue(n,"data");return this.parseDepositWithdrawFee(o,i)}parseDepositWithdrawFee(e,t=undefined){const i=this.depositWithdrawFee(e);if(this.safeValue(e,"isWithdrawEnabled")){const s=this.safeString(e,"chain"),r=this.networkIdToCode(s,this.safeString(t,"code"));i.networks[r]={withdraw:{fee:this.safeNumber(e,"withdrawMinFee"),percentage:void 0},deposit:{fee:void 0,percentage:void 0}}}return this.assignDefaultDepositWithdrawFees(i)}isFuturesMethod(e,t){const i=this.safeString2(this.options,e,"defaultType","trade"),s=this.safeString(t,"type",i),a=this.safeValue(this.options,"accountsByType"),n=this.safeString(a,s);if(void 0===n){const e=Object.keys(a);throw new r.ExchangeError(this.id+" isFuturesMethod() type must be one of "+e.join(", "))}return t=this.omit(t,"type"),"contract"===n||"future"===n||"futures"===n}parseTicker(e,t=undefined){let i=this.safeString(e,"changeRate");void 0!==i&&(i=a.O.stringMul(i,"100"));let s=this.safeString2(e,"last","lastTradedPrice");s=this.safeString(e,"price",s);const r=this.safeString(e,"symbol"),n=(t=this.safeMarket(r,t,"-")).symbol,o=this.safeString(e,"vol"),d=this.safeString(e,"volValue"),c=this.safeInteger2(e,"time","datetime");return this.safeTicker({symbol:n,timestamp:c,datetime:this.iso8601(c),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString2(e,"buy","bestBid"),bidVolume:this.safeString(e,"bestBidSize"),ask:this.safeString2(e,"sell","bestAsk"),askVolume:this.safeString(e,"bestAskSize"),vwap:void 0,open:this.safeString(e,"open"),close:s,last:s,previousClose:void 0,change:this.safeString(e,"changePrice"),percentage:i,average:this.safeString(e,"averagePrice"),baseVolume:o,quoteVolume:d,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetMarketAllTickers(t),s=this.safeValue(i,"data",{}),r=this.safeValue(s,"ticker",[]),a=this.safeInteger(s,"time"),n={};for(let e=0;e<r.length;e++){r[e].time=a;const t=this.parseTicker(r[e]),i=this.safeString(t,"symbol");void 0!==i&&(n[i]=t)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetMarketStats(this.extend(s,t));return this.parseTicker(r.data,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,type:this.safeString(this.timeframes,t,t)},o=1e3*this.parseTimeframe(t);let d=this.milliseconds();void 0!==i?(n.startAt=this.parseToInt(Math.floor(i/1e3)),void 0===s&&(s=this.safeInteger(this.options,"fetchOHLCVLimit",1500)),d=this.sum(i,s*o)):void 0!==s&&(i=d-s*o,n.startAt=this.parseToInt(Math.floor(i/1e3))),n.endAt=this.parseToInt(Math.floor(d/1e3));const c=await this.publicGetMarketCandles(this.extend(n,r)),h=this.safeValue(c,"data",[]);return this.parseOHLCVs(h,a,t,i,s)}async createDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=this.safeValue(this.options,"networks",{});let r=this.safeStringUpper2(t,"chain","network");r=this.safeStringLower(s,r,r),void 0!==r&&(r=r.toLowerCase(),i.chain=r,t=this.omit(t,["chain","network"]));const a=await this.privatePostDepositAddresses(this.extend(i,t)),n=this.safeValue(a,"data",{});let o=this.safeString(n,"address");void 0!==o&&(o=o.replace("bitcoincash:",""));const d=this.safeString(n,"memo");return"NIM"!==e&&this.checkAddress(o),{info:a,currency:e,network:this.safeString(n,"chain"),address:o,tag:d}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=this.safeValue(this.options,"networks",{});let a=this.safeStringUpper2(t,"chain","network");a=this.safeStringLower(r,a,a),void 0!==a&&(a=a.toLowerCase(),s.chain=a,t=this.omit(t,["chain","network"]));const n=this.options.versions.private.GET["deposit-addresses"];this.options.versions.private.GET["deposit-addresses"]="v1";const o=await this.privateGetDepositAddresses(this.extend(s,t));this.options.versions.private.GET["deposit-addresses"]=n;const d=this.safeValue(o,"data",{});return this.parseDepositAddress(d,i)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=t.id;return"NIM"!==s&&this.checkAddress(i),{info:e,currency:s,address:i,tag:this.safeString(e,"memo"),network:this.safeString(e,"chain")}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=this.options.versions.private.GET["deposit-addresses"];this.options.versions.private.GET["deposit-addresses"]="v2";const a=await this.privateGetDepositAddresses(this.extend(s,t));this.options.versions.private.GET["deposit-addresses"]=r;const n=this.safeValue(a,"data",[]);return this.parseDepositAddressesByNetwork(n,i)}parseDepositAddressesByNetwork(e,t=undefined){const i=[];for(let s=0;s<e.length;s++){const r=e[s];i.push({info:r,currency:this.safeCurrencyCode(t.id,t),network:this.safeString(r,"chain"),address:this.safeString(r,"address"),tag:this.safeString(r,"memo")})}return i}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),a=this.safeInteger(i,"level",2),n={symbol:s.id};let o,d="publicGetMarketOrderbookLevelLevelLimit";if(this.checkRequiredCredentials(!1)&&void 0===t)d="privateGetMarketOrderbookLevel2";else if(2===a){if(n.level=a,void 0!==t){if(20!==t&&100!==t)throw new r.ExchangeError(this.id+" fetchOrderBook() limit argument must be 20 or 100");n.limit=t}n.limit=t||100}o=await this[d](this.extend(n,i));const c=this.safeValue(o,"data",{}),h=this.safeInteger(c,"time"),u=this.parseOrderBook(c,s.symbol,h,"bids","asks",a-2,a-1);return u.nonce=this.safeInteger(c,"sequence"),u}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=this.safeString2(n,"clientOid","clientOrderId",this.uuid());n=this.omit(n,["clientOid","clientOrderId"]);const c={clientOid:d,side:i,symbol:o.id,type:t},h=this.safeNumber2(n,"cost","funds");let u,l,p;[p,n]=this.handleMarginModeAndParams("createOrder",n),"market"===t?void 0!==h?(n=this.omit(n,["cost","funds"]),l=this.amountToPrecision(e,h),c.funds=l):(u=this.amountToPrecision(e,s),c.size=this.amountToPrecision(e,s)):(u=this.amountToPrecision(e,s),c.size=u,c.price=this.priceToPrecision(e,a));const f=this.safeValue(n,"stopLossPrice"),m=this.safeValue2(n,"takeProfitPrice","stopPrice"),v=void 0!==f,g=void 0!==m;if(v&&g)throw new r.ExchangeError(this.id+" createOrder() stopLossPrice and takeProfitPrice cannot both be defined");n=this.omit(n,["stopLossPrice","takeProfitPrice","stopPrice"]);const y=this.safeString(n,"tradeType");let b="privatePostOrders";if(v||g){c.stop=v?"entry":"loss";const t=v?f:m;if(c.stopPrice=this.priceToPrecision(e,t),b="privatePostStopOrder","isolated"===p)throw new r.BadRequest(this.id+" createOrder does not support isolated margin for stop orders");"cross"===p&&(c.tradeType=this.options.marginModes[p])}else"MARGIN_TRADE"!==y&&void 0===p||(b="privatePostMarginOrder","isolated"===p&&(c.marginModel="isolated"));const w=await this[b](this.extend(c,n)),S=this.safeValue(w,"data",{});return this.parseOrder(S,o)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={},r=this.safeString2(i,"clientOid","clientOrderId"),a=this.safeValue(i,"stop");let n="privateDeleteOrdersOrderId";return void 0!==r?(s.clientOid=r,n=a?"privateDeleteStopOrderCancelOrderByClientOid":"privateDeleteOrderClientOrderClientOid"):(a&&(n="privateDeleteStopOrderOrderId"),s.orderId=e),i=this.omit(i,["clientOid","clientOrderId","stop"]),await this[n](this.extend(s,i))}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={},s=this.safeValue(t,"stop"),[a,n]=this.handleMarginModeAndParams("cancelAllOrders",t);if(void 0!==e&&(i.symbol=this.marketId(e)),void 0!==a&&(i.tradeType=this.options.marginModes[a],"isolated"===a&&s))throw new r.BadRequest(this.id+" cancelAllOrders does not support isolated margin for stop orders");const o=s?"privateDeleteStopOrderCancel":"privateDeleteOrders";return await this[o](this.extend(i,n))}async fetchOrdersByStatus(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();let a=e.toLowerCase();const n=this.safeInteger2(r,"until","till"),o=this.safeValue(r,"stop");r=this.omit(r,["stop","till","until"]);const[d,c]=this.handleMarginModeAndParams("fetchOrdersByStatus",r);"open"===a?a="active":"closed"===a&&(a="done");const h={status:a};let u;void 0!==t&&(u=this.market(t),h.symbol=u.id),void 0!==i&&(h.startAt=i),void 0!==s&&(h.pageSize=s),n&&(h.endAt=n);let l="privateGetOrders";o&&(l="privateGetStopOrder"),h.tradeType=this.safeString(this.options.marginModes,d,"TRADE");const p=await this[l](this.extend(h,c)),f=this.safeValue(p,"data",{}),m=this.safeValue(f,"items",[]);return this.parseOrders(m,u,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("done",e,t,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("active",e,t,i,s)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={},a=this.safeString2(i,"clientOid","clientOrderId"),n=this.safeValue(i,"stop");let o;void 0!==t&&(o=this.market(t)),i=this.omit(i,"stop");let d="privateGetOrdersOrderId";if(void 0!==a)s.clientOid=a,n?(d="privateGetStopOrderQueryOrderByClientOid",void 0!==t&&(s.symbol=o.id)):d="privateGetOrderClientOrderClientOid";else{if(void 0===e)throw new r.InvalidOrder(this.id+" fetchOrder() requires an order id");n&&(d="privateGetStopOrderOrderId"),s.orderId=e}i=this.omit(i,["clientOid","clientOrderId"]);const c=await this[d](this.extend(s,i));let h=this.safeValue(c,"data");return"privateGetStopOrderQueryOrderByClientOid"===d&&(h=this.safeValue(h,0)),this.parseOrder(h,o)}parseOrder(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeInteger(e,"createdAt"),r=this.safeString(e,"feeCurrency"),a=this.safeValue(e,"cancelExist",!1),n=void 0!==this.safeString(e,"stop"),o=this.safeValue(e,"stopTriggered",!1),d=this.safeValue(e,"isActive");let c;!0===d&&(c="open"),n&&("NEW"===this.safeString(e,"status")?c="open":d||o||(c="cancelled")),a&&(c="canceled"),void 0===c&&(c="closed");const h=this.safeNumber(e,"stopPrice");return this.safeOrder({info:e,id:this.safeString2(e,"id","orderId"),clientOrderId:this.safeString(e,"clientOid"),symbol:this.safeSymbol(i,t,"-"),type:this.safeString(e,"type"),timeInForce:this.safeString(e,"timeInForce"),postOnly:this.safeValue(e,"postOnly"),side:this.safeString(e,"side"),amount:this.safeString(e,"size"),price:this.safeString(e,"price"),stopPrice:h,triggerPrice:h,cost:this.safeString(e,"dealFunds"),filled:this.safeString(e,"dealSize"),remaining:void 0,timestamp:s,datetime:this.iso8601(s),fee:{currency:this.safeCurrencyCode(r),cost:this.safeNumber(e,"fee")},status:c,lastTradeTimestamp:void 0,average:void 0,trades:void 0},t)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){const a={orderId:e};return await this.fetchMyTrades(t,i,s,this.extend(a,r))}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;void 0!==e&&(n=this.market(e),a.symbol=n.id),void 0!==i&&(a.pageSize=i);const o=this.options.fetchMyTradesMethod;let d=!1;if("private_get_fills"===o)void 0!==t&&(a.startAt=t);else if("private_get_limit_fills"===o)d=!0;else{if("private_get_hist_orders"!==o)throw new r.ExchangeError(this.id+" fetchMyTradesMethod() invalid method");void 0!==t&&(a.startAt=this.parseToInt(t/1e3))}const c=await this[o](this.extend(a,s)),h=this.safeValue(c,"data",{});let u;return u=d?h:this.safeValue(h,"items",[]),this.parseTrades(u,n,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetMarketHistories(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t,"-");const s=this.safeString2(e,"tradeId","id"),r=this.safeString(e,"orderId"),a=this.safeString(e,"liquidity");let n=this.safeInteger(e,"time");void 0!==n?n=this.parseToInt(n/1e6):(n=this.safeInteger(e,"createdAt"),"dealValue"in e&&void 0!==n&&(n*=1e3));const o=this.safeString2(e,"price","dealPrice"),d=this.safeString2(e,"size","amount"),c=this.safeString(e,"side");let h;const u=this.safeString(e,"fee");if(void 0!==u){const i=this.safeString(e,"feeCurrency");let s=this.safeCurrencyCode(i);void 0===s&&(s="sell"===c?t.quote:t.base),h={cost:u,currency:s,rate:this.safeString(e,"feeRate")}}let l=this.safeString(e,"type");"match"===l&&(l=void 0);const p=this.safeString2(e,"funds","dealValue");return this.safeTrade({info:e,id:s,order:r,timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:l,takerOrMaker:a,side:c,price:o,amount:d,cost:p,fee:h},t)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbols:i.id},r=await this.privateGetTradeFees(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0),o=this.safeString(n,"symbol");return{info:r,symbol:this.safeSymbol(o,i),maker:this.safeNumber(n,"makerFeeRate"),taker:this.safeNumber(n,"takerFeeRate"),percentage:!0,tierBased:!0}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);const a=this.currency(e),n={currency:a.id,address:i,amount:t};void 0!==s&&(n.memo=s);const o=this.safeValue(this.options,"networks",{});let d=this.safeStringUpper(r,"network");d=this.safeStringLower(o,d,d),void 0!==d&&(d=d.toLowerCase(),n.chain=d,r=this.omit(r,"network"));const c=this.safeValue(this.options,"withdraw",{});this.safeValue(c,"includeFee",!1)&&(n.feeDeductType="INTERNAL");const h=await this.privatePostWithdrawals(this.extend(n,r)),u=this.safeValue(h,"data",{});return this.parseTransaction(u,a)}parseTransactionStatus(e){return this.safeString({SUCCESS:"ok",PROCESSING:"pending",WALLET_PROCESSING:"pending",FAILURE:"failed"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"currency"),s=this.safeCurrencyCode(i,t);let r=this.safeString(e,"address");const n=this.safeString(e,"amount");let o=this.safeString(e,"walletTxId");if(void 0!==o){const e=o.split("@");e.length>1&&void 0===r&&e[1].length>1&&(r=e[1]),o=e[0]}let d=void 0===o?"withdrawal":"deposit";const c=this.safeString(e,"status");let h;const u=this.safeString(e,"fee");if(void 0!==u){let e;void 0!==n&&(e=a.O.stringDiv(u,n)),h={cost:this.parseNumber(u),rate:this.parseNumber(e),currency:s}}let l=this.safeInteger2(e,"createdAt","createAt"),p=this.safeInteger(e,"updatedAt");!("createdAt"in e)&&(d="address"in e?"withdrawal":"deposit",void 0!==l&&(l*=1e3),void 0!==p&&(p*=1e3));const f=this.safeString(e,"memo"),m=this.safeString(e,"chain");return{info:e,id:this.safeString2(e,"id","withdrawalId"),timestamp:l,datetime:this.iso8601(l),network:m,address:r,addressTo:r,addressFrom:void 0,tag:f,tagTo:f,tagFrom:void 0,currency:s,amount:this.parseNumber(n),txid:o,type:d,status:this.parseTransactionStatus(c),comment:this.safeString(e,"remark"),fee:h,updated:p}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.pageSize=i);let n="privateGetDeposits";void 0!==t&&(t<1550448e6?(r.startAt=this.parseToInt(t/1e3),n="privateGetHistDeposits"):r.startAt=t);const o=(await this[n](this.extend(r,s))).data.items;return this.parseTransactions(o,a,t,i,{type:"deposit"})}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.pageSize=i);let n="privateGetWithdrawals";void 0!==t&&(t<1550448e6?(r.startAt=this.parseToInt(t/1e3),n="privateGetHistWithdrawals"):r.startAt=t);const o=(await this[n](this.extend(r,s))).data.items;return this.parseTransactions(o,a,t,i,{type:"withdrawal"})}parseBalanceHelper(e){const t=this.account();t.used=this.safeString(e,"holdBalance"),t.free=this.safeString(e,"availableBalance"),t.total=this.safeString(e,"totalBalance");const i=this.safeString(e,"liability"),s=this.safeString(e,"interest");return t.debt=a.O.stringAdd(i,s),t}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"code");let i;void 0!==t&&(i=this.currency(t));const s=this.safeString2(this.options,"fetchBalance","defaultType","spot"),r=this.safeString(e,"type",s),a=this.safeValue(this.options,"accountsByType"),n=this.safeString(a,r,r);e=this.omit(e,"type");const[o,d]=this.handleMarginModeAndParams("fetchBalance",e);let c="privateGetAccounts";const h={},u="isolated"===o||"isolated"===n,l="cross"===o||"cross"===n;u?(c="privateGetIsolatedAccounts",void 0!==i&&(h.balanceCurrency=i.id)):l?c="privateGetMarginAccount":(void 0!==i&&(h.currency=i.id),h.type=n);const p=await this[c](this.extend(h,d)),f=this.safeValue(p,"data",[]),m={info:p,timestamp:void 0,datetime:void 0};if(u){const e=this.safeValue(f,"assets",[]);for(let t=0;t<e.length;t++){const i=e[t],s=this.safeString(i,"symbol"),r=this.safeSymbol(s,void 0,"_"),a=this.safeValue(i,"baseAsset",{}),n=this.safeValue(i,"quoteAsset",{}),o=this.safeCurrencyCode(this.safeString(a,"currency")),d=this.safeCurrencyCode(this.safeString(n,"currency")),c={};c[o]=this.parseBalanceHelper(a),c[d]=this.parseBalanceHelper(n),m[r]=this.safeBalance(c)}}else if(l){const e=this.safeValue(f,"accounts",[]);for(let t=0;t<e.length;t++){const i=e[t],s=this.safeString(i,"currency");m[this.safeCurrencyCode(s)]=this.parseBalanceHelper(i)}}else for(let e=0;e<f.length;e++){const t=f[e];if(this.safeString(t,"type")===n){const e=this.safeString(t,"currency"),i=this.safeCurrencyCode(e),s=this.account();s.total=this.safeString(t,"balance"),s.free=this.safeString(t,"available"),s.used=this.safeString(t,"holds"),m[i]=s}}return u?m:this.safeBalance(m)}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.currency(e),o=this.currencyToPrecision(e,t);let d=this.convertTypeToAccount(i),c=this.convertTypeToAccount(s);const h=this.inArray(d,this.ids),u=this.inArray(c,this.ids);if("contract"===d){if("main"!==c)throw new r.ExchangeError(this.id+" transfer() only supports transferring from futures account to main account");const e={currency:n.id,amount:o};"bizNo"in a||(e.bizNo=this.uuid22());const t=await this.futuresPrivatePostTransferOut(this.extend(e,a)),i=this.safeValue(t,"data");return this.parseTransfer(i,n)}{const e={currency:n.id,amount:o};(h||u)&&(this.inArray(d,this.ids)&&(e.fromTag=d,d="isolated"),this.inArray(c,this.ids)&&(e.toTag=c,c="isolated")),e.from=d,e.to=c,"clientOid"in a||(e.clientOid=this.uuid());const t=await this.privatePostAccountsInnerTransfer(this.extend(e,a)),i=this.safeValue(t,"data");return this.parseTransfer(i,n)}}parseTransfer(e,t=undefined){const i=this.safeInteger(e,"createdAt"),s=this.safeString(e,"currency"),r=this.safeString(e,"status"),a=this.safeStringLower(e,"payAccountType"),n=this.safeStringLower(e,"recAccountType"),o=this.safeValue(this.options,"accountsByType"),d=this.safeString(o,a,a),c=this.safeString(o,n,n);return{id:this.safeString2(e,"applyId","orderId"),currency:this.safeCurrencyCode(s,t),timestamp:i,datetime:this.iso8601(i),amount:this.safeNumber(e,"amount"),fromAccount:d,toAccount:c,status:this.parseTransferStatus(r),info:e}}parseTransferStatus(e){return this.safeString({PROCESSING:"pending"},e,e)}parseLedgerEntryType(e){return this.safeString({"Assets Transferred in After Upgrading":"transfer",Deposit:"transaction",Withdrawal:"transaction",Transfer:"transfer",Trade_Exchange:"trade","KuCoin Bonus":"bonus","Referral Bonus":"referral",Rewards:"bonus","Airdrop/Fork":"airdrop","Other rewards":"bonus","Fee Rebate":"rebate","Buy Crypto":"trade","Sell Crypto":"sell","Public Offering Purchase":"trade","Refunded Fees":"fee","KCS Pay Fees":"fee","Margin Trade":"trade",Loans:"Loans","Instant Exchange":"trade","Sub-account transfer":"transfer","Liquidation Fees":"fee"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s,t),a=this.safeNumber(e,"amount"),n=this.safeString(e,"bizType"),o=this.parseLedgerEntryType(n),d=this.safeString(e,"direction"),c=this.safeInteger(e,"createdAt"),h=this.iso8601(c),u=this.safeString(e,"accountType"),l=this.safeString(e,"context");let p,f;if(void 0!==l&&""!==l)try{const e=JSON.parse(l),t=this.safeString(e,"orderId"),i=this.safeString(e,"tradeId");p=void 0!==i?i:t}catch(e){p=l}const m=this.safeNumber(e,"fee");let v;return 0!==m&&(v=r,f={cost:m,currency:v}),{id:i,direction:d,account:u,referenceId:p,referenceAccount:u,type:o,currency:r,amount:a,timestamp:c,datetime:h,before:void 0,after:void 0,status:void 0,fee:f,info:e}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.loadAccounts();const r={};let a;void 0!==t&&(r.startAt=t),void 0!==e&&(a=this.currency(e),r.currency=a.id);const n=await this.privateGetAccountsLedgers(this.extend(r,s)),o=this.safeValue(n,"data"),d=this.safeValue(o,"items");return this.parseLedger(d,a,t,i)}calculateRateLimiterCost(e,t,i,s,r={},a={}){const n=this.safeValue(this.options,"versions",{}),o=this.safeValue(n,e,{}),d=this.safeValue(o,t,{}),c=this.safeString(d,i,this.options.version),h=this.safeString(s,"version",c);return"v3"===h&&"v3"in r?r.v3:"v2"===h&&"v2"in r?r.v2:"v1"===h&&"v1"in r?r.v1:this.safeValue(r,"cost",1)}async fetchBorrowRateHistory(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={currency:this.currency(e).id},a=await this.publicGetMarginTradeLast(this.extend(r,s)),n=this.safeValue(a,"data",{});return this.parseBorrowRateHistory(n,e,t,i)}parseBorrowRateHistory(e,t,i,s){const r=[];for(let t=0;t<e.length;t++){const i=e[t],s=this.parseBorrowRate(i);r.push(s)}const a=this.sortBy(r,"timestamp");return this.filterByCurrencySinceLimit(a,t,i,s)}parseBorrowRate(e,t=undefined){const i=this.safeString(e,"timestamp"),s=a.O.stringMul(i,"0.000001"),r=this.safeString(e,"currency");return{currency:this.safeCurrencyCode(r,t),rate:this.safeNumber(e,"dailyIntRate"),period:864e5,timestamp:s,datetime:this.iso8601(s),info:e}}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),[a,r]=this.handleMarginModeAndParams("fetchBorrowInterest",r),void 0===a&&(a="cross");const n={};let o="privateGetMarginBorrowOutstanding";if("isolated"===a){if(void 0!==e){const t=this.currency(e);n.balanceCurrency=t.id}o="privateGetIsolatedAccounts"}else if(void 0!==e){const t=this.currency(e);n.currency=t.id}const d=await this[o](this.extend(n,r)),c=this.safeValue(d,"data",{}),h="isolated"===a?this.safeValue(c,"assets",[]):this.safeValue(c,"items",[]);return this.parseBorrowInterests(h,void 0)}parseBorrowInterest(e,t=undefined){const i=this.safeString(e,"symbol"),s=void 0===i?"cross":"isolated";t=this.safeMarket(i,t);const r=this.safeString(t,"symbol"),a=this.safeInteger(e,"createdAt"),n=this.safeValue(e,"baseAsset",{});let o,d,c;return"isolated"===s?(o=this.safeNumber(n,"liability"),d=this.safeNumber(n,"interest"),c=this.safeString(n,"currency")):(o=this.safeNumber(e,"principal"),d=this.safeNumber(e,"accruedInterest"),c=this.safeString(e,"currency")),{symbol:r,marginMode:s,currency:this.safeCurrencyCode(c),interest:d,interestRate:this.safeNumber(e,"dailyIntRate"),amountBorrowed:o,timestamp:a,datetime:this.iso8601(a),info:e}}async borrowMargin(e,t,i=undefined,s={}){const r=this.safeString(s,"marginMode");s=this.omit(s,"marginMode"),this.checkRequiredMarginArgument("borrowMargin",i,r),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,size:this.currencyToPrecision(e,t)};let o;const d=this.safeStringN(s,["timeInForce","type","borrowStrategy"],"IOC");let c;if(void 0===i)o="privatePostMarginBorrow",c="type";else{const e=this.market(i);n.symbol=e.id,c="borrowStrategy",o="privatePostIsolatedBorrow"}n[c]=d,s=this.omit(s,["timeInForce","type","borrowStrategy"]);const h=await this[o](this.extend(n,s)),u=this.safeValue(h,"data",{});return this.parseMarginLoan(u,a)}async repayMargin(e,t,i=undefined,s={}){const r=this.safeString(s,"marginMode");s=this.omit(s,"marginMode"),this.checkRequiredMarginArgument("repayMargin",i,r),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,size:this.currencyToPrecision(e,t)};let o;const d=this.safeString2(s,"sequence","seqStrategy","RECENTLY_EXPIRE_FIRST");let c;if(void 0===i)o="privatePostMarginRepayAll",c="sequence";else{const e=this.market(i);n.symbol=e.id,c="seqStrategy",o="privatePostIsolatedRepayAll"}n[c]=d,s=this.omit(s,["sequence","seqStrategy"]);const h=await this[o](this.extend(n,s));return this.parseMarginLoan(h,a)}parseMarginLoan(e,t=undefined){const i=this.milliseconds(),s=this.safeString(e,"currency");return{id:this.safeString(e,"orderId"),currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"actualSize"),symbol:void 0,timestamp:i,datetime:this.iso8601(i),info:e}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.safeValue(this.options,"versions",{}),d=this.safeValue(n,t,{}),c=this.safeValue(d,i,{}),h=this.safeString(c,e,this.options.version),u=this.safeString(s,"version",h);s=this.omit(s,"version");let l="/api/"+u+"/"+this.implodeParams(e,s);"webFront"===t&&(l="/"+this.implodeParams(e,s));const p=this.omit(s,this.extractParams(e));let f="";r=void 0!==r?r:{};let m=this.urls.api[t];const v=m.indexOf("sandbox")>=0;"symbols"!==e||v||(l="/api/v2/"+this.implodeParams(e,s)),Object.keys(p).length&&("GET"===i||"DELETE"===i?l+="?"+this.rawencode(p):(f=a=this.json(p),r["Content-Type"]="application/json")),m+=l;const g="futuresPrivate"===t;if("private"===t||g){this.checkRequiredCredentials();const e=this.nonce().toString();if(r=this.extend({"KC-API-KEY-VERSION":"2","KC-API-KEY":this.apiKey,"KC-API-TIMESTAMP":e},r),"2"===this.safeString(r,"KC-API-KEY-VERSION")){const e=this.hmac(this.encode(this.password),this.encode(this.secret),o.J,"base64");r["KC-API-PASSPHRASE"]=e}else r["KC-API-PASSPHRASE"]=this.password;const t=e+i+l+f,s=this.hmac(this.encode(t),this.encode(this.secret),o.J,"base64");r["KC-API-SIGN"]=s;let a=this.safeValue(this.options,"partner",{});a=g?this.safeValue(a,"future",a):this.safeValue(a,"spot",a);const n=this.safeString(a,"id"),d=this.safeString2(a,"secret","key");if(void 0!==n&&void 0!==d){const t=e+n+this.apiKey,i=this.hmac(this.encode(t),this.encode(d),o.J,"base64");r["KC-API-PARTNER-SIGN"]=i,r["KC-API-PARTNER"]=n}}return{url:m,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,d){if(!n)return void this.throwBroadlyMatchedException(this.exceptions.broad,a,a);const c=this.safeString(n,"code"),h=this.safeString(n,"msg",""),u=this.id+" "+h;this.throwExactlyMatchedException(this.exceptions.exact,h,u),this.throwExactlyMatchedException(this.exceptions.exact,c,u),this.throwBroadlyMatchedException(this.exceptions.broad,a,u)}}},1924:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(6689),r=i(2194),a=i(9292),n=i(5667);class o extends n.Z{describe(){return this.deepExtend(super.describe(),{id:"kucoinfutures",name:"KuCoin Futures",countries:["SC"],rateLimit:75,version:"v1",certified:!1,pro:!0,comment:"Platform 2.0",quoteJsonNumbers:!1,has:{CORS:void 0,spot:!1,margin:!1,swap:!0,future:!0,option:!1,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!1,fetchDepositAddress:!0,fetchDeposits:!0,fetchDepositWithdrawFee:!1,fetchDepositWithdrawFees:!1,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:!0,fetchLedger:!0,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!1,fetchTime:!0,fetchTrades:!0,fetchTransactionFee:!1,fetchWithdrawals:!0,setMarginMode:!1,transfer:!0,withdraw:void 0},urls:{logo:"https://user-images.githubusercontent.com/1294454/147508995-9e35030a-d046-43a1-a006-6fabd981b554.jpg",doc:["https://docs.kucoin.com/futures","https://docs.kucoin.com"],www:"https://futures.kucoin.com/",referral:"https://futures.kucoin.com/?rcode=E5wkqe",api:{public:"https://openapi-v2.kucoin.com",private:"https://openapi-v2.kucoin.com",futuresPrivate:"https://api-futures.kucoin.com",futuresPublic:"https://api-futures.kucoin.com",webFront:"https://futures.kucoin.com/_api/web-front"},test:{public:"https://openapi-sandbox.kucoin.com",private:"https://openapi-sandbox.kucoin.com",futuresPrivate:"https://api-sandbox-futures.kucoin.com",futuresPublic:"https://api-sandbox-futures.kucoin.com"}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},api:{futuresPublic:{get:{"contracts/active":1,"contracts/{symbol}":1,"contracts/risk-limit/{symbol}":1,ticker:1,"level2/snapshot":1.33,"level2/depth{limit}":1,"level2/message/query":1,"level3/message/query":1,"level3/snapshot":1,"trade/history":1,"interest/query":1,"index/query":1,"mark-price/{symbol}/current":1,"premium/query":1,"funding-rate/{symbol}/current":1,timestamp:1,status:1,"kline/query":1},post:{"bullet-public":1}},futuresPrivate:{get:{"account-overview":1.33,"transaction-history":4.44,"deposit-address":1,"deposit-list":1,"withdrawals/quotas":1,"withdrawal-list":1,"transfer-list":1,orders:1.33,stopOrders:1,recentDoneOrders:1,"orders/{orderId}":1,"orders/byClientOid":1,fills:4.44,recentFills:4.44,openOrderStatistics:1,position:1,positions:4.44,"funding-history":4.44},post:{withdrawals:1,"transfer-out":1,orders:1.33,"position/margin/auto-deposit-status":1,"position/margin/deposit-margin":1,"bullet-private":1},delete:{"withdrawals/{withdrawalId}":1,"cancel/transfer-out":1,"orders/{orderId}":1,orders:4.44,stopOrders:1}},webFront:{get:{"contract/{symbol}/funding-rates":1}}},precisionMode:a.sh,exceptions:{exact:{400:s.BadRequest,401:s.AuthenticationError,403:s.NotSupported,404:s.NotSupported,405:s.NotSupported,415:s.BadRequest,429:s.RateLimitExceeded,500:s.ExchangeNotAvailable,503:s.ExchangeNotAvailable,100001:s.InvalidOrder,100004:s.BadRequest,101030:s.PermissionDenied,200004:s.InsufficientFunds,230003:s.InsufficientFunds,260100:s.InsufficientFunds,300003:s.InsufficientFunds,300012:s.InvalidOrder,400001:s.AuthenticationError,400002:s.InvalidNonce,400003:s.AuthenticationError,400004:s.AuthenticationError,400005:s.AuthenticationError,400006:s.AuthenticationError,400007:s.AuthenticationError,404e3:s.NotSupported,400100:s.BadRequest,411100:s.AccountSuspended,5e5:s.ExchangeNotAvailable},broad:{"Position does not exist":s.OrderNotFound}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0006"),maker:this.parseNumber("0.0002"),tiers:{taker:[[this.parseNumber("0"),this.parseNumber("0.0006")],[this.parseNumber("50"),this.parseNumber("0.0006")],[this.parseNumber("200"),this.parseNumber("0.0006")],[this.parseNumber("500"),this.parseNumber("0.0005")],[this.parseNumber("1000"),this.parseNumber("0.0004")],[this.parseNumber("2000"),this.parseNumber("0.0004")],[this.parseNumber("4000"),this.parseNumber("0.00038")],[this.parseNumber("8000"),this.parseNumber("0.00035")],[this.parseNumber("15000"),this.parseNumber("0.00032")],[this.parseNumber("25000"),this.parseNumber("0.0003")],[this.parseNumber("40000"),this.parseNumber("0.0003")],[this.parseNumber("60000"),this.parseNumber("0.0003")],[this.parseNumber("80000"),this.parseNumber("0.0003")]],maker:[[this.parseNumber("0"),this.parseNumber("0.02")],[this.parseNumber("50"),this.parseNumber("0.015")],[this.parseNumber("200"),this.parseNumber("0.01")],[this.parseNumber("500"),this.parseNumber("0.01")],[this.parseNumber("1000"),this.parseNumber("0.01")],[this.parseNumber("2000"),this.parseNumber("0")],[this.parseNumber("4000"),this.parseNumber("0")],[this.parseNumber("8000"),this.parseNumber("0")],[this.parseNumber("15000"),this.parseNumber("-0.003")],[this.parseNumber("25000"),this.parseNumber("-0.006")],[this.parseNumber("40000"),this.parseNumber("-0.009")],[this.parseNumber("60000"),this.parseNumber("-0.012")],[this.parseNumber("80000"),this.parseNumber("-0.015")]]}},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{HOT:"HOTNOW",EDGE:"DADI",WAX:"WAXP",TRY:"Trias",VAI:"VAIOT",XBT:"BTC"},timeframes:{"1m":1,"3m":void 0,"5m":5,"15m":15,"30m":30,"1h":60,"2h":120,"4h":240,"6h":void 0,"8h":480,"12h":720,"1d":1440,"1w":10080},options:{version:"v1",symbolSeparator:"-",defaultType:"swap",code:"USDT",marginModes:{},marginTypes:{},versions:{futuresPrivate:{POST:{"transfer-out":"v2"}},futuresPublic:{GET:{"level3/snapshot":"v2"}}},networks:{OMNI:"omni",ERC20:"eth",TRC20:"trx"}}})}async fetchStatus(e={}){const t=await this.futuresPublicGetStatus(e),i=this.safeValue(t,"data",{});return{status:"open"===this.safeString(i,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchMarkets(e={}){const t=await this.futuresPublicGetContractsActive(e),i=[],s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],a=this.safeString(t,"symbol"),n=this.safeInteger(t,"expireDate"),o=!!n,d=!o,c=this.safeString(t,"baseCurrency"),h=this.safeString(t,"quoteCurrency"),u=this.safeString(t,"settleCurrency"),l=this.safeCurrencyCode(c),p=this.safeCurrencyCode(h),f=this.safeCurrencyCode(u);let m=l+"/"+p+":"+f,v="swap";o&&(m=m+"-"+this.yymmdd(n,""),v="future");const g=this.safeValue(t,"isInverse"),y=this.safeString(t,"status"),b=this.safeString(t,"multiplier"),w=this.safeNumber(t,"tickSize"),S=this.safeNumber(t,"lotSize");let P=S;void 0===P&&(P=this.safeNumber(t,"baseMinSize"));let k=this.safeNumber(t,"maxOrderQty");void 0===k&&(k=this.safeNumber(t,"baseMaxSize"));let O=this.safeNumber(t,"maxPrice");if(void 0===O){const e=this.safeString(t,"baseMinSize"),i=this.safeString(t,"quoteMaxSize");O=this.parseNumber(r.O.stringDiv(i,e))}i.push({id:a,symbol:m,base:l,quote:p,settle:f,baseId:c,quoteId:h,settleId:u,type:v,spot:!1,margin:!1,swap:d,future:o,option:!1,active:"Open"===y,contract:!0,linear:!g,inverse:g,taker:this.safeNumber(t,"takerFeeRate"),maker:this.safeNumber(t,"makerFeeRate"),contractSize:this.parseNumber(r.O.stringAbs(b)),expiry:n,expiryDatetime:this.iso8601(n),strike:void 0,optionType:void 0,precision:{amount:S,price:w},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(t,"maxLeverage")},amount:{min:P,max:k},price:{min:w,max:O},cost:{min:this.safeNumber(t,"quoteMinSize"),max:this.safeNumber(t,"quoteMaxSize")}},info:t})}return i}async fetchTime(e={}){const t=await this.futuresPublicGetTimestamp(e);return this.safeNumber(t,"data")}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=a.id,o=this.safeInteger(this.timeframes,t),d={symbol:n};d.granularity=void 0!==o?o:t;const c=1e3*this.parseTimeframe(t);let h=this.milliseconds();void 0!==i?(d.from=i,void 0===s&&(s=this.safeInteger(this.options,"fetchOHLCVLimit",200)),h=this.sum(i,s*c)):void 0!==s&&(i=h-s*c,d.from=i),d.to=h;const u=await this.futuresPublicGetKlineQuery(this.extend(d,r)),l=this.safeValue(u,"data",[]);return this.parseOHLCVs(l,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e).id,s={currency:i},r=await this.futuresPrivateGetDepositAddress(this.extend(s,t)),a=this.safeValue(r,"data",{}),n=this.safeString(a,"address");return"NIM"!==i&&this.checkAddress(n),{info:r,currency:i,address:n,tag:this.safeString(a,"memo"),network:this.safeString(a,"chain")}}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const r=this.safeNumber(i,"level");if(2!==r&&void 0!==r)throw new s.BadRequest(this.id+" fetchOrderBook() can only return level 2");const a=this.market(e),n={symbol:a.id};if(void 0!==t){if(20!==t&&100!==t)throw new s.BadRequest(this.id+" fetchOrderBook() limit argument must be 20 or 100");n.limit=t}else n.limit=20;const o=await this.futuresPublicGetLevel2DepthLimit(this.extend(n,i)),d=this.safeValue(o,"data",{}),c=this.parseToInt(this.safeInteger(d,"ts")/1e6),h=this.parseOrderBook(d,a.symbol,c,"bids","asks",0,1);return h.nonce=this.safeInteger(d,"sequence"),h}async fetchL3OrderBook(e,t=undefined,i={}){throw new s.BadRequest(this.id+" fetchL3OrderBook() is not supported yet")}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.futuresPublicGetTicker(this.extend(s,t));return this.parseTicker(r.data,i)}parseTicker(e,t=undefined){const i=this.safeString(e,"price"),s=this.safeString(e,"symbol");t=this.safeMarket(s,t,"-");const r=this.safeIntegerProduct(e,"ts",1e-6);return this.safeTicker({symbol:t.symbol,timestamp:r,datetime:this.iso8601(r),high:void 0,low:void 0,bid:this.safeString(e,"bestBidPrice"),bidVolume:this.safeString(e,"bestBidSize"),ask:this.safeString(e,"bestAskPrice"),askVolume:this.safeString(e,"bestAskSize"),vwap:void 0,open:void 0,close:i,last:i,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,r={}){if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchFundingHistory() requires a symbol argument");await this.loadMarkets();const a={symbol:this.market(e).id};void 0!==t&&(a.startAt=t),void 0!==i&&(a.maxCount=i);const n=await this.futuresPrivateGetFundingHistory(this.extend(a,r)),o=this.safeValue(n,"data"),d=this.safeValue(o,"dataList",[]),c=[];for(let t=0;t<d.length;t++){const i=d[t],s=this.safeInteger(i,"timePoint");c.push({info:i,symbol:e,code:this.safeCurrencyCode(this.safeString(i,"settleCurrency")),timestamp:s,datetime:this.iso8601(s),id:this.safeNumber(i,"id"),amount:this.safeNumber(i,"funding"),fundingRate:this.safeNumber(i,"fundingRate"),markPrice:this.safeNumber(i,"markPrice"),positionQty:this.safeNumber(i,"positionQty"),positionCost:this.safeNumber(i,"positionCost")})}return c}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.futuresPrivateGetPositions(t),s=this.safeValue(i,"data");return this.parsePositions(s,e)}parsePosition(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const s=this.safeNumber(e,"currentTimestamp"),a=this.safeString(e,"currentQty");let n;r.O.stringGt(a,"0")?n="long":r.O.stringLt(a,"0")&&(n="short");const o=r.O.stringAbs(this.safeString(e,"posCost")),d=this.safeString(e,"posInit"),c=r.O.stringDiv(d,o),h=this.safeString(e,"unrealisedPnl"),u=this.safeValue(e,"crossMode")?"cross":"isolated";return{info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:s,datetime:this.iso8601(s),initialMargin:this.parseNumber(d),initialMarginPercentage:this.parseNumber(c),maintenanceMargin:this.safeNumber(e,"posMaint"),maintenanceMarginPercentage:this.safeNumber(e,"maintMarginReq"),entryPrice:this.safeNumber(e,"avgEntryPrice"),notional:this.parseNumber(o),leverage:this.safeNumber(e,"realLeverage"),unrealizedPnl:this.parseNumber(h),contracts:this.parseNumber(r.O.stringAbs(a)),contractSize:this.safeValue(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"liquidationPrice"),markPrice:this.safeNumber(e,"markPrice"),collateral:this.safeNumber(e,"maintMargin"),marginMode:u,side:n,percentage:this.parseNumber(r.O.stringDiv(h,d))}}async createOrder(e,t,i,r,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=this.safeString2(n,"clientOid","clientOrderId",this.uuid());if(n=this.omit(n,["clientOid","clientOrderId"]),r<1)throw new s.InvalidOrder(this.id+" createOrder() minimum contract order amount is 1");const c=parseInt(this.amountToPrecision(e,r)),h={clientOid:d,side:i,symbol:o.id,type:t,size:c,leverage:1},u=this.safeValue2(n,"triggerPrice","stopPrice"),l=this.safeValue(n,"stopLossPrice"),p=this.safeValue(n,"takeProfitPrice"),f=void 0!==l,m=void 0!==p;u?(h.stop="buy"===i?"up":"down",h.stopPrice=this.priceToPrecision(e,u),h.stopPriceType="MP"):(f||m)&&(f?(h.stop="buy"===i?"up":"down",h.stopPrice=this.priceToPrecision(e,l)):(h.stop="buy"===i?"down":"up",h.stopPrice=this.priceToPrecision(e,p)),h.reduceOnly=!0,h.stopPriceType="MP");const v=t.toUpperCase(),g=this.safeStringUpper(n,"timeInForce");if("LIMIT"===v){if(void 0===a)throw new s.ArgumentsRequired(this.id+" createOrder() requires a price argument for limit orders");h.price=this.priceToPrecision(e,a),void 0!==g&&(h.timeInForce=g)}const y=this.safeValue(n,"postOnly",!1),b=this.safeValue(n,"hidden");if(y&&void 0!==b)throw new s.BadRequest(this.id+" createOrder() does not support the postOnly parameter together with a hidden parameter");if(this.safeValue(n,"iceberg")&&void 0===this.safeValue(n,"visibleSize"))throw new s.ArgumentsRequired(this.id+" createOrder() requires a visibleSize parameter for iceberg orders");n=this.omit(n,["timeInForce","stopPrice","triggerPrice","stopLossPrice","takeProfitPrice"]);const w=await this.futuresPrivatePostOrders(this.extend(h,n)),S=this.safeValue(w,"data",{});return{id:this.safeString(S,"orderId"),clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0,timeInForce:void 0,postOnly:void 0,stopPrice:void 0,triggerPrice:void 0,info:w}}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderId:e},r=await this.futuresPrivateDeleteOrdersOrderId(this.extend(s,i));return this.safeValue(r,"data")}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};void 0!==e&&(i.symbol=this.marketId(e));const s=this.safeValue(t,"stop")?"futuresPrivateDeleteStopOrders":"futuresPrivateDeleteOrders",r=await this[s](this.extend(i,t));return this.safeValue(r,"data")}async addMargin(e,t,i={}){await this.loadMarkets();const s=this.market(e),r=this.uuid(),a={symbol:s.id,margin:this.amountToPrecision(e,t),bizNo:r},n=await this.futuresPrivatePostPositionMarginDepositMargin(this.extend(a,i)),o=this.safeValue(n,"data");return this.extend(this.parseMarginModification(o,s),{amount:this.amountToPrecision(e,t),direction:"in"})}parseMarginModification(e,t=undefined){const i=this.safeString(e,"id");t=this.safeMarket(i,t);const s=this.safeString(e,"settleCurrency"),r=this.safeValue(e,"crossMode")?"cross":"isolated",a=this.safeString(t,"symbol");return{info:e,direction:void 0,mode:r,amount:void 0,code:this.safeCurrencyCode(s),symbol:this.safeSymbol(a,t),status:void 0}}async fetchOrdersByStatus(e,t=undefined,i=undefined,r=undefined,a={}){await this.loadMarkets();const n=this.safeValue(a,"stop"),o=this.safeInteger2(a,"until","till");a=this.omit(a,["stop","until","till"]),"closed"===e?e="done":"open"===e&&(e="active");const d={};if(n){if("active"!==e)throw new s.BadRequest(this.id+" fetchOrdersByStatus() can only fetch untriggered stop orders")}else d.status=e;let c;void 0!==t&&(c=this.market(t),d.symbol=c.id),void 0!==i&&(d.startAt=i),void 0!==o&&(d.endAt=o);const h=n?"futuresPrivateGetStopOrders":"futuresPrivateGetOrders",u=await this[h](this.extend(d,a)),l=this.safeValue(u,"data",{}),p=this.safeValue(l,"items",[]);return this.parseOrders(p,c,i,r)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("done",e,t,i,s)}async fetchOrder(e=undefined,t=undefined,i={}){await this.loadMarkets();const r={};let a="futuresPrivateGetOrdersOrderId";if(void 0===e){const e=this.safeString2(i,"clientOid","clientOrderId");if(void 0===e)throw new s.InvalidOrder(this.id+" fetchOrder() requires parameter id or params.clientOid");r.clientOid=e,a="futuresPrivateGetOrdersByClientOid",i=this.omit(i,["clientOid","clientOrderId"])}else r.orderId=e;const n=await this[a](this.extend(r,i)),o=void 0!==t?this.market(t):void 0,d=this.safeValue(n,"data");return this.parseOrder(d,o)}parseOrder(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,a=this.safeString(e,"id"),n=this.safeString(e,"type"),o=this.safeInteger(e,"createdAt"),d=this.iso8601(o),c=this.safeString(e,"price"),h=this.safeString(e,"side"),u=this.safeString(e,"feeCurrency"),l=this.safeCurrencyCode(u),p=this.safeNumber(e,"fee"),f=this.safeString(e,"size"),m=this.safeString(e,"dealSize"),v=this.safeString2(e,"dealFunds","filledValue"),g=this.safeString(e,"leverage"),y=r.O.stringDiv(v,g);let b;if(r.O.stringGt(m,"0")){const e=this.safeString(t,"contractSize");b=t.linear?r.O.stringDiv(v,r.O.stringMul(e,m)):r.O.stringDiv(r.O.stringMul(e,m),v)}let w=this.safeValue(e,"isActive",!1)?"open":"closed";w=this.safeValue(e,"cancelExist",!1)?"canceled":w;const S={currency:l,cost:p},P=this.safeString(e,"clientOid"),k=this.safeString(e,"timeInForce"),O=this.safeNumber(e,"stopPrice"),T=this.safeValue(e,"postOnly");return this.safeOrder({id:a,clientOrderId:P,symbol:s,type:n,timeInForce:k,postOnly:T,side:h,amount:f,price:c,stopPrice:O,triggerPrice:O,cost:y,filled:m,remaining:void 0,timestamp:o,datetime:d,fee:S,status:w,info:e,lastTradeTimestamp:void 0,average:b,trades:void 0},t)}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.futuresPublicGetFundingRateSymbolCurrent(this.extend(s,t)),a=this.safeValue(r,"data"),n=this.safeNumber(a,"timePoint");return{info:a,symbol:i.symbol,markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(a,"predictedValue"),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:this.safeNumber(a,"value"),previousFundingTimestamp:n,previousFundingDatetime:this.iso8601(n)}}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data"),s=this.safeString(i,"currency"),r=this.safeCurrencyCode(s),a=this.account();return a.free=this.safeString(i,"availableBalance"),a.total=this.safeString(i,"accountEquity"),t[r]=a,this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(this.options,"code");const i=this.safeValue(this.options,"fetchBalance",{});t=this.safeString(i,"code",t);const s=this.safeString(e,"code",t),r={currency:this.currency(s).id},a=await this.futuresPrivateGetAccountOverview(this.extend(r,e));return this.parseBalance(a)}async transfer(e,t,i,r,a={}){if("main"!==r&&"funding"!==r||"futures"!==i&&"future"!==i&&"contract"!==i)throw new s.BadRequest(this.id+" transfer() only supports transfers from contract(future) account to main(funding) account");await this.loadMarkets();const n=this.currency(e),o=this.currencyToPrecision(e,t),d={currency:this.safeString(n,"id"),amount:o},c=await this.futuresPrivatePostTransferOut(this.extend(d,a)),h=this.safeValue(c,"data");return this.extend(this.parseTransfer(h,n),{amount:this.parseNumber(o),fromAccount:"future",toAccount:"spot"})}parseTransfer(e,t=undefined){const i=this.safeInteger(e,"updatedAt");return{id:this.safeString(e,"applyId"),timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:this.safeString(e,"status"),info:e}}parseTransferStatus(e){return this.safeString({PROCESSING:"pending"},e,e)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.startAt=t);const n=await this.futuresPrivateGetFills(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"items",{});return this.parseTrades(d,a,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.futuresPublicGetTradeHistory(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t,"-");const s=this.safeString2(e,"tradeId","id"),a=this.safeString(e,"orderId"),n=this.safeString(e,"liquidity");let o=this.safeInteger(e,"ts");void 0!==o?o=this.parseToInt(o/1e6):(o=this.safeInteger(e,"createdAt"),"dealValue"in e&&void 0!==o&&(o*=1e3));const d=this.safeString2(e,"price","dealPrice"),c=this.safeString2(e,"size","amount"),h=this.safeString(e,"side");let u;const l=this.safeString(e,"fee");if(void 0!==l){const i=this.safeString(e,"feeCurrency");let s=this.safeCurrencyCode(i);void 0===s&&(s="sell"===h?t.quote:t.base),u={cost:l,currency:s,rate:this.safeString(e,"feeRate")}}let p=this.safeString2(e,"type","orderType");"match"===p&&(p=void 0);let f=this.safeString2(e,"funds","value");if(void 0===f){const e=this.safeString(t,"contractSize"),i=r.O.stringMul(d,c);f=r.O.stringMul(i,e)}return this.safeTrade({info:e,id:s,order:a,timestamp:o,datetime:this.iso8601(o),symbol:t.symbol,type:p,takerOrMaker:n,side:h,price:d,amount:c,cost:f,fee:u},t)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.pageSize=i),void 0!==t&&(r.startAt=t);const n=(await this.futuresPrivateGetDepositList(this.extend(r,s))).data.items;return this.parseTransactions(n,a,t,i,{type:"deposit"})}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.pageSize=i),void 0!==t&&(r.startAt=t);const n=(await this.futuresPrivateGetWithdrawalList(this.extend(r,s))).data.items;return this.parseTransactions(n,a,t,i,{type:"withdrawal"})}async fetchTransactionFee(e,t={}){}async fetchDepositWithdrawFee(e,t={}){throw new s.BadRequest(this.id+" fetchDepositWithdrawFee() is not supported")}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.contract)throw new s.BadRequest(this.id+" fetchMarketLeverageTiers() supports contract markets only");const r={symbol:i.id},a=await this.futuresPublicGetContractsRiskLimitSymbol(this.extend(r,t)),n=this.safeValue(a,"data");return this.parseMarketLeverageTiers(n,i)}parseMarketLeverageTiers(e,t=undefined){const i=[];for(let s=0;s<e.length;s++){const r=e[s];i.push({tier:this.safeNumber(r,"level"),currency:t.base,minNotional:this.safeNumber(r,"minRiskLimit"),maxNotional:this.safeNumber(r,"maxRiskLimit"),maintenanceMarginRate:this.safeNumber(r,"maintainMargin"),maxLeverage:this.safeNumber(r,"maxLeverage"),info:r})}return i}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,r={}){if(void 0===e)throw new s.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.maxCount=i);const o=await this.webFrontGetContractSymbolFundingRates(this.extend(n,r)),d=this.safeValue(o,"data"),c=this.safeValue(d,"dataList");return this.parseFundingRateHistories(c,a,t,i)}parseFundingRateHistory(e,t=undefined){const i=this.safeNumber(e,"timePoint"),s=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(s,t),fundingRate:this.safeNumber(e,"value"),timestamp:i,datetime:this.iso8601(i)}}}},7732:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(4722),r=i(6689),a=i(9292),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"kuna",name:"Kuna",countries:["UA"],rateLimit:1e3,version:"v2",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:!0,fetchLeverage:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:"emulated",fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setPositionMode:!1},timeframes:void 0,urls:{extension:".json",referral:"https://kuna.io?r=kunaid-gvfihe8az7o4",logo:"https://user-images.githubusercontent.com/51840849/87153927-f0578b80-c2c0-11ea-84b6-74612568e9e1.jpg",api:{xreserve:"https://api.xreserve.fund",v3:"https://api.kuna.io",public:"https://kuna.io",private:"https://kuna.io"},www:"https://kuna.io",doc:"https://kuna.io/documents/api",fees:"https://kuna.io/documents/api"},api:{xreserve:{get:{nonce:1,fee:1,"delegated-transactions":1},post:{"delegate-transfer":1}},v3:{public:{get:{timestamp:1,currencies:1,markets:1,tickers:1,k:1,trades_history:1,fees:1,"exchange-rates":1,"exchange-rates/currency":1,"book/market":1,"kuna_codes/code/check":1,landing_page_statistic:1,"translations/locale":1,"trades/market/hist":1},post:{http_test:1,deposit_channels:1,withdraw_channels:1,subscription_plans:1,send_to:1,confirm_token:1,kunaid:1,"withdraw/prerequest":1,"deposit/prerequest":1,"deposit/exchange-rates":1}},sign:{get:{"reset_password/token":1},post:{"signup/google":1,"signup/resend_confirmation":1,signup:1,signin:1,"signin/two_factor":1,"signin/resend_confirm_device":1,"signin/confirm_device":1,reset_password:1,"cool-signin":1},put:{"reset_password/token":1,"signup/code/confirm":1}},private:{post:{"auth/w/order/submit":1,"auth/r/orders":1,"auth/r/orders/market":1,"auth/r/orders/markets":1,"auth/api_tokens/delete":1,"auth/api_tokens/create":1,"auth/api_tokens":1,"auth/signin_history/uniq":1,"auth/signin_history":1,"auth/disable_withdraw_confirmation":1,"auth/change_password":1,"auth/deposit_address":1,"auth/announcements/accept":1,"auth/announcements/unaccepted":1,"auth/otp/deactivate":1,"auth/otp/activate":1,"auth/otp/secret":1,"auth/r/order/market/:order_id/trades":1,"auth/r/orders/market/hist":1,"auth/r/orders/hist":1,"auth/r/orders/hist/markets":1,"auth/r/orders/details":1,"auth/assets-history":1,"auth/assets-history/withdraws":1,"auth/assets-history/deposits":1,"auth/r/wallets":1,"auth/markets/favorites":1,"auth/markets/favorites/list":1,"auth/me/update":1,"auth/me":1,"auth/fund_sources":1,"auth/fund_sources/list":1,"auth/withdraw/resend_confirmation":1,"auth/withdraw":1,"auth/withdraw/details":1,"auth/withdraw/info":1,"auth/payment_addresses":1,"auth/deposit/prerequest":1,"auth/deposit/exchange-rates":1,"auth/deposit":1,"auth/deposit/details":1,"auth/deposit/info":1,"auth/kuna_codes/count":1,"auth/kuna_codes/details":1,"auth/kuna_codes/edit":1,"auth/kuna_codes/send-pdf":1,"auth/kuna_codes":1,"auth/kuna_codes/redeemed-by-me":1,"auth/kuna_codes/issued-by-me":1,"auth/payment_requests/invoice":1,"auth/payment_requests/type":1,"auth/referral_program/weekly_earnings":1,"auth/referral_program/stats":1,"auth/merchant/payout_services":1,"auth/merchant/withdraw":1,"auth/merchant/payment_services":1,"auth/merchant/deposit":1,"auth/verification/auth_token":1,"auth/kunaid_purchase/create":1,"auth/devices/list":1,"auth/sessions/list":1,"auth/subscriptions/reactivate":1,"auth/subscriptions/cancel":1,"auth/subscriptions/prolong":1,"auth/subscriptions/create":1,"auth/subscriptions/list":1,"auth/kuna_ids/list":1,"order/cancel/multi":1,"order/cancel":1},put:{"auth/fund_sources/id":1,"auth/kuna_codes/redeem":1},delete:{"auth/markets/favorites":1,"auth/fund_sources":1,"auth/devices":1,"auth/devices/list":1,"auth/sessions/list":1,"auth/sessions":1}}},public:{get:["depth","k_with_pending_trades","k","markets","order_book","order_book/{market}","tickers","tickers/{market}","timestamp","trades","trades/{market}"]},private:{get:["members/me","deposits","deposit","deposit_address","orders","order","trades/my","withdraws","withdraw"],post:["orders","orders/multi","orders/clear","order/delete","withdraw"]}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.0025"),maker:this.parseNumber("0.0025")},funding:{withdraw:{UAH:"1%",BTC:.001,BCH:.001,ETH:.01,WAVES:.01,GOL:0,GBG:0},deposit:{}}},commonCurrencies:{PLA:"Plair"},precisionMode:a.sh,exceptions:{2002:r.InsufficientFunds,2003:r.OrderNotFound}})}async fetchTime(e={}){return 1e3*await this.publicGetTimestamp(e)}async fetchMarkets(e={}){const t=["btc","rub","uah","usd","usdt","usdc"],i=[],s=await this.publicGetTickers(e),r=Object.keys(s);for(let e=0;e<r.length;e++){const s=r[e];for(let e=0;e<t.length;e++){const r=t[e],a=s.slice(1),n=a.indexOf(r),o=a.slice(n);if(n>0&&o===r){const e=s[0]+a.replace(r,""),t=this.safeCurrencyCode(e),n=this.safeCurrencyCode(r);i.push({id:s,symbol:t+"/"+n,base:t,quote:n,settle:void 0,baseId:e,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:void 0,price:void 0},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:void 0})}}}return i}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={market:s.id};void 0!==t&&(r.limit=t);const a=await this.publicGetDepth(this.extend(r,i)),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,s.symbol,n)}parseTicker(e,t=undefined){const i=this.safeTimestamp(e,"at");e=e.ticker;const s=this.safeSymbol(void 0,t),r=this.safeString(e,"last");return this.safeTicker({symbol:s,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTickers(t),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){const t=s[e],a=this.safeMarket(t);r[a.symbol]=this.parseTicker(i[t],a)}return this.filterByArray(r,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={market:i.id},r=await this.publicGetTickersMarket(this.extend(s,t));return this.parseTicker(r,i)}async fetchL3OrderBook(e,t=undefined,i={}){return await this.fetchOrderBook(e,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id},n=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString(e,"created_at"));let s;t&&(s=t.symbol);let r=this.safeString2(e,"side","trend");if(void 0!==r){const e={ask:"sell",bid:"buy"};r=this.safeString(e,r,r)}const a=this.safeString(e,"price"),n=this.safeString(e,"volume"),o=this.safeNumber(e,"funds"),d=this.safeString(e,"order_id"),c=this.safeString(e,"id");return this.safeTrade({id:c,info:e,timestamp:i,datetime:this.iso8601(i),symbol:s,type:void 0,side:r,order:d,takerOrMaker:void 0,price:a,amount:n,cost:o,fee:void 0},t)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=await this.fetchTrades(e,i,s,r),n=this.buildOHLCVC(a,t,i,s),o=[];for(let e=0;e<n.length;e++){const t=n[e];o.push([t[0],t[1],t[2],t[3],t[4],t[5]])}return o}parseBalance(e){const t=this.safeValue(e,"accounts",[]),i={info:t};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"balance"),n.used=this.safeString(s,"locked"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetMembersMe(e);return this.parseBalance(t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={market:n.id,side:i,volume:s.toString(),ord_type:t};"limit"===t&&(o.price=r.toString());const d=await this.privatePostOrders(this.extend(o,a));return this.parseOrder(d,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},a=await this.privatePostOrderDelete(this.extend(s,i)),n=this.parseOrder(a),o=n.status;if("closed"===o||"canceled"===o)throw new r.OrderNotFound(this.id+" "+this.json(n));return n}parseOrderStatus(e){return this.safeString({done:"closed",wait:"open",cancel:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"market"),s=this.safeSymbol(i,t),r=this.parse8601(this.safeString(e,"created_at")),a=this.parseOrderStatus(this.safeString(e,"state")),n=this.safeString(e,"type"),o=this.safeString(e,"side"),d=this.safeString(e,"id");return this.safeOrder({id:d,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:a,symbol:s,type:n,timeInForce:void 0,postOnly:void 0,side:o,price:this.safeString(e,"price"),stopPrice:void 0,triggerPrice:void 0,amount:this.safeString(e,"volume"),filled:this.safeString(e,"executed_volume"),remaining:this.safeString(e,"remaining_volume"),trades:void 0,fee:void 0,info:e,cost:void 0,average:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:parseInt(e)},r=await this.privateGetOrder(this.extend(s,i));return this.parseOrder(r)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id},o=await this.privateGetOrders(this.extend(n,s));return this.parseOrders(o,a,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id},o=await this.privateGetTradesMy(this.extend(n,s));return this.parseTrades(o,a,t,i)}nonce(){return this.milliseconds()}encodeParams(e){if("orders"in e){const t=e.orders;let i=this.urlencode(this.keysort(this.omit(e,"orders")));for(let e=0;e<t.length;e++){const s=t[e],r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e];i+="&orders%5B%5D%5B"+t+"%5D="+s[t].toString()}}return i}return this.urlencode(this.keysort(e))}sign(e,t="public",i="GET",s={},a=undefined,o=undefined){let d;if(Array.isArray(t)){const[n,c]=t;if(d=this.urls.api[n]+"/"+n+"/"+this.implodeParams(e,s),"public"===c)"GET"===i?Object.keys(s).length&&(d+="?"+this.urlencode(s)):"POST"!==i&&"PUT"!==i||(a={"Content-Type":"application/json"},o=this.json(s));else if("private"===c)throw new r.NotSupported(this.id+" private v3 API is not supported yet")}else{let r="/api/"+this.version+"/"+this.implodeParams(e,s);"extension"in this.urls&&(r+=this.urls.extension);const c=this.omit(s,this.extractParams(e));if(d=this.urls.api[t]+r,"public"===t)Object.keys(c).length&&(d+="?"+this.urlencode(c));else{this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.encodeParams(this.extend({access_key:this.apiKey,tonce:e},s)),c=i+"|"+r+"|"+t,h=t+"&signature="+this.hmac(this.encode(c),this.encode(this.secret),n.J);"GET"===i?d+="?"+h:(o=h,a={"Content-Type":"application/x-www-form-urlencoded"})}}return{url:d,method:i,body:o,headers:a}}handleErrors(e,t,i,s,r,a,n,o,d){if(void 0!==n&&400===e){const e=this.safeValue(n,"error"),t=this.safeString(e,"code"),i=this.id+" "+this.json(n);this.throwExactlyMatchedException(this.exceptions,t,i)}}}},2545:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(9720),r=i(6689),a=i(9292),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"latoken",name:"Latoken",countries:["KY"],version:"v2",rateLimit:1e3,has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchDepositWithdrawFees:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!0,transfer:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/61511972-24c39f00-aa01-11e9-9f7c-471f1d6e5214.jpg",api:{rest:"https://api.latoken.com"},www:"https://latoken.com",doc:["https://api.latoken.com"],fees:"https://latoken.com/fees",referral:"https://latoken.com/invite?r=mvgp2djk"},api:{public:{get:{"book/{currency}/{quote}":1,"chart/week":1,"chart/week/{currency}/{quote}":1,currency:1,"currency/available":1,"currency/quotes":1,"currency/{currency}":1,pair:1,"pair/available":1,ticker:1,"ticker/{base}/{quote}":1,time:1,"trade/history/{currency}/{quote}":1,"trade/fee/{currency}/{quote}":1,"trade/feeLevels":1,"transaction/bindings":1}},private:{get:{"auth/account":1,"auth/account/currency/{currency}/{type}":1,"auth/order":1,"auth/order/getOrder/{id}":1,"auth/order/pair/{currency}/{quote}":1,"auth/order/pair/{currency}/{quote}/active":1,"auth/stopOrder":1,"auth/stopOrder/getOrder/{id}":1,"auth/stopOrder/pair/{currency}/{quote}":1,"auth/stopOrder/pair/{currency}/{quote}/active":1,"auth/trade":1,"auth/trade/pair/{currency}/{quote}":1,"auth/trade/fee/{currency}/{quote}":1,"auth/transaction":1,"auth/transaction/bindings":1,"auth/transaction/bindings/{currency}":1,"auth/transaction/{id}":1,"auth/transfer":1},post:{"auth/order/cancel":1,"auth/order/cancelAll":1,"auth/order/cancelAll/{currency}/{quote}":1,"auth/order/place":1,"auth/spot/deposit":1,"auth/spot/withdraw":1,"auth/stopOrder/cancel":1,"auth/stopOrder/cancelAll":1,"auth/stopOrder/cancelAll/{currency}/{quote}":1,"auth/stopOrder/place":1,"auth/transaction/depositAddress":1,"auth/transaction/withdraw":1,"auth/transaction/withdraw/cancel":1,"auth/transaction/withdraw/confirm":1,"auth/transaction/withdraw/resendCode":1,"auth/transfer/email":1,"auth/transfer/id":1,"auth/transfer/phone":1}}},precisionMode:a.sh,fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,maker:this.parseNumber("0.0049"),taker:this.parseNumber("0.0049")}},commonCurrencies:{BUX:"Buxcoin",CBT:"Community Business Token",CTC:"CyberTronchain",DMD:"Diamond Coin",FREN:"Frenchie",GDX:"GoldenX",GEC:"Geco One",GEM:"NFTmall",GMT:"GMT Token",IMC:"IMCoin",MT:"Monarch",TPAY:"Tetra Pay",TRADE:"Smart Trade Coin",TSL:"Treasure SL",UNO:"Unobtanium",WAR:"Warrior Token"},exceptions:{exact:{INTERNAL_ERROR:r.ExchangeError,SERVICE_UNAVAILABLE:r.ExchangeNotAvailable,NOT_AUTHORIZED:r.AuthenticationError,FORBIDDEN:r.PermissionDenied,BAD_REQUEST:r.BadRequest,NOT_FOUND:r.ExchangeError,ACCESS_DENIED:r.PermissionDenied,REQUEST_REJECTED:r.ExchangeError,HTTP_MEDIA_TYPE_NOT_SUPPORTED:r.BadRequest,MEDIA_TYPE_NOT_ACCEPTABLE:r.BadRequest,METHOD_ARGUMENT_NOT_VALID:r.BadRequest,VALIDATION_ERROR:r.BadRequest,ACCOUNT_EXPIRED:r.AccountSuspended,BAD_CREDENTIALS:r.AuthenticationError,COOKIE_THEFT:r.AuthenticationError,CREDENTIALS_EXPIRED:r.AccountSuspended,INSUFFICIENT_AUTHENTICATION:r.AuthenticationError,UNKNOWN_LOCATION:r.AuthenticationError,TOO_MANY_REQUESTS:r.RateLimitExceeded,INSUFFICIENT_FUNDS:r.InsufficientFunds,ORDER_VALIDATION:r.InvalidOrder,BAD_TICKS:r.InvalidOrder},broad:{"invalid API key, signature or digest":r.AuthenticationError,"The API key was revoked":r.AuthenticationError,"request expired or bad":r.InvalidNonce,"For input string":r.BadRequest,"Unable to resolve currency by tag":r.BadSymbol,"Can't find currency with tag":r.BadSymbol,"Unable to place order because pair is in inactive state":r.BadSymbol,"API keys are not available for FROZEN user":r.AccountSuspended}},options:{defaultType:"spot",types:{wallet:"ACCOUNT_TYPE_WALLET",spot:"ACCOUNT_TYPE_SPOT"},accounts:{ACCOUNT_TYPE_WALLET:"wallet",ACCOUNT_TYPE_SPOT:"spot"},fetchTradingFee:{method:"fetchPrivateTradingFee"}}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"serverTime")}async fetchMarkets(e={}){const t=await this.fetchCurrenciesFromCache(e),i=await this.publicGetPair(e);this.safeValue(this.options,"adjustForTimeDifference",!0)&&await this.loadTimeDifference();const s=this.indexBy(t,"id"),r=[];for(let e=0;e<i.length;e++){const t=i[e],a=this.safeString(t,"id"),n=this.safeString(t,"baseCurrency"),o=this.safeString(t,"quoteCurrency"),d=this.safeValue(s,n),c=this.safeValue(s,o);if(void 0!==d&&void 0!==c){const e=this.safeCurrencyCode(this.safeString(d,"tag")),i=this.safeCurrencyCode(this.safeString(c,"tag")),s=i.toLowerCase(),h=this.capitalize(s),u=this.safeString(t,"status");r.push({id:a,symbol:e+"/"+i,base:e,quote:i,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"PAIR_STATUS_ACTIVE"===u,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"quantityTick"),price:this.safeNumber(t,"priceTick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minOrderQuantity"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minOrderCost"+h),max:this.safeNumber(t,"maxOrderCost"+h)}},info:t})}}return r}async fetchCurrenciesFromCache(e={}){const t=this.safeValue(this.options,"fetchCurrencies",{}),i=this.safeInteger(t,"timestamp"),s=this.safeInteger(t,"expires",1e3),r=this.milliseconds();if(void 0===i||r-i>s){const i=await this.publicGetCurrency(e);this.options.fetchCurrencies=this.extend(t,{response:i,timestamp:r})}return this.safeValue(this.options.fetchCurrencies,"response")}async fetchCurrencies(e={}){const t=await this.fetchCurrenciesFromCache(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"id"),a=this.safeString(s,"tag"),n=this.safeCurrencyCode(a),o=this.safeNumber(s,"fee"),d=this.safeString(s,"type").split("_"),c=d.length,h=this.safeValue(d,c-1).toLowerCase(),u="CURRENCY_STATUS_ACTIVE"===this.safeString(s,"status"),l=this.safeString(s,"name");i[n]={id:r,code:n,info:s,name:l,type:h,active:u,deposit:void 0,withdraw:void 0,fee:o,precision:this.parseNumber(this.parsePrecision(this.safeString(s,"decimals"))),limits:{amount:{min:this.safeNumber(s,"minTransferAmount"),max:void 0},withdraw:{min:void 0,max:void 0}}}}return i}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAuthAccount(e),i={info:t,timestamp:void 0,datetime:void 0};let s;const r=this.safeString2(this.options,"fetchBalance","defaultType","spot"),a=this.safeString(e,"type",r),n=this.safeValue(this.options,"types",{}),o=this.safeString(n,a,a),d=this.groupBy(t,"type"),c=this.safeValue(d,o,[]);for(let e=0;e<c.length;e++){const t=c[e],r=this.safeString(t,"currency"),a=this.safeInteger(t,"timestamp");void 0!==a&&(s=void 0===s?a:Math.max(s,a));const n=this.safeCurrencyCode(r),o=this.account();o.free=this.safeString(t,"available"),o.used=this.safeString(t,"blocked"),i[n]=o}return i.timestamp=s,i.datetime=this.iso8601(s),this.safeBalance(i)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={currency:s.baseId,quote:s.quoteId};void 0!==t&&(r.limit=t);const a=await this.publicGetBookCurrencyQuote(this.extend(r,i));return this.parseOrderBook(a,e,void 0,"bid","ask","price","quantity")}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeString(e,"lastPrice"),a=this.safeString(e,"change24h"),n=this.nonce();return this.safeTicker({symbol:s,timestamp:n,datetime:this.iso8601(n),low:this.safeString(e,"low"),high:this.safeString(e,"high"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:a,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"volume24h"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={base:i.baseId,quote:i.quoteId},r=await this.publicGetTickerBaseQuote(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTicker(t);return this.parseTickers(i,e)}parseTrade(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"price"),r=this.safeString(e,"quantity"),a=this.safeString(e,"cost"),n=this.safeValue(e,"makerBuyer");let o=this.safeString(e,"direction");void 0===o?o=n?"sell":"buy":"TRADE_DIRECTION_BUY"===o?o="buy":"TRADE_DIRECTION_SELL"===o&&(o="sell");const d=n&&"buy"===o?"maker":"taker",c=this.safeString(e,"baseCurrency"),h=this.safeString(e,"quoteCurrency"),u=this.safeCurrencyCode(c),l=this.safeCurrencyCode(h),p=u+"/"+l;p in this.markets&&(t=this.market(p));const f=this.safeString(e,"id"),m=this.safeString(e,"order"),v=this.safeString(e,"fee");let g;return void 0!==v&&(g={cost:v,currency:l}),this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:p,id:f,order:m,type:void 0,takerOrMaker:d,side:o,price:s,amount:r,cost:a,fee:g},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={currency:r.baseId,quote:r.quoteId};void 0!==i&&(a.limit=i);const n=await this.publicGetTradeHistoryCurrencyQuote(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFee(e,t={}){let i=this.safeString(t,"method");if(t=this.omit(t,"method"),void 0===i){const e=this.safeValue(this.options,"fetchTradingFee",{});i=this.safeString(e,"method","fetchPrivateTradingFee")}return await this[i](e,t)}async fetchPublicTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={currency:i.baseId,quote:i.quoteId},r=await this.publicGetTradeFeeCurrencyQuote(this.extend(s,t));return{info:r,symbol:i.symbol,maker:this.safeNumber(r,"makerFee"),taker:this.safeNumber(r,"takerFee")}}async fetchPrivateTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={currency:i.baseId,quote:i.quoteId},r=await this.privateGetAuthTradeFeeCurrencyQuote(this.extend(s,t));return{info:r,symbol:i.symbol,maker:this.safeNumber(r,"makerFee"),taker:this.safeNumber(r,"takerFee")}}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n="privateGetAuthTrade";void 0!==e&&(a=this.market(e),r.currency=a.baseId,r.quote=a.quoteId,n="privateGetAuthTradePairCurrencyQuote"),void 0!==i&&(r.limit=i);const o=await this[n](this.extend(r,s));return this.parseTrades(o,a,t,i)}parseOrderStatus(e){return this.safeString({ORDER_STATUS_PLACED:"open",ORDER_STATUS_CLOSED:"closed",ORDER_STATUS_CANCELLED:"canceled"},e,e)}parseOrderType(e){return this.safeString({ORDER_TYPE_MARKET:"market",ORDER_TYPE_LIMIT:"limit"},e,e)}parseTimeInForce(e){return this.safeString({ORDER_CONDITION_GOOD_TILL_CANCELLED:"GTC",ORDER_CONDITION_IMMEDIATE_OR_CANCEL:"IOC",ORDER_CONDITION_FILL_OR_KILL:"FOK"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeInteger(e,"timestamp"),r=this.safeString(e,"baseCurrency"),a=this.safeString(e,"quoteCurrency"),n=this.safeCurrencyCode(r),o=this.safeCurrencyCode(a);let d;void 0!==n&&void 0!==o&&(d=n+"/"+o,d in this.markets&&(t=this.market(d)));const c=this.safeString(e,"side");let h;if(void 0!==c){const e=c.split("_"),t=e.length;h=this.safeStringLower(e,t-1)}const u=this.parseOrderType(this.safeString(e,"type")),l=this.safeString(e,"price"),p=this.safeString(e,"quantity"),f=this.safeString(e,"filled"),m=this.safeString(e,"cost");let v=this.parseOrderStatus(this.safeString(e,"status"));const g=this.safeString(e,"message");void 0!==g&&(g.indexOf("cancel")>=0?v="canceled":g.indexOf("accept")>=0&&(v="open"));const y=this.safeString(e,"clientOrderId"),b=this.parseTimeInForce(this.safeString(e,"condition"));return this.safeOrder({id:i,clientOrderId:y,info:e,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:v,symbol:d,type:u,timeInForce:b,postOnly:void 0,side:h,price:l,stopPrice:void 0,triggerPrice:void 0,cost:m,amount:p,filled:f,average:void 0,remaining:void 0,fee:void 0,trades:void 0},t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={currency:a.baseId,quote:a.quoteId},o=await this.privateGetAuthOrderPairCurrencyQuoteActive(this.extend(n,s));return this.parseOrders(o,a,t,i)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n="privateGetAuthOrder";void 0!==e&&(a=this.market(e),r.currency=a.baseId,r.quote=a.quoteId,n="privateGetAuthOrderPairCurrencyQuote"),void 0!==i&&(r.limit=i);const o=await this[n](this.extend(r,s));return this.parseOrders(o,a,t,i)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetAuthOrderGetOrderId(this.extend(s,i));return this.parseOrder(r)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),d={baseCurrency:n.baseId,quoteCurrency:n.quoteId,side:i.toUpperCase(),condition:"GTC",type:o,clientOrderId:this.uuid()};"LIMIT"===o&&(d.price=this.priceToPrecision(e,r)),d.quantity=this.amountToPrecision(e,s),d.timestamp=this.seconds();const c=await this.privatePostAuthOrderPlace(this.extend(d,a));return this.parseOrder(c,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privatePostAuthOrderCancel(this.extend(s,i));return this.parseOrder(r)}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s,r="privatePostAuthOrderCancelAll";return void 0!==e&&(s=this.market(e),i.currency=s.baseId,i.quote=s.quoteId,r="privatePostAuthOrderCancelAllCurrencyQuote"),await this[r](this.extend(i,t))}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.privateGetAuthTransaction(this.extend({},s));let a;void 0!==e&&(a=this.currency(e));const n=this.safeValue(r,"content",[]);return this.parseTransactions(n,a,t,i)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeInteger(e,"timestamp"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r,t),n=this.parseTransactionStatus(this.safeString(e,"status")),o=this.safeNumber(e,"amount"),d=this.safeString(e,"senderAddress"),c=this.safeString(e,"recipientAddress"),h=this.safeString(e,"transactionHash"),u=this.safeString(e,"memo");let l;const p=this.safeNumber(e,"transactionFee");void 0!==p&&(l={cost:p,currency:a});const f=this.parseTransactionType(this.safeString(e,"type"));return{info:e,id:i,txid:h,timestamp:s,datetime:this.iso8601(s),network:void 0,addressFrom:d,addressTo:c,address:c,tagFrom:void 0,tagTo:u,tag:u,type:f,amount:o,currency:a,status:n,updated:void 0,fee:l}}parseTransactionStatus(e){return this.safeString({TRANSACTION_STATUS_CONFIRMED:"ok",TRANSACTION_STATUS_EXECUTED:"ok",TRANSACTION_STATUS_CANCELLED:"canceled"},e,e)}parseTransactionType(e){return this.safeString({TRANSACTION_TYPE_DEPOSIT:"deposit",TRANSACTION_TYPE_WITHDRAWAL:"withdrawal"},e,e)}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e),a=await this.privateGetAuthTransfer(s),n=this.safeValue(a,"content",[]);return this.parseTransfers(n,r,t,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e);let n;n=s.indexOf("@")>=0?"privatePostAuthTransferEmail":36===s.length?"privatePostAuthTransferId":"privatePostAuthTransferPhone";const o={currency:a.id,recipient:s,value:this.currencyToPrecision(e,t)},d=await this[n](this.extend(o,r));return this.parseTransfer(d)}parseTransfer(e,t=undefined){const i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"currency"),r=this.safeString(e,"status");return{info:e,id:this.safeString(e,"id"),timestamp:this.safeInteger(e,"timestamp"),datetime:this.iso8601(i),currency:this.safeCurrencyCode(s,t),amount:this.safeNumber(e,"transferringFunds"),fromAccount:this.safeString(e,"fromAccount"),toAccount:this.safeString(e,"toAccount"),status:this.parseTransferStatus(r)}}parseTransferStatus(e){return this.safeString({TRANSFER_STATUS_COMPLETED:"ok",TRANSFER_STATUS_PENDING:"pending",TRANSFER_STATUS_REJECTED:"failed",TRANSFER_STATUS_UNVERIFIED:"pending",TRANSFER_STATUS_CANCELLED:"canceled"},e,e)}sign(e,t="public",i="GET",s=undefined,r=undefined,a=undefined){const o="/"+this.version+"/"+this.implodeParams(e,s);let d=o;const c=this.omit(s,this.extractParams(e)),h=this.urlencode(c);if("GET"===i&&Object.keys(c).length&&(d+="?"+h),"private"===t){this.checkRequiredCredentials();const e=i+o+h,t=this.hmac(this.encode(e),this.encode(this.secret),n.o);r={"X-LA-APIKEY":this.apiKey,"X-LA-SIGNATURE":t,"X-LA-DIGEST":"HMAC-SHA512"},"POST"===i&&(r["Content-Type"]="application/json",a=this.json(c))}return{url:this.urls.api.rest+d,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(!o)return;const h=this.safeString(o,"message"),u=this.id+" "+n;void 0!==h&&(this.throwExactlyMatchedException(this.exceptions.exact,h,u),this.throwBroadlyMatchedException(this.exceptions.broad,h,u));const l=this.safeValue(o,"error"),p=this.safeString(l,"message");if(void 0!==l||void 0!==p)throw this.throwExactlyMatchedException(this.exceptions.exact,l,u),this.throwBroadlyMatchedException(this.exceptions.broad,n,u),new r.ExchangeError(u)}}},3944:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(6168),r=i(6689),a=i(2194),n=i(9292),o=i(1372),d=i(5981);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"lbank",name:"LBank",countries:["CN"],version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!1,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"1m":"minute1","5m":"minute5","15m":"minute15","30m":"minute30","1h":"hour1","2h":"hour2","4h":"hour4","6h":"hour6","8h":"hour8","12h":"hour12","1d":"day1","1w":"week1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg",api:{rest:"https://api.lbank.info"},www:"https://www.lbank.info",doc:"https://github.com/LBank-exchange/lbank-official-api-docs",fees:"https://www.lbank.info/fees.html",referral:"https://www.lbank.info/invitevip?icode=7QCY"},api:{public:{get:["currencyPairs","ticker","depth","trades","kline","accuracy"]},private:{post:["user_info","create_order","cancel_order","orders_info","orders_info_history","withdraw","withdrawCancel","withdraws","withdrawConfigs"]}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{withdraw:{}}},commonCurrencies:{GMT:"GMT Token",PNT:"Penta",SHINJA:"SHINJA(1M)",VET_ERC20:"VEN"},options:{cacheSecretAsPem:!0},precisionMode:n.sh})}async fetchMarkets(e={}){const t=await this.publicGetAccuracy(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=s.symbol,a=r.split("_");let n,o;a.length>2?(n=a[0]+"_"+a[1],o=a[2]):(n=a[0],o=a[1]);const d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o);i.push({id:r,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"quantityAccuracy"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"priceAccuracy")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeFloat(s,"minTranQua"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:r})}return i}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t,"_")).symbol,r=this.safeInteger(e,"timestamp"),a=e;e=a.ticker;const n=this.safeString(e,"latest"),o=this.safeString(e,"change");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:n,last:n,previousClose:void 0,change:void 0,percentage:o,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:this.safeString(e,"turnover"),info:a},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTicker(this.extend({symbol:"all"},t)),s={};for(let e=0;e<i.length;e++){const t=this.parseTicker(i[e]);s[t.symbol]=t}return this.filterByArray(s,"symbol",e)}async fetchOrderBook(e,t=60,i={}){await this.loadMarkets();let s=60;void 0!==t&&(s=Math.min(t,s));const r=this.market(e),a={symbol:r.id,size:s},n=await this.publicGetDepth(this.extend(a,i));return this.parseOrderBook(n,r.symbol)}parseTrade(e,t=undefined){t=this.safeMarket(void 0,t);const i=this.safeInteger(e,"date_ms"),s=this.safeString(e,"price"),r=this.safeString(e,"amount"),n=this.parseNumber(s),o=this.parseNumber(r),d=this.parseNumber(a.O.stringMul(s,r)),c=this.safeString(e,"tid");let h=this.safeString(e,"type");const u=h.split("_");return h=u[0],{id:c,info:this.safeValue(e,"info",e),timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:void 0,type:void 0,side:h,takerOrMaker:void 0,price:n,amount:o,cost:d,fee:void 0}}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id,size:100};void 0!==t&&(a.time=parseInt(t)),void 0!==i&&(a.size=i);const n=await this.publicGetTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=1e3,r={}){await this.loadMarkets();const a=this.market(e);if(void 0===s&&(s=100),void 0===i){const e=this.parseTimeframe(t);i=this.milliseconds()-1e3*e*s}const n={symbol:a.id,type:this.safeString(this.timeframes,t,t),size:s,time:this.parseToInt(i/1e3)},o=await this.publicGetKline(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"info",{}),s=this.safeValue(i,"free",{}),r=this.safeValue(i,"freeze",{}),a=this.safeValue(i,"asset",{}),n=Object.keys(s);for(let e=0;e<n.length;e++){const i=n[e],o=this.safeCurrencyCode(i),d=this.account();d.free=this.safeString(s,i),d.used=this.safeString(r,i),d.total=this.safeString(a,i),t[o]=d}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostUserInfo(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({"-1":"cancelled",0:"open",1:"open",2:"closed",4:"closed"},e)}parseOrder(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t,"_"),r=this.safeInteger(e,"create_time"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"deal_amount"),d=this.safeString(e,"avg_price"),c=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeString(e,"order_id"),u=this.safeString(e,"order_type"),l=this.safeString(e,"type");return this.safeOrder({id:h,clientOrderId:void 0,datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:c,symbol:s,type:u,timeInForce:void 0,postOnly:void 0,side:l,price:a,stopPrice:void 0,triggerPrice:void 0,cost:void 0,amount:n,filled:o,remaining:void 0,trades:void 0,fee:void 0,info:this.safeValue(e,"info",e),average:d},t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e);let o={symbol:n.id,type:i,amount:s};"market"===t?o.type+="_market":o.price=r;const d=await this.privatePostCreateOrder(this.extend(o,a));return o=this.omit(o,"type"),o.order_id=d.order_id,o.type=i,o.order_type=t,o.create_time=this.milliseconds(),o.info=d,this.parseOrder(o,n)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(t).id,order_id:e};return await this.privatePostCancelOrder(this.extend(s,i))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(t),r={symbol:s.id,order_id:e},a=await this.privatePostOrdersInfo(this.extend(r,i)),n=this.safeValue(a,"orders",[]),o=this.parseOrders(n,s);return 1===o.length?o[0]:o}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),void 0===i&&(i=100);const r={symbol:this.market(e).id,current_page:1,page_length:i},a=await this.privatePostOrdersInfoHistory(this.extend(r,s)),n=this.safeValue(a,"orders",[]);return this.parseOrders(n,void 0,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),void 0!==e&&(e=this.market(e).symbol);const r=await this.fetchOrders(e,t,i,s),a=this.filterBy(r,"status","closed"),n=this.filterBy(r,"status","cancelled"),o=this.arrayConcat(a,n);return this.filterBySymbolSinceLimit(o,e,t,i)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={assetCode:a.id,amount:t,account:i};void 0!==s&&(n.memo=s);const o=this.privatePostWithdraw(this.extend(n,r));return this.parseTransaction(o,a)}parseTransaction(e,t=undefined){return t=this.safeCurrency(void 0,t),{id:this.safeString2(e,"id","withdrawId"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}convertSecretToPem(e){const t=e.length-0;let i=this.parseToInt(t/64);i=this.sum(i,1);let s="-----BEGIN PRIVATE KEY-----\n";for(let e=0;e<i;e++){const t=64*e,i=this.sum(t,64);s+=this.secret.slice(t,i)+"\n"}return s+"-----END PRIVATE KEY-----"}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.omit(s,this.extractParams(e));let c=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,s);if(c+=".do","public"===t)Object.keys(n).length&&(c+="?"+this.urlencode(n));else{this.checkRequiredCredentials();const e=this.keysort(this.extend({api_key:this.apiKey},s)),t=this.rawencode(e),i=this.hash(this.encode(t),o.J).toUpperCase();let n;this.safeValue(this.options,"cacheSecretAsPem",!0)?(n=this.safeValue(this.options,"pem"),void 0===n&&(n=this.convertSecretToPem(this.secret),this.options.pem=n)):n=this.convertSecretToPem(this.secret),e.sign=(0,d.j)(i,n,o.J),a=this.urlencode(e),r={"Content-Type":"application/x-www-form-urlencoded"}}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"false"===this.safeString(o,"result")){const e=this.safeString(o,"error_code"),t=this.safeString({1e4:"Internal error",10001:"The required parameters can not be empty",10002:"verification failed",10003:"Illegal parameters",10004:"User requests are too frequent",10005:"Key does not exist",10006:"user does not exist",10007:"Invalid signature",10008:"This currency pair is not supported",10009:"Limit orders can not be missing orders and the number of orders",10010:"Order price or order quantity must be greater than 0",10011:"Market orders can not be missing the amount of the order",10012:"market sell orders can not be missing orders",10013:"is less than the minimum trading position 0.001",10014:"Account number is not enough",10015:"The order type is wrong",10016:"Account balance is not enough",10017:"Abnormal server",10018:"order inquiry can not be more than 50 less than one",10019:"withdrawal orders can not be more than 3 less than one",10020:"less than the minimum amount of the transaction limit of 0.001",10022:"Insufficient key authority"},e,this.json(o));throw new(this.safeValue({10002:r.AuthenticationError,10004:r.DDoSProtection,10005:r.AuthenticationError,10006:r.AuthenticationError,10007:r.AuthenticationError,10009:r.InvalidOrder,10010:r.InvalidOrder,10011:r.InvalidOrder,10012:r.InvalidOrder,10013:r.InvalidOrder,10014:r.InvalidOrder,10015:r.InvalidOrder,10016:r.InvalidOrder,10022:r.AuthenticationError},e,r.ExchangeError))(t)}}}},8601:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(7767),r=i(6689),a=i(9292),n=i(2194),o=i(1372),d=i(5981);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"lbank2",name:"LBank",countries:["CN"],version:"v2",rateLimit:20,has:{CORS:!1,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!1,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchIsolatedPositions:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFees:!0,fetchTransactionFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!1},timeframes:{"1m":"minute1","5m":"minute5","15m":"minute15","30m":"minute30","1h":"hour1","2h":"hour2","4h":"hour4","6h":"hour6","8h":"hour8","12h":"hour12","1d":"day1","1w":"week1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/38063602-9605e28a-3302-11e8-81be-64b1e53c4cfb.jpg",api:{rest:"https://api.lbank.info"},api2:"https://api.lbkex.com",www:"https://www.lbank.info",doc:"https://www.lbank.info/en-US/docs/index.html",fees:"https://lbankinfo.zendesk.com/hc/en-gb/articles/360012072873-Trading-Fees",referral:"https://www.lbank.info/invitevip?icode=7QCY"},api:{public:{get:{currencyPairs:2.5,accuracy:2.5,usdToCny:2.5,withdrawConfigs:2.5,timestamp:2.5,"ticker/24hr":2.5,ticker:2.5,depth:2.5,incrDepth:2.5,trades:2.5,kline:2.5,"supplement/system_ping":2.5,"supplement/incrDepth":2.5,"supplement/trades":2.5,"supplement/ticker/price":2.5,"supplement/ticker/bookTicker":2.5},post:{"supplement/system_status":2.5}},private:{post:{user_info:2.5,"subscribe/get_key":2.5,"subscribe/refresh_key":2.5,"subscribe/destroy_key":2.5,get_deposit_address:2.5,deposit_history:2.5,create_order:1,batch_create_order:1,cancel_order:1,cancel_clientOrders:1,orders_info:2.5,orders_info_history:2.5,order_transaction_detail:2.5,transaction_history:2.5,orders_info_no_deal:2.5,withdraw:2.5,withdrawCancel:2.5,withdraws:2.5,"supplement/user_info":2.5,"supplement/withdraw":2.5,"supplement/deposit_history":2.5,"supplement/withdraws":2.5,"supplement/get_deposit_address":2.5,"supplement/asset_detail":2.5,"supplement/customer_trade_fee":2.5,"supplement/api_Restrictions":2.5,"supplement/system_ping":2.5,"supplement/create_order_test":1,"supplement/create_order":1,"supplement/cancel_order":1,"supplement/cancel_order_by_symbol":1,"supplement/orders_info":2.5,"supplement/orders_info_no_deal":2.5,"supplement/orders_info_history":2.5,"supplement/user_info_account":2.5,"supplement/transaction_history":2.5}}},fees:{trading:{maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")},funding:{withdraw:{}}},commonCurrencies:{VET_ERC20:"VEN",PNT:"Penta"},precisionMode:a.sh,options:{cacheSecretAsPem:!0,createMarketBuyOrderRequiresPrice:!0,fetchTrades:{method:"publicGetTrades"},fetchTransactionFees:{method:"fetchPrivateTransactionFees"},fetchDepositWithdrawFees:{method:"fetchPrivateDepositWithdrawFees"},fetchDepositAddress:{method:"fetchDepositAddressDefault"},createOrder:{method:"privatePostSupplementCreateOrder"},fetchOrder:{method:"fetchOrderSupplement"},fetchBalance:{method:"privatePostSupplementUserInfo"},networks:{ERC20:"erc20",ETH:"erc20",TRC20:"trc20",TRX:"trc20",OMNI:"omni",ASA:"asa",BEP20:"bep20(bsc)",BSC:"bep20(bsc)",HT:"heco",BNB:"bep2",BTC:"btc",DOGE:"dogecoin",MATIC:"matic",POLYGON:"matic",OEC:"oec",BTCTRON:"btctron",XRP:"xrp"},"inverse-networks":{erc20:"ERC20",trc20:"TRC20",omni:"OMNI",asa:"ASA","bep20(bsc)":"BSC",bep20:"BSC",heco:"HT",bep2:"BNB",btc:"BTC",dogecoin:"DOGE",matic:"MATIC",oec:"OEC",btctron:"BTCTRON",xrp:"XRP"},defaultNetworks:{USDT:"TRC20"}}})}async fetchMarkets(e={}){const t=await this.publicGetAccuracy(),i=this.safeValue(t,"data"),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=r.split("_"),n=a[0],o=a[1],d=n.toUpperCase(),c=o.toUpperCase();let h=d+"/"+c;const u={"3l":!0,"5l":!0,"3s":!0,"5s":!0},l=n.slice(-2),p=this.safeValue(u,l,!1);let f;p&&(h+=":"+c),!0===p&&(f=!0),s.push({id:r,symbol:h,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:p,future:!1,option:!1,active:!0,contract:p,linear:f,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantityAccuracy"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceAccuracy")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minTranQua"),max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeInteger(e,"timestamp"),a=this.safeValue(e,"ticker");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeString(a,"high"),low:this.safeString(a,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:void 0,last:this.safeString(a,"latest"),previousClose:void 0,change:void 0,percentage:this.safeString(a,"change"),average:void 0,baseVolume:this.safeString(a,"vol"),quoteVolume:this.safeString(a,"turnover"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetTicker24hr(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTicker(n,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTicker24hr(this.extend({symbol:"all"},t)),s=this.safeValue(i,"data",[]);return this.parseTickers(s,e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);void 0===t&&(t=60);const r={symbol:s.id,size:t},a=(await this.publicGetDepth(this.extend(r,i))).data,n=this.milliseconds();return this.parseOrderBook(a,s.symbol,n)}parseTrade(e,t=undefined){let i=this.safeInteger2(e,"date_ms","time");void 0===i&&(i=this.safeInteger(e,"dealTime"));let s=this.safeString2(e,"amount","qty");void 0===s&&(s=this.safeString(e,"dealQuantity"));let r=this.safeString(e,"price");void 0===r&&(r=this.safeString(e,"dealPrice"));let a=this.safeString(e,"quoteQty");void 0===a&&(a=this.safeString(e,"dealVolumePrice"));let n,o,d=this.safeString2(e,"tradeType","type");if(void 0!==d){const e=d.split("_");d=this.safeString(e,0);const t=this.safeString(e,1);n="limit",o="taker",void 0!==t&&("market"===t?n="market":"maker"===t&&(o="maker"))}let c=this.safeString2(e,"tid","id");void 0===c&&(c=this.safeString(e,"txUuid"));const h=this.safeString(e,"orderUuid"),u=this.safeSymbol(void 0,t);let l;const p=this.safeString(e,"tradeFee");return void 0!==p&&(l={cost:p,currency:void 0,rate:this.safeString(e,"tradeFeeRate")}),this.safeTrade({timestamp:i,datetime:this.iso8601(i),symbol:u,id:c,order:h,type:n,takerOrMaker:o,side:d,price:r,amount:s,cost:a,fee:l,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==t&&(a.time=t),a.size=void 0!==i?i:600;let n=this.safeString(s,"method");if(s=this.omit(s,"method"),void 0===n){const e=this.safeValue(this.options,"fetchTrades",{});n=this.safeString(e,"method","publicGetTrades")}const o=await this[n](this.extend(a,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,r,t,i)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);if(void 0===s&&(s=100),void 0===i){const e=this.parseTimeframe(t);i=this.milliseconds()-1e3*e*s}const n={symbol:a.id,type:this.safeString(this.timeframes,t,t),time:this.parseToInt(i/1e3),size:s},o=await this.publicGetKline(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseOHLCVs(d,a,t,i,s)}parseBalance(e){const t=this.safeInteger(e,"ts"),i={info:e,timestamp:t,datetime:this.iso8601(t)},s=this.safeValue(e,"data");if(void 0!==this.safeValue(s,"toBtc")){const e=this.safeValue(s,"freeze",{}),t=this.safeValue(s,"free",{}),r=Object.keys(t);for(let s=0;s<r.length;s++){const a=r[s],n=this.safeCurrencyCode(a),o=this.account();o.used=this.safeString(e,a),o.free=this.safeString(t,a),i[n]=o}return this.safeBalance(i)}const r=this.safeValue(s,"balances");if(void 0!==r){for(let e=0;e<r.length;e++){const t=r[e],s=this.safeString(t,"asset"),a=this.safeCurrencyCode(s),n=this.account();n.free=this.safeString(t,"free"),n.used=this.safeString(t,"locked"),i[a]=n}return this.safeBalance(i)}if(!0===Array.isArray(s)){for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"coin"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"usableAmt"),n.used=this.safeString(t,"freezeAmt"),i[a]=n}return this.safeBalance(i)}}async fetchBalance(e={}){await this.loadMarkets();let t=this.safeString(e,"method");if(void 0===t){const e=this.safeValue(this.options,"fetchBalance",{});t=this.safeString(e,"method","privatePostSupplementUserInfo")}const i=await this[t]();return this.parseBalance(i)}parseTradingFee(e,t=undefined){const i=this.safeString(e,"symbol");return{info:e,symbol:this.safeSymbol(i),maker:this.safeNumber(e,"makerCommission"),taker:this.safeNumber(e,"takerCommission")}}async fetchTradingFee(e,t={}){const i=this.market(e);return await this.fetchTradingFees(this.extend(t,{category:i.id}))}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privatePostSupplementCustomerTradeFee(this.extend({},e)),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=this.parseTradingFee(i[e]);s[t.symbol]=t}return s}async createOrder(e,t,i,s,a=undefined,o={}){await this.loadMarkets();const d=this.market(e),c=this.safeString2(o,"custom_id","clientOrderId"),h=this.safeValue(o,"postOnly",!1),u=this.safeStringUpper(o,"timeInForce");o=this.omit(o,["custom_id","clientOrderId","timeInForce","postOnly"]);const l={symbol:d.id},p="IOC"===u,f="FOK"===u,m=h||"PO"===u;if("market"===t&&(p||f||m))throw new r.InvalidOrder(this.id+" createOrder () does not allow market FOK, IOC, or postOnly orders. Only limit IOC, FOK, and postOnly orders are allowed");if("limit"===t)l.type=i,l.price=this.priceToPrecision(e,a),l.amount=this.amountToPrecision(e,s),p?l.type=i+"_ioc":f?l.type=i+"_fok":m&&(l.type=i+"_maker");else if("market"===t)if("sell"===i)l.type=i+"_market",l.amount=this.amountToPrecision(e,s);else if("buy"===i)if(l.type=i+"_market",this.options.createMarketBuyOrderRequiresPrice){if(void 0===a)throw new r.InvalidOrder(this.id+" createOrder () requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply the price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");{const t=this.numberToString(s),i=this.numberToString(a),r=n.O.stringMul(t,i),o=this.parseNumber(r);l.price=this.priceToPrecision(e,o)}}else l.price=s;let v;if(void 0!==c&&(l.custom_id=c),v=this.safeString(o,"method"),o=this.omit(o,"method"),void 0===v){const e=this.safeValue(this.options,"createOrder",{});v=this.safeString(e,"method","privatePostSupplementCreateOrder")}const g=await this[v](this.extend(l,o)),y=this.safeValue(g,"data",{});return this.safeOrder({id:this.safeString(y,"order_id"),info:y},d)}parseOrderStatus(e){return this.safeString({"-1":"canceled",0:"open",1:"open",2:"closed",3:"canceled",4:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString2(e,"orderId","order_id"),s=this.safeString2(e,"clientOrderId","custom_id"),r=this.safeInteger2(e,"time","create_time"),a=this.safeString(e,"status"),n=this.safeString(e,"symbol");let o;t=this.safeMarket(n,t);let d=!1,c="limit";const h=this.safeString(e,"type"),u=h.split("_"),l=this.safeString(u,0),p=this.safeString(u,1);"market"===p&&(c="market"),"maker"===p&&(d=!0,o="PO"),"ioc"===p&&(o="IOC"),"fok"===p&&(o="FOK");const f=this.safeString(e,"price"),m=this.safeString(e,"cummulativeQuoteQty");let v;"buy_market"!==h&&(v=this.safeString2(e,"origQty","amount"));const g=this.safeString2(e,"executedQty","deal_amount");return this.safeOrder({id:i,clientOrderId:s,datetime:this.iso8601(r),timestamp:r,lastTradeTimestamp:void 0,status:this.parseOrderStatus(a),symbol:t.symbol,type:c,timeInForce:o,postOnly:d,side:l,price:f,stopPrice:void 0,triggerPrice:void 0,cost:m,amount:v,filled:g,remaining:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();let s=this.safeString(i,"method");if(void 0===s){const e=this.safeValue(this.options,"fetchOrder",{});s=this.safeString(e,"method","fetchOrderSupplement")}return await this[s](e,t,i)}async fetchOrderSupplement(e,t=undefined,i={}){if(await this.loadMarkets(),void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder () requires a symbol argument");const s={symbol:this.market(t).id,orderId:e},a=await this.privatePostSupplementOrdersInfo(this.extend(s,i)),n=this.safeValue(a,"data",{});return this.parseOrder(n)}async fetchOrderDefault(e,t=undefined,i={}){if(await this.loadMarkets(),void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder () requires a symbol argument");const s={symbol:this.market(t).id,order_id:e},a=await this.privatePostOrdersInfo(this.extend(s,i)),n=this.safeValue(a,"data",[]),o=n.length;if(1===o)return this.parseOrder(n[0]);{const e=[];for(let t=0;t<o;t++){const i=this.parseOrder(n[t]);e.push(i)}return e}}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades () requires a symbol argument");await this.loadMarkets();const a=this.market(e);t=this.safeValue(s,"start_date",t),s=this.omit(s,"start_date");const n={symbol:a.id};void 0!==i&&(n.size=i),void 0!==t&&(n.start_date=this.ymd(t,"-"));const o=await this.privatePostTransactionHistory(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,a,t,i)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e);void 0===i&&(i=100);const n={symbol:a.id,current_page:1,page_length:i},o=await this.privatePostSupplementOrdersInfoHistory(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"orders",[]);return this.parseOrders(c,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e);void 0===i&&(i=100);const n={symbol:a.id,current_page:1,page_length:i},o=await this.privatePostSupplementOrdersInfoNoDeal(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"orders",[]);return this.parseOrders(c,a,t,i)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.safeString2(i,"origClientOrderId","clientOrderId");i=this.omit(i,["origClientOrderId","clientOrderId"]);const a={symbol:this.market(t).id};void 0!==s&&(a.origClientOrderId=s),a.orderId=e;const n=await this.privatePostSupplementCancelOrder(this.extend(a,i));return this.safeValue(n,"data",{})}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const i={symbol:this.market(e).id},s=await this.privatePostSupplementCancelOrderBySymbol(this.extend(i,t));return this.safeValue(s,"data",[])}getNetworkCodeForCurrency(e,t){const i=this.safeValue(this.options,"defaultNetworks"),s=this.safeStringUpper(i,e),r=this.safeValue(this.options,"networks",{});let a=this.safeStringUpper(t,"network",s);return a=this.safeString(r,a,a),a}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.safeString(t,"method");if(t=this.omit(t,"method"),void 0===i){const e=this.safeValue(this.options,"fetchDepositAddress",{});i=this.safeString(e,"method","fetchPrivateTradingFees")}return await this[i](e,t)}async fetchDepositAddressDefault(e,t={}){await this.loadMarkets();const i={assetCode:this.currency(e).id},s=this.getNetworkCodeForCurrency(e,t);void 0!==s&&(i.netWork=s,t=this.omit(t,"network"));const r=await this.privatePostGetDepositAddress(this.extend(i,t)),a=this.safeValue(r,"data"),n=this.safeString(a,"address"),o=this.safeString(a,"memo"),d=this.safeString(a,"netWork"),c=this.safeValue(this.options,"inverse-networks",{});return{currency:e,address:n,tag:o,network:this.safeStringUpper(c,d,d),info:r}}async fetchDepositAddressSupplement(e,t={}){await this.loadMarkets();const i={coin:this.currency(e).id},s=this.safeValue(this.options,"networks");let r=this.safeStringUpper(t,"network");r=this.safeString(s,r,r),void 0!==r&&(i.networkName=r,t=this.omit(t,"network"));const a=await this.privatePostSupplementGetDepositAddress(this.extend(i,t)),n=this.safeValue(a,"data"),o=this.safeString(n,"address"),d=this.safeString(n,"memo"),c=this.safeValue(this.options,"inverse-networks",{});return{currency:e,address:o,tag:d,network:this.safeStringUpper(c,r,r),info:a}}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.safeString(a,"fee");if(a=this.omit(a,"fee"),void 0===n)throw new r.ArgumentsRequired(this.id+" withdraw () requires a fee argument to be supplied in params, the relevant coin network fee can be found by calling fetchDepositWithdrawFees (), note: if no network param is supplied then the default network will be used, this can also be found in fetchDepositWithdrawFees ()");const o={address:i,coin:this.currency(e).id,amount:t,fee:n};void 0!==s&&(o.memo=s);const d=this.safeStringUpper2(a,"network","networkName");a=this.omit(a,["network","networkName"]);const c=this.safeValue(this.options,"networks"),h=this.safeString(c,d,d);void 0!==h&&(o.networkName=h);const u=await this.privatePostSupplementWithdraw(this.extend(o,a)),l=this.safeValue(u,"data",{});return{info:l,id:this.safeString(l,"withdrawId")}}parseTransactionStatus(e,t){return this.safeString(this.safeValue({deposit:{1:"pending",2:"ok",3:"failed",4:"canceled",5:"transfer"},withdrawal:{1:"pending",2:"canceled",3:"failed",4:"ok"}},t,{}),e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id");let s;s=void 0===i?"deposit":"withdrawal";const r=this.safeString(e,"txId"),a=this.safeInteger2(e,"insertTime","applyTime"),n=this.safeValue(this.options,"inverse-networks",{}),o=this.safeString(e,"networkName"),d=this.safeString(n,o,o),c=this.safeString(e,"address");let h,u;"deposit"===s?h=c:u=c;const l=this.safeNumber(e,"amount"),p=this.safeString2(e,"coin","coid"),f=this.safeCurrencyCode(p,t),m=this.parseTransactionStatus(this.safeString(e,"status"),s);let v;const g=this.safeNumber(e,"fee");return void 0!==g&&(v={cost:g,currency:f}),{info:e,id:i,txid:r,timestamp:a,datetime:this.iso8601(a),network:d,address:c,addressTo:u,addressFrom:h,tag:void 0,tagTo:void 0,tagFrom:void 0,type:s,amount:l,currency:f,status:m,updated:void 0,comment:void 0,internal:"transfer"===m,fee:v}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.coin=a.id),void 0!==t&&(r.startTime=t);const n=await this.privatePostSupplementDepositHistory(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"depositOrders",[]);return this.parseTransactions(d,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.coin=a.id),void 0!==t&&(r.startTime=t);const n=await this.privatePostSupplementWithdraws(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"withdraws",[]);return this.parseTransactions(d,a,t,i)}async fetchTransactionFees(e=undefined,t={}){let i;if(await this.loadMarkets(),!0===this.checkRequiredCredentials(!1)){let e=this.safeString(t,"method");if(t=this.omit(t,"method"),void 0===e){const t=this.safeValue(this.options,"fetchTransactionFees",{});e=this.safeString(t,"method","fetchPrivateTransactionFees")}i=await this[e](t)}else i=await this.fetchPublicTransactionFees(t);return i}async fetchPrivateTransactionFees(e={}){await this.loadMarkets();const t=await this.privatePostSupplementUserInfo(),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"coin"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"networkList",[]);s[a]={};for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"name"),r=this.safeString(this.options["inverse-networks"],i,i),o=this.safeNumber(t,"withdrawFee");void 0!==o&&(s[a][r]=o)}}return{withdraw:s,deposit:{},info:t}}async fetchPublicTransactionFees(e={}){await this.loadMarkets();const t=this.safeString2(e,"coin","assetCode");e=this.omit(e,["coin","assetCode"]);const i={};if(void 0!==t){const e=this.currency(t);i.assetCode=e.id}const s=await this.publicGetWithdrawConfigs(this.extend(i,e)),r=this.safeValue(s,"data",[]),a={};for(let e=0;e<r.length;e++){const t=r[e];if("true"===this.safeValue(t,"canWithDraw")){const e=this.safeString(t,"assetCode"),i=this.safeCurrencyCode(e),s=this.safeString(t,"chain");let r=this.safeString(this.options["inverse-networks"],s,s);void 0===r&&(r=i);const n=this.safeString(t,"fee");void 0===a[i]&&(a[i]={}),a[i][r]=this.parseNumber(n)}}return{withdraw:a,deposit:{},info:s}}async fetchDepositWithdrawFees(e=undefined,t={}){let i;if(await this.loadMarkets(),!0===this.checkRequiredCredentials(!1)){if(i=this.safeString(t,"method"),t=this.omit(t,"method"),void 0===i){const e=this.safeValue(this.options,"fetchDepositWithdrawFees",{});i=this.safeString(e,"method","fetchPrivateDepositWithdrawFees")}}else i="fetchPublicDepositWithdrawFees";return await this[i](e,t)}async fetchPrivateDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privatePostSupplementUserInfo(t),s=this.safeValue(i,"data",[]);return this.parseDepositWithdrawFees(s,e,"coin")}async fetchPublicDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetWithdrawConfigs(this.extend({},t)),s=this.safeValue(i,"data",[]);return this.parsePublicDepositWithdrawFees(s,e)}parsePublicDepositWithdrawFees(e,t=undefined){const i={};for(let s=0;s<e.length;s++){const r=e[s];if(!0===this.safeValue(r,"canWithDraw")){const e=this.safeString(r,"assetCode"),s=this.safeCurrencyCode(e);if(void 0===t||this.inArray(s,t)){const e=this.safeNumber(r,"fee");if(void 0!==e){void 0===this.safeValue(i,s)?i[s]=this.depositWithdrawFee([r]):i[s].info.push(r);const t=this.safeString(r,"chain"),a=this.safeString(this.options["inverse-networks"],t,t);void 0!==a?i[s].networks[a]={withdraw:{fee:e,percentage:void 0},deposit:{fee:void 0,percentage:void 0}}:i[s].withdraw={fee:e,percentage:void 0}}}}}return i}parseDepositWithdrawFee(e,t=undefined){const i=this.depositWithdrawFee(e),s=this.safeValue(e,"networkList",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"name"),a=this.safeStringUpper(this.options["inverse-networks"],r,r),n=this.safeNumber(t,"withdrawFee"),o=this.safeValue(t,"isDefault");void 0!==n&&(o&&(i.withdraw={fee:n,percentage:void 0}),i.networks[a]={withdraw:{fee:n,percentage:void 0},deposit:{fee:void 0,percentage:void 0}})}return i}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.omit(s,this.extractParams(e)),c=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,s);if(c+=".do","public"===t)Object.keys(n).length&&(c+="?"+this.urlencode(this.keysort(n)));else{this.checkRequiredCredentials();const e=this.milliseconds().toString(),t=this.uuid22()+this.uuid16();let i;n=this.extend({api_key:this.apiKey},n),i=this.secret.length>32?"RSA":"HmacSHA256";const s=this.rawencode(this.keysort(this.extend({echostr:t,signature_method:i,timestamp:e},n))),c=this.encode(s),h=this.hash(c,o.J).toUpperCase();let u;if("RSA"===i){let e;this.safeValue(this.options,"cacheSecretAsPem",!0)?(e=this.safeValue(this.options,"pem"),void 0===e&&(e=this.convertSecretToPem(this.encode(this.secret)),this.options.pem=e)):e=this.convertSecretToPem(this.encode(this.secret)),u=(0,d.j)(h,e,o.J)}else"HmacSHA256"===i&&(u=this.hmac(this.encode(h),this.encode(this.secret),o.J));n.sign=u,a=this.urlencode(this.keysort(n)),r={"Content-Type":"application/x-www-form-urlencoded",timestamp:e,signature_method:i,echostr:t}}return{url:c,method:i,body:a,headers:r}}convertSecretToPem(e){const t=e.length-0;let i=this.parseToInt(t/64);i=this.sum(i,1);let s="-----BEGIN PRIVATE KEY-----\n";for(let e=0;e<i;e++){const t=64*e,i=this.sum(t,64);s+=this.secret.slice(t,i)+"\n"}return s+"-----END PRIVATE KEY-----"}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"false"===this.safeString(o,"result")){const e=this.safeString(o,"error_code"),t=this.safeString({1e4:"Internal error",10001:"The required parameters can not be empty",10002:"Validation failed",10003:"Invalid parameter",10004:"Request too frequent",10005:"Secret key does not exist",10006:"User does not exist",10007:"Invalid signature",10008:"Invalid Trading Pair",10009:"Price and/or Amount are required for limit order",10010:"Price and/or Amount must be less than minimum requirement",10013:"The amount is too small",10014:"Insufficient amount of money in the account",10015:"Invalid order type",10016:"Insufficient account balance",10017:"Server Error",10018:"Page size should be between 1 and 50",10019:"Cancel NO more than 3 orders in one request",10020:"Volume < 0.001",10021:"Price < 0.01",10022:"Invalid authorization",10023:"Market Order is not supported yet",10024:"User cannot trade on this pair",10025:"Order has been filled",10026:"Order has been cancelld",10027:"Order is cancelling",10028:"Wrong query time",10029:"from is not in the query time",10030:"from do not match the transaction type of inqury",10031:"echostr length must be valid and length must be from 30 to 40",10033:"Failed to create order",10036:"customID duplicated",10100:"Has no privilege to withdraw",10101:"Invalid fee rate to withdraw",10102:"Too little to withdraw",10103:"Exceed daily limitation of withdraw",10104:"Cancel was rejected",10105:"Request has been cancelled",10106:"None trade time",10107:"Start price exception",10108:"can not create order",10109:"wallet address is not mapping",10110:"transfer fee is not mapping",10111:"mount > 0",10112:"fee is too lower",10113:"transfer fee is 0",10600:"intercepted by replay attacks filter, check timestamp",10601:"Interface closed unavailable",10701:"invalid asset code",10702:"not allowed deposit"},e,this.json(o));throw new(this.safeValue({10001:r.BadRequest,10002:r.AuthenticationError,10003:r.BadRequest,10004:r.RateLimitExceeded,10005:r.AuthenticationError,10006:r.AuthenticationError,10007:r.AuthenticationError,10008:r.BadSymbol,10009:r.InvalidOrder,10010:r.InvalidOrder,10013:r.InvalidOrder,10014:r.InsufficientFunds,10015:r.InvalidOrder,10016:r.InsufficientFunds,10017:r.ExchangeError,10018:r.BadRequest,10019:r.BadRequest,10020:r.BadRequest,10021:r.InvalidOrder,10022:r.PermissionDenied,10023:r.InvalidOrder,10024:r.PermissionDenied,10025:r.InvalidOrder,10026:r.InvalidOrder,10027:r.InvalidOrder,10028:r.BadRequest,10029:r.BadRequest,10030:r.BadRequest,10031:r.InvalidNonce,10033:r.ExchangeError,10036:r.DuplicateOrderId,10100:r.PermissionDenied,10101:r.BadRequest,10102:r.InsufficientFunds,10103:r.ExchangeError,10104:r.ExchangeError,10105:r.ExchangeError,10106:r.BadRequest,10107:r.BadRequest,10108:r.ExchangeError,10109:r.InvalidAddress,10110:r.ExchangeError,10111:r.BadRequest,10112:r.BadRequest,10113:r.BadRequest,10600:r.BadRequest,10601:r.ExchangeError,10701:r.BadSymbol,10702:r.PermissionDenied},e,r.ExchangeError))(t)}}}},1758:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(3148),r=i(6689),a=i(2194),n=i(9292);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"luno",name:"luno",countries:["GB","SG","ZA"],rateLimit:200,version:"1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{referral:"https://www.luno.com/invite/44893A",logo:"https://user-images.githubusercontent.com/1294454/27766607-8c1a69d8-5ede-11e7-930c-540b5eb9be24.jpg",api:{public:"https://api.luno.com/api",private:"https://api.luno.com/api",exchange:"https://api.luno.com/api/exchange"},www:"https://www.luno.com",doc:["https://www.luno.com/en/api","https://npmjs.org/package/bitx","https://github.com/bausmeier/node-bitx"]},api:{exchange:{get:{markets:1}},public:{get:{orderbook:1,orderbook_top:1,ticker:1,tickers:1,trades:1}},private:{get:{"accounts/{id}/pending":1,"accounts/{id}/transactions":1,balance:1,beneficiaries:1,fee_info:1,funding_address:1,listorders:1,listtrades:1,"orders/{id}":1,"quotes/{id}":1,withdrawals:1,"withdrawals/{id}":1,transfers:1},post:{accounts:1,"accounts/{id}/name":1,postorder:1,marketorder:1,stoporder:1,funding_address:1,withdrawals:1,send:1,quotes:1,"oauth2/grant":1},put:{"accounts/{id}/name":1,"quotes/{id}":1},delete:{"quotes/{id}":1,"withdrawals/{id}":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0")}},precisionMode:n.sh})}async fetchMarkets(e={}){const t=await this.exchangeGetMarkets(e),i=[],s=this.safeValue(t,"markets",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"market_id"),a=this.safeString(t,"base_currency"),n=this.safeString(t,"counter_currency"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=this.safeString(t,"trading_status");i.push({id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ACTIVE"===c,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"volume_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_volume"),max:this.safeNumber(t,"max_volume")},price:{min:this.safeNumber(t,"min_price"),max:this.safeNumber(t,"max_price")},cost:{min:void 0,max:void 0}},info:t})}return i}async fetchAccounts(e={}){const t=await this.privateGetBalance(e),i=this.safeValue(t,"balance",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"account_id"),a=this.safeString(t,"asset"),n=this.safeCurrencyCode(a);s.push({id:r,type:void 0,currency:n,info:t})}return s}parseBalance(e){const t=this.safeValue(e,"balance",[]),i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"asset"),n=this.safeCurrencyCode(r),o=this.safeString(s,"reserved"),d=this.safeString(s,"unconfirmed"),c=this.safeString(s,"balance"),h=a.O.stringAdd(o,d),u=a.O.stringAdd(c,d);if(n in i)i[n].used=a.O.stringAdd(i[n].used,h),i[n].total=a.O.stringAdd(i[n].total,u);else{const e=this.account();e.used=h,e.total=u,i[n]=e}}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();let s="publicGetOrderbook";void 0!==t&&t<=100&&(s+="Top");const r=this.market(e),a={pair:r.id},n=await this[s](this.extend(a,i)),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,r.symbol,o,"bids","asks","price","volume")}parseOrderStatus(e){return this.safeString({PENDING:"open"},e,e)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"creation_timestamp");let s,r=this.parseOrderStatus(this.safeString(e,"state"));const a=this.safeString(e,"type");"ASK"===a||"SELL"===a?s="sell":"BID"!==a&&"BUY"!==a||(s="buy");const n=this.safeString(e,"pair");t=this.safeMarket(n,t);const o=this.safeString(e,"limit_price"),d=this.safeString(e,"limit_volume"),c=this.safeNumber(e,"fee_counter"),h=this.safeNumber(e,"fee_base"),u=this.safeString(e,"base"),l=this.safeString(e,"counter");let p;void 0!==c?p={cost:c,currency:t.quote}:void 0!==h&&(p={cost:h,currency:t.base});const f=this.safeString(e,"order_id");return this.safeOrder({id:f,clientOrderId:void 0,datetime:this.iso8601(i),timestamp:i,lastTradeTimestamp:void 0,status:r,symbol:t.symbol,type:void 0,timeInForce:void 0,postOnly:void 0,side:s,price:o,stopPrice:void 0,triggerPrice:void 0,amount:d,filled:u,cost:l,remaining:void 0,trades:void 0,fee:p,info:e,average:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetOrdersId(this.extend(s,i));return this.parseOrder(r)}async fetchOrdersByState(e=undefined,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n;void 0!==e&&(a.state=e),void 0!==t&&(n=this.market(t),a.pair=n.id);const o=await this.privateGetListorders(this.extend(a,r)),d=this.safeValue(o,"orders",[]);return this.parseOrders(d,n,i,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState(void 0,e,t,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("PENDING",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("COMPLETE",e,t,i,s)}parseTicker(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"pair"),r=this.safeSymbol(s,t),a=this.safeString(e,"last_trade");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:void 0,low:void 0,bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"rolling_24_hour_volume"),quoteVolume:void 0,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetTickers(t),s=this.indexBy(i.tickers,"pair"),r=Object.keys(s),a={};for(let e=0;e<r.length;e++){const t=r[e],i=this.safeMarket(t),n=i.symbol,o=s[t];a[n]=this.parseTicker(o,i)}return this.filterByArray(a,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"order_id"),s=this.safeString(e,"sequence");let r,n;if(void 0!==i){const t=this.safeString(e,"type");"ASK"===t||"SELL"===t?n="sell":"BID"!==t&&"BUY"!==t||(n="buy"),r="sell"===n&&e.is_buy?"maker":"buy"!==n||e.is_buy?"taker":"maker"}else n=e.is_buy?"buy":"sell";const o=this.safeString(e,"fee_base"),d=this.safeString(e,"fee_counter");let c,h;void 0!==o?a.O.stringEquals(o,"0.0")||(c=t.base,h=o):void 0!==d&&(a.O.stringEquals(d,"0.0")||(c=t.quote,h=d));const u=this.safeInteger(e,"timestamp");return this.safeTrade({info:e,id:s,timestamp:u,datetime:this.iso8601(u),symbol:t.symbol,order:i,type:void 0,side:n,takerOrMaker:r,price:this.safeString(e,"price"),amount:this.safeString2(e,"volume","base"),cost:this.safeString(e,"counter"),fee:{cost:h,currency:c}},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==t&&(a.since=t);const n=await this.publicGetTrades(this.extend(a,s)),o=this.safeValue(n,"trades",[]);return this.parseTrades(o,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id};void 0!==t&&(n.since=t),void 0!==i&&(n.limit=i);const o=await this.privateGetListtrades(this.extend(n,s)),d=this.safeValue(o,"trades",[]);return this.parseTrades(d,a,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i={symbol:this.market(e).id},s=await this.privateGetFeeInfo(this.extend(i,t));return{info:s,symbol:e,maker:this.safeNumber(s,"maker_fee"),taker:this.safeNumber(s,"taker_fee")}}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();let n="privatePost";const o=this.market(e),d={pair:o.id};"market"===t?(n+="Marketorder",d.type=i.toUpperCase(),"buy"===i?d.counter_volume=this.amountToPrecision(o.symbol,s):d.base_volume=this.amountToPrecision(o.symbol,s)):(n+="Postorder",d.volume=this.amountToPrecision(o.symbol,s),d.price=this.priceToPrecision(o.symbol,r),d.type="buy"===i?"BID":"ASK");const c=await this[n](this.extend(d,a));return this.safeOrder({info:c,id:c.order_id},o)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:e};return await this.privatePostStoporder(this.extend(s,i))}async fetchLedgerByEntries(e=undefined,t=-1,i=1,s={}){const r={min_row:t,max_row:this.sum(t,i)};return await this.fetchLedger(e,void 0,i,this.extend(r,s))}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){let a;await this.loadMarkets(),await this.loadAccounts();let n=this.safeString(s,"id"),o=this.safeValue(s,"min_row"),d=this.safeValue(s,"max_row");if(void 0===n){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchLedger() requires a currency code argument if no account id specified in params");a=this.currency(e);const t=this.indexBy(this.accounts,"currency"),i=this.safeValue(t,e);if(void 0===i)throw new r.ExchangeError(this.id+" fetchLedger() could not find account id for "+e);n=i.id}if(void 0===o&&void 0===d)d=0,o=-1e3;else if(void 0===o||void 0===d)throw new r.ExchangeError(this.id+" fetchLedger() require both params 'max_row' and 'min_row' or neither to be defined");if(void 0!==i&&d-o>i&&(d<=0?o=d-i:o>0&&(d=o+i)),d-o>1e3)throw new r.ExchangeError(this.id+" fetchLedger() requires the params 'max_row' - 'min_row' <= 1000");const c={id:n,min_row:o,max_row:d},h=await this.privateGetAccountsIdTransactions(this.extend(s,c)),u=this.safeValue(h,"transactions",[]);return this.parseLedger(u,a,t,i)}parseLedgerComment(e){const t=e.split(" ");let i;const s=this.safeString(t,0),r=this.safeString(t,2),a=this.safeString(t,3);let n=this.safeString({Withdrawal:"fee",Trading:"fee",Payment:"transaction",Sent:"transaction",Deposit:"transaction",Received:"transaction",Released:"released",Reserved:"reserved",Sold:"trade",Bought:"trade",Failure:"failed"},s,void 0);return void 0===n&&"fee"===r&&(n="fee"),"reserved"===n&&"order"===a&&(i=this.safeString(t,4)),{type:n,referenceId:i}}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"row_index"),s=this.safeString(e,"account_id"),r=this.safeValue(e,"timestamp"),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),d=this.safeString(e,"available_delta"),c=this.safeString(e,"balance_delta"),h=this.safeString(e,"balance"),u=this.safeString(e,"description");let l=h,p="0.0";const f=this.parseLedgerComment(u),m=f.type,v=f.referenceId;let g,y;return a.O.stringEquals(c,"0.0")?a.O.stringLt(d,"0.0")?(y="pending",p=a.O.stringAbs(d)):a.O.stringGt(d,"0.0")&&(y="canceled",p=a.O.stringAbs(d)):(l=a.O.stringSub(h,c),y="ok",p=a.O.stringAbs(c)),a.O.stringGt(c,"0")||a.O.stringGt(d,"0")?g="in":(a.O.stringLt(c,"0")||a.O.stringLt(d,"0"))&&(g="out"),{id:i,direction:g,account:s,referenceId:v,referenceAccount:void 0,type:m,currency:o,amount:this.parseNumber(p),timestamp:r,datetime:this.iso8601(r),before:l,after:h,status:y,fee:void 0,info:e}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t]+"/"+this.version+"/"+this.implodeParams(e,s);const o=this.omit(s,this.extractParams(e));return Object.keys(o).length&&(n+="?"+this.urlencode(o)),"private"===t&&(this.checkRequiredCredentials(),r={Authorization:"Basic "+this.stringToBase64(this.apiKey+":"+this.secret)}),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&void 0!==this.safeValue(o,"error"))throw new r.ExchangeError(this.id+" "+this.json(o))}}},3803:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(8850),r=i(6689),a=i(2194),n=i(9292);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"lykke",name:"Lykke",countries:["UK"],version:"2",rateLimit:200,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:"emulated",fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!1,fetchOrderTrades:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!0,fetchWithdrawals:!1,setLeverage:!1,setMarginMode:!1,withdraw:!0},requiredCredentials:{apiKey:!0,secret:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/155840500-1ea4fdf0-47c0-4daa-9597-c6c1cd51b9ec.jpg",api:{public:"https://hft-apiv2.lykke.com/api",private:"https://hft-apiv2.lykke.com/api"},www:"https://www.lykke.com",doc:["https://hft-apiv2.lykke.com/swagger/ui/index.html","https://lykkecity.github.io/Trading-API"],fees:"https://support.lykke.com/hc/en-us/articles/115002141125-What-are-the-fees-and-charges-"},api:{public:{get:{assetpairs:2.5,"assetpairs/{id}":2.5,assets:2.5,"assets/{id}":2.5,isalive:2.5,orderbooks:2.5,tickers:2.5,prices:2.5,"trades/public/{assetPairId}":2.5}},private:{get:{balance:2.5,trades:2.5,"trades/order/{orderId}":2.5,"orders/active":1,"orders/closed":1,"orders/{orderId}":1,operations:2.5,"operations/deposits/addresses":2.5,"operations/deposits/addresses/{assetId}":2.5},post:{"orders/limit":1,"orders/market":1,"orders/bulk":1,"operations/withdrawals":2.5,"operations/deposits/addresses":2.5},delete:{orders:1,"orders/{orderId}":1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:0,taker:0}},precisionMode:n.sh,exceptions:{exact:{1001:r.ExchangeError,1100:r.ExchangeError,1101:r.ExchangeError,2e3:r.BadRequest,2001:r.InsufficientFunds,2202:r.DuplicateOrderId,2003:r.ExchangeError,2004:r.NotSupported,2005:r.ExchangeError,2006:r.InsufficientFunds,2007:r.InsufficientFunds,2008:r.InsufficientFunds,2009:r.ExchangeError,2010:r.InsufficientFunds,2011:r.InvalidOrder,2012:r.InvalidOrder,2013:r.InvalidOrder,2014:r.InvalidOrder,2015:r.InvalidOrder,2016:r.InvalidOrder,2017:r.InvalidOrder,2018:r.InvalidOrder,2019:r.InvalidOrder,2020:r.InvalidOrder,2021:r.InvalidOrder,2022:r.InvalidOrder,2023:r.ExchangeError},broad:{}},commonCurrencies:{}})}async fetchCurrencies(e={}){const t=await this.publicGetAssets(e),i=this.safeValue(t,"payload",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"assetId"),a=this.safeString(t,"symbol"),n=this.safeString(t,"name"),o=this.safeString(t,"type"),d=this.safeValue(t,"blockchainDepositEnabled"),c=this.safeValue(t,"blockchainWithdrawal"),h=!this.safeValue(t,"isDisabled");s[a]={id:r,code:a,info:t,type:o,name:n,active:h,deposit:d,withdraw:c,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"accuracy"))),limits:{withdraw:{min:this.safeValue(t,"cashoutMinimalAmount"),max:void 0},amount:{min:this.safeValue(t,"lowVolumeAmount"),max:void 0}}}}return s}async fetchMarkets(e={}){const t=await this.publicGetAssetpairs(e),i=this.safeValue(t,"payload",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"assetPairId"),a=this.safeString(t,"name"),n=this.safeString(t,"baseAssetId"),o=this.safeString(t,"quoteAssetId"),[d,c]=a.split("/"),h=this.safeCurrencyCode(d),u=this.safeCurrencyCode(c),l=h+"/"+u;s.push({id:r,symbol:l,base:h,quote:u,baseId:n,quoteId:o,settle:void 0,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,contract:!1,active:!0,info:t,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetAccuracy"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"priceAccuracy")))},limits:{amount:{min:this.safeNumber(t,"minVolume"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minOppositeVolume"),max:void 0},leverage:{min:void 0,max:void 0}}})}return s}parseTicker(e,t=undefined){const i=void 0,s=this.safeString(e,"assetPairId");t=this.safeMarket(s,t);const r=this.safeString(e,"lastPrice");return this.safeTicker({symbol:this.safeString(t,"symbol"),timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:this.safeString(e,"priceChange"),percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volumeBase"),quoteVolume:this.safeString(e,"volumeQuote"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={assetPairIds:i.id},r=this.safeString(this.options,"fetchTickerMethod","publicGetTickers"),a=await this[r](this.extend(s,t)),n=this.safeValue(a,"payload",[]);return this.parseTicker(this.safeValue(n,0,{}),i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTickers(t),s=this.safeValue(i,"payload",[]);return this.parseTickers(s,e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={assetPairId:s.id};void 0!==t&&(r.depth=t);const a=await this.publicGetOrderbooks(this.extend(r,i)),n=this.safeValue(a,"payload",[]),o=this.safeValue(n,0,{}),d=this.safeInteger(o,"timestamp");return this.parseOrderBook(o,s.symbol,d,"bids","asks","p","v")}parseTrade(e,t=undefined){const i=this.safeString(e,"assetPairId"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString2(e,"id","id"),a=this.safeString(e,"orderId"),n=this.safeInteger(e,"timestamp"),o=this.safeString2(e,"price","price");let d=this.safeString2(e,"volume","amount");void 0===d&&(d=this.safeString2(e,"baseVolume","amount"));const c=this.safeStringLower(e,"side");return this.safeTrade({id:r,info:e,timestamp:n,datetime:this.iso8601(n),symbol:s,type:void 0,order:a,side:c,takerOrMaker:void 0,price:o,amount:d,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={assetPairId:r.id};void 0!==i&&(a.take=i);const n=await this.publicGetTradesPublicAssetPairId(this.extend(a,s)),o=this.safeValue(n,"payload",[]);return this.parseTrades(o,r,t,i)}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"assetId"),a=this.safeCurrencyCode(r),n=this.account(),o=this.safeString(s,"available"),d=this.safeString(s,"reserved");n.free=o,n.used=d,t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e),i=this.safeValue(t,"payload",[]);return this.parseBalance(i)}parseOrderStatus(e){return this.safeString({Open:"open",Pending:"open",InOrderBook:"open",Processing:"open",Matched:"closed",Cancelled:"canceled",Rejected:"rejected",Replaced:"canceled",Placed:"open"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.parseOrderStatus(this.safeString(e,"status")),r=this.safeString(e,"assetPairId"),a=this.safeSymbol(r,t),n=this.safeStringLower(e,"type"),o=this.safeInteger(e,"lastTradeTimestamp"),d=this.safeInteger(e,"timestamp"),c=this.safeString(e,"price"),h=this.safeStringLower(e,"side"),u=this.safeString(e,"volume"),l=this.safeString(e,"remainingVolume"),p=this.safeString(e,"filledVolume"),f=this.safeString(e,"cost");return this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:o,symbol:a,type:n,timeInForce:void 0,postOnly:void 0,side:h,price:c,stopPrice:void 0,triggerPrice:void 0,amount:u,cost:f,average:void 0,filled:p,remaining:l,status:s,fee:void 0,trades:void 0},t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={assetPairId:n.id,side:this.capitalize(i),volume:parseFloat(this.amountToPrecision(n.symbol,s))};"limit"===t&&(o.price=parseFloat(this.priceToPrecision(n.symbol,r)));const d="privatePostOrders"+this.capitalize(t),c=await this[d](this.extend(o,a)),h=this.safeValue(c,"payload"),u=this.safeString(h,"orderId");return"market"===t&&(r=this.safeNumber(h,"price")),{id:u,info:c,clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:n.symbol,type:t,side:i,price:r,amount:s,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0}}async cancelOrder(e,t=undefined,i={}){const s={orderId:e};return await this.privateDeleteOrdersOrderId(this.extend(s,i))}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s;return void 0!==e&&(s=this.market(e),i.assetPairId=s.id),await this.privateDeleteOrders(this.extend(i,t))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderId:e},r=await this.privateGetOrdersOrderId(this.extend(s,i)),a=this.safeValue(r,"payload");return this.parseOrder(a)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={};void 0!==i&&(a.take=i);const n=await this.privateGetOrdersActive(this.extend(a,s)),o=this.safeValue(n,"payload");return this.parseOrders(o,r,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={};void 0!==i&&(a.take=i);const n=await this.privateGetOrdersClosed(this.extend(a,s)),o=this.safeValue(n,"payload");return this.parseOrders(o,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==i&&(r.take=i),void 0!==e&&(a=this.market(e),r.assetPairId=a.id),void 0!==t&&(r.from=t);const n=await this.privateGetTrades(this.extend(r,s)),o=this.safeValue(n,"payload");return this.parseTrades(o,a,t,i)}parseBidAsk(e,t=0,i=1){const s=this.safeString(e,t),r=a.O.stringAbs(this.safeString(e,i));return[this.parseNumber(s),this.parseNumber(r)]}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={assetId:this.safeString(i,"id")},r=await this.privateGetOperationsDepositsAddressesAssetId(this.extend(s,t)),a=this.safeString(r,"baseAddress"),n=this.safeString(r,"addressExtension");return this.checkAddress(a),{currency:e,address:a,tag:n,network:void 0,info:r}}parseTransaction(e,t=undefined){let i,s,r,a,n,o,d;return"string"==typeof e?i=e:(i=this.safeString(e,"operationId"),s=this.safeString(e,"assetId"),r=this.safeCurrencyCode(s,t),a=this.safeNumber(e,"totalVolume"),o=this.safeString(e,"type"),d=this.safeInteger(e,"timestamp"),n={currency:r,cost:this.safeNumber(e,"fee")}),{info:e,id:i,txid:void 0,timestamp:d,datetime:this.iso8601(d),network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,type:o,amount:a,currency:r,status:void 0,updated:void 0,fee:n}}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==i&&(r.take=i);const a=await this.privateGetOperations(this.extend(r,s)),n=this.safeValue(a,"payload",[]);let o;return void 0!==e&&(o=this.currency(e)),this.parseTransactions(n,o,t,i)}async withdraw(e,t,i,s=undefined,r={}){await this.loadMarkets(),this.checkAddress(i);const a=this.currency(e),n={assetId:a.id,volume:parseFloat(this.currencyToPrecision(e,t)),destinationAddress:i};void 0!==s&&(n.destinationAddressExtension=s);const o=await this.privatePostOperationsWithdrawals(this.extend(n,r));return this.parseTransaction(o,a)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t]+"/"+this.implodeParams(e,s);const o=this.omit(s,this.extractParams(e));return r={Accept:"application/json","Content-Type":"application/json"},"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):"private"===t&&("GET"!==i&&"DELETE"!==i||Object.keys(o).length&&(n+="?"+this.urlencode(o)),this.checkRequiredCredentials(),r.Authorization="Bearer "+this.apiKey,"POST"===i&&Object.keys(s).length&&(a=this.json(s)),"operations/withdrawals"===e&&(r["X-Request-ID"]=this.uuid())),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeValue(o,"error",{}),u=this.safeString(h,"code");if(void 0!==u&&"0"!==u){const e=this.id+" "+n,t=this.safeString(h,"message");throw this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,t,e),new r.ExchangeError(e)}}}},9013:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(2874),r=i(6689),a=i(9292),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"mercado",name:"Mercado Bitcoin",countries:["BR"],rateLimit:1e3,version:"v3",has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:"emulated",fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},timeframes:{"15m":"15m","1h":"1h","3h":"3h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27837060-e7c58714-60ea-11e7-9192-f05e86adb83f.jpg",api:{public:"https://www.mercadobitcoin.net/api",private:"https://www.mercadobitcoin.net/tapi",v4Public:"https://www.mercadobitcoin.com.br/v4",v4PublicNet:"https://api.mercadobitcoin.net/api/v4"},www:"https://www.mercadobitcoin.com.br",doc:["https://www.mercadobitcoin.com.br/api-doc","https://www.mercadobitcoin.com.br/trade-api"]},api:{public:{get:["coins","{coin}/orderbook/","{coin}/ticker/","{coin}/trades/","{coin}/trades/{from}/","{coin}/trades/{from}/{to}","{coin}/day-summary/{year}/{month}/{day}/"]},private:{post:["cancel_order","get_account_info","get_order","get_withdrawal","list_system_messages","list_orders","list_orderbook","place_buy_order","place_sell_order","place_market_buy_order","place_market_sell_order","withdraw_coin"]},v4Public:{get:["{coin}/candle/"]},v4PublicNet:{get:["candles"]}},fees:{trading:{maker:.003,taker:.007}},options:{limits:{BTC:.001,BCH:.001,ETH:.01,LTC:.01,XRP:.1}},precisionMode:a.sh})}async fetchMarkets(e={}){const t=await this.publicGetCoins(e),i=[],s=this.safeValue(this.options,"limits",{});for(let e=0;e<t.length;e++){const r=t[e],a=r,n="BRL",o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=d+o;i.push({id:c,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber("1e-5")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,a),max:void 0},price:{min:this.parseNumber("1e-5"),max:void 0},cost:{min:void 0,max:void 0}},info:r})}return i}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={coin:s.base},a=await this.publicGetCoinOrderbook(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"date"),r=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={coin:i.base},r=await this.publicGetCoinTicker(this.extend(s,t)),a=this.safeValue(r,"ticker",{});return this.parseTicker(a,i)}parseTrade(e,t=undefined){const i=this.safeTimestamp2(e,"date","executed_timestamp");t=this.safeMarket(void 0,t);const s=this.safeString2(e,"tid","operation_id"),r=this.safeString(e,"type"),a=this.safeString(e,"price"),n=this.safeString2(e,"amount","quantity"),o=this.safeString(e,"fee_rate");let d;return void 0!==o&&(d={cost:o,currency:void 0}),this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:void 0,type:void 0,side:r,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:d},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);let a="publicGetCoinTrades";const n={coin:r.base};void 0!==t&&(a+="From",n.from=this.parseToInt(t/1e3)),void 0!==this.safeInteger(s,"to")&&(a+="To");const o=await this[a](this.extend(n,s));return this.parseTrades(o,r,t,i)}parseBalance(e){const t=this.safeValue(e,"response_data",{}),i=this.safeValue(t,"balance",{}),s={info:e},r=Object.keys(i);for(let e=0;e<r.length;e++){const t=r[e],a=this.safeCurrencyCode(t);if(t in i){const e=this.safeValue(i,t,{}),r=this.account();r.free=this.safeString(e,"available"),r.total=this.safeString(e,"total"),s[a]=r}}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetAccountInfo(e);return this.parseBalance(t)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d={coin_pair:o.id};let c=this.capitalize(i)+"Order";if("limit"===t)c="privatePostPlace"+c,d.limit_price=this.priceToPrecision(o.symbol,a),d.quantity=this.amountToPrecision(o.symbol,s);else if(c="privatePostPlaceMarket"+c,"buy"===i){if(void 0===a)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount");d.cost=this.priceToPrecision(o.symbol,s*a)}else d.quantity=this.amountToPrecision(o.symbol,s);const h=await this[c](this.extend(d,n));return this.safeOrder({info:h,id:h.response_data.order.order_id.toString()},o)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={coin_pair:s.id,order_id:e},n=await this.privatePostCancelOrder(this.extend(a,i)),o=this.safeValue(n,"response_data",{}),d=this.safeValue(o,"order",{});return this.parseOrder(d,s)}parseOrderStatus(e){return this.safeString({2:"open",3:"canceled",4:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"order_id"),s=this.safeString(e,"order_type");let r;"order_type"in e&&(r="1"===s?"buy":"sell");const a=this.parseOrderStatus(this.safeString(e,"status")),n=this.safeString(e,"coin_pair");t=this.safeMarket(n,t);const o=this.safeTimestamp(e,"created_timestamp"),d={cost:this.safeString(e,"fee"),currency:t.quote},c=this.safeString(e,"limit_price"),h=this.safeString(e,"executed_price_avg"),u=this.safeString(e,"quantity"),l=this.safeString(e,"executed_quantity"),p=this.safeTimestamp(e,"updated_timestamp"),f=this.safeValue(e,"operations",[]);return this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:p,symbol:t.symbol,type:"limit",timeInForce:void 0,postOnly:void 0,side:r,price:c,stopPrice:void 0,triggerPrice:void 0,cost:void 0,average:h,amount:u,filled:l,remaining:void 0,status:a,fee:d,trades:f},t)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={coin_pair:s.id,order_id:parseInt(e)},n=await this.privatePostGetOrder(this.extend(a,i)),o=this.safeValue(n,"response_data",{}),d=this.safeValue(o,"order");return this.parseOrder(d,s)}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e),o={coin:n.id,quantity:t.toFixed(10),address:i};if("BRL"===e){if(!("account_ref"in a))throw new r.ArgumentsRequired(this.id+" withdraw() requires account_ref parameter to withdraw "+e)}else if("LTC"!==e){if(!("tx_fee"in a))throw new r.ArgumentsRequired(this.id+" withdraw() requires tx_fee parameter to withdraw "+e);if("XRP"===e)if(void 0===s){if(!("destination_tag"in a))throw new r.ArgumentsRequired(this.id+" withdraw() requires a tag argument or destination_tag parameter to withdraw "+e)}else o.destination_tag=s}const d=await this.privatePostWithdrawCoin(this.extend(o,a)),c=this.safeValue(d,"response_data",{}),h=this.safeValue(c,"withdrawal");return this.parseTransaction(h,n)}parseTransaction(e,t=undefined){return t=this.safeCurrency(void 0,t),{id:this.safeString(e,"id"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="15m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={resolution:this.safeString(this.timeframes,t,t),symbol:a.base+"-"+a.quote};void 0===s&&(s=100),void 0!==i?(n.from=this.parseToInt(i/1e3),n.to=this.sum(n.from,s*this.parseTimeframe(t))):(n.to=this.seconds(),n.from=n.to-s*this.parseTimeframe(t));const o=await this.v4PublicNetGetCandles(this.extend(n,r)),d=this.convertTradingViewToOHLCV(o,"t","o","h","l","c","v");return this.parseOHLCVs(d,a,t,i,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={coin_pair:a.id},o=await this.privatePostListOrders(this.extend(n,s)),d=this.safeValue(o,"response_data",{}),c=this.safeValue(d,"orders",[]);return this.parseOrders(c,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={coin_pair:a.id,status_list:"[2]"},o=await this.privatePostListOrders(this.extend(n,s)),d=this.safeValue(o,"response_data",{}),c=this.safeValue(d,"orders",[]);return this.parseOrders(c,a,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={coin_pair:a.id,has_fills:!0},o=await this.privatePostListOrders(this.extend(n,s)),d=this.safeValue(o,"response_data",{}),c=this.safeValue(d,"orders",[]),h=this.parseOrders(c,a,t,i),u=this.ordersToTrades(h);return this.filterBySymbolSinceLimit(u,a.symbol,t,i)}ordersToTrades(e){const t=[];for(let i=0;i<e.length;i++){const s=this.safeValue(e[i],"trades",[]);for(let e=0;e<s.length;e++)t.push(s[e])}return t}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let o=this.urls.api[t]+"/";const d=this.omit(s,this.extractParams(e));if("public"===t||"v4Public"===t||"v4PublicNet"===t)o+=this.implodeParams(e,s),Object.keys(d).length&&(o+="?"+this.urlencode(d));else{this.checkRequiredCredentials(),o+=this.version+"/";const t=this.nonce();a=this.urlencode(this.extend({tapi_method:e,tapi_nonce:t},s));const i="/tapi/"+this.version+"/?"+a;r={"Content-Type":"application/x-www-form-urlencoded","TAPI-ID":this.apiKey,"TAPI-MAC":this.hmac(this.encode(i),this.encode(this.secret),n.o)}}return{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&void 0!==this.safeValue(o,"error_message"))throw new r.ExchangeError(this.id+" "+this.json(o))}}},6641:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(8240),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"mexc",name:"MEXC Global",countries:["SC"],rateLimit:50,version:"v2",certified:!0,pro:!0,has:{CORS:void 0,spot:!0,margin:void 0,swap:!0,future:!1,option:!1,addMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!1,createStopOrder:!0,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!0,fetchLeverage:void 0,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!0,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransfer:!0,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/137283979-8b2a818d-8633-461b-bfca-de89e8c446b2.jpg",api:{spot:{public:"https://www.mexc.com/open/api/v2",private:"https://www.mexc.com/open/api/v2"},contract:{public:"https://contract.mexc.com/api/v1/contract",private:"https://contract.mexc.com/api/v1/private"}},www:"https://www.mexc.com/",doc:["https://mxcdevelop.github.io/APIDoc/"],fees:["https://www.mexc.com/fee"],referral:"https://m.mexc.com/auth/signup?inviteCode=1FQ1G"},api:{contract:{public:{get:{ping:2,detail:2,support_currencies:2,"depth/{symbol}":2,"depth_commits/{symbol}/{limit}":2,"index_price/{symbol}":2,"fair_price/{symbol}":2,"funding_rate/{symbol}":2,"kline/{symbol}":2,"kline/index_price/{symbol}":2,"kline/fair_price/{symbol}":2,"deals/{symbol}":2,ticker:2,risk_reverse:2,"risk_reverse/history":2,"funding_rate/history":2}},private:{get:{"account/assets":2,"account/asset/{currency}":2,"account/transfer_record":2,"position/list/history_positions":2,"position/open_positions":2,"position/funding_records":2,"position/position_mode":2,"order/list/open_orders/{symbol}":2,"order/list/history_orders":2,"order/external/{symbol}/{external_oid}":2,"order/get/{order_id}":2,"order/batch_query":8,"order/deal_details/{order_id}":2,"order/list/order_deals":2,"planorder/list/orders":2,"stoporder/list/orders":2,"stoporder/order_details/{stop_order_id}":2,"account/risk_limit":2,"account/tiered_fee_rate":2},post:{"position/change_margin":2,"position/change_leverage":2,"position/change_position_mode":2,"order/submit":2,"order/submit_batch":40,"order/cancel":2,"order/cancel_with_external":2,"order/cancel_all":2,"account/change_risk_level":2,"planorder/place":2,"planorder/cancel":2,"planorder/cancel_all":2,"stoporder/cancel":2,"stoporder/cancel_all":2,"stoporder/change_price":2,"stoporder/change_plan_price":2}}},spot:{public:{get:{"market/symbols":1,"market/coin/list":2,"common/timestamp":1,"common/ping":1,"market/ticker":1,"market/depth":1,"market/deals":1,"market/kline":1,"market/api_default_symbols":2}},private:{get:{"account/info":1,"order/open_orders":1,"order/list":1,"order/query":1,"order/deals":1,"order/deal_detail":1,"asset/deposit/address/list":2,"asset/deposit/list":2,"asset/address/list":2,"asset/withdraw/list":2,"asset/internal/transfer/record":10,"account/balance":10,"asset/internal/transfer/info":10,"market/api_symbols":2},post:{"order/place":1,"order/place_batch":1,"asset/withdraw":2,"asset/internal/transfer":10},delete:{"order/cancel":1,"order/cancel_by_symbol":1,"asset/withdraw":2}}}},precisionMode:n.sh,fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},options:{timeframes:{spot:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","1d":"1d","1M":"1M"},contract:{"1m":"Min1","5m":"Min5","15m":"Min15","30m":"Min30","1h":"Min60","4h":"Hour4","8h":"Hour8","1d":"Day1","1w":"Week1","1M":"Month1"}},defaultType:"spot",networks:{TRX:"TRC20",ETH:"ERC20",BEP20:"BEP20(BSC)",BSC:"BEP20(BSC)"},accountsByType:{spot:"MAIN",swap:"CONTRACT"},transfer:{accountsById:{MAIN:"spot",CONTRACT:"swap"},status:{SUCCESS:"ok",FAILED:"failed",WAIT:"pending"}},fetchOrdersByState:{method:"spotPrivateGetOrderList"},cancelOrder:{method:"spotPrivateDeleteOrderCancel"},broker:"CCXT"},commonCurrencies:{BEYONDPROTOCOL:"BEYOND",BIFI:"BIFIF",BYN:"BeyondFi",COFI:"COFIX",DFI:"DfiStarter",DFT:"dFuture",DRK:"DRK",EGC:"Egoras Credit",FLUX1:"FLUX",FLUX:"FLUX1",FREE:"FreeRossDAO",GAS:"GASDAO",GASNEO:"GAS",GMT:"GMT Token",HERO:"Step Hero",MIMO:"Mimosa",PROS:"Pros.Finance",SIN:"Sin City Token",SOUL:"Soul Swap",STEPN:"GMT"},exceptions:{exact:{400:r.BadRequest,401:r.AuthenticationError,402:r.AuthenticationError,403:r.PermissionDenied,429:r.RateLimitExceeded,703:r.PermissionDenied,1e3:r.AccountNotEnabled,1002:r.InvalidOrder,10072:r.AuthenticationError,10073:r.AuthenticationError,10075:r.PermissionDenied,10101:r.InsufficientFunds,10216:r.InvalidAddress,10232:r.BadSymbol,3e4:r.BadSymbol,30001:r.InvalidOrder,30002:r.InvalidOrder,30003:r.InvalidOrder,30004:r.InsufficientFunds,30005:r.InvalidOrder,30010:r.InvalidOrder,30014:r.BadSymbol,30016:r.BadSymbol,30019:r.InvalidOrder,30020:r.BadSymbol,30021:r.BadSymbol,33333:r.BadSymbol},broad:{"price and quantity must be positive":r.InvalidOrder}}})}async fetchTime(e={}){const[t,i]=this.handleMarketTypeAndParams("fetchTime",void 0,e),s=this.getSupportedMapping(t,{spot:"spotPublicGetCommonTimestamp",swap:"contractPublicGetPing"}),r=await this[s](this.extend(i));return this.safeInteger(r,"data")}async fetchStatus(e={}){const t=await this.spotPublicGetCommonPing(e);return{status:200===this.safeInteger(t,"code")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchCurrencies(e={}){const t=await this.spotPublicGetMarketCoinList(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),n=this.safeCurrencyCode(r),o=this.safeString(t,"full_name");let d,c,h,u,l=!1;const p={},f=this.safeValue(t,"coins",[]);let m=!1,v=!1;for(let e=0;e<f.length;e++){const t=f[e],i=this.safeString(t,"chain"),s=this.safeNetwork(i),r=this.safeValue(t,"is_deposit_enabled",!1),n=this.safeValue(t,"is_withdraw_enabled",!1),o=r&&n;l=o||l;const c=this.safeString(t,"withdraw_limit_min"),g=this.safeString(t,"withdraw_limit_max");h=void 0===h?c:h,u=void 0===u?g:u,a.O.stringGt(h,c)&&(h=c),a.O.stringLt(u,g)&&(u=g),r&&(m=!0),n&&(v=!0);const y=this.parsePrecision(this.safeString(t,"precision"));void 0!==y&&(d=void 0===d?y:a.O.stringMin(y,d)),p[s]={info:t,id:i,network:s,active:o,deposit:r,withdraw:n,fee:this.safeNumber(t,"fee"),precision:this.parseNumber(d),limits:{withdraw:{min:c,max:g}}}}const g=Object.keys(p).length;if(1===g||"NONE"in p){const e=this.safeValue2(p,"NONE",g-1);void 0!==e&&(c=e.fee)}s[n]={id:r,code:n,info:t,name:o,active:l,deposit:m,withdraw:v,fee:c,precision:this.parseNumber(d),limits:{amount:{min:void 0,max:void 0},withdraw:{min:h,max:u}},networks:p}}return s}async fetchMarkets(e={}){const t=this.safeString2(this.options,"fetchMarkets","defaultType","spot"),i=this.safeString(e,"type",t),s=this.omit(e,"type"),a="spot"===i,n="swap"===i;if(!a&&!n)throw new r.ExchangeError(this.id+" does not support '"+i+"' type, set exchange.options['defaultType'] to 'spot' or 'swap''");return a?await this.fetchSpotMarkets(s):n?await this.fetchContractMarkets(s):void 0}async fetchContractMarkets(e={}){const t=await this.contractPublicGetDetail(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseCoin"),n=this.safeString(t,"quoteCoin"),o=this.safeString(t,"settleCoin"),d=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),u=this.safeString(t,"state");s.push({id:r,symbol:d+"/"+c+":"+h,base:d,quote:c,settle:h,baseId:a,quoteId:n,settleId:o,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"0"===u,contract:!0,linear:!0,inverse:!1,taker:this.safeNumber(t,"takerFeeRate"),maker:this.safeNumber(t,"makerFeeRate"),contractSize:this.safeNumber(t,"contractSize"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"volUnit"),price:this.safeNumber(t,"priceUnit")},limits:{leverage:{min:this.safeNumber(t,"minLeverage"),max:this.safeNumber(t,"maxLeverage")},amount:{min:this.safeNumber(t,"minVol"),max:this.safeNumber(t,"maxVol")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}async fetchSpotMarkets(e={}){const t=await this.spotPublicGetMarketSymbols(e),i=this.safeValue(t,"data",[]),s=await this.spotPublicGetMarketApiDefaultSymbols(e),r=this.safeValue(s,"data",{}),a=this.safeValue(r,"symbol",[]),n=[];for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"symbol"),[r,o]=s.split("_"),d=this.safeCurrencyCode(r),c=this.safeCurrencyCode(o),h=this.safeString(t,"state");let u=!1;for(let e=0;e<a.length;e++)if(a[e]===s){"ENABLED"===h&&(u=!0);break}n.push({id:s,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:r,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:u,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(t,"taker_fee_rate"),maker:this.safeNumber(t,"maker_fee_rate"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantity_scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_amount"),max:this.safeNumber(t,"max_amount")}},info:t})}return n}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.safeString(e,0);let s;void 0!==i&&(s=this.market(i));const[r,a]=this.handleMarketTypeAndParams("fetchTickers",s,t),n=this.getSupportedMapping(r,{spot:"spotPublicGetMarketTicker",swap:"contractPublicGetTicker"}),o=await this[n](this.extend(a)),d=this.safeValue(o,"data",[]);return this.parseTickers(d,e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id};let r;i.spot?r="spotPublicGetMarketTicker":i.swap&&(r="contractPublicGetTicker");const a=await this[r](this.extend(s,t));if(i.spot){const e=this.safeValue(a,"data",[]),t=this.safeValue(e,0);return this.parseTicker(t,i)}if(i.swap){const e=this.safeValue(a,"data",{});return this.parseTicker(e,i)}}parseTicker(e,t=undefined){const i=this.safeInteger2(e,"time","timestamp"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t,"_"),n=this.safeString2(e,"volume","volume24"),o=this.safeString(e,"amount24"),d=this.safeString(e,"open"),c=this.safeString2(e,"last","lastPrice"),h=this.safeString(e,"riseFallValue"),u=this.safeString(e,"riseFallRate"),l=a.O.stringAdd(u,"1");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString2(e,"high","high24Price"),low:this.safeString2(e,"low","lower24Price"),bid:this.safeString2(e,"bid","bid1"),bidVolume:void 0,ask:this.safeString2(e,"ask","ask1"),askVolume:void 0,vwap:void 0,open:d,close:c,last:c,previousClose:void 0,change:h,percentage:l,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};let a;s.spot?(a="spotPublicGetMarketDepth",void 0===t&&(t=100),r.depth=t):s.swap&&(a="contractPublicGetDepthSymbol",void 0!==t&&(r.limit=t));const n=await this[a](this.extend(r,i)),o=this.safeValue(n,"data",{}),d=s.spot?"price":0,c=s.spot?"quantity":1,h=this.safeInteger(o,"timestamp"),u=this.parseOrderBook(o,e,h,"bids","asks",d,c);return u.nonce=this.safeInteger(o,"version"),u}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};let n;void 0!==i&&(a.limit=i),r.spot?n="spotPublicGetMarketDeals":r.swap&&(n="contractPublicGetDealsSymbol");const o=await this[n](this.extend(a,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,r,t,i)}parseTrade(e,t=undefined){let i=this.safeInteger2(e,"create_time","trade_time");i=this.safeInteger(e,"t",i);const s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t,"_")).symbol;let a=this.safeString2(e,"price","trade_price");a=this.safeString(e,"p",a);let n=this.safeString2(e,"quantity","trade_quantity");n=this.safeString(e,"v",n);const o=this.safeString(e,"amount");let d=this.safeString2(e,"trade_type","T");"BID"===d||"1"===d?d="buy":"ASK"!==d&&"2"!==d||(d="sell");let c=this.safeString2(e,"id","trade_time");void 0===c&&(c=this.safeString(e,"t",c),void 0!==c&&(c+="-"+t.id+"-"+n));const h=this.safeString(e,"fee");let u;if(void 0!==h){const t=this.safeString(e,"fee_currency");u={cost:h,currency:this.safeCurrencyCode(t)}}const l=this.safeString(e,"order_id"),p=this.safeValue(e,"is_taker",!0)?"taker":"maker";return this.safeTrade({info:e,id:c,order:l,timestamp:i,datetime:this.iso8601(i),symbol:r,type:void 0,side:d,takerOrMaker:p,price:a,amount:n,cost:o,fee:u},t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.spotPublicGetMarketSymbols(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeMarket(r,void 0,"_").symbol;s[a]={info:t,symbol:a,maker:this.safeNumber(t,"maker_fee_rate"),taker:this.safeNumber(t,"taker_fee_rate"),percentage:!0,tierBased:!1}}return s}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=this.safeValue(this.options,"timeframes",{}),d=this.safeValue(o,n.type,{}),c=this.safeString(d,t);if(void 0===c)throw new r.NotSupported(this.id+" fetchOHLCV() does not support "+t+" timeframe for "+n.type+" markets");const h={symbol:n.id,interval:c};let u;n.spot?(u="spotPublicGetMarketKline",void 0!==i&&(h.start_time=this.parseToInt(i/1e3)),void 0!==s&&(h.limit=s)):n.swap&&(u="contractPublicGetKlineSymbol",void 0!==i&&(h.start=this.parseToInt(i/1e3)));const l=await this[u](this.extend(h,a));if(n.spot){const e=this.safeValue(l,"data",[]);return this.parseOHLCVs(e,n,t,i,s)}if(n.swap){const e=this.safeValue(l,"data",{}),r=this.convertTradingViewToOHLCV(e,"time","open","high","low","close","vol");return this.parseOHLCVs(r,n,t,i,s)}}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,t.spot?3:2),this.safeNumber(e,t.spot?4:3),this.safeNumber(e,t.spot?2:4),this.safeNumber(e,5)]}async fetchBalance(e={}){await this.loadMarkets();const[t,i]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),s=this.getSupportedMapping(t,{spot:"spotPrivateGetAccountInfo",margin:"spotPrivateGetAccountInfo",swap:"contractPrivateGetAccountAssets"}),r="spot"===t,a=await this[s](i),n=this.safeValue(a,"data",{}),o=this.milliseconds(),d={info:a,timestamp:o,datetime:this.iso8601(o)};if(r){const e=Object.keys(n);for(let t=0;t<e.length;t++){const i=e[t],s=this.safeCurrencyCode(i),r=this.safeValue(n,i,{}),a=this.account();a.free=this.safeString(r,"available"),a.used=this.safeString(r,"frozen"),d[s]=a}}else for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"currency"),s=this.safeCurrencyCode(i),r=this.account();r.free=this.safeString(t,"availableBalance"),r.used=this.safeString(t,"frozenBalance"),d[s]=r}return this.safeBalance(d)}safeNetwork(e){if(e.indexOf("BSC")>=0)return"BEP20";const t=e.split(" ");return e=(e=t.join("")).replace("-20","20"),this.safeString({ETH:"ETH",ERC20:"ERC20","BEP20(BSC)":"BEP20",TRX:"TRC20"},e,e)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeCurrencyCode(void 0,t),r=this.safeString(e,"chain"),a=this.safeNetwork(r);return this.checkAddress(i),{currency:s,address:i,tag:void 0,network:a,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.spotPrivateGetAssetDepositAddressList(this.extend(s,t)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"chains",[]),o=[];for(let e=0;e<n.length;e++){const t=this.parseDepositAddress(n[e],i);o.push(t)}return this.indexBy(o,"network")}async fetchDepositAddress(e,t={}){const i=this.safeStringUpper(t,"network");t=this.omit(t,"network");const s=await this.fetchDepositAddressesByNetwork(e,t),a=this.safeValue(this.options,"networks",{}),n=this.safeString(a,i,i);let o;if(void 0===n){if(o=this.safeValue(s,e),void 0===o){const t=this.safeString(a,e,e);if(o=this.safeValue(s,t),void 0===o){const t=this.safeString(this.options,"defaultNetwork","ERC20");if(o=this.safeValue(s,t),void 0===o){const t=Object.values(s);if(o=this.safeValue(t,0),void 0===o)throw new r.InvalidAddress(this.id+" fetchDepositAddress() cannot find deposit address for "+e)}}}return o}if(o=this.safeValue(s,i),void 0===o)throw new r.InvalidAddress(this.id+" fetchDepositAddress() cannot find "+n+" deposit address for "+e);return o}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.start_time=t),void 0!==i&&(r.limit=i);const n=await this.spotPrivateGetAssetDepositList(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"result_list",[]);return this.parseTransactions(d,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==t&&(r.start_time=t),void 0!==i&&(r.limit=i);const n=await this.spotPrivateGetAssetWithdrawList(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"result_list",[]);return this.parseTransactions(d,a,t,i)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=void 0===i?"deposit":"withdrawal",r=this.parse8601(this.safeString(e,"create_time")),n=this.parse8601(this.safeString(e,"update_time"));let o,d=this.safeString(e,"currency");if(void 0!==d&&d.indexOf("-")>=0){const e=d.split("-");d=this.safeString(e,0);const t=this.safeString(e,1);o=this.safeNetwork(t)}const c=this.safeCurrencyCode(d,t),h=this.parseTransactionStatus(this.safeString(e,"state"));let u=this.safeString(e,"amount");const l=this.safeString(e,"address"),p=this.safeString(e,"tx_id");let f;const m=this.safeString(e,"fee");return void 0!==m&&(f={cost:this.parseNumber(m),currency:c}),"withdrawal"===s&&(u=a.O.stringSub(u,m)),{info:e,id:i,txid:p,timestamp:r,datetime:this.iso8601(r),network:o,address:l,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,type:s,amount:this.parseNumber(u),currency:c,status:h,updated:n,fee:f}}parseTransactionStatus(e){return this.safeString({WAIT:"pending",WAIT_PACKAGING:"pending",SUCCESS:"ok"},e,e)}async fetchPosition(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.fetchPositions(this.extend(s,t)),a=this.safeValue(r,0);return this.parsePosition(a,i)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.contractPrivateGetPositionOpenPositions(t),s=this.safeValue(i,"data",[]);return this.parsePositions(s,e)}parsePosition(e,t=undefined){const i=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,s=this.safeString(e,"holdVol"),r=this.safeNumber(e,"openAvgPrice"),a=this.safeString(e,"im"),n="1"===this.safeString(e,"positionType")?"long":"short",o="1"===this.safeString(e,"margin_mode")?"isolated":"cross",d=this.safeString(e,"leverage"),c=this.safeNumber(e,"liquidatePrice"),h=this.safeNumber(e,"updateTime");return{info:e,symbol:i,contracts:this.parseNumber(s),contractSize:void 0,entryPrice:r,collateral:void 0,side:n,unrealizedProfit:void 0,leverage:this.parseNumber(d),percentage:void 0,marginMode:o,notional:void 0,markPrice:void 0,liquidationPrice:c,initialMargin:this.parseNumber(a),initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,marginRatio:void 0,timestamp:h,datetime:this.iso8601(h)}}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),[o,d]=this.handleMarketTypeAndParams("createOrder",n,a);return"spot"===o?await this.createSpotOrder(e,t,i,s,r,d):"swap"===o?await this.createSwapOrder(e,t,i,s,r,d):void 0}async createSpotOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e);let d;"buy"===i?d="BID":"sell"===i&&(d="ASK");let c=t.toUpperCase();const h="MARKET"===c;if(h)throw new r.InvalidOrder(this.id+" createOrder () does not support market orders, only limit orders are allowed");"LIMIT"===c&&(c="LIMIT_ORDER");const u=this.isPostOnly(h,"POST_ONLY"===c,n),l=this.safeStringUpper(n,"timeInForce");if(u?c="POST_ONLY":"IOC"===l&&(c="IMMEDIATE_OR_CANCEL"),"FOK"===l)throw new r.InvalidOrder(this.id+" createOrder () does not support timeInForce FOK, only IOC, PO, and GTC are allowed");if("POST_ONLY"!==c&&"IMMEDIATE_OR_CANCEL"!==c&&"LIMIT_ORDER"!==c)throw new r.InvalidOrder(this.id+" createOrder () does not support "+t+" order type, only LIMIT, LIMIT_ORDER, POST_ONLY or IMMEDIATE_OR_CANCEL are allowed");const p={symbol:o.id,price:this.priceToPrecision(e,a),quantity:this.amountToPrecision(e,s),trade_type:d,order_type:c},f=this.safeString2(n,"clientOrderId","client_order_id");void 0!==f&&(p.client_order_id=f),n=this.omit(n,["type","clientOrderId","client_order_id","postOnly","timeInForce"]);const m=await this.spotPrivatePostOrderPlace(this.extend(p,n));return this.parseOrder(m,o)}async createSwapOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=this.safeInteger(n,"openType");if(void 0===d)throw new r.ArgumentsRequired(this.id+" createSwapOrder () requires an integer openType parameter, 1 for isolated margin, 2 for cross margin");if("limit"!==t&&"market"!==t&&1!==t&&2!==t&&3!==t&&4!==t&&5!==t&&6!==t)throw new r.InvalidOrder(this.id+" createSwapOrder () order type must either limit, market, or 1 for limit orders, 2 for post-only orders, 3 for IOC orders, 4 for FOK orders, 5 for market orders or 6 to convert market price to current price");const c="market"===t||5===t;this.isPostOnly(c,2===t,n)?t=2:"limit"===t?t=1:"market"===t&&(t=5);const h=this.safeStringUpper(n,"timeInForce");if("IOC"===h?t=3:"FOK"===h&&(t=4),1!==i&&2!==i&&3!==i&&4!==i)throw new r.InvalidOrder(this.id+" createSwapOrder () order side must be 1 open long, 2 close short, 3 open short or 4 close long");const u={symbol:o.id,vol:parseFloat(this.amountToPrecision(e,s)),side:i,type:t,openType:d};let l="contractPrivatePostOrderSubmit";const p=this.safeNumber2(n,"triggerPrice","stopPrice");if(n=this.omit(n,["stopPrice","triggerPrice","timeInForce","postOnly"]),void 0!==p&&(l="contractPrivatePostPlanorderPlace",u.triggerPrice=this.priceToPrecision(e,p),u.triggerType=this.safeInteger(n,"triggerType",1),u.executeCycle=this.safeInteger(n,"executeCycle",1),u.trend=this.safeInteger(n,"trend",1),u.orderType=this.safeInteger(n,"orderType",t)),5!==t&&6!==t&&"market"!==t&&(u.price=parseFloat(this.priceToPrecision(e,a))),1===d&&void 0===this.safeInteger(n,"leverage"))throw new r.ArgumentsRequired(this.id+" createSwapOrder () requires a leverage parameter for isolated margin orders");const f=this.safeString2(n,"clientOrderId","externalOid");void 0!==f&&(u.externalOid=f),n=this.omit(n,["clientOrderId","externalOid"]);const m=await this[l](this.extend(u,n));return this.parseOrder(m,o)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a=this.safeValue(this.options,"cancelOrder",{}),n=this.safeString(a,"method","spotPrivateDeleteOrderCancel");let o=this.safeString(i,"method",n);const d=this.safeValue(i,"stop");let c={};if("spot"===s.type){o="spotPrivateDeleteOrderCancel";const t=this.safeString2(i,"clientOrderId","client_order_ids");void 0!==t?(i=this.omit(i,["clientOrderId","client_order_ids"]),c.client_order_ids=t):c.order_ids=e}else if(d)if(o="contractPrivatePostPlanorderCancel",c=[],Array.isArray(e))for(let t=0;t<e.length;t++)c.push({symbol:s.id,orderId:e[t]});else"string"==typeof e&&c.push({symbol:s.id,orderId:e});else"swap"===s.type&&(o="contractPrivatePostOrderCancel",c=[e]);const h=await this[o](c);let u=this.safeValue(h,"data",[]);return d&&(u=h),this.parseOrder(u,s)}parseOrderStatus(e,t=undefined){let i={};return i="spot"===t.type?{NEW:"open",FILLED:"closed",PARTIALLY_FILLED:"open",CANCELED:"canceled",PARTIALLY_CANCELED:"canceled"}:"swap"===t.type?{2:"open",3:"closed",4:"canceled"}:{1:"open",2:"canceled",3:"closed"},this.safeString(i,e,e)}parseOrder(e,t=undefined){let i,s=this.safeString2(e,"data","id");if(void 0===s){const t=Object.keys(e);s=this.safeString(t,0),"success"===this.safeString(e,s)&&(i="canceled")}const r=this.safeString(e,"state"),a=this.safeInteger2(e,"create_time","createTime"),n=this.safeString(e,"price"),o=this.safeString2(e,"quantity","vol"),d=this.safeString(e,"remain_quantity"),c=this.safeString2(e,"deal_quantity","dealVol"),h=this.safeString(e,"deal_amount"),u=this.safeString(e,"symbol"),l=this.safeSymbol(u,t,"_"),p=this.safeInteger(e,"side");let f;const m=this.safeString(e,"type");"BID"===m?f="buy":"ASK"===m&&(f="sell"),1===p?f="open long":2===f?f="close short":3===f?f="open short":4===f&&(f="close long"),i=this.parseOrderStatus(r,t);const v=this.safeString2(e,"client_order_id","orderId"),g=this.safeString2(e,"orderType","order_type");let y,b,w;return void 0!==g&&(w=!1,"1"===g?(y="limit",b="GTC"):"2"===g?(y="limit",b="PO",w=!0):"3"===g?(y="limit",b="IOC"):"4"===g?(y="limit",b="FOK"):"5"===g||"6"===g?(y="market",b="GTC"):"LIMIT_ORDER"===g?(y="limit",b="GTC"):"POST_ONLY"===g?(y="limit",b="PO",w=!0):"IMMEDIATE_OR_CANCEL"===g&&(y="limit",b="IOC")),this.safeOrder({id:s,clientOrderId:v,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:this.safeInteger(e,"updateTime"),status:i,symbol:l,type:y,timeInForce:b,postOnly:w,side:f,price:n,stopPrice:this.safeString(e,"triggerPrice"),triggerPrice:this.safeString(e,"triggerPrice"),average:this.safeString(e,"dealAvgPrice"),amount:o,cost:h,filled:c,remaining:d,fee:void 0,trades:void 0,info:e},t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id},[o,d]=this.handleMarketTypeAndParams("fetchOpenOrders",a,s),c=this.getSupportedMapping(o,{spot:"spotPrivateGetOrderOpenOrders",swap:"contractPrivateGetOrderListOpenOrdersSymbol"});if(this.safeValue(s,"stop"))return await this.fetchOrdersByState("1",e,t,i,s);const h=await this[c](this.extend(n,d)),u=this.safeValue(h,"data",[]);return this.parseOrders(u,a,t,i)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),[a,n]=this.handleMarketTypeAndParams("fetchOrder",s,i),o={order_ids:e},d=this.getSupportedMapping(a,{spot:"spotPrivateGetOrderQuery",swap:"contractPrivateGetOrderBatchQuery"}),c=await this[d](this.extend(o,n)),h=this.safeValue(c,"data",[]),u=this.safeValue(h,0);if(void 0===u)throw new r.OrderNotFound(this.id+" fetchOrder() could not find the order id "+e);return this.parseOrder(u,s)}async fetchOrdersByState(e,t=undefined,i=undefined,s=undefined,a={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrdersByState() requires a symbol argument");await this.loadMarkets();const n=this.market(t),o={symbol:n.id,states:e},d=this.safeValue(a,"stop");void 0!==s&&(o[d?"page_size":"limit"]=s),void 0!==i&&(o.start_time=i);const c=this.safeValue(this.options,"fetchOrdersByState",{}),h=this.safeString(c,"method","spotPrivateGetOrderList");let u=this.safeString(a,"method",h);u=this.getSupportedMapping(n.type,{spot:"spotPrivateGetOrderList",swap:"contractPrivateGetOrderListHistoryOrders"}),d&&(u="contractPrivateGetPlanorderListOrders");const l=this.omit(a,["method","stop"]),p=await this[u](this.extend(o,l)),f=this.safeValue(p,"data",[]);return this.parseOrders(f,n,i,s)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchCanceledOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n=this.safeValue(s,"stop");let o="CANCELED";return"swap"===a.type?o="4":n&&(o="2"),await this.fetchOrdersByState(o,e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e);let n="FILLED";return(this.safeValue(s,"stop")||"swap"===a.type)&&(n="3"),await this.fetchOrdersByState(n,e,t,i,s)}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id};let r=this.getSupportedMapping(i.type,{spot:"spotPrivateDeleteOrderCancelBySymbol",swap:"contractPrivatePostOrderCancelAll"});this.safeValue(t,"stop")&&(r="contractPrivatePostPlanorderCancelAll");const a=this.omit(t,["method","stop"]);return await this[r](this.extend(s,a))}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==t&&(n.start_time=t),void 0!==i&&(n.limit=i);const o=await this.spotPrivateGetOrderDeals(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={order_id:e},o=await this.spotPrivateGetOrderDealDetail(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,a,i,s)}async modifyMarginHelper(e,t,i,s={}){const a=this.safeInteger(s,"positionId");if(void 0===a)throw new r.ArgumentsRequired(this.id+" modifyMarginHelper() requires a positionId parameter");await this.loadMarkets();const n=this.market(e),o={positionId:a,amount:t=this.amountToPrecision(e,t),type:i},d=await this.contractPrivatePostPositionChangeMargin(this.extend(o,s)),c="ADD"===i?"add":"reduce";return this.extend(this.parseMarginModification(d,n),{amount:this.parseNumber(t),type:c})}parseMarginModification(e,t=undefined){const i=!0===this.safeValue(e,"success")?"ok":"failed";return{info:e,type:void 0,amount:void 0,code:void 0,symbol:this.safeSymbol(void 0,t),status:i}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"SUB",i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"ADD",i)}async setLeverage(e,t=undefined,i={}){await this.loadMarkets();const s={leverage:e},a=this.safeInteger(i,"positionId");if(void 0===a){const e=this.safeNumber(i,"openType"),a=this.safeNumber(i,"positionType"),n=void 0!==t?this.market(t):void 0;if(void 0===e||void 0===a||void 0===n)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a positionId parameter or a symbol argument with openType and positionType parameters, use openType 1 or 2 for isolated or cross margin respectively, use positionType 1 or 2 for long or short positions");s.openType=e,s.symbol=n.id,s.positionType=a}else s.positionId=a;return await this.contractPrivatePostPositionChangeLeverage(this.extend(s,i))}async fetchTransfer(e,t=undefined,i={}){const s={transact_id:e},r=await this.spotPrivateGetAssetInternalTransferInfo(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseTransfer(a)}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;if(void 0!==e&&(n=this.currency(e),a.currency=n.id),void 0!==t&&(a.start_time=t),void 0!==i){if(i>50)throw new r.ExchangeError("This exchange supports a maximum limit of 50");a["page-size"]=i}const o=await this.spotPrivateGetAssetInternalTransferRecord(this.extend(a,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"result_list",[]);return this.parseTransfers(c,n,t,i)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c={currency:a.id,amount:t,from:o,to:d},h=await this.spotPrivatePostAssetInternalTransfer(this.extend(c,r)),u=this.safeValue(h,"data",{});return this.parseTransfer(u,a)}parseTransfer(e,t=undefined){const i=this.safeValue(this.options,"transfer",{}),s=this.safeValue(i,"status",{}),r=this.safeString(e,"currency"),a=this.safeString(e,"transact_id"),n=this.safeString(e,"from"),o=this.safeString(e,"to"),d=this.safeValue(i,"accountsById",{}),c=this.safeString(d,n),h=this.safeString(d,o),u=this.safeString(e,"transact_state");return{info:e,id:a,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(r,t),amount:this.safeNumber(e,"amount"),fromAccount:c,toAccount:h,status:this.safeString(s,u)}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r);const a=this.safeValue(this.options,"networks",{});let n=this.safeStringUpper2(r,"network","chain");n=this.safeString(a,n,n),this.checkAddress(i),await this.loadMarkets(),void 0!==s&&(i+=":"+s);const o={currency:this.currency(e).id,address:i,amount:t};void 0!==n&&(o.chain=n,r=this.omit(r,["network","chain"]));const d=await this.spotPrivatePostAssetWithdraw(this.extend(o,r)),c=this.safeValue(d,"data",{});return{info:c,id:this.safeString(c,"withdrawId")}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const[n,d]=t;let c=this.urls.api[n][d]+"/"+this.implodeParams(e,s);if(s=this.omit(s,this.extractParams(e)),"public"===d)Object.keys(s).length&&(c+="?"+this.urlencode(s));else{this.checkRequiredCredentials();const e=this.milliseconds().toString();let t="";r={ApiKey:this.apiKey,"Request-Time":e,"Content-Type":"application/json",source:this.safeString(this.options,"broker","CCXT")},"POST"===i?(t=this.json(s),a=t):(s=this.keysort(s),Object.keys(s).length&&(t+=this.urlencode(s),c+="?"+t)),t=this.apiKey+e+t;const n=this.hmac(this.encode(t),this.encode(this.secret),o.J);r.Signature=n}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;if(!0===this.safeValue(o,"success",!1))return;const h=this.safeString(o,"code");if("200"!==h&&"0"!==h){const e=this.id+" "+n;throw this.throwBroadlyMatchedException(this.exceptions.broad,n,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r.ExchangeError(e)}}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.page_size=i);const n=await this.contractPrivateGetPositionFundingRecords(this.extend(a,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"resultList",[]),c=[];for(let t=0;t<d.length;t++){const i=d[t],s=this.safeInteger(i,"settleTime");c.push({info:i,symbol:e,code:void 0,timestamp:s,datetime:this.iso8601(s),id:this.safeNumber(i,"id"),amount:this.safeNumber(i,"funding")})}return c}parseFundingRate(e,t=undefined){const i=this.safeNumber(e,"fundingRate"),s=this.safeInteger(e,"nextSettleTime"),r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.safeInteger(e,"timestamp");return{info:e,symbol:a,markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:n,datetime:this.iso8601(n),fundingRate:i,fundingTimestamp:s,fundingDatetime:this.iso8601(s),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.contractPublicGetFundingRateSymbol(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseFundingRate(a,i)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.page_size=i);const o=await this.contractPublicGetFundingRateHistory(this.extend(n,s)),d=this.safeValue(o,"data"),c=this.safeValue(d,"resultList",[]),h=[];for(let e=0;e<c.length;e++){const t=c[e],i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeInteger(t,"settleTime");h.push({info:t,symbol:s,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:r,datetime:this.iso8601(r)})}const u=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(u,a.symbol,t,i)}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.contractPublicGetDetail(t),s=this.safeValue(i,"data");return this.parseLeverageTiers(s,e,"symbol")}parseMarketLeverageTiers(e,t=undefined){let i=this.safeString(e,"maintenanceMarginRate"),s=this.safeString(e,"initialMarginRate");const r=this.safeString(e,"maxVol"),n=this.safeString(e,"riskIncrVol"),o=this.safeString(e,"riskIncrMmr"),d=this.safeString(e,"riskIncrImr");let c="0";const h=[],u=this.safeString(e,"quoteCoin");for(;a.O.stringLt(c,r);){const t=a.O.stringAdd(c,n);h.push({tier:this.parseNumber(a.O.stringDiv(t,n)),currency:this.safeCurrencyCode(u),minNotional:this.parseNumber(c),maxNotional:this.parseNumber(t),maintenanceMarginRate:this.parseNumber(i),maxLeverage:this.parseNumber(a.O.stringDiv("1",s)),info:e}),s=a.O.stringAdd(s,d),i=a.O.stringAdd(i,o),c=t}return h}async setPositionMode(e,t=undefined,i={}){const s={positionMode:e?1:2};return await this.contractPrivatePostPositionChangePositionMode(this.extend(s,i))}async fetchPositionMode(e=undefined,t={}){const i=await this.contractPrivateGetPositionPositionMode(t);return{info:i,hedged:1===this.safeInteger(i,"data")}}}},2305:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(8862),r=i(6689),a=i(9292),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"mexc3",name:"MEXC Global",countries:["SC"],rateLimit:50,version:"v3",has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,addMargin:!0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:void 0,createLimitOrder:void 0,createMarketOrder:void 0,createOrder:!0,createReduceOnlyOrder:!0,deposit:void 0,editOrder:void 0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowRate:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchBorrowRatesPerSymbol:void 0,fetchCanceledOrders:!0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:void 0,fetchDepositAddress:!0,fetchDepositAddresses:void 0,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:void 0,fetchIndexOHLCV:!0,fetchL2OrderBook:!0,fetchLedger:void 0,fetchLedgerEntry:void 0,fetchLeverageTiers:!0,fetchMarginMode:!1,fetchMarketLeverageTiers:void 0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:void 0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!0,fetchPositions:!0,fetchPositionsRisk:void 0,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:void 0,fetchTradingFees:!0,fetchTradingLimits:void 0,fetchTransactionFee:"emulated",fetchTransactionFees:!0,fetchTransactions:void 0,fetchTransfer:!0,fetchTransfers:!0,fetchWithdrawal:void 0,fetchWithdrawals:!0,reduceMargin:!0,repayMargin:!0,setLeverage:!0,setMarginMode:void 0,setPositionMode:!0,signIn:void 0,transfer:void 0,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/137283979-8b2a818d-8633-461b-bfca-de89e8c446b2.jpg",api:{spot:{public:"https://api.mexc.com",private:"https://api.mexc.com"},spot2:{public:"https://www.mexc.com/open/api/v2",private:"https://www.mexc.com/open/api/v2"},contract:{public:"https://contract.mexc.com/api/v1/contract",private:"https://contract.mexc.com/api/v1/private"}},www:"https://www.mexc.com/",doc:["https://mxcdevelop.github.io/apidocs/spot_v3_en/","https://mxcdevelop.github.io/APIDoc/"],fees:["https://www.mexc.com/fee"],referral:"https://m.mexc.com/auth/signup?inviteCode=1FQ1G"},api:{spot:{public:{get:{ping:1,time:1,exchangeInfo:1,depth:1,trades:1,historicalTrades:1,aggTrades:1,klines:1,avgPrice:1,"ticker/24hr":1,"ticker/price":1,"ticker/bookTicker":1,"etf/info":1}},private:{get:{order:1,openOrders:1,allOrders:1,account:1,myTrades:1,"sub-account/list":1,"sub-account/apiKey":1,"capital/config/getall":1,"capital/deposit/hisrec":1,"capital/withdraw/history":1,"capital/deposit/address":1,"capital/transfer":1,"capital/sub-account/universalTransfer":1,"capital/convert":1,"capital/convert/list":1,"margin/loan":1,"margin/allOrders":1,"margin/myTrades":1,"margin/openOrders":1,"margin/maxTransferable":1,"margin/priceIndex":1,"margin/order":1,"margin/isolated/account":1,"margin/maxBorrowable":1,"margin/repay":1,"margin/isolated/pair":1,"margin/forceLiquidationRec":1,"margin/isolatedMarginData":1,"margin/isolatedMarginTier":1,"rebate/taxQuery":1,"rebate/detail":1,"rebate/detail/kickback":1,"rebate/referCode":1,"mxDeduct/enable":1},post:{order:1,"order/test":1,"sub-account/virtualSubAccount":1,"sub-account/apiKey":1,"sub-account/futures":1,"sub-account/margin":1,batchOrders:1,"capital/withdraw/apply":1,"capital/transfer":1,"capital/deposit/address":1,"capital/sub-account/universalTransfer":1,"capital/convert":1,"margin/tradeMode":1,"margin/order":1,"margin/loan":1,"margin/repay":1,"mxDeduct/enable":1},delete:{order:1,openOrders:1,"sub-account/apiKey":1,"margin/order":1,"margin/openOrders":1}}},contract:{public:{get:{ping:2,detail:2,support_currencies:2,"depth/{symbol}":2,"depth_commits/{symbol}/{limit}":2,"index_price/{symbol}":2,"fair_price/{symbol}":2,"funding_rate/{symbol}":2,"kline/{symbol}":2,"kline/index_price/{symbol}":2,"kline/fair_price/{symbol}":2,"deals/{symbol}":2,ticker:2,risk_reverse:2,"risk_reverse/history":2,"funding_rate/history":2}},private:{get:{"account/assets":2,"account/asset/{currency}":2,"account/transfer_record":2,"position/list/history_positions":2,"position/open_positions":2,"position/funding_records":2,"position/position_mode":2,"order/list/open_orders/{symbol}":2,"order/list/history_orders":2,"order/external/{symbol}/{external_oid}":2,"order/get/{order_id}":2,"order/batch_query":8,"order/deal_details/{order_id}":2,"order/list/order_deals":2,"planorder/list/orders":2,"stoporder/list/orders":2,"stoporder/order_details/{stop_order_id}":2,"account/risk_limit":2,"account/tiered_fee_rate":2,"position/leverage":2},post:{"position/change_margin":2,"position/change_leverage":2,"position/change_position_mode":2,"order/submit":2,"order/submit_batch":40,"order/cancel":2,"order/cancel_with_external":2,"order/cancel_all":2,"account/change_risk_level":2,"planorder/place":2,"planorder/cancel":2,"planorder/cancel_all":2,"stoporder/cancel":2,"stoporder/cancel_all":2,"stoporder/change_price":2,"stoporder/change_plan_price":2}}},spot2:{public:{get:{"market/symbols":1,"market/coin/list":2,"common/timestamp":1,"common/ping":1,"market/ticker":1,"market/depth":1,"market/deals":1,"market/kline":1,"market/api_default_symbols":2}},private:{get:{"account/info":1,"order/open_orders":1,"order/list":1,"order/query":1,"order/deals":1,"order/deal_detail":1,"asset/deposit/address/list":2,"asset/deposit/list":2,"asset/address/list":2,"asset/withdraw/list":2,"asset/internal/transfer/record":10,"account/balance":10,"asset/internal/transfer/info":10,"market/api_symbols":2},post:{"order/place":1,"order/place_batch":1,"order/advanced/place_batch":1,"asset/withdraw":2,"asset/internal/transfer":10},delete:{"order/cancel":1,"order/cancel_by_symbol":1,"asset/withdraw":2}}}},precisionMode:a.sh,timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},options:{createMarketBuyOrderRequiresPrice:!0,unavailableContracts:{"BTC/USDT:USDT":!0,"LTC/USDT:USDT":!0,"ETH/USDT:USDT":!0},fetchMarkets:{types:{spot:!0,future:{linear:!1,inverse:!1},swap:{linear:!0,inverse:!1}}},timeframes:{spot:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},swap:{"1m":"Min1","5m":"Min5","15m":"Min15","30m":"Min30","1h":"Min60","4h":"Hour4","8h":"Hour8","1d":"Day1","1w":"Week1","1M":"Month1"}},defaultType:"spot",networks:{TRX:"TRC20",ETH:"ERC20",BEP20:"BEP20(BSC)",BSC:"BEP20(BSC)"},networksById:{"BEP20(BSC)":"BSC"},networkAliases:{"BSC(BEP20)":"BSC"},recvWindow:5e3,maxTimeTillEnd:7775999999,broker:"CCXT"},commonCurrencies:{BEYONDPROTOCOL:"BEYOND",BIFI:"BIFIF",BYN:"BeyondFi",COFI:"COFIX",DFI:"DfiStarter",DFT:"dFuture",DRK:"DRK",EGC:"Egoras Credit",FLUX1:"FLUX",FLUX:"FLUX1",FREE:"FreeRossDAO",GAS:"GASDAO",GASNEO:"GAS",GMT:"GMT Token",STEPN:"GMT",HERO:"Step Hero",MIMO:"Mimosa",PROS:"Pros.Finance",SIN:"Sin City Token",SOUL:"Soul Swap"},exceptions:{exact:{"-1128":r.BadRequest,"-2011":r.BadRequest,"-1121":r.BadSymbol,10101:r.InsufficientFunds,2009:r.InvalidOrder,2011:r.BadRequest,30004:r.InsufficientFunds,33333:r.BadRequest,44444:r.BadRequest,1002:r.InvalidOrder,30019:r.BadRequest,30005:r.InvalidOrder,2003:r.InvalidOrder,2005:r.InsufficientFunds,600:r.BadRequest,70011:r.PermissionDenied,88004:r.InsufficientFunds,88009:r.ExchangeError,88013:r.InvalidOrder,88015:r.InsufficientFunds,700003:r.InvalidNonce,26:r.ExchangeError,602:r.AuthenticationError,10001:r.AuthenticationError,10007:r.BadRequest,10015:r.BadRequest,10072:r.BadRequest,10073:r.BadRequest,10095:r.InvalidOrder,10096:r.InvalidOrder,10097:r.InvalidOrder,10098:r.InvalidOrder,10099:r.BadRequest,10100:r.BadRequest,10102:r.InvalidOrder,10103:r.ExchangeError,10200:r.BadRequest,10201:r.BadRequest,10202:r.BadRequest,10206:r.BadRequest,10211:r.BadRequest,10212:r.BadRequest,10216:r.ExchangeError,10219:r.ExchangeError,10222:r.BadRequest,10232:r.BadRequest,10259:r.ExchangeError,10265:r.ExchangeError,10268:r.BadRequest,20001:r.ExchangeError,20002:r.ExchangeError,22222:r.BadRequest,3e4:r.ExchangeError,30001:r.InvalidOrder,30002:r.InvalidOrder,30003:r.InvalidOrder,30010:r.InvalidOrder,30014:r.InvalidOrder,30016:r.InvalidOrder,30018:r.InvalidOrder,30020:r.AuthenticationError,30021:r.BadRequest,30025:r.InvalidOrder,30026:r.BadRequest,30027:r.InvalidOrder,30028:r.InvalidOrder,30029:r.InvalidOrder,30032:r.InvalidOrder,30041:r.InvalidOrder,60005:r.ExchangeError,700001:r.BadRequest,700002:r.AuthenticationError,700004:r.BadRequest,700005:r.InvalidNonce,700006:r.BadRequest,700007:r.AuthenticationError,700008:r.BadRequest,730001:r.BadRequest,730002:r.BadRequest,73e4:r.ExchangeError,730003:r.ExchangeError,730100:r.ExchangeError,730600:r.BadRequest,730601:r.BadRequest,730602:r.BadRequest,730700:r.BadRequest,730701:r.BadRequest,730702:r.BadRequest,730703:r.BadRequest,730704:r.BadRequest,730705:r.BadRequest,730706:r.BadRequest,730707:r.BadRequest,730101:r.BadRequest,140001:r.BadRequest,140002:r.AuthenticationError},broad:{"Order quantity error, please try to modify.":r.BadRequest,"Combination of optional parameters invalid":r.BadRequest,"api market order is disabled":r.BadRequest,"Contract not allow place order!":r.InvalidOrder,Oversold:r.InvalidOrder,"Insufficient position":r.InsufficientFunds,"Insufficient balance!":r.InsufficientFunds,"Bid price is great than max allow price":r.InvalidOrder,"Invalid symbol.":r.BadSymbol,"Param error!":r.BadRequest}}})}async fetchStatus(e={}){const[t,i]=this.handleMarketTypeAndParams("fetchStatus",void 0,e);let s,r,a;return"spot"===t?(s=await this.spotPublicGetPing(i),r=Object.keys(s).length?this.json(s):"ok"):"swap"===t&&(s=await this.contractPublicGetPing(i),r=this.safeValue(s,"success")?"ok":this.json(s),a=this.safeInteger(s,"data")),{status:r,updated:a,url:void 0,eta:void 0,info:s}}async fetchTime(e={}){const[t,i]=this.handleMarketTypeAndParams("fetchTime",void 0,e);let s;return"spot"===t?(s=await this.spotPublicGetTime(i),this.safeInteger(s,"serverTime")):"swap"===t?(s=await this.contractPublicGetPing(i),this.safeInteger(s,"data")):void 0}async fetchCurrencies(e={}){if(!this.checkRequiredCredentials(!1))return;const t=await this.spotPrivateGetCapitalConfigGetall(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"coin"),a=this.safeCurrencyCode(r),o=this.safeString(s,"name");let d,c,h,u=!1,l=!1,p=!1;const f={},m=this.safeValue(s,"networkList",[]);for(let e=0;e<m.length;e++){const t=m[e],i=this.safeString(t,"network"),s=this.safeNetwork(i),r=this.safeValue(t,"depositEnable",!1),a=this.safeValue(t,"withdrawEnable",!1),o=r&&a;u=o||u;const v=this.safeString(t,"withdrawMin"),g=this.safeString(t,"withdrawMax");c=void 0===c?v:c,h=void 0===h?g:h;const y=this.safeNumber(t,"withdrawFee");d=void 0===d?y:d,n.O.stringGt(c,v)&&(c=v),n.O.stringLt(h,g)&&(h=g),r&&(l=!0),a&&(p=!0),f[s]={info:t,id:i,network:s,active:o,deposit:r,withdraw:a,fee:y,precision:void 0,limits:{withdraw:{min:v,max:g}}}}const v=Object.keys(f).length;if(1===v||"NONE"in f){const e=this.safeValue2(f,"NONE",v-1);void 0!==e&&(d=e.fee)}i[a]={info:s,id:r,code:a,name:o,active:u,deposit:l,withdraw:p,fee:d,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:c,max:h}},networks:f}}return i}safeNetwork(e){if(e.indexOf("BSC")>=0)return"BEP20";const t=e.split(" ");return e=(e=t.join("")).replace("-20","20"),this.safeString({ETH:"ETH",ERC20:"ERC20","BEP20(BSC)":"BEP20",TRX:"TRC20"},e,e)}async fetchMarkets(e={}){const t=await this.fetchSpotMarkets(e),i=await this.fetchSwapMarkets(e);return this.arrayConcat(t,i)}async fetchSpotMarkets(e={}){const t=await this.spotPublicGetExchangeInfo(e),i=this.safeValue(t,"symbols",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseAsset"),n=this.safeString(t,"quoteAsset"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=this.safeString(t,"status"),h=this.safeValue(t,"isSpotTradingAllowed");let u=!1;"ENABLED"===c&&h&&(u=!0);const l=this.safeValue(t,"isMarginTradingAllowed"),p=this.safeNumber(t,"makerCommission"),f=this.safeNumber(t,"takerCommission"),m=this.safeNumber(t,"maxQuoteAmount");s.push({id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:l,swap:!1,future:!1,option:!1,active:u,contract:!1,linear:void 0,inverse:void 0,taker:f,maker:p,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"quoteAssetPrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"baseSizePrecision"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"quoteAmountPrecision"),max:m}},info:t})}return s}async fetchSwapMarkets(e={}){const t=await this.contractPublicGetDetail(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeString(t,"baseCoin"),n=this.safeString(t,"quoteCoin"),o=this.safeString(t,"settleCoin"),d=this.safeCurrencyCode(a),c=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),u=this.safeString(t,"state");s.push({id:r,symbol:d+"/"+c+":"+h,base:d,quote:c,settle:h,baseId:a,quoteId:n,settleId:o,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"0"===u,contract:!0,linear:!0,inverse:!1,taker:this.safeNumber(t,"takerFeeRate"),maker:this.safeNumber(t,"makerFeeRate"),contractSize:this.safeNumber(t,"contractSize"),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"volUnit"),price:this.safeNumber(t,"priceUnit")},limits:{leverage:{min:this.safeNumber(t,"minLeverage"),max:this.safeNumber(t,"maxLeverage")},amount:{min:this.safeNumber(t,"minVol"),max:this.safeNumber(t,"maxVol")},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};let a;if(void 0!==t&&(r.limit=t),s.spot){const t=await this.spotPublicGetDepth(this.extend(r,i));a=this.parseOrderBook(t,e),a.nonce=this.safeInteger(t,"lastUpdateId")}else if(s.swap){const t=await this.contractPublicGetDepthSymbol(this.extend(r,i)),s=this.safeValue(t,"data"),n=this.safeInteger(s,"timestamp");a=this.parseOrderBook(s,e,n),a.nonce=this.safeInteger(s,"version")}return a}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};let n;if(void 0!==i&&(a.limit=i),r.spot){let e=this.safeString(this.options,"fetchTradesMethod","spotPublicGetAggTrades");e=this.safeString(s,"method",e),n=await this[e](this.extend(a,s))}else if(r.swap){const e=await this.contractPublicGetDealsSymbol(this.extend(a,s));n=this.safeValue(e,"data")}return this.parseTrades(n,r,t,i)}parseTrade(e,t=undefined){let i,s,r,a,n;const o=void 0;let d,c,h,u,l;if("v"in e)s=this.safeInteger(e,"t"),a=(t=this.safeMarket(void 0,t)).symbol,h=this.safeString(e,"p"),u=this.safeString(e,"v"),d=this.parseOrderSide(this.safeString(e,"T")),c="taker";else{const o=this.safeString(e,"symbol");if(a=(t=this.safeMarket(o,t)).symbol,i=this.safeString2(e,"id","a"),h=this.safeString2(e,"price","p"),r=this.safeString(e,"orderId"),"positionMode"in e)s=this.safeInteger(e,"timestamp"),u=this.safeString(e,"vol"),d=this.parseOrderSide(this.safeString(e,"side")),n={cost:this.safeString(e,"fee"),currency:this.safeCurrencyCode(this.safeString(e,"feeCurrency"))},c=this.safeValue(e,"taker")?"taker":"maker";else{s=this.safeInteger2(e,"time","T"),u=this.safeString2(e,"qty","q"),l=this.safeString(e,"quoteQty");const t=this.safeValue(e,"isBuyer"),i=this.safeValue(e,"isMaker"),r=this.safeString2(e,"isBuyerMaker","m");void 0!==i&&(c=i?"maker":"taker"),void 0!==t&&(d=t?"buy":"sell"),void 0!==r&&(d=r?"sell":"buy",c="taker");const a=this.safeString(e,"commissionAsset");void 0!==a&&(n={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(a)})}}return void 0===i&&(i=this.syntheticTradeId(t,s,d,u,h,o,c)),this.safeTrade({id:i,order:r,timestamp:s,datetime:this.iso8601(s),symbol:a,type:o,side:d,takerOrMaker:c,price:h,amount:u,cost:l,fee:n,info:e},t)}syntheticTradeId(e=undefined,t=undefined,i=undefined,s=undefined,r=undefined,a=undefined,n=undefined){let o="";return void 0!==t&&(o=this.numberToString(t)+"-"+this.safeString(e,"id","_"),void 0!==i&&(o+="-"+i),void 0!==s&&(o+="-"+this.numberToString(s)),void 0!==r&&(o+="-"+this.numberToString(r)),void 0!==n&&(o+="-"+n),void 0!==a&&(o+="-"+a)),o}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeValue(this.options,"timeframes",{}),o=this.safeValue(n,a.type,{}),d=this.safeString(o,t),c={symbol:a.id,interval:d};let h;if(a.spot)void 0!==i&&(c.startTime=i),void 0!==s&&(c.limit=s),h=await this.spotPublicGetKlines(this.extend(c,r));else if(a.swap){void 0!==i&&(c.start=this.parseToInt(i/1e3));const e=this.safeString(r,"price","default");r=this.omit(r,"price");const t=this.getSupportedMapping(e,{default:"contractPublicGetKlineSymbol",index:"contractPublicGetKlineIndexPriceSymbol",mark:"contractPublicGetKlineFairPriceSymbol"}),s=await this[t](this.extend(c,r)),a=this.safeValue(s,"data");h=this.convertTradingViewToOHLCV(a,"time","open","high","low","close","vol")}return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};let s,r=!1;if(void 0!==e){r=1===e.length;const t=this.safeString(e,0);s=this.market(t)}const[a,n]=this.handleMarketTypeAndParams("fetchTickers",s,t);let o;if(r&&(i.symbol=s.id),"spot"===a)o=await this.spotPublicGetTicker24hr(this.extend(i,n));else if("swap"===a){const e=await this.contractPublicGetTicker(this.extend(i,n));o=this.safeValue(e,"data",[])}return r&&(o=[o]),this.parseTickers(o,e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),[s,r]=this.handleMarketTypeAndParams("fetchTicker",i,t);let a;const n={symbol:i.id};if("spot"===s)a=await this.spotPublicGetTicker24hr(this.extend(n,r));else if("swap"===s){const e=await this.contractPublicGetTicker(this.extend(n,r));a=this.safeValue(e,"data",{})}return this.parseTicker(a,i)}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol");let s,r,a,o,d,c,h,u,l,p,f,m,v;return t=this.safeMarket(i,t),this.safeValue(t,"swap")||"timestamp"in e?(s=this.safeInteger(e,"timestamp"),r=this.safeString(e,"bid1"),a=this.safeString(e,"ask1"),c=this.safeString(e,"volume24"),h=this.safeString(e,"amount24"),l=this.safeString(e,"high24Price"),p=this.safeString(e,"lower24Price"),m=this.safeString(e,"riseFallValue"),f=this.safeString(e,"riseFallRate"),f=n.O.stringMul(f,"100")):(s=this.safeInteger(e,"closeTime"),r=this.safeString(e,"bidPrice"),a=this.safeString(e,"askPrice"),o=this.safeString(e,"bidQty"),d=this.safeString(e,"askQty"),n.O.stringEq(o,"0")&&(o=void 0),n.O.stringEq(d,"0")&&(d=void 0),c=this.safeString(e,"volume"),h=this.safeString(e,"quoteVolume"),u=this.safeString(e,"openPrice"),l=this.safeString(e,"highPrice"),p=this.safeString(e,"lowPrice"),v=this.safeString(e,"prevClosePrice"),m=this.safeString(e,"priceChange"),f=this.safeString(e,"priceChangePercent"),f=n.O.stringMul(f,"100")),this.safeTicker({symbol:t.symbol,timestamp:s,datetime:this.iso8601(s),open:u,high:l,low:p,close:this.safeString(e,"lastPrice"),bid:r,bidVolume:o,ask:a,askVolume:d,vwap:void 0,previousClose:v,change:m,percentage:f,average:void 0,baseVolume:c,quoteVolume:h,info:e},t)}async fetchBidsAsks(e=undefined,t={}){let i;await this.loadMarkets();let s=!1;void 0!==e&&(s=1===e.length,i=this.market(e[0]));const[a,n]=this.handleMarketTypeAndParams("fetchBidsAsks",i,t);let o;if("spot"===a)o=await this.spotPublicGetTickerBookTicker(n);else if("swap"===a)throw new r.NotSupported(this.id+" fetchBidsAsks() is not available for "+a+" markets");return s&&(o=[o]),this.parseTickers(o,e)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),[o,d]=this.handleMarginModeAndParams("createOrder",a);return n.spot?await this.createSpotOrder(n,t,i,s,r,o,d):n.swap?await this.createSwapOrder(n,t,i,s,r,o,d):void 0}async createSpotOrder(e,t,i,s,a=undefined,o=undefined,d={}){const c=e.symbol,h="buy"===i?"BUY":"SELL",u={symbol:e.id,side:h,type:t.toUpperCase()};if("BUY"===h&&"market"===t){const e=this.safeNumber(d,"quoteOrderQty");if(void 0!==e)s=e;else if(this.options.createMarketBuyOrderRequiresPrice){if(void 0===a)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");{const e=this.numberToString(s),t=this.numberToString(a),i=n.O.stringMul(e,t);s=this.parseNumber(i)}}u.quoteOrderQty=s}else u.quantity=this.amountToPrecision(c,s);void 0!==a&&(u.price=this.priceToPrecision(c,a));const l=this.safeString(d,"clientOrderId");void 0!==l&&(u.newClientOrderId=l,d=this.omit(d,["type","clientOrderId"]));let p="spotPrivatePostOrder";if(void 0!==o){if("isolated"!==o)throw new r.BadRequest(this.id+" createOrder() does not support marginMode "+o+" for spot-margin trading");p="spotPrivatePostMarginOrder"}const f=await this[p](this.extend(u,d));return this.extend(this.parseOrder(f,e),{side:i,type:t,price:a,amount:s})}async createSwapOrder(e,t,i,s,a=undefined,n=undefined,o={}){await this.loadMarkets();const d=e.symbol,c=this.safeValue(this.options,"unavailableContracts",{});if(this.safeValue(c,d,!1))throw new r.NotSupported(this.id+" createSwapOrder() does not support yet this symbol:"+d);let h;if(void 0!==n)if("cross"===n)h=2;else{if("isolated"!==n)throw new r.ArgumentsRequired(this.id+' createSwapOrder() marginMode parameter should be either "cross" or "isolated"');h=1}else h=this.safeInteger(o,"openType",2);if("limit"!==t&&"market"!==t&&1!==t&&2!==t&&3!==t&&4!==t&&5!==t&&6!==t)throw new r.InvalidOrder(this.id+" createSwapOrder() order type must either limit, market, or 1 for limit orders, 2 for post-only orders, 3 for IOC orders, 4 for FOK orders, 5 for market orders or 6 to convert market price to current price");this.safeValue(o,"postOnly",!1)?t=2:"limit"===t?t=1:"market"===t&&(t=6);const u={symbol:e.id,vol:parseFloat(this.amountToPrecision(d,s)),type:t,openType:h};let l="contractPrivatePostOrderSubmit";const p=this.safeNumber2(o,"triggerPrice","stopPrice");if(o=this.omit(o,["stopPrice","triggerPrice"]),p&&(l="contractPrivatePostPlanorderPlace",u.triggerPrice=this.priceToPrecision(d,p),u.triggerType=this.safeInteger(o,"triggerType",1),u.executeCycle=this.safeInteger(o,"executeCycle",1),u.trend=this.safeInteger(o,"trend",1),u.orderType=this.safeInteger(o,"orderType",1)),5!==t&&6!==t&&"market"!==t&&(u.price=parseFloat(this.priceToPrecision(d,a))),1===h&&void 0===this.safeInteger(o,"leverage"))throw new r.ArgumentsRequired(this.id+" createSwapOrder() requires a leverage parameter for isolated margin orders");const f=this.safeValue(o,"reduceOnly",!1);u.side=f?"buy"===i?2:4:"buy"===i?1:3;const m=this.safeString2(o,"clientOrderId","externalOid");void 0!==m&&(u.externalOid=m),o=this.omit(o,["clientOrderId","externalOid","postOnly"]);const v=await this[l](this.extend(u,o)),g=this.safeString(v,"data");return this.parseOrder(g,e)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={symbol:s.id};let n;if(s.spot){const t=this.safeString(i,"clientOrderId");void 0!==t?(i=this.omit(i,"clientOrderId"),a.origClientOrderId=t):a.orderId=e;const[s,o]=this.handleMarginModeAndParams("fetchOrder",i);let d="spotPrivateGetOrder";if(void 0!==s){if("isolated"!==s)throw new r.BadRequest(this.id+" fetchOrder() does not support marginMode "+s+" for spot-margin trading");d="spotPrivateGetMarginOrder"}n=await this[d](this.extend(a,o))}else if(s.swap){a.order_id=e;const t=await this.contractPrivateGetOrderGetOrderId(this.extend(a,i));n=this.safeValue(t,"data")}return this.parseOrder(n,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;void 0!==e&&(n=this.market(e),a.symbol=n.id);const[o,d]=this.handleMarketTypeAndParams("fetchOrders",n,s);if("spot"===o){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument for spot market");const[o,d]=this.handleMarginModeAndParams("fetchOrders",s);let c="spotPrivateGetAllOrders";if(void 0!==o){if("isolated"!==o)throw new r.BadRequest(this.id+" fetchOrders() does not support marginMode "+o+" for spot-margin trading");c="spotPrivateGetMarginAllOrders"}void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=i);const h=await this[c](this.extend(a,d));return this.parseOrders(h,n,t,i)}{void 0!==t&&(a.start_time=t,void 0===this.safeInteger(s,"end_time")&&(a.end_time=this.sum(t,this.options.maxTimeTillEnd))),void 0!==i&&(a.page_size=i);let e=this.safeString(this.options,"fetchOrders","contractPrivateGetOrderListHistoryOrders");e=this.safeString(d,"method",e);let r=[],o=[];if("contractPrivateGetOrderListHistoryOrders"===e){const e=await this.contractPrivateGetOrderListHistoryOrders(this.extend(a,d));r=this.safeValue(e,"data")}else{const e=await this.contractPrivateGetPlanorderListOrders(this.extend(a,d));o=this.safeValue(e,"data")}const c=this.arrayConcat(o,r);return this.parseOrders(c,n,t,i,s)}}async fetchOrdersByIds(e,t=undefined,i={}){await this.loadMarkets();const s={};let a;void 0!==t&&(a=this.market(t),s.symbol=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchOrdersByIds",a,i);if("spot"===n)throw new r.BadRequest(this.id+" fetchOrdersByIds() is not supported for "+n);{s.order_ids=e.join(",");const t=await this.contractPrivateGetOrderBatchQuery(this.extend(s,o)),i=this.safeValue(t,"data");return this.parseOrders(i,a)}}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n,o;if(void 0!==e&&(n=this.market(e),a.symbol=n.id),[o,s]=this.handleMarketTypeAndParams("fetchOpenOrders",n,s),"spot"===o){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument for spot market");let o="spotPrivateGetOpenOrders";const[d,c]=this.handleMarginModeAndParams("fetchOpenOrders",s);if(void 0!==d){if("isolated"!==d)throw new r.BadRequest(this.id+" fetchOpenOrders() does not support marginMode "+d+" for spot-margin trading");o="spotPrivateGetMarginOpenOrders"}const h=await this[o](this.extend(a,c));return this.parseOrders(h,n,t,i)}return await this.fetchOrdersByState(2,e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState(3,e,t,i,s)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState(4,e,t,i,s)}async fetchOrdersByState(e,t=undefined,i=undefined,s=undefined,a={}){await this.loadMarkets();let n;void 0!==t&&(n=this.market(t),n.id);const[o]=this.handleMarketTypeAndParams("fetchOrdersByState",n,a);if("spot"===o)throw new r.BadRequest(this.id+" fetchOrdersByState() is not supported for "+o);return a.states=e,await this.fetchOrders(t,i,s,a)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();let s,a;void 0!==t&&(s=this.market(t),s.id),[a,i]=this.handleMarketTypeAndParams("cancelOrder",s,i);const[n,o]=this.handleMarginModeAndParams("cancelOrder",i);let d;if("spot"===a){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");const a={symbol:s.id},c=this.safeString(i,"clientOrderId");void 0!==c?(i=this.omit(o,"clientOrderId"),a.origClientOrderId=c):a.orderId=e;let h="spotPrivateDeleteOrder";if(void 0!==n){if("isolated"!==n)throw new r.BadRequest(this.id+" cancelOrder() does not support marginMode "+n+" for spot-margin trading");h="spotPrivateDeleteMarginOrder"}d=await this[h](this.extend(a,o))}else{let t=this.safeString(this.options,"cancelOrder","contractPrivatePostOrderCancel");t=this.safeString(o,"method",t);const i=await this[t]([e]);d=this.safeValue(i,"data");const s=this.safeValue(d,0),a=this.safeValue(s,"errorMsg","");if("success"!==a)throw new r.InvalidOrder(this.id+" cancelOrder() the order with id "+e+" cannot be cancelled: "+a)}return this.parseOrder(d,s)}async cancelOrders(e,t=undefined,i={}){await this.loadMarkets();const s=void 0!==t?this.market(t):void 0,[a]=this.handleMarketTypeAndParams("cancelOrders",s,i);if("spot"===a)throw new r.BadRequest(this.id+" cancelOrders() is not supported for "+a);{const t=await this.contractPrivatePostOrderCancel(e),i=this.safeValue(t,"data");return this.parseOrders(i,s)}}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i=void 0!==e?this.market(e):void 0,s={};let a;[a,t]=this.handleMarketTypeAndParams("cancelAllOrders",i,t);const[n,o]=this.handleMarginModeAndParams("cancelAllOrders",t);if("spot"===a){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument on spot");s.symbol=i.id;let t="spotPrivateDeleteOpenOrders";if(void 0!==n){if("isolated"!==n)throw new r.BadRequest(this.id+" cancelAllOrders() does not support marginMode "+n+" for spot-margin trading");t="spotPrivateDeleteMarginOpenOrders"}const a=await this[t](this.extend(s,o));return this.parseOrders(a,i)}{void 0!==e&&(s.symbol=i.id);let t=this.safeString(this.options,"cancelAllOrders","contractPrivatePostOrderCancelAll");t=this.safeString(o,"method",t);const r=await this[t](this.extend(s,o)),a=this.safeValue(r,"data",[]);return this.parseOrders(a,i)}}parseOrder(e,t=undefined){let i;i="string"==typeof e?e:this.safeString2(e,"orderId","id");const s=this.safeString(e,"symbol");t=this.safeMarket(s,t);const r=this.safeIntegerN(e,["time","createTime","transactTime"]);let a;const o=this.safeString(e,"feeCurrency");if(void 0!==o){const t=this.safeString(e,"takerFee"),i=this.safeString(e,"makerFee"),s=n.O.stringAdd(t,i);a={currency:o,cost:this.parseNumber(s)}}return this.safeOrder({id:i,clientOrderId:this.safeString(e,"clientOrderId"),timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:this.parseOrderStatus(this.safeString2(e,"status","state")),symbol:t.symbol,type:this.parseOrderType(this.safeString(e,"type")),timeInForce:this.parseOrderTimeInForce(this.safeString(e,"timeInForce")),side:this.parseOrderSide(this.safeString(e,"side")),price:this.safeNumber(e,"price"),stopPrice:this.safeNumber2(e,"stopPrice","triggerPrice"),triggerPrice:this.safeNumber2(e,"stopPrice","triggerPrice"),average:this.safeNumber(e,"dealAvgPrice"),amount:this.safeNumber2(e,"origQty","vol"),cost:this.safeNumber(e,"cummulativeQuoteQty"),filled:this.safeNumber2(e,"executedQty","dealVol"),remaining:void 0,fee:a,trades:void 0,info:e},t)}parseOrderSide(e){return this.safeString({BUY:"buy",SELL:"sell"},e,e)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit",LIMIT_MAKER:"limit"},e,e)}parseOrderStatus(e){return this.safeString({NEW:"open",FILLED:"closed",CANCELED:"canceled",PARTIALLY_FILLED:"open",PARTIALLY_CANCELED:"canceled",2:"open",3:"closed",4:"canceled"},e,e)}parseOrderTimeInForce(e){return this.safeString({GTC:"GTC",FOK:"FOK",IOC:"IOC"},e,e)}async fetchAccountHelper(e,t){if("spot"===e)return await this.spotPrivateGetAccount(t);if("swap"===e){const e=await this.contractPrivateGetAccountAssets(t);return this.safeValue(e,"data")}}async fetchAccounts(e={}){const[t,i]=this.handleMarketTypeAndParams("fetchAccounts",void 0,e);await this.loadMarkets();const s=await this.fetchAccountHelper(t,i),r=this.safeValue(s,"balances",[]),a=[];for(let e=0;e<r.length;e++){const t=r[e],i=this.safeString2(t,"asset","currency"),s=this.safeCurrencyCode(i);a.push({id:this.safeString(t,"id"),type:this.safeString(t,"type"),code:s,info:t})}return a}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.fetchAccountHelper("spot",e);let i=this.safeString(t,"makerCommission"),s=this.safeString(t,"takerCommission");i=n.O.stringDiv(i,"1000"),s=n.O.stringDiv(s,"1000");const r={};for(let e=0;e<this.symbols.length;e++){const a=this.symbols[e];r[a]={symbol:a,maker:this.parseNumber(i),taker:this.parseNumber(s),percentage:!0,tierBased:!1,info:t}}return r}parseBalance(e,t){let i;i="margin"===t?this.safeValue(e,"assets",[]):"swap"===t?this.safeValue(e,"data",[]):this.safeValue(e,"balances",[]);const s={info:e};if("margin"===t){for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeSymbol(r,void 0),n=this.safeValue(t,"baseAsset",{}),o=this.safeValue(t,"quoteAsset",{}),d=this.safeCurrencyCode(this.safeString(n,"asset")),c=this.safeCurrencyCode(this.safeString(o,"asset")),h={};h[d]=this.parseBalanceHelper(n),h[c]=this.parseBalanceHelper(o),s[a]=this.safeBalance(h)}return s}if("swap"===t){for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"availableBalance"),n.used=this.safeString(t,"frozenBalance"),s[a]=n}return this.safeBalance(s)}for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"free"),n.used=this.safeString(t,"locked"),s[a]=n}return this.safeBalance(s)}parseBalanceHelper(e){const t=this.account();t.used=this.safeString(e,"locked"),t.free=this.safeString(e,"free"),t.total=this.safeString(e,"totalAsset");const i=this.safeString(e,"borrowed"),s=this.safeString(e,"interest");return t.debt=n.O.stringAdd(i,s),t}async fetchBalance(e={}){let t;await this.loadMarkets();const i={};[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let s=this.getSupportedMapping(t,{spot:"spotPrivateGetAccount",swap:"contractPrivateGetAccountAssets",margin:"spotPrivateGetMarginIsolatedAccount"});const r=this.safeString(e,"marginMode"),a=this.safeValue(e,"margin",!1);if(void 0!==r||a||"margin"===t){let r;const a=this.safeString(e,"symbol");if(void 0===a){const t=this.safeValue(e,"symbols");void 0!==t&&(r=this.marketIds(t).join(","))}else r=this.market(a).id;this.checkRequiredArgument("fetchBalance",r,"symbol or symbols"),s="spotPrivateGetMarginIsolatedAccount",t="margin",i.symbols=r}e=this.omit(e,["margin","marginMode","symbol","symbols"]);const n=await this[s](this.extend(i,e));return this.parseBalance(n,t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),[n,o]=this.handleMarketTypeAndParams("fetchMyTrades",a,s),d={symbol:a.id};let c;if("spot"===n)void 0!==t&&(d.start_time=t),void 0!==i&&(d.limit=i),c=await this.spotPrivateGetMyTrades(this.extend(d,o));else{void 0!==t&&(d.start_time=t,void 0===this.safeInteger(s,"end_time")&&(d.end_time=this.sum(t,this.options.maxTimeTillEnd))),void 0!==i&&(d.page_size=i);const e=await this.contractPrivateGetOrderListOrderDeals(this.extend(d,o));c=this.safeValue(e,"data")}return this.parseTrades(c,a,t,i)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,a={}){await this.loadMarkets();const n={};let o;void 0!==t&&(o=this.market(t));const[d,c]=this.handleMarketTypeAndParams("fetchOrderTrades",o,a);let h;if("spot"===d){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrderTrades() requires a symbol argument");n.symbol=o.id,n.orderId=e,h=await this.spotPrivateGetMyTrades(this.extend(n,c))}else{n.order_id=e;const t=await this.contractPrivateGetOrderDealDetailsOrderId(this.extend(n,c));h=this.safeValue(t,"data")}return this.parseTrades(h,o,i,s,c)}async modifyMarginHelper(e,t,i,s={}){const a=this.safeInteger(s,"positionId");if(void 0===a)throw new r.ArgumentsRequired(this.id+" modifyMarginHelper() requires a positionId parameter");await this.loadMarkets();const n={positionId:a,amount:t,type:i};return await this.contractPrivatePostPositionChangeMargin(this.extend(n,s))}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"SUB",i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"ADD",i)}async setLeverage(e,t=undefined,i={}){await this.loadMarkets();const s={leverage:e},a=this.safeInteger(i,"positionId");if(void 0===a){const e=this.safeNumber(i,"openType"),a=this.safeNumber(i,"positionType"),n=void 0!==t?this.market(t):void 0;if(void 0===e||void 0===a||void 0===n)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a positionId parameter or a symbol argument with openType and positionType parameters, use openType 1 or 2 for isolated or cross margin respectively, use positionType 1 or 2 for long or short positions");s.openType=e,s.symbol=n.symbol,s.positionType=a}else s.positionId=a;return await this.contractPrivatePostPositionChangeLeverage(this.extend(s,i))}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.page_size=i);const n=await this.contractPrivateGetPositionFundingRecords(this.extend(a,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"resultList",[]),c=[];for(let t=0;t<d.length;t++){const i=d[t],s=this.safeInteger(i,"settleTime");c.push({info:i,symbol:e,code:void 0,timestamp:s,datetime:this.iso8601(s),id:this.safeNumber(i,"id"),amount:this.safeNumber(i,"funding")})}return c}parseFundingRate(e,t=undefined){const i=this.safeNumber(e,"fundingRate"),s=this.safeInteger(e,"nextSettleTime"),r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.safeInteger(e,"timestamp");return{info:e,symbol:a,markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:n,datetime:this.iso8601(n),fundingRate:i,fundingTimestamp:s,fundingDatetime:this.iso8601(s),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.contractPublicGetFundingRateSymbol(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseFundingRate(a,i)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.page_size=i);const o=await this.contractPublicGetFundingRateHistory(this.extend(n,s)),d=this.safeValue(o,"data"),c=this.safeValue(d,"resultList",[]),h=[];for(let e=0;e<c.length;e++){const t=c[e],i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeInteger(t,"settleTime");h.push({info:t,symbol:s,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:r,datetime:this.iso8601(r)})}const u=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(u,a.symbol,t,i)}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.contractPublicGetDetail(t),s=this.safeValue(i,"data");return this.parseLeverageTiers(s,e,"symbol")}parseMarketLeverageTiers(e,t=undefined){let i=this.safeString(e,"maintenanceMarginRate"),s=this.safeString(e,"initialMarginRate");const r=this.safeString(e,"maxVol"),a=this.safeString(e,"riskIncrVol"),o=this.safeString(e,"riskIncrMmr"),d=this.safeString(e,"riskIncrImr");let c="0";const h=[],u=this.safeString(e,"quoteCoin");for(;n.O.stringLt(c,r);){const t=n.O.stringAdd(c,a);h.push({tier:this.parseNumber(n.O.stringDiv(t,a)),currency:this.safeCurrencyCode(u),notionalFloor:this.parseNumber(c),notionalCap:this.parseNumber(t),maintenanceMarginRate:this.parseNumber(i),maxLeverage:this.parseNumber(n.O.stringDiv("1",s)),info:e}),s=n.O.stringAdd(s,d),i=n.O.stringAdd(i,o),c=t}return h}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeCurrencyCode(void 0,t),r=this.safeString(e,"chain"),a=this.safeNetwork(r);return this.checkAddress(i),{currency:s,address:i,tag:void 0,network:a,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const i={coin:this.currency(e).id},s=await this.spotPrivateGetCapitalDepositAddress(this.extend(i,t)),r=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"coin"),a=this.currency(i),n=this.safeString(t,"network"),o=this.safeNetwork(n),d=this.safeString(t,"address",void 0),c=this.safeString2(t,"tag","memo",void 0);r.push({currency:a.id,network:o,address:d,tag:c})}return r}async fetchDepositAddress(e,t={}){const i=this.safeStringUpper(t,"network");t=this.omit(t,"network");const s=await this.fetchDepositAddressesByNetwork(e,t);if(void 0!==i)for(let e=0;e<s.length;e++){const t=s[e];if(i===this.safeStringUpper(t,"network"))return t}const a=this.safeValue(s,0);if(void 0===a)throw new r.InvalidAddress(this.id+" fetchDepositAddress() cannot find a deposit address for "+e+", consider creating one using the MEXC platform");return a}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires a currency code argument");await this.loadMarkets();const a={};let n;const o=this.safeString(s,"network");if(s=this.omit(s,"network"),void 0===o)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires a network parameter when the currency is specified");if(n=this.currency(e),a.coin=n.id+"-"+o,void 0!==t&&(a.startTime=t),void 0!==i){if(i>1e3)throw new r.ExchangeError("This exchange supports a maximum limit of 1000");a.limit=i}const d=await this.spotPrivateGetCapitalDepositHisrec(this.extend(a,s));return this.parseTransactions(d,n,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchWithdrawals() requires a currency code argument");await this.loadMarkets();const a={},n=this.currency(e);if(a.coin=n.id,void 0!==t&&(a.startTime=t),void 0!==i){if(i>1e3)throw new r.ExchangeError("This exchange supports a maximum limit of 1000");a.limit=i}const o=await this.spotPrivateGetCapitalWithdrawHistory(this.extend(a,s));return this.parseTransactions(o,n,t,i)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=void 0===i?"deposit":"withdrawal",r=this.safeInteger2(e,"insertTime","applyTime"),a=this.safeString(e,"currency"),o=this.safeString(e,"network"),d=this.safeCurrencyCode(a,t),c=this.parseTransactionStatus(this.safeString(e,"status"));let h=this.safeString(e,"amount");const u=this.safeString(e,"address"),l=this.safeString(e,"txId");let p;const f=this.safeString(e,"transactionFee");return void 0!==f&&(p={cost:this.parseNumber(f),currency:d}),"withdrawal"===s&&(h=n.O.stringSub(h,f)),{info:e,id:i,txid:l,timestamp:r,datetime:this.iso8601(r),network:o,address:u,addressTo:u,addressFrom:void 0,tag:this.safeString(e,"memo"),tagTo:void 0,tagFrom:void 0,type:s,amount:this.parseNumber(h),currency:d,status:c,updated:void 0,fee:p}}parseTransactionStatus(e){return this.safeString({WAIT:"pending",WAIT_PACKAGING:"pending",SUCCESS:"ok"},e,e)}async fetchPosition(e,t={}){await this.loadMarkets();const i={symbol:this.market(e).id},s=await this.fetchPositions(void 0,this.extend(i,t));return this.safeValue(s,0)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.contractPrivateGetPositionOpenPositions(t),s=this.safeValue(i,"data",[]);return this.parsePositions(s,e)}parsePosition(e,t=undefined){const i=(t=this.safeMarket(this.safeString(e,"symbol"),t)).symbol,s=this.safeString(e,"holdVol"),r=this.safeNumber(e,"openAvgPrice"),a=this.safeString(e,"im"),n="1"===this.safeString(e,"positionType")?"long":"short",o="1"===this.safeString(e,"margin_mode")?"isolated":"cross",d=this.safeNumber(e,"leverage"),c=this.safeNumber(e,"liquidatePrice"),h=this.safeNumber(e,"updateTime");return{info:e,id:void 0,symbol:i,contracts:this.parseNumber(s),contractSize:void 0,entryPrice:r,collateral:void 0,side:n,unrealizedProfit:void 0,leverage:this.parseNumber(d),percentage:void 0,marginType:o,notional:void 0,markPrice:void 0,liquidationPrice:c,initialMargin:this.parseNumber(a),initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,marginRatio:void 0,timestamp:h,datetime:this.iso8601(h)}}async fetchTransfer(e,t=undefined,i=undefined,s={}){const[a,n]=this.handleMarketTypeAndParams("fetchTransfer",void 0,s);if(await this.loadMarkets(),"spot"===a){const t={transact_id:e},i=await this.spot2PrivateGetAssetInternalTransferInfo(this.extend(t,n)),s=this.safeValue(i,"data",{});return this.parseTransfer(s)}if("swap"===a)throw new r.BadRequest(this.id+" fetchTransfer() is not supported for "+a)}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){const[a,n]=this.handleMarketTypeAndParams("fetchTransfers",void 0,s);await this.loadMarkets();const o={};let d,c;if(void 0!==e&&(d=this.currency(e),o.currency=d.id),"spot"===a){if(void 0!==t&&(o.start_time=t),void 0!==i){if(i>50)throw new r.ExchangeError("This exchange supports a maximum limit of 50");o["page-size"]=i}const e=await this.spot2PrivateGetAssetInternalTransferRecord(this.extend(o,n)),s=this.safeValue(e,"data",{});c=this.safeValue(s,"result_list",[])}else if("swap"===a){void 0!==i&&(o.page_size=i);const e=await this.contractPrivateGetAccountTransferRecord(this.extend(o,n)),t=this.safeValue(e,"data");c=this.safeValue(t,"resultList")}return this.parseTransfers(c,d,t,i)}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.currency(e),o={spot:"SPOT",swap:"FUTURES",margin:"ISOLATED_MARGIN"},d=this.safeString(o,i),c=this.safeString(o,s);if(void 0===d){const e=Object.keys(o);throw new r.ExchangeError(this.id+" fromAccount must be one of "+e.join(", "))}if(void 0===c){const e=Object.keys(o);throw new r.ExchangeError(this.id+" toAccount must be one of "+e.join(", "))}const h={asset:n.id,amount:t,fromAccountType:d,toAccountType:c};if("ISOLATED_MARGIN"===d||"ISOLATED_MARGIN"===c){const e=this.safeString(a,"symbol");if(a=this.omit(a,"symbol"),void 0===e)throw new r.ArgumentsRequired(this.id+" transfer() requires a symbol argument for isolated margin");const t=this.market(e);h.symbol=t.id}const u=await this.spotPrivatePostCapitalTransfer(this.extend(h,a)),l=this.parseTransfer(u,n);return this.extend(l,{amount:t,fromAccount:i,toAccount:s})}parseTransfer(e,t=undefined){const i=this.safeString(e,"currency"),s=this.safeStringN(e,["transact_id","txid","tranId"]),r=this.safeInteger(e,"createTime"),a=void 0!==r?this.iso8601(r):void 0,n=this.safeString(e,"type");let o,d;return void 0!==n?(o="IN"===n?"MAIN":"CONTRACT",d="IN"===n?"CONTRACT":"MAIN"):(o=this.safeString(e,"from"),d=this.safeString(e,"to")),{info:e,id:s,timestamp:r,datetime:a,currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"amount"),fromAccount:this.parseAccountId(o),toAccount:this.parseAccountId(d),status:this.parseTransferStatus(this.safeString2(e,"transact_state","state"))}}parseAccountId(e){return this.safeString({MAIN:"spot",CONTRACT:"swap"},e,e)}parseTransferStatus(e){return this.safeString({SUCCESS:"ok",FAILED:"failed",WAIT:"pending"},e,e)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r);const a=this.safeValue(this.options,"networks",{});let n=this.safeStringUpper2(r,"network","chain");n=this.safeString(a,n,n),this.checkAddress(i),await this.loadMarkets();const o=this.currency(e),d={coin:o.id,address:i,amount:t};void 0!==s&&(d.memo=s),void 0!==n&&(d.network=n,r=this.omit(r,"network"));const c=await this.spotPrivatePostCapitalWithdrawApply(this.extend(d,r));return this.parseTransaction(c,o)}async setPositionMode(e,t=undefined,i={}){const s={positionMode:e?1:2};return await this.contractPrivatePostPositionChangePositionMode(this.extend(s,i))}async fetchPositionMode(e=undefined,t={}){const i=await this.contractPrivateGetPositionPositionMode(t);return{info:i,hedged:1===this.safeInteger(i,"data")}}async borrowMargin(e,t,i=undefined,s={}){if(await this.loadMarkets(),void 0===i)throw new r.ArgumentsRequired(this.id+" borrowMargin() requires a symbol argument for isolated margin");const a=this.market(i),n=this.currency(e),o={asset:n.id,amount:this.currencyToPrecision(e,t),symbol:a.id},d=await this.spotPrivatePostMarginLoan(this.extend(o,s)),c=this.parseMarginLoan(d,n);return this.extend(c,{amount:t,symbol:i})}async repayMargin(e,t,i=undefined,s={}){if(await this.loadMarkets(),void 0===i)throw new r.ArgumentsRequired(this.id+" repayMargin() requires a symbol argument for isolated margin");const a=this.safeString2(s,"id","borrowId");if(void 0===a)throw new r.ArgumentsRequired(this.id+" repayMargin() requires a borrowId argument in the params");const n=this.market(i),o=this.currency(e),d={asset:o.id,amount:this.currencyToPrecision(e,t),borrowId:a,symbol:n.id},c=await this.spotPrivatePostMarginRepay(this.extend(d,s)),h=this.parseMarginLoan(c,o);return this.extend(h,{amount:t,symbol:i})}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=await this.spotPrivateGetCapitalConfigGetall(t);return this.parseTransactionFees(i,e)}parseTransactionFees(e,t=undefined){const i={};for(let s=0;s<e.length;s++){const r=e[s],a=this.safeString(r,"coin"),n=this.safeCurrency(a),o=this.safeString(n,"code");(void 0===t||this.inArray(o,t))&&(i[o]=this.parseTransactionFee(r,n))}return{withdraw:i,deposit:{},info:e}}parseTransactionFee(e,t=undefined){const i=this.safeValue(e,"networkList",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"network"),a=this.safeString(this.options.networks,r,r),n=this.safeNumber(t,"withdrawFee");s[a]=n}return s}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.spotPrivateGetCapitalConfigGetall(t);return this.parseDepositWithdrawFees(i,e,"coin")}parseDepositWithdrawFee(e,t=undefined){const i=this.safeValue(e,"networkList",[]),s=this.depositWithdrawFee(e);for(let e=0;e<i.length;e++){const r=i[e],a=this.safeString(r,"network"),n=this.networkIdToCode(a,this.safeString(t,"code"));s.networks[n]={withdraw:{fee:this.safeNumber(r,"withdrawFee"),percentage:void 0},deposit:{fee:void 0,percentage:void 0}}}return this.assignDefaultDepositWithdrawFees(s)}parseMarginLoan(e,t=undefined){return{id:this.safeString(e,"tranId"),currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}handleMarginModeAndParams(e,t={},i=undefined){const s=this.safeString(this.options,"defaultType"),r=this.safeValue(t,"margin",!1);let a;return[a,t]=super.handleMarginModeAndParams(e,t,i),"margin"!==s&&!0!==r||(a="isolated"),[a,t]}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const[n,d]=t;let c;if([e,s]=this.resolvePath(e,s),"spot"===n){c=this.urls.api[n][d]+"/api/"+this.version+"/"+e;let t="";"private"===d&&(s.timestamp=this.milliseconds(),s.recvWindow=this.safeInteger(this.options,"recvWindow",5e3)),Object.keys(s).length&&(t=this.urlencode(s),c+="?"+t),"private"===d&&(this.checkRequiredCredentials(),c+="&signature="+this.hmac(this.encode(t),this.encode(this.secret),o.J),r={"X-MEXC-APIKEY":this.apiKey,source:this.safeString(this.options,"broker","CCXT")}),"POST"===i&&(r["Content-Type"]="application/json")}else if("contract"===n||"spot2"===n)if(c=this.urls.api[n][d]+"/"+this.implodeParams(e,s),s=this.omit(s,this.extractParams(e)),"public"===d)Object.keys(s).length&&(c+="?"+this.urlencode(s));else{this.checkRequiredCredentials();const e=this.milliseconds().toString();let t="";r={ApiKey:this.apiKey,"Request-Time":e,"Content-Type":"application/json",source:this.safeString(this.options,"broker","CCXT")},"POST"===i?(t=this.json(s),a=t):(s=this.keysort(s),Object.keys(s).length&&(t+=this.urlencode(s),c+="?"+t)),t=this.apiKey+e+t;const n=this.hmac(this.encode(t),this.encode(this.secret),o.J);r.Signature=n}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;if(!0===this.safeValue(o,"success",!1))return;const h=this.safeString(o,"code",void 0);if(void 0!==h&&"200"!==h&&"0"!==h){const e=this.id+" "+n;throw this.throwBroadlyMatchedException(this.exceptions.broad,n,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r.ExchangeError(e)}}}},4531:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(5491),r=i(6689),a=i(9292),n=i(2194),o=i(1372),d=i(2523);class c extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"ndax",name:"NDAX",countries:["CA"],rateLimit:1e3,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,createReduceOnlyOrder:!1,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"604800","1M":"2419200","4M":"9676800"},urls:{logo:"https://user-images.githubusercontent.com/1294454/108623144-67a3ef00-744e-11eb-8140-75c6b851e945.jpg",test:{public:"https://ndaxmarginstaging.cdnhop.net:8443/AP",private:"https://ndaxmarginstaging.cdnhop.net:8443/AP"},api:{public:"https://api.ndax.io:8443/AP",private:"https://api.ndax.io:8443/AP"},www:"https://ndax.io",doc:["https://apidoc.ndax.io/"],fees:"https://ndax.io/fees",referral:"https://one.ndax.io/bfQiSL"},api:{public:{get:{Activate2FA:1,Authenticate2FA:1,AuthenticateUser:1,GetL2Snapshot:1,GetLevel1:1,GetValidate2FARequiredEndpoints:1,LogOut:1,GetTickerHistory:1,GetProduct:1,GetProducts:1,GetInstrument:1,GetInstruments:1,Ping:1,trades:1,GetLastTrades:1,SubscribeLevel1:1,SubscribeLevel2:1,SubscribeTicker:1,SubscribeTrades:1,SubscribeBlockTrades:1,UnsubscribeBlockTrades:1,UnsubscribeLevel1:1,UnsubscribeLevel2:1,UnsubscribeTicker:1,UnsubscribeTrades:1,Authenticate:1}},private:{get:{GetUserAccountInfos:1,GetUserAccounts:1,GetUserAffiliateCount:1,GetUserAffiliateTag:1,GetUserConfig:1,GetAllUnredactedUserConfigsForUser:1,GetUnredactedUserConfigByKey:1,GetUserDevices:1,GetUserReportTickets:1,GetUserReportWriterResultRecords:1,GetAccountInfo:1,GetAccountPositions:1,GetAllAccountConfigs:1,GetTreasuryProductsForAccount:1,GetAccountTrades:1,GetAccountTransactions:1,GetOpenTradeReports:1,GetAllOpenTradeReports:1,GetTradesHistory:1,GetOpenOrders:1,GetOpenQuotes:1,GetOrderFee:1,GetOrderHistory:1,GetOrdersHistory:1,GetOrderStatus:1,GetOmsFeeTiers:1,GetAccountDepositTransactions:1,GetAccountWithdrawTransactions:1,GetAllDepositRequestInfoTemplates:1,GetDepositInfo:1,GetDepositRequestInfoTemplate:1,GetDeposits:1,GetDepositTicket:1,GetDepositTickets:1,GetOMSWithdrawFees:1,GetWithdrawFee:1,GetWithdraws:1,GetWithdrawTemplate:1,GetWithdrawTemplateTypes:1,GetWithdrawTicket:1,GetWithdrawTickets:1},post:{AddUserAffiliateTag:1,CancelUserReport:1,RegisterNewDevice:1,SubscribeAccountEvents:1,UpdateUserAffiliateTag:1,GenerateTradeActivityReport:1,GenerateTransactionActivityReport:1,GenerateTreasuryActivityReport:1,ScheduleTradeActivityReport:1,ScheduleTransactionActivityReport:1,ScheduleTreasuryActivityReport:1,CancelAllOrders:1,CancelOrder:1,CancelQuote:1,CancelReplaceOrder:1,CreateQuote:1,ModifyOrder:1,SendOrder:1,SubmitBlockTrade:1,UpdateQuote:1,CancelWithdraw:1,CreateDepositTicket:1,CreateWithdrawTicket:1,SubmitDepositTicketComment:1,SubmitWithdrawTicketComment:1,GetOrderHistoryByOrderId:1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.0025")}},requiredCredentials:{apiKey:!0,secret:!0,uid:!0,login:!0,password:!0},precisionMode:a.sh,exceptions:{exact:{Not_Enough_Funds:r.InsufficientFunds,"Server Error":r.ExchangeError,"Resource Not Found":r.OrderNotFound},broad:{"Invalid InstrumentId":r.BadSymbol,"This endpoint requires 2FACode along with the payload":r.AuthenticationError}},options:{omsId:1,orderTypes:{Market:1,Limit:2,StopMarket:3,StopLimit:4,TrailingStopMarket:5,TrailingStopLimit:6,BlockTrade:7}}})}async signIn(e={}){if(this.checkRequiredCredentials(),void 0===this.login||void 0===this.password)throw new r.AuthenticationError(this.id+" signIn() requires exchange.login, exchange.password");let t={grant_type:"client_credentials"};const i=await this.publicGetAuthenticate(this.extend(t,e));let s=this.safeString(i,"SessionToken");if(void 0!==s)return this.options.sessionToken=s,i;const a=this.safeString(i,"Pending2FaToken");if(void 0!==a){if(void 0===this.twofa)throw new r.AuthenticationError(this.id+" signIn() requires exchange.twofa credentials");this.options.pending2faToken=a,t={Code:(0,d.Z)(this.twofa)};const i=await this.publicGetAuthenticate2FA(this.extend(t,e));return s=this.safeString(i,"SessionToken"),this.options.sessionToken=s,i}return i}async fetchCurrencies(e={}){const t={omsId:this.safeInteger(this.options,"omsId",1)},i=await this.publicGetGetProducts(this.extend(t,e)),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"ProductId"),a=this.safeString(t,"ProductFullName"),n=this.safeString(t,"ProductType"),o=this.safeCurrencyCode(this.safeString(t,"Product")),d=!this.safeValue(t,"IsDisabled");s[o]={id:r,name:a,code:o,type:n,precision:this.safeNumber(t,"TickSize"),info:t,active:d,deposit:void 0,withdraw:void 0,fee:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return s}async fetchMarkets(e={}){const t={omsId:this.safeInteger(this.options,"omsId",1)},i=await this.publicGetGetInstruments(this.extend(t,e)),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"InstrumentId"),a=this.safeString(t,"Product1"),n=this.safeString(t,"Product2"),o=this.safeCurrencyCode(this.safeString(t,"Product1Symbol")),d=this.safeCurrencyCode(this.safeString(t,"Product2Symbol")),c=this.safeString(t,"SessionStatus"),h=this.safeValue(t,"IsDisable"),u="Running"===c;s.push({id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:u&&!h,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"QuantityIncrement"),price:this.safeNumber(t,"PriceIncrement")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"MinimumQuantity"),max:void 0},price:{min:this.safeNumber(t,"MinimumPrice"),max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}parseOrderBook(e,t,i=undefined,s="bids",r="asks",a=6,n=8){let o;const d={symbol:t,bids:[],asks:[],timestamp:void 0,datetime:void 0,nonce:void 0};for(let t=0;t<e.length;t++){const c=e[t];if(void 0===i)i=this.safeInteger(c,2);else{const e=this.safeInteger(c,2);i=Math.max(i,e)}if(void 0===o)o=this.safeInteger(c,0);else{const e=this.safeInteger(c,0);o=Math.max(o,e)}const h=this.parseBidAsk(c,a,n);d[this.safeInteger(c,9)?r:s].push(h)}return d.bids=this.sortBy(d.bids,0,!0),d.asks=this.sortBy(d.asks,0),d.timestamp=i,d.datetime=this.iso8601(i),d.nonce=o,d}async fetchOrderBook(e,t=undefined,i={}){const s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),t=void 0===t?100:t;const r={omsId:s,InstrumentId:this.market(e).id,Depth:t},a=await this.publicGetGetL2Snapshot(this.extend(r,i));return this.parseOrderBook(a,e)}parseTicker(e,t=undefined){const i=this.safeInteger(e,"TimeStamp"),s=this.safeString(e,"InstrumentId");t=this.safeMarket(s,t);const r=this.safeSymbol(s,t),a=this.safeString(e,"LastTradedPx"),n=this.safeString(e,"Rolling24HrPxChangePercent"),o=this.safeString(e,"Rolling24HrPxChange"),d=this.safeString(e,"SessionOpen"),c=this.safeString(e,"Rolling24HrVolume"),h=this.safeString(e,"Rolling24HrNotional");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"SessionHigh"),low:this.safeString(e,"SessionLow"),bid:this.safeString(e,"BestBid"),bidVolume:void 0,ask:this.safeString(e,"BestOffer"),askVolume:void 0,vwap:void 0,open:d,close:a,last:a,previousClose:void 0,change:o,percentage:n,average:void 0,baseVolume:c,quoteVolume:h,info:e},t)}async fetchTicker(e,t={}){const i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const s=this.market(e),r={omsId:i,InstrumentId:s.id},a=await this.publicGetGetLevel1(this.extend(r,t));return this.parseTicker(a,s)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,3),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){const a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const n=this.market(e),o={omsId:a,InstrumentId:n.id,Interval:this.safeString(this.timeframes,t,t)},d=this.parseTimeframe(t),c=this.milliseconds();void 0===i?void 0!==s&&(o.FromDate=this.ymdhms(c-d*s*1e3),o.ToDate=this.ymdhms(c)):(o.FromDate=this.ymdhms(i),o.ToDate=void 0===s?this.ymdhms(c):this.ymdhms(this.sum(i,d*s*1e3)));const h=await this.publicGetGetTickerHistory(this.extend(o,r));return this.parseOHLCVs(h,n,t,i,s)}parseTrade(e,t=undefined){let i,s,r,a,n,o,d,c,h,u,l;if(Array.isArray(e))i=this.safeString(e,3),s=this.safeString(e,2),a=this.safeInteger(e,6),n=this.safeString(e,0),o=this.safeString(e,1),d=this.safeValue(e,8)?"sell":"buy",c=this.safeString(e,4);else{a=this.safeInteger2(e,"TradeTimeMS","ReceiveTime"),n=this.safeString(e,"TradeId"),c=this.safeString2(e,"OrderId","OrigOrderId"),o=this.safeString2(e,"InstrumentId","Instrument"),i=this.safeString(e,"Price"),s=this.safeString(e,"Quantity"),r=this.safeString2(e,"Value","GrossValueExecuted"),h=this.safeStringLower(e,"MakerTaker"),d=this.safeStringLower(e,"Side"),l=this.safeStringLower(e,"OrderType");const t=this.safeString(e,"Fee");if(void 0!==t){const i=this.safeString(e,"FeeProductId");u={cost:t,currency:this.safeCurrencyCode(i)}}}const p=this.safeSymbol(o,t);return this.safeTrade({info:e,id:n,symbol:p,timestamp:a,datetime:this.iso8601(a),order:c,type:l,side:d,takerOrMaker:h,price:i,amount:s,cost:r,fee:u},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const a=this.market(e),n={omsId:r,InstrumentId:a.id};void 0!==i&&(n.Count=i);const o=await this.publicGetGetLastTrades(this.extend(n,s));return this.parseTrades(o,a,t,i)}async fetchAccounts(e={}){if(!this.login)throw new r.AuthenticationError(this.id+" fetchAccounts() requires exchange.login email credential");const t=this.safeInteger(this.options,"omsId",1);this.checkRequiredCredentials();const i={omsId:t,UserId:this.uid,UserName:this.login},s=await this.privateGetGetUserAccounts(this.extend(i,e)),a=[];for(let e=0;e<s.length;e++){const t=this.safeString(s,e);a.push({id:t,type:void 0,currency:void 0,info:t})}return a}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"ProductId");if(r in this.currencies_by_id){const e=this.safeCurrencyCode(r),i=this.account();i.total=this.safeString(s,"Amount"),i.used=this.safeString(s,"Hold"),t[e]=i}}return this.safeBalance(t)}async fetchBalance(e={}){const t=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const i=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),s=this.safeInteger2(e,"accountId","AccountId",i);e=this.omit(e,["accountId","AccountId"]);const r={omsId:t,AccountId:s},a=await this.privateGetGetAccountPositions(this.extend(r,e));return this.parseBalance(a)}parseLedgerEntryType(e){return this.safeString({Trade:"trade",Deposit:"transaction",Withdraw:"transaction",Transfer:"transfer",OrderHold:"trade",WithdrawHold:"transaction",DepositHold:"transaction",MarginHold:"trade",ManualHold:"trade",ManualEntry:"trade",MarginAcquisition:"trade",MarginRelinquish:"trade",MarginQuoteHold:"trade"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"ProductId"),s=this.safeString(e,"CR"),r=this.safeString(e,"DR");let a,o,d;n.O.stringLt(s,"0")?(a=s,o="in"):n.O.stringLt(r,"0")&&(a=r,o="out");const c=this.safeString(e,"Balance");"out"===o?d=n.O.stringAdd(c,a):"in"===o&&(d=n.O.stringMax("0",n.O.stringSub(c,a)));const h=this.safeInteger(e,"TimeStamp");return{info:e,id:this.safeString(e,"TransactionId"),direction:o,account:this.safeString(e,"AccountId"),referenceId:this.safeString(e,"ReferenceId"),referenceAccount:this.safeString(e,"Counterparty"),type:this.parseLedgerEntryType(this.safeString(e,"ReferenceType")),currency:this.safeCurrencyCode(i,t),amount:this.parseNumber(a),before:this.parseNumber(d),after:this.parseNumber(c),status:"ok",timestamp:h,datetime:this.iso8601(h),fee:void 0}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(s,"accountId","AccountId",a);s=this.omit(s,["accountId","AccountId"]);const o={omsId:r,AccountId:n};void 0!==i&&(o.Depth=i);const d=await this.privateGetGetAccountTransactions(this.extend(o,s));let c;return void 0!==e&&(c=this.currency(e)),this.parseLedger(d,c,t,i)}parseOrderStatus(e){return this.safeString({Accepted:"open",Rejected:"rejected",Working:"open",Canceled:"canceled",Expired:"expired",FullyExecuted:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"ReceiveTime"),s=this.safeString(e,"Instrument");return this.safeOrder({id:this.safeString2(e,"ReplacementOrderId","OrderId"),clientOrderId:this.safeString2(e,"ReplacementClOrdId","ClientOrderId"),info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:this.safeInteger(e,"LastUpdatedTime"),status:this.parseOrderStatus(this.safeString(e,"OrderState")),symbol:this.safeSymbol(s,t),type:this.safeStringLower(e,"OrderType"),timeInForce:void 0,postOnly:void 0,side:this.safeStringLower(e,"Side"),price:this.safeString(e,"Price"),stopPrice:this.parseNumber(this.omitZero(this.safeString(e,"StopPrice"))),cost:this.safeString(e,"GrossValueExecuted"),amount:this.safeString(e,"OrigQuantity"),filled:this.safeString(e,"QuantityExecuted"),average:this.safeString(e,"AvgPrice"),remaining:void 0,fee:void 0,trades:void 0},t)}async createOrder(e,t,i,s,r=undefined,a={}){const n=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const o=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),d=this.safeInteger2(a,"accountId","AccountId",o),c=this.safeInteger2(a,"ClientOrderId","clientOrderId");a=this.omit(a,["accountId","AccountId","clientOrderId","ClientOrderId"]);const h=this.market(e),u="buy"===i?0:1,l={InstrumentId:parseInt(h.id),omsId:n,AccountId:d,TimeInForce:1,Side:u,Quantity:parseFloat(this.amountToPrecision(e,s)),OrderType:this.safeInteger(this.options.orderTypes,this.capitalize(t))};void 0!==r&&(l.LimitPrice=parseFloat(this.priceToPrecision(e,r))),void 0!==c&&(l.ClientOrderId=c);const p=await this.privatePostSendOrder(this.extend(l,a));return this.parseOrder(p,h)}async editOrder(e,t,i,s,r,a=undefined,n={}){const o=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const d=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),c=this.safeInteger2(n,"accountId","AccountId",d),h=this.safeInteger2(n,"ClientOrderId","clientOrderId");n=this.omit(n,["accountId","AccountId","clientOrderId","ClientOrderId"]);const u=this.market(t),l="buy"===s?0:1,p={OrderIdToReplace:parseInt(e),InstrumentId:parseInt(u.id),omsId:o,AccountId:c,TimeInForce:1,Side:l,Quantity:parseFloat(this.amountToPrecision(t,r)),OrderType:this.safeInteger(this.options.orderTypes,this.capitalize(i))};void 0!==a&&(p.LimitPrice=parseFloat(this.priceToPrecision(t,a))),void 0!==h&&(p.ClientOrderId=h);const f=await this.privatePostCancelReplaceOrder(this.extend(p,n));return this.parseOrder(f,u)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(s,"accountId","AccountId",a);s=this.omit(s,["accountId","AccountId"]);const o={omsId:r,AccountId:n};let d;void 0!==e&&(d=this.market(e),o.InstrumentId=d.id),void 0!==t&&(o.StartTimeStamp=this.parseToInt(t/1e3)),void 0!==i&&(o.Depth=i);const c=await this.privateGetGetTradesHistory(this.extend(o,s));return this.parseTrades(c,d,t,i)}async cancelAllOrders(e=undefined,t={}){const i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const s=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),r=this.safeInteger2(t,"accountId","AccountId",s);t=this.omit(t,["accountId","AccountId"]);const a={omsId:i,AccountId:r};if(void 0!==e){const t=this.market(e);a.IntrumentId=t.id}return await this.privatePostCancelAllOrders(this.extend(a,t))}async cancelOrder(e,t=undefined,i={}){const s=this.safeInteger(this.options,"omsId",1);let r;await this.loadMarkets(),await this.loadAccounts(),void 0!==t&&(r=this.market(t));const a={omsId:s},n=this.safeInteger2(i,"clientOrderId","ClOrderId");void 0!==n?a.ClOrderId=n:a.OrderId=parseInt(e),i=this.omit(i,["clientOrderId","ClOrderId"]);const o=await this.privatePostCancelOrder(this.extend(a,i)),d=this.parseOrder(o,r);return this.extend(d,{id:e,clientOrderId:n})}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(s,"accountId","AccountId",a);let o;s=this.omit(s,["accountId","AccountId"]),void 0!==e&&(o=this.market(e));const d={omsId:r,AccountId:n},c=await this.privateGetGetOpenOrders(this.extend(d,s));return this.parseOrders(c,o,t,i)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(s,"accountId","AccountId",a);s=this.omit(s,["accountId","AccountId"]);const o={omsId:r,AccountId:n};let d;void 0!==e&&(d=this.market(e),o.InstrumentId=d.id),void 0!==t&&(o.StartTimeStamp=this.parseToInt(t/1e3)),void 0!==i&&(o.Depth=i);const c=await this.privateGetGetOrdersHistory(this.extend(o,s));return this.parseOrders(c,d,t,i)}async fetchOrder(e,t=undefined,i={}){const s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const r=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),a=this.safeInteger2(i,"accountId","AccountId",r);let n;i=this.omit(i,["accountId","AccountId"]),void 0!==t&&(n=this.market(t));const o={omsId:s,AccountId:a,OrderId:parseInt(e)},d=await this.privateGetGetOrderStatus(this.extend(o,i));return this.parseOrder(d,n)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){const a=this.safeInteger(this.options,"omsId",1);let n;await this.loadMarkets(),await this.loadAccounts(),void 0!==t&&(n=this.market(t));const o={OMSId:this.parseToInt(a),OrderId:parseInt(e)},d=await this.privatePostGetOrderHistoryByOrderId(this.extend(o,r)),c=this.groupBy(d,"ChangeReason"),h=this.safeValue(c,"Trade",[]);return this.parseTrades(h,n,i,s)}async fetchDepositAddress(e,t={}){const i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const s=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),r=this.safeInteger2(t,"accountId","AccountId",s);t=this.omit(t,["accountId","AccountId"]);const a=this.currency(e),n={omsId:i,AccountId:r,ProductId:a.id,GenerateNewKey:!1},o=await this.privateGetGetDepositInfo(this.extend(n,t));return this.parseDepositAddress(o,a)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"DepositInfo"),s=JSON.parse(i),r=s.length,a=this.safeString(s,r-1).split("?memo="),n=this.safeString(a,0),o=this.safeString(a,1);let d;return void 0!==t&&(d=t.code),this.checkAddress(n),{currency:d,address:n,tag:o,network:void 0,info:e}}async createDepositAddress(e,t={}){return await this.fetchDepositAddress(e,this.extend({GenerateNewKey:!0},t))}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(s,"accountId","AccountId",a);let o;s=this.omit(s,["accountId","AccountId"]),void 0!==e&&(o=this.currency(e));const d={omsId:r,AccountId:n},c=await this.privateGetGetDeposits(this.extend(d,s));return"string"==typeof c?this.parseTransactions(JSON.parse(c),o,t,i):this.parseTransactions(c,o,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const a=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),n=this.safeInteger2(s,"accountId","AccountId",a);let o;s=this.omit(s,["accountId","AccountId"]),void 0!==e&&(o=this.currency(e));const d={omsId:r,AccountId:n},c=await this.privateGetGetWithdraws(this.extend(d,s));return this.parseTransactions(c,o,t,i)}parseTransactionStatusByType(e,t=undefined){const i=this.safeValue({deposit:{New:"pending",AdminProcessing:"pending",Accepted:"pending",Rejected:"rejected",SystemProcessing:"pending",FullyProcessed:"ok",Failed:"failed",Pending:"pending",Confirmed:"pending",AmlProcessing:"pending",AmlAccepted:"pending",AmlRejected:"rejected",AmlFailed:"failed",LimitsAccepted:"pending",LimitsRejected:"rejected"},withdrawal:{New:"pending",AdminProcessing:"pending",Accepted:"pending",Rejected:"rejected",SystemProcessing:"pending",FullyProcessed:"ok",Failed:"failed",Pending:"pending",Pending2Fa:"pending",AutoAccepted:"pending",Delayed:"pending",UserCanceled:"canceled",AdminCanceled:"canceled",AmlProcessing:"pending",AmlAccepted:"pending",AmlRejected:"rejected",AmlFailed:"failed",LimitsAccepted:"pending",LimitsRejected:"rejected",Submitted:"pending",Confirmed:"pending",ManuallyConfirmed:"pending",Confirmed2Fa:"pending"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t=undefined){let i;const s=this.safeString(e,"ProductId"),r=this.safeCurrencyCode(s,t);let a;"DepositId"in e?(i=this.safeString(e,"DepositId"),a="deposit"):"WithdrawId"in e&&(i=this.safeString(e,"WithdrawId"),a="withdrawal");const n=this.parseJson(this.safeValue2(e,"TemplateForm","DepositInfo"));let o=this.safeInteger(e,"LastUpdateTimeStamp");void 0!==n&&(o=this.safeInteger(n,"LastUpdated",o));const d=this.safeString2(n,"ExternalAddress","ToAddress"),c=this.safeInteger(n,"TimeSubmitted"),h=this.safeNumber(e,"FeeAmount"),u=this.safeString(e,"TicketStatus");let l;return void 0!==h&&(l={currency:r,cost:h}),{info:e,id:i,txid:this.safeString2(n,"TxId","TXId"),timestamp:c,datetime:this.iso8601(c),address:d,addressTo:d,addressFrom:this.safeString(n,"FromAddress"),tag:void 0,tagTo:void 0,tagFrom:void 0,type:a,amount:this.safeNumber(e,"Amount"),currency:r,status:this.parseTransactionStatusByType(u,a),updated:o,fee:l}}async withdraw(e,t,i,s=undefined,a={}){if([s,a]=this.handleWithdrawTagAndParams(s,a),void 0===this.safeString(this.options,"sessionToken"))throw new r.AuthenticationError(this.id+" call signIn() method to obtain a session token");if(void 0===this.twofa)throw new r.AuthenticationError(this.id+" withdraw() requires exchange.twofa credentials");this.checkAddress(i);const n=this.safeInteger(this.options,"omsId",1);await this.loadMarkets(),await this.loadAccounts();const o=this.safeInteger2(this.options,"accountId","AccountId",parseInt(this.accounts[0].id)),c=this.safeInteger2(a,"accountId","AccountId",o);a=this.omit(a,["accountId","AccountId"]);const h=this.currency(e),u={omsId:n,AccountId:c,ProductId:h.id},l=await this.privateGetGetWithdrawTemplateTypes(u),p=this.safeValue(l,"TemplateTypes",[]),f=this.safeValue(p,0);if(void 0===f)throw new r.ExchangeError(this.id+" withdraw() could not find a withdraw template type for "+h.code);const m=this.safeString(f,"TemplateName"),v={omsId:n,AccountId:c,ProductId:h.id,TemplateType:m,AccountProviderId:f.AccountProviderId},g=await this.privateGetGetWithdrawTemplate(v),y=this.safeString(g,"Template");if(void 0===y)throw new r.ExchangeError(this.id+" withdraw() could not find a withdraw template for "+h.code);const b=JSON.parse(y);b.ExternalAddress=i,void 0!==s&&"Memo"in b&&(b.Memo=s);const w={omsId:n,AccountId:c,ProductId:h.id,TemplateForm:this.json(b),TemplateType:m},S={TfaType:"Google",TFaCode:(0,d.Z)(this.twofa),Payload:this.json(w)},P=await this.privatePostCreateWithdrawTicket(this.deepExtend(S,a));return this.parseTransaction(P,h)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t]+"/"+this.implodeParams(e,s),d=this.omit(s,this.extractParams(e));if("public"===t){if("Authenticate"===e){const e=this.login+":"+this.password;r={Authorization:"Basic "+this.stringToBase64(e)}}else if("Authenticate2FA"===e){const e=this.safeString(this.options,"pending2faToken");void 0!==e&&(r={Pending2FaToken:e},d=this.omit(d,"pending2faToken"))}Object.keys(d).length&&(n+="?"+this.urlencode(d))}else if("private"===t){this.checkRequiredCredentials();const e=this.safeString(this.options,"sessionToken");if(void 0===e){const e=this.nonce().toString(),t=e+this.uid+this.apiKey,i=this.hmac(this.encode(t),this.encode(this.secret),o.J);r={Nonce:e,APIKey:this.apiKey,Signature:i,UserId:this.uid}}else r={APToken:e};"POST"===i?(r["Content-Type"]="application/json",a=this.json(d)):Object.keys(d).length&&(n+="?"+this.urlencode(d))}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(404===e)throw new r.AuthenticationError(this.id+" "+n);if(void 0===o)return;const h=this.safeString(o,"errormsg");if(void 0!==h&&""!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),this.throwBroadlyMatchedException(this.exceptions.broad,n,e),new r.ExchangeError(e)}}}},2449:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6513),r=i(6689),a=i(9292),n=i(1372),o=i(7311);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"novadax",name:"NovaDAX",countries:["BR"],rateLimit:16.6667,version:"v1",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDepositAddress:!1,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactions:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"ONE_MIN","5m":"FIVE_MIN","15m":"FIFTEEN_MIN","30m":"HALF_HOU","1h":"ONE_HOU","1d":"ONE_DAY","1w":"ONE_WEE","1M":"ONE_MON"},urls:{logo:"https://user-images.githubusercontent.com/1294454/92337550-2b085500-f0b3-11ea-98e7-5794fb07dd3b.jpg",api:{public:"https://api.novadax.com",private:"https://api.novadax.com"},www:"https://www.novadax.com.br",doc:["https://doc.novadax.com/pt-BR/"],fees:"https://www.novadax.com.br/fees-and-limits",referral:"https://www.novadax.com.br/?s=ccxt"},api:{public:{get:{"common/symbol":1.2,"common/symbols":1.2,"common/timestamp":1.2,"market/tickers":1.2,"market/ticker":1.2,"market/depth":1.2,"market/trades":1.2,"market/kline/history":1.2}},private:{get:{"orders/get":3,"orders/list":3,"orders/fill":3,"orders/fills":3,"account/getBalance":3,"account/subs":3,"account/subs/balance":3,"account/subs/transfer/record":3,"wallet/query/deposit-withdraw":3},post:{"orders/create":3,"orders/cancel":3,"account/withdraw/coin":3,"account/subs/transfer":3}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.005"),maker:this.parseNumber("0.0025")}},requiredCredentials:{apiKey:!0,secret:!0},precisionMode:a.sh,exceptions:{exact:{A99999:r.ExchangeError,A10001:r.BadRequest,A10002:r.ExchangeError,A10003:r.AuthenticationError,A10004:r.RateLimitExceeded,A10005:r.PermissionDenied,A10006:r.AccountSuspended,A10007:r.AccountNotEnabled,A10011:r.BadSymbol,A10012:r.BadSymbol,A10013:r.OnMaintenance,A30001:r.OrderNotFound,A30002:r.InvalidOrder,A30003:r.InvalidOrder,A30004:r.InvalidOrder,A30005:r.InvalidOrder,A30006:r.InvalidOrder,A30007:r.InsufficientFunds,A30008:r.InvalidOrder,A30009:r.InvalidOrder,A30010:r.CancelPending,A30011:r.InvalidOrder,A30012:r.InvalidOrder,A40004:r.InsufficientFunds},broad:{}},options:{fetchOHLCV:{volume:"amount"},transfer:{fillResponseFromRequest:!0}}})}async fetchTime(e={}){const t=await this.publicGetCommonTimestamp(e);return this.safeInteger(t,"data")}async fetchMarkets(e={}){const t=await this.publicGetCommonSymbols(e),i=[],s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"baseCurrency"),a=this.safeString(t,"quoteCurrency"),n=this.safeString(t,"symbol"),o=this.safeCurrencyCode(r),d=this.safeCurrencyCode(a),c=this.safeString(t,"status");i.push({id:n,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"ONLINE"===c,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amountPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"pricePrecision"))),cost:this.parseNumber(this.parsePrecision(this.safeString(t,"valuePrecision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"minOrderAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minOrderValue"),max:void 0}},info:t})}return i}parseTicker(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t,"_"),a=this.safeString(e,"open24h"),n=this.safeString(e,"lastPrice"),o=this.safeString(e,"baseVolume24h"),d=this.safeString(e,"quoteVolume24h");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high24h"),low:this.safeString(e,"low24h"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:a,close:n,last:n,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:d,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetMarketTicker(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetMarketTickers(t),s=this.safeValue(i,"data",[]),r={};for(let e=0;e<s.length;e++){const t=this.parseTicker(s[e]);r[t.symbol]=t}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit=t);const a=await this.publicGetMarketDepth(this.extend(r,i)),n=this.safeValue(a,"data",{}),o=this.safeInteger(n,"timestamp");return this.parseOrderBook(n,s.symbol,o,"bids","asks")}parseTrade(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"orderId"),r=this.safeInteger(e,"timestamp"),a=this.safeStringLower(e,"side"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),d=this.safeString(e,"symbol"),c=this.safeSymbol(d,t,"_"),h=this.safeStringLower(e,"role");let u;if(void 0!==this.safeString(e,"fee")){const t=this.safeString(e,"feeCurrency"),i=this.safeCurrencyCode(t);u={cost:this.safeString(e,"feeAmount"),currency:i}}return this.safeTrade({id:i,order:s,timestamp:r,datetime:this.iso8601(r),symbol:c,type:void 0,side:a,price:n,amount:o,cost:void 0,takerOrMaker:h,fee:u,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetMarketTrades(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,unit:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t),d=this.seconds();if(void 0===s&&(s=3e3),void 0===i)n.from=d-s*o,n.to=d;else{const e=this.parseToInt(i/1e3);n.from=e,n.to=this.sum(e,s*o)}const c=await this.publicGetMarketKlineHistory(this.extend(n,r)),h=this.safeValue(c,"data",[]);return this.parseOHLCVs(h,a,t,i,s)}parseOHLCV(e,t=undefined){const i=this.safeValue(this.options,"fetchOHLCV",{}),s=this.safeString(i,"volume","amount");return[this.safeTimestamp(e,"score"),this.safeNumber(e,"openPrice"),this.safeNumber(e,"highPrice"),this.safeNumber(e,"lowPrice"),this.safeNumber(e,"closePrice"),this.safeNumber(e,s)]}parseBalance(e){const t=this.safeValue(e,"data",[]),i={info:e,timestamp:void 0,datetime:void 0};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.free=this.safeString(s,"available"),n.used=this.safeString(s,"hold"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountGetBalance(e);return this.parseBalance(t)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e);let d=t.toUpperCase();const c=i.toUpperCase(),h={symbol:o.id,side:c},u=this.safeValue2(n,"triggerPrice","stopPrice");if(void 0===u){if("STOP_LIMIT"===d||"STOP_MARKET"===d)throw new r.ArgumentsRequired(this.id+" createOrder() requires a stopPrice parameter for "+d+" orders")}else{"LIMIT"===d?d="STOP_LIMIT":"MARKET"===d&&(d="STOP_MARKET");const t="BUY"===c?"LTE":"GTE";h.operator=this.safeString(n,"operator",t),h.stopPrice=this.priceToPrecision(e,u),n=this.omit(n,["triggerPrice","stopPrice"])}if("LIMIT"===d||"STOP_LIMIT"===d)h.price=this.priceToPrecision(e,a),h.amount=this.amountToPrecision(e,s);else if("MARKET"===d||"STOP_MARKET"===d)if("SELL"===c)h.amount=this.amountToPrecision(e,s);else if("BUY"===c){let t=this.safeNumber(n,"value");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==a)void 0===t&&(t=s*a);else if(void 0===t)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'value' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?s:t;h.value=this.costToPrecision(e,t)}h.type=d;const l=await this.privatePostOrdersCreate(this.extend(h,n)),p=this.safeValue(l,"data",{});return this.parseOrder(p,o)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privatePostOrdersCancel(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.privateGetOrdersGet(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==i&&(r.limit=i),void 0!==t&&(r.fromTimestamp=t);const n=await this.privateGetOrdersList(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseOrders(o,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"SUBMITTED,PROCESSING,PARTIAL_FILLED,CANCELING"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"FILLED,CANCELED,REJECTED"},s))}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={id:e},n=await this.privateGetOrdersFill(this.extend(a,r));let o;void 0!==t&&(o=this.market(t));const d=this.safeValue(n,"data",[]);return this.parseTrades(d,o,i,s)}parseOrderStatus(e){return this.safeString({SUBMITTED:"open",PROCESSING:"open",PARTIAL_FILLED:"open",CANCELING:"open",FILLED:"closed",CANCELED:"canceled",REJECTED:"rejected"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"amount"),r=this.safeString(e,"price"),a=this.safeString2(e,"filledValue","value"),n=this.safeStringLower(e,"type"),o=this.safeStringLower(e,"side"),d=this.parseOrderStatus(this.safeString(e,"status")),c=this.safeInteger(e,"timestamp"),h=this.safeString(e,"averagePrice"),u=this.safeString(e,"filledAmount");let l;const p=this.safeNumber(e,"filledFee");void 0!==p&&(l={cost:p,currency:void 0});const f=this.safeString(e,"symbol"),m=this.safeSymbol(f,t,"_"),v=this.safeNumber(e,"stopPrice");return this.safeOrder({id:i,clientOrderId:void 0,info:e,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,symbol:m,type:n,timeInForce:void 0,postOnly:void 0,side:o,price:r,stopPrice:v,triggerPrice:v,amount:s,cost:a,average:h,filled:u,remaining:void 0,status:d,fee:l,trades:void 0},t)}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.currency(e);if("main"!==i&&"main"!==s)throw new r.ExchangeError(this.id+" transfer() supports transfers between main account and subaccounts only");const o="main"===i?"master-transfer-in":"master-transfer-out",d={transferAmount:this.currencyToPrecision(e,t),currency:n.id,subId:"master-transfer-in"===o?s:i,transferType:o},c=await this.privatePostAccountSubsTransfer(this.extend(d,a)),h=this.parseTransfer(c,n),u=this.safeValue(this.options,"transfer",{});return this.safeValue(u,"fillResponseFromRequest",!0)&&(h.fromAccount=i,h.toAccount=s,h.amount=t),h}parseTransfer(e,t=undefined){const i=this.safeString(e,"data"),s=this.safeString(e,"message"),r=this.safeCurrencyCode(void 0,t);return{info:e,id:i,amount:void 0,code:r,currency:r,fromAccount:void 0,toAccount:void 0,timestamp:void 0,datetime:void 0,status:s}}parseTransferStatus(e){return this.safeString({SUCCESS:"pending"},e,"failed")}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets();const a=this.currency(e),n={code:a.id,amount:this.currencyToPrecision(e,t),wallet:i};void 0!==s&&(n.tag=s);const o=await this.privatePostAccountWithdrawCoin(this.extend(n,r));return this.parseTransaction(o,a)}async fetchAccounts(e={}){const t=await this.privateGetAccountSubs(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"subId"),a=this.safeString(t,"subAccount");s.push({id:r,type:a,currency:void 0,info:t})}return s}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactions(e,t,i,this.extend({type:"coin_in"},s))}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactions(e,t,i,this.extend({type:"coin_out"},s))}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.size=i);const n=await this.privateGetWalletQueryDepositWithdraw(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,i)}parseTransactionStatus(e){const t=e.split(" ");return e=this.safeString(t,1,e),this.safeString({Pending:"pending",confirming:"pending",SUCCESS:"ok",FAIL:"failed"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString2(e,"id","data");let s=this.safeString(e,"type");"COIN_IN"===s?s="deposit":"COIN_OUT"===s&&(s="withdraw");const r=this.safeNumber(e,"amount"),a=this.safeString(e,"address"),n=this.safeString(e,"addressTag"),o=this.safeString(e,"txHash"),d=this.safeInteger(e,"createdAt"),c=this.safeInteger(e,"updatedAt"),h=this.safeString(e,"currency"),u=this.safeCurrencyCode(h,t),l=this.parseTransactionStatus(this.safeString(e,"state"));return{info:e,id:i,currency:u,amount:r,network:this.safeString(e,"chain"),address:a,addressTo:a,addressFrom:void 0,tag:n,tagTo:n,tagFrom:void 0,status:l,type:s,updated:c,txid:o,timestamp:d,datetime:this.iso8601(d),fee:void 0}}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==i&&(r.limit=i),void 0!==t&&(r.fromTimestamp=t);const n=await this.privateGetOrdersFills(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,a,t,i)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const d="/"+this.version+"/"+this.implodeParams(e,s);let c=this.urls.api[t]+d;const h=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(h).length&&(c+="?"+this.urlencode(h));else if("private"===t){this.checkRequiredCredentials();const e=this.milliseconds().toString();let t;r={"X-Nova-Access-Key":this.apiKey,"X-Nova-Timestamp":e},"POST"===i?(a=this.json(h),t=this.hash(this.encode(a),o.F),r["Content-Type"]="application/json"):(Object.keys(h).length&&(c+="?"+this.urlencode(h)),t=this.urlencode(this.keysort(h)));const s=i+"\n"+d+"\n"+t+"\n"+e;r["X-Nova-Signature"]=this.hmac(this.encode(s),this.encode(this.secret),n.J)}return{url:c,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"code");if("A10000"!==h){const e=this.safeString(o,"message"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r.ExchangeError(t)}}}},6749:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(3229),r=i(6689),a=i(9292),n=i(1372),o=i(5981);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"oceanex",name:"OceanEx",countries:["BS"],version:"v1",rateLimit:3e3,urls:{logo:"https://user-images.githubusercontent.com/1294454/58385970-794e2d80-8001-11e9-889c-0567cd79b78e.jpg",api:{rest:"https://api.oceanex.pro"},www:"https://www.oceanex.pro.com",doc:"https://api.oceanex.pro/doc/v1",referral:"https://oceanex.pro/signup?referral=VE24QX"},has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,cancelOrders:!0,createMarketOrder:!0,createOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchMarkets:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:void 0},timeframes:{"1m":"1","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"1440","3d":"4320","1w":"10080"},api:{public:{get:["markets","tickers/{pair}","tickers_multi","order_book","order_book/multi","fees/trading","trades","timestamp"],post:["k"]},private:{get:["key","members/me","orders","orders/filter"],post:["orders","orders/multi","order/delete","order/delete/multi","orders/clear"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.001"),taker:this.parseNumber("0.001")}},commonCurrencies:{PLA:"Plair"},precisionMode:a.sh,exceptions:{codes:{"-1":r.BadRequest,"-2":r.BadRequest,1001:r.BadRequest,1004:r.ArgumentsRequired,1006:r.AuthenticationError,1008:r.AuthenticationError,1010:r.AuthenticationError,1011:r.PermissionDenied,2001:r.AuthenticationError,2002:r.InvalidOrder,2004:r.OrderNotFound,9003:r.PermissionDenied},exact:{"market does not have a valid value":r.BadRequest,"side does not have a valid value":r.BadRequest,"Account::AccountError: Cannot lock funds":r.InsufficientFunds,"The account does not exist":r.AuthenticationError}}})}async fetchMarkets(e={}){const t=await this.publicGetMarkets(this.extend({show_details:!0},e)),i=[],s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeValue(t,"id"),a=this.safeValue(t,"name");let[n,o]=a.split("/");const d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o);n=n.toLowerCase(),o=o.toLowerCase();const h=d+"/"+c;i.push({id:r,symbol:h,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"amount_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"price_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"minimum_trading_amount"),max:void 0}},info:t})}return i}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetTickersPair(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),void 0===(e=this.marketSymbols(e))&&(e=this.symbols);const i={markets:this.marketIds(e)},s=await this.publicGetTickersMulti(this.extend(i,t)),r=this.safeValue(s,"data",[]),a={};for(let e=0;e<r.length;e++){const t=r[e],i=this.safeString(t,"market"),s=this.safeMarket(i);a[s.symbol]=this.parseTicker(t,s)}return this.filterByArray(a,"symbol",e)}parseTicker(e,t=undefined){const i=this.safeValue(e,"ticker",{}),s=this.safeTimestamp(e,"at"),r=this.safeSymbol(void 0,t);return this.safeTicker({symbol:r,timestamp:s,datetime:this.iso8601(s),high:this.safeString(i,"high"),low:this.safeString(i,"low"),bid:this.safeString(i,"buy"),bidVolume:void 0,ask:this.safeString(i,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:this.safeString(i,"last"),last:this.safeString(i,"last"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(i,"volume"),quoteVolume:void 0,info:i},t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={market:this.market(e).id};void 0!==t&&(s.limit=t);const r=await this.publicGetOrderBook(this.extend(s,i)),a=this.safeValue(r,"data",{}),n=this.safeTimestamp(a,"timestamp");return this.parseOrderBook(a,e,n)}async fetchOrderBooks(e=undefined,t=undefined,i={}){await this.loadMarkets(),void 0===e&&(e=this.symbols);const s={markets:this.marketIds(e)};void 0!==t&&(s.limit=t);const r=await this.publicGetOrderBookMulti(this.extend(s,i)),a=this.safeValue(r,"data",[]),n={};for(let e=0;e<a.length;e++){const t=a[e],i=this.safeString(t,"market"),s=this.safeSymbol(i),r=this.safeTimestamp(t,"timestamp");n[s]=this.parseOrderBook(t,s,r)}return n}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetTrades(this.extend(a,s)),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,i)}parseTrade(e,t=undefined){let i=this.safeValue(e,"side");"bid"===i?i="buy":"ask"===i&&(i="sell");const s=this.safeValue(e,"market"),r=this.safeSymbol(s,t);let a=this.safeTimestamp(e,"created_on");void 0===a&&(a=this.parse8601(this.safeString(e,"created_at")));const n=this.safeString(e,"price"),o=this.safeString(e,"volume");return this.safeTrade({info:e,timestamp:a,datetime:this.iso8601(a),symbol:r,id:this.safeString(e,"id"),order:void 0,type:"limit",takerOrMaker:void 0,side:i,price:n,amount:o,cost:void 0,fee:void 0},t)}async fetchTime(e={}){const t=await this.publicGetTimestamp(e);return this.safeTimestamp(t,"data")}async fetchTradingFees(e={}){const t=await this.publicGetFeesTrading(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeValue(t,"ask_fee",{}),a=this.safeValue(t,"bid_fee",{}),n=this.safeString(t,"market"),o=this.safeSymbol(n);s[o]={info:t,symbol:o,maker:this.safeNumber(r,"value"),taker:this.safeNumber(a,"value"),percentage:!0}}return s}async fetchKey(e={}){const t=await this.privateGetKey(e);return this.safeValue(t,"data")}parseBalance(e){const t=this.safeValue(e,"data"),i=this.safeValue(t,"accounts",[]),s={info:e};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeValue(t,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(t,"balance"),n.used=this.safeString(t,"locked"),s[a]=n}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetMembersMe(e);return this.parseBalance(t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={market:n.id,side:i,ord_type:t,volume:this.amountToPrecision(e,s)};"limit"===t&&(o.price=this.priceToPrecision(e,r));const d=await this.privatePostOrders(this.extend(o,a)),c=this.safeValue(d,"data");return this.parseOrder(c,n)}async fetchOrder(e,t=undefined,i={}){let s,a=e;Array.isArray(e)||(a=[e]),await this.loadMarkets(),void 0!==t&&(s=this.market(t));const n={ids:a},o=await this.privateGetOrders(this.extend(n,i)),d=this.safeValue(o,"data"),c=d.length;if(void 0===d)throw new r.OrderNotFound(this.id+" could not found matching order");if(Array.isArray(e))return this.parseOrders(d,s);if(0===c)throw new r.OrderNotFound(this.id+" could not found matching order");return this.parseOrder(d[0],s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({states:["wait"]},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({states:["done","cancel"]},s))}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a `symbol` argument");await this.loadMarkets();const a=this.market(e),n=this.safeValue(s,"states",["wait","done","cancel"]),o=this.omit(s,"states"),d={market:a.id,states:n,need_price:"True"};void 0!==i&&(d.limit=i);const c=await this.privateGetOrdersFilter(this.extend(d,o)),h=this.safeValue(c,"data",[]);let u=[];for(let e=0;e<h.length;e++){const s=this.safeValue(h[e],"orders",[]),r=this.parseOrderStatus(this.safeValue(h[e],"state")),n=this.parseOrders(s,a,t,i,{status:r});u=this.arrayConcat(u,n)}return u}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,period:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.timestamp=i),void 0!==s&&(n.limit=s);const o=await this.publicPostK(this.extend(n,r)),d=this.safeValue(o,"data",[]);return this.parseOHLCVs(d,a,t,i,s)}parseOrder(e,t=undefined){const i=this.parseOrderStatus(this.safeValue(e,"state")),s=this.safeString2(e,"market","market_id"),r=this.safeSymbol(s,t);let a=this.safeTimestamp(e,"created_on");void 0===a&&(a=this.parse8601(this.safeString(e,"created_at")));const n=this.safeString(e,"price"),o=this.safeString(e,"avg_price"),d=this.safeString(e,"volume"),c=this.safeString(e,"remaining_volume"),h=this.safeString(e,"executed_volume");return this.safeOrder({info:e,id:this.safeString(e,"id"),clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:r,type:this.safeValue(e,"ord_type"),timeInForce:void 0,postOnly:void 0,side:this.safeValue(e,"side"),price:n,stopPrice:void 0,triggerPrice:void 0,average:o,amount:d,remaining:c,filled:h,status:i,cost:void 0,trades:void 0,fee:void 0},t)}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}async createOrders(e,t,i={}){await this.loadMarkets();const s={market:this.market(e).id,orders:t},r=(await this.privatePostOrdersMulti(this.extend(s,i))).data;return this.parseOrders(r)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s=await this.privatePostOrderDelete(this.extend({id:e},i)),r=this.safeValue(s,"data");return this.parseOrder(r)}async cancelOrders(e,t=undefined,i={}){await this.loadMarkets();const s=await this.privatePostOrderDeleteMulti(this.extend({ids:e},i)),r=this.safeValue(s,"data");return this.parseOrders(r)}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i=await this.privatePostOrdersClear(t),s=this.safeValue(i,"data");return this.parseOrders(s)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let d=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,s);const c=this.omit(s,this.extractParams(e));if("public"===t)if("tickers_multi"===e||"order_book/multi"===e){let e="?";const t=this.safeValue(s,"markets");for(let i=0;i<t.length;i++)e+="markets[]="+t[i]+"&";const i=this.safeValue(s,"limit");void 0!==i&&(e+="limit="+i),d+=e}else Object.keys(c).length&&(d+="?"+this.urlencode(c));else if("private"===t){this.checkRequiredCredentials();const e={uid:this.apiKey,data:c};d+="?user_jwt="+(0,o.F)(e,this.encode(this.secret),n.J,!0)}return{url:d,method:i,body:a,headers:{"Content-Type":"application/json"}}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"code"),u=this.safeString(o,"message");if(void 0!==h&&"0"!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.codes,h,e),this.throwExactlyMatchedException(this.exceptions.exact,u,e),new r.ExchangeError(e)}}}},3007:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5848),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"okcoin",name:"OKCoin",countries:["CN","US"],version:"v3",rateLimit:20,pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:void 0,future:!0,option:void 0,cancelOrder:!0,createOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchLedger:!0,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:void 0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositions:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTransactions:void 0,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"604800","1M":"2678400","3M":"8035200","6M":"16070400","1y":"31536000"},hostname:"okcoin.com",urls:{logo:"https://user-images.githubusercontent.com/51840849/87295551-102fbf00-c50e-11ea-90a9-462eebba5829.jpg",api:{rest:"https://www.{hostname}"},www:"https://www.okcoin.com",doc:"https://www.okcoin.com/docs/en/",fees:"https://www.okcoin.com/coin-fees",referral:"https://www.okcoin.com/account/register?flag=activity&channelId=600001513",test:{rest:"https://testnet.okex.com"}},api:{general:{get:{time:8.3334}},account:{get:{wallet:8.3334,"sub-account":1e3,"asset-valuation":1e3,"wallet/{currency}":8.3334,"withdrawal/history":8.3334,"withdrawal/history/{currency}":8.3334,ledger:5,"deposit/address":8.3334,"deposit/history":8.3334,"deposit/history/{currency}":8.3334,currencies:8.3334,"withdrawal/fee":8.3334,"deposit-lightning":50,"withdrawal-lightning":50,"fiat/deposit/detail":5,"fiat/deposit/details":8.3334,"fiat/withdraw/detail":5,"fiat/withdraw/details":8.3334,"fiat/channel":8.3334},post:{transfer:100,withdrawal:8.3334,"fiat/cancel_deposit":1,"fiat/deposit":8.3334,"fiat/withdraw":8.3334,"fiat/cancel_withdrawal":1}},otc:{get:{"rfq/instruments":50,"rfq/trade":50,"rfq/history":50},post:{"rfq/quote":50,"rfq/trade":50}},users:{get:{"subaccount-info":20,"account-info":20,"subaccount/apikey":20},post:{"create-subaccount":5,"delete-subaccount":5,"subaccount/apikey":50,"subacount/delete-apikey":20,"subacount/modify-apikey":20}},earning:{get:{offers:5,orders:5,positions:8.3334},post:{purchase:5,redeem:5,cancel:5}},spot:{get:{accounts:5,"accounts/{currency}":5,"accounts/{currency}/ledger":5,orders:10,orders_pending:5,"orders/{order_id}":5,"orders/{client_oid}":5,trade_fee:5,fills:10,algo:5,instruments:5,"instruments/{instrument_id}/book":5,"instruments/ticker":5,"instruments/{instrument_id}/ticker":5,"instruments/{instrument_id}/trades":5,"instruments/{instrument_id}/candles":5},post:{order_algo:2.5,orders:1,batch_orders:2,"cancel_orders/{order_id}":1,"cancel_orders/{client_oid}":1,cancel_batch_algos:5,cancel_batch_orders:5,"amend_order/{instrument_id}":2.5,amend_batch_orders:5}},margin:{get:{accounts:5,"accounts/{instrument_id}":5,"accounts/{instrument_id}/ledger":5,"accounts/availability":5,"accounts/{instrument_id}/availability":5,"accounts/borrowed":5,"accounts/{instrument_id}/borrowed":5,orders:10,"accounts/{instrument_id}/leverage":1,"orders/{order_id}":5,"orders/{client_oid}":5,orders_pending:5,fills:10,"instruments/{instrument_id}/mark_price":5},post:{"accounts/borrow":1,"accounts/repayment":1,orders:1,batch_orders:2,cancel_orders:1,"cancel_orders/{order_id}":1,"cancel_orders/{client_oid}":1,cancel_batch_orders:2,"amend_order/{instrument_id}":2.5,amend_batch_orders:5,"accounts/{instrument_id}/leverage":1}},system:{get:{status:250}},market:{get:{oracle:250}},futures:{get:["position","{instrument_id}/position","accounts","accounts/{underlying}","accounts/{underlying}/leverage","accounts/{underlying}/ledger","order_algo/{instrument_id}","orders/{instrument_id}","orders/{instrument_id}/{order_id}","orders/{instrument_id}/{client_oid}","fills","trade_fee","accounts/{instrument_id}/holds","instruments","instruments/{instrument_id}/book","instruments/ticker","instruments/{instrument_id}/ticker","instruments/{instrument_id}/trades","instruments/{instrument_id}/candles","instruments/{instrument_id}/history/candles","instruments/{instrument_id}/index","rate","instruments/{instrument_id}/estimated_price","instruments/{instrument_id}/open_interest","instruments/{instrument_id}/price_limit","instruments/{instrument_id}/mark_price","instruments/{instrument_id}/liquidation"],post:["accounts/{underlying}/leverage","order","amend_order/{instrument_id}","orders","cancel_order/{instrument_id}/{order_id}","cancel_order/{instrument_id}/{client_oid}","cancel_batch_orders/{instrument_id}","accounts/margin_mode","close_position","cancel_all","order_algo","cancel_algos"]},swap:{get:["position","{instrument_id}/position","accounts","{instrument_id}/accounts","accounts/{instrument_id}/settings","accounts/{instrument_id}/ledger","orders/{instrument_id}","orders/{instrument_id}/{order_id}","orders/{instrument_id}/{client_oid}","fills","accounts/{instrument_id}/holds","trade_fee","order_algo/{instrument_id}","instruments","instruments/{instrument_id}/depth","instruments/ticker","instruments/{instrument_id}/ticker","instruments/{instrument_id}/trades","instruments/{instrument_id}/candles","instruments/{instrument_id}/history/candles","instruments/{instrument_id}/index","rate","instruments/{instrument_id}/open_interest","instruments/{instrument_id}/price_limit","instruments/{instrument_id}/liquidation","instruments/{instrument_id}/funding_time","instruments/{instrument_id}/mark_price","instruments/{instrument_id}/historical_funding_rate"],post:["accounts/{instrument_id}/leverage","order","amend_order/{instrument_id}","orders","cancel_order/{instrument_id}/{order_id}","cancel_order/{instrument_id}/{client_oid}","cancel_batch_orders/{instrument_id}","order_algo","cancel_algos","close_position","cancel_all"]},option:{get:["accounts","position","{underlying}/position","accounts/{underlying}","orders/{underlying}","fills/{underlying}","accounts/{underlying}/ledger","trade_fee","orders/{underlying}/{order_id}","orders/{underlying}/{client_oid}","underlying","instruments/{underlying}","instruments/{underlying}/summary","instruments/{underlying}/summary/{instrument_id}","instruments/{instrument_id}/book","instruments/{instrument_id}/trades","instruments/{instrument_id}/ticker","instruments/{instrument_id}/candles"],post:["order","orders","cancel_order/{underlying}/{order_id}","cancel_order/{underlying}/{client_oid}","cancel_batch_orders/{underlying}","amend_order/{underlying}","amend_batch_orders/{underlying}"]},information:{get:["{currency}/long_short_ratio","{currency}/volume","{currency}/taker","{currency}/sentiment","{currency}/margin"]},index:{get:["{instrument_id}/constituents"]}},fees:{trading:{taker:.002,maker:.001},spot:{taker:.0015,maker:.001}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:r.ExchangeError,"failure to get a peer from the ring-balancer":r.ExchangeNotAvailable,"Server is busy, please try again.":r.ExchangeNotAvailable,"An unexpected error occurred":r.ExchangeError,"System error":r.ExchangeError,4010:r.PermissionDenied,4001:r.ExchangeError,4002:r.ExchangeError,30001:r.AuthenticationError,30002:r.AuthenticationError,30003:r.AuthenticationError,30004:r.AuthenticationError,30005:r.InvalidNonce,30006:r.AuthenticationError,30007:r.BadRequest,30008:r.RequestTimeout,30009:r.ExchangeError,30010:r.AuthenticationError,30011:r.PermissionDenied,30012:r.AuthenticationError,30013:r.AuthenticationError,30014:r.DDoSProtection,30015:r.AuthenticationError,30016:r.ExchangeError,30017:r.ExchangeError,30018:r.ExchangeError,30019:r.ExchangeNotAvailable,30020:r.BadRequest,30021:r.BadRequest,30022:r.PermissionDenied,30023:r.BadRequest,30024:r.BadSymbol,30025:r.BadRequest,30026:r.DDoSProtection,30027:r.AuthenticationError,30028:r.PermissionDenied,30029:r.AccountSuspended,30030:r.ExchangeNotAvailable,30031:r.BadRequest,30032:r.BadSymbol,30033:r.BadRequest,30034:r.ExchangeError,30035:r.ExchangeError,30036:r.ExchangeError,30037:r.ExchangeNotAvailable,30038:r.OnMaintenance,30044:r.RequestTimeout,32001:r.AccountSuspended,32002:r.PermissionDenied,32003:r.CancelPending,32004:r.ExchangeError,32005:r.InvalidOrder,32006:r.InvalidOrder,32007:r.InvalidOrder,32008:r.InvalidOrder,32009:r.InvalidOrder,32010:r.ExchangeError,32011:r.ExchangeError,32012:r.ExchangeError,32013:r.ExchangeError,32014:r.ExchangeError,32015:r.ExchangeError,32016:r.ExchangeError,32017:r.ExchangeError,32018:r.ExchangeError,32019:r.ExchangeError,32020:r.ExchangeError,32021:r.ExchangeError,32022:r.ExchangeError,32023:r.ExchangeError,32024:r.ExchangeError,32025:r.ExchangeError,32026:r.ExchangeError,32027:r.ExchangeError,32028:r.ExchangeError,32029:r.ExchangeError,32030:r.InvalidOrder,32031:r.ArgumentsRequired,32038:r.AuthenticationError,32040:r.ExchangeError,32044:r.ExchangeError,32045:r.ExchangeError,32046:r.ExchangeError,32047:r.ExchangeError,32048:r.InvalidOrder,32049:r.ExchangeError,32050:r.InvalidOrder,32051:r.InvalidOrder,32052:r.ExchangeError,32053:r.ExchangeError,32057:r.ExchangeError,32054:r.ExchangeError,32055:r.InvalidOrder,32056:r.ExchangeError,32058:r.ExchangeError,32059:r.InvalidOrder,32060:r.InvalidOrder,32061:r.InvalidOrder,32062:r.InvalidOrder,32063:r.InvalidOrder,32064:r.ExchangeError,32065:r.ExchangeError,32066:r.ExchangeError,32067:r.ExchangeError,32068:r.ExchangeError,32069:r.ExchangeError,32070:r.ExchangeError,32071:r.ExchangeError,32072:r.ExchangeError,32073:r.ExchangeError,32074:r.ExchangeError,32075:r.ExchangeError,32076:r.ExchangeError,32077:r.ExchangeError,32078:r.ExchangeError,32079:r.ExchangeError,32080:r.ExchangeError,32083:r.ExchangeError,33001:r.PermissionDenied,33002:r.AccountSuspended,33003:r.InsufficientFunds,33004:r.ExchangeError,33005:r.ExchangeError,33006:r.ExchangeError,33007:r.ExchangeError,33008:r.InsufficientFunds,33009:r.ExchangeError,33010:r.ExchangeError,33011:r.ExchangeError,33012:r.ExchangeError,33013:r.InvalidOrder,33014:r.OrderNotFound,33015:r.InvalidOrder,33016:r.ExchangeError,33017:r.InsufficientFunds,33018:r.ExchangeError,33020:r.ExchangeError,33021:r.BadRequest,33022:r.InvalidOrder,33023:r.ExchangeError,33024:r.InvalidOrder,33025:r.InvalidOrder,33026:r.ExchangeError,33027:r.InvalidOrder,33028:r.InvalidOrder,33029:r.InvalidOrder,33034:r.ExchangeError,33035:r.ExchangeError,33036:r.ExchangeError,33037:r.ExchangeError,33038:r.ExchangeError,33039:r.ExchangeError,33040:r.ExchangeError,33041:r.ExchangeError,33042:r.ExchangeError,33043:r.ExchangeError,33044:r.ExchangeError,33045:r.ExchangeError,33046:r.ExchangeError,33047:r.ExchangeError,33048:r.ExchangeError,33049:r.ExchangeError,33050:r.ExchangeError,33051:r.ExchangeError,33059:r.BadRequest,33060:r.BadRequest,33061:r.ExchangeError,33062:r.ExchangeError,33063:r.ExchangeError,33064:r.ExchangeError,33065:r.ExchangeError,33085:r.InvalidOrder,21009:r.ExchangeError,34001:r.PermissionDenied,34002:r.InvalidAddress,34003:r.ExchangeError,34004:r.ExchangeError,34005:r.ExchangeError,34006:r.ExchangeError,34007:r.ExchangeError,34008:r.InsufficientFunds,34009:r.ExchangeError,34010:r.ExchangeError,34011:r.ExchangeError,34012:r.ExchangeError,34013:r.ExchangeError,34014:r.ExchangeError,34015:r.ExchangeError,34016:r.PermissionDenied,34017:r.AccountSuspended,34018:r.AuthenticationError,34019:r.PermissionDenied,34020:r.PermissionDenied,34021:r.InvalidAddress,34022:r.ExchangeError,34023:r.PermissionDenied,34026:r.RateLimitExceeded,34036:r.ExchangeError,34037:r.ExchangeError,34038:r.ExchangeError,34039:r.ExchangeError,35001:r.ExchangeError,35002:r.ExchangeError,35003:r.ExchangeError,35004:r.ExchangeError,35005:r.AuthenticationError,35008:r.InvalidOrder,35010:r.InvalidOrder,35012:r.InvalidOrder,35014:r.InvalidOrder,35015:r.InvalidOrder,35017:r.ExchangeError,35019:r.InvalidOrder,35020:r.InvalidOrder,35021:r.InvalidOrder,35022:r.BadRequest,35024:r.BadRequest,35025:r.InsufficientFunds,35026:r.BadRequest,35029:r.OrderNotFound,35030:r.InvalidOrder,35031:r.InvalidOrder,35032:r.ExchangeError,35037:r.ExchangeError,35039:r.InsufficientFunds,35040:r.InvalidOrder,35044:r.ExchangeError,35046:r.InsufficientFunds,35047:r.InsufficientFunds,35048:r.ExchangeError,35049:r.InvalidOrder,35050:r.InvalidOrder,35052:r.InsufficientFunds,35053:r.ExchangeError,35055:r.InsufficientFunds,35057:r.ExchangeError,35058:r.ExchangeError,35059:r.BadRequest,35060:r.BadRequest,35061:r.BadRequest,35062:r.InvalidOrder,35063:r.InvalidOrder,35064:r.InvalidOrder,35066:r.InvalidOrder,35067:r.InvalidOrder,35068:r.InvalidOrder,35069:r.InvalidOrder,35070:r.InvalidOrder,35071:r.InvalidOrder,35072:r.InvalidOrder,35073:r.InvalidOrder,35074:r.InvalidOrder,35075:r.InvalidOrder,35076:r.InvalidOrder,35077:r.InvalidOrder,35078:r.InvalidOrder,35079:r.InvalidOrder,35080:r.InvalidOrder,35081:r.InvalidOrder,35082:r.InvalidOrder,35083:r.InvalidOrder,35084:r.InvalidOrder,35085:r.InvalidOrder,35086:r.InvalidOrder,35087:r.InvalidOrder,35088:r.InvalidOrder,35089:r.InvalidOrder,35090:r.ExchangeError,35091:r.ExchangeError,35092:r.ExchangeError,35093:r.ExchangeError,35094:r.ExchangeError,35095:r.BadRequest,35096:r.ExchangeError,35097:r.ExchangeError,35098:r.ExchangeError,35099:r.ExchangeError,35102:r.RateLimitExceeded,36001:r.BadRequest,36002:r.BadRequest,36005:r.ExchangeError,36101:r.AuthenticationError,36102:r.PermissionDenied,36103:r.PermissionDenied,36104:r.PermissionDenied,36105:r.PermissionDenied,36106:r.PermissionDenied,36107:r.PermissionDenied,36108:r.InsufficientFunds,36109:r.PermissionDenied,36201:r.PermissionDenied,36202:r.PermissionDenied,36203:r.InvalidOrder,36204:r.ExchangeError,36205:r.BadRequest,36206:r.BadRequest,36207:r.InvalidOrder,36208:r.InvalidOrder,36209:r.InvalidOrder,36210:r.InvalidOrder,36211:r.InvalidOrder,36212:r.InvalidOrder,36213:r.InvalidOrder,36214:r.ExchangeError,36216:r.OrderNotFound,36217:r.InvalidOrder,36218:r.InvalidOrder,36219:r.InvalidOrder,36220:r.InvalidOrder,36221:r.InvalidOrder,36222:r.InvalidOrder,36223:r.InvalidOrder,36224:r.InvalidOrder,36225:r.InvalidOrder,36226:r.InvalidOrder,36227:r.InvalidOrder,36228:r.InvalidOrder,36229:r.InvalidOrder,36230:r.InvalidOrder},broad:{}},precisionMode:n.sh,options:{fetchOHLCV:{type:"Candles"},createMarketBuyOrderRequiresPrice:!0,fetchMarkets:["spot"],defaultType:"spot",accountsByType:{spot:"1",funding:"6",main:"6"},accountsById:{1:"spot",6:"funding"},auth:{time:"public",currencies:"private",instruments:"public",rate:"public","{instrument_id}/constituents":"public"},warnOnFetchCurrenciesWithoutAuthorization:!1},commonCurrencies:{AE:"AET",BOX:"DefiBox",HOT:"Hydro Protocol",HSR:"HC",MAG:"Maggie",SBTC:"Super Bitcoin",TRADE:"Unitrade",YOYO:"YOYOW",WIN:"WinToken"}})}async fetchTime(e={}){const t=await this.generalGetTime(e);return this.parse8601(this.safeString(t,"iso"))}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets");let i=[];for(let s=0;s<t.length;s++){const r=await this.fetchMarketsByType(t[s],e);i=this.arrayConcat(i,r)}return i}parseMarkets(e){const t=[];for(let i=0;i<e.length;i++)t.push(this.parseMarket(e[i]));return t}parseMarket(e){const t=this.safeString(e,"instrument_id");let i=this.safeValue(e,"option_type");const s=this.safeNumber(e,"contract_val"),r=void 0!==s,n=this.safeString(e,"alias");let o="spot";const d=!r,c=void 0!==i,h=!c&&void 0!==n,u=r&&!h&&!c;let l=this.safeString(e,"base_currency"),p=this.safeString(e,"quote_currency");const f=this.safeString(e,"settlement_currency");if(c){const t=this.safeString(e,"underlying").split("-");l=this.safeString(t,0),p=this.safeString(t,1),o="option"}else h?(l=this.safeString(e,"underlying_index"),o="futures"):u&&(o="swap");const m=this.safeCurrencyCode(l),v=this.safeCurrencyCode(p),g=this.safeCurrencyCode(f);let y,b=m+"/"+v,w=this.safeString(e,"delivery");const S=this.safeValue(e,"strike");r&&(b=b+":"+g,(h||c)&&(h&&(w+="T00:00:00Z"),y=this.parse8601(w),b=b+"-"+this.yymmdd(y),c&&(b=b+":"+S+":"+i,i="C"===i?"call":"put")));const P=this.safeNumber2(e,"lot_size","trade_increment"),k=this.safeString(e,"tick_size"),O=this.safeString2(e,"min_size","base_min_size"),T=this.parseNumber(O);let A;void 0!==T&&void 0!==k&&(A=this.parseNumber(a.O.stringMul(k,O)));const G=this.safeValue2(this.fees,o,"trading",{}),I=this.safeString(e,"max_leverage","1"),C=this.parseNumber(a.O.stringMax(I,"1")),M=this.parseNumber(k);return this.extend(G,{id:t,symbol:b,base:m,quote:v,settle:g,baseId:l,quoteId:p,settleId:f,type:o,spot:d,margin:!1,swap:u,future:h,futures:h,option:c,active:!0,contract:r,linear:r?v===g:void 0,inverse:r?m===g:void 0,contractSize:s,expiry:y,expiryDatetime:this.iso8601(y),strike:S,optionType:i,precision:{amount:this.safeNumber(e,"size_increment",P),price:M},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(C)},amount:{min:T,max:void 0},price:{min:M,max:void 0},cost:{min:A,max:void 0}},info:e})}async fetchMarketsByType(e,t={}){if("option"===e){const e=await this.optionGetUnderlying(t);let i=[];for(let t=0;t<e.length;t++){const s=await this.optionGetInstrumentsUnderlying({underlying:e[t]});i=this.arrayConcat(i,s)}return this.parseMarkets(i)}if("spot"===e||"futures"===e||"swap"===e){const i=e+"GetInstruments",s=await this[i](t);return this.parseMarkets(s)}throw new r.NotSupported(this.id+" fetchMarketsByType() does not support market type "+e)}async fetchCurrencies(e={}){if(this.checkRequiredCredentials(!1)){const t=await this.accountGetCurrencies(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(s,"name"),o=this.safeInteger(s,"can_deposit"),d=this.safeInteger(s,"can_withdraw"),c=1===o,h=1===d,u=!(!o||!d);i[a]={id:r,code:a,info:s,type:void 0,name:n,active:u,deposit:c,withdraw:h,fee:void 0,precision:this.parseNumber("1e-8"),limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(s,"min_withdrawal"),max:void 0}}}}return i}if(this.options.warnOnFetchCurrenciesWithoutAuthorization)throw new r.ExchangeError(this.id+' fetchCurrencies() is a private API endpoint that requires authentication with API keys. Set the API keys on the exchange instance or exchange.options["warnOnFetchCurrenciesWithoutAuthorization"] = false to suppress this warning message.')}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);let r=s.type+"GetInstrumentsInstrumentId";r+="swap"===s.type?"Depth":"Book";const a={instrument_id:s.id};void 0!==t&&(a.size=t);const n=await this[r](this.extend(a,i)),o=this.parse8601(this.safeString2(n,"timestamp","time"));return this.parseOrderBook(n,e,o)}parseTicker(e,t=undefined){const i=this.parse8601(this.safeString(e,"timestamp")),s=this.safeString(e,"instrument_id"),r=(t=this.safeMarket(s,t,"-")).symbol,a=this.safeString(e,"last"),n=this.safeString(e,"open_24h");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high_24h"),low:this.safeString(e,"low_24h"),bid:this.safeString(e,"best_bid"),bidVolume:this.safeString(e,"best_bid_size"),ask:this.safeString(e,"best_ask"),askVolume:this.safeString(e,"best_ask_size"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"base_volume_24h"),quoteVolume:this.safeString(e,"quote_volume_24h"),info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s=i.type+"GetInstrumentsInstrumentIdTicker",r={instrument_id:i.id},a=await this[s](this.extend(r,t));return this.parseTicker(a)}async fetchTickersByType(e,t=undefined,i={}){await this.loadMarkets(),t=this.marketSymbols(t);const s=e+"GetInstrumentsTicker",r=await this[s](i),a={};for(let e=0;e<r.length;e++){const t=this.parseTicker(r[e]);a[t.symbol]=t}return this.filterByArray(a,"symbol",t)}async fetchTickers(e=undefined,t={}){e=this.marketSymbols(e);const i=this.safeString(e,0);let s,r;return void 0!==i&&(s=this.market(i)),[r,t]=this.handleMarketTypeAndParams("fetchTickers",s,t),await this.fetchTickersByType(r,e,this.omit(t,"type"))}parseTrade(e,t=undefined){const i=this.safeString(e,"instrument_id"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.parse8601(this.safeString2(e,"timestamp","created_at")),n=this.safeString(e,"price");let o=this.safeString2(e,"size","qty");o=this.safeString(e,"order_qty",o);let d=this.safeString2(e,"exec_type","liquidity");"M"===d?d="maker":"T"===d&&(d="taker");const c=this.safeString(e,"side"),h=this.safeString(e,"fee");let u;if(void 0!==h){const e="buy"===c?t.base:t.quote;u={cost:a.O.stringNeg(h),currency:e}}const l=this.safeString(e,"order_id");return this.safeTrade({info:e,timestamp:r,datetime:this.iso8601(r),symbol:s,id:this.safeString2(e,"trade_id","ledger_id"),order:l,type:void 0,takerOrMaker:d,side:c,price:n,amount:o,cost:void 0,fee:u},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a=r.type+"GetInstrumentsInstrumentIdTrades";(void 0===i||i>100)&&(i=100);const n={instrument_id:r.id,limit:i},o=await this[a](this.extend(n,s));return this.parseTrades(o,r,t,i)}parseOHLCV(e,t=undefined){if(Array.isArray(e)){const t=e.length>6?6:5;let i=this.safeValue(e,0);return"string"==typeof i&&(i=this.parse8601(i)),[i,this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,t)]}return[this.parse8601(this.safeString(e,"time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=this.parseTimeframe(t),d={instrument_id:n.id,granularity:this.safeString(this.timeframes,t,t)},c=this.safeValue(this.options,"fetchOHLCV",{}),h=this.safeString(c,"type","Candles"),u=this.safeString(a,"type",h);a=this.omit(a,"type");const l=n.type+"GetInstrumentsInstrumentId"+u;if("Candles"===u){if(void 0!==i)void 0!==s&&(d.end=this.iso8601(this.sum(i,s*o*1e3))),d.start=this.iso8601(i);else if(void 0!==s){const e=this.milliseconds();d.start=this.iso8601(e-s*o*1e3),d.end=this.iso8601(e)}}else if("HistoryCandles"===u){if(n.option)throw new r.NotSupported(this.id+" fetchOHLCV() does not have "+u+" for "+n.type+" markets");if(void 0!==i)void 0===s&&(s=300),d.start=this.iso8601(this.sum(i,s*o*1e3)),d.end=this.iso8601(i);else if(void 0!==s){const e=this.milliseconds();d.end=this.iso8601(e-s*o*1e3),d.start=this.iso8601(e)}}const p=await this[l](this.extend(d,a));return this.parseOHLCVs(p,n,t,i,s)}parseAccountBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"balance"),n.used=this.safeString(s,"hold"),n.free=this.safeString(s,"available"),t[a]=n}return this.safeBalance(t)}parseFuturesBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"info",{}),s=Object.keys(i);for(let e=0;e<s.length;e++){const r=s[e],n=this.safeCurrencyCode(r),o=this.safeValue(i,r,{}),d=this.account(),c=this.safeString(o,"total_avail_balance");if("fixed"===this.safeString(o,"margin_mode")){const e=this.safeValue(o,"contracts",[]);let t=c;for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"fixed_balance"),n=this.safeString(s,"realized_pnl"),o=this.safeString(s,"margin_frozen"),d=this.safeString(s,"margin_for_unfilled"),c=a.O.stringSub(a.O.stringSub(a.O.stringAdd(r,n),o),d);t=a.O.stringAdd(t,c)}d.free=t}else{const e=this.safeString(o,"realized_pnl"),t=this.safeString(o,"unrealized_pnl"),i=this.safeString(o,"margin_frozen"),s=this.safeString(o,"margin_for_unfilled"),r=a.O.stringAdd(a.O.stringAdd(c,e),t);d.free=a.O.stringSub(a.O.stringSub(r,i),s)}d.total=this.safeString(o,"equity"),t[n]=d}return this.safeBalance(t)}parseSwapBalance(e){const t={info:e};let i;const s=this.safeValue(e,"info",[]);for(let e=0;e<s.length;e++){const r=s[e],a=this.safeString(r,"instrument_id"),n=this.safeSymbol(a),o=this.parse8601(this.safeString(r,"timestamp"));i=void 0===i?o:Math.max(i,o);const d=this.account();d.total=this.safeString(r,"equity"),d.free=this.safeString(r,"total_avail_balance"),t[n]=d}return t.timestamp=i,t.datetime=this.iso8601(i),this.safeBalance(t)}async fetchBalance(e={}){const t=this.safeString2(this.options,"fetchBalance","defaultType"),i=this.safeString(e,"type",t);if(void 0===i)throw new r.ArgumentsRequired(this.id+" fetchBalance() requires a type parameter (one of 'account', 'spot', 'futures', 'swap')");await this.loadMarkets();const s=i+"Get"+("account"===i?"Wallet":"Accounts"),a=this.omit(e,"type"),n=await this[s](a);return this.parseBalanceByType(i,n)}parseBalanceByType(e,t){if("account"===e||"spot"===e)return this.parseAccountBalance(t);if("futures"===e)return this.parseFuturesBalance(t);if("swap"===e)return this.parseSwapBalance(t);throw new r.NotSupported(this.id+" fetchBalance does not support the '"+e+"' type (the type must be one of 'account', 'spot', 'futures', 'swap')")}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e);let d={instrument_id:o.id};const c=this.safeString2(n,"client_oid","clientOrderId");let h;if(void 0!==c&&(d.client_oid=c,n=this.omit(n,["client_oid","clientOrderId"])),o.futures||o.swap){const i=o.futures?this.numberToString(s):this.amountToPrecision(e,s);d=this.extend(d,{type:t,size:i});const r=this.safeString(n,"order_type");"market"===t||"4"===r?d.order_type="4":d.price=this.priceToPrecision(e,a),o.futures&&(d.leverage="10"),h=o.type+"PostOrder"}else{if(d=this.extend(d,{side:i,type:t}),"limit"===t)d.price=this.priceToPrecision(e,a),d.size=this.amountToPrecision(e,s);else if("market"===t)if("buy"===i){let t=this.safeNumber(n,"notional");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==a)void 0===t&&(t=s*a);else if(void 0===t)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'notional' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?s:t;d.notional=this.costToPrecision(e,t)}else d.size=this.amountToPrecision(e,s);h="spotPostOrders"}const u=await this[h](this.extend(d,n)),l=this.parseOrder(u,o);return this.extend(l,{type:t,side:i})}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t);let a;if(s.futures||s.swap)a=s.type;else{const e=this.safeString2(this.options,"cancelOrder","defaultType",s.type);a=this.safeString(i,"type",e)}if(void 0===a)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a type parameter (one of 'spot', 'futures', 'swap').");let n=a+"PostCancelOrder";const o={instrument_id:s.id};s.futures||s.swap?n+="InstrumentId":n+="s";const d=this.safeString2(i,"client_oid","clientOrderId");void 0!==d?(n+="ClientOid",o.client_oid=d):(n+="OrderId",o.order_id=e);const c=this.omit(i,["type","client_oid","clientOrderId"]),h=await this[n](this.extend(o,c)),u="result"in h?h:this.safeValue(h,s.id,{});return this.parseOrder(u,s)}parseOrderStatus(e){return this.safeString({"-2":"failed","-1":"canceled",0:"open",1:"open",2:"closed",3:"open",4:"canceled"},e,e)}parseOrderSide(e){return this.safeString({1:"buy",2:"sell",3:"sell",4:"buy"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"order_id"),s=this.parse8601(this.safeString(e,"timestamp"));let r=this.safeString(e,"side");const n=this.safeString(e,"type");"buy"!==r&&"sell"!==r&&(r=this.parseOrderSide(n));const o=this.safeString(e,"instrument_id");t=this.safeMarket(o,t);let d=this.safeString(e,"size");const c=this.safeString2(e,"filled_size","filled_qty");let h;void 0!==d&&void 0!==c&&(d=a.O.stringMax(d,c),h=a.O.stringMax("0",a.O.stringSub(d,c))),"market"===n&&(h="0");let u=this.safeString2(e,"filled_notional","funds");const l=this.safeString(e,"price");let p=this.safeString(e,"price_avg");void 0===u?void 0!==c&&void 0!==p&&(u=a.O.stringMul(p,c)):void 0===p&&void 0!==c&&a.O.stringGt(c,"0")&&(p=a.O.stringDiv(u,c));const f=this.parseOrderStatus(this.safeString(e,"state")),m=this.safeNumber(e,"fee");let v;void 0!==m&&(v={cost:m,currency:void 0});let g=this.safeString(e,"client_oid");void 0!==g&&g.length<1&&(g=void 0);const y=this.safeNumber(e,"trigger_price");return this.safeOrder({info:e,id:i,clientOrderId:g,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,symbol:t.symbol,type:n,timeInForce:void 0,postOnly:void 0,side:r,price:l,stopPrice:y,triggerPrice:y,average:p,cost:u,amount:d,filled:c,remaining:h,status:f,fee:v,trades:void 0},t)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a=this.safeString2(this.options,"fetchOrder","defaultType",s.type),n=this.safeString(i,"type",a);if(void 0===n)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a type parameter (one of 'spot', 'futures', 'swap').");let o=n+"GetOrders"+(s.futures||s.swap?"InstrumentId":"");const d={instrument_id:s.id},c=this.safeString(i,"client_oid");void 0!==c?(o+="ClientOid",d.client_oid=c):(o+="OrderId",d.order_id=e);const h=this.omit(i,"type"),u=await this[o](this.extend(d,h));return this.parseOrder(u)}async fetchOrdersByState(e,t=undefined,i=undefined,s=undefined,a={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrdersByState() requires a symbol argument");await this.loadMarkets();const n=this.market(t);let o;if(n.futures||n.swap)o=n.type;else{const e=this.safeString2(this.options,"fetchOrder","defaultType",n.type);o=this.safeString(a,"type",e)}if(void 0===o)throw new r.ArgumentsRequired(this.id+" fetchOrdersByState() requires a type parameter (one of 'spot', 'futures', 'swap').");const d={instrument_id:n.id,state:e};let c=o+"GetOrders";(n.futures||n.swap)&&(c+="InstrumentId");const h=this.omit(a,"type"),u=await this[c](this.extend(d,h));let l;if(n.swap||n.futures)l=this.safeValue(u,"order_info",[]);else{l=u;const e=u.length;if(e<1)return[];e>1&&void 0!==this.safeValue(u[1],"before")&&(l=u[0])}return this.parseOrders(l,n,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("6",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("7",e,t,i,s)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address");let s=this.safeString2(e,"tag","payment_id");s=this.safeString2(e,"memo","Memo",s);const r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r);return this.checkAddress(i),{currency:a,address:i,tag:s,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=e.split("-"),s=this.currency(i[0]),a={currency:s.id},n=await this.accountGetDepositAddress(this.extend(a,t)),o=this.parseDepositAddresses(n,[s.code]),d=this.safeValue(o,e);if(void 0===d)throw new r.InvalidAddress(this.id+" fetchDepositAddress() cannot return nonexistent addresses, you should create withdrawal addresses with the exchange website first");return d}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c={amount:this.currencyToPrecision(e,t),currency:a.id,from:o,to:d,type:"0"};"main"===o?(c.type="1",c.sub_account=d,c.to="0"):"main"===d&&(c.type="2",c.sub_account=o,c.from="0",c.to="6");const h=await this.accountPostTransfer(this.extend(c,r));return this.parseTransfer(h,a)}parseTransfer(e,t=undefined){const i=this.safeValue(this.options,"accountsById",{});return{info:e,id:this.safeString(e,"transfer_id"),timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(this.safeString(e,"currency"),t),amount:this.safeNumber(e,"amount"),fromAccount:this.safeString(i,this.safeString(e,"from")),toAccount:this.safeString(i,this.safeString(e,"to")),status:this.parseTransferStatus(this.safeString(e,"result"))}}parseTransferStatus(e){return this.safeString({true:"ok"},e,"failed")}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e);s&&(i=i+":"+s);const o=this.safeString(a,"fee");if(void 0===o)throw new r.ArgumentsRequired(this.id+" withdraw() requires a 'fee' string parameter, network transaction fee must be ≥ 0. Withdrawals to OKCoin or OKEx are fee-free, please set '0'. Withdrawing to external digital asset address requires network transaction fee.");const d={currency:n.id,to_address:i,destination:"4",amount:this.numberToString(t),fee:o};"password"in a?d.trade_pwd=a.password:"trade_pwd"in a?d.trade_pwd=a.trade_pwd:this.password&&(d.trade_pwd=this.password);const c=this.omit(a,["fee","password","trade_pwd"]);if(!("trade_pwd"in d))throw new r.ExchangeError(this.id+" withdraw() requires this.password set on the exchange instance or a password / trade_pwd parameter");const h=await this.accountPostWithdrawal(this.extend(d,c));return this.parseTransaction(h,n)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n="accountGetDepositHistory";void 0!==e&&(a=this.currency(e),r.currency=a.id,n+="Currency");const o=await this[n](this.extend(r,s));return this.parseTransactions(o,a,t,i,s)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a,n="accountGetWithdrawalHistory";void 0!==e&&(a=this.currency(e),r.currency=a.id,n+="Currency");const o=await this[n](this.extend(r,s));return this.parseTransactions(o,a,t,i,s)}parseTransactionStatus(e){return this.safeString({"-3":"pending","-2":"canceled","-1":"failed",0:"pending",1:"pending",2:"ok",3:"pending",4:"pending",5:"pending"},e,e)}parseTransaction(e,t=undefined){let i,s,r;const a=this.safeString(e,"withdrawal_id"),n=this.safeString(e,"from"),o=this.safeString(e,"to"),d=this.safeString(e,"tag");void 0!==a?(i="withdrawal",s=a,r=o):(s=this.safeString2(e,"payment_id","deposit_id"),i="deposit",r=o);const c=this.safeString(e,"currency"),h=this.safeCurrencyCode(c),u=this.safeNumber(e,"amount"),l=this.parseTransactionStatus(this.safeString(e,"status")),p=this.safeString(e,"txid"),f=this.parse8601(this.safeString(e,"timestamp"));let m;if("deposit"===i)m=0;else if(void 0!==c){const t=this.safeString(e,"fee");if(void 0!==t){const e=c.toLowerCase(),i=t.replace(e,"");m=parseFloat(i)}}return{info:e,id:s,currency:h,amount:u,network:void 0,addressFrom:n,addressTo:o,address:r,tagFrom:void 0,tagTo:d,tag:d,status:l,type:i,updated:void 0,txid:p,timestamp:f,datetime:this.iso8601(f),fee:{currency:h,cost:m}}}parseMyTrade(e,t=undefined){const i=this.safeValue(e,1),s=this.safeValue(e,0),n=this.safeString(s,"instrument_id");if(n!==this.safeString(i,"instrument_id"))throw new r.NotSupported(this.id+" parseMyTrade() received unrecognized response format, differing instrument_ids in one fill, the exchange API might have changed, paste your verbose output: https://github.com/ccxt/ccxt/wiki/FAQ#what-is-required-to-get-help");const o=n,d=(t=this.safeMarket(o,t)).symbol,c=t.quoteId;let h,u,l,p;this.safeString(i,"currency")===c?(h=this.safeString(s,"side"),u=this.safeString(s,"size"),l=this.safeString(i,"size"),p=this.safeString(s,"currency")):(h=this.safeString(i,"side"),u=this.safeString(i,"size"),l=this.safeString(s,"size"),p=this.safeString(i,"currency"));const f=this.safeString(i,"trade_id"),m=this.safeString(i,"price"),v=this.safeString(s,"fee"),g=this.safeString(i,"fee"),y=this.safeCurrencyCode(this.safeString(s,"currency")),b=this.safeCurrencyCode(this.safeString(i,"currency"));let w,S;void 0===v||a.O.stringEquals(v,"0")?w=void 0===g||a.O.stringEquals(g,"0")?{cost:"0",currency:this.safeCurrencyCode(p)}:{cost:a.O.stringNeg(g),currency:b}:void 0===g||a.O.stringEquals(g,"0")?w={cost:a.O.stringNeg(v),currency:y}:S=[{cost:a.O.stringNeg(v),currency:y},{cost:a.O.stringNeg(g),currency:b}];const P=this.parse8601(this.safeString2(i,"timestamp","created_at"));let k=this.safeString2(i,"exec_type","liquidity");"M"===k?k="maker":"T"===k&&(k="taker");const O=this.safeString(i,"order_id");return this.safeTrade({info:e,timestamp:P,datetime:this.iso8601(P),symbol:d,id:f,order:O,type:void 0,takerOrMaker:k,side:h,price:m,amount:u,cost:l,fee:w,fees:S},t)}parseMyTrades(e,t=undefined,i=undefined,s=undefined,r={}){const a=this.groupBy(e,"trade_id"),n=Object.keys(a),o=[];for(let e=0;e<n.length;e++){const t=a[n[e]];if(2===t.length){const e=this.parseMyTrade(t);o.push(e)}}return t=this.safeMarket(void 0,t),this.filterBySymbolSinceLimit(o,t.symbol,i,s)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e);void 0!==i&&i>100&&(i=100);const n={instrument_id:a.id},o=this.safeString2(this.options,"fetchMyTrades","defaultType"),d=this.safeString(s,"type",o),c=this.omit(s,"type"),h=d+"GetFills",u=await this[h](this.extend(n,c));return this.parseMyTrades(u,a,t,i,s)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){const a={order_id:e};return await this.fetchMyTrades(t,i,s,this.extend(a,r))}async fetchPosition(e,t={}){await this.loadMarkets();const i=this.market(e);let s;const a={instrument_id:i.id},n=i.type;if("futures"===n||"swap"===n)s=n+"GetInstrumentIdPosition";else{if("option"!==n)throw new r.NotSupported(this.id+" fetchPosition() does not support "+n+" market "+e+", supported market types are futures, swap or option");if(void 0===this.safeString(t,"underlying"))throw new r.ArgumentsRequired(this.id+" fetchPosition() requires an underlying parameter for "+n+" market "+e);s=n+"GetUnderlyingPosition"}return await this[s](this.extend(a,t))}async fetchPositions(e=undefined,t={}){let i;await this.loadMarkets();const s=this.safeString2(this.options,"fetchPositions","defaultType"),a=this.safeString(t,"type",s);if("futures"===a||"swap"===a)i=a+"GetPosition";else{if("option"!==a)throw new r.NotSupported(this.id+" fetchPositions() does not support "+a+" markets, supported market types are futures, swap or option");if(void 0===this.safeString(t,"underlying"))throw new r.ArgumentsRequired(this.id+" fetchPositions() requires an underlying parameter for "+a+" markets");i=a+"GetUnderlyingPosition"}return t=this.omit(t,"type"),await this[i](t)}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.safeString2(this.options,"fetchLedger","defaultType"),n=this.safeString(s,"type",a),o=this.omit(s,"type"),d="account"===n?"":"Accounts";let c="";const h={};let u;if(void 0!==i&&(h.limit=i),"spot"===n){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchLedger() requires a currency code argument for '"+n+"' markets");c="Currency",u=this.currency(e),h.currency=u.id}else if("futures"===n){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchLedger() requires an underlying symbol for '"+n+"' markets");c="Underlying";const t=this.market(e),i=this.safeValue(t,"info",{}),s=this.safeString(i,"settlement_currency"),a=this.safeCurrencyCode(s);u=this.currency(a);const o=this.safeString(i,"underlying");h.underlying=o}else if("swap"===n){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchLedger() requires a code argument (a market symbol) for '"+n+"' markets");c="InstrumentId";const t=this.market(e);u=this.currency(t.base),h.instrument_id=t.id}else{if("account"!==n)throw new r.NotSupported(this.id+" fetchLedger does not support the '"+n+"' type (the type must be one of 'account', 'spot', 'margin', 'futures', 'swap')");void 0!==e&&(u=this.currency(e),h.currency=u.id)}const l=n+"Get"+d+c+"Ledger",p=await this[l](this.extend(h,o));if(p.length<1)return[];if("swap"===n){const s=this.parseLedger(p);return this.filterBySymbolSinceLimit(s,e,t,i)}return this.parseLedger(p,u,t,i)}parseLedgerEntryType(e){return this.safeString({transfer:"transfer",trade:"trade",rebate:"rebate",match:"trade",fee:"fee",settlement:"trade",liquidation:"trade",funding:"fee",margin:"margin"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"ledger_id"),s=this.safeValue(e,"details",{}),r=this.safeString(s,"order_id"),a=this.parseLedgerEntryType(this.safeString(e,"type")),n=this.safeCurrencyCode(this.safeString(e,"currency"),t),o=this.safeNumber(e,"amount"),d=this.parse8601(this.safeString(e,"timestamp")),c={cost:this.safeNumber(e,"fee"),currency:n},h=this.safeNumber(e,"balance"),u=this.safeString(e,"instrument_id");return{info:e,id:i,account:void 0,referenceId:r,referenceAccount:void 0,type:a,currency:n,symbol:this.safeSymbol(u),amount:o,before:void 0,after:h,status:"ok",timestamp:d,datetime:this.iso8601(d),fee:c}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=Array.isArray(s);let d="/api/"+t+"/"+this.version+"/";d+=n?e:this.implodeParams(e,s);const c=n?s:this.omit(s,this.extractParams(e));let h=this.implodeHostname(this.urls.api.rest)+d;const u=this.getPathAuthenticationType(e);if("public"===u||"information"===u)Object.keys(c).length&&(h+="?"+this.urlencode(c));else if("private"===u){this.checkRequiredCredentials();const e=this.iso8601(this.milliseconds());r={"OK-ACCESS-KEY":this.apiKey,"OK-ACCESS-PASSPHRASE":this.password,"OK-ACCESS-TIMESTAMP":e};let t=e+i+d;if("GET"===i){if(Object.keys(c).length){const e="?"+this.urlencode(c);h+=e,t+=e}}else(n||Object.keys(c).length)&&(t+=a=this.json(c)),r["Content-Type"]="application/json";const s=this.hmac(this.encode(t),this.encode(this.secret),o.J,"base64");r["OK-ACCESS-SIGN"]=s}return{url:h,method:i,body:a,headers:r}}getPathAuthenticationType(e){if("underlying"===e)return"public";const t=this.safeValue(this.options,"auth",{}),i=this.findBroadlyMatchedKey(t,e);return this.safeString(t,i,"private")}handleErrors(e,t,i,s,a,n,o,d,c){if(!o)return;const h=this.id+" "+n;if(503===e)throw new r.ExchangeNotAvailable(h);const u=this.safeString(o,"message"),l=this.safeString2(o,"code","error_code"),p=void 0!==u&&""!==u,f=void 0!==l&&"0"!==l;if(p&&(this.throwExactlyMatchedException(this.exceptions.exact,u,h),this.throwBroadlyMatchedException(this.exceptions.broad,u,h)),f&&this.throwExactlyMatchedException(this.exceptions.exact,l,h),f||p)throw new r.ExchangeError(h)}}},5322:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(4042);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"okex",alias:!0})}}},7826:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(5322);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"okex5",alias:!0})}}},4042:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5190),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"okx",name:"OKX",countries:["CN","US"],version:"v5",rateLimit:100,pro:!0,certified:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!0,option:void 0,addMargin:!0,borrowMargin:!0,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!0,createDepositAddress:!1,createOrder:!0,createPostOnlyOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchAccounts:!0,fetchBalance:!0,fetchBidsAsks:void 0,fetchBorrowInterest:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!0,fetchBorrowRateHistory:!0,fetchBorrowRates:!0,fetchBorrowRatesPerSymbol:!1,fetchCanceledOrders:!0,fetchClosedOrder:void 0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!1,fetchIndexOHLCV:!0,fetchL3OrderBook:!1,fetchLedger:!0,fetchLedgerEntry:void 0,fetchLeverage:!0,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!0,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterest:!0,fetchOpenInterestHistory:!0,fetchOpenOrder:void 0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!1,fetchOrderTrades:!0,fetchPermissions:void 0,fetchPosition:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfer:!0,fetchTransfers:!1,fetchWithdrawal:!0,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!0,repayMargin:!0,setLeverage:!0,setMargin:!1,setMarginMode:!0,setPositionMode:!0,signIn:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","2h":"2H","4h":"4H","6h":"6H","12h":"12H","1d":"1D","1w":"1W","1M":"1M","3M":"3M"},hostname:"www.okx.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/152485636-38b19e4a-bece-4dec-979a-5982859ffc04.jpg",api:{rest:"https://{hostname}"},www:"https://www.okx.com",doc:"https://www.okx.com/docs-v5/en/",fees:"https://www.okx.com/pages/products/fees.html",referral:"https://www.okx.com/join/1888677",test:{rest:"https://{hostname}"}},api:{public:{get:{"market/tickers":1,"market/ticker":1,"market/index-tickers":1,"market/books":1,"market/books-lite":1.66,"market/candles":.5,"market/history-candles":1,"market/history-mark-price-candles":2,"market/history-index-candles":2,"market/index-candles":1,"market/mark-price-candles":1,"market/trades":1,"market/platform-24-volume":10,"market/open-oracle":40,"market/index-components":1,"market/option/instrument-family-trades":1,"public/instruments":1,"public/instrument-tick-bands":4,"public/delivery-exercise-history":.5,"public/open-interest":1,"public/funding-rate":1,"public/funding-rate-history":1,"public/price-limit":1,"public/opt-summary":1,"public/estimated-price":2,"public/discount-rate-interest-free-quota":10,"public/time":2,"public/liquidation-orders":.5,"public/mark-price":2,"public/option-trades":1,"public/position-tiers":2,"public/underlying":1,"public/interest-rate-loan-quota":10,"public/vip-interest-rate-loan-quota":10,"rubik/stat/trading-data/support-coin":4,"rubik/stat/taker-volume":4,"rubik/stat/margin/loan-ratio":4,"rubik/stat/contracts/long-short-account-ratio":4,"rubik/stat/contracts/open-interest-volume":4,"rubik/stat/option/open-interest-volume":4,"rubik/stat/option/open-interest-volume-ratio":4,"rubik/stat/option/open-interest-volume-expiry":4,"rubik/stat/option/open-interest-volume-strike":4,"rubik/stat/option/taker-block-volume":4,"system/status":100,"finance/savings/lending-rate-summary":5/3,"finance/savings/lending-rate-history":5/3,"market/exchange-rate":20}},private:{get:{"account/account-position-risk":2,"account/balance":2,"account/positions":2,"account/positions-history":2,"account/bills":5/3,"account/bills-archive":5/3,"account/config":4,"account/max-size":1,"account/max-avail-size":1,"account/leverage-info":1,"account/max-loan":1,"account/trade-fee":4,"account/interest-accrued":4,"account/interest-rate":4,"account/max-withdrawal":1,"account/risk-state":2,"account/borrow-repay-history":4,"account/quick-margin-borrow-repay-history":4,"account/interest-limits":4,"account/vip-interest-accrued":4,"account/vip-loan-order-list":4,"account/vip-loan-order-detail":4,"asset/asset-valuation":.2,"asset/deposit-address":5/3,"asset/balances":5/3,"asset/transfer-state":10,"asset/deposit-history":5/3,"asset/withdrawal-history":5/3,"asset/deposit-withdraw-status":20,"asset/currencies":5/3,"asset/bills":5/3,"asset/piggy-balance":5/3,"asset/deposit-lightning":5,"asset/non-tradable-assets":5/3,"trade/order":1/3,"trade/orders-pending":1,"trade/orders-history":.5,"trade/orders-history-archive":1,"trade/fills":1/3,"trade/fills-history":2,"trade/orders-algo-pending":1,"trade/orders-algo-history":1,"trade/order-algo":1,"account/subaccount/balances":10,"asset/subaccount/bills":5/3,"users/subaccount/list":10,"users/subaccount/apikey":10,"users/entrust-subaccount-list":10,"broker/nd/info":10,"broker/nd/subaccount-info":10,"asset/broker/nd/subaccount-deposit-address":4,"asset/broker/nd/subaccount-deposit-history":4,"broker/nd/rebate-daily":1,"broker/nd/subaccount/apikey":10,"broker/nd/rebate-per-orders":300,"asset/broker/nd/subaccount-withdrawal-history":4,"asset/convert/currencies":5/3,"asset/convert/currency-pair":5/3,"asset/convert/estimate-quote":5,"asset/convert/trade":5,"asset/convert/history":5/3,"account/greeks":2,"finance/staking-defi/offers":1,"finance/staking-defi/orders-active":1,"finance/staking-defi/orders-history":1,"finance/savings/balance":5/3,"finance/savings/lending-history":5/3,"rfq/counterparties":4,"rfq/maker-instrument-settings":4,"rfq/rfqs":10,"rfq/quotes":10,"rfq/trades":4,"rfq/public-trades":4,"copytrading/current-subpositions":10,"copytrading/subpositions-history":10,"copytrading/instruments":10,"copytrading/profit-sharing-details":10,"copytrading/total-profit-sharing":10,"copytrading/unrealized-profit-sharing-details":10,"tradingBot/grid/orders-algo-pending":1,"tradingBot/grid/orders-algo-history":1,"tradingBot/grid/orders-algo-details":1,"tradingBot/grid/sub-orders":1,"tradingBot/grid/positions":1,"tradingBot/grid/ai-param":1},post:{"account/set-position-mode":4,"account/set-leverage":1,"account/position/margin-balance":1,"account/set-greeks":4,"account/set-isolated-mode":4,"account/set-riskOffset-type":2,"account/simulated_margin":10,"account/borrow-repay":5/3,"account/quick-margin-borrow-repay":4,"account/activate-option":4,"account/set-auto-loan":4,"asset/transfer":10,"asset/withdrawal":5/3,"asset/withdrawal-lightning":5,"asset/cancel-withdrawal":5/3,"asset/convert-dust-assets":10,"trade/order":1/3,"trade/batch-orders":1/15,"trade/cancel-order":1/3,"trade/cancel-batch-orders":1/15,"trade/amend-order":1/3,"trade/amend-batch-orders":1/3,"trade/close-position":1,"trade/order-algo":1,"trade/cancel-algos":1,"trade/cancel-advance-algos":1,"users/subaccount/delete-apikey":10,"users/subaccount/modify-apikey":10,"users/subaccount/apikey":10,"users/subaccount/set-transfer-out":10,"asset/subaccount/transfer":10,"broker/nd/create-subaccount":10,"broker/nd/delete-subaccount":10,"broker/nd/set-subaccount-level":4,"broker/nd/set-subaccount-fee-rate":4,"asset/broker/nd/subaccount-deposit-address":4,"broker/nd/subaccount/apikey":10,"broker/nd/subaccount/delete-apikey":10,"broker/nd/subaccount/modify-apikey":10,"broker/nd/rebate-per-orders":36e3,"finance/staking-defi/purchase":3,"finance/staking-defi/redeem":3,"finance/staking-defi/cancel":3,"finance/savings/purchase-redempt":5/3,"finance/savings/set-lending-rate":5/3,"rfq/create-rfq":4,"rfq/cancel-rfq":4,"rfq/cancel-batch-rfqs":10,"rfq/cancel-all-rfqs":10,"rfq/execute-quote":10,"rfq/maker-instrument-settings":4,"rfq/mmp-reset":4,"rfq/create-quote":.4,"rfq/cancel-quote":.4,"rfq/cancel-batch-quotes":10,"rfq/cancel-all-quotes":10,"copytrading/algo-order":20,"copytrading/close-subposition":10,"copytrading/set-instruments":10,"tradingBot/grid/order-algo":1,"tradingBot/grid/amend-order-algo":1,"tradingBot/grid/stop-order-algo":1,"tradingBot/grid/withdraw-income":1,"tradingBot/grid/compute-margin-balance":1,"tradingBot/grid/margin-balance":1}}},fees:{trading:{taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.0010")},spot:{taker:this.parseNumber("0.0015"),maker:this.parseNumber("0.0010")},future:{taker:this.parseNumber("0.0005"),maker:this.parseNumber("0.0002")},swap:{taker:this.parseNumber("0.00050"),maker:this.parseNumber("0.00020")}},requiredCredentials:{apiKey:!0,secret:!0,password:!0},exceptions:{exact:{1:r.ExchangeError,2:r.ExchangeError,5e4:r.BadRequest,50001:r.OnMaintenance,50002:r.BadRequest,50004:r.RequestTimeout,50005:r.ExchangeNotAvailable,50006:r.BadRequest,50007:r.AccountSuspended,50008:r.AuthenticationError,50009:r.AccountSuspended,50010:r.ExchangeError,50011:r.RateLimitExceeded,50012:r.ExchangeError,50013:r.ExchangeNotAvailable,50014:r.BadRequest,50015:r.ExchangeError,50016:r.ExchangeError,50017:r.ExchangeError,50018:r.ExchangeError,50019:r.ExchangeError,50020:r.ExchangeError,50021:r.ExchangeError,50022:r.ExchangeError,50023:r.ExchangeError,50024:r.BadRequest,50025:r.ExchangeError,50026:r.ExchangeNotAvailable,50027:r.PermissionDenied,50028:r.ExchangeError,50044:r.BadRequest,50100:r.ExchangeError,50101:r.AuthenticationError,50102:r.InvalidNonce,50103:r.AuthenticationError,50104:r.AuthenticationError,50105:r.AuthenticationError,50106:r.AuthenticationError,50107:r.AuthenticationError,50108:r.ExchangeError,50109:r.ExchangeError,50110:r.PermissionDenied,50111:r.AuthenticationError,50112:r.AuthenticationError,50113:r.AuthenticationError,50114:r.AuthenticationError,50115:r.BadRequest,51e3:r.BadRequest,51001:r.BadSymbol,51002:r.BadSymbol,51003:r.BadRequest,51004:r.InvalidOrder,51005:r.InvalidOrder,51006:r.InvalidOrder,51007:r.InvalidOrder,51008:r.InsufficientFunds,51009:r.AccountSuspended,51010:r.AccountNotEnabled,51011:r.InvalidOrder,51012:r.BadSymbol,51014:r.BadSymbol,51015:r.BadSymbol,51016:r.InvalidOrder,51017:r.ExchangeError,51018:r.ExchangeError,51019:r.ExchangeError,51020:r.InvalidOrder,51021:r.BadSymbol,51022:r.BadSymbol,51023:r.ExchangeError,51024:r.AccountSuspended,51025:r.ExchangeError,51026:r.BadSymbol,51027:r.BadSymbol,51028:r.BadSymbol,51029:r.BadSymbol,51030:r.BadSymbol,51031:r.InvalidOrder,51100:r.InvalidOrder,51101:r.InvalidOrder,51102:r.InvalidOrder,51103:r.InvalidOrder,51104:r.InvalidOrder,51105:r.InvalidOrder,51106:r.InvalidOrder,51107:r.InvalidOrder,51108:r.InvalidOrder,51109:r.InvalidOrder,51110:r.InvalidOrder,51111:r.BadRequest,51112:r.InvalidOrder,51113:r.RateLimitExceeded,51115:r.InvalidOrder,51116:r.InvalidOrder,51117:r.InvalidOrder,51118:r.InvalidOrder,51119:r.InsufficientFunds,51120:r.InvalidOrder,51121:r.InvalidOrder,51122:r.InvalidOrder,51124:r.InvalidOrder,51125:r.InvalidOrder,51126:r.InvalidOrder,51127:r.InsufficientFunds,51128:r.InvalidOrder,51129:r.InvalidOrder,51130:r.BadSymbol,51131:r.InsufficientFunds,51132:r.InvalidOrder,51133:r.InvalidOrder,51134:r.InvalidOrder,51135:r.InvalidOrder,51136:r.InvalidOrder,51137:r.InvalidOrder,51138:r.InvalidOrder,51139:r.InvalidOrder,51156:r.BadRequest,51159:r.BadRequest,51162:r.InvalidOrder,51163:r.InvalidOrder,51166:r.InvalidOrder,51201:r.InvalidOrder,51202:r.InvalidOrder,51203:r.InvalidOrder,51204:r.InvalidOrder,51205:r.InvalidOrder,51250:r.InvalidOrder,51251:r.InvalidOrder,51252:r.InvalidOrder,51253:r.InvalidOrder,51254:r.InvalidOrder,51255:r.InvalidOrder,51256:r.InvalidOrder,51257:r.InvalidOrder,51258:r.InvalidOrder,51259:r.InvalidOrder,51260:r.InvalidOrder,51261:r.InvalidOrder,51262:r.InvalidOrder,51263:r.InvalidOrder,51264:r.InvalidOrder,51265:r.InvalidOrder,51267:r.InvalidOrder,51268:r.InvalidOrder,51269:r.InvalidOrder,51270:r.InvalidOrder,51271:r.InvalidOrder,51272:r.InvalidOrder,51273:r.InvalidOrder,51274:r.InvalidOrder,51275:r.InvalidOrder,51276:r.InvalidOrder,51277:r.InvalidOrder,51278:r.InvalidOrder,51279:r.InvalidOrder,51280:r.InvalidOrder,51321:r.InvalidOrder,51322:r.InvalidOrder,51323:r.BadRequest,51324:r.BadRequest,51325:r.InvalidOrder,51327:r.InvalidOrder,51328:r.InvalidOrder,51329:r.InvalidOrder,51330:r.InvalidOrder,51400:r.OrderNotFound,51401:r.OrderNotFound,51402:r.OrderNotFound,51403:r.InvalidOrder,51404:r.InvalidOrder,51405:r.ExchangeError,51406:r.ExchangeError,51407:r.BadRequest,51408:r.ExchangeError,51409:r.ExchangeError,51410:r.CancelPending,51500:r.ExchangeError,51501:r.ExchangeError,51502:r.InsufficientFunds,51503:r.ExchangeError,51506:r.ExchangeError,51508:r.ExchangeError,51509:r.ExchangeError,51510:r.ExchangeError,51511:r.ExchangeError,51600:r.ExchangeError,51601:r.ExchangeError,51602:r.ExchangeError,51603:r.OrderNotFound,51732:r.AuthenticationError,51733:r.AuthenticationError,51734:r.AuthenticationError,51735:r.ExchangeError,51736:r.InsufficientFunds,52e3:r.ExchangeError,54e3:r.ExchangeError,54001:r.ExchangeError,58e3:r.ExchangeError,58001:r.AuthenticationError,58002:r.PermissionDenied,58003:r.ExchangeError,58004:r.AccountSuspended,58005:r.ExchangeError,58006:r.ExchangeError,58007:r.ExchangeError,58100:r.ExchangeError,58101:r.AccountSuspended,58102:r.RateLimitExceeded,58103:r.ExchangeError,58104:r.ExchangeError,58105:r.ExchangeError,58106:r.ExchangeError,58107:r.ExchangeError,58108:r.ExchangeError,58109:r.ExchangeError,58110:r.ExchangeError,58111:r.ExchangeError,58112:r.ExchangeError,58114:r.ExchangeError,58115:r.ExchangeError,58116:r.ExchangeError,58117:r.ExchangeError,58125:r.BadRequest,58126:r.BadRequest,58127:r.BadRequest,58128:r.BadRequest,58200:r.ExchangeError,58201:r.ExchangeError,58202:r.ExchangeError,58203:r.InvalidAddress,58204:r.AccountSuspended,58205:r.ExchangeError,58206:r.ExchangeError,58207:r.InvalidAddress,58208:r.ExchangeError,58209:r.ExchangeError,58210:r.ExchangeError,58211:r.ExchangeError,58212:r.ExchangeError,58213:r.AuthenticationError,58221:r.BadRequest,58222:r.BadRequest,58224:r.BadRequest,58227:r.BadRequest,58228:r.BadRequest,58229:r.InsufficientFunds,58300:r.ExchangeError,58350:r.InsufficientFunds,59e3:r.ExchangeError,59001:r.ExchangeError,59100:r.ExchangeError,59101:r.ExchangeError,59102:r.ExchangeError,59103:r.InsufficientFunds,59104:r.ExchangeError,59105:r.ExchangeError,59106:r.ExchangeError,59107:r.ExchangeError,59108:r.InsufficientFunds,59109:r.ExchangeError,59128:r.InvalidOrder,59200:r.InsufficientFunds,59201:r.InsufficientFunds,59216:r.BadRequest,59300:r.ExchangeError,59301:r.ExchangeError,59313:r.ExchangeError,59401:r.ExchangeError,59500:r.ExchangeError,59501:r.ExchangeError,59502:r.ExchangeError,59503:r.ExchangeError,59504:r.ExchangeError,59505:r.ExchangeError,59506:r.ExchangeError,59507:r.ExchangeError,59508:r.AccountSuspended,60001:r.AuthenticationError,60002:r.AuthenticationError,60003:r.AuthenticationError,60004:r.AuthenticationError,60005:r.AuthenticationError,60006:r.InvalidNonce,60007:r.AuthenticationError,60008:r.AuthenticationError,60009:r.AuthenticationError,60010:r.AuthenticationError,60011:r.AuthenticationError,60012:r.BadRequest,60013:r.BadRequest,60014:r.RateLimitExceeded,60015:r.NetworkError,60016:r.ExchangeNotAvailable,60017:r.BadRequest,60018:r.BadRequest,60019:r.BadRequest,63999:r.ExchangeError,70010:r.BadRequest,70013:r.BadRequest,70016:r.BadRequest},broad:{"Internal Server Error":r.ExchangeNotAvailable,"server error":r.ExchangeNotAvailable}},httpExceptions:{429:r.ExchangeNotAvailable},precisionMode:n.sh,options:{sandboxMode:!1,defaultNetwork:"ERC20",networks:{BTC:"Bitcoin",OMNI:"Omni",SOL:"Solana",LTC:"Litecoin",MATIC:"Polygon",OP:"Optimism",ARB:"Arbitrum one",AVAX:"Avalanche C-Chain"},networksById:{Bitcoin:"BTC",Omni:"OMNI",Solana:"SOL",Litecoin:"LTC",Polygon:"MATIC",Optimism:"OP","Arbitrum one":"ARB","Avalanche C-Chain":"AVAX"},fetchOpenInterestHistory:{timeframes:{"5m":"5m","1h":"1H","1d":"1D","5M":"5m","1H":"1H","1D":"1D"}},fetchOHLCV:{timezone:"UTC"},fetchPositions:{method:"privateGetAccountPositions"},createOrder:"privatePostTradeBatchOrders",createMarketBuyOrderRequiresPrice:!1,fetchMarkets:["spot","future","swap","option"],defaultType:"spot",fetchLedger:{method:"privateGetAccountBills"},fetchOrder:{method:"privateGetTradeOrder"},fetchOpenOrders:{method:"privateGetTradeOrdersPending"},cancelOrders:{method:"privatePostTradeCancelBatchOrders"},fetchCanceledOrders:{method:"privateGetTradeOrdersHistory"},fetchClosedOrders:{method:"privateGetTradeOrdersHistory"},algoOrderTypes:{conditional:!0,trigger:!0,oco:!0,move_order_stop:!0,iceberg:!0,twap:!0},accountsByType:{funding:"6",trading:"18",spot:"18",future:"18",futures:"18",margin:"18",swap:"18",option:"18"},accountsById:{6:"funding",18:"trading"},exchangeType:{spot:"SPOT",margin:"MARGIN",swap:"SWAP",future:"FUTURES",futures:"FUTURES",option:"OPTION",SPOT:"SPOT",MARGIN:"MARGIN",SWAP:"SWAP",FUTURES:"FUTURES",OPTION:"OPTION"},brokerId:"e847386590ce4dBC"},commonCurrencies:{AE:"AET",BOX:"DefiBox",HOT:"Hydro Protocol",HSR:"HC",MAG:"Maggie",SBTC:"Super Bitcoin",TRADE:"Unitrade",YOYO:"YOYOW",WIN:"WinToken"}})}handleMarketTypeAndParams(e,t=undefined,i={}){const s=this.safeString(i,"instType");return i=this.omit(i,"instType"),void 0===this.safeString(i,"type")&&void 0!==s&&(i.type=s),super.handleMarketTypeAndParams(e,t,i)}convertToInstrumentType(e){const t=this.safeValue(this.options,"exchangeType",{});return this.safeString(t,e,e)}async fetchStatus(e={}){const t=await this.publicGetSystemStatus(e),i=this.safeValue(t,"data",[]),s={updated:void 0,status:0===i.length?"ok":"maintenance",eta:void 0,url:void 0,info:t};for(let e=0;e<i.length;e++){const t=i[e];"ongoing"===this.safeString(t,"state")&&(s.eta=this.safeInteger(t,"end"),s.status="maintenance")}return s}async fetchTime(e={}){const t=await this.publicGetPublicTime(e),i=this.safeValue(t,"data",[]),s=this.safeValue(i,0,{});return this.safeInteger(s,"ts")}async fetchAccounts(e={}){const t=await this.privateGetAccountConfig(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"uid"),a=this.safeString(t,"acctLv");s.push({id:r,type:a,currency:void 0,info:t})}return s}async fetchMarkets(e={}){const t=this.safeValue(this.options,"fetchMarkets");let i=[],s=[];for(let s=0;s<t.length;s++)i.push(this.fetchMarketsByType(t[s],e));i=await Promise.all(i);for(let e=0;e<i.length;e++)s=this.arrayConcat(s,i[e]);return s}parseMarkets(e){const t=[];for(let i=0;i<e.length;i++)t.push(this.parseMarket(e[i]));return t}parseMarket(e){const t=this.safeString(e,"instId");let i=this.safeStringLower(e,"instType");"futures"===i&&(i="future");const s="spot"===i,r="future"===i,n="swap"===i,o="option"===i,d=n||r||o;let c=this.safeString(e,"baseCcy"),h=this.safeString(e,"quoteCcy");const u=this.safeString(e,"settleCcy"),l=this.safeCurrencyCode(u),p=this.safeString(e,"uly");if(void 0!==p&&!s){const e=p.split("-");c=this.safeString(e,0),h=this.safeString(e,1)}const f=this.safeCurrencyCode(c),m=this.safeCurrencyCode(h);let v,g,y,b=f+"/"+m;d&&(b=b+":"+l,v=this.safeInteger(e,"expTime"),r?b=b+"-"+this.yymmdd(v):o&&(g=this.safeString(e,"stk"),y=this.safeString(e,"optType"),b=b+"-"+this.yymmdd(v)+"-"+g+"-"+y,y="P"===y?"put":"call"));const w=this.safeString(e,"tickSz"),S=this.safeString(e,"minSz"),P=this.parseNumber(S),k=this.safeValue2(this.fees,i,"trading",{}),O=this.parseNumber(w);let T=this.safeString(e,"lever","1");return T=a.O.stringMax(T,"1"),this.extend(k,{id:t,symbol:b,base:f,quote:m,settle:l,baseId:c,quoteId:h,settleId:u,type:i,spot:s,margin:s&&a.O.stringGt(T,"1"),swap:n,future:r,option:o,active:!0,contract:d,linear:d?h===u:void 0,inverse:d?c===u:void 0,contractSize:d?this.safeNumber(e,"ctVal"):void 0,expiry:v,expiryDatetime:this.iso8601(v),strike:g,optionType:y,precision:{amount:this.safeNumber(e,"lotSz"),price:O},limits:{leverage:{min:this.parseNumber("1"),max:this.parseNumber(T)},amount:{min:P,max:void 0},price:{min:O,max:void 0},cost:{min:void 0,max:void 0}},info:e})}async fetchMarketsByType(e,t={}){const i={instType:this.convertToInstrumentType(e)};if("option"===e){const e=this.safeValue(this.options,"defaultUnderlying","BTC-USD"),s=this.safeString2(t,"uly","marketId",e);if(void 0===s)throw new r.ArgumentsRequired(this.id+" fetchMarketsByType() requires an underlying uly or marketId parameter for options markets");i.uly=s}const s=await this.publicGetPublicInstruments(this.extend(i,t)),a=this.safeValue(s,"data",[]);return this.parseMarkets(a)}safeNetwork(e){return this.safeString({Bitcoin:"BTC",Omni:"OMNI",TRON:"TRC20"},e,e)}async fetchCurrencies(e={}){const t=this.safeValue(this.options,"sandboxMode",!1);if(!this.checkRequiredCredentials(!1)||t)return;const i=await this.privateGetAssetCurrencies(e),s=this.safeValue(i,"data",[]),r={},n=this.groupBy(s,"ccy"),o=Object.keys(n);for(let e=0;e<o.length;e++){const t=o[e],i=this.safeCurrency(t).code,s=n[t],d={};let c,h,u,l=!1;for(let e=0;e<s.length;e++){const t=s[e],i=this.safeValue(t,"canDep"),r=this.safeValue(t,"canWd"),n=this.safeValue(t,"canInternal"),o=!!(i&&r&&n);l=o||l;const p=this.safeString(t,"chain");if(i&&!c?c=!0:i||(c=!1),r&&!h?h=!0:r||(h=!1),void 0!==p&&p.indexOf("-")>=0){const e=p.split("-"),s=this.safeString(e,1,p),n=this.safeNetwork(s),c=this.parsePrecision(this.safeString(t,"wdTickSz"));u=void 0===u?c:a.O.stringMin(u,c),d[n]={id:p,network:n,active:o,deposit:i,withdraw:r,fee:this.safeNumber(t,"minFee"),precision:this.parseNumber(c),limits:{withdraw:{min:this.safeNumber(t,"minWd"),max:this.safeNumber(t,"maxWd")}},info:t}}}const p=this.safeValue(s,0);r[i]={info:void 0,code:i,id:t,name:this.safeString(p,"name"),active:l,deposit:c,withdraw:h,fee:void 0,precision:this.parseNumber(u),limits:{amount:{min:void 0,max:void 0}},networks:d}}return r}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={instId:this.market(e).id};void 0!==(t=void 0===t?20:t)&&(s.sz=t);const r=await this.publicGetMarketBooks(this.extend(s,i)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{}),o=this.safeInteger(n,"ts");return this.parseOrderBook(n,e,o)}parseTicker(e,t=undefined){const i=this.safeInteger(e,"ts"),s=this.safeString(e,"instId"),r=(t=this.safeMarket(s,t,"-")).symbol,a=this.safeString(e,"last"),n=this.safeString(e,"open24h"),o=this.safeValue(t,"spot",!1)?this.safeString(e,"volCcy24h"):void 0,d=this.safeString(e,"vol24h"),c=this.safeString(e,"high24h"),h=this.safeString(e,"low24h");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:c,low:h,bid:this.safeString(e,"bidPx"),bidVolume:this.safeString(e,"bidSz"),ask:this.safeString(e,"askPx"),askVolume:this.safeString(e,"askSz"),vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={instId:i.id},r=await this.publicGetMarketTicker(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{});return this.parseTicker(n,i)}async fetchTickersByType(e,t=undefined,i={}){await this.loadMarkets();const s={instType:this.convertToInstrumentType(e)};if("option"===e){const e=this.safeValue(this.options,"defaultUnderlying","BTC-USD"),t=this.safeString2(i,"uly","marketId",e);if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchTickersByType() requires an underlying uly or marketId parameter for options markets");s.uly=t}const a=await this.publicGetMarketTickers(this.extend(s,i)),n=this.safeValue(a,"data",[]);return this.parseTickers(n,t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.safeString(e,0);let s;void 0!==i&&(s=this.market(i));const[r,a]=this.handleMarketTypeAndParams("fetchTickers",s,t);return await this.fetchTickersByType(r,e,a)}parseTrade(e,t=undefined){const i=this.safeString(e,"tradeId"),s=this.safeString(e,"instId"),r=(t=this.safeMarket(s,t,"-")).symbol,n=this.safeInteger(e,"ts"),o=this.safeString2(e,"fillPx","px"),d=this.safeString2(e,"fillSz","sz"),c=this.safeString(e,"side"),h=this.safeString(e,"ordId"),u=this.safeString(e,"fee");let l;if(void 0!==u){const t=a.O.stringNeg(u),i=this.safeString(e,"feeCcy");l={cost:t,currency:this.safeCurrencyCode(i)}}let p=this.safeString(e,"execType");return"T"===p?p="taker":"M"===p&&(p="maker"),this.safeTrade({info:e,timestamp:n,datetime:this.iso8601(n),symbol:r,id:i,order:h,type:void 0,takerOrMaker:p,side:c,price:o,amount:d,cost:void 0,fee:l},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={instId:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetMarketTrades(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}parseOHLCV(e,t=undefined){const i="spot"===this.handleMarketTypeAndParams("fetchOHLCV",t,void 0)[0]?5:6;return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,i)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(r,"price");r=this.omit(r,"price");const o=this.safeValue(this.options,"fetchOHLCV",{}),d=this.safeString(o,"timezone","UTC");void 0===s&&(s=100);const c=this.parseTimeframe(t);let h=this.safeString(this.timeframes,t,t);"UTC"===d&&c>=21600&&(h+=d.toLowerCase());const u={instId:a.id,bar:h,limit:s};let l="Candles";if(void 0!==i){this.milliseconds()-i>1440*c*1e3&&(l="HistoryCandles");const e=1e3*c,t=Math.max(i-1,0);u.before=t,u.after=this.sum(t,e*s)}const p=this.safeInteger(r,"until");void 0!==p&&(u.after=p,r=this.omit(r,"until")),l=this.safeString(o,"type",l);const f=this.safeString(r,"type",l);r=this.omit(r,"type");let m="publicGetMarket"+f;const v="HistoryCandles"===f;"mark"===n?m=v?"publicGetMarketHistoryMarkPriceCandles":"publicGetMarketMarkPriceCandles":"index"===n&&(m=v?"publicGetMarketHistoryIndexCandles":"publicGetMarketIndexCandles");const g=await this[m](this.extend(u,r)),y=this.safeValue(g,"data",[]);return this.parseOHLCVs(y,a,t,i,s)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingRateHistory() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={instId:a.id};void 0!==t&&(n.before=Math.max(t-1,0)),void 0!==i&&(n.limit=i);const o=await this.publicGetPublicFundingRateHistory(this.extend(n,s)),d=[],c=this.safeValue(o,"data",[]);for(let e=0;e<c.length;e++){const t=c[e],i=this.safeNumber(t,"fundingTime");d.push({info:t,symbol:this.safeSymbol(this.safeString(t,"instId")),fundingRate:this.safeNumber(t,"realizedRate"),timestamp:i,datetime:this.iso8601(i)})}const h=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(h,a.symbol,t,i)}parseBalanceByType(e,t){return"funding"===e?this.parseFundingBalance(t):this.parseTradingBalance(t)}parseTradingBalance(e){const t={info:e},i=this.safeValue(e,"data",[]),s=this.safeValue(i,0,{}),r=this.safeInteger(s,"uTime"),a=this.safeValue(s,"details",[]);for(let e=0;e<a.length;e++){const i=a[e],s=this.safeString(i,"ccy"),r=this.safeCurrencyCode(s),n=this.account(),o=this.safeString(i,"eq"),d=this.safeString(i,"availEq");void 0===o||void 0===d?(n.free=this.safeString(i,"availBal"),n.used=this.safeString(i,"frozenBal")):(n.total=o,n.free=d),t[r]=n}return t.timestamp=r,t.datetime=this.iso8601(r),this.safeBalance(t)}parseFundingBalance(e){const t={info:e},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"ccy"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"bal"),n.free=this.safeString(s,"availBal"),n.used=this.safeString(s,"frozenBal"),t[a]=n}return this.safeBalance(t)}parseTradingFee(e,t=undefined){return{info:e,symbol:this.safeSymbol(void 0,t),maker:this.parseNumber(a.O.stringNeg(this.safeString2(e,"maker","makerU"))),taker:this.parseNumber(a.O.stringNeg(this.safeString2(e,"taker","takerU")))}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={instType:this.convertToInstrumentType(i.type)};if(i.spot)s.instId=i.id;else{if(!(i.swap||i.future||i.option))throw new r.NotSupported(this.id+" fetchTradingFee() supports spot, swap, future or option markets only");s.uly=i.baseId+"-"+i.quoteId}const a=await this.privateGetAccountTradeFee(this.extend(s,t)),n=this.safeValue(a,"data",[]),o=this.safeValue(n,0,{});return this.parseTradingFee(o,i)}async fetchBalance(e={}){await this.loadMarkets();const[t,i]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let s;s="funding"===t?"privateGetAssetBalances":"privateGetAccountBalance";const r=await this[s](this.extend({},i));return this.parseBalanceByType(t,r)}async createOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets();const d=this.market(e),c={instId:d.id,side:i,ordType:t,sz:this.amountToPrecision(e,s)},h=d.spot,u=d.contract,l=this.safeValueN(o,["triggerPrice","stopPrice","triggerPx"]),p=this.safeString(o,"timeInForce","GTC"),f=this.safeValue2(o,"takeProfitPrice","tpTriggerPx"),m=this.safeValue(o,"tpOrdPx",n),v=this.safeString(o,"tpTriggerPxType","last"),g=this.safeValue2(o,"stopLossPrice","slTriggerPx"),y=this.safeValue(o,"slOrdPx",n),b=this.safeString(o,"slTriggerPxType","last"),w=this.safeString2(o,"clOrdId","clientOrderId"),S=this.safeString2(this.options,"defaultMarginMode","marginMode","cross");let P=this.safeString2(o,"marginMode","tdMode"),k=!1;if(void 0!==P&&"cash"!==P?k=!0:(P=S,k=this.safeValue(o,"margin",!1)),h){if(k){const e="buy"===i?d.quote:d.base,t=this.safeString(o,"ccy",e);c.ccy=this.safeCurrencyCode(t)}const e=k?P:"cash";c.tdMode=e}else u&&(c.tdMode=P);const O="market"===t,T=this.isPostOnly(O,"post_only"===t,o);o=this.omit(o,["currency","ccy","marginMode","timeInForce","stopPrice","triggerPrice","clientOrderId","stopLossPrice","takeProfitPrice","slOrdPx","tpOrdPx","margin"]);const A="IOC"===p||"ioc"===t,G="FOK"===p||"fok"===t,I=void 0!==l||"trigger"===t,C=void 0!==g||void 0!==f||"conditional"===t,M=O&&A||"optimal_limit_ioc"===t,x=this.safeString(this.options,"createOrder","privatePostTradeBatchOrders"),V=this.safeString(this.options,"tgtCcy","base_ccy"),E=this.safeString(o,"tgtCcy",V);u||k||(c.tgtCcy=E);let B,_=x;if(O||M){if(c.ordType="market",h&&"buy"===i&&"quote_ccy"===E){let t=this.safeNumber2(o,"cost","sz");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==n){if(void 0===t){const e=this.numberToString(s),i=this.numberToString(n),r=a.O.stringMul(e,i);t=this.parseNumber(r)}}else if(void 0===t)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'cost' unified extra parameter or in exchange-specific 'sz' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?s:t;c.sz=this.costToPrecision(e,t),o=this.omit(o,["cost","sz"])}M&&u&&(c.ordType="optimal_limit_ioc")}else I||C||(c.px=this.priceToPrecision(e,n));if(T?(_=x,c.ordType="post_only"):A&&!M?(_=x,c.ordType="ioc"):G?(_=x,c.ordType="fok"):I?(_="privatePostTradeOrderAlgo",c.ordType="trigger",c.triggerPx=this.priceToPrecision(e,l),c.orderPx=O?"-1":this.priceToPrecision(e,n)):C&&(_="privatePostTradeOrderAlgo",c.ordType="conditional",void 0!==f&&void 0!==g&&(c.ordType="oco"),void 0!==f&&(c.tpTriggerPx=this.priceToPrecision(e,f),c.tpOrdPx=void 0===m?"-1":this.priceToPrecision(e,m),c.tpTriggerPxType=v),void 0!==g&&(c.slTriggerPx=this.priceToPrecision(e,g),c.slOrdPx=void 0===y?"-1":this.priceToPrecision(e,y),c.slTriggerPxType=b)),"oco"!==t&&"move_order_stop"!==t&&"iceberg"!==t&&"twap"!==t||(_="privatePostTradeOrderAlgo"),void 0===w){const e=this.safeString(this.options,"brokerId");void 0!==e&&(c.clOrdId=e+this.uuid16(),c.tag=e)}else c.clOrdId=w,o=this.omit(o,["clOrdId","clientOrderId"]);if("privatePostTradeOrder"===_||"privatePostTradeOrderAlgo"===_)B=this.extend(c,o);else{if("privatePostTradeBatchOrders"!==_)throw new r.ExchangeError(this.id+' createOrder() this.options["createOrder"] must be either privatePostTradeBatchOrders or privatePostTradeOrder');B=[this.extend(c,o)]}const R=await this[_](B),N=this.safeValue(R,"data",[]),L=this.safeValue(N,0),D=this.parseOrder(L,d);return this.extend(D,{type:t,side:i})}async editOrder(e,t,i,s,a,n=undefined,o={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" editOrder() requires a symbol argument");await this.loadMarkets();const d=this.market(t);if(!d.spot)throw new r.NotSupported(this.id+" editOrder() does not support "+d.type+" orders, only spot orders are accepted");const c={instId:d.id},h=this.safeString2(o,"clOrdId","clientOrderId");void 0!==h?c.clOrdId=h:c.ordId=e,o=this.omit(o,["clOrdId","clientOrderId"]),void 0!==a&&(c.newSz=this.amountToPrecision(t,a)),void 0!==n&&(c.newPx=this.priceToPrecision(t,n));const u=await this.privatePostTradeAmendOrder(this.extend(c,o)),l=this.safeValue(u,"data",[]),p=this.safeValue(l,0),f=this.parseOrder(p,d);return this.extend(f,{type:i,side:s})}async cancelOrder(e,t=undefined,i={}){if(this.safeValue(i,"stop")){const s=await this.cancelOrders([e],t,i);return this.safeValue(s,0)}if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={instId:s.id},n=this.safeString2(i,"clOrdId","clientOrderId");void 0!==n?a.clOrdId=n:a.ordId=e;const o=this.omit(i,["clOrdId","clientOrderId"]),d=await this.privatePostTradeCancelOrder(this.extend(a,o)),c=this.safeValue(d,"data",[]),h=this.safeValue(c,0);return this.parseOrder(h,s)}parseIds(e){return"string"==typeof e?e.split(","):e}async cancelOrders(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrders() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a=[],n=this.safeValue(this.options,"cancelOrders",{}),o=this.safeString(n,"method","privatePostTradeCancelBatchOrders");let d=this.safeString(i,"method",o);const c=this.parseIds(this.safeValue2(i,"clOrdId","clientOrderId")),h=this.parseIds(this.safeValue(i,"algoId")),u=this.safeValue(i,"stop");if(u&&(d="privatePostTradeCancelAlgos"),void 0===c){if(e=this.parseIds(e),void 0!==h)for(let e=0;e<h.length;e++)a.push({algoId:h[e],instId:s.id});for(let t=0;t<e.length;t++)u?a.push({algoId:e[t],instId:s.id}):a.push({ordId:e[t],instId:s.id})}else for(let e=0;e<c.length;e++)a.push({instId:s.id,clOrdId:c[e]});const l=await this[d](a),p=this.safeValue(l,"data",[]);return this.parseOrders(p,s,void 0,void 0,i)}parseOrderStatus(e){return this.safeString({canceled:"canceled",live:"open",partially_filled:"open",filled:"closed",effective:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString2(e,"algoId","ordId"),s=this.safeInteger(e,"cTime"),r=this.safeInteger(e,"fillTime"),n=this.safeString(e,"side");let o,d,c=this.safeString(e,"ordType");"post_only"===c?(o=!0,c="limit"):"fok"===c?(d="FOK",c="limit"):"ioc"===c&&(d="IOC",c="limit");const h=this.safeString(e,"instId"),u=this.safeSymbol(h,t,"-"),l=this.safeString(e,"accFillSz"),p=this.safeString2(e,"px","ordPx"),f=this.safeString(e,"avgPx"),m=this.parseOrderStatus(this.safeString(e,"state")),v=this.safeString(e,"fee");let g,y;const b=this.safeString(this.options,"tgtCcy","base_ccy"),w=this.safeString(e,"tgtCcy",b),S=this.safeString(e,"instType");let P;if("buy"===n&&"market"===c&&"SPOT"===S&&"quote_ccy"===w?y=this.safeString(e,"sz"):g=this.safeString(e,"sz"),void 0!==v){const t=a.O.stringNeg(v),i=this.safeString(e,"feeCcy"),s=this.safeCurrencyCode(i);P={cost:this.parseNumber(t),currency:s}}let k=this.safeString(e,"clOrdId");void 0!==k&&k.length<1&&(k=void 0);const O=this.safeNumber2(e,"slTriggerPx","slOrdPx"),T=this.safeNumber2(e,"tpTriggerPx","tpOrdPx"),A=this.safeNumberN(e,["triggerPx","moveTriggerPx"]),G=this.safeString(e,"reduceOnly");let I=!1;return void 0!==I&&(I="true"===G),this.safeOrder({info:e,id:i,clientOrderId:k,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:r,symbol:u,type:c,timeInForce:d,postOnly:o,side:n,price:p,stopLossPrice:O,takeProfitPrice:T,stopPrice:A,triggerPrice:A,average:f,cost:y,amount:g,filled:l,remaining:void 0,status:m,fee:P,trades:void 0,reduceOnly:I},t)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={instId:s.id},n=this.safeString2(i,"clOrdId","clientOrderId"),o=this.safeValue(this.options,"fetchOrder",{}),d=this.safeString(o,"method","privateGetTradeOrder");let c=this.safeString(i,"method",d);this.safeValue(i,"stop")?(c="privateGetTradeOrderAlgo",void 0!==n?a.algoClOrdId=n:a.algoId=e):void 0!==n?a.clOrdId=n:a.ordId=e;const h=this.omit(i,["method","clOrdId","clientOrderId","stop"]),u=await this[c](this.extend(a,h)),l=this.safeValue(u,"data",[]),p=this.safeValue(l,0);return this.parseOrder(p,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n;void 0!==e&&(n=this.market(e),a.instId=n.id),void 0!==i&&(a.limit=i);const o=this.safeValue(this.options,"fetchOpenOrders",{}),d=this.safeValue(this.options,"algoOrderTypes",{}),c=this.safeString(o,"method","privateGetTradeOrdersPending");let h=this.safeString(s,"method",c);const u=this.safeString(s,"ordType"),l=this.safeValue(s,"stop");if((l||u in d)&&(h="privateGetTradeOrdersAlgoPending",l&&void 0===u))throw new r.ArgumentsRequired(this.id+' fetchOpenOrders() requires an "ordType" string parameter, "conditional", "oco", "trigger", "move_order_stop", "iceberg", or "twap"');const p=this.omit(s,["method","stop"]),f=await this[h](this.extend(a,p)),m=this.safeValue(f,"data",[]);return this.parseOrders(m,n,t,i)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n,o,d;void 0!==e&&(n=this.market(e),a.instId=n.id),[o,d]=this.handleMarketTypeAndParams("fetchCanceledOrders",n,s),a.instType=this.convertToInstrumentType(o),void 0!==i&&(a.limit=i),a.state="canceled";const c=this.safeValue(this.options,"fetchCanceledOrders",{}),h=this.safeValue(this.options,"algoOrderTypes",{}),u=this.safeString(c,"method","privateGetTradeOrdersHistory");let l=this.safeString(s,"method",u);const p=this.safeString(s,"ordType"),f=this.safeValue(s,"stop");if(f||p in h){l="privateGetTradeOrdersAlgoHistory";const e=this.safeString(s,"algoId");if(void 0!==e&&(a.algoId=e,s=this.omit(s,"algoId")),f){if(void 0===p)throw new r.ArgumentsRequired(this.id+' fetchCanceledOrders() requires an "ordType" string parameter, "conditional", "oco", "trigger", "move_order_stop", "iceberg", or "twap"');a.ordType=p}}else{void 0!==t&&(a.begin=t);const e=this.safeInteger2(d,"till","until");void 0!==e&&(a.end=e,d=this.omit(d,["until","till"]))}const m=this.omit(d,["method","stop","ordType"]),v=await this[l](this.extend(a,m)),g=this.safeValue(v,"data",[]);return this.parseOrders(g,n,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const a={};let n,o,d;void 0!==e&&(n=this.market(e),a.instId=n.id),[o,d]=this.handleMarketTypeAndParams("fetchClosedOrders",n,s),a.instType=this.convertToInstrumentType(o),void 0!==i&&(a.limit=i);const c=this.safeValue(this.options,"fetchClosedOrders",{}),h=this.safeValue(this.options,"algoOrderTypes",{}),u=this.safeString(c,"method","privateGetTradeOrdersHistory");let l=this.safeString(s,"method",u);const p=this.safeString(s,"ordType"),f=this.safeValue(s,"stop");if(f||p in h){if(l="privateGetTradeOrdersAlgoHistory",f&&void 0===p)throw new r.ArgumentsRequired(this.id+' fetchClosedOrders() requires an "ordType" string parameter, "conditional", "oco", "trigger", "move_order_stop", "iceberg", or "twap"');a.state="effective"}else{void 0!==t&&(a.begin=t);const e=this.safeInteger2(d,"till","until");void 0!==e&&(a.end=e,d=this.omit(d,["until","till"])),a.state="filled"}const m=this.omit(d,["method","stop"]),v=await this[l](this.extend(a,m)),g=this.safeValue(v,"data",[]);return this.parseOrders(g,n,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.instId=a.id);const[n,o]=this.handleMarketTypeAndParams("fetchMyTrades",a,s);r.instType=this.convertToInstrumentType(n),void 0!==i&&(r.limit=i);const d=await this.privateGetTradeFillsHistory(this.extend(r,o)),c=this.safeValue(d,"data",[]);return this.parseTrades(c,a,t,i,o)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){const a={ordId:e};return await this.fetchMyTrades(t,i,s,this.extend(a,r))}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.safeValue(this.options,"fetchLedger",{});let a=this.safeString(r,"method");a=this.safeString(s,"method",a),s=this.omit(s,"method");const n={};let o;[o,s]=this.handleMarginModeAndParams("fetchLedger",s),void 0===o&&(o=this.safeString(s,"mgnMode")),"privateGetAssetBills"!==a&&void 0!==o&&(n.mgnMode=o);const[d,c]=this.handleMarketTypeAndParams("fetchLedger",void 0,s);let h;void 0!==d&&(n.instType=this.convertToInstrumentType(d)),void 0!==i&&(n.limit=i),void 0!==e&&(h=this.currency(e),n.ccy=h.id);const u=await this[a](this.extend(n,c)),l=this.safeValue(u,"data",[]);return this.parseLedger(l,h,t,i)}parseLedgerEntryType(e){return this.safeString({1:"transfer",2:"trade",3:"trade",4:"rebate",5:"trade",6:"transfer",7:"trade",8:"fee",9:"trade",10:"trade",11:"trade"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"billId"),s=this.safeString(e,"ordId"),r=this.parseLedgerEntryType(this.safeString(e,"type")),n=this.safeCurrencyCode(this.safeString(e,"ccy"),t),o=this.safeString(e,"balChg"),d=this.parseNumber(o),c=this.safeInteger(e,"ts"),h=this.safeString(e,"fee");let u;void 0!==h&&(u={cost:this.parseNumber(a.O.stringNeg(h)),currency:n});const l=this.safeString(e,"bal"),p=this.parseNumber(l),f=this.safeString(e,"instId"),m=this.safeSymbol(f,void 0,"-");return{id:i,info:e,timestamp:c,datetime:this.iso8601(c),account:void 0,referenceId:s,referenceAccount:void 0,type:r,currency:n,symbol:m,amount:d,before:void 0,after:p,status:"ok",fee:u}}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"addr");let s=this.safeString2(e,"tag","pmtId");s=this.safeString(e,"memo",s);const r=this.safeString(e,"ccy"),a=(t=this.safeCurrency(r,t)).code,n=this.safeString(e,"chain"),o=this.safeValue(t,"networks",{}),d=this.indexBy(o,"id");let c=this.safeValue(d,n);"USDT-Polygon"===n&&(c=this.safeValue(d,"USDT-Polygon-Bridge"));const h=this.safeString(c,"network");return this.checkAddress(i),{currency:a,address:i,tag:s,network:h,info:e}}async fetchDepositAddressesByNetwork(e,t={}){await this.loadMarkets();const i=this.currency(e),s={ccy:i.id},r=await this.privateGetAssetDepositAddress(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.filterBy(a,"selected",!0),o=this.parseDepositAddresses(n,[i.code],!1);return this.indexBy(o,"network")}async fetchDepositAddress(e,t={}){const i=this.safeStringUpper(t,"network"),s=this.safeValue(this.options,"networks",{}),a=this.safeString(s,i,i);t=this.omit(t,"network");const n=await this.fetchDepositAddressesByNetwork(e,t);let o;if(void 0===a){if(o=this.safeValue(n,e),void 0===o){const t=this.safeString(s,e,e);if(o=this.safeValue(n,t),void 0===o){const t=this.safeString(this.options,"defaultNetwork","ERC20");if(o=this.safeValue(n,t),void 0===o){const t=Object.values(n);if(o=this.safeValue(t,0),void 0===o)throw new r.InvalidAddress(this.id+" fetchDepositAddress() cannot find deposit address for "+e)}}}return o}if(o=this.safeValue(n,a),void 0===o)throw new r.InvalidAddress(this.id+" fetchDepositAddress() cannot find "+a+" deposit address for "+e);return o}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e);void 0!==s&&s.length>0&&(i=i+":"+s);const o={ccy:n.id,toAddr:i,dest:"4",amt:this.numberToString(t)},d=this.safeValue(this.options,"networks",{});let c=this.safeStringUpper(a,"network");c=this.safeString(d,c,c),void 0!==c&&(o.chain=n.id+"-"+c,a=this.omit(a,"network"));let h=this.safeString(a,"fee");if(void 0===h){const e=await this.fetchCurrencies();this.currencies=this.deepExtend(this.currencies,e);const t=this.safeValue(n.networks,this.networkIdToCode(c),{});if(h=this.safeString(t,"fee"),void 0===h)throw new r.ArgumentsRequired(this.id+" withdraw() requires a 'fee' string parameter, network transaction fee must be ≥ 0. Withdrawals to OKCoin or OKX are fee-free, please set '0'. Withdrawing to external digital asset address requires network transaction fee.")}o.fee=this.numberToString(h),"password"in a?o.pwd=a.password:"pwd"in a&&(o.pwd=a.pwd);const u=this.omit(a,["fee","password","pwd"]);if(!("pwd"in o))throw new r.ExchangeError(this.id+" withdraw() requires a password parameter or a pwd parameter, it must be the funding password, not the API passphrase");const l=await this.privatePostAssetWithdrawal(this.extend(o,u)),p=this.safeValue(l,"data",[]),f=this.safeValue(p,0);return this.parseTransaction(f,n)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.ccy=a.id),void 0!==t&&(r.before=Math.max(t-1,0)),void 0!==i&&(r.limit=i);const n=await this.privateGetAssetDepositHistory(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,i,s)}async fetchDeposit(e,t=undefined,i={}){await this.loadMarkets();const s={depId:e};let r;void 0!==t&&(r=this.currency(t),s.ccy=r.id);const a=await this.privateGetAssetDepositHistory(this.extend(s,i)),n=this.safeValue(a,"data"),o=this.safeValue(n,0,{});return this.parseTransaction(o,r)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.ccy=a.id),void 0!==t&&(r.before=Math.max(t-1,0)),void 0!==i&&(r.limit=i);const n=await this.privateGetAssetWithdrawalHistory(this.extend(r,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,a,t,i,s)}async fetchWithdrawal(e,t=undefined,i={}){await this.loadMarkets();const s={wdId:e};let r;void 0!==t&&(r=this.currency(t),s.ccy=r.id);const a=await this.privateGetAssetWithdrawalHistory(this.extend(s,i)),n=this.safeValue(a,"data"),o=this.safeValue(n,0,{});return this.parseTransaction(o)}parseTransactionStatus(e){return this.safeString({"-3":"pending","-2":"canceled","-1":"failed",0:"pending",1:"pending",2:"ok",3:"pending",4:"pending",5:"pending"},e,e)}parseTransaction(e,t=undefined){let i,s;const r=this.safeString(e,"wdId"),a=this.safeString(e,"from"),n=this.safeString(e,"to"),o=n;let d=this.safeString2(e,"tag","memo");d=this.safeString2(e,"pmtId",d),void 0!==r?(i="withdrawal",s=r):(s=this.safeString(e,"depId"),i="deposit");const c=this.safeString(e,"ccy"),h=this.safeCurrencyCode(c),u=this.safeNumber(e,"amt"),l=this.parseTransactionStatus(this.safeString(e,"state")),p=this.safeString(e,"txId"),f=this.safeInteger(e,"ts");let m;return m="deposit"===i?0:this.safeNumber(e,"fee"),{info:e,id:s,currency:h,amount:u,network:void 0,addressFrom:a,addressTo:n,address:o,tagFrom:void 0,tagTo:d,tag:d,status:l,type:i,updated:void 0,txid:p,timestamp:f,datetime:this.iso8601(f),fee:{currency:h,cost:m}}}async fetchLeverage(e,t={}){let i;if(await this.loadMarkets(),[i,t]=this.handleMarginModeAndParams("fetchLeverage",t),void 0===i&&(i=this.safeString(t,"mgnMode","cross")),"cross"!==i&&"isolated"!==i)throw new r.BadRequest(this.id+" fetchLeverage() requires a marginMode parameter that must be either cross or isolated");const s={instId:this.market(e).id,mgnMode:i};return await this.privateGetAccountLeverageInfo(this.extend(s,t))}async fetchPosition(e,t={}){await this.loadMarkets();const i=this.market(e),[s,r]=this.handleMarketTypeAndParams("fetchPosition",i,t),a={instId:i.id};void 0!==s&&(a.instType=this.convertToInstrumentType(s));const n=await this.privateGetAccountPositions(this.extend(a,r)),o=this.safeValue(n,"data",[]),d=this.safeValue(o,0);return void 0===d?d:this.parsePosition(d)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==e){const t=[];for(let i=0;i<e.length;i++){const s=e[i],r=this.market(s);t.push(r.id)}t.length>0&&(i.instId=t.join(","))}const s=this.safeValue(this.options,"fetchPositions",{}),r=this.safeString(s,"method","privateGetAccountPositions"),a=await this[r](this.extend(i,t)),n=this.safeValue(a,"data",[]),o=[];for(let e=0;e<n.length;e++)o.push(this.parsePosition(n[e]));return this.filterByArray(o,"symbol",e,!1)}parsePosition(e,t=undefined){const i=this.safeString(e,"instId"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString(e,"pos"),n=a.O.stringAbs(r);let o=this.safeString(e,"posSide");const d="net"!==o,c=this.parseNumber(n);if(t.margin){if("net"===o){const i=this.safeString(e,"posCcy"),s=this.safeCurrencyCode(i);void 0!==s&&(o=t.base===s?"long":"short")}void 0===o&&(o=this.safeString(e,"direction"))}else void 0!==r&&"net"===o&&(o=a.O.stringGt(r,"0")?"long":a.O.stringLt(r,"0")?"short":void 0);const h=this.safeNumber(t,"contractSize"),u=this.numberToString(h),l=this.safeString(e,"markPx");let p=this.safeString(e,"notionalUsd");t.inverse&&(p=a.O.stringDiv(a.O.stringMul(n,u),l));const f=this.parseNumber(p),m=this.safeString(e,"mgnMode");let v;const g=this.safeString(e,"avgPx"),y=this.safeString(e,"upl"),b=this.safeString(e,"lever");let w,S;"cross"===m?(v=this.safeString(e,"imr"),S=a.O.stringAdd(v,y)):"isolated"===m&&(w=a.O.stringDiv("1",b),S=this.safeString(e,"margin"));const P=this.safeString(e,"mmr"),k=this.parseNumber(P),O=a.O.stringDiv(P,p);void 0===w?w=this.parseNumber(a.O.stringDiv(v,p,4)):void 0===v&&(v=a.O.stringMul(w,p));const T=this.parseNumber(a.O.stringDiv(a.O.stringAdd(O,"0.00005"),"1",4)),A=this.safeNumber(e,"liqPx"),G=this.safeString(e,"uplRatio"),I=this.parseNumber(a.O.stringMul(G,"100")),C=this.safeInteger(e,"uTime"),M=this.parseNumber(a.O.stringDiv(P,S,4));return{info:e,id:void 0,symbol:s,notional:f,marginMode:m,liquidationPrice:A,entryPrice:this.parseNumber(g),unrealizedPnl:this.parseNumber(y),percentage:I,contracts:c,contractSize:h,markPrice:this.parseNumber(l),side:o,hedged:d,timestamp:C,datetime:this.iso8601(C),maintenanceMargin:k,maintenanceMarginPercentage:T,collateral:this.parseNumber(S),initialMargin:this.parseNumber(v),initialMarginPercentage:this.parseNumber(w),leverage:this.parseNumber(b),marginRatio:M}}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c={ccy:a.id,amt:this.currencyToPrecision(e,t),type:"0",from:o,to:d};"master"===o?(c.type="1",c.subAcct=d,c.from=this.safeString(r,"from","6"),c.to=this.safeString(r,"to","6")):"master"===d&&(c.type="2",c.subAcct=o,c.from=this.safeString(r,"from","6"),c.to=this.safeString(r,"to","6"));const h=await this.privatePostAssetTransfer(this.extend(c,r)),u=this.safeValue(h,"data",[]),l=this.safeValue(u,0,{});return this.parseTransfer(l,a)}parseTransfer(e,t=undefined){const i=this.safeString(e,"transId"),s=this.safeString(e,"ccy"),r=this.safeCurrencyCode(s,t),a=this.safeNumber(e,"amt"),n=this.safeString(e,"from"),o=this.safeString(e,"to"),d=this.safeValue(this.options,"accountsById",{}),c=this.safeString(d,n),h=this.safeString(d,o),u=this.milliseconds(),l=this.safeString(e,"state");return{info:e,id:i,timestamp:u,datetime:this.iso8601(u),currency:r,amount:a,fromAccount:c,toAccount:h,status:l}}async fetchTransfer(e,t=undefined,i={}){await this.loadMarkets();const s={transId:e},r=await this.privateGetAssetTransferState(this.extend(s,i)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0);return this.parseTransfer(n)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=Array.isArray(s),d="/api/"+this.version+"/"+this.implodeParams(e,s),c=this.omit(s,this.extractParams(e));let h=this.implodeHostname(this.urls.api.rest)+d;if("public"===t)Object.keys(c).length&&(h+="?"+this.urlencode(c));else if("private"===t){this.checkRequiredCredentials();const e=this.iso8601(this.milliseconds());r={"OK-ACCESS-KEY":this.apiKey,"OK-ACCESS-PASSPHRASE":this.password,"OK-ACCESS-TIMESTAMP":e};let t=e+i+d;if("GET"===i){if(Object.keys(c).length){const e="?"+this.urlencode(c);h+=e,t+=e}}else(n||Object.keys(c).length)&&(t+=a=this.json(c)),r["Content-Type"]="application/json";const s=this.hmac(this.encode(t),this.encode(this.secret),o.J,"base64");r["OK-ACCESS-SIGN"]=s}return{url:h,method:i,body:a,headers:r}}parseFundingRate(e,t=undefined){const i=this.safeInteger(e,"nextFundingTime"),s=this.safeString(e,"instId"),r=this.safeSymbol(s,t),a=this.safeNumber(e,"nextFundingRate"),n=this.safeInteger(e,"fundingTime");return{info:e,symbol:r,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(e,"fundingRate"),fundingTimestamp:n,fundingDatetime:this.iso8601(n),nextFundingRate:a,nextFundingTimestamp:i,nextFundingDatetime:this.iso8601(i),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.ExchangeError(this.id+" fetchFundingRate() is only valid for swap markets");const s={instId:i.id},a=await this.publicGetPublicFundingRate(this.extend(s,t)),n=this.safeValue(a,"data",[]),o=this.safeValue(n,0,{});return this.parseFundingRate(o,i)}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={type:"8"};let a;void 0!==i&&(r.limit=i.toString()),void 0!==e&&(a=this.market(e),e=a.symbol,a.contract&&(a.linear?(r.ctType="linear",r.ccy=a.quoteId):(r.ctType="inverse",r.ccy=a.baseId)));const[n,o]=this.handleMarketTypeAndParams("fetchFundingHistory",a,s);"swap"===n&&(r.instType=this.convertToInstrumentType(n));const d=await this.privateGetAccountBillsArchive(this.extend(r,o)),c=this.safeValue(d,"data",[]),h=[];for(let e=0;e<c.length;e++){const t=c[e],i=this.safeInteger(t,"ts"),s=this.safeString(t,"instId"),r=this.safeMarket(s),a=this.safeString(t,"ccy"),n=this.safeCurrencyCode(a);h.push({info:t,symbol:r.symbol,code:n,timestamp:i,datetime:this.iso8601(i),id:this.safeString(t,"billId"),amount:this.safeNumber(t,"balChg")})}const u=this.sortBy(h,"timestamp");return this.filterBySymbolSinceLimit(u,e,t,i)}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new r.BadRequest(this.id+" setLeverage() leverage should be between 1 and 125");await this.loadMarkets();const s=this.market(t);let a;if([a,i]=this.handleMarginModeAndParams("setLeverage",i),void 0===a&&(a=this.safeString(i,"mgnMode","cross")),"cross"!==a&&"isolated"!==a)throw new r.BadRequest(this.id+" setLeverage() requires a marginMode parameter that must be either cross or isolated");const n={lever:e,mgnMode:a,instId:s.id},o=this.safeString(i,"posSide");if("isolated"===a){if(void 0===o)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a posSide argument for isolated margin");if("long"!==o&&"short"!==o&&"net"!==o)throw new r.BadRequest(this.id+' setLeverage() requires the posSide argument to be either "long", "short" or "net"')}return await this.privatePostAccountSetLeverage(this.extend(n,i))}async setPositionMode(e,t=undefined,i={}){let s;s=e?"long_short_mode":"net_mode";const r={posMode:s};return await this.privatePostAccountSetPositionMode(this.extend(r,i))}async setMarginMode(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if("cross"!==(e=e.toLowerCase())&&"isolated"!==e)throw new r.BadRequest(this.id+" setMarginMode() marginMode must be either cross or isolated");await this.loadMarkets();const s=this.market(t),a=this.safeInteger(i,"lever");if(void 0===a||a<1||a>125)throw new r.BadRequest(this.id+' setMarginMode() params["lever"] should be between 1 and 125');i=this.omit(i,["lever"]);const n={lever:a,mgnMode:e,instId:s.id};return await this.privatePostAccountSetLeverage(this.extend(n,i))}async fetchBorrowRates(e={}){await this.loadMarkets();const t=await this.privateGetAccountInterestRate(e),i=this.milliseconds(),s=this.safeValue(t,"data"),r={};for(let e=0;e<s.length;e++){const t=s[e],a=this.safeCurrencyCode(this.safeString(t,"ccy"));r[a]={currency:a,rate:this.safeNumber(t,"interestRate"),period:864e5,timestamp:i,datetime:this.iso8601(i),info:t}}return r}async fetchBorrowRate(e,t={}){await this.loadMarkets();const i={ccy:this.currency(e).id},s=await this.privateGetAccountInterestRate(this.extend(i,t)),r=this.safeValue(s,"data"),a=this.safeValue(r,0);return this.parseBorrowRate(a)}parseBorrowRate(e,t=undefined){const i=this.safeString(e,"ccy"),s=this.safeInteger(e,"ts");return{currency:this.safeCurrencyCode(i),rate:this.safeNumber2(e,"interestRate","rate"),period:864e5,timestamp:s,datetime:this.iso8601(s),info:e}}parseBorrowRateHistories(e,t,i,s){const r={};for(let i=0;i<e.length;i++){const s=e[i],a=this.safeCurrencyCode(this.safeString(s,"ccy"));if(void 0===t||this.inArray(a,t)){a in r||(r[a]=[]);const e=this.parseBorrowRate(s);r[a].push(e)}}const a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e];r[t]=this.filterByCurrencySinceLimit(r[t],t,i,s)}return r}parseBorrowRateHistory(e,t,i,s){const r=[];for(let t=0;t<e.length;t++){const i=e[t],s=this.parseBorrowRate(i);r.push(s)}const a=this.sortBy(r,"timestamp");return this.filterByCurrencySinceLimit(a,t,i,s)}async fetchBorrowRateHistories(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};void 0!==t&&(r.before=t),void 0!==i&&(r.limit=i);const a=await this.publicGetFinanceSavingsLendingRateHistory(this.extend(r,s)),n=this.safeValue(a,"data");return this.parseBorrowRateHistories(n,e,t,i)}async fetchBorrowRateHistory(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={ccy:this.currency(e).id};void 0!==t&&(r.before=t),void 0!==i&&(r.limit=i);const a=await this.publicGetFinanceSavingsLendingRateHistory(this.extend(r,s)),n=this.safeValue(a,"data");return this.parseBorrowRateHistory(n,e,t,i)}async modifyMarginHelper(e,t,i,s={}){await this.loadMarkets();const r=this.market(e),a=this.safeString(s,"posSide","net");s=this.omit(s,["posSide"]);const n={instId:r.id,amt:t,type:i,posSide:a},o=await this.privatePostAccountPositionMarginBalance(this.extend(n,s));return this.parseMarginModification(o,r)}parseMarginModification(e,t=undefined){const i=this.safeValue(e,"data",[]),s=this.safeValue(i,0,{}),r="0"===this.safeString(e,"code")?"ok":"failed",a=this.safeNumber(s,"amt"),n="reduce"===this.safeString(s,"type")?"reduce":"add",o=this.safeString(s,"instId"),d=this.safeMarket(o,t);return{info:e,type:n,amount:a,code:d.inverse?d.base:d.quote,symbol:d.symbol,status:r}}async reduceMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"reduce",i)}async addMargin(e,t,i={}){return await this.modifyMarginHelper(e,t,"add",i)}async fetchMarketLeverageTiers(e,t={}){await this.loadMarkets();const i=this.market(e),s=i.spot?"MARGIN":this.convertToInstrumentType(i.type),a=this.safeString(i.info,"uly");if(!a&&"MARGIN"!==s)throw new r.BadRequest(this.id+" fetchMarketLeverageTiers() cannot fetch leverage tiers for "+e);let n;[n,t]=this.handleMarginModeAndParams("fetchMarketLeverageTiers",t),void 0===n&&(n=this.safeString(t,"tdMode","cross"));const o={instType:s,tdMode:n,uly:a};"MARGIN"===s&&(o.instId=i.id);const d=await this.publicGetPublicPositionTiers(this.extend(o,t)),c=this.safeValue(d,"data");return this.parseMarketLeverageTiers(c,i)}parseMarketLeverageTiers(e,t=undefined){const i=[];for(let s=0;s<e.length;s++){const r=e[s];i.push({tier:this.safeInteger(r,"tier"),currency:t.quote,minNotional:this.safeNumber(r,"minSz"),maxNotional:this.safeNumber(r,"maxSz"),maintenanceMarginRate:this.safeNumber(r,"mmr"),maxLeverage:this.safeNumber(r,"maxLever"),info:r})}return i}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),[a,r]=this.handleMarginModeAndParams("fetchBorrowInterest",r),void 0===a&&(a=this.safeString(r,"mgnMode","cross"));const n={mgnMode:a};let o;if(void 0!==e){const t=this.currency(e);n.ccy=t.id}void 0!==i&&(n.before=i-1),void 0!==s&&(n.limit=s),void 0!==t&&(o=this.market(t),n.instId=o.id);const d=await this.privateGetAccountInterestAccrued(this.extend(n,r)),c=this.safeValue(d,"data"),h=this.parseBorrowInterests(c);return this.filterByCurrencySinceLimit(h,e,i,s)}parseBorrowInterest(e,t=undefined){const i=this.safeString(e,"instId");void 0!==i&&(t=this.safeMarket(i,t));const s=this.safeInteger(e,"ts");return{symbol:this.safeString(t,"symbol"),marginMode:this.safeString(e,"mgnMode"),currency:this.safeCurrencyCode(this.safeString(e,"ccy")),interest:this.safeNumber(e,"interest"),interestRate:this.safeNumber(e,"interestRate"),amountBorrowed:this.safeNumber(e,"liab"),timestamp:s,datetime:this.iso8601(s),info:e}}async borrowMargin(e,t,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e),a={ccy:r.id,amt:this.currencyToPrecision(e,t),side:"borrow"},n=await this.privatePostAccountBorrowRepay(this.extend(a,s)),o=this.safeValue(n,"data",[]),d=this.safeValue(o,0),c=this.parseMarginLoan(d,r);return this.extend(c,{symbol:i})}async repayMargin(e,t,i=undefined,s={}){await this.loadMarkets();const r=this.currency(e),a={ccy:r.id,amt:this.currencyToPrecision(e,t),side:"repay"},n=await this.privatePostAccountBorrowRepay(this.extend(a,s)),o=this.safeValue(n,"data",[]),d=this.safeValue(o,0),c=this.parseMarginLoan(d,r);return this.extend(c,{symbol:i})}parseMarginLoan(e,t=undefined){const i=this.safeString(e,"ccy");return{id:void 0,currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"amt"),symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}async fetchOpenInterest(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.contract)throw new r.BadRequest(this.id+" fetchOpenInterest() supports contract markets only");const s={instType:this.convertToInstrumentType(i.type),uly:this.safeString(i.info,"uly"),instId:i.id},a=await this.publicGetPublicOpenInterest(this.extend(s,t)),n=this.safeValue(a,"data",[]);return this.parseOpenInterest(n[0],i)}async fetchOpenInterestHistory(e,t="5m",i=undefined,s=undefined,a={}){const n=this.safeValue(this.options,"fetchOpenInterestHistory",{}),o=this.safeValue(n,"timeframes",{});if("5m"!==(t=this.safeString(o,t,t))&&"1H"!==t&&"1D"!==t)throw new r.BadRequest(this.id+" fetchOpenInterestHistory cannot only use the 5m, 1h, and 1d timeframe");await this.loadMarkets();const d={ccy:this.currency(e).id,period:t};void 0!==i&&(d.begin=i);const c=this.safeInteger2(a,"till","until");void 0!==c&&(d.end=c,a=this.omit(a,["until","till"]));const h=await this.publicGetRubikStatContractsOpenInterestVolume(this.extend(d,a)),u=this.safeValue(h,"data");return this.parseOpenInterests(u,void 0,i,s)}parseOpenInterest(e,t=undefined){const i=this.safeString(e,"instId");t=this.safeMarket(i,t);const s=this.safeInteger(e,"ts"),r=this.safeNumber(e,0,s),a=this.safeNumber(e,"oi"),n=this.safeNumber(e,"oiCcy"),o=this.safeNumber(e,1,n);return{symbol:this.safeSymbol(i),baseVolume:void 0,quoteVolume:o,openInterestAmount:a,openInterestValue:o,timestamp:r,datetime:this.iso8601(r),info:e}}setSandboxMode(e){super.setSandboxMode(e),this.options.sandboxMode=e,e?this.headers["x-simulated-trading"]="1":"x-simulated-trading"in this.headers&&(this.headers=this.omit(this.headers,"x-simulated-trading"))}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetAssetCurrencies(t),s=this.safeValue(i,"data");return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFees(e,t=undefined,i=undefined){const s={};t=this.marketCodes(t);for(let i=0;i<e.length;i++){const r=e[i],a=this.safeString(r,"ccy"),n=this.safeCurrencyCode(a);if(void 0===t||this.inArray(n,t)){void 0===this.safeValue(s,n)&&(s[n]=this.depositWithdrawFee({})),s[n].info[a]=r;const e=this.safeString(r,"chain").split("-"),t=this.safeValue(e,1),i=this.safeNumber(r,"minFee"),o={fee:i,percentage:void 0===i&&void 0},d={fee:void 0,percentage:void 0},c=this.networkIdToCode(t,n);s[n].networks[c]={withdraw:o,deposit:d}}}const r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e],i=this.currency(t);s[t]=this.assignDefaultDepositWithdrawFees(s[t],i)}return s}handleErrors(e,t,i,s,a,n,o,d,c){if(!o)return;const h=this.safeString(o,"code");if("0"!==h){const e=this.id+" "+n,t=this.safeValue(o,"data",[]);for(let i=0;i<t.length;i++){const s=t[i],r=this.safeString(s,"sCode"),a=this.safeString(s,"sMsg");this.throwExactlyMatchedException(this.exceptions.exact,r,e),this.throwBroadlyMatchedException(this.exceptions.broad,a,e)}throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r.ExchangeError(e)}}}},7082:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6123),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"paymium",name:"Paymium",countries:["FR","EU"],rateLimit:2e3,version:"v1",has:{CORS:!0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,fetchBalance:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOrderBook:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,transfer:!0},urls:{logo:"https://user-images.githubusercontent.com/51840849/87153930-f0f02200-c2c0-11ea-9c0a-40337375ae89.jpg",api:{rest:"https://paymium.com/api"},www:"https://www.paymium.com",fees:"https://www.paymium.com/page/help/fees",doc:["https://github.com/Paymium/api-documentation","https://www.paymium.com/page/developers","https://paymium.github.io/api-documentation/"],referral:"https://www.paymium.com/page/sign-up?referral=eDAzPoRQFMvaAB8sf-qj"},api:{public:{get:["countries","data/{currency}/ticker","data/{currency}/trades","data/{currency}/depth","bitcoin_charts/{id}/trades","bitcoin_charts/{id}/depth"]},private:{get:["user","user/addresses","user/addresses/{address}","user/orders","user/orders/{uuid}","user/price_alerts","merchant/get_payment/{uuid}"],post:["user/addresses","user/orders","user/withdrawals","user/email_transfers","user/payment_requests","user/price_alerts","merchant/create_payment"],delete:["user/orders/{uuid}","user/orders/{uuid}/cancel","user/price_alerts/{id}"]}},markets:{"BTC/EUR":{id:"eur",symbol:"BTC/EUR",base:"BTC",quote:"EUR",baseId:"btc",quoteId:"eur",type:"spot",spot:!0}},fees:{trading:{maker:this.parseNumber("-0.001"),taker:this.parseNumber("0.005")}},precisionMode:n.sh})}parseBalance(e){const t={info:e},i=Object.keys(this.currencies);for(let s=0;s<i.length;s++){const r=i[s],a=this.currency(r).id,n="balance_"+a;if(n in e){const i=this.account(),s="locked_"+a;i.free=this.safeString(e,n),i.used=this.safeString(e,s),t[r]=i}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetUser(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={currency:s.id},a=await this.publicGetDataCurrencyDepth(this.extend(r,i));return this.parseOrderBook(a,s.symbol,void 0,"bids","asks","price","amount")}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.safeTimestamp(e,"at"),r=this.safeString(e,"vwap"),n=this.safeString(e,"volume"),o=a.O.stringMul(n,r),d=this.safeString(e,"price");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:this.safeString(e,"open"),close:d,last:d,previousClose:void 0,change:void 0,percentage:this.safeString(e,"variation"),average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={currency:i.id},r=await this.publicGetDataCurrencyTicker(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=this.safeTimestamp(e,"created_at_int"),s=this.safeString(e,"uuid");t=this.safeMarket(void 0,t);const r=this.safeString(e,"side"),a=this.safeString(e,"price"),n="traded_"+t.base.toLowerCase(),o=this.safeString(e,n);return this.safeTrade({info:e,id:s,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:r,takerOrMaker:void 0,price:a,amount:o,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={currency:r.id},n=await this.publicGetDataCurrencyTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async createDepositAddress(e,t={}){await this.loadMarkets();const i=await this.privatePostUserAddresses(t);return this.parseDepositAddress(i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={address:e},s=await this.privateGetUserAddressesAddress(this.extend(i,t));return this.parseDepositAddress(s)}async fetchDepositAddresses(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetUserAddresses(t);return this.parseDepositAddresses(i,e)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"currency");return{info:e,currency:this.safeCurrencyCode(s,t),address:i,tag:void 0,network:void 0}}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o={type:this.capitalize(t)+"Order",currency:n.id,direction:i,amount:s};"market"!==t&&(o.price=r);const d=await this.privatePostUserOrders(this.extend(o,a));return this.safeOrder({info:d,id:d.uuid},n)}async cancelOrder(e,t=undefined,i={}){const s={uuid:e};return await this.privateDeleteUserOrdersUuidCancel(this.extend(s,i))}async transfer(e,t,i,s,a={}){await this.loadMarkets();const n=this.currency(e);if(s.indexOf("@")<0)throw new r.ExchangeError(this.id+" transfer() only allows transfers to an email address");if("BTC"!==e&&"EUR"!==e)throw new r.ExchangeError(this.id+" transfer() only allows BTC or EUR");const o={currency:n.id,amount:this.currencyToPrecision(e,t),email:s},d=await this.privatePostUserEmailTransfers(this.extend(o,a));return this.parseTransfer(d,n)}parseTransfer(e,t=undefined){const i=this.safeString(e,"currency"),s=this.safeString(e,"updated_at"),r=this.parseDate(s),a=this.safeValue(e,"account_operations"),n=this.safeValue(a,0,{}),o=this.safeString(e,"state");return{info:e,id:this.safeString(e,"uuid"),timestamp:r,datetime:this.iso8601(r),currency:this.safeCurrencyCode(i,t),amount:this.safeNumber(e,"amount"),fromAccount:void 0,toAccount:this.safeString(n,"address"),status:this.parseTransferStatus(o)}}parseTransferStatus(e){return this.safeString({executed:"ok"},e,e)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+this.version+"/"+this.implodeParams(e,s);const d=this.omit(s,this.extractParams(e));if("public"===t)Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials();const e=this.nonce().toString();let t=e+n;if(r={"Api-Key":this.apiKey,"Api-Nonce":e},"POST"===i)Object.keys(d).length&&(t+=a=this.json(d),r["Content-Type"]="application/json");else if(Object.keys(d).length){const e=this.urlencode(d);t+=e,n+="?"+e}r["Api-Signature"]=this.hmac(this.encode(t),this.encode(this.secret),o.J)}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&void 0!==this.safeValue(o,"errors"))throw new r.ExchangeError(this.id+" "+this.json(o))}}},79:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(9192),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"phemex",name:"Phemex",countries:["CN"],rateLimit:100,version:"v1",certified:!1,pro:!0,hostname:"api.phemex.com",has:{CORS:void 0,spot:!0,margin:!1,swap:!0,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistories:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!0,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!0,setMargin:!0,setMarginMode:!0,setPositionMode:!0,transfer:!0,withdraw:void 0},urls:{logo:"https://user-images.githubusercontent.com/1294454/85225056-221eb600-b3d7-11ea-930d-564d2690e3f6.jpg",test:{v1:"https://testnet-api.phemex.com/v1",public:"https://testnet-api.phemex.com/exchange/public",private:"https://testnet-api.phemex.com"},api:{v1:"https://{hostname}/v1",v2:"https://{hostname}",public:"https://{hostname}/exchange/public",private:"https://{hostname}"},www:"https://phemex.com",doc:"https://github.com/phemex/phemex-api-docs",fees:"https://phemex.com/fees-conditions",referral:{url:"https://phemex.com/register?referralCode=EDNVJ",discount:.1}},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","3h":"10800","4h":"14400","6h":"21600","12h":"43200","1d":"86400","1w":"604800","1M":"2592000","3M":"7776000","1Y":"31104000"},api:{public:{get:["cfg/v2/products","cfg/fundingRates","products","nomics/trades","md/kline","md/v2/kline/list","md/v2/kline","md/v2/kline/last"]},v1:{get:["md/orderbook","md/trade","md/ticker/24hr","md/ticker/24hr/all","md/spot/ticker/24hr","md/spot/ticker/24hr/all","exchange/public/products"]},v2:{get:["md/v2/orderbook","md/v2/trade","md/v2/ticker/24hr","md/v2/ticker/24hr/all"]},private:{get:["spot/orders/active","spot/orders","spot/wallets","exchange/spot/order","exchange/spot/order/trades","exchange/order/v2/orderList","exchange/order/v2/tradingList","accounts/accountPositions","g-accounts/accountPositions","accounts/positions","api-data/futures/funding-fees","api-data/g-futures/funding-fees","api-data/futures/orders","api-data/g-futures/orders","api-data/futures/orders/by-order-id","api-data/g-futures/orders/by-order-id","api-data/futures/trades","api-data/g-futures/trades","api-data/futures/trading-fees","api-data/g-futures/trading-fees","g-orders/activeList","orders/activeList","exchange/order/list","exchange/order","exchange/order/trade","phemex-user/users/children","phemex-user/wallets/v2/depositAddress","phemex-user/wallets/tradeAccountDetail","phemex-user/order/closedPositionList","exchange/margins/transfer","exchange/wallets/confirm/withdraw","exchange/wallets/withdrawList","exchange/wallets/depositList","exchange/wallets/v2/depositAddress","api-data/spots/funds","assets/convert","assets/transfer","assets/spots/sub-accounts/transfer","assets/futures/sub-accounts/transfer","assets/quote"],post:["spot/orders","orders","g-orders","positions/assign","exchange/wallets/transferOut","exchange/wallets/transferIn","exchange/margins","exchange/wallets/createWithdraw","exchange/wallets/cancelWithdraw","exchange/wallets/createWithdrawAddress","assets/transfer","assets/spots/sub-accounts/transfer","assets/futures/sub-accounts/transfer","assets/universal-transfer","assets/convert"],put:["spot/orders","orders/replace","g-orders/replace","positions/leverage","g-positions/leverage","g-positions/switch-pos-mode-sync","positions/riskLimit"],delete:["spot/orders","spot/orders/all","orders/cancel","orders","orders/all","g-orders/cancel","g-orders","g-orders/all"]}},precisionMode:n.sh,fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},requiredCredentials:{apiKey:!0,secret:!0},exceptions:{exact:{412:r.BadRequest,6001:r.BadRequest,19999:r.BadRequest,10001:r.DuplicateOrderId,10002:r.OrderNotFound,10003:r.CancelPending,10004:r.CancelPending,10005:r.CancelPending,11001:r.InsufficientFunds,11002:r.InvalidOrder,11003:r.InsufficientFunds,11004:r.InvalidOrder,11005:r.InsufficientFunds,11006:r.ExchangeError,11007:r.ExchangeError,11008:r.ExchangeError,11009:r.ExchangeError,11010:r.InsufficientFunds,11011:r.InvalidOrder,11012:r.InvalidOrder,11013:r.InvalidOrder,11014:r.InvalidOrder,11015:r.InvalidOrder,11016:r.BadRequest,11017:r.ExchangeError,11018:r.ExchangeError,11019:r.ExchangeError,11020:r.ExchangeError,11021:r.ExchangeError,11022:r.AccountSuspended,11023:r.ExchangeError,11024:r.ExchangeError,11025:r.BadRequest,11026:r.ExchangeError,11027:r.BadSymbol,11028:r.BadSymbol,11029:r.ExchangeError,11030:r.ExchangeError,11031:r.DDoSProtection,11032:r.DDoSProtection,11033:r.DuplicateOrderId,11034:r.InvalidOrder,11035:r.InvalidOrder,11036:r.InvalidOrder,11037:r.InvalidOrder,11038:r.InvalidOrder,11039:r.InvalidOrder,11040:r.InvalidOrder,11041:r.InvalidOrder,11042:r.InvalidOrder,11043:r.InvalidOrder,11044:r.InvalidOrder,11045:r.InvalidOrder,11046:r.InvalidOrder,11047:r.InvalidOrder,11048:r.InvalidOrder,11049:r.InvalidOrder,11050:r.InvalidOrder,11051:r.InvalidOrder,11052:r.InvalidOrder,11053:r.InvalidOrder,11054:r.InvalidOrder,11055:r.InvalidOrder,11056:r.InvalidOrder,11057:r.InvalidOrder,11058:r.InvalidOrder,11059:r.InvalidOrder,11060:r.InvalidOrder,11061:r.CancelPending,11062:r.InvalidOrder,11063:r.InvalidOrder,11064:r.InvalidOrder,11065:r.InvalidOrder,11066:r.InvalidOrder,11067:r.InvalidOrder,11068:r.InvalidOrder,11069:r.ExchangeError,11070:r.BadSymbol,11071:r.InvalidOrder,11072:r.InvalidOrder,11073:r.InvalidOrder,11074:r.InvalidOrder,11075:r.InvalidOrder,11076:r.InvalidOrder,11077:r.InvalidOrder,11078:r.InvalidOrder,11079:r.InvalidOrder,11080:r.InvalidOrder,11081:r.InvalidOrder,11082:r.InsufficientFunds,11083:r.InvalidOrder,11084:r.InvalidOrder,11085:r.DuplicateOrderId,11086:r.InvalidOrder,11087:r.InvalidOrder,11088:r.InvalidOrder,11089:r.InvalidOrder,11090:r.InvalidOrder,11091:r.InvalidOrder,11092:r.InvalidOrder,11093:r.InvalidOrder,11094:r.InvalidOrder,11095:r.InvalidOrder,11096:r.InvalidOrder,11097:r.BadRequest,11098:r.BadRequest,11099:r.ExchangeError,11100:r.InsufficientFunds,11101:r.InsufficientFunds,11102:r.BadRequest,11103:r.BadRequest,11104:r.BadRequest,11105:r.InsufficientFunds,11106:r.InsufficientFunds,11107:r.ExchangeError,11108:r.InvalidOrder,11109:r.InvalidOrder,11110:r.InvalidOrder,11111:r.InvalidOrder,11112:r.InvalidOrder,11113:r.BadRequest,11114:r.InvalidOrder,11115:r.InvalidOrder,11116:r.InvalidOrder,11117:r.InvalidOrder,11118:r.InvalidOrder,11119:r.InvalidOrder,11120:r.InvalidOrder,11121:r.InvalidOrder,11122:r.InvalidOrder,11123:r.InvalidOrder,11124:r.InvalidOrder,11125:r.InvalidOrder,11126:r.InvalidOrder,11128:r.InvalidOrder,11129:r.InvalidOrder,11130:r.InvalidOrder,11131:r.InvalidOrder,11132:r.InvalidOrder,11133:r.InvalidOrder,11134:r.InvalidOrder,3e4:r.BadRequest,30018:r.BadRequest,34003:r.PermissionDenied,35104:r.InsufficientFunds,39995:r.RateLimitExceeded,39996:r.PermissionDenied},broad:{"401 Insufficient privilege":r.PermissionDenied,"401 Request IP mismatch":r.PermissionDenied,"Failed to find api-key":r.AuthenticationError,"Missing required parameter":r.BadRequest,"API Signature verification failed":r.AuthenticationError,"Api key not found":r.AuthenticationError}},options:{brokerId:"ccxt2022","x-phemex-request-expiry":60,createOrderByQuoteRequiresPrice:!0,networks:{TRC20:"TRX",ERC20:"ETH"},defaultNetworks:{USDT:"ETH"},defaultSubType:"linear",accountsByType:{spot:"spot",swap:"future"},transfer:{fillResponseFromRequest:!0}}})}parseSafeNumber(e=undefined){if(void 0===e)return e;let t=e.split(",");return e=t.join(""),t=e.split(" "),this.safeNumber(t,0)}parseSwapMarket(e){const t=this.safeString(e,"symbol"),i=this.safeString2(e,"baseCurrency","contractUnderlyingAssets"),s=this.safeString(e,"quoteCurrency"),r=this.safeString(e,"settleCurrency"),a=this.safeCurrencyCode(i),n=this.safeCurrencyCode(s),o=this.safeCurrencyCode(r);let d=!1;r!==s&&(d=!0);const c=this.safeInteger(e,"priceScale"),h=this.safeInteger(e,"ratioScale"),u=this.safeInteger(e,"valueScale"),l=this.safeString(e,"minPriceEp"),p=this.safeString(e,"maxPriceEp"),f=this.safeString(e,"makerFeeRateEr"),m=this.safeString(e,"takerFeeRateEr"),v=this.safeString(e,"status"),g=this.safeString(e,"contractSize"," ");let y;if(g.indexOf(" ")){const e=g.split(" ");y=this.parseNumber(e[0])}else y=this.parseNumber(g);return{id:t,symbol:a+"/"+n+":"+o,base:a,quote:n,settle:o,baseId:i,quoteId:s,settleId:r,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"Listed"===v,contract:!0,linear:!d,inverse:d,taker:this.parseNumber(this.fromEn(m,h)),maker:this.parseNumber(this.fromEn(f,h)),contractSize:y,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,priceScale:c,valueScale:u,ratioScale:h,precision:{amount:this.safeNumber2(e,"lotSize","qtyStepSize"),price:this.safeNumber(e,"tickSize")},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(e,"maxLeverage")},amount:{min:void 0,max:void 0},price:{min:this.parseNumber(this.fromEn(l,c)),max:this.parseNumber(this.fromEn(p,c))},cost:{min:void 0,max:this.parseNumber(this.safeString(e,"maxOrderQty"))}},info:e}}parseSpotMarket(e){const t=this.safeStringLower(e,"type"),i=this.safeString(e,"symbol"),s=this.safeString(e,"quoteCurrency"),r=this.safeString(e,"baseCurrency"),a=this.safeCurrencyCode(r),n=this.safeCurrencyCode(s),o=this.safeString(e,"status"),d=this.parseSafeNumber(this.safeString(e,"baseTickSize")),c=this.parseSafeNumber(this.safeString(e,"quoteTickSize"));return{id:i,symbol:a+"/"+n,base:a,quote:n,settle:void 0,baseId:r,quoteId:s,settleId:void 0,type:t,spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"Listed"===o,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(e,"defaultTakerFee"),maker:this.safeNumber(e,"defaultMakerFee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,priceScale:8,valueScale:8,ratioScale:8,precision:{amount:d,price:c},limits:{leverage:{min:void 0,max:void 0},amount:{min:d,max:this.parseSafeNumber(this.safeString(e,"maxBaseOrderSize"))},price:{min:c,max:void 0},cost:{min:this.parseSafeNumber(this.safeString(e,"minOrderValue")),max:this.parseSafeNumber(this.safeString(e,"maxOrderValue"))}},info:e}}async fetchMarkets(e={}){const t=await this.publicGetCfgV2Products(e),i=await this.v1GetExchangePublicProducts(e),s=this.safeValue(i,"data",[]),r=this.safeValue(t,"data",{}),a=this.safeValue(r,"products",[]),n=this.safeValue(r,"riskLimits",[]),o=this.indexBy(n,"symbol"),d=this.indexBy(s,"symbol"),c=[];for(let e=0;e<a.length;e++){let t=a[e];const i=this.safeStringLower(t,"type");if("perpetual"===i||"perpetualv2"===i){const e=this.safeString(t,"symbol"),i=this.safeValue(o,e,{});t=this.extend(t,i);const s=this.safeValue(d,e,{});t=this.extend(t,s),t=this.parseSwapMarket(t)}else t=this.parseSpotMarket(t);c.push(t)}return c}async fetchCurrencies(e={}){const t=await this.publicGetCfgV2Products(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"currencies",[]),r={};for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"currency"),n=this.safeString(t,"name"),o=this.safeCurrencyCode(i),d=this.safeString(t,"valueScale"),c=parseInt(d),h=this.safeString(t,"minValueEv"),u=this.safeString(t,"maxValueEv");let l,p,f;if(void 0!==c){const e=this.parsePrecision(d);f=this.parseNumber(e),l=this.parseNumber(a.O.stringMul(h,e)),p=this.parseNumber(a.O.stringMul(u,e))}r[o]={id:i,info:t,code:o,name:n,active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:f,limits:{amount:{min:l,max:p},withdraw:{min:void 0,max:void 0}},valueScale:c}}return r}parseBidAsk(e,t=0,i=1,s=undefined){if(void 0===s)throw new r.ArgumentsRequired(this.id+" parseBidAsk() requires a market argument");let a=this.safeString(e,i);return s.spot&&(a=this.fromEv(a,s)),[this.parseNumber(this.fromEp(this.safeString(e,t),s)),this.parseNumber(a)]}customParseOrderBook(e,t,i=undefined,s="bids",r="asks",a=0,n=1,o=undefined){const d={symbol:t,timestamp:i,datetime:this.iso8601(i),nonce:void 0},c=[s,r];for(let t=0;t<c.length;t++){const i=c[t],s=[],r=this.safeValue(e,i);for(let e=0;e<r.length;e++)s.push(this.parseBidAsk(r[e],a,n,o));d[i]=s}return d[s]=this.sortBy(d[s],0,!0),d[r]=this.sortBy(d[r],0),d}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};let a="v1GetMdOrderbook";s.linear&&"USDT"===s.settle&&(a="v2GetMdV2Orderbook");const n=await this[a](this.extend(r,i)),o=this.safeValue(n,"result",{}),d=this.safeValue2(o,"book","orderbook_p",{}),c=this.safeIntegerProduct(o,"timestamp",1e-6),h=this.customParseOrderBook(d,e,c,"bids","asks",0,1,s);return h.nonce=this.safeInteger(o,"sequence"),h}toEn(e,t){const i=e.toString(),s=new a.O(i);s.decimals=s.decimals-t,s.reduce();const r=s.toString(),n=parseFloat(r).toString();return parseInt(n)}toEv(e,t=undefined){return void 0===e||void 0===t?e:this.toEn(e,t.valueScale)}toEp(e,t=undefined){return void 0===e||void 0===t?e:this.toEn(e,t.priceScale)}fromEn(e,t){if(void 0===e)return;const i=new a.O(e);return i.decimals=this.sum(i.decimals,t),i.reduce(),i.toString()}fromEp(e,t=undefined){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"priceScale"))}fromEv(e,t=undefined){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"valueScale"))}fromEr(e,t=undefined){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"ratioScale"))}parseOHLCV(e,t=undefined){let i;return i=void 0!==t&&t.spot?this.parseNumber(this.fromEv(this.safeString(e,7),t)):this.safeNumber(e,7),[this.safeTimestamp(e,0),this.parseNumber(this.fromEp(this.safeString(e,3),t)),this.parseNumber(this.fromEp(this.safeString(e,4),t)),this.parseNumber(this.fromEp(this.safeString(e,5),t)),this.parseNumber(this.fromEp(this.safeString(e,6),t)),i]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,resolution:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t),d=this.seconds();void 0===s&&(s=100),s=Math.min(s,1e3),void 0!==i?(i=this.parseToInt(i/1e3),n.from=i,n.to=Math.min(d,this.sum(i,o*s))):(this.inArray(s,[5,10,50,100,500,1e3])||(s=100),n.limit=s);let c="publicGetMdKline";(a.linear||"USDT"===a.settle)&&(c="publicGetMdV2KlineLast");const h=await this[c](this.extend(n,r)),u=this.safeValue(h,"data",{}),l=this.safeValue(u,"rows",[]);return this.parseOHLCVs(l,a,t,i,s)}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeIntegerProduct(e,"timestamp",1e-6),a=this.fromEp(this.safeString2(e,"lastEp","closeRp"),t),n=this.fromEv(this.safeString2(e,"turnoverEv","turnoverRv"),t);let o=this.safeString(e,"volume");void 0===o&&(o=this.fromEv(this.safeString2(e,"volumeEv","volumeRq"),t));const d=this.fromEp(this.safeString(e,"openEp"),t);return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.fromEp(this.safeString2(e,"highEp","highRp"),t),low:this.fromEp(this.safeString2(e,"lowEp","lowRp"),t),bid:this.fromEp(this.safeString(e,"bidEp"),t),bidVolume:void 0,ask:this.fromEp(this.safeString(e,"askEp"),t),askVolume:void 0,vwap:void 0,open:d,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:n,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id};let r="v1GetMdSpotTicker24hr";i.swap&&(r=i.inverse||"USD"===i.settle?"v1GetMdTicker24hr":"v2GetMdV2Ticker24hr");const a=await this[r](this.extend(s,t)),n=this.safeValue(a,"result",{});return this.parseTicker(n,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};let n="v1GetMdTrade";r.linear&&"USDT"===r.settle&&(n="v2GetMdV2Trade");const o=await this[n](this.extend(a,s)),d=this.safeValue(o,"result",{}),c=this.safeValue2(d,"trades","trades_p",[]);return this.parseTrades(c,r,t,i)}parseTrade(e,t=undefined){let i,s,r,a,n,o,d,c,h,u,l;const p=this.safeString(e,"symbol"),f=(t=this.safeMarket(p,t)).symbol;let m,v;if(Array.isArray(e)){const o=e.length;r=this.safeIntegerProduct(e,0,1e-6),o>4&&(a=this.safeString(e,o-4)),n=this.safeStringLower(e,o-3),i=this.safeString(e,o-2),s=this.safeString(e,o-1),"number"==typeof e[o-2]&&(i=this.fromEp(i,t),s=this.fromEv(s,t))}else{if(r=this.safeIntegerProduct(e,"transactTimeNs",1e-6),void 0===r&&(r=this.safeInteger(e,"createdAt")),a=this.safeString2(e,"execId","execID"),m=this.safeString(e,"orderID"),"USDT"===t.settle){n="1"===this.safeString(e,"side")?"buy":"sell";const t=this.safeString(e,"ordType");"1"===t?d="market":"2"===t&&(d="limit"),i=this.safeString(e,"priceRp"),s=this.safeString(e,"execQtyRq"),o=this.safeString(e,"execValueRv"),h=this.safeString(e,"execFeeRv"),u=this.safeString(e,"feeRateRr");const r=this.safeString(e,"currency");l=this.safeCurrencyCode(r)}else if(n=this.safeStringLower(e,"side"),d=this.parseOrderType(this.safeString(e,"ordType")),"MakerFill"===this.safeString(e,"execStatus")&&(v="maker"),i=this.fromEp(this.safeString(e,"execPriceEp"),t),s=this.fromEv(this.safeString(e,"execBaseQtyEv"),t),s=this.safeString(e,"execQty",s),o=this.fromEv(this.safeString2(e,"execQuoteQtyEv","execValueEv"),t),h=this.fromEv(this.safeString(e,"execFeeEv"),t),void 0!==h)if(u=this.fromEr(this.safeString(e,"feeRateEr"),t),t.spot)l="buy"===n?t.base:t.quote;else{const e=this.safeValue(t,"info");if(void 0!==e){const t=this.safeString(e,"settlementCurrency");l=this.safeCurrencyCode(t)}}c={cost:h,rate:u,currency:l}}return this.safeTrade({info:e,id:a,symbol:f,timestamp:r,datetime:this.iso8601(r),order:m,type:d,side:n,takerOrMaker:v,price:i,amount:s,cost:o,fee:c},t)}parseSpotBalance(e){let t;const i={info:e},s=this.safeValue(e,"data",[]);for(let e=0;e<s.length;e++){const r=s[e],n=this.safeString(r,"currency"),o=this.safeCurrencyCode(n),d=this.safeValue(this.currencies,o,{}),c=this.safeInteger(d,"valueScale",8),h=this.account(),u=this.safeString(r,"balanceEv"),l=this.safeString(r,"lockedTradingBalanceEv"),p=this.safeString(r,"lockedWithdrawEv"),f=this.fromEn(u,c),m=this.fromEn(l,c),v=this.fromEn(p,c),g=a.O.stringAdd(m,v),y=this.safeIntegerProduct(r,"lastUpdateTimeNs",1e-6);t=void 0===t?y:Math.max(t,y),h.total=f,h.used=g,i[o]=h}return i.timestamp=t,i.datetime=this.iso8601(t),this.safeBalance(i)}parseSwapBalance(e){const t={info:e},i=this.safeValue(e,"data",{}),s=this.safeValue(i,"account",{}),r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.currency(a),o=this.safeInteger(n,"valueScale",8),d=this.account(),c=this.safeString2(s,"accountBalanceEv","accountBalanceRv"),h=this.safeString2(s,"totalUsedBalanceEv","totalUsedBalanceRv"),u="USDT"!==a;return d.total=u?this.fromEn(c,o):c,d.used=u?this.fromEn(h,o):h,t[a]=d,this.safeBalance(t)}async fetchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let i="privateGetSpotWallets";const s={};if("swap"===t){const a=this.safeString(e,"code");let n;if([n,e]=this.handleOptionAndParams(e,"fetchBalance","settle"),void 0!==a||void 0!==n){let e;e=void 0!==a?a:n;const t=this.currency(e);s.currency=t.id,i="USDT"===t.id?"privateGetGAccountsAccountPositions":"privateGetAccountsAccountPositions"}else if(void 0===this.safeString(e,"currency"))throw new r.ArgumentsRequired(this.id+" fetchBalance() requires a code parameter or a currency or settle parameter for "+t+" type")}e=this.omit(e,["type","code"]);const a=await this[i](this.extend(s,e));return"swap"===t?this.parseSwapBalance(a):this.parseSpotBalance(a)}parseOrderStatus(e){return this.safeString({Created:"open",Untriggered:"open",Deactivated:"closed",Triggered:"open",Rejected:"rejected",New:"open",PartiallyFilled:"open",Filled:"closed",Canceled:"canceled",1:"open",5:"open",6:"open",7:"closed",8:"canceled"},e,e)}parseOrderType(e){return this.safeString({1:"market",2:"limit",3:"stop",4:"stopLimit",5:"market",6:"limit",7:"market",8:"market",9:"stopLimit",10:"market",Limit:"limit",Market:"market"},e,e)}parseTimeInForce(e){return this.safeString({GoodTillCancel:"GTC",PostOnly:"PO",ImmediateOrCancel:"IOC",FillOrKill:"FOK"},e,e)}parseSpotOrder(e,t=undefined){const i=this.safeString(e,"orderID");let s=this.safeString(e,"clOrdID");void 0!==s&&s.length<1&&(s=void 0);const r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.fromEp(this.safeString(e,"priceEp"),t),o=this.fromEv(this.safeString(e,"baseQtyEv"),t),d=this.omitZero(this.fromEv(this.safeString(e,"leavesBaseQtyEv"),t)),c=this.fromEv(this.safeString2(e,"cumBaseQtyEv","cumBaseValueEv"),t),h=this.fromEv(this.safeString2(e,"cumQuoteValueEv","quoteQtyEv"),t),u=this.fromEp(this.safeString(e,"avgPriceEp"),t),l=this.parseOrderStatus(this.safeString(e,"ordStatus")),p=this.safeStringLower(e,"side"),f=this.parseOrderType(this.safeString(e,"ordType")),m=this.safeIntegerProduct2(e,"actionTimeNs","createTimeNs",1e-6);let v;const g=this.fromEv(this.safeString(e,"cumFeeEv"),t);void 0!==g&&(v={cost:g,currency:void 0});const y=this.parseTimeInForce(this.safeString(e,"timeInForce")),b=this.parseNumber(this.omitZero(this.fromEp(this.safeString(e,"stopPxEp",t)))),w="PO"===y;return this.safeOrder({info:e,id:i,clientOrderId:s,timestamp:m,datetime:this.iso8601(m),lastTradeTimestamp:void 0,symbol:a,type:f,timeInForce:y,postOnly:w,side:p,price:n,stopPrice:b,triggerPrice:b,amount:o,cost:h,average:u,filled:c,remaining:d,status:l,fee:v,trades:void 0},t)}parseOrderSide(e){return this.safeString({1:"buy",2:"sell"},e,e)}parseSwapOrder(e,t=undefined){const i=this.safeString2(e,"orderID","orderId");let s=this.safeString2(e,"clOrdID","clOrdId");void 0!==s&&s.length<1&&(s=void 0);const r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.parseOrderStatus(this.safeString(e,"ordStatus")),o=this.parseOrderSide(this.safeStringLower(e,"side")),d=this.parseOrderType(this.safeString(e,"orderType"));let c=this.safeString(e,"priceRp");void 0===c&&(c=this.fromEp(this.safeString(e,"priceEp"),t));const h=this.safeNumber2(e,"orderQty","orderQtyRq"),u=this.safeNumber2(e,"cumQty","cumQtyRq"),l=this.safeNumber2(e,"leavesQty","leavesQtyRq");let p=this.safeIntegerProduct(e,"actionTimeNs",1e-6);void 0===p&&(p=this.safeInteger(e,"createdAt"));const f=this.safeNumber2(e,"cumValue","cumValueRv");let m=this.safeIntegerProduct(e,"transactTimeNs",1e-6);0===m&&(m=void 0);const v=this.parseTimeInForce(this.safeString(e,"timeInForce")),g=this.safeNumber2(e,"stopPx","stopPxRp"),y="PO"===v;let b=this.safeValue(e,"reduceOnly");return"ReduceOnly"===this.safeString(e,"execInst")&&(b=!0),this.safeOrder({info:e,id:i,clientOrderId:s,datetime:this.iso8601(p),timestamp:p,lastTradeTimestamp:m,symbol:a,type:d,timeInForce:v,postOnly:y,reduceOnly:b,side:o,price:c,stopPrice:g,triggerPrice:g,amount:h,filled:u,remaining:l,cost:f,average:void 0,status:n,fee:void 0,trades:void 0})}parseOrder(e,t=undefined){return this.safeValue(t,"swap",!1)||"closedPnl"in e?this.parseSwapOrder(e,t):this.parseSpotOrder(e,t)}async createOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets();const d=this.market(e);i=this.capitalize(i),t=this.capitalize(t);const c=this.safeValue(o,"reduceOnly"),h={symbol:d.id,side:i,ordType:t},u=this.safeString2(o,"clOrdID","clientOrderId");if(void 0===u){const e=this.safeString(this.options,"brokerId");void 0!==e&&(h.clOrdID=e+this.uuid16())}else h.clOrdID=u,o=this.omit(o,["clOrdID","clientOrderId"]);const l=this.safeString2(o,"stopPx","stopPrice");if(void 0!==l&&("USDT"===d.settle?h.stopPxRp=this.priceToPrecision(e,l):h.stopPxEp=this.toEp(l,d)),o=this.omit(o,["stopPx","stopPrice"]),d.spot){let e=this.safeValue(o,"qtyType","ByBase");if("Market"!==t&&"Stop"!==t&&"MarketIfTouched"!==t||void 0!==n&&(e="ByQuote"),h.qtyType=e,"ByQuote"===e){let t=this.safeNumber(o,"cost");if(o=this.omit(o,"cost"),this.options.createOrderByQuoteRequiresPrice)if(void 0!==n){const e=this.numberToString(s),i=this.numberToString(n),r=a.O.stringMul(e,i);t=this.parseNumber(r)}else if(void 0===t)throw new r.ArgumentsRequired(this.id+" createOrder() "+e+" requires a price argument or a cost parameter");t=void 0===t?s:t;const i=t.toString();h.quoteQtyEv=this.toEv(i,d)}else{const e=s.toString();h.baseQtyEv=this.toEv(e,d)}}else if(d.swap){let e=this.safeStringLower(o,"posSide");if(void 0===e&&(e="Merged"),e=this.capitalize(e),h.posSide=e,void 0!==c&&(h.reduceOnly=c),"USDT"===d.settle?h.orderQtyRq=s:h.orderQty=parseInt(s),void 0!==l){const e=this.safeString(o,"triggerType","ByMarkPrice");h.triggerType=e}}if("Limit"===t||"StopLimit"===t||"LimitIfTouched"===t)if("USDT"===d.settle)h.priceRp=this.priceToPrecision(e,n);else{const e=this.numberToString(n);h.priceEp=this.toEp(e,d)}const p=this.safeString(o,"takeProfitPrice");void 0!==p&&("USDT"===d.settle?h.takeProfitRp=this.priceToPrecision(e,p):h.takeProfitEp=this.toEp(p,d),o=this.omit(o,"takeProfitPrice"));const f=this.safeString(o,"stopLossPrice");void 0!==f&&("USDT"===d.settle?h.stopLossRp=this.priceToPrecision(e,f):h.stopLossEp=this.toEp(f,d),o=this.omit(o,"stopLossPrice"));let m="privatePostSpotOrders";"USDT"===d.settle?m="privatePostGOrders":d.contract&&(m="privatePostOrders"),o=this.omit(o,"reduceOnly");const v=await this[m](this.extend(h,o)),g=this.safeValue(v,"data",{});return this.parseOrder(g,d)}async editOrder(e,t,i=undefined,s=undefined,a=undefined,n=undefined,o={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" editOrder() requires a symbol argument");await this.loadMarkets();const d=this.market(t),c={symbol:d.id},h=this.safeString2(o,"clientOrderId","clOrdID");o=this.omit(o,["clientOrderId","clOrdID"]);const u="USDT"===d.settle;void 0!==h?c.clOrdID=h:c.orderID=e,void 0!==n&&(u?c.priceRp=this.priceToPrecision(d.symbol,n):c.priceEp=this.toEp(n,d));const l=this.safeString(o,"baseQtyEv");o=this.omit(o,["baseQtyEv"]),void 0!==l?c.baseQtyEV=l:void 0!==a&&(c.baseQtyEV=u?this.amountToPrecision(d.symbol,a):this.toEv(a,d));const p=this.safeString2(o,"stopPx","stopPrice");void 0!==p&&(u?c.stopPxRp=this.priceToPrecision(t,p):c.stopPxEp=this.toEp(p,d)),o=this.omit(o,["stopPx","stopPrice"]);let f="privatePutSpotOrders";d.inverse?f="privatePutOrdersReplace":u&&(f="privatePutGOrdersReplace",void 0===this.safeString(o,"posSide")&&(c.posSide="Merged"));const m=await this[f](this.extend(c,o)),v=this.safeValue(m,"data",{});return this.parseOrder(v,d)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={symbol:s.id},n=this.safeString2(i,"clientOrderId","clOrdID");i=this.omit(i,["clientOrderId","clOrdID"]),void 0!==n?a.clOrdID=n:a.orderID=e;let o="privateDeleteSpotOrders";s.inverse?o="privateDeleteOrdersCancel":"USDT"===s.settle&&(o="privateDeleteGOrdersCancel",void 0===this.safeString(i,"posSide")&&(a.posSide="Merged"));const d=await this[o](this.extend(a,i)),c=this.safeValue(d,"data",{});return this.parseOrder(c,s)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const i={},s=this.market(e);let a="privateDeleteSpotOrdersAll";return s.inverse?a="privateDeleteOrdersAll":"USDT"===s.settle&&(a="privateDeleteGOrdersAll"),i.symbol=s.id,await this[a](this.extend(i,t))}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t);if("USDT"===s.settle)throw new r.NotSupported(this.id+"fetchOrder() is not supported yet for USDT settled swap markets");const a=s.spot?"privateGetSpotOrdersActive":"privateGetExchangeOrder",n={symbol:s.id},o=this.safeString2(i,"clientOrderId","clOrdID");i=this.omit(i,["clientOrderId","clOrdID"]),void 0!==o?n.clOrdID=o:n.orderID=e;const d=await this[a](this.extend(n,i)),c=this.safeValue(d,"data",{});let h=c;if(Array.isArray(c)){if(c.length<1)throw void 0!==o?new r.OrderNotFound(this.id+" fetchOrder() "+t+" order with clientOrderId "+o+" not found"):new r.OrderNotFound(this.id+" fetchOrder() "+t+" order with id "+e+" not found");h=this.safeValue(c,0,{})}return this.parseOrder(h,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};let o="privateGetSpotOrders";a.inverse?o="privateGetExchangeOrderList":"USDT"===a.settle&&(n.currency=a.settle,o="privateGetExchangeOrderV2OrderList"),void 0!==t&&(n.start=t),void 0!==i&&(n.limit=i);const d=await this[o](this.extend(n,s)),c=this.safeValue(d,"data",{}),h=this.safeValue(c,"rows",c);return this.parseOrders(h,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e);let n="privateGetSpotOrders";a.inverse?n="privateGetOrdersActiveList":"USDT"===a.settle&&(n="privateGetGOrdersActiveList");const o={symbol:a.id};let d;try{d=await this[n](this.extend(o,s))}catch(e){if(e instanceof r.OrderNotFound)return[];throw e}const c=this.safeValue(d,"data",{});if(Array.isArray(c))return this.parseOrders(c,a,t,i);{const e=this.safeValue(c,"rows",[]);return this.parseOrders(e,a,t,i)}}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};let o="privateGetExchangeSpotOrder";a.inverse?o="privateGetExchangeOrderList":"USDT"===a.settle&&(n.currency=a.settle,o="privateGetExchangeOrderV2OrderList"),void 0!==t&&(n.start=t),void 0!==i&&(n.limit=i);const d=await this[o](this.extend(n,s)),c=this.safeValue(d,"data",{});if(Array.isArray(c))return this.parseOrders(c,a,t,i);{const e=this.safeValue(c,"rows",[]);return this.parseOrders(e,a,t,i)}}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e);let n="privateGetExchangeSpotOrderTrades";a.swap&&(n="privateGetExchangeOrderTrade","USDT"===a.settle&&(n="privateGetExchangeOrderV2TradingList"));const o={};"USDT"===a.settle?(o.currency="USDT",o.offset=0,void 0!==(i=200)&&(i=Math.min(200,i)),o.limit=i):o.symbol=a.id,void 0!==t&&(o.start=t),a.swap&&void 0!==i&&(o.limit=i);const d=await this[n](this.extend(o,s)),c=this.safeValue(d,"data",{});if("privateGetExchangeOrderV2TradingList"!==n){const e=this.safeValue(c,"rows",[]);return this.parseTrades(e,a,t,i)}return this.parseTrades(c,a,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=this.safeValue(this.options,"defaultNetworks"),a=this.safeStringUpper(r,e),n=this.safeValue(this.options,"networks",{});let o=this.safeStringUpper(t,"network",a);o=this.safeString(n,o,o),void 0===o?s.chainName=i.id:(s.chainName=o,t=this.omit(t,"network"));const d=await this.privateGetPhemexUserWalletsV2DepositAddress(this.extend(s,t)),c=this.safeValue(d,"data",{}),h=this.safeString(c,"address"),u=this.safeString(c,"tag");return this.checkAddress(h),{currency:e,address:h,tag:u,network:void 0,info:d}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetExchangeWalletsDepositList(s),n=this.safeValue(a,"data",{});return this.parseTransactions(n,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.currency(e));const a=await this.privateGetExchangeWalletsWithdrawList(s),n=this.safeValue(a,"data",{});return this.parseTransactions(n,r,t,i)}parseTransactionStatus(e){return this.safeString({Success:"ok",Succeed:"ok"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"address"),r=void 0,a=this.safeString(e,"txHash"),n=this.safeString(e,"currency"),o=(t=this.safeCurrency(n,t)).code,d=this.safeInteger2(e,"createdAt","submitedAt");let c=this.safeStringLower(e,"type");const h=this.parseNumber(this.fromEn(this.safeString(e,"feeEv"),t.valueScale));let u;void 0!==h&&(c="withdrawal",u={cost:h,currency:o});const l=this.parseTransactionStatus(this.safeString(e,"status")),p=this.parseNumber(this.fromEn(this.safeString(e,"amountEv"),t.valueScale));return{info:e,id:i,txid:a,timestamp:d,datetime:this.iso8601(d),network:void 0,address:s,addressTo:s,addressFrom:void 0,tag:r,tagTo:r,tagFrom:void 0,type:c,amount:p,currency:o,status:l,updated:void 0,fee:u}}async fetchPositions(e=undefined,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e);let s,r,a="privateGetAccountsAccountPositions",n=this.safeString(t,"currency");const o=this.safeString(e,0);void 0!==o?(r=this.market(o),s=r.settle,n=r.settle):[s,t]=this.handleOptionAndParams(t,"fetchPositions","settle","USD"),[i,t]=this.handleSubTypeAndParams("fetchPositions",r,t),"USDT"===s?(n="USDT",a="privateGetGAccountsAccountPositions"):void 0===n?n="linear"===i?"USD":"BTC":t=this.omit(t,"code");const d={currency:this.currency(n).id},c=await this[a](this.extend(d,t)),h=this.safeValue(c,"data",{}),u=this.safeValue(h,"positions",[]),l=[];for(let e=0;e<u.length;e++){const t=u[e];l.push(this.parsePosition(t))}return this.filterByArray(l,"symbol",e,!1)}parsePosition(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString2(e,"positionMargin","positionMarginRv"),n=this.safeString2(e,"value","valueRv"),o=this.safeString2(e,"maintMarginReq","maintMarginReqRr"),d=a.O.stringMul(n,o),c=this.safeString2(e,"assignedPosBalance","assignedPosBalanceRv"),h=a.O.stringDiv(c,n),u=this.safeNumber2(e,"liquidationPrice","liquidationPriceRp"),l=this.safeString2(e,"markPrice","markPriceRp"),p=this.safeString(e,"size"),f=this.safeValue(t,"contractSize"),m=this.numberToString(f),v=this.safeNumber2(e,"leverage","leverageRr"),g=this.safeString2(e,"avgEntryPrice","avgEntryPriceRp"),y=this.safeString(e,"side");let b,w;void 0!==y&&(b="Buy"===y?"long":"short"),w="USD"===this.safeString(e,"currency")?"long"===b?a.O.stringSub(l,g):a.O.stringSub(g,l):"long"===b?a.O.stringSub(a.O.stringDiv("1",g),a.O.stringDiv("1",l)):a.O.stringSub(a.O.stringDiv("1",l),a.O.stringDiv("1",g));const S=a.O.stringMul(a.O.stringMul(w,p),m),P=a.O.stringMul(a.O.stringDiv(S,c),"100"),k=a.O.stringDiv(d,r);return{info:e,id:void 0,symbol:s,contracts:this.parseNumber(p),contractSize:f,unrealizedPnl:this.parseNumber(S),leverage:v,liquidationPrice:u,collateral:this.parseNumber(r),notional:this.parseNumber(n),markPrice:this.parseNumber(l),entryPrice:this.parseNumber(g),timestamp:void 0,initialMargin:this.parseNumber(c),initialMarginPercentage:this.parseNumber(h),maintenanceMargin:this.parseNumber(d),maintenanceMarginPercentage:this.parseNumber(o),marginRatio:this.parseNumber(k),datetime:void 0,marginMode:void 0,side:b,hedged:!1,percentage:this.parseNumber(P)}}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchFundingHistory() requires a symbol argument");const a=this.market(e),n={symbol:a.id};if(i>200)throw new r.BadRequest(this.id+" fetchFundingHistory() limit argument cannot exceed 200");void 0!==i&&(n.limit=i);let o="privateGetApiDataFuturesFundingFees";"USDT"===a.settle&&(o="privateGetApiDataGFuturesFundingFees");const d=await this[o](this.extend(n,s)),c=this.safeValue(d,"data",{}),h=this.safeValue(c,"rows",[]),u=[];for(let e=0;e<h.length;e++){const t=h[e],i=this.safeInteger(t,"createTime");u.push({info:t,symbol:this.safeString(t,"symbol"),code:this.safeCurrencyCode(this.safeString(t,"currency")),timestamp:i,datetime:this.iso8601(i),id:void 0,amount:this.fromEv(this.safeString(t,"execFeeEv"),a)})}return u}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.BadSymbol(this.id+" fetchFundingRate() supports swap contracts only");const s={symbol:i.id};let a={};a=i.linear?await this.v2GetMdV2Ticker24hr(this.extend(s,t)):await this.v1GetMdTicker24hr(this.extend(s,t));const n=this.safeValue(a,"result",{});return this.parseFundingRate(n,i)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeIntegerProduct(e,"timestamp",1e-6);return{info:e,symbol:s,markPrice:this.fromEp(this.safeString2(e,"markEp","markPriceRp"),t),indexPrice:this.fromEp(this.safeString2(e,"indexEp","indexPriceRp"),t),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:r,datetime:this.iso8601(r),fundingRate:this.fromEr(this.safeString(e,"fundingRateEr"),t),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:this.fromEr(this.safeString2(e,"predFundingRateEr","predFundingRateRr"),t),nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async setMargin(e,t,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id,posBalanceEv:this.toEv(t,s)},a=await this.privatePostPositionsAssign(this.extend(r,i));return this.extend(this.parseMarginModification(a,s),{amount:t})}parseMarginStatus(e){return this.safeString({0:"ok"},e,e)}parseMarginModification(e,t=undefined){return{info:e,type:"set",amount:void 0,total:void 0,code:(t=this.safeMarket(void 0,t))[this.safeValue(t,"inverse")?"base":"quote"],symbol:this.safeSymbol(void 0,t),status:this.parseMarginStatus(this.safeString(e,"code"))}}async setMarginMode(e,t=undefined,i={}){this.checkRequiredSymbol("setMarginMode",t),await this.loadMarkets();const s=this.market(t);if(!s.swap||"USDT"===s.settle)throw new r.BadSymbol(this.id+" setMarginMode() supports swap (non USDT based) contracts only");if("isolated"!==(e=e.toLowerCase())&&"cross"!==e)throw new r.BadRequest(this.id+" setMarginMode() marginMode argument should be isolated or cross");let a=this.safeInteger(i,"leverage");if("cross"===e&&(a=0),void 0===a)throw new r.ArgumentsRequired(this.id+" setMarginMode() requires a leverage parameter");const n={symbol:s.id,leverage:a};return await this.privatePutPositionsLeverage(this.extend(n,i))}async setPositionMode(e,t=undefined,i={}){this.checkRequiredArgument("setPositionMode",t,"symbol");const s=this.market(t);if("USDT"!==s.settle)throw new r.BadSymbol(this.id+" setPositionMode() supports USDT settled markets only");const a={symbol:s.id};return a.targetPosMode=e?"Hedged":"OneWay",await this.privatePutGPositionsSwitchPosModeSync(this.extend(a,i))}async fetchLeverageTiers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetCfgV2Products(t),s=this.safeValue(i,"data",{}),r=this.safeValue(s,"riskLimits");return this.parseLeverageTiers(r,e,"symbol")}parseMarketLeverageTiers(e,t=undefined){const i=(t=this.safeMarket(void 0,t)).info.riskLimits,s=[];let r=0;for(let e=0;e<i.length;e++){const a=i[e],n=this.safeInteger(a,"limit");s.push({tier:this.sum(e,1),currency:t.settle,minNotional:r,maxNotional:n,maintenanceMarginRate:this.safeString(a,"maintenanceMargin"),maxLeverage:void 0,info:a}),r=n}return s}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.omit(s,this.extractParams(e)),d="/"+this.implodeParams(e,s);let c=d,h="";if("GET"!==i&&"DELETE"!==i&&"PUT"!==i&&"/positions/assign"!==c||Object.keys(n).length&&(h=this.urlencodeWithArrayRepeat(n),c+="?"+h),"private"===t){this.checkRequiredCredentials();const e=this.seconds(),t=this.safeInteger(this.options,"x-phemex-request-expiry",60),n=this.sum(e,t).toString();r={"x-phemex-access-token":this.apiKey,"x-phemex-request-expiry":n};let c="";"POST"===i&&(c=this.json(s),a=c,r["Content-Type"]="application/json");const u=d+h+n+c;r["x-phemex-request-signature"]=this.hmac(this.encode(u),this.encode(this.secret),o.J)}return c=this.implodeHostname(this.urls.api[t])+c,{url:c,method:i,body:a,headers:r}}async setLeverage(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>100)throw new r.BadRequest(this.id+" setLeverage() leverage should be between 1 and 100");await this.loadMarkets();const s=this.market(t),a={symbol:s.id};let n="privatePutPositionsLeverage";return"USDT"===s.settle?(n="privatePutGPositionsLeverage",a.leverageRr=e):a.leverage=e,await this[n](this.extend(a,i))}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c=this.toEv(t,a);let h,u;if("spot"===o&&"future"===d?h=2:"future"===o&&"spot"===d&&(h=1),void 0!==h){const e={currency:a.id,moveOp:h,amountEv:c},t=await this.privatePostAssetsTransfer(this.extend(e,r)),i=this.safeValue(t,"data",{});u=this.parseTransfer(i,a)}else{const e={fromUserId:o,toUserId:d,amountEv:c,currency:a.id,bizType:this.safeString(r,"bizType","SPOT")},t=await this.privatePostAssetsUniversalTransfer(this.extend(e,r));u=this.parseTransfer(t)}const l=this.safeValue(this.options,"transfer",{});return this.safeValue(l,"fillResponseFromRequest",!0)&&(void 0===u.fromAccount&&(u.fromAccount=i),void 0===u.toAccount&&(u.toAccount=s),void 0===u.amount&&(u.amount=t),void 0===u.currency&&(u.currency=e)),u}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){if(await this.loadMarkets(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchTransfers() requires a code argument");const a=this.currency(e),n={currency:a.id};void 0!==t&&(n.start=t),void 0!==i&&(n.limit=i);const o=await this.privateGetAssetsTransfer(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"rows",[]);return this.parseTransfers(c,a,t,i)}parseTransfer(e,t=undefined){const i=this.safeString(e,"linkKey"),s=this.safeString(e,"status"),r=this.safeString(e,"amountEv"),a=this.fromEv(r,t),n=this.safeString(e,"currency"),o=this.safeCurrencyCode(n,t),d=this.safeInteger(e,"side");let c,h;1===d?(c="swap",h="spot"):2===d&&(c="spot",h="swap");const u=this.safeInteger(e,"createTime");return{info:e,id:i,timestamp:u,datetime:this.iso8601(u),currency:o,amount:a,fromAccount:c,toAccount:h,status:this.parseTransferStatus(s)}}parseTransferStatus(e){return this.safeString({3:"rejected",6:"canceled",10:"ok",11:"failed"},e,e)}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeValue(o,"error",o),u=this.safeString(h,"code"),l=this.safeString(h,"msg");if(void 0!==u&&"0"!==u){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,u,e),this.throwBroadlyMatchedException(this.exceptions.broad,l,e),new r.ExchangeError(e)}}}},8891:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2735),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"poloniex",name:"Poloniex",countries:["US"],rateLimit:5,certified:!1,pro:!1,has:{CORS:void 0,spot:!0,margin:void 0,swap:void 0,future:void 0,option:void 0,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createOrder:!0,editOrder:!0,fetchBalance:!0,fetchClosedOrder:!1,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!0,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"MINUTE_1","5m":"MINUTE_5","10m":"MINUTE_10","15m":"MINUTE_15","30m":"MINUTE_30","1h":"HOUR_1","2h":"HOUR_2","4h":"HOUR_4","6h":"HOUR_6","12h":"HOUR_12","1d":"DAY_1","3d":"DAY_3","1w":"WEEK_1","1M":"MONTH_1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg",api:{rest:"https://api.poloniex.com"},test:{rest:"https://sand-spot-api-gateway.poloniex.com"},www:"https://www.poloniex.com",doc:"https://docs.poloniex.com",fees:"https://poloniex.com/fees",referral:"https://poloniex.com/signup?c=UBFZJRPJ"},api:{public:{get:{markets:20,"markets/{symbol}":1,currencies:20,"currencies/{currency}":20,timestamp:1,"markets/price":1,"markets/{symbol}/price":1,"markets/{symbol}/orderBook":1,"markets/{symbol}/candles":1,"markets/{symbol}/trades":20,"markets/ticker24h":20,"markets/{symbol}/ticker24h":20}},private:{get:{accounts:4,"accounts/activity":4,"accounts/balances":4,"accounts/{id}/balances":4,"accounts/transfer":20,"accounts/transfer/{id}":4,subaccounts:4,"subaccounts/balances":20,"subaccounts/{id}/balances":4,"subaccounts/transfer":20,"subaccounts/transfer/{id}":4,feeinfo:20,"wallets/addresses":20,"wallets/activity":20,"wallets/addresses/{currency}":20,orders:20,"orders/{id}":4,"orders/history":20,"orders/killSwitchStatus":4,smartorders:20,"smartorders/{id}":4,"smartorders/history":20,trades:20,"orders/{id}/trades":4},post:{"accounts/transfer":4,"subaccounts/transfer":20,"wallets/address":20,"wallets/withdraw":20,orders:4,"orders/killSwitch":4,"orders/batch":20,smartorders:4},delete:{"orders/{id}":4,"orders/cancelByIds":20,orders:20,"smartorders/{id}":4,"smartorders/cancelByIds":20,smartorders:20},put:{"orders/{id}":4,"smartorders/{id}":4}}},fees:{trading:{feeSide:"get",maker:this.parseNumber("0.0009"),taker:this.parseNumber("0.0009")},funding:{}},commonCurrencies:{AIR:"AirCoin",APH:"AphroditeCoin",BCC:"BTCtalkcoin",BCHABC:"BCHABC",BDG:"Badgercoin",BTM:"Bitmark",CON:"Coino",GOLD:"GoldEagles",GPUC:"GPU",HOT:"Hotcoin",ITC:"Information Coin",KEY:"KEYCoin",MASK:"NFTX Hashmasks Index",MEME:"Degenerator Meme",PLX:"ParallaxCoin",REPV2:"REP",STR:"XLM",SOC:"SOCC",TRADE:"Unitrade",XAP:"API Coin",USDTTRON:"USDT",USDTETH:"USDT",UST:"USTC"},options:{networks:{BEP20:"BSC",ERC20:"ETH",TRC20:"TRON"},networksById:{BSC:"BEP20",ETH:"ERC20",TRON:"TRC20"},limits:{cost:{min:{BTC:1e-4,ETH:1e-4,USDT:1,TRX:100,BNB:.06,USDC:1,USDJ:1,TUSD:1e-4,DAI:1,PAX:1,BUSD:1}}},accountsByType:{spot:"spot",future:"futures"},accountsById:{exchange:"spot",futures:"future"}},precisionMode:n.sh,exceptions:{exact:{"You may only place orders that reduce your position.":r.InvalidOrder,"Invalid order number, or you are not the person who placed the order.":r.OrderNotFound,"Permission denied":r.PermissionDenied,"Permission denied.":r.PermissionDenied,"Connection timed out. Please try again.":r.RequestTimeout,"Internal error. Please try again.":r.ExchangeNotAvailable,"Currently in maintenance mode.":r.OnMaintenance,"Order not found, or you are not the person who placed it.":r.OrderNotFound,"Invalid API key/secret pair.":r.AuthenticationError,"Please do not make more than 8 API calls per second.":r.RateLimitExceeded,"This IP has been temporarily throttled. Please ensure your requests are valid and try again in one minute.":r.RateLimitExceeded,"Rate must be greater than zero.":r.InvalidOrder,"Invalid currency pair.":r.BadSymbol,"Invalid currencyPair parameter.":r.BadSymbol,"Trading is disabled in this market.":r.BadSymbol,"Invalid orderNumber parameter.":r.OrderNotFound,"Order is beyond acceptable bounds.":r.InvalidOrder,"This account is closed.":r.AccountSuspended},broad:{"Total must be at least":r.InvalidOrder,"This account is frozen":r.AccountSuspended,"This account is locked.":r.AccountSuspended,"Not enough":r.InsufficientFunds,"Nonce must be greater":r.InvalidNonce,"You have already called cancelOrder":r.CancelPending,"Amount must be at least":r.InvalidOrder,"is either completed or does not exist":r.OrderNotFound,"Error pulling ":r.ExchangeError}}})}parseOHLCV(e,t=undefined){return[this.safeInteger(e,12),this.safeNumber(e,2),this.safeNumber(e,1),this.safeNumber(e,0),this.safeNumber(e,3),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,interval:this.safeString(this.timeframes,t,t)};void 0!==i&&(n.startTime=i),void 0!==s&&(n.limit=s);const o=await this.publicGetMarketsSymbolCandles(this.extend(n,r));return this.parseOHLCVs(o,a,t,i,s)}async loadMarkets(e=!1,t={}){const i=await super.loadMarkets(e,t);return(void 0===this.safeValue(this.options,"currenciesByNumericId")||e)&&(this.options.currenciesByNumericId=this.indexBy(this.currencies,"numericId")),i}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),i=[];for(let e=0;e<t.length;e++){const s=this.safeValue(t,e),r=this.safeString(s,"symbol"),a=this.safeString(s,"baseCurrencyName"),n=this.safeString(s,"quoteCurrencyName"),o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c="NORMAL"===this.safeString(s,"state"),h=this.safeValue(s,"symbolTradeLimit");i.push({id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:a,quoteId:n,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:c,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(h,"quantityScale"))),price:this.parseNumber(this.parsePrecision(this.safeString(h,"priceScale")))},limits:{amount:{min:this.safeNumber(h,"minQuantity"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(h,"minAmount"),max:void 0}},info:s})}return i}async fetchTime(e={}){const t=await this.publicGetTimestamp(e);return this.safeInteger(t,"serverTime")}parseTicker(e,t=undefined){const i=this.safeInteger(e,"ts"),s=this.safeString(e,"symbol");t=this.safeMarket(s);const r=this.safeString(e,"close"),n=this.safeString(e,"percentChange"),o=a.O.stringMul(n,"100");return this.safeTicker({id:s,symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:r,last:r,previousClose:void 0,change:void 0,percentage:o,average:void 0,baseVolume:this.safeString(e,"quantity"),quoteVolume:this.safeString(e,"amount"),info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetMarketsTicker24h(t);return this.parseTickers(i,e)}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),i={};for(let e=0;e<t.length;e++){const s=this.safeValue(t,e),r=Object.keys(s),a=this.safeValue(r,0),n=this.safeValue(s,a),o=this.safeCurrencyCode(a),d=this.safeValue(n,"delisted"),c=this.safeString(n,"walletState"),h=!d&&"ENABLED"===c,u=this.safeInteger(n,"id"),l=this.safeNumber(n,"withdrawalFee");i[o]={id:a,numericId:u,code:o,info:n,name:n.name,active:h,deposit:void 0,withdraw:void 0,fee:l,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:l,max:void 0}}}}return i}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetMarketsSymbolTicker24h(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){const i=this.safeString2(e,"id","tradeID"),s=this.safeString(e,"orderId"),r=this.safeInteger2(e,"ts","createTime"),a=this.safeString(e,"symbol"),n=(t=this.safeMarket(a,t,"_")).symbol,o=this.safeStringLower(e,"side");let d;const c=this.safeString(e,"price"),h=this.safeString(e,"quantity"),u=this.safeString(e,"amount"),l=this.safeString(e,"feeCurrency"),p=this.safeString(e,"feeAmount");return void 0!==p&&(d={cost:p,currency:this.safeCurrencyCode(l)}),this.safeTrade({id:i,info:e,timestamp:r,datetime:this.iso8601(r),symbol:n,order:s,type:this.safeStringLower(e,"type"),side:o,takerOrMaker:this.safeStringLower(e,"matchRole"),price:c,amount:h,cost:u,fee:d},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetMarketsSymbolTrades(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e));const a={};void 0!==t&&(a.startTime=t),void 0!==i&&(a.limit=parseInt(i));const n=await this.privateGetTrades(this.extend(a,s)),o=this.parseTrades(n,r);return this.filterBySinceLimit(o,t,i)}parseOrderStatus(e){return this.safeString({NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",PENDING_CANCEL:"canceled",PARTIALLY_CANCELED:"canceled",CANCELED:"canceled",FAILED:"canceled"},e,e)}parseOrder(e,t=undefined){let i=this.safeInteger2(e,"timestamp","createTime");void 0===i&&(i=this.parse8601(this.safeString(e,"date")));const s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t,"_")).symbol;let a=this.safeValue(e,"resultingTrades");Array.isArray(a)||(a=this.safeValue(a,this.safeString(t,"id",s)));const n=this.safeString2(e,"price","rate"),o=this.safeString(e,"quantity"),d=this.safeString(e,"filledQuantity"),c=this.parseOrderStatus(this.safeString(e,"state")),h=this.safeStringLower(e,"side"),u=this.safeString(e,"type"),l=this.parseOrderType(u),p=this.safeString2(e,"orderNumber","id");let f;const m=this.safeString(e,"tokenFeeCurrency");let v,g;const y=this.safeString(e,"fee");void 0===m?g="buy"===h?t.base:t.quote:(g=this.safeCurrencyCode(m),v=this.safeString(e,"tokenFee")),void 0!==v&&(f={rate:y,cost:v,currency:g});const b=this.safeString(e,"clientOrderId");return this.safeOrder({info:e,id:p,clientOrderId:b,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:this.safeInteger(e,"updateTime"),status:c,symbol:r,type:l,timeInForce:this.safeString(e,"timeInForce"),postOnly:void 0,side:h,price:n,stopPrice:void 0,triggerPrice:void 0,cost:void 0,average:this.safeString(e,"avgPrice"),amount:o,filled:d,remaining:void 0,trades:a,fee:f},t)}parseOrderType(e){return this.safeString({MARKET:"market",LIMIT:"limit","STOP-LIMIT":"limit","STOP-MARKET":"market"},e,e)}parseOpenOrders(e,t,i){for(let s=0;s<e.length;s++){const r=e[s],a=this.extend(r,{status:"open",type:"limit",side:r.type,price:r.rate});i.push(this.parseOrder(a,t))}return i}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.symbol=r.id),void 0!==i&&(a.limit=i);const n=await this.privateGetOrders(this.extend(a,s));return this.parseOrders(n,r,t,i,{status:"open"})}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e);if(!o.spot)throw new r.NotSupported(this.id+" createOrder() does not support "+o.type+" orders, only spot orders are accepted");const d={symbol:o.id,side:i},c=this.orderRequest(e,t,i,s,d,a,n);let h=await this.privatePostOrders(this.extend(c[0],c[1]));return h=this.extend(h,{type:i}),this.parseOrder(h,o)}orderRequest(e,t,i,s,r,a=undefined,n={}){const o=this.market(e);let d=t.toUpperCase();const c="MARKET"===d;this.isPostOnly(c,"LIMIT_MAKER"===d,n)&&(d="LIMIT_MAKER",n=this.omit(n,"postOnly")),r.type=d,c?"buy"===i?r.amount=this.currencyToPrecision(o.quote,s):r.quantity=this.amountToPrecision(e,s):(r.quantity=this.amountToPrecision(e,s),r.price=this.priceToPrecision(e,a));const h=this.safeString(n,"clientOrderId");return void 0!==h&&(r.clientOrderId=h,n=this.omit(n,"clientOrderId")),[r,n]}async editOrder(e,t,i,s,a,n=undefined,o={}){await this.loadMarkets();const d=this.market(t);if(!d.spot)throw new r.NotSupported(this.id+" editOrder() does not support "+d.type+" orders, only spot orders are accepted");const c={id:e},h=this.orderRequest(t,i,s,a,c,n,o);let u=await this.privatePutOrdersId(this.extend(h[0],h[1]));return u=this.extend(u,{type:s}),this.parseOrder(u,d)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={},r=this.safeValue(i,"clientOrderId");return void 0!==r&&(e=r),s.id=e,i=this.omit(i,"clientOrderId"),await this.privateDeleteOrdersId(this.extend(s,i))}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s;return void 0!==e&&(s=this.market(e),i.symbols=[s.id]),await this.privateDeleteOrders(this.extend(i,t))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={id:e=e.toString()},r=await this.privateGetOrdersId(this.extend(s,i));return this.extend(this.parseOrder(r),{id:e})}async fetchOrderStatus(e,t=undefined,i={}){await this.loadMarkets();const s=await this.fetchOpenOrders(t,void 0,void 0,i);return e in this.indexBy(s,"id")?"open":"closed"}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={id:e},n=await this.privateGetOrdersIdTrades(this.extend(a,r));return this.parseTrades(n)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){const s=this.safeValue(e,i,{}),r=this.safeValue(s,"balances");for(let e=0;e<r.length;e++){const i=this.safeValue(r,e),s=this.safeString(i,"currency"),a=this.safeCurrencyCode(s),n=this.account();n.free=this.safeString(i,"available"),n.used=this.safeString(i,"hold"),t[a]=n}}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccountsBalances(this.extend({accountType:"SPOT"},e));return this.parseBalance(t)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.privateGetFeeinfo(e),i={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e];i[s]={info:t,symbol:s,maker:this.safeNumber(t,"makerRate"),taker:this.safeNumber(t,"takerRate"),percentage:!0,tierBased:!0}}return i}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id};void 0!==t&&(r.limit=t);const a=await this.publicGetMarketsSymbolOrderBook(this.extend(r,i)),n=this.safeInteger(a,"time"),o=this.safeValue(a,"asks"),d=this.safeValue(a,"bids"),c=[],h=[];for(let e=0;e<o.length;e++)if(e%2<1){const t=this.safeNumber(o,e),i=this.safeNumber(o,this.sum(e,1));c.push([t,i])}for(let e=0;e<d.length;e++)if(e%2<1){const t=this.safeNumber(d,e),i=this.safeNumber(d,this.sum(e,1));h.push([t,i])}return{symbol:s.symbol,bids:this.sortBy(h,0,!0),asks:this.sortBy(c,0),timestamp:n,datetime:this.iso8601(n),nonce:void 0}}async createDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},a=this.safeValue(this.options,"networks",{});let n=this.safeStringUpper(t,"network");if(n=this.safeString(a,n,n),void 0!==n)s.currency+=n,t=this.omit(t,"network");else if("USDT"===i.id)throw new r.ArgumentsRequired(this.id+" createDepositAddress requires a network parameter for "+e+".");const o=await this.privatePostWalletsAddress(this.extend(s,t));let d,c=this.safeString(o,"address");if(this.checkAddress(c),void 0!==i){const e=this.safeString(i.info,"depositAddress");void 0!==e&&(d=c,c=e)}return{currency:e,address:c,tag:d,network:n,info:o}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},a=this.safeValue(this.options,"networks",{});let n=this.safeStringUpper(t,"network");if(n=this.safeString(a,n,n),void 0!==n)s.currency+=n,t=this.omit(t,"network");else if("USDT"===i.id)throw new r.ArgumentsRequired(this.id+" fetchDepositAddress requires a network parameter for "+e+".");const o=await this.privateGetWalletsAddresses(this.extend(s,t));let d,c=this.safeString(o,s.currency);if(this.checkAddress(c),void 0!==i){const e=this.safeString(i.info,"depositAddress");void 0!==e&&(d=c,c=e)}return{currency:e,address:c,tag:d,network:n,info:o}}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e);t=this.currencyToPrecision(e,t);const n=this.safeValue(this.options,"accountsByType",{}),o=this.safeString(n,i,i),d=this.safeString(n,s,i),c={amount:t,currency:a.id,fromAccount:o,toAccount:d},h=await this.privatePostAccountsTransfer(this.extend(c,r));return this.parseTransfer(h,a)}parseTransferStatus(e){return this.safeString({1:"ok"},e,e)}parseTransfer(e,t=undefined){const i=this.safeString(e,"message").split(" "),s=this.safeNumber(i,1),r=this.safeString(i,2),a=this.safeString(i,4),n=this.safeString(i,6),o=this.safeValue(this.options,"accountsById",{});return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(r,t),amount:s,fromAccount:this.safeString(o,a),toAccount:this.safeString(o,n),status:this.parseOrderStatus(this.safeString(e,"success","failed"))}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={currency:a.id,amount:t,address:i};void 0!==s&&(n.paymentId=s);const o=this.safeValue(this.options,"networks",{});let d=this.safeStringUpper(r,"network");d=this.safeString(o,d,d),void 0!==d&&(n.currency+=d,r=this.omit(r,"network"));const c=await this.privatePostWalletsWithdraw(this.extend(n,r));return this.parseTransaction(c,a)}async fetchTransactionsHelper(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.seconds(),a={start:void 0!==t?parseInt((t/1e3).toString()):r-31104e4,end:r};return await this.privateGetWalletsActivity(this.extend(a,s))}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.fetchTransactionsHelper(e,t,i,s);let a;void 0!==e&&(a=this.currency(e));const n=this.safeValue(r,"withdrawals",[]),o=this.safeValue(r,"deposits",[]),d=this.parseTransactions(n,a,t,i),c=this.parseTransactions(o,a,t,i),h=this.arrayConcat(c,d);return this.filterByCurrencySinceLimit(this.sortBy(h,"timestamp"),e,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){const r=await this.fetchTransactionsHelper(e,t,i,s);let a;void 0!==e&&(a=this.currency(e));const n=this.safeValue(r,"withdrawals",[]),o=this.parseTransactions(n,a,t,i);return this.filterByCurrencySinceLimit(o,e,t,i)}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetCurrencies(this.extend(t,{includeMultiChainCurrencies:!0})),s={};for(let e=0;e<i.length;e++){const t=i[e],r=Object.keys(t),a=this.safeString(r,0);s[a]=t[a]}return this.parseDepositWithdrawFees(s,e)}parseDepositWithdrawFees(e,t=undefined,i=undefined){const s={};t=this.marketCodes(t);const r=Object.keys(e);for(let i=0;i<r.length;i++){const a=r[i],n=this.safeCurrencyCode(a),o=e[a];if(void 0===t||this.inArray(n,t)){s[n]=this.parseDepositWithdrawFee(o,n);const t=this.safeValue(o,"childChains");if(t.length>0)for(let i=0;i<t.length;i++){let r=t[i];r=r.replace(n,"");const a=this.networkIdToCode(r),o=this.safeValue(e,r),d={},c=this.safeNumber(o,"withdrawalFee");d[a]={withdraw:{fee:c,percentage:void 0===c&&void 0},deposit:{fee:void 0,percentage:void 0}},s[n].networks=this.extend(s[n].networks,d)}}}return s}parseDepositWithdrawFee(e,t=undefined){const i=this.depositWithdrawFee({});i.info[t]=e;const s=this.safeString(e,"blockchain"),r=this.safeNumber(e,"withdrawalFee"),a={fee:r,percentage:void 0===r&&void 0},n={fee:void 0,percentage:void 0};i.withdraw=a,i.deposit=n;const o=this.networkIdToCode(s);return i.networks[o]={withdraw:a,deposit:n},i}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){const r=await this.fetchTransactionsHelper(e,t,i,s);let a;void 0!==e&&(a=this.currency(e));const n=this.safeValue(r,"deposits",[]),o=this.parseTransactions(n,a,t,i);return this.filterByCurrencySinceLimit(o,e,t,i)}parseTransactionStatus(e){return this.safeString({COMPLETE:"ok",COMPLETED:"ok","AWAITING APPROVAL":"pending",AWAITING_APPROVAL:"pending",PENDING:"pending",PROCESSING:"pending","COMPLETE ERROR":"failed",COMPLETE_ERROR:"failed"},e,e)}parseTransaction(e,t=undefined){const i=this.safeTimestamp(e,"timestamp"),s=this.safeString(e,"currency"),r=this.safeCurrencyCode(s);let n=this.safeString(e,"status","pending");n=this.parseTransactionStatus(n);const o=this.safeString(e,"txid"),d="withdrawalRequestsId"in e?"withdrawal":"deposit",c=this.safeString2(e,"withdrawalRequestsId","depositNumber"),h=this.safeString(e,"address"),u=this.safeString(e,"paymentID");let l=this.safeString(e,"amount");const p=this.safeString(e,"fee");return"withdrawal"===d&&(l=a.O.stringSub(l,p)),{info:e,id:c,currency:r,amount:this.parseNumber(l),network:void 0,address:h,addressTo:void 0,addressFrom:void 0,tag:u,tagTo:void 0,tagFrom:void 0,status:n,type:d,updated:void 0,txid:o,timestamp:i,datetime:this.iso8601(i),fee:{currency:r,cost:this.parseNumber(p)}}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest;const d=this.omit(s,this.extractParams(e)),c=this.implodeParams(e,s);if("public"===t)n+="/"+c,Object.keys(d).length&&(n+="?"+this.urlencode(d));else{this.checkRequiredCredentials();const e=this.nonce().toString();let t=i+"\n";if(n+="/"+c,t+="/"+c,"POST"===i||"PUT"===i||"DELETE"===i)t+="\n",Object.keys(d).length&&(t+="requestBody="+(a=this.json(d))+"&"),t+="signTimestamp="+e;else{let i=this.extend({signTimestamp:e},d);i=this.keysort(i),t+="\n"+this.urlencode(i),Object.keys(d).length&&(n+="?"+this.urlencode(d))}const s=this.hmac(this.encode(t),this.encode(this.secret),o.J,"base64");r={"Content-Type":"application/json",key:this.apiKey,signTimestamp:e,signature:s}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"error"in o){const e=o.error,t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r.ExchangeError(t)}}}},6877:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(2194),r=i(3480),a=i(9292),n=i(6689),o=i(1372);class d extends r.Z{describe(){return this.deepExtend(super.describe(),{id:"poloniexfutures",name:"Poloniex Futures",countries:["US"],rateLimit:33.3,certified:!1,pro:!1,version:"v1",has:{CORS:void 0,spot:!1,margin:!0,swap:!0,future:!1,option:void 0,createOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchCurrencies:!1,fetchFundingRate:!0,fetchL3OrderBook:!0,fetchMarkets:!0,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrdersByStatus:!0,fetchPositions:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,setMarginMode:!0},timeframes:{"1m":1,"5m":5,"15m":15,"30m":30,"1h":60,"2h":120,"4h":480,"12h":720,"1d":1440,"1w":10080},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766817-e9456312-5ee6-11e7-9b3c-b628ca5626a5.jpg",api:{public:"https://futures-api.poloniex.com",private:"https://futures-api.poloniex.com"},www:"https://www.poloniex.com",doc:"https://futures-docs.poloniex.com",fees:"https://poloniex.com/fee-schedule",referral:"https://poloniex.com/signup?c=UBFZJRPJ"},api:{public:{get:{"contracts/active":10,"contracts/{symbol}":10,ticker:10,tickers:10,"level2/snapshot":180.002,"level2/depth":180.002,"level2/message/query":180.002,"level3/snapshot":180.002,"trade/history":10,"interest/query":10,"index/query":10,"mark-price/{symbol}/current":10,"premium/query":10,"funding-rate/{symbol}/current":10,timestamp:10,status:10,"kline/query":10},post:{"bullet-public":10}},private:{get:{"account-overview":1,"transaction-history":1,orders:1,stopOrders:1,recentDoneOrders:1,"orders/{order-id}":1,fills:1,openOrderStatistics:1,position:1.5,positions:1.5,"funding-history":1,"marginType/query":1},post:{orders:1.5,batchOrders:1.5,"position/margin/auto-deposit-status":1.5,"position/margin/deposit-margin":1.5,"bullet-private":1,"marginType/change":1},delete:{"orders/{order-id}":1.5,orders:150.016,stopOrders:150.016}}},precisionMode:a.sh,fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.00075"),maker:this.parseNumber("0.0001")},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},commonCurrencies:{},requiredCredentials:{apiKey:!0,secret:!0,password:!0},options:{networks:{OMNI:"omni",ERC20:"eth",TRC20:"trx"},versions:{public:{GET:{ticker:"v2",tickers:"v2","level3/snapshot":"v2"}}}},exceptions:{exact:{400:n.BadRequest,401:n.AuthenticationError,403:n.NotSupported,404:n.NotSupported,405:n.NotSupported,415:n.BadRequest,429:n.RateLimitExceeded,500:n.ExchangeNotAvailable,503:n.ExchangeNotAvailable,400001:n.AuthenticationError,400002:n.InvalidNonce,400003:n.AuthenticationError,400004:n.AuthenticationError,400005:n.AuthenticationError,400006:n.AuthenticationError,400007:n.AuthenticationError,404e3:n.NotSupported,400100:n.BadRequest,411100:n.AccountSuspended,5e5:n.ExchangeNotAvailable},broad:{"Position does not exist":n.OrderNotFound}}})}async fetchMarkets(e={}){const t=await this.publicGetContractsActive(e),i=[],r=this.safeValue(t,"data",[]),a=r.length;for(let e=0;e<a;e++){const t=r[e],a=this.safeString(t,"symbol"),n=this.safeString(t,"baseCurrency"),o=this.safeString(t,"quoteCurrency"),d=this.safeString(t,"rootSymbol"),c=this.safeCurrencyCode(n),h=this.safeCurrencyCode(o),u=this.safeCurrencyCode(d),l=c+"/"+h+":"+u,p=this.safeValue(t,"isInverse"),f=this.safeString(t,"status"),m=this.safeString(t,"multiplier"),v=this.safeNumber(t,"indexPriceTickSize"),g=this.safeNumber(t,"lotSize"),y=this.safeNumber(t,"maxOrderQty"),b=this.safeNumber(t,"maxPrice");i.push({id:a,symbol:l,base:c,quote:h,settle:u,baseId:n,quoteId:o,settleId:d,type:"swap",spot:!1,margin:!1,swap:!0,future:!1,option:!1,active:"Open"===f,contract:!0,linear:!p,inverse:p,taker:this.safeNumber(t,"takerFeeRate"),maker:this.safeNumber(t,"makerFeeRate"),contractSize:this.parseNumber(s.O.stringAbs(m)),expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:g,price:v},limits:{leverage:{min:this.parseNumber("1"),max:this.safeNumber(t,"maxLeverage")},amount:{min:g,max:y},price:{min:v,max:b},cost:{min:void 0,max:void 0}},info:t})}return i}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeIntegerProduct(e,"ts",1e-6),a=this.safeString(e,"price");return this.safeTicker({symbol:s,timestamp:r,datetime:this.iso8601(r),high:void 0,low:void 0,bid:this.safeString(e,"bestBidPrice"),bidVolume:this.safeString(e,"bestBidSize"),ask:this.safeString(e,"bestAskPrice"),askVolume:this.safeString(e,"bestAskSize"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"size"),quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetTicker(this.extend(s,t));return this.parseTicker(this.safeValue(r,"data",{}),i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTickers(t);return this.parseTickers(this.safeValue(i,"data",[]),e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.safeNumber(i,"level");if(i=this.omit(i,"level"),void 0!==s&&2!==s&&3!==s)throw new n.BadRequest(this.id+" fetchOrderBook() can only return level 2 & 3");const r=this.market(e),a={symbol:r.id};let o;o=3===s?await this.publicGetLevel3Snapshot(this.extend(a,i)):await this.publicGetLevel2Snapshot(this.extend(a,i));const d=this.safeValue(o,"data",{}),c=this.safeIntegerProduct(d,"ts",1e-6);let h;return h=3===s?this.parseOrderBook(d,r.symbol,c,"bids","asks",1,2):this.parseOrderBook(d,r.symbol,c,"bids","asks",0,1),h.nonce=this.safeInteger(d,"sequence"),h}async fetchL3OrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);return this.fetchOrderBook(s.id,void 0,{level:3})}parseTrade(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t,"-");const s=this.safeString(e,"tradeId"),r=this.safeString(e,"orderId"),a=this.safeString(e,"liquidity");let n=this.safeInteger(e,"ts");void 0!==n?n=this.parseToInt(n/1e6):(n=this.safeInteger(e,"createdAt"),"dealValue"in e&&void 0!==n&&(n*=1e3));const o=this.safeString(e,"price"),d=this.safeString(e,"size"),c=this.safeString(e,"side");let h;const u=this.safeString(e,"fee");if(void 0!==u){const i=this.safeString(e,"feeCurrency");let s=this.safeCurrencyCode(i);void 0===s&&(s="sell"===c?t.quote:t.base),h={cost:u,currency:s,rate:this.safeString(e,"feeRate")}}let l=this.safeString(e,"orderType");"match"===l&&(l=void 0);const p=this.safeString(e,"value");return this.safeTrade({info:e,id:s,order:r,timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:l,takerOrMaker:a,side:c,price:o,amount:d,cost:p,fee:h},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id},n=await this.publicGetTradeHistory(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTime(e={}){const t=await this.publicGetTimestamp(e);return this.safeInteger(t,"data")}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=a.id,o=this.safeInteger(this.timeframes,t),d={symbol:n};d.granularity=void 0!==o?o:t;const c=1e3*this.parseTimeframe(t);let h=this.milliseconds();void 0!==i?(d.from=i,void 0===s&&(s=this.safeInteger(this.options,"fetchOHLCVLimit",200)),h=this.sum(i,s*c),d.to=h):void 0!==s&&(i=h-s*c,d.from=i);const u=await this.publicGetKlineQuery(this.extend(d,r)),l=this.safeValue(u,"data",[]);return this.parseOHLCVs(l,a,t,i,s)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data"),s=this.safeString(i,"currency"),r=this.safeCurrencyCode(s),a=this.account();return a.free=this.safeString(i,"availableBalance"),a.total=this.safeString(i,"accountEquity"),t[r]=a,this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"currency");let i={};void 0!==t&&(i={currency:this.currency(t).id});const s=await this.privateGetAccountOverview(this.extend(i,e));return this.parseBalance(s)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const o=this.market(e),d=this.safeString2(a,"clientOid","clientOrderId",this.uuid());if(a=this.omit(a,["clientOid","clientOrderId"]),s<1)throw new n.InvalidOrder(this.id+" createOrder() minimum contract order amount is 1");const c=parseInt(this.amountToPrecision(e,s)),h={clientOid:d,side:i,symbol:o.id,type:t,size:c,leverage:1},u=this.safeValue2(a,"triggerPrice","stopPrice");if(u){h.stop="buy"===i?"up":"down";const t=this.safeString(a,"stopPriceType","TP");h.stopPriceType=t,h.stopPrice=this.priceToPrecision(e,u)}const l=this.safeStringUpper(a,"timeInForce");if("limit"===t){if(void 0===r)throw new n.ArgumentsRequired(this.id+" createOrder() requires a price argument for limit orders");h.price=this.priceToPrecision(e,r),void 0!==l&&(h.timeInForce=l)}const p=this.safeValue(a,"postOnly",!1),f=this.safeValue(a,"hidden");if(p&&void 0!==f)throw new n.BadRequest(this.id+" createOrder() does not support the postOnly parameter together with a hidden parameter");if(this.safeValue(a,"iceberg")&&void 0===this.safeValue(a,"visibleSize"))throw new n.ArgumentsRequired(this.id+" createOrder() requires a visibleSize parameter for iceberg orders");a=this.omit(a,["timeInForce","stopPrice","triggerPrice"]);const m=await this.privatePostOrders(this.extend(h,a)),v=this.safeValue(m,"data",{});return{id:this.safeString(v,"orderId"),clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0,timeInForce:void 0,postOnly:void 0,stopPrice:void 0,info:m}}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={"order-id":e},r=await this.privateDeleteOrdersOrderId(this.extend(s,i)),a=this.safeValue(r,"data");if(0===this.safeValue(a,"cancelledOrderIds").length)throw new n.InvalidOrder(this.id+" cancelOrder() order already cancelled");return this.parseOrder(a)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetPositions(t),s=this.safeValue(i,"data");return this.parsePositions(s,e)}parsePosition(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const r=this.safeInteger(e,"currentTimestamp"),a=this.safeString(e,"currentQty");let n;s.O.stringGt(a,"0")?n="long":s.O.stringLt(a,"0")&&(n="short");const o=s.O.stringAbs(this.safeString(e,"posCost")),d=this.safeString(e,"posInit"),c=s.O.stringDiv(d,o),h=this.safeString(e,"unrealisedPnl"),u=this.safeValue(e,"crossMode")?"cross":"isolated";return{info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:r,datetime:this.iso8601(r),initialMargin:this.parseNumber(d),initialMarginPercentage:this.parseNumber(c),maintenanceMargin:this.safeNumber(e,"posMaint"),maintenanceMarginPercentage:this.safeNumber(e,"maintMarginReq"),entryPrice:this.safeNumber(e,"avgEntryPrice"),notional:this.parseNumber(o),leverage:this.safeNumber(e,"realLeverage"),unrealizedPnl:this.parseNumber(h),contracts:this.parseNumber(s.O.stringAbs(a)),contractSize:this.safeValue(t,"contractSize"),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"liquidationPrice"),markPrice:this.safeNumber(e,"markPrice"),collateral:this.safeNumber(e,"maintMargin"),marginMode:u,side:n,percentage:this.parseNumber(s.O.stringDiv(h,d))}}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new n.ArgumentsRequired(this.id+" fetchFundingHistory() requires a symbol argument");await this.loadMarkets();const r={symbol:this.market(e).id};void 0!==t&&(r.startAt=t),void 0!==i&&(r.maxCount=i);const a=await this.privateGetFundingHistory(this.extend(r,s)),o=this.safeValue(a,"data"),d=this.safeValue(o,"dataList",[]),c=d.length,h=[];for(let t=0;t<c;t++){const i=d[t],s=this.safeInteger(i,"timePoint");h.push({info:i,symbol:e,code:this.safeCurrencyCode(this.safeString(i,"settleCurrency")),timestamp:s,datetime:this.iso8601(s),id:this.safeNumber(i,"id"),amount:this.safeNumber(i,"funding"),fundingRate:this.safeNumber(i,"fundingRate"),markPrice:this.safeNumber(i,"markPrice"),positionQty:this.safeNumber(i,"positionQty"),positionCost:this.safeNumber(i,"positionCost")})}return h}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};void 0!==e&&(i.symbol=this.marketId(e));const s=this.safeValue(t,"stop")?"privateDeleteStopOrders":"privateDeleteOrders",r=await this[s](this.extend(i,t)),a=this.safeValue(r,"data"),n=[],o=this.safeValue(a,"cancelledOrderIds"),d=o.length;for(let e=0;e<d;e++){const t=this.safeString(o,e);n.push({id:t,clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:void 0,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0,timeInForce:void 0,postOnly:void 0,stopPrice:void 0,info:r})}return n}async fetchOrdersByStatus(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.safeValue(r,"stop"),o=this.safeInteger2(r,"until","till");r=this.omit(r,["stop","until","till"]),"closed"===e&&(e="done");const d={};if(a){if("open"!==e)throw new n.BadRequest(this.id+" fetchOrdersByStatus() can only fetch untriggered stop orders")}else d.status="open"===e?"active":"done";let c;void 0!==t&&(c=this.market(t),d.symbol=c.id),void 0!==i&&(d.startAt=i),void 0!==o&&(d.endAt=o);const h=a?"privateGetStopOrders":"privateGetOrders",u=await this[h](this.extend(d,r)),l=this.safeValue(u,"data",{}),p=this.safeValue(l,"items",[]),f=p.length,m=[];for(let t=0;t<f;t++){const i=p[t];e===this.safeString(i,"status")&&m.push(p[t])}return this.parseOrders(m,c,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("open",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByStatus("closed",e,t,i,s)}async fetchOrder(e=undefined,t=undefined,i={}){await this.loadMarkets();const s={};let r="privateGetOrdersOrderId";if(void 0===e){const e=this.safeString2(i,"clientOid","clientOrderId");if(void 0===e)throw new n.InvalidOrder(this.id+" fetchOrder() requires parameter id or params.clientOid");s.clientOid=e,r="privateGetOrdersByClientOid",i=this.omit(i,["clientOid","clientOrderId"])}else s["order-id"]=e;const a=await this[r](this.extend(s,i)),o=void 0!==t?this.market(t):void 0,d=this.safeValue(a,"data");return this.parseOrder(d,o)}parseOrder(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const r=this.safeInteger(e,"createdAt"),a=this.safeString(e,"feeCurrency"),n=this.safeString(e,"dealSize"),o=this.safeString2(e,"dealFunds","filledValue");let d;if(s.O.stringGt(n,"0")){const e=this.safeString(t,"contractSize");d=t.linear?s.O.stringDiv(o,s.O.stringMul(e,n)):s.O.stringDiv(s.O.stringMul(e,n),o)}const c=this.safeValue(e,"isActive",!1),h=this.safeValue(e,"cancelExist",!1),u=c?"open":"closed";let l=this.safeString(e,"id");if("cancelledOrderIds"in e){const t=this.safeValue(e,"cancelledOrderIds");l=this.safeString(t,0)}return this.safeOrder({info:e,id:l,clientOrderId:this.safeString(e,"clientOid"),symbol:this.safeString(t,"symbol"),type:this.safeString(e,"type"),timeInForce:this.safeString(e,"timeInForce"),postOnly:this.safeValue(e,"postOnly"),side:this.safeString(e,"side"),amount:this.safeString(e,"size"),price:this.safeString(e,"price"),stopPrice:this.safeString(e,"stopPrice"),cost:this.safeString(e,"dealValue"),filled:n,remaining:void 0,timestamp:r,datetime:this.iso8601(r),fee:{currency:this.safeCurrencyCode(a),cost:this.safeString(e,"fee")},status:h?"canceled":u,lastTradeTimestamp:void 0,average:d,trades:void 0},t)}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetFundingRateSymbolCurrent(this.extend(s,t)),a=this.safeValue(r,"data"),n=this.safeInteger(a,"timePoint");return{info:a,symbol:i.symbol,markPrice:void 0,indexPrice:void 0,interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:this.safeNumber(a,"predictedValue"),fundingTimestamp:void 0,fundingDatetime:void 0,nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:this.safeNumber(a,"value"),previousFundingTimestamp:n,previousFundingDatetime:this.iso8601(n)}}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.startAt=t);const n=await this.privateGetFills(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"items",{});return this.parseTrades(d,a,t,i)}async setMarginMode(e,t,i={}){if(void 0===t)throw new n.ArgumentsRequired(this.id+" setMarginMode() requires a symbol argument");if(0!==e&&1!==e)throw new n.ArgumentsRequired(this.id+" setMarginMode() marginMode must be 0 (isolated) or 1 (cross)");await this.loadMarkets();const s={symbol:this.market(t).id,marginType:e};return await this.privatePostMarginTypeChange(s)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t];const d=this.safeValue(this.options,"versions",{}),c=this.safeValue(d,t,{}),h=this.safeValue(c,i,{}),u=this.safeString(h,e,this.version);n+="/api/"+this.safeString(s,"version",u)+"/"+this.implodeParams(e,s);const l=this.omit(s,e),p=Object.keys(l).length;if("public"===t)p&&(n+="?"+this.urlencode(l));else{this.checkRequiredCredentials();let t="/api/v1/"+this.implodeParams(e,s);const d=this.urlencode(l);"GET"!==i&&"HEAD"!==i?a=l:p&&""!==d&&(n+="?"+d,t+="?"+d);const c=this.milliseconds().toString();let h="";void 0!==a&&(h=a=this.json(l));const u=c+i+t+h;(r={"PF-API-SIGN":this.hmac(this.encode(u),this.encode(this.secret),o.J,"base64"),"PF-API-TIMESTAMP":c,"PF-API-KEY":this.apiKey,"PF-API-PASSPHRASE":this.password})["Content-Type"]="application/json"}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,d){if(!n)return void this.throwBroadlyMatchedException(this.exceptions.broad,a,a);const c=this.safeString(n,"code"),h=this.safeString(n,"msg",""),u=this.id+" "+h;this.throwExactlyMatchedException(this.exceptions.exact,h,u),this.throwExactlyMatchedException(this.exceptions.exact,c,u),this.throwBroadlyMatchedException(this.exceptions.broad,a,u)}}},2467:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(5660),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchPosition:!1},urls:{api:{ws:{crypto:"wss://stream.data.alpaca.markets/v1beta2/crypto",trading:"wss://api.alpaca.markets/stream"}},test:{ws:{crypto:"wss://stream.data.alpaca.markets/v1beta2/crypto",trading:"wss://paper-api.alpaca.markets/stream"}}},options:{},streaming:{},exceptions:{ws:{exact:{}}}})}async watchTicker(e,t={}){const i=this.urls.api.ws.crypto;await this.authenticate(i),await this.loadMarkets();const s=this.market(e),r="ticker:"+s.symbol,a={action:"subscribe",quotes:[s.id]};return await this.watch(i,r,this.extend(a,t),r)}handleTicker(e,t){const i=this.parseTicker(t),s=i.symbol,r="ticker:"+s;this.tickers[s]=i,e.resolve(this.tickers[s],r)}parseTicker(e,t=undefined){const i=this.safeString(e,"S"),s=this.safeString(e,"t");return this.safeTicker({symbol:this.safeSymbol(i,t),timestamp:this.parse8601(s),datetime:s,high:void 0,low:void 0,bid:this.safeString(e,"bp"),bidVolume:this.safeString(e,"bs"),ask:this.safeString(e,"ap"),askVolume:this.safeString(e,"as"),vwap:void 0,open:void 0,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){const a=this.urls.api.ws.crypto;await this.authenticate(a),await this.loadMarkets();const n=this.market(e);e=n.symbol;const o={action:"subscribe",bars:[n.id]},d="ohlcv:"+e,c=await this.watch(a,d,this.extend(o,r),d);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"S"),s=this.safeSymbol(i);let r=this.safeValue(this.ohlcvs,s);if(void 0===r){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);r=new a.Py(e),this.ohlcvs[s]=r}const n=this.parseOHLCV(t);r.append(n);const o="ohlcv:"+s;e.resolve(r,o)}async watchOrderBook(e,t=undefined,i={}){const s=this.urls.api.ws.crypto;await this.authenticate(s),await this.loadMarkets();const r=this.market(e),a="orderbook:"+(e=r.symbol),n={action:"subscribe",orderbooks:[r.id]};return(await this.watch(s,a,this.extend(n,i),a)).limit()}handleOrderBook(e,t){const i=this.safeString(t,"S"),s=this.safeSymbol(i),r=this.safeString(t,"t"),a=this.parse8601(r),n=this.safeValue(t,"r",!1);let o=this.safeValue(this.orderbooks,s);if(void 0===o&&(o=this.orderBook()),n){const e=this.parseOrderBook(t,s,a,"b","a","p","s");o.reset(e)}else{const e=this.safeValue(t,"a",[]),i=this.safeValue(t,"b",[]);this.handleDeltas(o.asks,e),this.handleDeltas(o.bids,i),o.timestamp=a,o.datetime=r}const d="orderbook:"+s;this.orderbooks[s]=o,e.resolve(o,d)}handleDelta(e,t){const i=this.parseBidAsk(t,"p","s");e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t=undefined,i=undefined,s={}){const r=this.urls.api.ws.crypto;await this.authenticate(r),await this.loadMarkets();const a=this.market(e),n="trade:"+(e=a.symbol),o={action:"subscribe",trades:[a.id]},d=await this.watch(r,n,this.extend(o,s),n);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeString(t,"S"),s=this.safeSymbol(i);let r=this.safeValue(this.trades,s);if(void 0===r){const e=this.safeInteger(this.options,"tradesLimit",1e3);r=new a.ZL(e),this.trades[s]=r}const n=this.parseTrade(t);r.append(n);const o="trade:"+s;e.resolve(r,o)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){const r=this.urls.api.ws.trading;await this.authenticate(r);let a="myTrades";await this.loadMarkets(),void 0!==e&&(a+=":"+(e=this.symbol(e)));const n=await this.watch(r,a,this.extend({action:"listen",data:{streams:["trade_updates"]}},s),a);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){const r=this.urls.api.ws.trading;await this.authenticate(r),await this.loadMarkets();let a="orders";void 0!==e&&(a="orders:"+(e=this.market(e).symbol));const n=await this.watch(r,a,this.extend({action:"listen",data:{streams:["trade_updates"]}},s),a);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleTradeUpdate(e,t){this.handleOrder(e,t),this.handleMyTrade(e,t)}handleOrder(e,t){const i=this.safeValue(t,"data",{}),s=this.safeValue(i,"order",{});if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const r=this.orders,n=this.parseOrder(s);r.append(n);let o="orders";e.resolve(r,o),o="orders:"+n.symbol,e.resolve(r,o)}handleMyTrade(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(i,"event");if("fill"!==s&&"partial_fill"!==s)return;const r=this.safeValue(i,"order",{});let n=this.myTrades;if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new a.hl(e)}const o=this.parseMyTrade(r);n.append(o);let d="myTrades:"+o.symbol;e.resolve(n,d),d="myTrades",e.resolve(n,d)}parseMyTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeString(e,"filled_at");let r=this.safeString(e,"type");return r.indexOf("limit")>=0&&(r="limit"),this.safeTrade({id:this.safeString(e,"i"),info:e,timestamp:this.parse8601(s),datetime:s,symbol:this.safeSymbol(i,void 0,"/"),order:this.safeString(e,"id"),type:r,side:this.safeString(e,"side"),takerOrMaker:"market"===r?"taker":"maker",price:this.safeString(e,"filled_avg_price"),amount:this.safeString(e,"filled_qty"),cost:void 0,fee:void 0},t)}async authenticate(e,t={}){this.checkRequiredCredentials();const i="authenticated",s=this.client(e);let r=this.safeValue(s.subscriptions,i);if(void 0===r){r=s.future("authenticated");let t={action:"auth",key:this.apiKey,secret:this.secret};e===this.urls.api.ws.trading&&(t={action:"authenticate",data:{key_id:this.apiKey,secret_key:this.secret}}),this.spawn(this.watch,e,i,t,i,r)}return await r}handleErrorMessage(e,t){const i=this.safeString(t,"code"),s=this.safeValue(t,"msg",{});throw new r.ExchangeError(this.id+" code: "+i+" message: "+s)}handleConnected(e,t){return t}handleCryptoMessage(e,t){for(let i=0;i<t.length;i++){const s=t[i],r=this.safeString(s,"T"),a=this.safeValue(s,"msg",{});if("subscription"===r)return this.handleSubscription(e,s);if("success"===r&&"connected"===a)return this.handleConnected(e,s);if("success"===r&&"authenticated"===a)return this.handleAuthenticate(e,s);const n={error:this.handleErrorMessage,b:this.handleOHLCV,q:this.handleTicker,t:this.handleTrades,o:this.handleOrderBook},o=this.safeValue(n,r);void 0!==o&&o.call(this,e,s)}}handleTradingMessage(e,t){const i=this.safeString(t,"stream"),s={authorization:this.handleAuthenticate,listening:this.handleSubscription,trade_updates:this.handleTradeUpdate},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}handleMessage(e,t){if(Array.isArray(t))return this.handleCryptoMessage(e,t);this.handleTradingMessage(e,t)}handleAuthenticate(e,t){const i=this.safeString(t,"T"),s=this.safeValue(t,"data",{}),a=this.safeString(s,"status");if("success"!==i&&"authorized"!==a)throw new r.AuthenticationError(this.id+" failed to authenticate.");e.resolve(t,"authenticated")}handleSubscription(e,t){return t}}},2383:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(9612),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!1,watchTrades:!0},urls:{api:{ws:{public:"wss://ascendex.com:443/api/pro/v2/stream",private:"wss://ascendex.com:443/{accountGroup}/api/pro/v2/stream"}},test:{ws:{public:"wss://api-test.ascendex-sandbox.com:443/api/pro/v2/stream",private:"wss://api-test.ascendex-sandbox.com:443/{accountGroup}/api/pro/v2/stream"}}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,categoriesAccount:{cash:"spot",futures:"swap",margin:"margin"}}})}async watchPublic(e,t={}){const i=this.urls.api.ws.public,s={id:this.nonce().toString(),op:"sub"},r=this.extend(s,t);return await this.watch(i,e,r,e)}async watchPrivate(e,t,i={}){await this.loadAccounts();const s=this.safeString(this.options,"account-group");let r=this.urls.api.ws.private;r=this.implodeParams(r,{accountGroup:s});const a={id:this.nonce().toString(),op:"sub",ch:e},n=this.extend(a,i);return await this.authenticate(r,i),await this.watch(r,t,n,e)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol,(void 0===s||s>1440)&&(s=100);const n="bar:"+this.safeString(this.timeframes,t,t)+":"+a.id;r={ch:n};const o=await this.watchPublic(n,r);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"s"),s=this.safeSymbol(i),r=this.safeString(t,"m"),n=this.safeValue(t,"data",{}),o=this.safeString(n,"i"),d=r+":"+o+":"+i,c=this.findTimeframe(o),h=this.market(s),u=this.parseOHLCV(t,h);this.ohlcvs[s]=this.safeValue(this.ohlcvs,s,{});let l=this.safeValue(this.ohlcvs[s],c);if(void 0===l){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new a.Py(e),this.ohlcvs[s][c]=l}return l.append(u),e.resolve(l,d),t}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="trades:"+r.id;s=this.extend(s,{ch:a});const n=await this.watchPublic(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeString(t,"m")+":"+i,n=this.market(s);let o=this.safeValue(t,"data");void 0===o&&(o=[]);const d=this.parseTrades(o,n);let c=this.safeValue(this.trades,s);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new a.ZL(e)}for(let e=0;e<d.length;e++)c.append(d[e]);this.trades[s]=c,e.resolve(c,r)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s="depth-realtime:"+this.market(e).id;return i=this.extend(i,{ch:s}),(await this.watchPublic(s,i)).limit()}async watchOrderBookSnapshot(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r="depth-snapshot-realtime",a=r+":"+s.id;return i=this.extend(i,{action:r,args:{symbol:s.id},op:"req"}),(await this.watchPublic(a,i)).limit()}handleOrderBookSnapshot(e,t){const i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeString(t,"m")+":"+s,a=this.orderbooks[s],n=this.safeValue(t,"data"),o=this.parseOrderBook(n,s);o.nonce=this.safeInteger(n,"seqnum"),a.reset(o);const d=a.cache;for(let t=0;t<d.length;t++){const i=d[t];this.handleOrderBookMessage(e,i,a)}this.orderbooks[s]=a,e.resolve(a,r)}handleOrderBook(e,t){const i=this.safeString(t,"m"),s=this.safeString(t,"symbol"),r=this.safeSymbol(s),a=i+":"+s;let n=this.safeValue(this.orderbooks,r);void 0===n&&(n=this.orderBook({})),void 0===n.nonce?n.cache.push(t):(this.handleOrderBookMessage(e,t,n),e.resolve(n,a))}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){const s=this.safeValue(t,"data",{}),r=this.safeInteger(s,"seqnum");if(r>i.nonce){const e=this.safeValue(s,"asks",[]),t=this.safeValue(s,"bids",[]);this.handleDeltas(i.asks,e),this.handleDeltas(i.bids,t),i.nonce=r;const a=this.safeInteger(s,"ts");i.timestamp=a,i.datetime=this.iso8601(a)}return i}async watchBalance(e={}){await this.loadMarkets();const[t,i]=this.handleMarketTypeAndParams("watchBalance",void 0,e);let s,r;if("spot"===t||"margin"===t){const e=this.safeValue(this.options,"accountCategories",{});let i=this.safeString(e,t,"cash");i=i.toUpperCase(),s="order:"+i,r="balance:"+t}else s="futures-account-update",r="balance:swap";return await this.watchPrivate(s,r,i)}handleBalance(e,t){const i=this.safeString(t,"m");let s,r;if("order"===i||"futures-order"===i){const e=this.safeValue(t,"data"),i=this.safeString(e,"s"),a=this.safeMarket(i),n=this.account();n.free=this.safeString(e,"bab"),n.total=this.safeString(e,"btb");const o=this.account();o.free=this.safeString(e,"qab"),o.total=this.safeString(e,"qtb"),a.contract?(r="swap",s=this.safeValue(this.balance,r,{})):(r=a.type,s=this.safeValue(this.balance,r,{})),s[a.base]=n,s[a.quote]=o}else{const e=this.safeStringLower2(t,"ac","at"),i=this.safeValue(this.options,"categoriesAccount");r=this.safeString(i,e,"spot"),s=this.safeValue(this.balance,r,{});const a=this.safeValue(t,"data");let n;n=void 0===a?this.safeValue(t,"col"):[a];for(let e=0;e<n.length;e++){const t=n[e],i=this.safeCurrencyCode(this.safeString(t,"a")),r=this.account();r.free=this.safeString(t,"ab"),r.total=this.safeString2(t,"tb","b"),s[i]=r}}const a="balance:"+r;e.resolve(this.safeBalance(s),a)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e),e=r.symbol);const[a,n]=this.handleMarketTypeAndParams("watchOrders",r,s);let o,d;if("spot"!==a&&"margin"!==a)d="futures-order",o="order:FUTURES";else{const e=this.safeValue(this.options,"accountCategories",{});let t=this.safeString(e,a,"cash");t=t.toUpperCase(),o="order:"+t,d=o}void 0!==e&&(o=o+":"+e);const c=await this.watchPrivate(d,o,n);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleOrder(e,t){const i="order:"+this.safeString(t,"ac"),s=this.safeValue(t,"data",t),r=this.parseWsOrder(s);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const n=this.orders;n.append(r);const o=i+":"+r.symbol;e.resolve(n,o),e.resolve(n,i)}parseWsOrder(e,t=undefined){const i=this.parseOrderStatus(this.safeString(e,"st")),s=this.safeString(e,"s"),r=this.safeInteger(e,"t"),a=this.safeSymbol(s,t,"/"),n=this.safeInteger(e,"t"),o=this.safeString(e,"p"),d=this.safeString(e,"q"),c=this.safeString(e,"ap"),h=this.safeString(e,"cfq"),u=this.safeString(e,"orderId"),l=this.safeStringLower(e,"ot"),p=this.safeStringLower(e,"sd"),f=this.safeNumber(e,"cf");let m;if(void 0!==f){const t=this.safeString(e,"fa");m={cost:f,currency:this.safeCurrencyCode(t)}}const v=this.parseNumber(this.omitZero(this.safeString(e,"sp")));return this.safeOrder({info:e,id:u,clientOrderId:void 0,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:n,symbol:a,type:l,timeInForce:void 0,postOnly:void 0,side:p,price:o,stopPrice:v,triggerPrice:v,amount:d,cost:void 0,average:c,filled:h,remaining:void 0,status:i,fee:m,trades:void 0},t)}handleErrorMessage(e,t){const i=this.safeInteger(t,"code");try{if(void 0!==i){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);const s=this.safeValue(t,"message");void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}return!1}catch(t){if(t instanceof r.AuthenticationError){const i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleAuthenticate(e,t){e.resolve(t,"authenticated")}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;const i=this.safeString(t,"m"),s={ping:this.handlePing,auth:this.handleAuthenticate,sub:this.handleSubscriptionStatus,"depth-realtime":this.handleOrderBook,"depth-snapshot-realtime":this.handleOrderBookSnapshot,trades:this.handleTrades,bar:this.handleOHLCV,balance:this.handleBalance,"futures-account-update":this.handleBalance},r=this.safeValue(s,i);return void 0!==r&&r.call(this,e,t),"order"!==i&&"futures-order"!==i||(this.handleOrder(e,t),"order"===i&&this.handleBalance(e,t)),t}handleSubscriptionStatus(e,t){return this.safeString(t,"ch","").indexOf("depth-realtime")>-1&&this.handleOrderBookSubscription(e,t),t}handleOrderBookSubscription(e,t){const i=this.safeString(t,"ch").split(":")[1],s=this.safeSymbol(i);s in this.orderbooks&&delete this.orderbooks[s],this.orderbooks[s]=this.orderBook({}),this.spawn(this.watchOrderBookSnapshot,s)}async pong(e,t){try{await e.send({op:"pong",hp:this.safeInteger(t,"hp")})}catch(t){const i=new r.NetworkError(this.id+" handlePing failed with error "+this.json(t));e.reset(i)}}handlePing(e,t){this.spawn(this.pong,e,t)}authenticate(e,t={}){this.checkRequiredCredentials();const i="authenticated",s=this.client(e);let r=this.safeValue(s.subscriptions,i);if(void 0===r){const a=this.milliseconds().toString(),o=e.split("/"),d=o.length,c=this.safeString(o,d-1),h=a+"+"+this.safeString(o,d-2)+"/"+c,u=this.base64ToBinary(this.secret),l=this.hmac(this.encode(h),u,n.J,"base64"),p={op:"auth",id:this.nonce().toString(),t:a,key:this.apiKey,sig:l};r=this.watch(e,i,this.extend(p,t)),s.subscriptions[i]=r}return r}}},8848:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(5189);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bequant",name:"Bequant",countries:["MT"],pro:!0,urls:{logo:"https://user-images.githubusercontent.com/1294454/55248342-a75dfe00-525a-11e9-8aa2-05e9dca943c6.jpg",api:{public:"https://api.bequant.io",private:"https://api.bequant.io"},www:"https://bequant.io",doc:["https://api.bequant.io/"],fees:["https://bequant.io/fees-and-limits"],referral:"https://bequant.io"}})}}},8764:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(9987),r=i(2194),a=i(6689),n=i(3020);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0},urls:{test:{ws:{spot:"wss://testnet.binance.vision/ws",margin:"wss://testnet.binance.vision/ws",future:"wss://stream.binancefuture.com/ws",delivery:"wss://dstream.binancefuture.com/ws"}},api:{ws:{spot:"wss://stream.binance.com:9443/ws",margin:"wss://stream.binance.com:9443/ws",future:"wss://fstream.binance.com/ws",delivery:"wss://dstream.binance.com/ws"}}},streaming:{keepAlive:18e4},options:{streamLimits:{spot:50,margin:50,future:50,delivery:50},streamBySubscriptionsHash:{},streamIndex:-1,watchOrderBookRate:100,tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,requestId:{},watchOrderBookLimit:1e3,watchTrades:{name:"trade"},watchTicker:{name:"ticker"},watchTickers:{name:"ticker"},watchOHLCV:{name:"kline"},watchBalance:{fetchBalanceSnapshot:!1,awaitBalanceSnapshot:!0},wallet:"wb",listenKeyRefreshRate:12e5,ws:{cost:5}}})}requestId(e){const t=this.safeValue(this.options,"requestId",{}),i=this.safeInteger(t,e,0),s=this.sum(i,1);return this.options.requestId[e]=s,s}stream(e,t){const i=this.safeValue(this.options,"streamBySubscriptionsHash",{});let s=this.safeString(i,t);if(void 0===s){let i=this.safeInteger(this.options,"streamIndex",-1);const r=this.safeValue(this.options,"streamLimits");i+=1;const a=i%this.safeInteger(r,e);this.options.streamIndex=i,s=this.numberToString(a),this.options.streamBySubscriptionsHash[t]=s}return s}async watchOrderBook(e,t=undefined,i={}){if(void 0!==t&&5!==t&&10!==t&&20!==t&&50!==t&&100!==t&&500!==t&&1e3!==t)throw new a.ExchangeError(this.id+" watchOrderBook limit argument must be undefined, 5, 10, 20, 50, 100, 500 or 1000");await this.loadMarkets();const s=this.market(e);let r=s.type;s.contract&&(r=s.linear?"future":"delivery");const n="depth",o=s.lowercaseId+"@"+n,d=this.urls.api.ws[r]+"/"+this.stream(r,o),c=this.requestId(d),h={method:"SUBSCRIBE",params:[o+"@"+this.safeString(this.options,"watchOrderBookRate","100")+"ms"],id:c},u={id:c.toString(),messageHash:o,name:n,symbol:s.symbol,method:this.handleOrderBookSubscription,limit:t,type:r,params:i},l=this.extend(h,i);return(await this.watch(d,o,l,o,u)).limit()}async fetchOrderBookSnapshot(e,t,i){const s=this.safeString(i,"messageHash"),r=this.safeString(i,"symbol");try{const t=this.safeInteger(this.options,"watchOrderBookLimit",1e3),a=this.safeValue(i,"type"),n=this.safeInteger(i,"limit",t),o=this.safeValue(i,"params"),d=await this.fetchOrderBook(r,n,o),c=this.safeValue(this.orderbooks,r);if(void 0===c)return;c.reset(d);const h=c.cache;for(let t=0;t<h.length;t++){const i=h[t],s=this.safeInteger(i,"U"),r=this.safeInteger(i,"u"),n=this.safeInteger(i,"pu");if("future"===a){if(r<c.nonce)continue;(s<=c.nonce&&r>=c.nonce||n===c.nonce)&&this.handleOrderBookMessage(e,i,c)}else{if(r<=c.nonce)continue;s-1<=c.nonce&&r-1>=c.nonce&&this.handleOrderBookMessage(e,i,c)}}this.orderbooks[r]=c,e.resolve(c,s)}catch(t){delete e.subscriptions[s],e.reject(t,s)}}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){const s=this.safeInteger(t,"u");this.handleDeltas(i.asks,this.safeValue(t,"a",[])),this.handleDeltas(i.bids,this.safeValue(t,"b",[])),i.nonce=s;const r=this.safeInteger(t,"E");return i.timestamp=r,i.datetime=this.iso8601(r),i}handleOrderBook(e,t){const i=e.url.indexOf("/stream")>=0?"spot":"contract",s=this.safeString(t,"s"),r=this.safeMarket(s,void 0,void 0,i),n=r.symbol,o=r.lowercaseId+"@depth",d=this.safeValue(this.orderbooks,n);if(void 0===d)return;const c=this.safeInteger(d,"nonce");if(void 0===c)d.cache.push(t);else try{const i=this.safeInteger(t,"U"),s=this.safeInteger(t,"u"),r=this.safeInteger(t,"pu");if(void 0===r){if(s>d.nonce){let r;if(r=void 0===this.safeInteger(d,"timestamp")?i-1<=d.nonce&&s-1>=d.nonce:i-1===d.nonce,!r)throw new a.ExchangeError(this.id+" handleOrderBook received an out-of-order nonce");this.handleOrderBookMessage(e,t,d),c<d.nonce&&e.resolve(d,o)}}else if(s>=d.nonce){if(!(i<=d.nonce||r===d.nonce))throw new a.ExchangeError(this.id+" handleOrderBook received an out-of-order nonce");this.handleOrderBookMessage(e,t,d),c<=d.nonce&&e.resolve(d,o)}}catch(t){delete this.orderbooks[n],delete e.subscriptions[o],e.reject(t,o)}}handleOrderBookSubscription(e,t,i){const s=this.safeInteger(this.options,"watchOrderBookLimit",1e3),r=this.safeString(i,"symbol"),a=this.safeInteger(i,"limit",s);r in this.orderbooks&&delete this.orderbooks[r],this.orderbooks[r]=this.orderBook({},a),this.spawn(this.fetchOrderBookSnapshot,e,t,i)}handleSubscriptionStatus(e,t){const i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i,{}),a=this.safeValue(r,"method");return void 0!==a&&a.call(this,e,t,r),t}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a=this.safeValue(this.options,"watchTrades",{}),n=this.safeString(a,"name","trade"),o=r.lowercaseId+"@"+n;let d=r.type;r.contract&&(d=r.linear?"future":"delivery");const c=this.omit(s,"type"),h=this.urls.api.ws[d]+"/"+this.stream(d,o),u=this.requestId(h),l={method:"SUBSCRIBE",params:[o],id:u},p={id:u},f=await this.watch(h,o,this.extend(l,c),o,p);return this.newUpdates&&(i=f.getLimit(r.symbol,i)),this.filterBySinceLimit(f,t,i,"timestamp",!0)}parseTrade(e,t=undefined){const i="TRADE"===this.safeString(e,"x");if(!i)return super.parseTrade(e,t);const s=this.safeString2(e,"t","a"),a=this.safeInteger(e,"T"),n=this.safeString2(e,"L","p");let o=this.safeString(e,"q");i&&(o=this.safeString(e,"l",o));let d=this.safeString(e,"Y");void 0===d&&void 0!==n&&void 0!==o&&(d=r.O.stringMul(n,o));const c=this.safeString(e,"s"),h="ps"in e?"contract":"spot",u=this.safeSymbol(c,void 0,void 0,h);let l,p=this.safeStringLower(e,"S");const f=this.safeString(e,"i");let m;"m"in e&&(void 0===p&&(p=e.m?"sell":"buy"),l=e.m?"maker":"taker");const v=this.safeString(e,"n");if(void 0!==v){const t=this.safeString(e,"N");m={cost:v,currency:this.safeCurrencyCode(t)}}const g=this.safeStringLower(e,"o");return this.safeTrade({info:e,timestamp:a,datetime:this.iso8601(a),symbol:u,id:s,order:f,type:g,takerOrMaker:l,side:p,price:n,amount:o,cost:d,fee:m})}handleTrade(e,t){const i=e.url.indexOf("/stream")>=0?"spot":"contract",s=this.safeString(t,"s"),r=this.safeMarket(s,void 0,void 0,i),a=r.symbol,o=this.safeStringLower(t,"s")+"@"+this.safeString(t,"e"),d=this.parseTrade(t,r);let c=this.safeValue(this.trades,a);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new n.ZL(e)}c.append(d),this.trades[a]=c,e.resolve(c,o)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);let n=a.lowercaseId;const o=this.safeString(this.timeframes,t,t),d=this.safeValue(this.options,"watchOHLCV",{}),c=this.safeString(d,"name","kline"),h=this.safeString(r,"name",c);"indexPriceKline"===h&&(n=n.replace("_perp","")),r=this.omit(r,"name");const u=n+"@"+h+"_"+o;let l=a.type;a.contract&&(l=a.linear?"future":"delivery");const p=this.urls.api.ws[l]+"/"+this.stream(l,u),f=this.requestId(p),m={method:"SUBSCRIBE",params:[u],id:f},v={id:f},g=await this.watch(p,u,this.extend(m,r),u,v);return this.newUpdates&&(s=g.getLimit(e,s)),this.filterBySinceLimit(g,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"e");i=this.safeString({indexPrice_kline:"indexPriceKline",markPrice_kline:"markPriceKline"},i,i);const s=this.safeValue(t,"k");let r=this.safeString2(s,"s","ps");"indexPriceKline"===i&&(r=this.safeString(t,"ps"));const a=r.toLowerCase(),o=this.safeString(s,"i"),d=this.findTimeframe(o),c=a+"@"+i+"_"+o,h=[this.safeInteger(s,"t"),this.safeFloat(s,"o"),this.safeFloat(s,"h"),this.safeFloat(s,"l"),this.safeFloat(s,"c"),this.safeFloat(s,"v")],u=e.url.indexOf("/stream")>=0?"spot":"contract",l=this.safeSymbol(r,void 0,void 0,u);this.ohlcvs[l]=this.safeValue(this.ohlcvs,l,{});let p=this.safeValue(this.ohlcvs[l],d);if(void 0===p){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);p=new n.Py(e),this.ohlcvs[l][d]=p}p.append(h),e.resolve(p,c)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s=i.lowercaseId;let r=i.type;i.contract&&(r=i.linear?"future":"delivery");const a=this.safeValue(this.options,"watchTicker",{});let n=this.safeString(a,"name","ticker");n=this.safeString(t,"name",n),t=this.omit(t,"name");const o=s+"@"+n,d=this.urls.api.ws[r]+"/"+this.stream(r,o),c=this.requestId(d),h={method:"SUBSCRIBE",params:[o],id:c},u={id:c};return await this.watch(d,o,this.extend(h,t),o,u)}async watchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.marketIds(e);let s,r,n;[r,t]=this.handleMarketTypeAndParams("watchTickers",s,t),void 0!==i&&(s=this.safeMarket(i[0],void 0,void 0,r)),[n,t]=this.handleSubTypeAndParams("watchTickers",s,t),this.isLinear(r,n)?r="future":this.isInverse(r,n)&&(r="delivery");const o=this.safeValue(this.options,"watchTickers",{});let d=this.safeString(o,"name","ticker");d=this.safeString(t,"name",d);const c=t;t=this.omit(t,"name");let h=[];const u="!"+d+"@arr";if("bookTicker"===d){if(void 0===i)throw new a.ArgumentsRequired(this.id+" watchTickers() requires symbols for bookTicker");for(let e=0;e<i.length;e++)h.push(i[e].toLowerCase()+"@bookTicker")}else h=[u];const l=this.urls.api.ws[r]+"/"+this.stream(r,u),p=this.requestId(l),f={method:"SUBSCRIBE",params:h,id:p},m={id:p},v=await this.watch(l,u,this.extend(f,t),u,m),g={};for(let t=0;t<v.length;t++){const i=v[t],s=i.symbol;(void 0===e||this.inArray(s,e))&&(g[s]=i)}return Object.keys(g).length>0?this.newUpdates?g:this.filterByArray(this.tickers,"symbol",e):await this.watchTickers(e,c)}parseWsTicker(e,t){let i,s=this.safeString(e,"e","bookTicker");"24hrTicker"===s&&(s="ticker");const r=this.milliseconds();i="bookTicker"===s?this.safeInteger(e,"E",r):this.safeInteger(e,"C",r);const a=this.safeString(e,"s"),n=this.safeSymbol(a,void 0,void 0,t),o=this.safeFloat(e,"c");return{symbol:n,timestamp:i,datetime:this.iso8601(i),high:this.safeFloat(e,"h"),low:this.safeFloat(e,"l"),bid:this.safeFloat(e,"b"),bidVolume:this.safeFloat(e,"B"),ask:this.safeFloat(e,"a"),askVolume:this.safeFloat(e,"A"),vwap:this.safeFloat(e,"w"),open:this.safeFloat(e,"o"),close:o,last:o,previousClose:this.safeFloat(e,"x"),change:this.safeFloat(e,"p"),percentage:this.safeFloat(e,"P"),average:void 0,baseVolume:this.safeFloat(e,"v"),quoteVolume:this.safeFloat(e,"q"),info:e}}handleTicker(e,t){let i=this.safeString(t,"e","bookTicker");"24hrTicker"===i?i="ticker":"24hrMiniTicker"===i&&(i="miniTicker");const s=this.safeStringLower(t,"s")+"@"+i,r=e.url.indexOf("/stream")>=0?"spot":"contract",a=this.parseWsTicker(t,r),n=a.symbol;this.tickers[n]=a,e.resolve(a,s),"bookTicker"===i&&e.resolve([a],"!bookTicker@arr")}handleTickers(e,t){let i;const s=e.url.indexOf("/stream")>=0?"spot":"contract";for(let r=0;r<t.length;r++){const a=t[r];i=this.safeString(a,"e"),"24hrTicker"===i?i="ticker":"24hrMiniTicker"===i&&(i="miniTicker");const n=this.safeStringLower(a,"s")+"@"+i,o=this.parseWsTicker(a,s),d=o.symbol;this.tickers[d]=o,e.resolve(o,n)}const r=Object.values(this.tickers);e.resolve(r,"!"+i+"@arr")}async authenticate(e={}){const t=this.milliseconds();let i,s,r=this.safeString2(this.options,"defaultType","authenticate","spot");r=this.safeString(e,"type",r),[i,e]=this.handleSubTypeAndParams("authenticate",void 0,e),this.isLinear(r,i)?r="future":this.isInverse(r,i)&&(r="delivery"),[s,e]=this.handleMarginModeAndParams("authenticate",e);const n="isolated"===s,o="cross"===s||void 0===s,d=this.safeString(e,"symbol");e=this.omit(e,"symbol");const c=this.safeValue(this.options,r,{}),h=this.safeInteger(c,"lastAuthenticatedTime",0),u=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);if(t-h>this.sum(u,1e4)){let i="publicPostUserDataStream";if("future"===r)i="fapiPrivatePostListenKey";else if("delivery"===r)i="dapiPrivatePostListenKey";else if("margin"===r&&o)i="sapiPostUserDataStream";else if(n){if(i="sapiPostUserDataStreamIsolated",void 0===d)throw new a.ArgumentsRequired(this.id+" authenticate() requires a symbol argument for isolated margin mode");const t=this.marketId(d);e.symbol=t}const s=await this[i](e);this.options[r]=this.extend(c,{listenKey:this.safeString(s,"listenKey"),lastAuthenticatedTime:t}),this.delay(u,this.keepAliveListenKey,e)}}async keepAliveListenKey(e={}){let t,i=this.safeString2(this.options,"defaultType","authenticate","spot");i=this.safeString(e,"type",i),[t,e]=this.handleSubTypeAndParams("keepAliveListenKey",void 0,e),this.isLinear(i,t)?i="future":this.isInverse(i,t)&&(i="delivery");const s=this.safeValue(this.options,i,{}),r=this.safeString(s,"listenKey");if(void 0===r)return;let a="publicPutUserDataStream";"future"===i?a="fapiPrivatePutListenKey":"delivery"===i?a="dapiPrivatePutListenKey":"margin"===i&&(a="sapiPutUserDataStream");const n={listenKey:r},o=this.milliseconds(),d=this.omit(e,"type");try{await this[a](this.extend(n,d))}catch(e){const t=this.urls.api.ws[i]+"/"+this.options[i].listenKey,r=this.client(t),a=Object.keys(r.futures);for(let t=0;t<a.length;t++){const i=a[t];r.reject(e,i)}return void(this.options[i]=this.extend(s,{listenKey:void 0,lastAuthenticatedTime:0}))}this.options[i]=this.extend(s,{listenKey:r,lastAuthenticatedTime:o});const c=Object.values(this.clients),h=this.safeInteger(this.options,"listenKeyRefreshRate",12e5);for(let t=0;t<c.length;t++){const s=c[t],r=Object.keys(s.subscriptions);for(let t=0;t<r.length;t++)if(r[t]===i)return this.delay(h,this.keepAliveListenKey,e)}}setBalanceCache(e,t){if(t in e.subscriptions)return;const i=this.safeValue(this.options,"watchBalance");if(this.safeValue(i,"fetchBalanceSnapshot",!1)){const i=t+":fetchBalanceSnapshot";i in e.futures||(e.future(i),this.spawn(this.loadBalanceSnapshot,e,i,t))}else this.balance[t]={}}async loadBalanceSnapshot(e,t,i){const s=await this.fetchBalance({type:i});this.balance[i]=this.extend(s,this.safeValue(this.balance,i,{})),e.futures[t].resolve(),e.resolve(this.balance[i],i+":balance")}async watchBalance(e={}){await this.loadMarkets(),await this.authenticate(e);const t=this.safeString(this.options,"defaultType","spot");let i,s=this.safeString(e,"type",t);[i,e]=this.handleSubTypeAndParams("watchBalance",void 0,e),this.isLinear(s,i)?s="future":this.isInverse(s,i)&&(s="delivery");const r=this.urls.api.ws[s]+"/"+this.options[s].listenKey,a=this.client(r);this.setBalanceCache(a,s);const n=this.safeValue(this.options,"watchBalance"),o=this.safeValue(n,"fetchBalanceSnapshot",!1),d=this.safeValue(n,"awaitBalanceSnapshot",!0);o&&d&&await a.future(s+":fetchBalanceSnapshot");const c=s+":balance";return await this.watch(r,c,void 0,s)}handleBalance(e,t){const i=this.safeValue(this.options,"wallet","wb"),s=Object.keys(e.subscriptions)[0],a=s+":balance";if(this.balance[s].info=t,"balanceUpdate"===this.safeString(t,"e")){const e=this.safeString(t,"a"),i=this.safeCurrencyCode(e),a=this.account(),n=this.safeString(t,"d");if(i in this.balance[s]){let e=this.balance[s][i].free;"string"!=typeof e&&(e=this.numberToString(e)),a.free=r.O.stringAdd(e,n)}else a.free=n;this.balance[s][i]=a}else{t=this.safeValue(t,"a",t);const e=this.safeValue(t,"B");for(let t=0;t<e.length;t++){const r=e[t],a=this.safeString(r,"a"),n=this.safeCurrencyCode(a),o=this.account();o.free=this.safeString(r,"f"),o.used=this.safeString(r,"l"),o.total=this.safeString(r,i),this.balance[s][n]=o}}const n=this.safeInteger(t,"E");this.balance[s].timestamp=n,this.balance[s].datetime=this.iso8601(n),this.balance[s]=this.safeBalance(this.balance[s]),e.resolve(this.balance[s],a)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r,a,n,o="orders";void 0!==e&&(r=this.market(e),o+=":"+(e=r.symbol),s.symbol=e),await this.authenticate(s),[a,s]=this.handleMarketTypeAndParams("watchOrders",r,s),[n,s]=this.handleSubTypeAndParams("watchOrders",r,s),this.isLinear(a,n)?a="future":this.isInverse(a,n)&&(a="delivery");const d=this.urls.api.ws[a]+"/"+this.options[a].listenKey,c=this.client(d);this.setBalanceCache(c,a);const h=await this.watch(d,o,void 0,a);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}parseWsOrder(e,t=undefined){const i=this.safeString(e,"x"),s=this.safeString(e,"i"),a=this.safeString(e,"s"),n="ps"in e?"contract":"spot",o=this.safeSymbol(a,void 0,void 0,n);let d=this.safeInteger(e,"O");const c=this.safeInteger(e,"T");let h,u;"NEW"===i?void 0===d&&(d=c):"TRADE"===i&&(h=c);const l=this.safeString(e,"n");if(void 0!==l&&r.O.stringGt(l,"0")){const t=this.safeString(e,"N");u={cost:l,currency:this.safeCurrencyCode(t)}}const p=this.safeString(e,"p"),f=this.safeString(e,"q"),m=this.safeStringLower(e,"S"),v=this.safeStringLower(e,"o"),g=this.safeString(e,"z"),y=this.safeString(e,"Z"),b=this.safeString(e,"ap"),w=this.safeString(e,"X"),S=this.parseOrderStatus(w);let P=this.safeString(e,"C");void 0!==P&&0!==P.length||(P=this.safeString(e,"c"));const k=this.safeString2(e,"P","sp");let O=this.safeString(e,"f");return"GTX"===O&&(O="PO"),this.safeOrder({info:e,symbol:o,id:s,clientOrderId:P,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:h,type:v,timeInForce:O,postOnly:void 0,side:m,price:p,stopPrice:k,triggerPrice:k,amount:f,cost:y,average:b,filled:g,remaining:void 0,status:S,fee:u,trades:void 0})}handleOrderUpdate(e,t){"ORDER_TRADE_UPDATE"===this.safeString(t,"e")&&(t=this.safeValue(t,"o",t)),this.handleMyTrade(e,t),this.handleOrder(e,t)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.safeString2(this.options,"watchMyTrades","defaultType","spot");let a,n=this.safeString(s,"type",r);[a,s]=this.handleSubTypeAndParams("watchMyTrades",void 0,s),this.isLinear(n,a)?n="future":this.isInverse(n,a)&&(n="delivery");let o="myTrades";void 0!==e&&(o+=":"+(e=this.symbol(e)),s.symbol=e),await this.authenticate(s);const d=this.urls.api.ws[n]+"/"+this.options[n].listenKey,c=this.client(d);this.setBalanceCache(c,n);const h=await this.watch(d,o,void 0,n);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleMyTrade(e,t){const i="myTrades";if("TRADE"===this.safeString(t,"x")){const s=this.parseTrade(t),r=this.safeString(s,"order"),a=this.safeValue(s,"fee"),o=this.safeString(s,"symbol");if(void 0!==r&&void 0!==a&&void 0!==o){const e=this.orders;if(void 0!==e){const t=this.safeValue(e.hashmap,o,{}),i=this.safeValue(t,r);if(void 0!==i){const e=this.safeValue(i,"fees"),t=this.safeValue(i,"fee");if(void 0!==e){let t=!0;for(let s=0;s<e.length;s++){const r=e[s];if(r.currency===a.currency){const e=this.sum(a.cost,r.cost);i.fees[s].cost=parseFloat(this.currencyToPrecision(a.currency,e)),t=!1;break}}t&&i.fees.push(a)}else if(void 0!==t)if(t.currency===a.currency){const e=this.sum(t.cost,a.cost);i.fee.cost=parseFloat(this.currencyToPrecision(a.currency,e))}else void 0===t.currency?i.fee=a:(i.fees=[t,a],i.fee=void 0);else i.fee=a;const r=this.safeValue(i,"trades",[]);r.push(s),i.trades=r}}}if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new n.hl(e)}this.myTrades.append(s),e.resolve(this.myTrades,i);const d=i+":"+o;e.resolve(this.myTrades,d)}}handleOrder(e,t){const i="orders",s=this.parseWsOrder(t),r=this.safeString(s,"symbol"),a=this.safeString(s,"id");if(void 0!==r){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new n.hl(e)}const t=this.orders,o=this.safeValue(t.hashmap,r,{}),d=this.safeValue(o,a);if(void 0!==d){const e=this.safeValue(d,"fee");void 0!==e&&(s.fee=e);const t=this.safeValue(d,"fees");void 0!==t&&(s.fees=t),s.trades=this.safeValue(d,"trades"),s.timestamp=this.safeInteger(d,"timestamp"),s.datetime=this.safeString(d,"datetime")}t.append(s),e.resolve(this.orders,i);const c=i+":"+r;e.resolve(this.orders,c)}}handleMessage(e,t){const i={depthUpdate:this.handleOrderBook,trade:this.handleTrade,aggTrade:this.handleTrade,kline:this.handleOHLCV,markPrice_kline:this.handleOHLCV,indexPrice_kline:this.handleOHLCV,"24hrTicker@arr":this.handleTickers,"24hrMiniTicker@arr":this.handleTickers,"24hrTicker":this.handleTicker,"24hrMiniTicker":this.handleTicker,bookTicker:this.handleTicker,outboundAccountPosition:this.handleBalance,balanceUpdate:this.handleBalance,ACCOUNT_UPDATE:this.handleBalance,executionReport:this.handleOrderUpdate,ORDER_TRADE_UPDATE:this.handleOrderUpdate};let s=this.safeString(t,"e");if(Array.isArray(t)){const e=t[0];s=this.safeString(e,"e")+"@arr"}const r=this.safeValue(i,s);return void 0!==r?r.call(this,e,t):void 0!==this.safeString(t,"id")?this.handleSubscriptionStatus(e,t):void(void 0===s&&this.handleTicker(e,t))}}},5078:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(8764);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"binancecoinm",name:"Binance COIN-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg"},options:{fetchMarkets:["inverse"],defaultSubType:"inverse"}})}}},1326:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(8764);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"binanceus",name:"Binance US",countries:["US"],certified:!1,urls:{logo:"https://user-images.githubusercontent.com/1294454/65177307-217b7c80-da5f-11e9-876e-0b748ba0a358.jpg",api:{ws:{spot:"wss://stream.binance.us:9443/ws"},web:"https://www.binance.us",wapi:"https://api.binance.us/wapi/v3",public:"https://api.binance.us/api/v1",private:"https://api.binance.us/api/v3",v3:"https://api.binance.us/api/v3",v1:"https://api.binance.us/api/v1"},www:"https://www.binance.us",referral:"https://www.binance.us/?ref=35005074",doc:"https://github.com/binance-us/binance-official-api-docs",fees:"https://www.binance.us/en/fee/schedule"},options:{fetchCurrencies:!1,quoteOrderQty:!1,defaultType:"spot",fetchMarkets:["spot"]},fees:{trading:{tierBased:!1,percentage:!0,taker:0,maker:0}}})}}},1230:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(8764);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"binanceusdm",name:"Binance USDⓈ-M",urls:{logo:"https://user-images.githubusercontent.com/1294454/117738721-668c8d80-b205-11eb-8c49-3fad84c4a07f.jpg"},options:{fetchMarkets:["linear"],defaultSubType:"linear"}})}}},453:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(5189);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"bitcoincom",name:"bitcoin.com",countries:["KN"],urls:{logo:"https://user-images.githubusercontent.com/1294454/97296144-514fa300-1861-11eb-952b-3d55d492200b.jpg",api:{ws:"wss://api.fmfw.io/api/2/ws"}},fees:{trading:{maker:this.parseNumber("0.0015"),taker:this.parseNumber("0.002")}}})}}},9772:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6537),r=i(6689),a=i(3020),n=i(2194),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchOrderBook:!0,watchTrades:!0,watchBalance:!1,watchOHLCV:!1},urls:{api:{ws:{public:"wss://api-pub.bitfinex.com/ws/1",private:"wss://api.bitfinex.com/ws/1"}}},options:{watchOrderBook:{prec:"P0",freq:"F0"},ordersLimit:1e3}})}async subscribe(e,t,i={}){await this.loadMarkets();const s=this.market(t).id,r=this.urls.api.ws.public,a=e+":"+s,n={event:"subscribe",channel:e,symbol:s,messageHash:a};return await this.watch(r,a,this.deepExtend(n,i),a)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.subscribe("trades",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}handleTrades(e,t,i){const s=this.safeValue(i,"channel"),r=this.safeString(i,"pair"),n=s+":"+r,o=this.safeInteger(this.options,"tradesLimit",1e3),d=this.safeMarket(r),c=d.symbol,h=this.safeValue(t,1);let u=this.safeValue(this.trades,c);if(void 0===u&&(u=new a.ZL(o),this.trades[c]=u),Array.isArray(h)){const e=this.parseTrades(h,d);for(let t=0;t<e.length;t++)u.append(e[t])}else{if("tu"!==this.safeString(t,1))return;const e=this.parseTrade(t,d);u.append(e)}return e.resolve(u,n),t}parseTrade(e,t=undefined){if(!Array.isArray(e))return super.parseTrade(e,t);const i=e.length;let s;"tu"===this.safeString(e,1)&&(s=this.safeString(e,i-4));const r=this.safeTimestamp(e,i-3),a=this.safeFloat(e,i-2);let n,o,d=this.safeFloat(e,i-1);void 0!==d&&(n=d>0?"buy":"sell",d=Math.abs(d)),void 0!==a&&void 0!==d&&(o=a*d);const c=this.safeString(e,2).split("-");let h=this.safeString(c,1);void 0!==h&&(h=h.replace("t",""));const u=this.safeSymbol(h,t);return{info:e,timestamp:r,datetime:this.iso8601(r),symbol:u,id:s,order:void 0,type:void 0,takerOrMaker:void 0,side:n,price:a,amount:d,cost:o,fee:void 0}}handleTicker(e,t,i){const s=this.milliseconds(),r=this.safeString(i,"pair"),a=this.safeSymbol(r),o="ticker:"+r,d=this.safeString(t,7),c=this.safeString(t,5);let h;void 0!==d&&void 0!==c&&(h=n.O.stringSub(d,c));const u={symbol:a,timestamp:s,datetime:this.iso8601(s),high:this.safeFloat(t,9),low:this.safeFloat(t,10),bid:this.safeFloat(t,1),bidVolume:void 0,ask:this.safeFloat(t,3),askVolume:void 0,vwap:void 0,open:this.parseNumber(h),close:this.parseNumber(d),last:this.parseNumber(d),previousClose:void 0,change:this.parseNumber(c),percentage:this.safeFloat(t,6),average:void 0,baseVolume:this.safeFloat(t,8),quoteVolume:void 0,info:t};this.tickers[a]=u,e.resolve(u,o)}async watchOrderBook(e,t=undefined,i={}){if(void 0!==t&&25!==t&&100!==t)throw new r.ExchangeError(this.id+" watchOrderBook limit argument must be undefined, 25 or 100");const s=this.safeValue(this.options,"watchOrderBook",{}),a={prec:this.safeString(s,"prec","P0"),freq:this.safeString(s,"freq","F0"),len:t};return(await this.subscribe("book",e,this.deepExtend(a,i))).limit()}handleOrderBook(e,t,i){const s=this.safeString(i,"pair"),r=this.safeSymbol(s),a="book:"+s,n="R0"===this.safeString(i,"prec","P0");if(Array.isArray(t[1])){const s=this.safeInteger(i,"len");this.orderbooks[r]=n?this.indexedOrderBook({},s):this.countedOrderBook({},s);const o=this.orderbooks[r];if(n){const e=t[1];for(let t=0;t<e.length;t++){const i=e[t],s=this.safeString(i,0),r=this.safeFloat(i,1),a=i[2]<0?-i[2]:i[2];o[i[2]<0?"asks":"bids"].store(r,a,s)}}else{const e=t[1];for(let t=0;t<e.length;t++){const i=e[t],s=i[2]<0?-i[2]:i[2];o[i[2]<0?"asks":"bids"].store(i[0],s,i[1])}}e.resolve(o,a)}else{const i=this.orderbooks[r];if(n){const e=this.safeString(t,1),s=this.safeFloat(t,2),r=t[3]<0?-t[3]:t[3],a=s>0?r:0;i[t[3]<0?"asks":"bids"].store(s,a,e)}else{const e=t[3]<0?-t[3]:t[3];i[t[3]<0?"asks":"bids"].store(t[1],e,t[2])}e.resolve(i,a)}}handleHeartbeat(e,t){const i=this.safeString(t,"event");e.resolve(t,i)}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){const i=this.safeString(t,"chanId");return e.subscriptions[i]=t,t}async authenticate(e={}){const t=this.urls.api.ws.private,i=this.client(t),s=i.future("authenticated"),r="auth";if(void 0===this.safeValue(i.subscriptions,r)){const e=this.milliseconds(),i="AUTH"+e.toString(),s=this.hmac(this.encode(i),this.encode(this.secret),o.iC,"hex"),a={apiKey:this.apiKey,authSig:s,authNonce:e,authPayload:i,event:r,filter:["trading","wallet"]};this.spawn(this.watch,t,r,a,1)}return await s}handleAuthenticationMessage(e,t){if("OK"===this.safeString(t,"status"))this.safeValue(e.futures,"authenticated").resolve(!0);else{const i=new r.AuthenticationError(this.json(t));e.reject(i,"authenticated");const s=this.safeString(t,"event");s in e.subscriptions&&delete e.subscriptions[s]}}async watchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=this.urls.api.ws.private;return await this.authenticate(),await this.watch(s,e,void 0,1)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.authenticate(),void 0!==e&&(e=this.symbol(e));const r=this.urls.api.ws.private,a=await this.watch(r,"os",void 0,1);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleOrders(e,t,i){const s=this.safeValue(t,2,[]);if("os"===this.safeString(t,1))for(let t=0;t<s.length;t++){const i=s[t];this.handleOrder(e,i)}else this.handleOrder(e,s);void 0!==this.orders&&e.resolve(this.orders,"os")}parseWsOrderStatus(e){return this.safeString({ACTIVE:"open",CANCELED:"canceled"},e,e)}handleOrder(e,t){const i=this.safeString(t,0),s=this.safeString(t,1),r=this.safeSymbol(s);let o=this.safeString(t,2),d=this.safeString(t,3),c="buy";n.O.stringLt(o,"0")&&(o=n.O.stringAbs(o),d=n.O.stringAbs(d),c="sell");let h=this.safeString(t,4);h.indexOf("LIMIT")>-1?h="limit":h.indexOf("MARKET")>-1&&(h="market");const u=this.parseWsOrderStatus(this.safeString(t,5)),l=this.safeString(t,6),p=this.safeString(t,8),f=this.parse8601(p),m=this.safeOrder({info:t,id:i,clientOrderId:void 0,timestamp:f,datetime:this.iso8601(f),lastTradeTimestamp:void 0,symbol:r,type:h,side:c,price:l,stopPrice:void 0,triggerPrice:void 0,average:void 0,amount:o,remaining:d,filled:void 0,status:u,fee:void 0,cost:void 0,trades:void 0});if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}return this.orders.append(m),e.resolve(m,i),m}handleMessage(e,t){if(Array.isArray(t)){const i=this.safeString(t,0);if("hb"===t[1])return t;const s=this.safeValue(e.subscriptions,i,{}),r=this.safeString(s,"channel"),a=this.safeString(t,1),n={book:this.handleOrderBook,ticker:this.handleTicker,trades:this.handleTrades,os:this.handleOrders,on:this.handleOrders,oc:this.handleOrders},o=this.safeValue2(n,r,a);return void 0===o?t:o.call(this,e,t,s)}{const i=this.safeString(t,"event");if(void 0!==i){const s={info:this.handleSystemStatus,subscribed:this.handleSubscriptionStatus,auth:this.handleAuthenticationMessage},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}}}}},588:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(730),r=i(2194),a=i(6689),n=i(3020),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchOrderBook:!0,watchTrades:!0,watchMyTrades:!0,watchBalance:!0,watchOHLCV:!0,watchOrders:!0},urls:{api:{ws:{public:"wss://api-pub.bitfinex.com/ws/2",private:"wss://api.bitfinex.com/ws/2"}}},options:{watchOrderBook:{prec:"P0",freq:"F0"},ordersLimit:1e3,checksum:!0}})}async subscribe(e,t,i={}){await this.loadMarkets();const s=this.market(t).id,r=this.urls.api.ws.public,a=this.client(r),n=e+":"+s,o={event:"subscribe",channel:e,symbol:s},d=await this.watch(r,n,this.deepExtend(o,i),n,{checksum:!1});return this.safeValue(this.options,"checksum",!0)&&!a.subscriptions[n].checksum&&"book"===e&&(a.subscriptions[n].checksum=!0,await a.send({event:"conf",flags:131072})),d}async subscribePrivate(e){await this.loadMarkets(),await this.authenticate();const t=this.urls.api.ws.private;return await this.watch(t,e,void 0,1)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.safeString(this.timeframes,t,t),o="candles",d="trade:"+n+":"+a.id,c=o+":"+n+":"+a.id,h={event:"subscribe",channel:o,key:d},u=this.urls.api.ws.public,l=await this.watch(u,c,this.deepExtend(h,r),c);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t,i){const s=this.safeValue(t,1,[]);let r;const a=this.safeValue(s,0);r=Array.isArray(a)?s:[s];const o=this.safeValue(i,"channel"),d=this.safeString(i,"key"),c=d.split(":"),h=this.safeString(c,1);let u=d;u=u.replace("trade:",""),u=u.replace(h+":","");const l=this.safeMarket(u),p=this.findTimeframe(h),f=l.symbol,m=o+":"+h+":"+u;this.ohlcvs[f]=this.safeValue(this.ohlcvs,f,{});let v=this.safeValue(this.ohlcvs[f],p);if(void 0===v){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);v=new n.Py(e),this.ohlcvs[f][p]=v}const g=r.length;for(let e=0;e<g;e++){const t=r[g-e-1],i=this.parseOHLCV(t,l);v.append(i)}e.resolve(v,m)}async watchTrades(e,t=undefined,i=undefined,s={}){const r=await this.subscribe("trades",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r="myTrade";void 0!==e&&(r+=":"+this.market(e).id);const a=await this.subscribePrivate(r);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}handleMyTrade(e,t,i={}){const s="myTrade",r=this.safeValue(t,2),a=this.parseWsTrade(r,!1),o=a.symbol,d=s+":"+this.market(o).id;if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new n.hl(e)}const c=this.myTrades;c.append(a),this.myTrades=c,e.resolve(c,s),e.resolve(c,d)}handleTrades(e,t,i){const s=this.safeValue(i,"channel"),r=this.safeString(i,"symbol"),a=this.safeMarket(r),o=s+":"+r,d=this.safeInteger(this.options,"tradesLimit",1e3),c=a.symbol;let h=this.safeValue(this.trades,c);if(void 0===h&&(h=new n.ZL(d),this.trades[c]=h),2===t.length){const e=this.safeValue(t,1,[]);for(let t=0;t<e.length;t++){const i=this.parseWsTrade(e[t],!0,a);h.append(i)}}else{if("tu"===this.safeString(t,1))return;const e=this.safeValue(t,2,[]),i=this.parseWsTrade(e,!0,a);h.append(i)}return e.resolve(h,o),t}parseWsTrade(e,t=!1,i=undefined){let s=t?void 0:this.safeString(e,1);const a=t?1:2,n=t?3:5,o=t?2:4;s=(i=this.safeMarket(s,i)).id;let d=this.safeString(e,6);void 0!==d&&(d.indexOf("LIMIT")>-1?d="limit":d.indexOf("MARKET")>-1&&(d="market"));const c=t?void 0:this.safeString(e,3),h=this.safeString(e,0),u=this.safeInteger(e,a),l=this.safeString(e,n),p=this.safeString(e,o),f=this.parseNumber(r.O.stringAbs(p));let m;void 0!==f&&(m=r.O.stringGt(p,"0")?"buy":"sell");const v=this.safeSymbol(s,i),g=this.safeString(e,9);let y;if(void 0!==g){const t=this.safeString(e,10);y={cost:g,currency:this.safeCurrencyCode(t)}}const b=this.safeInteger(e,8);let w;return void 0!==b&&(w=-1===b?"taker":"maker"),this.safeTrade({info:e,timestamp:u,datetime:this.iso8601(u),symbol:v,id:h,order:c,type:d,takerOrMaker:w,side:m,price:l,amount:f,cost:void 0,fee:y},i)}handleTicker(e,t,i){const s=this.safeValue(t,1),r=this.safeString(i,"symbol"),a=this.safeMarket(r),n=this.safeSymbol(r),o=this.parseWsTicker(s,a),d="ticker:"+r;this.tickers[n]=o,e.resolve(o,d)}parseWsTicker(e,t=undefined){const i=(t=this.safeMarket(void 0,t)).symbol,s=this.safeString(e,6),r=this.safeString(e,4);return this.safeTicker({symbol:i,timestamp:void 0,datetime:void 0,high:this.safeString(e,8),low:this.safeString(e,9),bid:this.safeString(e,0),bidVolume:this.safeString(e,1),ask:this.safeString(e,2),askVolume:this.safeString(e,3),vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:r,percentage:this.safeString(e,5),average:void 0,baseVolume:this.safeString(e,7),quoteVolume:void 0,info:e},t)}async watchOrderBook(e,t=undefined,i={}){if(void 0!==t&&25!==t&&100!==t)throw new a.ExchangeError(this.id+" watchOrderBook limit argument must be undefined, 25 or 100");const s=this.safeValue(this.options,"watchOrderBook",{}),r={prec:this.safeString(s,"prec","P0"),freq:this.safeString(s,"freq","F0")};return void 0!==t&&(r.len=t),(await this.subscribe("book",e,this.deepExtend(r,i))).limit()}handleOrderBook(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeSymbol(s),a="book:"+s,n="R0"===this.safeString(i,"prec","P0"),o=this.safeString(t,0);let d=this.safeValue(this.orderbooks,r);if(void 0===d){const s=this.safeInteger(i,"len");if(this.orderbooks[r]=n?this.indexedOrderBook({},s):this.countedOrderBook({},s),d=this.orderbooks[r],n){const e=t[1];for(let t=0;t<e.length;t++){const i=e[t],s=i[2]<0?-i[2]:i[2],r=d[i[2]<0?"asks":"bids"],a=this.safeString(i,0),n=this.safeFloat(i,1);r.store(n,s,a)}}else{const e=t[1];for(let t=0;t<e.length;t++){const i=e[t],s=this.safeNumber(i,2),r=this.safeNumber(i,1),a=this.safeNumber(i,0),n=s<0?-s:s;d[s<0?"asks":"bids"].store(a,n,r)}}e.resolve(d,a)}else{const i=t[1],s=this.orderbooks[r];if(n){const e=this.safeFloat(i,1),t=i[2]<0?-i[2]:i[2],r=e>0?t:0;s[i[2]<0?"asks":"bids"].store(e,r,o)}else{const e=this.safeNumber(i,2),t=this.safeNumber(i,1),r=this.safeNumber(i,0),a=e<0?-e:e;s[e<0?"asks":"bids"].store(r,a,t)}e.resolve(s,a)}}handleChecksum(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeSymbol(s),n="book:"+s,o=this.safeValue(this.orderbooks,r);if(void 0===o)return;const d=this.safeInteger(i,"len"),c=[],h=o.bids,u=o.asks;for(let e=0;e<d;e++)c.push(h[e][0]),c.push(h[e][1]),c.push(u[e][0]),c.push(-u[e][1]);const l=c.join(":"),p=this.crc32(l,!0);if(this.safeInteger(t,2)!==p){const t=new a.InvalidNonce(this.id+" invalid checksum");e.reject(t,n)}}async watchBalance(e={}){await this.loadMarkets();const t=this.safeString(e,"wallet","exchange");e=this.omit(e,"wallet");const i="balance:"+t;return await this.subscribePrivate(i)}handleBalance(e,t,i){let s;s="ws"===this.safeValue(t,1)?this.safeValue(t,2):[this.safeValue(t,2)];const r={};for(let e=0;e<s.length;e++){const i=s[e],a=this.safeString(i,1),n=this.safeCurrencyCode(a),o=this.parseWsBalance(i),d=this.safeString(i,0),c=this.safeValue(this.balance,d,{});c[n]=o,c.info=t,this.balance[d]=this.safeBalance(c),r[d]=!0}const a=Object.keys(r);for(let t=0;t<a.length;t++){const i=a[t],s="balance:"+i;e.resolve(this.balance[i],s)}}parseWsBalance(e){const t=this.safeString(e,2),i=this.safeString(e,4),s=this.account();return void 0!==i&&(s.free=i),s.total=t,s}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){const i=this.safeString(t,"chanId");return e.subscriptions[i]=t,t}authenticate(e={}){const t=this.urls.api.ws.private,i=this.client(t),s="authenticated";let r=this.safeValue(i.subscriptions,s);if(void 0===r){const a=this.milliseconds(),n="AUTH"+a.toString(),d=this.hmac(this.encode(n),this.encode(this.secret),o.iC,"hex"),c="auth",h={apiKey:this.apiKey,authSig:d,authNonce:a,authPayload:n,event:c},u=this.extend(h,e);r=this.watch(t,s,u),i.subscriptions[s]=r}return r}handleAuthenticationMessage(e,t){const i="authenticated";if("OK"===this.safeString(t,"status"))e.resolve(t,i);else{const s=new a.AuthenticationError(this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions[i]}}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r="orders";void 0!==e&&(r+=":"+this.market(e).id);const a=await this.subscribePrivate(r);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}handleOrders(e,t,i){const s=this.safeValue(t,2,[]),r=this.safeString(t,1);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new n.hl(e)}const a=this.orders,o={};if("os"===r){if(0===s.length)return;for(let e=0;e<s.length;e++){const t=s[e],i=this.parseWsOrder(t);o[i.symbol]=!0,a.append(i)}}else{const e=this.parseWsOrder(s);a.append(e),o[e.symbol]=!0}const d="orders";e.resolve(this.orders,d);const c=Object.keys(o);for(let t=0;t<c.length;t++){const i=c[t],s=d+":"+this.market(i).id;e.resolve(this.orders,s)}}parseWsOrderStatus(e){return this.safeString({ACTIVE:"open",CANCELED:"canceled",EXECUTED:"closed","PARTIALLY FILLED":"open"},e,e)}parseWsOrder(e,t=undefined){const i=this.safeString(e,0),s=this.safeString(e,1),a=this.safeString(e,3),n=this.safeSymbol(a);t=this.safeMarket(a);let o=this.safeNumber(e,7),d="buy";o<0&&(o=Math.abs(o),d="sell");const c=r.O.stringAbs(this.safeString(e,6));let h=this.safeString(e,8);h.indexOf("LIMIT")>-1?h="limit":h.indexOf("MARKET")>-1&&(h="market");const u=this.safeString(e,13).split(" "),l=this.safeString(u,0),p=this.parseWsOrderStatus(l),f=this.safeString(e,16),m=this.safeInteger(e,4),v=this.safeString(e,17),g=this.omitZero(this.safeString(e,18));return this.safeOrder({info:e,id:i,clientOrderId:s,timestamp:m,datetime:this.iso8601(m),lastTradeTimestamp:void 0,symbol:n,type:h,side:d,price:f,stopPrice:g,triggerPrice:g,average:v,amount:o,remaining:c,filled:void 0,status:p,fee:void 0,cost:void 0,trades:void 0},t)}handleMessage(e,t){const i=this.safeString(t,0);if(Array.isArray(t)){if("hb"===t[1])return t;const s=this.safeValue(e.subscriptions,i,{}),r=this.safeString(s,"channel"),a=this.safeString(t,1),n={book:this.handleOrderBook,cs:this.handleChecksum,candles:this.handleOHLCV,ticker:this.handleTicker,trades:this.handleTrades},o={os:this.handleOrders,ou:this.handleOrders,on:this.handleOrders,oc:this.handleOrders,wu:this.handleBalance,ws:this.handleBalance,tu:this.handleMyTrade};let d;return d="0"===i?this.safeValue(o,a):this.safeValue2(n,a,r),void 0===d?t:d.call(this,e,t,s)}{const i=this.safeString(t,"event");if(void 0!==i){const s={info:this.handleSystemStatus,subscribed:this.handleSubscriptionStatus,auth:this.handleAuthenticationMessage},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}}}}},1885:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(9051),r=i(6689),a=i(2194),n=i(3020),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{api:{ws:"wss://ws.bitget.com/spot/v1/stream"}},options:{tradesLimit:1e3,OHLCVLimit:1e3,timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1H","4h":"4H","6h":"6H","12h":"12H","1d":"1D","1w":"1W"}},streaming:{ping:this.ping},exceptions:{ws:{exact:{30001:r.BadRequest,30015:r.AuthenticationError}}}})}getWsMarketId(e){const t=this.safeValue(this.options,"sandboxMode",!1);return e.spot?e.info.symbolName:t?e.id.replace("_SUMCBL",""):e.id.replace("_UMCBL","")}getMarketIdFromArg(e){const t=this.safeString(e,"instType"),i=this.safeValue(this.options,"sandboxMode",!1);let s=this.safeString(e,"instId");return s+="sp"===t?"_SPBL":i?"_SUMCBL":"_UMCBL",s}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s="ticker:"+(e=i.symbol),r={instType:i.spot?"sp":"mc",channel:"ticker",instId:this.getWsMarketId(i)};return await this.watchPublic(s,r,t)}handleTicker(e,t){const i=this.parseWsTicker(t),s=i.symbol;this.tickers[s]=i;const r="ticker:"+s;return e.resolve(i,r),t}parseWsTicker(e,t=undefined){const i=this.safeValue(e,"arg",{}),s=this.safeValue(e,"data",[]),r=this.safeValue(s,0,{}),a=this.safeInteger2(r,"ts","systemTime"),n=this.getMarketIdFromArg(i);t=this.safeMarket(n,t);const o=this.safeString(r,"last"),d=this.safeString(r,"open24h"),c=this.safeString(r,"high24h"),h=this.safeString(r,"low24h"),u=this.safeString(r,"baseVolume"),l=this.safeString(r,"quoteVolume"),p=this.safeString(r,"bestBid"),f=this.safeString(r,"bestAsk");return this.safeTicker({symbol:t.symbol,timestamp:a,datetime:this.iso8601(a),high:c,low:h,bid:p,bidVolume:void 0,ask:f,askVolume:void 0,vwap:void 0,open:d,close:o,last:o,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:u,quoteVolume:l,info:r},t)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.safeValue(this.options,"timeframes"),o=this.safeString(n,t),d="candles:"+t+":"+e,c={instType:a.spot?"sp":"mc",channel:"candle"+o,instId:this.getWsMarketId(a)},h=await this.watchPublic(d,c,r);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"arg",{}),s=this.getMarketIdFromArg(i),r=this.safeString(i,"channel").replace("candle",""),a=this.safeValue(this.options,"timeframes"),o=this.findTimeframe(r,a),d=this.safeMarket(s).symbol;this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let c=this.safeValue(this.ohlcvs[d],o);if(void 0===c){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new n.Py(e),this.ohlcvs[d][o]=c}const h=this.safeValue(t,"data",[]);for(let e=0;e<h.length;e++){const t=this.parseWsOHLCV(h[e]);c.append(t)}const u="candles:"+o+":"+d;e.resolve(c,u)}parseWsOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r="orderbook:"+(e=s.symbol),a=s.spot?"sp":"mc";let n="books",o=!0;5!==t&&15!==t||(n+=t.toString(),o=!1);const d={instType:a,channel:n,instId:this.getWsMarketId(s)},c=await this.watchPublic(r,d,i);return o?c.limit():c}handleOrderBook(e,t){const i=this.safeValue(t,"arg"),s=this.safeString(i,"channel"),a=this.getMarketIdFromArg(i),n=this.safeMarket(a).symbol,o="orderbook:"+n,d=this.safeValue(t,"data"),c=this.safeValue(d,0),h=this.safeInteger(c,"ts");let u;if("books"===s){u=this.safeValue(this.orderbooks,n),void 0===u&&(u=this.countedOrderBook({}));const t=this.safeValue(c,"asks",[]),i=this.safeValue(c,"bids",[]);if(this.handleDeltas(u.asks,t),this.handleDeltas(u.bids,i),u.timestamp=h,u.datetime=this.iso8601(h),this.safeValue(this.options,"checksum",!0)){const t=u.asks,i=u.bids,s=t.length,a=i.length,n=[];for(let e=0;e<25;e++)e<a&&(n.push(i[e][2][0]),n.push(i[e][2][1])),e<s&&(n.push(t[e][2][0]),n.push(t[e][2][1]));const d=n.join(":");if(this.crc32(d,!0)!==this.safeInteger(c,"checksum")){const t=new r.InvalidNonce(this.id+" invalid checksum");e.reject(t,o)}}}else u=this.parseOrderBook(c,n,h);this.orderbooks[n]=u,e.resolve(u,o)}handleDelta(e,t){const i=this.parseBidAsk(t,0,1);i.push(t),e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a="trade:"+(e=r.symbol),n={instType:r.spot?"sp":"mc",channel:"trade",instId:this.getWsMarketId(r)},o=await this.watchPublic(a,n,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"arg",{}),s=this.getMarketIdFromArg(i),r=this.safeMarket(s),a=r.symbol;let o=this.safeValue(this.trades,a);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new n.ZL(e),this.trades[a]=o}const d=this.safeValue(t,"data",[]);for(let e=0;e<d.length;e++){const t=d[e],i=this.parseWsTrade(t,r);o.append(i)}const c="trade:"+a;e.resolve(o,c)}parseWsTrade(e,t=undefined){t=this.safeMarket(void 0,t);const i=this.safeInteger(e,0),s=this.safeString(e,3),r=this.safeString(e,1),a=this.safeString(e,2);return this.safeTrade({info:e,id:void 0,order:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,type:void 0,side:s,takerOrMaker:void 0,price:r,amount:a,cost:void 0,fee:void 0},t)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){let a,n;await this.loadMarkets();let o,d="order";if(void 0!==e&&(a=this.market(e),e=a.symbol,n=a.id,d=d+":"+e),[o,s]=this.handleMarketTypeAndParams("watchOrders",a,s),"spot"===o&&void 0===e)throw new r.ArgumentsRequired(this.id+" watchOrders requires a symbol argument for "+o+" markets.");const c=this.safeValue(this.options,"sandboxMode",!1);let h;h="spot"===o?"spbl":c?"SUMCBL":"UMCBL";const u={instType:h,channel:"orders",instId:"spot"===o?n:"default"},l=await this.watchPrivate(d,"order:trades",u,s);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySymbolSinceLimit(l,e,t,i,!0)}handleOrder(e,t,i=undefined){const s=this.safeValue(t,"arg",{}),r=this.safeString(s,"instType"),a=this.safeValue(this.options,"sandboxMode",!1)?"sumcbl"===r:"umcbl"===r,o=this.safeValue(t,"data",[]);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new n.hl(e)}const d=this.orders,c={};for(let t=0;t<o.length;t++){const i=o[t];"T"===this.safeString(i,"execType")&&a&&this.handleMyTrades(e,i);const s=this.parseWsOrder(i);d.append(s),c[s.symbol]=!0}const h=Object.keys(c);for(let t=0;t<h.length;t++){const i="order:"+h[t];e.resolve(d,i)}e.resolve(d,"order")}parseWsOrder(e,t=undefined){const i=this.safeString(e,"instId");t=this.safeMarket(i,t);const s=this.safeString(e,"ordId"),r=this.safeString(e,"clOrdId"),n=this.safeString(e,"px"),o=this.safeString(e,"fillSz"),d=this.safeString(e,"sz"),c=this.safeString2(e,"notional","notionalUsd"),h=this.omitZero(this.safeString(e,"avgPx")),u=this.safeString(e,"ordType"),l=this.safeInteger(e,"cTime"),p=t.symbol;let f=this.safeString2(e,"side","posSide");"open_long"===f||"close_short"===f?f="buy":"close_long"!==f&&"open_short"!==f||(f="sell");const m=this.safeString(e,"status","state"),v=this.safeString(e,"force"),g=this.parseWsOrderStatus(m),y=this.safeValue(e,"orderFee",[]),b=this.safeValue(y,0),w=this.safeString(b,"fee");let S;if(void 0!==w){const e=this.safeString(b,"feeCcy");S={cost:a.O.stringAbs(w),currency:this.safeCurrencyCode(e)}}return this.safeOrder({info:e,symbol:p,id:s,clientOrderId:r,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,type:u,timeInForce:v,postOnly:void 0,side:f,price:n,stopPrice:void 0,triggerPrice:void 0,amount:d,cost:c,average:h,filled:o,remaining:void 0,status:g,fee:S,trades:void 0},t)}parseWsOrderStatus(e){return this.safeString({new:"open","partial-fill":"open","full-fill":"closed",filled:"closed",cancelled:"canceled"},e,e)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let a;await this.loadMarkets();let n,o="myTrades";if(void 0!==e&&(a=this.market(e),o=o+":"+(e=a.symbol)),[n,s]=this.handleMarketTypeAndParams("watchMyTrades",a,s),"spot"===n)throw new r.NotSupported(this.id+" watchMyTrades is not supported for "+n+" markets.");const d={instType:this.safeValue(this.options,"sandboxMode",!1)?"sumcbl":"umcbl",channel:"orders",instId:"default"},c=await this.watchPrivate(o,"order:trades",d,s);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleMyTrades(e,t){if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new n.ZL(e)}const i=this.myTrades,s=this.parseWsMyTrade(t);i.append(s);const r=s.symbol;e.resolve(i,"myTrades");const a="myTrades:"+r;e.resolve(i,a)}parseWsMyTrade(e,t=undefined){const i=this.safeString(e,"tradeId"),s=this.safeString(e,"ordId"),r=this.safeString(e,"instId");t=this.safeMarket(r,t);const n=this.safeInteger(e,"fillTime"),o=this.safeString(e,"side"),d=this.safeString(e,"fillPx"),c=this.safeString(e,"fillSz"),h=this.safeString(e,"ordType"),u=this.safeString(e,"notional"),l=this.safeString(e,"fillFeeCcy"),p=a.O.stringAbs(this.safeString(e,"fillFee")),f={code:this.safeCurrencyCode(l),cost:p};return this.safeTrade({info:e,id:i,order:s,timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:h,side:o,takerOrMaker:void 0,price:d,amount:c,cost:u,fee:f},t)}async watchBalance(e={}){let t;[t,e]=this.handleMarketTypeAndParams("watchOrders",void 0,e);const i=this.safeValue(this.options,"sandboxMode",!1);let s="spbl";"swap"===t&&(s="UMCBL",i&&(s="S"+s));const r={instType:s,channel:"account",instId:"default"},a="balance:"+s.toLowerCase();return await this.watchPrivate(a,a,r,e)}handleBalance(e,t){const i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString2(t,"coinName","marginCoin"),r=this.safeCurrencyCode(s),a=r in this.balance?this.balance[r]:this.account();a.free=this.safeString(t,"available"),a.total=this.safeString(t,"equity"),this.balance[r]=a}this.balance=this.safeBalance(this.balance);const s=this.safeValue(t,"arg"),r="balance:"+this.safeStringLower(s,"instType");e.resolve(this.balance,r)}async watchPublic(e,t,i={}){const s=this.urls.api.ws,r={op:"subscribe",args:[t]},a=this.extend(r,i);return await this.watch(s,e,a,e)}authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws,i=this.client(t),s="authenticated";let r=this.safeValue(i.subscriptions,s);if(void 0===r){const a=this.seconds().toString(),n=a+"GET/user/verify",d=this.hmac(this.encode(n),this.encode(this.secret),o.J,"base64"),c={op:"login",args:[{apiKey:this.apiKey,passphrase:this.password,timestamp:a,sign:d}]},h=this.extend(c,e);r=this.watch(t,s,h),i.subscriptions[s]=r}return r}async watchPrivate(e,t,i,s={}){await this.authenticate();const r=this.urls.api.ws,a={op:"subscribe",args:[i]},n=this.extend(a,s);return await this.watch(r,e,n,t)}handleAuthenticate(e,t){e.resolve(t,"authenticated")}handleErrorMessage(e,t){const i=this.safeString(t,"event");try{if("error"===i){const e=this.safeString(t,"code"),i=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.ws.exact,e,i)}return!1}catch(t){if(t instanceof r.AuthenticationError){const i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"message"))return void this.handlePong(e,t);if("pong"===t)return void this.handlePong(e,t);const i=this.safeString(t,"event");if("login"===i)return void this.handleAuthenticate(e,t);if("subscribe"===i)return void this.handleSubscriptionStatus(e,t);const s={ticker:this.handleTicker,trade:this.handleTrades,orders:this.handleOrder,account:this.handleBalance},r=this.safeValue(t,"arg",{}),a=this.safeValue(r,"channel",""),n=this.safeValue(s,a);void 0!==n&&n.call(this,e,t),a.indexOf("candle")>=0&&this.handleOHLCV(e,t),a.indexOf("books")>=0&&this.handleOrderBook(e,t)}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleSubscriptionStatus(e,t){return t}}},7504:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(3718),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchOrderBook:!0,watchOrders:!0,watchTrades:!0,watchOHLCV:!0},urls:{api:{ws:{public:"wss://ws-manager-compress.{hostname}/api?protocol=1.1",private:"wss://ws-manager-compress.{hostname}/user?protocol=1.1"}}},options:{defaultType:"spot",watchOrderBook:{depth:"depth5"},ws:{inflate:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","45m":"45m","1h":"1H","2h":"2H","3h":"3H","4h":"4H","1d":"1D","1w":"1W","1M":"1M"}},streaming:{keepAlive:15e3}})}async subscribe(e,t,i={}){await this.loadMarkets();const s=this.market(t),r=this.implodeHostname(this.urls.api.ws.public),a=s.type+"/"+e+":"+s.id,n={op:"subscribe",args:[a]};return await this.watch(r,a,this.deepExtend(n,i),a)}async subscribePrivate(e,t,i={}){await this.loadMarkets();const s=this.market(t),r=this.implodeHostname(this.urls.api.ws.private),a=e+":"+s.id;await this.authenticate();const n={op:"subscribe",args:[a]};return await this.watch(r,a,this.deepExtend(n,i),a)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.subscribe("trade",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" watchOrders requires a symbol argument");await this.loadMarkets();const a=this.market(e);if(e=a.symbol,"spot"!==a.type)throw new r.ArgumentsRequired(this.id+" watchOrders supports spot markets only");const n=await this.subscribePrivate("spot/user/order",e,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleOrders(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]);if(s.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new a.hl(t));const r=this.orders,n=[];for(let e=0;e<s.length;e++){const t=this.parseWsOrder(s[e]);r.append(t);const i=t.symbol,a=this.market(i);n.push(a.id)}for(let t=0;t<n.length;t++){const s=i+":"+n[t];e.resolve(this.orders,s)}}}parseWsOrder(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);const s=this.safeString(e,"order_id"),r=this.safeString(e,"clientOid"),a=this.safeString(e,"price"),n=this.safeString(e,"filled_size"),o=this.safeString(e,"size"),d=this.safeString(e,"type"),c=this.safeString(e,"state"),h=this.parseOrderStatusByType(t.type,c),u=this.safeInteger(e,"ms_t"),l=t.symbol,p=this.safeStringLower(e,"side");return this.safeOrder({info:e,symbol:l,id:s,clientOrderId:r,timestamp:void 0,datetime:void 0,lastTradeTimestamp:u,type:d,timeInForce:void 0,postOnly:void 0,side:p,price:a,stopPrice:void 0,triggerPrice:void 0,amount:o,cost:void 0,average:void 0,filled:n,remaining:void 0,status:h,fee:void 0,trades:void 0},t)}handleTrade(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]),r=this.safeInteger(this.options,"tradesLimit",1e3);for(let t=0;t<s.length;t++){const n=this.parseTrade(s[t]),o=n.symbol,d=i+":"+this.safeString(n.info,"symbol");let c=this.safeValue(this.trades,o);void 0===c&&(c=new a.ZL(r),this.trades[o]=c),c.append(n),e.resolve(c,d)}return t}handleTicker(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]);for(let t=0;t<s.length;t++){const r=this.parseTicker(s[t]),a=r.symbol,n=i+":"+this.safeString(r.info,"symbol");this.tickers[a]=r,e.resolve(r,n)}return t}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets(),e=this.symbol(e);const a=this.safeValue(this.options,"timeframes",{}),n="kline"+this.safeString(a,t),o=await this.subscribe(n,e,r);return this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]),r=i.split("/"),n=this.safeString(r,1).replace("kline",""),o=this.safeValue(this.options,"timeframes",{}),d=this.findTimeframe(n,o),c=1e3*this.parseTimeframe(d);for(let t=0;t<s.length;t++){const r=this.safeString(s[t],"symbol"),n=this.safeValue(s[t],"candle"),o=this.safeMarket(r),h=o.symbol,u=this.parseOHLCV(n,o);u[0]=parseInt((u[0]/c).toString())*c,this.ohlcvs[h]=this.safeValue(this.ohlcvs,h,{});let l=this.safeValue(this.ohlcvs[h],d);if(void 0===l){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new a.Py(e),this.ohlcvs[h][d]=l}l.append(u);const p=i+":"+r;e.resolve(l,p)}}async watchOrderBook(e,t=undefined,i={}){const s=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(s,"depth","depth50");return(await this.subscribe(r,e,i)).limit()}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){const s=this.safeValue(t,"asks",[]),r=this.safeValue(t,"bids",[]);this.handleDeltas(i.asks,s),this.handleDeltas(i.bids,r);const a=this.safeInteger(t,"ms_t"),n=this.safeString(t,"symbol"),o=this.safeSymbol(n);return i.symbol=o,i.timestamp=a,i.datetime=this.iso8601(a),i}handleOrderBook(e,t){const i=this.safeValue(t,"data",[]),s=this.safeString(t,"table"),r=s.split("/"),a=this.safeString(r,1).replace("depth",""),n=parseInt(a);for(let t=0;t<i.length;t++){const r=i[t],a=this.safeString(r,"symbol"),o=this.safeSymbol(a);let d=this.safeValue(this.orderbooks,o);void 0===d&&(d=this.orderBook({},n),this.orderbooks[o]=d),d.reset({}),this.handleOrderBookMessage(e,r,d);const c=s+":"+a;e.resolve(d,c)}return t}authenticate(e={}){this.checkRequiredCredentials();const t=this.implodeHostname(this.urls.api.ws.private),i="authenticated",s=this.client(t);let r=this.safeValue(s.subscriptions,i);if(void 0===r){const a=this.milliseconds().toString(),o=a+"#"+this.uid+"#bitmart.WebSocket",d=this.hmac(this.encode(o),this.encode(this.secret),n.J),c={op:"login",args:[this.apiKey,a,d]},h=this.extend(c,e);r=this.watch(t,i,h),s.subscriptions[i]=r}return r}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){e.resolve(t,"authenticated")}handleErrorMessage(e,t){const i=this.safeString(t,"errorCode");try{if(void 0!==i){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);const s=this.safeValue(t,"message");void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}return!1}catch(t){if(t instanceof r.AuthenticationError){const i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;const i=this.safeString(t,"table");if(void 0!==i){const s=i.split("/"),r=this.safeString(s,1),a={depth:this.handleOrderBook,depth5:this.handleOrderBook,depth20:this.handleOrderBook,depth50:this.handleOrderBook,ticker:this.handleTicker,trade:this.handleTrade};let n=this.safeValue(a,r);return r.indexOf("kline")>=0&&(n=this.handleOHLCV),"order"===this.safeString(s,2)&&(n=this.handleOrders),void 0===n?t:n.call(this,e,t)}{const i=this.safeString(t,"event");if(void 0!==i){const s={login:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}}}}},2302:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(7077),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{test:{ws:"wss://ws.testnet.bitmex.com/realtime"},api:{ws:"wss://ws.bitmex.com/realtime"}},options:{watchOrderBookLevel:"orderBookL2",tradesLimit:1e3,OHLCVLimit:1e3},exceptions:{ws:{exact:{},broad:{"Rate limit exceeded":r.RateLimitExceeded}}}})}async watchTicker(e,t={}){await this.loadMarkets();const i="instrument:"+this.market(e).id,s=this.urls.api.ws,r={op:"subscribe",args:[i]};return await this.watch(s,i,this.extend(r,t),i)}handleTicker(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]);for(let t=0;t<s.length;t++){const r=s[t],a=this.safeValue(r,"symbol"),n=this.safeMarket(a),o=n.symbol,d=i+":"+a;let c=this.safeValue(this.tickers,o,{});const h=this.safeValue(c,"info",{});c=this.parseTicker(this.extend(h,r),n),this.tickers[o]=c,e.resolve(c,d)}return t}async watchBalance(e={}){await this.loadMarkets(),await this.authenticate();const t="margin",i=this.urls.api.ws,s={op:"subscribe",args:[t]};return await this.watch(i,t,this.extend(s,e),t)}handleBalance(e,t){const i=this.safeValue(t,"data"),s=this.parseBalance(i);this.balance=this.extend(this.balance,s);const r=this.safeString(t,"table");e.resolve(this.balance,r)}handleTrades(e,t){const i=this.safeValue(t,"data",[]),s=this.groupBy(i,"symbol"),r=Object.keys(s);for(let t=0;t<r.length;t++){const i=r[t],n=this.safeMarket(i),o="trade:"+i,d=n.symbol,c=this.parseTrades(s[i],n);let h=this.safeValue(this.trades,d);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a.ZL(e),this.trades[d]=h}for(let e=0;e<c.length;e++)h.append(c[e]);e.resolve(h,o)}}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="trade:"+r.id,n=this.urls.api.ws,o={op:"subscribe",args:[a]},d=await this.watch(n,a,this.extend(o,s),a);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}async authenticate(e={}){const t=this.urls.api.ws,i=this.client(t),s=i.future("authenticated"),r="authKeyExpires";if(void 0===this.safeValue(i.subscriptions,r))try{this.checkRequiredCredentials();const e=this.milliseconds(),i="GET/realtime"+e.toString(),s=this.hmac(this.encode(i),this.encode(this.secret),n.J),a={op:r,args:[this.apiKey,e,s]};this.spawn(this.watch,t,r,a,r)}catch(e){i.reject(e,"authenticated"),r in i.subscriptions&&delete i.subscriptions[r]}return s}handleAuthenticationMessage(e,t){if(this.safeValue(t,"success",!1))e.resolve(t,"authenticated");else{const i=new r.AuthenticationError(this.json(t));e.reject(i,"authenticated");const s="authKeyExpires";s in e.subscriptions&&delete e.subscriptions[s]}}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.authenticate();const r="order",a=r;let n=r;void 0!==e&&(n+=":"+(e=this.symbol(e)));const o=this.urls.api.ws,d={op:"subscribe",args:[a]},c=await this.watch(o,n,d,a);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleOrders(e,t){const i=this.safeValue(t,"data",[]),s="order",r=i.length;if(r>0){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const t=this.orders,n={};for(let e=0;e<r;e++){const s=i[e],r=this.safeString(s,"orderID"),a=this.safeValue(t.hashmap,r);let o=s;void 0!==a&&(o=this.extend(a.info,s));const d=this.parseOrder(o);t.append(d),n[d.symbol]=!0}e.resolve(this.orders,s);const o=Object.keys(n);for(let t=0;t<o.length;t++){const i=o[t];e.resolve(this.orders,s+":"+i)}}}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.authenticate();const r="execution",a=r;let n=r;void 0!==e&&(n+=":"+(e=this.symbol(e)));const o=this.urls.api.ws,d={op:"subscribe",args:[a]},c=await this.watch(o,n,d,a);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleMyTrades(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]),r=this.groupBy(s,"execType"),n=this.safeValue(r,"Trade",[]),o=this.parseTrades(n);if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new a.hl(e)}const d=this.myTrades,c={};for(let e=0;e<o.length;e++){const t=o[e],i=t.symbol;d.append(t),c[i]=t}o.length>0&&e.resolve(d,i);const h=Object.keys(c);for(let t=0;t<h.length;t++)e.resolve(d,i+":"+h[t])}async watchOrderBook(e,t=undefined,i={}){let s;if(void 0===t)s=this.safeString(this.options,"watchOrderBookLevel","orderBookL2");else if(25===t)s="orderBookL2_25";else{if(10!==t)throw new r.ExchangeError(this.id+" watchOrderBook limit argument must be undefined (L2), 25 (L2) or 10 (L3)");s="orderBookL10"}await this.loadMarkets();const a=s+":"+this.market(e).id,n=this.urls.api.ws,o={op:"subscribe",args:[a]};return(await this.watch(n,a,this.deepExtend(o,i),a)).limit()}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n="tradeBin"+this.safeString(this.timeframes,t,t)+":"+a.id,o=this.urls.api.ws,d={op:"subscribe",args:[n]},c=await this.watch(o,n,this.extend(d,r),n);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"table"),s=i.replace("tradeBin",""),r=this.findTimeframe(s),n=this.parseTimeframe(r),o=this.safeValue(t,"data",[]),d={};for(let e=0;e<o.length;e++){const t=o[e],s=this.safeString(t,"symbol"),c=this.safeMarket(s),h=c.symbol,u=i+":"+c.id,l=[this.parse8601(this.safeString(t,"timestamp"))-1e3*n,this.safeFloat(t,"open"),this.safeFloat(t,"high"),this.safeFloat(t,"low"),this.safeFloat(t,"close"),this.safeFloat(t,"volume")];this.ohlcvs[h]=this.safeValue(this.ohlcvs,h,{});let p=this.safeValue(this.ohlcvs[h],r);if(void 0===p){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);p=new a.Py(e),this.ohlcvs[h][r]=p}p.append(l),d[u]=p}const c=Object.keys(d);for(let t=0;t<c.length;t++){const i=c[t];e.resolve(d[i],i)}}async watchHeartbeat(e={}){await this.loadMarkets();const t=this.urls.api.ws;return await this.watch(t,"heartbeat")}handleOrderBook(e,t){const i=this.safeString(t,"action"),s=this.safeString(t,"table"),r=this.safeValue(t,"data",[]);if("partial"===i){const i=this.safeValue(t,"filter",{}),a=this.safeValue(i,"symbol"),n=this.safeMarket(a).symbol;"orderBookL2"===s?this.orderbooks[n]=this.indexedOrderBook():"orderBookL2_25"===s?this.orderbooks[n]=this.indexedOrderBook({},25):"orderBook10"===s&&(this.orderbooks[n]=this.indexedOrderBook({},10));const o=this.orderbooks[n];o.symbol=n;for(let e=0;e<r.length;e++){const t=this.safeFloat(r[e],"price"),i=this.safeFloat(r[e],"size"),s=this.safeString(r[e],"id");let a=this.safeString(r[e],"side");a="Buy"===a?"bids":"asks",o[a].store(t,i,s);const n=this.safeString(r[e],"timestamp");o.timestamp=this.parse8601(n),o.datetime=n}const d=s+":"+a;e.resolve(o,d)}else{const t={};for(let e=0;e<r.length;e++){const s=this.safeValue(r[e],"symbol");s in t||(t[s]=0),t[s]=this.sum(t,1);const a=this.safeMarket(s).symbol,n=this.orderbooks[a],o=this.safeFloat(r[e],"price"),d="delete"===i?0:this.safeFloat(r[e],"size",0),c=this.safeString(r[e],"id");let h=this.safeString(r[e],"side");h="Buy"===h?"bids":"asks",n[h].store(o,d,c);const u=this.safeString(r[e],"timestamp");n.timestamp=this.parse8601(u),n.datetime=u}const a=Object.keys(t);for(let t=0;t<a.length;t++){const i=a[t],r=s+":"+i,n=this.safeMarket(i).symbol,o=this.orderbooks[n];e.resolve(o,r)}}}handleSystemStatus(e,t){return t}handleSubscriptionStatus(e,t){return t}handleErrorMessage(e,t){const i=this.safeValue(t,"error");if(void 0!==i){const s=this.safeValue(t,"request",{}),a=this.safeValue(s,"args",[]);if(a.length>0){const t=a[0],s=this.exceptions.ws.broad,n=this.findBroadlyMatchedKey(s,i);let o;return o=void 0===n?new r.ExchangeError(i):new s[n](i),e.reject(o,t),!1}}return!0}handleMessage(e,t){if(this.handleErrorMessage(e,t)){const i=this.safeString(t,"table"),s={orderBookL2:this.handleOrderBook,orderBookL2_25:this.handleOrderBook,orderBook10:this.handleOrderBook,instrument:this.handleTicker,trade:this.handleTrades,tradeBin1m:this.handleOHLCV,tradeBin5m:this.handleOHLCV,tradeBin1h:this.handleOHLCV,tradeBin1d:this.handleOHLCV,order:this.handleOrders,execution:this.handleMyTrades,margin:this.handleBalance},r=this.safeValue(s,i);if(void 0===r){const i=this.safeValue(t,"request",{});return"authKeyExpires"===this.safeValue(i,"op")?this.handleAuthenticationMessage.call(this,e,t):t}return r.call(this,e,t)}}}},2191:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(172),r=i(6689),a=i(3020),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!1,watchOHLCV:!1,watchOrderBook:!0,watchOrders:!1,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{ws:{public:"wss://stream.bitopro.com:9443/ws/v1/pub",private:"wss://stream.bitopro.com:9443/ws/v1/pub/auth"}},requiredCredentials:{apiKey:!0,secret:!0,login:!0},options:{tradesLimit:1e3,ordersLimit:1e3,ws:{options:{headers:{}}}}})}async watchPublic(e,t,i){const s=this.urls.ws.public+"/"+e+"/"+i;return await this.watch(s,t,void 0,t)}async watchOrderBook(e,t=undefined,i={}){if(void 0!==t&&5!==t&&10!==t&&20!==t&&50!==t&&100!==t&&500!==t&&1e3!==t)throw new r.ExchangeError(this.id+" watchOrderBook limit argument must be undefined, 5, 10, 20, 50, 100, 500 or 1000");await this.loadMarkets();const s=this.market(e),a="ORDER_BOOK:"+(e=s.symbol);let n;return n=void 0===t?s.id:s.id+":"+t,(await this.watchPublic("order-books",a,n)).limit()}handleOrderBook(e,t){const i=this.safeString(t,"pair"),s=this.safeMarket(i,void 0,"_").symbol,r=this.safeString(t,"event")+":"+s;let a=this.safeValue(this.orderbooks,s);void 0===a&&(a=this.orderBook({}));const n=this.safeInteger(t,"timestamp"),o=this.parseOrderBook(t,s,n,"bids","asks","price","amount");a.reset(o),e.resolve(a,r)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a="TRADE:"+(e=r.symbol),n=await this.watchPublic("trades",a,r.id);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}handleTrade(e,t){const i=this.safeString(t,"pair"),s=this.safeMarket(i,void 0,"_"),r=s.symbol,n=this.safeString(t,"event")+":"+r,o=this.safeValue(t,"data",[]),d=this.parseTrades(o,s);let c=this.safeValue(this.trades,r);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new a.ZL(e)}for(let e=0;e<d.length;e++)c.append(d[e]);this.trades[r]=c,e.resolve(c,n)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s="TICKER:"+(e=i.symbol);return await this.watchPublic("tickers",s,i.id)}handleTicker(e,t){const i=this.safeString(t,"pair"),s=this.safeMarket(i,void 0,"_").symbol,r=this.safeString(t,"event")+":"+s,a=this.parseTicker(t),n=this.safeInteger(t,"timestamp"),o=this.safeString(t,"datetime");a.timestamp=n,a.datetime=o,this.tickers[s]=a,e.resolve(a,r)}authenticate(e){if(void 0!==this.clients&&e in this.clients)return;this.checkRequiredCredentials();const t=this.milliseconds(),i=this.json({nonce:t,identity:this.login}),s=this.stringToBase64(i),r=this.hmac(s,this.encode(this.secret),n.iC);this.options=this.extend({ws:{options:{headers:{}}}},this.options);const a=this.options.ws.options.headers,o={"X-BITOPRO-API":"ccxt","X-BITOPRO-APIKEY":this.apiKey,"X-BITOPRO-PAYLOAD":s,"X-BITOPRO-SIGNATURE":r};this.options.ws.options.headers=o,this.client(e),this.options.ws.options.headers=a}async watchBalance(e={}){this.checkRequiredCredentials(),await this.loadMarkets();const t="ACCOUNT_BALANCE",i=this.urls.ws.private+"/account-balance";return this.authenticate(i),await this.watch(i,t,void 0,t)}handleBalance(e,t){const i=this.safeString(t,"event"),s=this.safeValue(t,"data"),r=this.safeInteger(t,"timestamp"),a=this.safeString(t,"datetime"),n=Object.keys(s),o={info:s,timestamp:r,datetime:a};for(let e=0;e<n.length;e++){const t=this.safeString(n,e),i=this.safeValue(s,t),r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),d=this.account();d.free=this.safeString(i,"available"),d.total=this.safeString(i,"amount"),o[a]=d}this.balance=this.safeBalance(o),e.resolve(this.balance,i)}handleMessage(e,t){const i={TRADE:this.handleTrade,TICKER:this.handleTicker,ORDER_BOOK:this.handleOrderBook,ACCOUNT_BALANCE:this.handleBalance},s=this.safeString(t,"event"),r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}}},3005:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(854),r=i(3020),a=i(6689);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!1,watchTickers:!1,watchTrades:!1,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!1,watchOHLCV:!1},urls:{api:{open:"https://open.bitrue.com",ws:{public:"wss://ws.bitrue.com/market/ws",private:"wss://wsapi.bitrue.com"}}},api:{open:{private:{post:{"poseidon/api/v1/listenKey":1},put:{"poseidon/api/v1/listenKey/{listenKey}":1},delete:{"poseidon/api/v1/listenKey/{listenKey}":1}}}},options:{listenKeyRefreshRate:18e5,ws:{gunzip:!0}}})}async watchBalance(e={}){const t=await this.authenticate(),i="balance",s=this.deepExtend({event:"sub",params:{channel:"user_balance_update"}},e);return await this.watch(t,i,s,i)}handleBalance(e,t){const i=this.safeValue(t,"B",[]);this.parseWSBalances(i),e.resolve(this.balance,"balance")}parseWSBalances(e){this.balance.info=e;for(let t=0;t<e.length;t++){const i=e[t],s=this.safeString(i,"a"),r=this.safeCurrencyCode(s),a=this.account(),n=this.safeString(i,"F"),o=this.safeString(i,"L"),d=0!==this.safeInteger(i,"T",0),c=0!==this.safeInteger(i,"t",0);(d||c)&&(d&&(a.free=n),c&&(a.used=o),this.balance[r]=a)}this.balance=this.safeBalance(this.balance)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),void 0!==e&&(e=this.market(e).symbol);const r=await this.authenticate(),a="orders",n=this.deepExtend({event:"sub",params:{channel:"user_order_update"}},s),o=await this.watch(r,a,n,a);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleOrder(e,t){const i=this.parseWSOrder(t);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new r.hl(e)}this.orders.append(i),e.resolve(this.orders,"orders")}parseWSOrder(e,t=undefined){const i=this.safeInteger(e,"E"),s=this.safeStringUpper(e,"s"),r=this.safeString(e,"o"),a=1===this.safeInteger(e,"S")?"buy":"sell",n=this.safeString(e,"X"),o=this.safeString(e,"N");return this.safeOrder({info:e,id:this.safeString(e,"i"),clientOrderId:this.safeString(e,"c"),timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:this.safeInteger(e,"T"),symbol:this.safeSymbol(s,t),type:this.parseWSOrderType(r),timeInForce:void 0,postOnly:void 0,side:a,price:this.safeString(e,"p"),triggerPrice:void 0,amount:this.safeString(e,"q"),cost:this.safeString(e,"Y"),average:void 0,filled:this.safeString(e,"z"),remaining:void 0,status:this.parseWSOrderStatus(n),fee:{currency:this.safeCurrencyCode(o),cost:this.safeNumber(e,"n")}},t)}async watchOrderBook(e,t=undefined,i={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" watchOrderBook() requires a symbol argument");await this.loadMarkets();const s=this.market(e),r="orderbook:"+(e=s.symbol),n=s.id.toLowerCase(),o="market_"+n+"_simple_depth_step0",d=this.urls.api.ws.public,c={event:"sub",params:{cb_id:n,channel:o}},h=this.deepExtend(c,i);return await this.watch(d,r,h,r)}handleOrderBook(e,t){const i=this.safeString(t,"channel").split("_"),s=this.safeStringUpper(i,1),r=this.safeMarket(s).symbol,a=this.safeInteger(t,"ts"),n=this.safeValue(t,"tick",{}),o=this.parseOrderBook(n,r,a,"buys","asks");this.orderbooks[r]=o;const d="orderbook:"+r;e.resolve(o,d)}parseWSOrderType(e){return this.safeString({1:"limit",2:"market",3:"limit"},e,e)}parseWSOrderStatus(e){return this.safeString({0:"open",1:"open",2:"closed",3:"open",4:"canceled",7:"open"},e,e)}handlePing(e,t){this.spawn(this.pong,e,t)}async pong(e,t){const i={pong:this.safeInteger(t,"ping")};await e.send(i)}handleMessage(e,t){if("channel"in t)this.handleOrderBook(e,t);else if("ping"in t)this.handlePing(e,t);else{const i=this.safeString(t,"e"),s={BALANCE:this.handleBalance,ORDER:this.handleOrder},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}}async authenticate(e={}){if(void 0===this.safeValue(this.options,"listenKey")){let t;try{t=await this.openPrivatePostPoseidonApiV1ListenKey(e)}catch(e){return this.options.listenKey=void 0,void(this.options.listenKeyUrl=void 0)}const i=this.safeValue(t,"data",{}),s=this.safeString(i,"listenKey");this.options.listenKey=s,this.options.listenKeyUrl=this.urls.api.ws.private+"/stream?listenKey="+s;const r=this.safeInteger(this.options,"listenKeyRefreshRate",18e5);this.delay(r,this.keepAliveListenKey)}return this.options.listenKeyUrl}async keepAliveListenKey(e={}){const t={listenKey:this.safeString(this.options,"listenKey")};try{await this.openPrivatePutPoseidonApiV1ListenKeyListenKey(this.extend(t,e))}catch(e){return this.options.listenKey=void 0,void(this.options.listenKeyUrl=void 0)}const i=this.safeInteger(this.options,"listenKeyRefreshRate",18e5);this.delay(i,this.keepAliveListenKey)}}},3623:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(4667),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!0,watchTrades:!0,watchOHLCV:!1,watchTicker:!1,watchTickers:!1},urls:{api:{ws:"wss://ws.bitstamp.net"}},options:{expiresIn:"",userId:"",wsSessionToken:"",watchOrderBook:{snapshotDelay:6,maxRetries:3},tradesLimit:1e3,OHLCVLimit:1e3},exceptions:{exact:{4009:r.AuthenticationError}}})}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r="orderbook:"+(e=s.symbol),a="diff_order_book_"+s.id,n=this.urls.api.ws,o={event:"bts:subscribe",data:{channel:a}},d=this.extend(o,i);return(await this.watch(n,r,d,r)).limit()}handleOrderBook(e,t){const i=this.safeString(t,"channel").split("_"),s=this.safeString(i,3),r=this.safeSymbol(s),a=this.safeValue(this.orderbooks,r),n=this.safeValue(a,"nonce"),o=this.safeValue(t,"data"),d=this.safeInteger(o,"microtimestamp"),c="orderbook:"+r;if(void 0===n)return a.cache.length===this.handleOption("watchOrderBook","snapshotDelay",6)&&this.spawn(this.loadOrderBook,e,c,r),void a.cache.push(o);n>=d||(this.handleDelta(a,o),e.resolve(a,c))}handleDelta(e,t){const i=this.safeTimestamp(t,"timestamp");e.timestamp=i,e.datetime=this.iso8601(i),e.nonce=this.safeInteger(t,"microtimestamp");const s=this.safeValue(t,"bids",[]),r=this.safeValue(t,"asks",[]),a=e.bids,n=e.asks;this.handleBidAsks(a,s),this.handleBidAsks(n,r)}handleBidAsks(e,t){for(let i=0;i<t.length;i++){const s=this.parseBidAsk(t[i]);e.storeArray(s)}}getCacheIndex(e,t){const i=t[0],s=this.safeInteger(i,"microtimestamp"),r=this.safeInteger(e,"nonce");if(r<s)return-1;for(let e=0;e<t.length;e++){const i=t[e];if(this.safeInteger(i,"microtimestamp")===r)return e+1}return t.length}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a="trades:"+(e=r.symbol),n=this.urls.api.ws,o={event:"bts:subscribe",data:{channel:"live_trades_"+r.id}},d=this.extend(o,s),c=await this.watch(n,a,d,a);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,t,i,"timestamp",!0)}parseWsTrade(e,t=undefined){const i=this.safeInteger(e,"microtimestamp"),s=this.safeString(e,"id"),r=this.parseToInt(i/1e3),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=t.symbol,d=0===this.safeInteger(e,"type")?"buy":"sell";return this.safeTrade({info:e,timestamp:r,datetime:this.iso8601(r),symbol:o,id:s,order:void 0,type:void 0,takerOrMaker:void 0,side:d,price:a,amount:n,cost:void 0,fee:void 0},t)}handleTrade(e,t){const i=this.safeString(t,"channel").split("_"),s=this.safeString(i,2),r=this.safeMarket(s),n=r.symbol,o="trades:"+n,d=this.safeValue(t,"data"),c=this.parseWsTrade(d,r);let h=this.safeValue(this.trades,n);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a.ZL(e),this.trades[n]=h}h.append(c),e.resolve(h,o)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" watchOrders requires a symbol argument");await this.loadMarkets();const a=this.market(e);e=a.symbol;const n="private-my_orders",o=n+"_"+a.id,d={symbol:e,limit:i,type:n,params:s},c=await this.subscribePrivate(d,o,s);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,t,i,"timestamp",!0)}handleOrders(e,t){const i=this.safeString(t,"channel"),s=this.safeValue(t,"data",{}),r=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new a.hl(r));const n=this.orders,o=this.safeValue(e.subscriptions,i),d=this.safeString(o,"symbol"),c=this.market(d),h=this.parseWsOrder(s,c);n.append(h),e.resolve(this.orders,i)}parseWsOrder(e,t=undefined){const i=this.safeString(e,"id_str"),s=this.safeStringLower(e,"order_type"),r=this.safeString(e,"price_str"),a=this.safeString(e,"amount_str"),n="1"===s?"sell":"buy",o=this.safeTimestamp(e,"datetime"),d=(t=this.safeMarket(void 0,t)).symbol;return this.safeOrder({info:e,symbol:d,id:i,clientOrderId:void 0,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,type:void 0,timeInForce:void 0,postOnly:void 0,side:n,price:r,stopPrice:void 0,triggerPrice:void 0,amount:a,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0},t)}handleOrderBookSubscription(e,t){const i=this.safeString(t,"channel").split("_"),s=this.safeString(i,3),r=this.safeSymbol(s);this.orderbooks[r]=this.orderBook()}handleSubscriptionStatus(e,t){this.safeString(t,"channel").indexOf("order_book")>-1&&this.handleOrderBookSubscription(e,t)}handleSubject(e,t){const i=this.safeString(t,"channel"),s={live_trades:this.handleTrade,diff_order_book:this.handleOrderBook,"private-my_orders":this.handleOrders},r=Object.keys(s);for(let a=0;a<r.length;a++){const n=r[a];i.indexOf(n)>-1&&s[n].call(this,e,t)}}handleErrorMessage(e,t){if("bts:error"===this.safeString(t,"event")){const e=this.id+" "+this.json(t),i=this.safeValue(t,"data",{}),s=this.safeNumber(i,"code");this.throwExactlyMatchedException(this.exceptions.exact,s,e)}return t}handleMessage(e,t){if(this.handleErrorMessage(e,t))return"bts:subscription_succeeded"===this.safeString(t,"event")?this.handleSubscriptionStatus(e,t):this.handleSubject(e,t)}async authenticate(e={}){this.checkRequiredCredentials();const t=this.milliseconds(),i=this.safeInteger(this.options,"expiresIn");if(void 0===i||t>i){const i=await this.privatePostWebsocketsToken(e),s=this.safeString(i,"token");if(void 0!==s){const e=this.safeNumber(i,"user_id"),r=this.safeIntegerProduct(i,"valid_sec",1e3);return this.options.expiresIn=this.sum(t,r),this.options.userId=e,this.options.wsSessionToken=s,i}}}async subscribePrivate(e,t,i={}){const s=this.urls.api.ws;await this.authenticate();const r={event:"bts:subscribe",data:{channel:t+="-"+this.options.userId,auth:this.options.wsSessionToken}};return e.messageHash=t,await this.watch(s,t,this.extend(r,i),t,e)}}},2883:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(8963),r=i(6689),a=i(3020),n=i(7110),o=i(7348);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchHeartbeat:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{api:{ws:"wss://socket-v3.bittrex.com/signalr/connect",signalr:"https://socket-v3.bittrex.com/signalr"}},api:{signalr:{get:["negotiate","start"]}},options:{tradesLimit:1e3,hub:"c3",I:this.milliseconds()}})}getSignalRUrl(e){const t=this.safeString(e.response,"ConnectionToken"),i=this.extend(e.request,{connectionToken:t});return this.urls.api.ws+"?"+this.urlencode(i)}makeRequest(e,t,i){return{H:this.safeString(this.options,"hub","c3"),M:t,A:i,I:e}}makeRequestToSubscribe(e,t){return this.makeRequest(e,"Subscribe",t)}makeRequestToAuthenticate(e){const t=this.milliseconds(),i=this.uuid(),s=t.toString()+i,r=this.hmac(this.encode(s),this.encode(this.secret),n.o),a=[this.apiKey,t,i,r];return this.makeRequest(e,"Authenticate",a)}requestId(){const e=this.sum(this.safeInteger(this.options,"I",0),1);return this.options.I=e,e}async sendRequestToSubscribe(e,t,i,s={}){const r=[t],a=this.requestId().toString(),n=this.makeRequestToSubscribe(a,[r]);i=this.extend({id:a,negotiation:e},i);const o=this.getSignalRUrl(e);return await this.watch(o,t,n,t,i)}async authenticate(e={}){await this.loadMarkets();const t=await this.negotiate();return await this.sendRequestToAuthenticate(t,!1,e)}async sendRequestToAuthenticate(e,t=!1,i={}){const s=this.getSignalRUrl(e),r=this.client(s),a="authenticate";let n=this.safeValue(r.subscriptions,a);if(void 0===n||t){n=r.future(a),r.subscriptions[a]=n;const t=this.requestId().toString(),o=this.makeRequestToAuthenticate(t),d={id:t,params:i,negotiation:e,method:this.handleAuthenticate};this.spawn(this.watch,s,a,o,t,d)}return await n}async sendAuthenticatedRequestToSubscribe(e,t,i={}){const s=this.safeValue(e,"negotiation"),r={params:i};return await this.sendRequestToSubscribe(s,t,r,i)}handleAuthenticate(e,t,i){const s=this.safeString(i,"id");s in e.subscriptions&&delete e.subscriptions[s],e.resolve(i,"authenticate")}async handleAuthenticationExpiringHelper(){const e=await this.negotiate();return await this.sendRequestToAuthenticate(e,!0)}handleAuthenticationExpiring(e,t){this.spawn(this.handleAuthenticationExpiringHelper)}createSignalRQuery(e={}){const t=[{name:this.safeString(this.options,"hub","c3")}],i=this.milliseconds();return this.extend({transport:"webSockets",connectionData:this.json(t),clientProtocol:1.5,_:i,tid:this.sum(i%10,1)},e)}async negotiate(e={}){const t=this.client(this.urls.api.ws),i="negotiate";let s=this.safeValue(t.subscriptions,i);if(void 0===s){s=t.future(i),t.subscriptions[i]=s;const r=this.createSignalRQuery(e),a={request:r,response:await this.signalrGetNegotiate(this.extend(r,e))};t.resolve(a,i)}return await s}async start(e,t={}){const i=this.safeString(e.response,"ConnectionToken"),s=this.createSignalRQuery(this.extend(e.request,{connectionToken:i}));return await this.signalrGetStart(s)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),void 0!==e&&(e=this.symbol(e));const r=await this.authenticate(),a=await this.subscribeToOrders(r,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}async subscribeToOrders(e,t={}){return await this.sendAuthenticatedRequestToSubscribe(e,"order",t)}handleOrder(e,t){const i=this.safeValue(t,"delta",{}),s=this.parseOrder(i);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}this.orders.append(s),e.resolve(this.orders,"order")}async watchBalance(e={}){await this.loadMarkets();const t=await this.authenticate();return await this.subscribeToBalance(t,e)}async subscribeToBalance(e,t={}){return await this.sendAuthenticatedRequestToSubscribe(e,"balance",t)}handleBalance(e,t){const i=this.safeValue(t,"delta",{});this.balance.info=i;const s=this.safeString(i,"currencySymbol"),r=this.safeCurrencyCode(s),a=this.account();a.free=this.safeString(i,"available"),a.total=this.safeString(i,"total"),this.balance[r]=a,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}async watchHeartbeat(e={}){await this.loadMarkets();const t=await this.negotiate();return await this.subscribeToHeartbeat(t,e)}async subscribeToHeartbeat(e,t={}){await this.loadMarkets();const i=this.getSignalRUrl(e),s=this.milliseconds().toString(),r="heartbeat",a=[r],n=this.makeRequestToSubscribe(s,[a]),o={id:s,params:t,negotiation:e};return await this.watch(i,r,n,r,o)}handleHeartbeat(e,t){e.resolve(t,"heartbeat")}async watchTicker(e,t={}){await this.loadMarkets();const i=await this.negotiate();return await this.subscribeToTicker(i,e,t)}async subscribeToTicker(e,t,i={}){await this.loadMarkets();const s=this.market(t);t=s.symbol;const r="ticker_"+s.id,a={marketId:s.id,symbol:t,params:i};return await this.sendRequestToSubscribe(e,r,a)}handleTicker(e,t){const i=this.parseTicker(t),s=i.symbol,r=this.market(s);this.tickers[s]=i;const a="ticker_"+r.id;e.resolve(i,a)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets(),e=this.symbol(e);const a=await this.negotiate(),n=await this.subscribeToOHLCV(a,e,t,r);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,i,s,0,!0)}async subscribeToOHLCV(e,t,i="1m",s={}){await this.loadMarkets();const r=this.market(t),a=this.safeString(this.timeframes,i,i),n="candle_"+r.id+"_"+a,o={symbol:t,timeframe:i,messageHash:n,params:s};return await this.sendRequestToSubscribe(e,n,o)}handleOHLCV(e,t){const i=this.safeString(t,"marketSymbol"),s=this.safeSymbol(i,void 0,"-"),r=this.safeString(t,"interval"),n="candle_"+i+"_"+r,o=this.findTimeframe(r),d=this.safeValue(t,"delta",{}),c=this.parseOHLCV(d);this.ohlcvs[s]=this.safeValue(this.ohlcvs,s,{});let h=this.safeValue(this.ohlcvs[s],o);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new a.Py(e),this.ohlcvs[s][o]=h}h.append(c),e.resolve(h,n)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.negotiate(),a=await this.subscribeToTrades(r,e,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}async subscribeToTrades(e,t,i={}){await this.loadMarkets();const s="trade_"+this.market(t).id,r={symbol:t,messageHash:s,params:i};return await this.sendRequestToSubscribe(e,s,r)}handleTrades(e,t){const i=this.safeValue(t,"deltas",[]),s=this.safeString(t,"marketSymbol"),r=this.safeSymbol(s,void 0,"-"),n=this.market(r),o="trade_"+s;let d=this.safeValue(this.trades,r);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a.ZL(e)}const c=this.parseTrades(i,n);for(let e=0;e<c.length;e++)d.append(c[e]);this.trades[r]=d,e.resolve(d,o)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.authenticate(),a=await this.subscribeToMyTrades(r,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySymbolSinceLimit(a,e,t,i,!0)}async subscribeToMyTrades(e,t={}){return await this.sendAuthenticatedRequestToSubscribe(e,"execution",t)}handleMyTrades(e,t){const i=this.safeValue(t,"deltas",{}),s=this.parseTrades(i);let r=this.myTrades;if(void 0===r){const e=this.safeInteger(this.options,"tradesLimit",1e3);r=new a.hl(e),this.myTrades=r}for(let e=0;e<s.length;e++)r.append(s[e]);e.resolve(r,"execution")}async watchOrderBook(e,t=undefined,i={}){if(1!==(t=void 0===t?25:t)&&25!==t&&500!==t)throw new r.BadRequest(this.id+" watchOrderBook() limit argument must be undefined, 1, 25 or 500, default is 25");await this.loadMarkets(),e=this.symbol(e);const s=await this.negotiate();return(await this.subscribeToOrderBook(s,e,t,i)).limit()}async subscribeToOrderBook(e,t,i=undefined,s={}){await this.loadMarkets();const r="orderbook_"+this.market(t).id+"_"+i.toString(),a={symbol:t,messageHash:r,method:this.handleSubscribeToOrderBook,limit:i,params:s};return await this.sendRequestToSubscribe(e,r,a)}async fetchOrderBookSnapshot(e,t,i){const s=this.safeString(i,"symbol"),a=this.safeInteger(i,"limit"),n=this.safeString(i,"messageHash");try{const o=await this.fetchOrderBook(s,a),d=this.orderbooks[s],c=d.cache,h=this.safeValue(c,0,{}),u=this.safeInteger(h,"sequence"),l=this.safeInteger(o,"nonce");if(void 0!==u&&l<u){const a=this.safeValue(this.options,"fetchOrderBookSnapshot",{}),o=this.safeInteger(a,"maxAttempts",3);let d=this.safeInteger(i,"numAttempts",0);if(!(d<o))throw new r.InvalidNonce(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+s+" in "+o.toString()+" attempts");n in e.subscriptions&&(d=this.sum(d,1),i.numAttempts=d,e.subscriptions[n]=i,this.spawn(this.fetchOrderBookSnapshot,e,t,i))}else{d.reset(o);for(let t=0;t<c.length;t++){const i=c[t];this.handleOrderBookMessage(e,i,d)}this.orderbooks[s]=d,e.resolve(d,n)}}catch(t){e.reject(t,n)}}handleSubscribeToOrderBook(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");s in this.orderbooks&&delete this.orderbooks[s],this.orderbooks[s]=this.orderBook({},r),this.spawn(this.fetchOrderBookSnapshot,e,t,i)}handleDelta(e,t){const i=this.safeFloat(t,"rate"),s=this.safeFloat(t,"quantity");e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){const i=this.safeString(t,"marketSymbol"),s=this.safeSymbol(i,void 0,"-"),r=this.safeInteger(t,"depth");let a=this.safeValue(this.orderbooks,s);void 0===a&&(a=this.orderBook({},r)),void 0!==a.nonce?this.handleOrderBookMessage(e,t,a):a.cache.push(t)}handleOrderBookMessage(e,t,i){const s="orderbook_"+this.safeString(t,"marketSymbol")+"_"+this.safeString(t,"depth"),r=this.safeInteger(t,"sequence");return r>i.nonce&&(this.handleDeltas(i.asks,this.safeValue(t,"askDeltas",[])),this.handleDeltas(i.bids,this.safeValue(t,"bidDeltas",[])),i.nonce=r,e.resolve(i,s)),i}async handleSystemStatusHelper(){const e=await this.negotiate();await this.start(e)}handleSystemStatus(e,t){return this.spawn(this.handleSystemStatusHelper),t}handleSubscriptionStatus(e,t){const i=this.safeString(t,"I");let s=this.safeValue(e.subscriptions,i);if(void 0===s){const t=this.indexBy(e.subscriptions,"id");s=this.safeValue(t,i,{})}else delete e.subscriptions[i];const r=this.safeValue(s,"method");return void 0===r?e.resolve(t,i):r.call(this,e,t,s),t}handleMessage(e,t){const i={authenticationExpiring:this.handleAuthenticationExpiring,order:this.handleOrder,balance:this.handleBalance,trade:this.handleTrades,candle:this.handleOHLCV,orderBook:this.handleOrderBook,heartbeat:this.handleHeartbeat,ticker:this.handleTicker,execution:this.handleMyTrades},s=this.safeValue(t,"M",[]);for(let r=0;r<s.length;r++){const a=this.safeValue(s[r],"M"),n=this.safeValue(i,a);if(void 0!==n)if("heartbeat"===a)n.call(this,e,t);else if("authenticationExpiring"===a)n.call(this,e,t);else{const t=this.safeValue(s[r],"A",[]);for(let i=0;i<t.length;i++){const s=this.decode((0,o.n)(this.base64ToBinary(t[i]))),r=JSON.parse(s);n.call(this,e,r)}}}"I"in t&&this.handleSubscriptionStatus(e,t),"S"in t&&this.handleSystemStatus(e,t),Object.keys(t).length<1&&this.handleHeartbeat(e,t)}}},6977:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(9943),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchTicker:!0,watchOHLCV:!0,watchOrders:!0,watchMyTrades:!0},urls:{api:{ws:"wss://ws.bitvavo.com/v2"}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3}})}async watchPublic(e,t,i={}){await this.loadMarkets();const s=this.market(t),r=e+"@"+s.id,a=this.urls.api.ws,n={action:"subscribe",channels:[{name:e,markets:[s.id]}]},o=this.extend(n,i);return await this.watch(a,r,o,r)}async watchTicker(e,t={}){return await this.watchPublic("ticker24h",e,t)}handleTicker(e,t){const i=this.safeString(t,"event"),s=this.safeValue(t,"data",[]);for(let t=0;t<s.length;t++){const r=s[t],a=this.safeString(r,"market"),n=this.safeMarket(a,void 0,"-"),o=i+"@"+a,d=this.parseTicker(r,n),c=d.symbol;this.tickers[c]=d,e.resolve(d,o)}return t}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.watchPublic("trades",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}handleTrade(e,t){const i=this.safeString(t,"market"),s=this.safeMarket(i,void 0,"-"),r=s.symbol,n="trades@"+i,o=this.parseTrade(t,s);let d=this.safeValue(this.trades,r);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a.ZL(e)}d.append(o),this.trades[r]=d,e.resolve(d,n)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=a.id,o=this.safeString(this.timeframes,t,t),d="candles@"+n+"_"+o,c=this.urls.api.ws,h={action:"subscribe",channels:[{name:"candles",interval:[o],markets:[n]}]},u=this.extend(h,r),l=await this.watch(c,d,u,d);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"market"),s=this.safeMarket(i,void 0,"-"),r=s.symbol,n=this.safeString(t,"interval"),o=this.findTimeframe(n),d="candles@"+i+"_"+n,c=this.safeValue(t,"candle");this.ohlcvs[r]=this.safeValue(this.ohlcvs,r,{});let h=this.safeValue(this.ohlcvs[r],o);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new a.Py(e),this.ohlcvs[r][o]=h}for(let e=0;e<c.length;e++){const t=c[e],i=this.parseOHLCV(t,s);h.append(i)}e.resolve(h,d)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const r="book",a=r+"@"+s.id,n=this.urls.api.ws,o={action:"subscribe",channels:[{name:r,markets:[s.id]}]},d={messageHash:a,name:r,symbol:e,marketId:s.id,method:this.handleOrderBookSubscription,limit:t,params:i},c=this.extend(o,i);return(await this.watch(n,a,c,a,d)).limit()}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){const s=this.safeInteger(t,"nonce");return s>i.nonce&&(this.handleDeltas(i.asks,this.safeValue(t,"asks",[])),this.handleDeltas(i.bids,this.safeValue(t,"bids",[])),i.nonce=s),i}handleOrderBook(e,t){const i=this.safeString(t,"event"),s=this.safeString(t,"market"),r=this.safeMarket(s,void 0,"-"),a=r.symbol,n=i+"@"+r.id,o=this.safeValue(this.orderbooks,a);if(void 0!==o)if(void 0===o.nonce){const i=this.safeValue(e.subscriptions,n,{});if(void 0===this.safeValue(i,"watchingOrderBookSnapshot")){i.watchingOrderBookSnapshot=!0,e.subscriptions[n]=i;const s=this.safeValue(this.options,"watchOrderBookSnapshot",{}),r=this.safeInteger(s,"delay",this.rateLimit);this.delay(r,this.watchOrderBookSnapshot,e,t,i)}o.cache.push(t)}else this.handleOrderBookMessage(e,t,o),e.resolve(o,n)}async watchOrderBookSnapshot(e,t,i){const s=this.safeValue(i,"params"),r=this.safeString(i,"marketId"),a="getBook",n=a+"@"+r,o=this.urls.api.ws,d={action:a,market:r};return(await this.watch(o,n,this.extend(d,s),n,i)).limit()}handleOrderBookSnapshot(e,t){const i=this.safeValue(t,"response");if(void 0===i)return t;const s=this.safeString(i,"market"),r=this.safeSymbol(s,void 0,"-"),a="book@"+s,n=this.orderbooks[r],o=this.parseOrderBook(i,r);o.nonce=this.safeInteger(i,"nonce"),n.reset(o);const d=n.cache;for(let t=0;t<d.length;t++){const i=d[t];this.handleOrderBookMessage(e,i,n)}this.orderbooks[r]=n,e.resolve(n,a)}handleOrderBookSubscription(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");s in this.orderbooks&&delete this.orderbooks[s],this.orderbooks[s]=this.orderBook({},r)}handleOrderBookSubscriptions(e,t,i){for(let s=0;s<i.length;s++){const r=this.safeString(i,s),a="book@"+r;if(!(this.safeSymbol(r,void 0,"-")in this.orderbooks)){const i=this.safeValue(e.subscriptions,a),s=this.safeValue(i,"method");void 0!==s&&s.call(this,e,t,i)}}}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" watchOrders requires a symbol argument");await this.loadMarkets(),await this.authenticate();const a=this.market(e);e=a.symbol;const n=a.id,o=this.urls.api.ws,d="order:"+e,c={action:"subscribe",channels:[{name:"account",markets:[n]}]},h=await this.watch(o,d,c,d);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" watchMyTrades requires a symbol argument");await this.loadMarkets(),await this.authenticate();const a=this.market(e);e=a.symbol;const n=a.id,o=this.urls.api.ws,d="myTrades:"+e,c={action:"subscribe",channels:[{name:"account",markets:[n]}]},h=await this.watch(o,d,c,d);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleOrder(e,t){const i=this.safeString(t,"market"),s=this.safeMarket(i,void 0,"-"),r="order:"+s.symbol,n=this.parseOrder(t,s);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}this.orders.append(n),e.resolve(this.orders,r)}handleMyTrade(e,t){const i=this.safeString(t,"market"),s=this.safeMarket(i,void 0,"-"),r="myTrades:"+s.symbol,n=this.parseTrade(t,s);if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new a.ZL(e)}const o=this.myTrades;o.append(n),e.resolve(o,r)}handleSubscriptionStatus(e,t){const i=this.safeValue(t,"subscriptions",{}),s={book:this.handleOrderBookSubscriptions},r=Object.keys(i);for(let a=0;a<r.length;a++){const n=r[a],o=this.safeValue(s,n);if(void 0!==o){const s=this.safeValue(i,n);o.call(this,e,t,s)}}return t}authenticate(e={}){const t=this.urls.api.ws,i=this.client(t),s="authenticated";let r=this.safeValue(i.subscriptions,s);if(void 0===r){const a=this.milliseconds(),o=a.toString()+"GET/"+this.version+"/websocket",d=this.hmac(this.encode(o),this.encode(this.secret),n.J),c={action:"authenticate",key:this.apiKey,signature:d,timestamp:a},h=this.extend(c,e);r=this.watch(t,s,h),i.subscriptions[s]=r}return r}handleAuthenticationMessage(e,t){const i="authenticated";if(this.safeValue(t,"authenticated",!1))e.resolve(t,i);else{const s=new r.AuthenticationError(this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions[i]}}handleMessage(e,t){const i={subscribed:this.handleSubscriptionStatus,book:this.handleOrderBook,getBook:this.handleOrderBookSnapshot,trade:this.handleTrade,candle:this.handleOHLCV,ticker24h:this.handleTicker,authenticate:this.handleAuthenticationMessage,order:this.handleOrder,fill:this.handleMyTrade},s=this.safeString(t,"event");let r=this.safeValue(i,s);if(void 0===r){const s=this.safeString(t,"action");return r=this.safeValue(i,s),void 0===r?t:r.call(this,e,t)}return r.call(this,e,t)}}},4463:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(1393),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://api.btcex.com/ws/api/v1"}},options:{watchOrderBook:{snapshotDelay:0,maxRetries:3}},streaming:{ping:this.ping,keepAlive:5e3},exceptions:{},timeframes:{"1m":"1","3m":"3","5m":"4","10m":"10","15m":"15","30m":"30","1h":"60","2h":"120","3h":"180","4h":"240","6h":"360","12h":"720","1d":"1D"}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchBalance(e={}){const t=await this.authenticate(e);let i;[i,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);const s=this.safeValue(this.options,"accountsByType",{}),r=this.safeString(s,i,i);e=this.omit(e,"type");const a="balancess",n=this.urls.api.ws,o={jsonrpc:"2.0",id:this.requestId(),method:"/private/subscribe",params:{access_token:t,channels:["user.asset."+r]}},d=this.deepExtend(o,e);return await this.watch(n,a,d,a,d)}handleBalance(e,t){const i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",{});this.balance=this.parseBalance(s),e.resolve(this.balance,"balancess")}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;let n=a.id;a.spot&&(n=a.baseId+"-"+a.quoteId);const o=this.safeString(this.timeframes,t,t),d="ohlcv:"+e+":"+o;let c={jsonrpc:"2.0",id:this.requestId(),method:"/public/subscribe",params:{channels:["chart.trades."+n+"."+o]}};c=this.deepExtend(c,r);const h=this.urls.api.ws,u=await this.watch(h,d,c,d,c);return this.newUpdates&&(s=u.getLimit(e,s)),this.filterBySinceLimit(u,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"params"),s=this.safeString(i,"channel").slice(13),r=s.indexOf("."),n=s.slice(0,r),o=s.slice(r+1),d=this.findTimeframe(o),c=this.safeSymbol(n,void 0,"-"),h="ohlcv:"+c+":"+o,u=this.safeValue(i,"data",{}),l=this.parseOHLCV(u);this.ohlcvs[c]=this.safeValue(this.ohlcvs,c,{});let p=this.safeValue(this.ohlcvs[c],d);if(void 0===p){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);p=new a.Py(e),this.ohlcvs[c][d]=p}p.append(l),e.resolve(p,h)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;let s=i.id;i.spot&&(s=i.baseId+"-"+i.quoteId);const r=this.urls.api.ws,a="ticker:"+e;let n={jsonrpc:"2.0",id:this.requestId(),method:"/public/subscribe",params:{channels:["ticker."+s+".raw"]}};return n=this.deepExtend(n,t),await this.watch(r,a,n,a)}handleTicker(e,t){const i=this.safeValue(t,"params"),s=this.safeValue(i,"data"),r=this.parseTicker(s),a=this.safeString(r,"symbol"),n="ticker:"+a;this.tickers[a]=r,e.resolve(r,n)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=this.urls.api.ws,n="trades:"+e;let o={jsonrpc:"2.0",id:this.requestId(),method:"/public/subscribe",params:{channels:["trades."+r.id+".raw"]}};o=this.deepExtend(o,s);const d=await this.watch(a,n,o,n,o);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"params",{}),s=this.safeString(i,"channel").split(".")[1],r=this.safeSymbol(s),n="trades:"+r;let o=this.safeValue(this.trades,r);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new a.ZL(e),this.trades[r]=o}const d=this.safeValue(i,"data",[]);for(let e=0;e<d.length;e++){const t=d[e],i=this.parseTrade(t,void 0);o.append(i)}this.trades[r]=o,e.resolve(o,n)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" watchMyTrades() requires a symbol argument");await this.loadMarkets();const a=await this.authenticate(),n=this.market(e);e=n.symbol;const o=this.urls.api.ws,d="myTrades:"+e,c={jsonrpc:"2.0",id:this.requestId(),method:"/private/subscribe",params:{access_token:a,channels:["user.trades."+n.id+".raw"]}},h=await this.watch(o,d,c,d);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleMyTrades(e,t){const i=this.safeValue(t,"params",{}),s=this.safeString(i,"channel",""),r=s.indexOf(".raw"),n=s.slice(12,r),o=this.safeSymbol(n,void 0,"-"),d=this.safeValue(i,"data",[]);let c=this.myTrades;if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new a.hl(e)}for(let e=0;e<d.length;e++){const t=d[e],i=this.parseTrade(t);c.append(i)}this.myTrades=c;const h="myTrades:"+o;e.resolve(c,h)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+"watchesOrders() requires a symbol");await this.loadMarkets();const a=await this.authenticate(),n=this.market(e);e=n.symbol;const o=this.urls.api.ws,d={jsonrpc:"2.0",id:this.requestId(),method:"/private/subscribe",params:{access_token:a,channels:["user.orders."+n.id+".raw"]}},c="orders:"+e,h=this.deepExtend(d,s),u=await this.watch(o,c,h,c);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySymbolSinceLimit(u,e,t,i,!0)}handleOrder(e,t){const i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",{});let r=this.orders;if(void 0===r){const e=this.safeInteger(this.options,"ordersLimit",1e3);r=new a.hl(e)}const n=this.parseOrder(s),o="orders:"+this.safeString(n,"symbol");r.append(n),this.orders=r,e.resolve(this.orders,o)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;let r=s.id;s.spot&&(r=s.baseId+"-"+s.quoteId);const a=this.urls.api.ws;i=this.omit(i,"type");const n="orderbook:"+e,o={jsonrpc:"2.0",id:this.requestId(),method:"/public/subscribe",params:{channels:["book."+r+".raw"]}},d=this.deepExtend(o,i);return(await this.watch(a,n,d,n)).limit()}handleOrderBook(e,t){const i=this.safeValue(t,"params"),s=this.safeValue(i,"data"),r=this.safeString(s,"instrument_name"),a=this.safeSymbol(r,void 0,"-"),n=this.safeValue(this.orderbooks,a),o=this.safeInteger(n,"nonce"),d=this.safeInteger(s,"change_id"),c="orderbook:"+a;if(void 0!==o)d<=o||(this.handleDelta(n,s),e.resolve(n,c));else{if(n.cache.length===this.handleOption("watchOrderBook","snapshotDelay",0)){const t=0;this.spawn(this.loadOrderBook,e,c,a,t)}n.cache.push(s)}}getCacheIndex(e,t){const i=t[0];let s=this.safeInteger(i,"change_id");const r=this.safeInteger(e,"nonce");if(r<s-1)return-1;for(let e=0;e<t.length;e++){const i=t[e];if(s=this.safeInteger(i,"change_id"),r===s-1)return e}return t.length}handleDelta(e,t){const i=this.safeInteger(t,"timestamp");e.timestamp=i,e.datetime=this.iso8601(i),e.nonce=this.safeInteger(t,"change_id");const s=this.safeValue(t,"bids",[]),r=this.safeValue(t,"asks",[]),a=e.bids,n=e.asks;this.handleBidAsks(a,s),this.handleBidAsks(n,r)}handleBidAsks(e,t){for(let i=0;i<t.length;i++){const s=this.parseBidAsk(t[i],1,2);e.storeArray(s)}}handleUser(e,t){const i=this.safeValue(t,"params"),s=this.safeString(i,"channel").slice(5),a=s.indexOf("."),n=s.slice(0,a),o={asset:this.handleBalance,orders:this.handleOrder,trades:this.handleMyTrades},d=this.safeValue(o,n);if(void 0!==d)return d.call(this,e,t);throw new r.NotSupported(this.id+" received an unsupported message: "+this.json(t))}handleErrorMessage(e,t){const i=this.safeValue(t,"error",{});throw new r.ExchangeError(this.id+" error: "+this.json(i))}handleAuthenticate(e,t){const i=this.safeValue(t,"result",{}),s=this.safeInteger(i,"expires_in",0);this.options.expiresAt=1e3*this.sum(this.seconds(),s);const r=this.safeString(i,"access_token");e.resolve(r,"authenticated")}handleSubscription(e,t){const i=this.safeValue(t,"result",[]);for(let e=0;e<i.length;e++){const t=i[e].split("."),s=this.safeString(t,0),r=this.safeString(t,1);if("book"===s){const e=this.safeSymbol(r,void 0,"-");this.orderbooks[e]=this.orderBook({})}}}handlePong(e,t){e.lastPong=this.milliseconds()}handleMessage(e,t){if("PONG"===t)return void this.handlePong(e,t);if(void 0!==this.safeValue(t,"error"))return this.handleErrorMessage(e,t);const i=this.safeValue(t,"result",{});if(void 0!==this.safeString(i,"access_token"))return this.handleAuthenticate(e,t);if("subscription"===this.safeString(t,"method")){const i=this.safeValue(t,"params"),s=this.safeString(i,"channel").split("."),r=this.safeString(s,0),a={ticker:this.handleTicker,trades:this.handleTrades,chart:this.handleOHLCV,balances:this.handleBalance,trading:this.handleOrder,user:this.handleUser,book:this.handleOrderBook},n=this.safeValue(a,r);if(void 0!==n)return n.call(this,e,t)}else"result"in t&&this.handleSubscription(e,t);return t}authenticate(e={}){const t=this.urls.api.ws,i=this.client(t),s="authenticated",r=this.safeNumber(this.options,"expiresAt"),a=this.milliseconds();let n=this.safeValue(i.subscriptions,s);if(void 0===n||r<=a){const r={jsonrpc:"2.0",id:this.requestId(),method:"/public/auth",params:{grant_type:"client_credentials",client_id:this.apiKey,client_secret:this.secret}},a=this.extend(r,e);n=this.watch(t,s,a),i.subscriptions[s]=n}return n}ping(e){return"PING"}}},5030:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(3527),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchPosition:void 0},urls:{api:{ws:{public:{spot:"wss://stream.{hostname}/v5/public/spot",inverse:"wss://stream.{hostname}/v5/public/inverse",option:"wss://stream.{hostname}/v5/public/option",linear:"wss://stream.{hostname}/v5/public/linear"},private:{spot:{unified:"wss://stream.{hostname}/v5/private",nonUnified:"wss://stream.{hostname}/spot/private/v3"},contract:"wss://stream.{hostname}/v5/private",usdc:"wss://stream.{hostname}/trade/option/usdc/private/v1"}}},test:{ws:{public:{spot:"wss://stream-testnet.{hostname}/v5/public/spot",inverse:"wss://stream-testnet.{hostname}/v5/public/inverse",linear:"wss://stream-testnet.{hostname}/v5/public/linear",option:"wss://stream-testnet.{hostname}/v5/public/option"},private:{spot:{unified:"wss://stream-testnet.{hostname}/v5/private",nonUnified:"wss://stream-testnet.{hostname}/spot/private/v3"},contract:"wss://stream-testnet.{hostname}/v5/private",usdc:"wss://stream-testnet.{hostname}/trade/option/usdc/private/v1"}}}},options:{watchTicker:{name:"tickers"},spot:{timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"}},contract:{timeframes:{"1m":"1","3m":"3","5m":"5","15m":"15","30m":"30","1h":"60","2h":"120","4h":"240","6h":"360","12h":"720","1d":"D","1w":"W","1M":"M"}}},streaming:{ping:this.ping,keepAlive:2e4},exceptions:{ws:{exact:{}}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}getUrlByMarketType(e=undefined,t=!1,i=undefined,s={}){const r=t?"private":"public";let a,n,o,d,c=this.urls.api.ws;if(void 0!==e)d=this.market(e),a="USDC"===d.settle,o=d.type;else{[o,s]=this.handleMarketTypeAndParams(i,void 0,s);let e=this.safeString(this.options,"defaultSettle");e=this.safeString2(s,"settle","defaultSettle",e),a="USDC"===e}if(n="spot"===o,t)c=a?c[r].usdc:c[r].contract;else if(n)c=c[r].spot;else if("swap"===o){let e;[e,s]=this.handleSubTypeAndParams(i,d,s,"linear"),c=c[r][e]}else c=c[r].option;return c=this.implodeHostname(c),c}cleanParams(e){return this.omit(e,["type","subType","settle","defaultSettle","unifiedMargin"])}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s="ticker:"+i.symbol,a=this.getUrlByMarketType(e,!1,t);t=this.cleanParams(t);const n=this.safeValue(this.options,"watchTicker",{});let o=this.safeString(n,"name","tickers");if(!i.spot&&"tickers"!==o)throw new r.BadRequest(this.id+" watchTicker() only supports name tickers for contract markets");o+="."+i.id;const d=[o];return await this.watchTopics(a,s,d,t)}handleTicker(e,t){const i=this.safeString(t,"topic",""),s=this.safeString(t,"type",""),r=this.safeValue(t,"data",{}),a=void 0!==this.safeString(r,"s");let n,o;if("snapshot"===s||a)o=this.parseTicker(r),n=o.symbol;else if("delta"===s){const e=i.split("."),t=e.length,s=this.safeString(e,t-1);n=this.market(s).symbol;const a=this.safeValue(this.tickers,n,{}),d=this.safeValue(a,"info",{}),c=this.extend(d,r);o=this.parseTicker(c)}const d=this.safeInteger(t,"ts");o.timestamp=d,o.datetime=this.iso8601(d),this.tickers[n]=o;const c="ticker:"+n;e.resolve(this.tickers[n],c)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.getUrlByMarketType(e,!1,r);let o;r=this.cleanParams(r);const d=this.safeString(this.timeframes,t,t),c=["kline."+d+"."+a.id],h="kline:"+d+":"+e;return o=await this.watchTopics(n,h,c,r),this.newUpdates&&(s=o.getLimit(e,s)),this.filterBySinceLimit(o,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(t,"topic").split("."),r=s.length,n=this.safeString(s,1),o=this.safeString(s,r-1),d=e.url.indexOf("spot")>-1?"spot":"contract",c=this.safeMarket(o,void 0,void 0,d).symbol,h=this.safeValue(this.ohlcvs,c);void 0===h&&(this.ohlcvs[c]={});let u=this.safeValue(h,n);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new a.Py(e),this.ohlcvs[c][n]=u}for(let e=0;e<i.length;e++){const t=this.parseWsOHLCV(i[e]);u.append(t)}const l="kline:"+n+":"+c;e.resolve(u,l)}parseWsOHLCV(e){return[this.safeInteger(e,"timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber2(e,"volume","turnover")]}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const a=this.getUrlByMarketType(e,!1,i);i=this.cleanParams(i);const n="orderbook:"+e;if(void 0===t)t=s.spot?50:500;else if(!s.spot&&1!==t&&50!==t&&200!==t&&500!==t)throw new r.BadRequest(this.id+" watchOrderBook() can only use limit 1, 50, 200 and 500.");const o=["orderbook."+t.toString()+"."+s.id];return(await this.watchTopics(a,n,o,i)).limit()}handleOrderBook(e,t){const i=e.url.indexOf("spot")>=0,s="snapshot"===this.safeString(t,"type"),r=this.safeValue(t,"data",{}),a=this.safeString(r,"s"),n=i?"spot":"contract",o=this.safeMarket(a,void 0,void 0,n).symbol,d=this.safeInteger(t,"ts");let c=this.safeValue(this.orderbooks,o);if(void 0===c&&(c=this.orderBook()),s){const e=this.parseOrderBook(r,o,d,"b","a");c.reset(e)}else{const e=this.safeValue(r,"a",[]),t=this.safeValue(r,"b",[]);this.handleDeltas(c.asks,e),this.handleDeltas(c.bids,t),c.timestamp=d,c.datetime=this.iso8601(d)}const h="orderbook:"+o;this.orderbooks[o]=c,e.resolve(c,h)}handleDelta(e,t){const i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=this.getUrlByMarketType(e,!1,s);s=this.cleanParams(s);const n="trade:"+e,o="publicTrade."+r.id,d=await this.watchTopics(a,n,[o],s);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(t,"topic").split("."),r=e.url.indexOf("spot")>=0?"spot":"contract",n=this.safeString(s,1),o=this.safeMarket(n,void 0,void 0,r),d=o.symbol;let c=this.safeValue(this.trades,d);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new a.ZL(e),this.trades[d]=c}for(let e=0;e<i.length;e++){const t=this.parseWsTrade(i[e],o);c.append(t)}const h="trade:"+d;e.resolve(c,h)}parseWsTrade(e,t=undefined){const i=this.safeStringN(e,["i","T","v"]);let s="BT"in e?"contract":"spot";void 0!==t&&(s=t.type);const r=this.safeString(e,"s"),a=(t=this.safeMarket(r,t,void 0,s)).symbol,n=this.safeInteger2(e,"t","T");let o,d=this.safeStringLower(e,"S");const c=this.safeValue(e,"m");void 0===d?d=c?"buy":"sell":o=c;const h=this.safeString(e,"p"),u=this.safeString2(e,"q","v"),l=this.safeString(e,"o");return this.safeTrade({id:i,info:e,timestamp:n,datetime:this.iso8601(n),symbol:a,order:l,type:void 0,side:d,takerOrMaker:o,price:h,amount:u,cost:void 0,fee:void 0},t)}getPrivateType(e){return e.indexOf("spot")>=0?"spot":e.indexOf("v5/private")>=0?"unified":"usdc"}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r="myTrades";await this.loadMarkets(),void 0!==e&&(r+=":"+(e=this.symbol(e)));const a=this.getUrlByMarketType(e,!0,"watchMyTrades",s);await this.authenticate(a);const n=this.safeValue({spot:"ticketInfo",unified:"execution",usdc:"user.openapi.perp.trade"},this.getPrivateType(a)),o=await this.watchTopics(a,r,[n],s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleMyTrades(e,t){const i="ticketInfo"===this.safeString(t,"topic");let s=this.safeValue(t,"data",[]);if(Array.isArray(s)||(s=this.safeValue(s,"result",[])),void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new a.hl(e)}const r=this.myTrades,n={},o=i?"parseWsTrade":"parseTrade";for(let e=0;e<s.length;e++){const t=s[e],i=this[o](t);n[i.symbol]=!0,r.append(i)}const d=Object.keys(n);for(let t=0;t<d.length;t++){const i="myTrades:"+d[t];e.resolve(r,i)}e.resolve(r,"myTrades")}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r="orders";void 0!==e&&(r+=":"+(e=this.symbol(e)));const a=this.getUrlByMarketType(e,!0,"watchOrders",s);await this.authenticate(a);const n=this.safeValue({spot:["order","stopOrder"],unified:["order"],usdc:["user.openapi.perp.order"]},this.getPrivateType(a)),o=await this.watchTopics(a,r,n,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleOrder(e,t,i=undefined){const s=this.safeString(t,"type","");if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const r=this.orders;let n,o=[];"snapshot"===s?(o=this.safeValue(t,"data",[]),n="parseWsSpotOrder"):(n="parseContractOrder",o=this.safeValue(t,"data",[]),o=this.safeValue(o,"result",o));const d={};for(let e=0;e<o.length;e++){const t=this[n](o[e]);d[t.symbol]=!0,r.append(t)}const c=Object.keys(d);for(let t=0;t<c.length;t++){const i="orders:"+c[t];e.resolve(r,i)}e.resolve(r,"orders")}parseWsSpotOrder(e,t=undefined){const i=this.safeString(e,"i"),s=this.safeString(e,"s"),r=this.safeSymbol(s,t,void 0,"spot"),a=this.safeInteger(e,"O");let n=this.safeString(e,"p");"0"===n&&(n=void 0);const o=this.safeString(e,"z"),d=this.parseOrderStatus(this.safeString(e,"X")),c=this.safeStringLower(e,"S"),h=this.safeString(e,"E"),u=this.safeString(e,"f");let l;const p=this.safeString(e,"Z"),f=this.safeString(e,"q");let m,v=this.safeStringLower(e,"o");l=v.indexOf("quote")>=0?o:f,v.indexOf("market")>=0&&(v="market");const g=this.safeString(e,"n");if(void 0!==g&&"0"!==g){const t=this.safeString(e,"N");m={cost:g,currency:this.safeCurrencyCode(t)}}return this.safeOrder({info:e,id:i,clientOrderId:this.safeString(e,"c"),timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:h,symbol:r,type:v,timeInForce:u,postOnly:void 0,side:c,price:n,stopPrice:void 0,triggerPrice:void 0,amount:l,cost:p,average:void 0,filled:o,remaining:void 0,status:d,fee:m},t)}async watchBalance(e={}){await this.loadMarkets();let t,i,s="balances";[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),[i,e]=this.handleSubTypeAndParams("watchBalance",void 0,e);const r=await this.isUnifiedEnabled(),a=this.safeValue(r,0,!1),n=this.safeValue(r,1,!1),o=this.getUrlByMarketType(void 0,!0,"watchBalance",e);await this.authenticate(o),n&&(s+="inverse"===i?":contract":":unified"),a||n||(s+="spot"===t?":spot":":contract"),a&&(s+="spot"===t?":spot":"linear"===i?":unified":":contract");const d=[this.safeValue({spot:"outboundAccountInfo",unified:"wallet"},this.getPrivateType(o))];return await this.watchTopics(o,s,d,e)}handleBalance(e,t){void 0===this.balance&&(this.balance={});let i="balance";const s=this.safeValue(t,"topic");let r,a,n=[];if("outboundAccountInfo"===s){a="spot";const e=this.safeValue(t,"data",[]);for(let t=0;t<e.length;t++){const i=this.safeValue(e[t],"B",[]);n=this.arrayConcat(n,i)}r=n}if("wallet"===s){const e=this.safeValue(t,"data",{});for(let t=0;t<e.length;t++){const t=this.safeValue(e,0,{});a=this.safeStringLower(t,"accountType"),n=this.arrayConcat(n,this.safeValue(t,"coin",[]))}r=e}for(let e=0;e<n.length;e++)this.parseWsBalance(n[e],a);if(void 0!==a){void 0===this.safeValue(this.balance,a)&&(this.balance[a]={}),this.balance[a].info=r;const s=this.safeInteger(t,"ts");this.balance[a].timestamp=s,this.balance[a].datetime=this.iso8601(s),this.balance[a]=this.safeBalance(this.balance[a]),i="balances:"+a,e.resolve(this.balance[a],i)}else{this.balance.info=r;const s=this.safeInteger(t,"ts");this.balance.timestamp=s,this.balance.datetime=this.iso8601(s),this.balance=this.safeBalance(this.balance),i="balances",e.resolve(this.balance,i)}}parseWsBalance(e,t=undefined){const i=this.account(),s=this.safeString2(e,"a","coin"),r=this.safeCurrencyCode(s);i.free=this.safeStringN(e,["availableToWithdraw","f","free","availableToWithdraw"]),i.used=this.safeString2(e,"l","locked"),i.total=this.safeString(e,"walletBalance"),void 0!==t?(void 0===this.safeValue(this.balance,t)&&(this.balance[t]={}),this.balance[t][r]=i):this.balance[r]=i}async watchTopics(e,t,i=[],s={}){const r={op:"subscribe",req_id:this.requestId(),args:i},a=this.extend(r,s);return await this.watch(e,t,a,t)}authenticate(e,t={}){this.checkRequiredCredentials();const i="authenticated",s=this.client(e);let r=this.safeValue(s.subscriptions,i);if(void 0===r){const a=(this.milliseconds()+1e4).toString(),o="GET/realtime"+a,d=this.hmac(this.encode(o),this.encode(this.secret),n.J,"hex"),c={op:"auth",args:[this.apiKey,a,d]},h=this.extend(c,t);r=this.watch(e,i,h),s.subscriptions[i]=r}return r}handleErrorMessage(e,t){const i=this.safeString2(t,"code","ret_code");try{if(void 0!==i){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e)}const e=this.safeValue(t,"success");if(void 0!==e&&!e){const e=this.safeString(t,"ret_msg"),i=this.safeValue(t,"request",{});throw"auth"===this.safeString(i,"op")?new r.AuthenticationError("Authentication failed: "+e):new r.ExchangeError(this.id+" "+e)}return!1}catch(t){if(t instanceof r.AuthenticationError){const i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"ret_msg"))return void this.handlePong(e,t);if(void 0!==this.safeInteger(t,"pong"))return void this.handlePong(e,t);const i=this.safeString(t,"op");if("pong"===i)return void this.handlePong(e,t);if("sub"===this.safeString(t,"event"))return void this.handleSubscriptionStatus(e,t);const s=this.safeString(t,"topic",""),r={orderbook:this.handleOrderBook,kline:this.handleOHLCV,order:this.handleOrder,stopOrder:this.handleOrder,ticker:this.handleTicker,trade:this.handleTrades,publicTrade:this.handleTrades,depth:this.handleOrderBook,wallet:this.handleBalance,outboundAccountInfo:this.handleBalance,execution:this.handleMyTrades,ticketInfo:this.handleMyTrades,"user.openapi.perp.trade":this.handleMyTrades},a=this.safeValue(r,s);if(void 0!==a)return void a.call(this,e,t);const n=Object.keys(r);for(let i=0;i<n.length;i++){const a=n[i];if(s.indexOf(n[i])>=0)return void r[a].call(this,e,t)}const o=this.safeString(t,"type");"auth"!==i&&"AUTH_RESP"!==o||this.handleAuthenticate(e,t)}ping(e){return{req_id:this.requestId(),op:"ping"}}handlePong(e,t){return e.lastPong=this.safeInteger(t,"pong"),t}handleAuthenticate(e,t){const i="authenticated";if(this.safeValue(t,"success"))e.resolve(t,i);else{const s=new r.AuthenticationError(this.id+" "+this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions[i]}return t}handleSubscriptionStatus(e,t){return t}}},5272:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6445),r=i(6689),a=i(2194),n=i(3020),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0,watchPosition:void 0},urls:{api:{ws:"wss://ws.cex.io/ws"}},options:{orderbook:{}},streaming:{},exceptions:{}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchBalance(e={}){await this.authenticate(e);const t="balance",i=this.urls.api.ws,s={e:"get-balance",data:{},oid:this.requestId()},r=this.deepExtend(s,e);return await this.watch(i,t,r,t,r)}handleBalance(e,t){const i=this.safeValue(t,"data",{}),s=this.safeValue(i,"balance",{}),r=this.safeValue(i,"obalance",{}),a={info:i},n=Object.keys(s);for(let e=0;e<n.length;e++){const t=n[e],i=this.account();i.free=this.safeString(s,t),i.used=this.safeString(r,t),a[this.safeCurrencyCode(t)]=i}this.balance=this.safeBalance(a),e.resolve(this.balance,"balance")}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.urls.api.ws,o="old:"+e,d=this.safeValue(this.clients,n);if(void 0!==d){const e=Object.keys(d.subscriptions);for(let t=0;t<e.length;t++){let i=e[t];if(i!==o&&(i=i.slice(0,3),"old"===i))throw new r.ExchangeError(this.id+" watchTrades() only supports watching one symbol at a time.")}}const c={e:"subscribe",rooms:["pair-"+a.base+"-"+a.quote]},h=this.deepExtend(c,s),u=await this.watch(n,"trades",h,o);for(let t=0;t<u.length;t++)u[t].symbol=e;return this.filterBySinceLimit(u,t,i,"timestamp",!0)}handleTradesSnapshot(e,t){const i=this.safeValue(t,"data",[]),s=this.safeInteger(this.options,"tradesLimit",1e3),r=new n.ZL(s);for(let e=0;e<i.length;e++){const t=i[e],s=this.parseWsOldTrade(t);r.append(s)}this.trades=r,e.resolve(this.trades,"trades")}parseWsOldTrade(e,t=undefined){Array.isArray(e)||(e=e.split(":"));const i=this.safeString(e,0),s=this.safeNumber(e,1),r=this.safeString(e,2),a=this.safeString(e,3),n=this.safeString(e,4);return this.safeTrade({info:e,id:n,timestamp:s,datetime:this.iso8601(s),symbol:void 0,type:void 0,side:i,order:void 0,takerOrMaker:void 0,price:a,amount:r,cost:void 0,fee:void 0},t)}handleTrade(e,t){const i=this.safeValue(t,"data",[]),s=this.trades;for(let e=0;e<i.length;e++){const t=i[e],r=this.parseWsOldTrade(t);s.append(r)}this.trades=s,e.resolve(this.trades,"trades")}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s=this.urls.api.ws,r="ticker:"+e;let a={e:"subscribe",rooms:["tickers"]},n="tickers";"private"===this.safeString(t,"method","private")&&(await this.authenticate(),a={e:"ticker",data:[i.baseId,i.quoteId],oid:this.requestId()},n="ticker:"+e);const o=this.deepExtend(a,t);return await this.watch(s,r,o,n)}async watchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.urls.api.ws,s="tickers",r=this.deepExtend({e:"subscribe",rooms:["tickers"]},t),a=await this.watch(i,s,r,s),n=a.symbol;if(void 0!==e&&!this.inArray(n,e))return await this.watchTickers(e,t);if(this.newUpdates){const e={};return e[n]=a,e}return this.filterByArray(this.tickers,"symbol",e)}handleTicker(e,t){const i=this.safeValue(t,"data",{}),s=this.parseWsTicker(i),r=s.symbol,a="ticker:"+r;this.tickers[r]=s,e.resolve(s,a),e.resolve(s,"tickers")}parseWsTicker(e,t=undefined){const i=this.safeValue(e,"pair",[]);let s=this.safeString(e,"symbol1");void 0===s&&(s=this.safeString(i,0));let r=this.safeString(e,"symbol2");void 0===r&&(r=this.safeString(i,1));const a=this.safeCurrencyCode(s)+"/"+this.safeCurrencyCode(r);let n=this.safeInteger(e,"timestamp");return void 0!==n&&(n*=1e3),this.safeTicker({symbol:a,timestamp:n,datetime:this.iso8601(n),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open24"),close:void 0,last:this.safeString2(e,"price","last"),previousClose:void 0,change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercentage"),average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"volume"),info:e},t)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" watchOrders requires a symbol argument");await this.loadMarkets(),await this.authenticate(s);const a=this.urls.api.ws,n=this.market(e),o="orders:"+(e=n.symbol),d={e:"open-orders",data:{pair:[n.baseId,n.quoteId]},oid:e},c=this.deepExtend(d,s),h=await this.watch(a,o,c,o,c);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" watchOrders requires a symbol argument");await this.loadMarkets(),await this.authenticate(s);const a=this.urls.api.ws,n=this.market(e),o="myTrades:"+n.symbol,d="orders:"+n.symbol,c={e:"open-orders",data:{pair:[n.baseId,n.quoteId]},oid:n.symbol},h=this.deepExtend(c,s),u=await this.watch(a,o,h,d,h);return this.filterBySymbolSinceLimit(u,n.symbol,t,i,!0)}handleTransaction(e,t){const i=this.safeValue(t,"data");void 0!==this.safeString(i,"symbol2")&&(this.handleOrderUpdate(e,t),this.handleMyTrades(e,t))}handleMyTrades(e,t){const i=this.safeValue(t,"data",{});let s=this.myTrades;if(void 0===s){const e=this.safeInteger(this.options,"tradesLimit",1e3);s=new n.hl(e),this.myTrades=s}const r=this.parseWsTrade(i);s.append(r);const a="myTrades:"+r.symbol;e.resolve(s,a)}parseWsTrade(e,t=undefined){const i=this.safeString(e,"type"),s=this.safeString(e,"price"),r=this.safeString(e,"time"),n=this.safeString(e,"symbol"),o=this.safeString(e,"symbol2"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o);let h=d+"/"+c,u=this.safeString(e,"amount");"sell"===i&&(h=c+"/"+d,u=a.O.stringDiv(u,s));const l={id:this.safeString(e,"id"),order:this.safeString(e,"order"),info:e,timestamp:this.parse8601(r),datetime:r,symbol:h,type:void 0,side:i,takerOrMaker:void 0,price:s,cost:void 0,amount:u,fee:void 0},p=this.safeString(e,"fee_amount");return void 0!==p&&(l.fee={cost:p,currency:c,rate:void 0}),this.safeTrade(l,t)}handleOrderUpdate(e,t){const i=this.safeValue(t,"data",{}),s="tx"===this.safeString(t,"e"),r=this.safeString2(i,"id","order");let a=this.safeString(i,"remains"),o=this.safeString(i,"symbol"),d=this.safeString(i,"symbol2");const c=this.safeValue(i,"pair");void 0!==c&&(o=this.safeString(c,"symbol1"),d=this.safeString(c,"symbol2"));const h=this.safeCurrencyCode(o),u=this.safeCurrencyCode(d),l=h+"/"+u,p=this.safeMarket(l);if(a=this.currencyFromPrecision(h,a),void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new n.hl(e)}const f=this.safeValue(this.orders.hashmap,l,{});let m=this.safeValue(f,r);void 0===m&&(m=this.parseWsOrderUpdate(i,p)),m.remaining=a,this.safeValue(i,"cancel",!1)&&(m.status="canceled"),s&&(m.status="closed");const v=this.safeNumber(i,"fee");void 0!==v&&(m.fee={cost:v,currency:u,rate:void 0});const g=this.safeInteger(i,"time",this.milliseconds());m.timestamp=g,m.datetime=this.iso8601(g),m=this.safeOrder(m);const y=this.orders;y.append(m);const b="orders:"+l;e.resolve(y,b)}parseWsOrderUpdate(e,t=undefined){const i=void 0!==this.safeValue(e,"d"),s=this.safeString(e,"remains");let r;void 0!==s&&(r=this.currencyFromPrecision(t.base,s));const a=this.safeString(e,"amount");i||this.currencyFromPrecision(t.base,a);let n=this.safeString(e,"symbol"),o=this.safeString(e,"symbol2");void 0!==this.safeValue(e,"pair")&&(n=this.safeString(e,"symbol1"),o=this.safeString(e,"symbol2"));const d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=d+"/"+c;t=this.safeMarket(h,t);const u=this.safeInteger(e,"time",this.milliseconds());let l=u;i&&(l=this.parse8601(u));let p="open";this.safeValue(e,"cancel",!1)?p="canceled":i&&(p="closed");const f={id:this.safeString2(e,"id","order"),clientOrderId:void 0,info:e,timestamp:l,datetime:this.iso8601(l),lastTradeTimestamp:void 0,status:p,symbol:h,type:void 0,timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"type"),price:this.safeNumber(e,"price"),stopPrice:void 0,triggerPrice:void 0,average:void 0,cost:void 0,amount:a,filled:void 0,remaining:r,fee:{cost:this.safeNumber2(e,"fee","fee_amount"),currency:c,rate:void 0},trades:void 0};return i&&(f.trades=this.parseWsTrade(e,t)),this.safeOrder(f,t)}fromPrecision(e,t){if(void 0===e)return;const i=new a.O(e);return i.decimals=this.sum(i.decimals,t),i.reduce(),i.toString()}currencyFromPrecision(e,t){const i=this.safeInteger(this.currencies[e],"precision",0);return this.fromPrecision(t,i)}handleOrdersSnapshot(e,t){const i=this.safeString(t,"oid"),s=this.safeValue(t,"data",[]);let r=this.orders;if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);r=new n.hl(e)}for(let e=0;e<s.length;e++){const t=s[e],a=this.safeMarket(i),n=this.parseOrder(t,a);n.status="open",r.append(n)}this.orders=r;const a="orders:"+i;r.length>0&&e.resolve(r,a)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets(),await this.authenticate();const s=this.market(e);e=s.symbol;const r=this.urls.api.ws,a="orderbook:"+e,n=void 0===t?0:t,o={e:"order-book-subscribe",data:{pair:[s.baseId,s.quoteId],subscribe:!0,depth:n},oid:this.requestId()},d=this.deepExtend(o,i);return(await this.watch(r,a,d,a)).limit()}handleOrderBookSnapshot(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(i,"pair"),r=this.pairToSymbol(s),a="orderbook:"+r,n=this.safeInteger2(i,"timestamp_ms","timestamp"),o=this.safeNumber(i,"id"),d=this.orderBook({}),c=this.parseOrderBook(i,r,n,"bids","asks");c.nonce=o,d.reset(c),this.options.orderbook[r]={incrementalId:o},this.orderbooks[r]=d,e.resolve(d,a)}pairToSymbol(e){const t=e.split(":"),i=this.safeString(t,0),s=this.safeString(t,1);return this.safeCurrencyCode(i)+"/"+this.safeCurrencyCode(s)}handleOrderBookUpdate(e,t){const i=this.safeValue(t,"data",{}),s=this.safeNumber(i,"id"),r=this.safeString(i,"pair",""),a=this.pairToSymbol(r),n=this.safeValue(this.orderbooks,a),o="orderbook:"+a;s!==n.nonce+1&&(delete e.subscriptions[o],e.reject(this.id+" watchOrderBook() skipped a message",o));const d=this.safeInteger(i,"time"),c=this.safeValue(i,"asks",[]),h=this.safeValue(i,"bids",[]);this.handleDeltas(n.asks,c),this.handleDeltas(n.bids,h),n.timestamp=d,n.datetime=this.iso8601(d),n.nonce=s,e.resolve(n,o)}handleDelta(e,t){const i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n="ohlcv:"+(e=a.symbol),o=this.urls.api.ws,d={e:"init-ohlcv",i:t,rooms:["pair-"+a.baseId+"-"+a.quoteId]},c=await this.watch(o,n,this.extend(d,r),n);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}handleInitOHLCV(e,t){const i=this.safeString(t,"pair").split(":"),s=this.safeString(i,0),r=this.safeString(i,1),a=this.safeCurrencyCode(s)+"/"+this.safeCurrencyCode(r),o=this.safeMarket(a),d="ohlcv:"+a,c=this.safeValue(t,"data",[]),h=this.safeInteger(this.options,"OHLCVLimit",1e3),u=new n.Py(h),l=this.sortBy(c,0);for(let e=0;e<l.length;e++)u.append(this.parseOHLCV(l[e],o));this.ohlcvs[a]=u,e.resolve(u,d)}handleOHLCV24(e,t){return t}handleOHLCV1m(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(i,"pair"),r=this.pairToSymbol(s),a="ohlcv:"+r,n=[this.safeTimestamp(i,"time"),this.safeNumber(i,"o"),this.safeNumber(i,"h"),this.safeNumber(i,"l"),this.safeNumber(i,"c"),this.safeNumber(i,"v")],o=this.safeValue(this.ohlcvs,r);o.append(n),e.resolve(o,a)}handleOHLCV(e,t){const i=this.safeValue(t,"data",[]),s=this.safeString(t,"pair"),r=this.pairToSymbol(s),a="ohlcv:"+r,n=this.safeValue(this.ohlcvs,r);for(let e=0;e<i.length;e++){const t=[this.safeTimestamp(i[e],0),this.safeNumber(i[e],1),this.safeNumber(i[e],2),this.safeNumber(i[e],3),this.safeNumber(i[e],4),this.safeNumber(i[e],5)];n.append(t)}i.length>0&&e.resolve(n,a)}handleConnected(e,t){return t}handleErrorMessage(e,t){throw new r.ExchangeError(this.id+" "+this.json(t))}handleMessage(e,t){if("error"===this.safeString(t,"ok"))return this.handleErrorMessage(e,t);const i=this.safeString(t,"e"),s={auth:this.handleAuthenticationMessage,connected:this.handleConnected,tick:this.handleTicker,ticker:this.handleTicker,"init-ohlcv-data":this.handleInitOHLCV,ohlcv24:this.handleOHLCV24,ohlcv1m:this.handleOHLCV1m,ohlcv:this.handleOHLCV,"get-balance":this.handleBalance,"order-book-subscribe":this.handleOrderBookSnapshot,md_update:this.handleOrderBookUpdate,"open-orders":this.handleOrdersSnapshot,order:this.handleOrderUpdate,"history-update":this.handleTrade,history:this.handleTradesSnapshot,tx:this.handleTransaction},r=this.safeValue(s,i);return void 0!==r?r.call(this,e,t):t}handleAuthenticationMessage(e,t){const i=this.safeValue(e.futures,"authenticated");void 0!==i&&i.resolve(!0)}async authenticate(e={}){const t=this.urls.api.ws,i=this.client(t),s="authenticated",r=i.future("authenticated");if(void 0===this.safeValue(i.subscriptions,s)){this.checkRequiredCredentials();const i=this.seconds().toString(),r=i+this.apiKey,a=this.hmac(this.encode(r),this.encode(this.secret),o.J),n={e:"auth",auth:{key:this.apiKey,signature:a.toUpperCase(),timestamp:i}};await this.watch(t,s,this.extend(n,e),s)}return await r}}},3848:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(8368);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"coinbaseprime",name:"Coinbase Prime",has:{ws:!0,watchOrderBook:!0},urls:{test:{ws:"wss://ws-feed-public.sandbox.exchange.coinbase.com"},logo:"https://user-images.githubusercontent.com/1294454/44539184-29f26e00-a70c-11e8-868f-e907fc236a7c.jpg",api:{ws:"wss://ws-feed.exchange.coinbase.com"},www:"https://exchange.coinbase.com",doc:"https://docs.exchange.coinbase.com/",fees:"https://pro.coinbase.com/fees"}})}}},8368:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(8856),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOHLCV:!1,watchOrderBook:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchBalance:!1,watchStatus:!1,watchOrders:!0,watchMyTrades:!0},urls:{api:{ws:"wss://ws-feed.pro.coinbase.com"}},options:{tradesLimit:1e3,ordersLimit:1e3,myTradesLimit:1e3}})}authenticate(){this.checkRequiredCredentials();const e=this.nonce(),t=e.toString()+"GET/users/self/verify",i=this.hmac(this.encode(t),this.base64ToBinary(this.secret),n.J,"base64");return{timestamp:e,key:this.apiKey,signature:i,passphrase:this.password}}async subscribe(e,t,i,s={}){await this.loadMarkets();const r=this.market(t),a=i+":"+r.id;let n=this.urls.api.ws;"signature"in s&&(n+="?");const o={type:"subscribe",product_ids:[r.id],channels:[e]},d=this.extend(o,s);return await this.watch(n,a,d,a)}async watchTicker(e,t={}){const i="ticker";return await this.subscribe(i,e,i,t)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r="matches",a=await this.subscribe(r,e,r,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.BadSymbol(this.id+" watchMyTrades requires a symbol");await this.loadMarkets(),e=this.symbol(e);const a=this.authenticate(),n=await this.subscribe("user",e,"myTrades",this.extend(s,a));return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.BadSymbol(this.id+" watchMyTrades requires a symbol");await this.loadMarkets(),e=this.symbol(e);const a=this.authenticate(),n=await this.subscribe("user",e,"orders",this.extend(s,a));return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}async watchOrderBook(e,t=undefined,i={}){const s="level2";await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=s+":"+r.id,n=this.urls.api.ws,o={type:"subscribe",product_ids:[r.id],channels:[s]},d=this.extend(o,i),c={messageHash:a,symbol:e,marketId:r.id,limit:t};return(await this.watch(n,a,d,a,c)).limit()}handleTrade(e,t){const i=this.safeString(t,"product_id");if(void 0!==i){const s=this.parseWsTrade(t),r=s.symbol,n="matches:"+i;let o=this.safeValue(this.trades,r);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new a.ZL(e),this.trades[r]=o}o.append(s),e.resolve(o,n)}return t}handleMyTrade(e,t){const i=this.safeString(t,"product_id");if(void 0!==i){const s=this.parseWsTrade(t),r="myTrades:"+i;let n=this.myTrades;if(void 0===n){const e=this.safeInteger(this.options,"myTradesLimit",1e3);n=new a.hl(e),this.myTrades=n}n.append(s),e.resolve(n,r)}return t}parseWsTrade(e){const t=super.parseTrade(e);let i;"maker_fee_rate"in e?(t.takerOrMaker="maker",i=this.safeNumber(e,"maker_fee_rate")):(t.takerOrMaker="taker",i=this.safeNumber(e,"taker_fee_rate"));const s=this.market(t.symbol).quote;let r;return void 0!==t.cost&&void 0!==i&&(r=this.safeNumber(t,"cost")*i),t.fee={rate:i,cost:r,currency:s,type:void 0},t}parseWsOrderStatus(e){return this.safeString({filled:"closed",canceled:"canceled"},e,"open")}handleOrder(e,t){let i=this.orders;if(void 0===i){const e=this.safeInteger(this.options,"ordersLimit",1e3);i=new a.hl(e),this.orders=i}const s=this.safeString(t,"type"),r=this.safeString(t,"product_id");if(void 0!==r){const i="orders:"+r,a=this.safeSymbol(r),n=this.safeString(t,"order_id"),o=this.safeString(t,"maker_order_id"),d=this.safeString(t,"taker_order_id"),c=this.orders,h=this.safeValue(c.hashmap,a,{});let u=this.safeValue(h,n);if(void 0===u&&(u=this.safeValue2(h,o,d)),void 0===u){const s=this.parseWsOrder(t);c.append(s),e.resolve(c,i)}else{const r=this.safeInteger(t,"sequence"),a=this.safeValue(u,"info",{}),n=this.safeInteger(a,"sequence");if(void 0===n||r>n)if("match"===s){const s=this.parseWsTrade(t);void 0===u.trades&&(u.trades=[]),u.trades.push(s),u.lastTradeTimestamp=s.timestamp;let r=0,a=0;const n=u.trades;for(let e=0;e<n.length;e++){const t=n[e];r=this.sum(r,t.cost),a=this.sum(a,t.amount)}a>0&&(u.average=r/a),u.cost=r,void 0!==u.filled&&(u.filled+=s.amount,void 0!==u.amount&&(u.remaining=u.amount-u.filled)),void 0===u.fee&&(u.fee={cost:0,currency:s.fee.currency}),void 0!==u.fee.cost&&void 0!==s.fee.cost&&(u.fee.cost=this.sum(u.fee.cost,s.fee.cost)),c.append(u),e.resolve(c,i)}else if("received"===s||"done"===s){const s=this.extend(u.info,t),r=this.parseWsOrder(s),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e];void 0!==r[t]&&(u[t]=r[t])}c.append(u),e.resolve(c,i)}}}}parseWsOrder(e){const t=this.safeString(e,"order_id"),i=this.safeString(e,"client_oid"),s=this.safeString(e,"product_id"),r=this.safeSymbol(s),a=this.safeString(e,"side"),n=this.safeNumber(e,"price"),o=this.safeNumber2(e,"size","funds"),d=this.safeString(e,"time"),c=this.parse8601(d),h=this.safeString(e,"reason"),u=this.parseWsOrderStatus(h),l=this.safeString(e,"order_type");let p=this.safeNumber(e,"remaining_size");const f=this.safeString(e,"type");let m,v;return void 0!==o&&void 0!==p?m=o-p:"received"===f&&(m=0,void 0!==o&&(p=o-m)),void 0!==n&&void 0!==o&&(v=n*o),{info:e,symbol:r,id:t,clientOrderId:i,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,type:l,timeInForce:void 0,postOnly:void 0,side:a,price:n,stopPrice:void 0,triggerPrice:void 0,amount:o,cost:v,average:void 0,filled:m,remaining:p,status:u,fee:void 0,trades:void 0}}handleTicker(e,t){const i=this.safeString(t,"product_id");if(void 0!==i){const s=this.parseTicker(t),r=s.symbol;this.tickers[r]=s;const a=this.safeString(t,"type")+":"+i;e.resolve(s,a)}return t}parseTicker(e,t=undefined){if(void 0===this.safeString(e,"type"))return super.parseTicker(e,t);const i=this.safeString(e,"product_id"),s=this.safeSymbol(i,t,"-"),r=this.parse8601(this.safeString(e,"time")),a=this.safeNumber(e,"price");return{symbol:s,timestamp:r,datetime:this.iso8601(r),high:this.safeNumber(e,"high_24h"),low:this.safeNumber(e,"low_24h"),bid:this.safeNumber(e,"best_bid"),bidVolume:this.safeNumber(e,"best_bid_size"),ask:this.safeNumber(e,"best_ask"),askVolume:this.safeNumber(e,"best_ask_size"),vwap:void 0,open:this.safeNumber(e,"open_24h"),close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeNumber(e,"volume_24h"),quoteVolume:void 0,info:e}}handleDelta(e,t){const i=this.safeNumber(t,0),s=this.safeNumber(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){const i=this.safeString(t,"type"),s=this.safeString(t,"product_id"),r=this.safeMarket(s,void 0,"-").symbol,a="level2:"+s,n=this.safeValue(e.subscriptions,a,{}),o=this.safeInteger(n,"limit");if("snapshot"===i){this.orderbooks[r]=this.orderBook({},o);const i=this.orderbooks[r];this.handleDeltas(i.asks,this.safeValue(t,"asks",[])),this.handleDeltas(i.bids,this.safeValue(t,"bids",[])),i.timestamp=void 0,i.datetime=void 0,e.resolve(i,a)}else if("l2update"===i){const i=this.orderbooks[r],s=this.parse8601(this.safeString(t,"time")),n=this.safeValue(t,"changes",[]),o={sell:"asks",buy:"bids"};for(let e=0;e<n.length;e++){const t=n[e],s=this.safeString(t,0),r=this.safeString(o,s),a=this.safeNumber(t,1),d=this.safeNumber(t,2);i[r].store(a,d)}i.timestamp=s,i.datetime=this.iso8601(s),e.resolve(i,a)}}handleSubscriptionStatus(e,t){return t}handleMessage(e,t){const i=this.safeString(t,"type"),s={snapshot:this.handleOrderBook,l2update:this.handleOrderBook,subscribe:this.handleSubscriptionStatus,ticker:this.handleTicker,received:this.handleOrder,open:this.handleOrder,change:this.handleOrder,done:this.handleOrder},r=e.url.length-0,a="?"===e.url[r-1],n=this.safeValue(s,i);if(void 0!==n)return n.call(this,e,t);"match"===i&&(a?(this.handleMyTrade(e,t),this.handleOrder(e,t)):this.handleTrade(e,t))}}},204:(e,t,i)=>{i.d(t,{Z:()=>c});var s=i(2194),r=i(332),a=i(6689),n=i(3020),o=i(1372),d=i(7311);class c extends r.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:{spot:"wss://socket.coinex.com/",swap:"wss://perpetual.coinex.com/"}}},options:{watchOHLCVWarning:!0,timeframes:{"1m":60,"3m":180,"5m":300,"15m":900,"30m":1800,"1h":3600,"2h":7200,"4h":14400,"6h":21600,"12h":43200,"1d":86400,"3d":259200,"1w":604800},account:"spot",watchOrderBook:{limits:[5,10,20,50],defaultLimit:50,aggregations:["10","1","0","0.1","0.01"],defaultAggregation:"0"}},streaming:{},exceptions:{codes:{1:a.BadRequest,2:a.ExchangeError,3:a.ExchangeNotAvailable,4:a.NotSupported,5:a.RequestTimeout,6:a.AuthenticationError}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}handleTicker(e,t){const i=this.safeString(this.options,"defaultType"),s=this.safeValue(t,"params",[]),r=this.safeValue(s,0,{}),a=Object.keys(r),n=[];for(let t=0;t<a.length;t++){const s=a[t],o=r[s],d=this.safeSymbol(s,void 0,void 0,i),c=this.safeMarket(s,void 0,void 0,i),h=this.parseWSTicker(o,c),u="ticker:"+d;this.tickers[d]=h,n.push(h),e.resolve(h,u)}e.resolve(n,"tickers")}parseWSTicker(e,t=undefined){const i=this.safeString(this.options,"defaultType");return this.safeTicker({symbol:this.safeSymbol(void 0,t,void 0,i),timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:this.safeString(e,"buy_total"),ask:void 0,askVolume:this.safeString(e,"sell_total"),vwap:void 0,open:this.safeString(e,"open"),close:this.safeString(e,"close"),last:this.safeString(e,"last"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"deal"),info:e},t)}async watchBalance(e={}){await this.loadMarkets(),await this.authenticate(e);const t="balance";let i;[i,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);const s=this.urls.api.ws[i],r={method:"asset.subscribe",params:Object.keys(this.currencies_by_id),id:this.requestId()},a=this.deepExtend(r,e);return await this.watch(s,t,a,t)}handleBalance(e,t){const i=this.safeValue(t,"params",[]),r=this.safeValue(i,0,{});this.balance.info=r;const a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],i=this.safeCurrencyCode(t),n=this.safeString(r[t],"available"),o=this.safeString(r[t],"frozen"),d=s.O.stringAdd(n,o),c=this.account();c.free=this.parseNumber(n),c.used=this.parseNumber(o),c.total=this.parseNumber(d),this.balance[i]=c,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,"balance")}handleTrades(e,t){const i=this.safeValue(t,"params",[]),s=this.safeString(i,0),r=this.safeValue(i,1,[]),a=this.safeString(this.options,"defaultType"),o=this.safeMarket(s,void 0,void 0,a),d=o.symbol,c="trades:"+d;let h=this.safeValue(this.trades,d);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new n.ZL(e),this.trades[d]=h}for(let e=0;e<r.length;e++){const t=r[e],i=this.parseWSTrade(t,o);h.append(i)}this.trades[d]=h,e.resolve(this.trades[d],c)}parseWSTrade(e,t=undefined){const i=this.safeTimestamp(e,"time"),s=this.safeString(this.options,"defaultType");return this.safeTrade({id:this.safeString(e,"id"),info:e,timestamp:i,datetime:this.iso8601(i),symbol:this.safeSymbol(void 0,t,void 0,s),order:void 0,type:void 0,side:this.safeString(e,"type"),takerOrMaker:void 0,price:this.safeString(e,"price"),amount:this.safeString(e,"amount"),cost:void 0,fee:void 0},t)}handleOHLCV(e,t){const i=this.safeValue(t,"params",[]),s=this.parseOHLCVs(i);if(0===Object.keys(this.ohlcvs).length){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);this.ohlcvs=new n.Py(e)}for(let e=0;e<s.length;e++){const t=s[e];this.ohlcvs.append(t)}e.resolve(this.ohlcvs,"ohlcv")}async watchTicker(e,t={}){return await this.watchTickers([e],t)}async watchTickers(e=undefined,t={}){let i;await this.loadMarkets(),e=this.marketSymbols(e),[i,t]=this.handleMarketTypeAndParams("watchTickers",void 0,t);const s=this.urls.api.ws[i],r="tickers",a={method:"state.subscribe",id:this.requestId(),params:[]},n=this.deepExtend(a,t),o=await this.watch(s,r,n,r),d=this.filterByArray(o,"symbol",e);return Object.keys(d).length>0?this.newUpdates?d:this.filterByArray(this.tickers,"symbol",e):await this.watchTickers(e,t)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);let a;[a,s]=this.handleMarketTypeAndParams("watchTrades",r,s);const n=this.urls.api.ws[a],o="trades:"+e,d=this.safeValue(this.options,"watchTradesSubscriptions",[]);d.push(r.id);const c={method:"deals.subscribe",params:d,id:this.requestId()};this.options.watchTradesSubscriptions=d;const h=this.deepExtend(c,s),u=await this.watch(n,o,h,"trades");return this.filterBySinceLimit(u,t,i,"timestamp",!0)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);let r;e=s.symbol,[r,i]=this.handleMarketTypeAndParams("watchOrderBook",s,i);const n=this.urls.api.ws[r],d="orderbook:"+e,c=this.safeValue(this.options,"watchOrderBook",{}),h=this.safeValue(c,"limits",[]);if(void 0===t&&(t=this.safeValue(c,"defaultLimit",50)),!this.inArray(t,h))throw new a.NotSupported(this.id+" watchOrderBook() limit must be one of "+h.join(", "));const u=this.safeString(c,"defaultAggregation","0"),l=this.safeValue(c,"aggregations",[]),p=this.safeString(i,"aggregation",u);if(!this.inArray(p,l))throw new a.NotSupported(this.id+" watchOrderBook() aggregation must be one of "+l.join(", "));i=this.omit(i,"aggregation");const f=this.safeValue(this.options,"watchOrderBookSubscriptions",{});f[e]=[s.id,t,p,!0];const m={method:"depth.subscribe_multi",id:this.requestId(),params:Object.values(f)};this.options.watchOrderBookSubscriptions=f;const v=this.hash(this.encode(this.json(f)),o.J),g=this.deepExtend(m,i);return(await this.watch(n,d,g,v,g)).limit()}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const n=this.market(e);let o;if(e=n.symbol,[o,r]=this.handleMarketTypeAndParams("watchOHLCV",n,r),"swap"!==o)throw new a.NotSupported(this.id+" watchOHLCV() is only supported for swap markets");const d=this.urls.api.ws[o],c="ohlcv",h=this.safeValue(this.options,"watchOHLCVWarning",!0),u=this.safeValue(this.clients,d,{}),l=this.safeValue(u.subscriptions,c);if(h&&void 0!==l&&(l.symbol!==e||l.timeframe!==t))throw new a.ExchangeError(this.id+" watchOHLCV() can only watch one symbol and timeframe at a time. To supress this warning set watchOHLCVWarning to false in options");const p=this.safeValue(this.options,"timeframes",{}),f={method:"kline.subscribe",id:this.requestId(),params:[n.id,this.safeString(p,t,t)]},m={symbol:e,timeframe:t},v=this.deepExtend(f,r),g=await this.watch(d,c,v,c,m);return this.newUpdates&&(s=g.getLimit(e,s)),this.filterBySinceLimit(g,i,s,0,!0)}handleDelta(e,t){const i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){const i=this.safeValue(t,"params",[]),s=this.safeValue(i,0);let r=this.safeValue(i,1);const a=this.safeString(i,2),n=this.safeString(this.options,"defaultType"),o=this.safeMarket(a,void 0,void 0,n).symbol,d="orderbook:"+o,c=this.safeNumber(r,"time"),h=this.safeValue(this.orderbooks,o);if(s){const e=this.parseOrderBook(r,o,c);void 0===h?(r=this.orderBook(e),this.orderbooks[o]=r):(r=this.orderbooks[o],r.reset(e))}else{const e=this.safeValue(r,"asks",[]),t=this.safeValue(r,"bids",[]);this.handleDeltas(h.asks,e),this.handleDeltas(h.bids,t),h.nonce=c,h.timestamp=c,h.datetime=this.iso8601(c),this.orderbooks[o]=h}e.resolve(this.orderbooks[o],d)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.authenticate(s);let r,a="orders";const[n,o]=this.handleMarketTypeAndParams("watchOrders",r,s),d={method:"order.subscribe",id:this.requestId()};void 0!==e?(r=this.market(e),e=r.symbol,d.params=[r.id],a+=":"+e):d.params=this.ids;const c=this.urls.api.ws[n],h=this.deepExtend(d,o),u=await this.watch(c,a,h,a,h);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySymbolSinceLimit(u,e,t,i,!0)}handleOrders(e,t){const i=this.safeValue(t,"params",[]),s=this.safeValue(i,1,{}),r=this.parseWSOrder(s);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new n.hl(e)}this.orders.append(r);let a="orders";e.resolve(this.orders,a),a+=":"+r.symbol,e.resolve(this.orders,a)}parseWSOrder(e){const t=this.safeTimestamp2(e,"update_time","mtime"),i=this.safeString(e,"market"),r=this.safeString(e,"type"),a=this.safeString({1:"limit",2:"market"},r),n=this.safeString(e,"side"),o=this.safeString({1:"sell",2:"buy"},n),d=this.safeString(e,"left"),c=this.safeString(e,"amount"),h=this.safeString(e,"status"),u=this.safeString(this.options,"defaultType"),l=this.safeMarket(i,void 0,void 0,u);let p,f,m=this.safeString(e,"deal_money"),v=this.safeString(e,"deal_stock");if(l.swap){const t=this.safeString(e,"leverage");m=s.O.stringDiv(v,t),p=s.O.stringDiv(v,c),v=void 0}const g=this.omitZero(this.safeString(e,"money_fee"));if(void 0!==g){const t=this.safeString(e,"fee_asset",l.quote);f={currency:this.safeCurrencyCode(t),cost:g}}return this.safeOrder({info:e,id:this.safeString2(e,"order_id","id"),clientOrderId:this.safeString(e,"client_id"),datetime:this.iso8601(t),timestamp:t,lastTradeTimestamp:this.safeTimestamp(e,"last_deal_time"),symbol:l.symbol,type:a,timeInForce:void 0,postOnly:void 0,side:o,price:this.safeString(e,"price"),stopPrice:this.safeString(e,"stop_price"),triggerPrice:this.safeString(e,"stop_price"),amount:c,filled:v,remaining:d,cost:m,average:p,status:this.parseWSOrderStatus(h),fee:f,trades:void 0},l)}parseWSOrderStatus(e){return this.safeString({0:"pending",1:"ok"},e,e)}handleMessage(e,t){const i=this.safeValue(t,"error");if(void 0!==i)throw new a.ExchangeError(this.id+" "+this.json(i));const s=this.safeString(t,"method"),r={"state.update":this.handleTicker,"asset.update":this.handleBalance,"deals.update":this.handleTrades,"depth.update":this.handleOrderBook,"order.update":this.handleOrders,"kline.update":this.handleOHLCV,"order.update_stop":this.handleOrders},n=this.safeValue(r,s);return void 0!==n?n.call(this,e,t):this.handleSubscriptionStatus(e,t)}handleAuthenticationMessage(e,t){const i=this.safeValue(e.futures,"authenticated");return void 0!==i&&i.resolve(!0),t}handleSubscriptionStatus(e,t){const i=this.safeString(t,"id"),s=this.safeValue(e.subscriptions,i);if(void 0!==s){const t=this.safeString(s,"future"),r=this.safeValue(e.futures,t);void 0!==r&&r.resolve(!0),delete e.subscriptions[i]}}authenticate(e={}){let t;[t,e]=this.handleMarketTypeAndParams("authenticate",void 0,e);const i=this.urls.api.ws[t],s=this.client(i),r=this.milliseconds();if("spot"===t){const e="authenticated:spot";if(void 0!==this.safeValue(s.futures,e))return;const t=s.future(e),a=this.requestId(),n={id:a,future:"authenticated:spot"},o="access_id="+this.apiKey+"&tonce="+this.numberToString(r)+"&secret_key="+this.secret,c=this.hash(this.encode(o),d.F),h={method:"server.sign",params:[this.apiKey,c.toUpperCase(),r],id:a};return this.spawn(this.watch,i,e,h,a,n),t}{const e="authenticated:swap";if(void 0!==this.safeValue(s.futures,e))return;const t=s.future("authenticated:swap"),a=this.requestId(),n={id:a,future:"authenticated:swap"},d="access_id="+this.apiKey+"&timestamp="+this.numberToString(r)+"&secret_key="+this.secret,c=this.hash(this.encode(d),o.J,"hex"),h={method:"server.sign",params:[this.apiKey,c.toLowerCase(),r],id:a};return this.spawn(this.watch,i,e,h,a,n),t}}}},6820:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(9129),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchMyTrades:!0,watchTrades:!0,watchOrderBook:!0,watchOrders:!0,watchOHLCV:!0},urls:{api:{ws:{public:"wss://stream.crypto.com/v2/market",private:"wss://stream.crypto.com/v2/user"}},test:{public:"wss://uat-stream.3ona.co/v2/market",private:"wss://uat-stream.3ona.co/v2/user"}},options:{},streaming:{}})}async pong(e,t){await e.send({id:this.safeInteger(t,"id"),method:"public/respond-heartbeat"})}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);if(!s.spot)throw new r.NotSupported(this.id+" watchOrderBook() supports spot markets only");const a="book."+s.id;return(await this.watchPublic(a,i)).limit()}handleOrderBookSnapshot(e,t){const i=this.safeString(t,"subscription"),s=this.safeString(t,"instrument_name"),r=this.safeMarket(s).symbol;let a=this.safeValue(t,"data");a=this.safeValue(a,0);const n=this.safeInteger(a,"t"),o=this.parseOrderBook(a,r,n);o.nonce=this.safeInteger(a,"s");let d=this.safeValue(this.orderbooks,r);if(void 0===d){const e=this.safeInteger(t,"depth");d=this.orderBook({},e)}d.reset(o),this.orderbooks[r]=d,e.resolve(d,i)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const a=this.market(e);if(e=a.symbol,!a.spot)throw new r.NotSupported(this.id+" watchTrades() supports spot markets only");const n="trade."+a.id,o=await this.watchPublic(n,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeString(t,"channel"),s=this.safeString(t,"instrument_name"),r=this.safeString(t,"subscription"),n=this.safeMarket(s),o=n.symbol;let d=this.safeValue(this.trades,o);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a.ZL(e),this.trades[o]=d}const c=this.safeValue(t,"data",[]),h=this.parseTrades(c,n);for(let e=0;e<h.length;e++)d.append(h[e]);e.resolve(d,r),e.resolve(d,i)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e),e=r.symbol);let a="margin"===this.safeString(this.options,"defaultType","spot")?"user.margin.trade":"user.trade";a=void 0!==r?a+"."+r.id:a;const n=await this.watchPrivate(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.spot)throw new r.NotSupported(this.id+" watchTicker() supports spot markets only");const s="ticker."+i.id;return await this.watchPublic(s,t)}handleTicker(e,t){const i=this.safeString(t,"subscription"),s=this.safeString(t,"instrument_name"),r=this.safeMarket(s),a=this.safeValue(t,"data",[]);for(let t=0;t<a.length;t++){const s=a[t],n=this.parseTicker(s,r),o=n.symbol;this.tickers[o]=n,e.resolve(n,i)}}async watchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e);if(e=n.symbol,!n.spot)throw new r.NotSupported(this.id+" watchOHLCV() supports spot markets only");const o="candlestick."+this.safeString(this.timeframes,t,t)+"."+n.id,d=await this.watchPublic(o,a);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySinceLimit(d,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"subscription"),s=this.safeString(t,"instrument_name"),r=this.safeMarket(s),n=r.symbol,o=this.safeString(t,"interval"),d=this.findTimeframe(o);this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let c=this.safeValue(this.ohlcvs[n],d);if(void 0===c){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new a.Py(e),this.ohlcvs[n][d]=c}const h=this.safeValue(t,"data");for(let e=0;e<h.length;e++){const t=h[e],i=this.parseOHLCV(t,r);c.append(i)}e.resolve(c,i)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==e&&(r=this.market(e),e=r.symbol);let a="margin"===this.safeString(this.options,"defaultType","spot")?"user.margin.order":"user.order";a=void 0!==r?a+"."+r.id:a;const n=await this.watchPrivate(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleOrders(e,t,i=undefined){const s=this.safeString(t,"channel"),r=this.safeString(t,"subscription"),n=this.safeValue(t,"data",[]);if(n.length>0){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const t=this.orders,i=this.parseOrders(n);for(let e=0;e<i.length;e++)t.append(i[e]);e.resolve(t,r),e.resolve(t,s)}}async watchBalance(e={}){const t="margin"===this.safeString(this.options,"defaultType","spot")?"user.margin.balance":"user.balance";return await this.watchPrivate(t,e)}handleBalance(e,t){const i=this.safeString(t,"subscription"),s=this.safeValue(t,"data");this.balance.info=s;for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"currency"),r=this.safeCurrencyCode(i),a=this.account();a.free=this.safeString(t,"available"),a.total=this.safeString(t,"balance"),this.balance[r]=a,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,i)}async watchPublic(e,t={}){const i=this.urls.api.ws.public,s={method:"subscribe",params:{channels:[e]},nonce:this.nonce()},r=this.extend(s,t);return await this.watch(i,e,r,e)}async watchPrivate(e,t={}){await this.authenticate();const i=this.urls.api.ws.private,s={method:"subscribe",params:{channels:[e]},nonce:this.nonce()},r=this.extend(s,t);return await this.watch(i,e,r,e)}handleErrorMessage(e,t){const i=this.safeInteger(t,"code");try{if(i){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);const s=this.safeValue(t,"message");void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}return!1}catch(t){if(t instanceof r.AuthenticationError){const i="authenticated";e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}else e.reject(t);return!0}}handleMessage(e,t){if(this.handleErrorMessage(e,t))return;const i=this.safeString(t,"method");if("public/heartbeat"===i)return void this.handlePing(e,t);if("public/auth"===i)return void this.handleAuthenticate(e,t);const s={candlestick:this.handleOHLCV,ticker:this.handleTicker,trade:this.handleTrades,book:this.handleOrderBookSnapshot,"user.order":this.handleOrders,"user.margin.order":this.handleOrders,"user.trade":this.handleTrades,"user.margin.trade":this.handleTrades,"user.balance":this.handleBalance,"user.margin.balance":this.handleBalance},r=this.safeValue2(t,"result","info"),a=this.safeString(r,"channel"),n=this.safeValue(s,a);void 0!==n&&n.call(this,e,r)}authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws.private,i=this.client(t),s="authenticated";let r=this.safeValue(i.subscriptions,s);if(void 0===r){const a="public/auth",o=this.nonce().toString(),d=a+o+this.apiKey+o,c=this.hmac(this.encode(d),this.encode(this.secret),n.J),h={id:o,nonce:o,method:a,api_key:this.apiKey,sig:c},u=this.extend(h,e);r=this.watch(t,s,u),i.subscriptions[s]=r}return r}handlePing(e,t){this.spawn(this.pong,e,t)}handleAuthenticate(e,t){e.resolve(t,"authenticated")}}},2952:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(3214),r=i(2194),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://api-adapter.backend.currency.com/connect"}},options:{tradesLimit:1e3,OHLCVLimit:1e3,timeframes:{"1m":"M1","3m":"M3","5m":"M5","15m":"M15","30m":"M30","1h":"H1","4h":"H4","1d":"D1","1w":"W1"}},streaming:{ping:this.ping,keepAlive:2e4}})}ping(e){return{destination:"ping",correlationId:this.requestId().toString(),payload:{}}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleBalance(e,t,i){const s=this.safeValue(t,"payload"),r=this.parseBalance(s);this.balance=this.extend(this.balance,r);const a=this.safeString(i,"messageHash");e.resolve(this.balance,a),a in e.subscriptions&&delete e.subscriptions[a]}handleTicker(e,t,i){const s=this.safeValue(t,"payload"),r=this.safeValue(s,"tickers",[]);for(let t=0;t<r.length;t++){const i=this.parseTicker(r[t]),s=i.symbol;this.tickers[s]=i;const a="/api/v1/ticker/24hr:"+s;e.resolve(i,a),a in e.subscriptions&&delete e.subscriptions[a]}}handleTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,void 0,"/"),a=this.safeInteger(e,"ts"),n=this.safeString(e,"price"),o=this.safeString(e,"size"),d=this.parseNumber(r.O.stringMul(n,o)),c=this.parseNumber(n),h=this.parseNumber(o),u=this.safeString(e,"id"),l=this.safeString(e,"orderId"),p=this.safeValue(e,"buyer")?"buy":"sell";return{info:e,timestamp:a,datetime:this.iso8601(a),symbol:s,id:u,order:l,type:void 0,takerOrMaker:void 0,side:p,price:c,amount:h,cost:d,fee:void 0}}handleTrades(e,t,i){const s=this.safeValue(t,"payload"),r=this.handleTrade(s),n=r.symbol,o="trades.subscribe:"+n;let d=this.safeValue(this.trades,n);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a.ZL(e),this.trades[n]=d}d.append(r),e.resolve(d,o)}findTimeframe(e,t=undefined){const i=this.safeValue(this.options,"timeframes",t),s=Object.keys(i);for(let t=0;t<s.length;t++){const r=s[t];if(i[r]===e)return r}}handleOHLCV(e,t){const i=this.safeValue(t,"payload",{}),s=this.safeString(i,"interval"),r=this.findTimeframe(s),n=this.safeString(i,"symbol"),o=this.safeMarket(n).symbol,d="OHLCMarketData.subscribe:"+r+":"+o,c=[this.safeInteger(i,"t"),this.safeNumber(i,"o"),this.safeNumber(i,"h"),this.safeNumber(i,"l"),this.safeNumber(i,"c"),void 0];this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let h=this.safeValue(this.ohlcvs[o],r);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new a.Py(e),this.ohlcvs[o][r]=h}h.append(c),e.resolve(h,d)}requestId(){const e=this.sum(this.safeInteger(this.options,"correlationId",0),1);return this.options.correlationId=e,e}async watchPublic(e,t,i={}){await this.loadMarkets();const s=this.market(t),r=e+":"+(t=s.symbol),a=this.urls.api.ws,n=this.requestId().toString(),o=this.deepExtend({destination:e,correlationId:n,payload:{symbols:[s.id]}},i),d=this.extend(o,{messageHash:r,symbol:t});return await this.watch(a,r,o,r,d)}async watchPrivate(e,t={}){await this.loadMarkets();const i="/api/v1/account",s=this.urls.api.ws,r=this.requestId().toString(),a={timestamp:this.milliseconds(),apiKey:this.apiKey},o=this.urlencode(this.keysort(a)),d=this.deepExtend({destination:e,correlationId:r,payload:a},t);d.payload.signature=this.hmac(this.encode(o),this.encode(this.secret),n.J);const c=this.extend(d,{messageHash:i});return await this.watch(s,i,d,i,c)}async watchBalance(e={}){return await this.loadMarkets(),await this.watchPrivate("/api/v1/account",e)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s="/api/v1/ticker/24hr",r=s+":"+(e=i.symbol),a=this.urls.api.ws,n=this.requestId().toString(),o=this.deepExtend({destination:s,correlationId:n,payload:{symbol:i.id}},t),d=this.extend(o,{messageHash:r,symbol:e});return await this.watch(a,r,o,r,d)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.watchPublic("trades.subscribe",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrderBook(e,t=undefined,i={}){return await this.loadMarkets(),e=this.symbol(e),(await this.watchPublic("depthMarketData.subscribe",e,i)).limit()}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets(),e=this.symbol(e);const a="OHLCMarketData.subscribe",n=a+":"+t,o={destination:a,payload:{intervals:[this.safeValue(this.options,"timeframes")[t]]}},d=await this.watchPublic(n,e,this.extend(o,r));return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySinceLimit(d,i,s,0,!0)}handleDeltas(e,t){const i=Object.keys(t);for(let s=0;s<i.length;s++){const r=i[s],a=t[r];e.store(parseFloat(r),parseFloat(a))}}handleOrderBook(e,t){const i=this.safeValue(t,"payload",{}),s=this.safeValue(i,"data",{}),r=this.safeString(i,"symbol"),a=this.safeSymbol(r,void 0,"/"),n="depthMarketData.subscribe:"+a,o=this.safeInteger(s,"ts");let d=this.safeValue(this.orderbooks,a);void 0===d&&(d=this.orderBook()),d.reset({timestamp:o,datetime:this.iso8601(o)});const c=this.safeValue(s,"bid",{}),h=this.safeValue(s,"ofr",{});this.handleDeltas(d.bids,c),this.handleDeltas(d.asks,h),this.orderbooks[a]=d,e.resolve(d,n)}handleMessage(e,t){const i=this.safeString(t,"correlationId");if(void 0!==i){const s=this.indexBy(e.subscriptions,"correlationId"),r=this.safeString(t,"status"),a=this.safeValue(s,i);if(void 0!==a&&"OK"===r){const i=this.safeString(a,"destination");if(void 0!==i){const s={"/api/v1/ticker/24hr":this.handleTicker,"/api/v1/account":this.handleBalance},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t,a)}}}const s=this.safeString(t,"destination");if(void 0!==s){const i={"marketdepth.event":this.handleOrderBook,"internal.trade":this.handleTrades,"ohlc.event":this.handleOHLCV,ping:this.handlePong},r=this.safeValue(i,s);return void 0===r?t:r.call(this,e,t)}}}},1788:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(24),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{test:{ws:"wss://test.deribit.com/ws/api/v2"},api:{ws:"wss://www.deribit.com/ws/api/v2"}},options:{timeframes:{"1m":1,"3m":3,"5m":5,"15m":15,"30m":30,"1h":60,"2h":120,"4h":180,"6h":360,"12h":720,"1d":"1D"},currencies:["BTC","ETH","SOL","USDC"]},streaming:{},exceptions:{}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchBalance(e={}){await this.authenticate(e);const t="balance",i=this.urls.api.ws,s=this.safeValue(this.options,"currencies",[]),r=[];for(let e=0;e<s.length;e++){const t=s[e];r.push("user.portfolio."+t)}const a={jsonrpc:"2.0",method:"private/subscribe",params:{channels:r},id:this.requestId()},n=this.deepExtend(a,e);return await this.watch(i,t,n,t,n)}handleBalance(e,t){const i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",{});this.balance.info=s;const r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.parseBalance(s);this.balance[a]=n,e.resolve(this.balance,"balance")}async watchTicker(e,t={}){const i=this.market(e),s=this.urls.api.ws,r=this.safeString(t,"interval","100ms");t=this.omit(t,"interval"),await this.loadMarkets(),"raw"===r&&await this.authenticate();const a="ticker."+i.id+"."+r,n={jsonrpc:"2.0",method:"public/subscribe",params:{channels:["ticker."+i.id+"."+r]},id:this.requestId()},o=this.deepExtend(n,t);return await this.watch(s,a,o,a,o)}handleTicker(e,t){const i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",{}),r=this.safeString(s,"instrument_name"),a=this.safeSymbol(r),n=this.parseTicker(s),o=this.safeString(i,"channel");this.tickers[a]=n,e.resolve(n,o)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a=this.urls.api.ws,n=this.safeString(s,"interval","100ms");s=this.omit(s,"interval");const o="trades."+r.id+"."+n;"raw"===n&&await this.authenticate();const d={jsonrpc:"2.0",method:"public/subscribe",params:{channels:[o]},id:this.requestId()},c=this.deepExtend(d,s),h=await this.watch(a,o,c,o,c);return this.filterBySinceLimit(h,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"params",{}),s=this.safeString(i,"channel",""),r=s.split("."),n=this.safeString(r,1),o=this.safeSymbol(n),d=this.safeMarket(n),c=this.safeValue(i,"data",[]);let h=this.safeValue(this.trades,o);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a.ZL(e),this.trades[o]=h}for(let e=0;e<c.length;e++){const t=c[e],i=this.parseTrade(t,d);h.append(i)}this.trades[o]=h,e.resolve(this.trades[o],s)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.authenticate(s),void 0!==e&&(await this.loadMarkets(),e=this.symbol(e));const r=this.urls.api.ws,a=this.safeString(s,"interval","raw");s=this.omit(s,"interval");const n="user.trades.any.any."+a,o={jsonrpc:"2.0",method:"private/subscribe",params:{channels:[n]},id:this.requestId()},d=this.deepExtend(o,s),c=await this.watch(r,n,d,n,d);return this.filterBySymbolSinceLimit(c,e,t,i,!0)}handleMyTrades(e,t){const i=this.safeValue(t,"params",{}),s=this.safeString(i,"channel",""),r=this.safeValue(i,"data",[]);let n=this.myTrades;if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new a.hl(e)}const o=this.parseTrades(r),d={};for(let e=0;e<o.length;e++){const t=o[e];n.append(t),d[t.symbol]=!0}e.resolve(n,s)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r=this.urls.api.ws,a=this.safeString(i,"interval","100ms");i=this.omit(i,"interval"),"raw"===a&&await this.authenticate();const n="book."+s.id+"."+a,o={jsonrpc:"2.0",method:"public/subscribe",params:{channels:[n]},id:this.requestId()},d=this.deepExtend(o,i);return(await this.watch(r,n,d,n)).limit()}handleOrderBook(e,t){const i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",{}),r=this.safeString(i,"channel"),a=this.safeString(s,"instrument_name"),n=this.safeSymbol(a),o=this.safeNumber(s,"timestamp");let d=this.safeValue(this.orderbooks,n);void 0===d&&(d=this.countedOrderBook());const c=this.safeValue(s,"asks",[]),h=this.safeValue(s,"bids",[]);this.handleDeltas(d.asks,c),this.handleDeltas(d.bids,h),d.nonce=o,d.timestamp=o,d.datetime=this.iso8601(o),d.symbol=n,this.orderbooks[n]=d,e.resolve(d,r)}cleanOrderBook(e){const t=this.safeValue(e,"bids",[]),i=this.safeValue(e,"asks",[]),s=[];for(let e=0;e<t.length;e++)s.push([t[e][1],t[e][2]]);const r=[];for(let e=0;e<i.length;e++)r.push([i[e][1],i[e][2]]);return e.bids=s,e.asks=r,e}handleDelta(e,t){const i=t[1],s=t[2];"new"===t[0]||"change"===t[0]?e.store(i,s,1):"delete"===t[0]&&e.store(i,s,0)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.authenticate(s),void 0!==e&&(e=this.symbol(e));const r=this.urls.api.ws,a=this.safeString(s,"currency","any"),n=this.safeString(s,"interval","raw"),o=this.safeString(s,"kind","any");s=this.omit(s,"interval","currency","kind");const d="user.orders."+o+"."+a+"."+n,c={jsonrpc:"2.0",method:"private/subscribe",params:{channels:[d]},id:this.requestId()},h=this.deepExtend(c,s),u=await this.watch(r,d,h,d,h);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySymbolSinceLimit(u,e,t,i,!0)}handleOrders(e,t){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const i=this.safeValue(t,"params",{}),s=this.safeString(i,"channel",""),r=this.safeValue(i,"data",{});let n=[];n=Array.isArray(r)?this.parseOrders(r):[this.parseOrder(r)];for(let e=0;e<n.length;e++)this.orders.append(n[e]);e.resolve(this.orders,s)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=this.urls.api.ws,d=this.safeValue(this.options,"timeframes",{}),c=this.safeString(d,t);if(void 0===c)throw new r.NotSupported(this.id+" this interval is not supported, please provide one of the supported timeframes");const h="chart.trades."+n.id+"."+c,u={jsonrpc:"2.0",method:"public/subscribe",params:{channels:[h]},id:this.requestId()},l=this.deepExtend(u,a),p=await this.watch(o,h,l,h,l);return this.newUpdates&&(s=p.getLimit(n.symbol,s)),this.filterBySinceLimit(p,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"params",{}),s=this.safeString(i,"channel",""),r=s.split("."),n=this.safeString(r,2),o=this.safeSymbol(n),d=this.safeValue(i,"data",{}),c=[this.safeNumber(d,"tick"),this.safeNumber(d,"open"),this.safeNumber(d,"high"),this.safeNumber(d,"low"),this.safeNumber(d,"close"),this.safeNumber(d,"volume")];let h=this.safeValue(this.ohlcvs,o);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new a.Py(e)}h.append(c),this.ohlcvs[o]=h,e.resolve(h,s)}handleMessage(e,t){const i=this.safeValue(t,"error");if(void 0!==i)throw new r.ExchangeError(this.id+" "+this.json(i));const s=this.safeValue(t,"params"),a=this.safeString(s,"channel");if(void 0!==a){const i=a.split("."),s=this.safeString(i,0),n={trades:this.handleMyTrades,portfolio:this.handleBalance,orders:this.handleOrders},o={ticker:this.handleTicker,book:this.handleOrderBook,trades:this.handleTrades,chart:this.handleOHLCV,user:this.safeValue(n,this.safeString(i,1))},d=this.safeValue(o,s);if(void 0!==d)return d.call(this,e,t);throw new r.NotSupported(this.id+" no handler found for this message "+this.json(t))}const n=this.safeValue(t,"result",{});return void 0!==this.safeString(n,"access_token")?this.handleAuthenticationMessage(e,t):t}handleAuthenticationMessage(e,t){const i=this.safeValue(e.futures,"authenticated");return void 0!==i&&i.resolve(!0),t}async authenticate(e={}){const t=this.urls.api.ws,i=this.client(t),s=this.milliseconds(),r=this.numberToString(s),a=r,o="authenticated",d=i.future("authenticated");if(void 0===this.safeValue(i.subscriptions,o)){this.checkRequiredCredentials();const i=this.requestId(),d=this.hmac(this.encode(r+"\n"+a+"\n"),this.encode(this.secret),n.J),c={jsonrpc:"2.0",id:i,method:"public/auth",params:{grant_type:"client_signature",client_id:this.apiKey,timestamp:s,signature:d,nonce:a,data:""}};this.spawn(this.watch,t,o,this.extend(c,e),o)}return await d}}},9004:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(1729),r=i(6689),a=i(3020),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchMyTrades:!0,watchOrders:!1,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:{public:"wss://ws-api.exmo.com:443/v1/public",spot:"wss://ws-api.exmo.com:443/v1/private",margin:"wss://ws-api.exmo.com:443/v1/margin/private"}}},options:{},streaming:{},exceptions:{}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchBalance(e={}){await this.authenticate(e);const[t,i]=this.handleMarketTypeAndParams("watchBalance",void 0,e),s="balance:"+t,r=this.urls.api.ws[t],a={method:"subscribe",topics:[t+"/wallet"],id:this.requestId()},n=this.deepExtend(a,i);return await this.watch(r,s,n,s,n)}handleBalance(e,t){const i=this.safeString(t,"topic").split("/"),s=this.safeString(i,0);"spot"===s?this.parseSpotBalance(t):"margin"===s&&this.parseMarginBalance(t);const r="balance:"+s;e.resolve(this.balance,r)}parseSpotBalance(e){const t=this.safeString(e,"event"),i=this.safeValue(e,"data");if(this.balance.info=i,"snapshot"===t){const e=this.safeValue(i,"balances",{}),t=this.safeValue(i,"reserved",{}),s=Object.keys(e);for(let i=0;i<s.length;i++){const r=s[i],a=this.safeCurrencyCode(r),n=e[r],o=t[r],d=this.account();d.free=this.parseNumber(n),d.used=this.parseNumber(o),this.balance[a]=d}}else if("update"===t){const e=this.safeString(i,"currency"),t=this.safeCurrencyCode(e),s=this.account();s.free=this.safeNumber(i,"balance"),s.used=this.safeNumber(i,"reserved"),this.balance[t]=s}this.balance=this.safeBalance(this.balance)}parseMarginBalance(e){const t=this.safeValue(e,"data");this.balance.info=t;const i=Object.keys(t);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeCurrencyCode(s),a=this.safeValue(t,s),n=this.account();n.free=this.safeNumber(a,"free"),n.used=this.safeNumber(a,"used"),n.total=this.safeNumber(a,"balance"),this.balance[r]=n,this.balance=this.safeBalance(this.balance)}}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s=this.urls.api.ws.public,r="ticker:"+e,a={method:"subscribe",topics:["spot/ticker:"+i.id],id:this.requestId()},n=this.deepExtend(a,t);return await this.watch(s,r,n,r,n)}handleTicker(e,t){const i=this.safeString(t,"topic").split(":"),s=this.safeString(i,1),r=this.safeSymbol(s),a=this.safeValue(t,"data",{}),n=this.safeMarket(s),o=this.parseTicker(a,n),d="ticker:"+r;this.tickers[r]=o,e.resolve(o,d)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=this.urls.api.ws.public,n="trades:"+e,o={method:"subscribe",topics:["spot/trades:"+r.id],id:this.requestId()},d=this.deepExtend(o,s),c=await this.watch(a,n,d,n,d);return this.filterBySinceLimit(c,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeString(t,"topic").split(":"),s=this.safeString(i,1),r=this.safeSymbol(s),n=this.safeMarket(s),o=this.safeValue(t,"data",[]),d="trades:"+r;let c=this.safeValue(this.trades,r);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new a.ZL(e),this.trades[r]=c}for(let e=0;e<o.length;e++){const t=o[e],i=this.parseTrade(t,n);c.append(i)}this.trades[r]=c,e.resolve(this.trades[r],d)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.authenticate(s);const[r,a]=this.handleMarketTypeAndParams("watchMyTrades",void 0,s),n=this.urls.api.ws[r];let o;if(void 0===e)o="myTrades:"+r;else{const t=this.market(e);e=t.symbol,o="myTrades:"+t.symbol}const d={method:"subscribe",topics:[r+"/user_trades"],id:this.requestId()},c=this.deepExtend(d,a),h=await this.watch(n,o,c,o,c);return this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleMyTrades(e,t){const i=this.safeString(t,"topic").split("/"),s="myTrades:"+this.safeString(i,0),r=this.safeString(t,"event");let n,o=[];if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new a.hl(e),this.myTrades=n}else n=this.myTrades;"snapshot"===r?o=this.safeValue(t,"data",[]):"update"===r&&(o=[this.safeValue(t,"data",{})]);const d=this.parseTrades(o),c={};for(let e=0;e<d.length;e++){const t=d[e];n.append(t),c[t.symbol]=!0}const h=Object.keys(c);for(let t=0;t<h.length;t++){const i="myTrades:"+h[t];e.resolve(n,i)}e.resolve(n,s)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const r=this.urls.api.ws.public,a="orderbook:"+e;i=this.omit(i,"aggregation");const n={method:"subscribe",id:this.requestId(),topics:["spot/order_book_updates:"+s.id]},o=this.deepExtend(n,i);return(await this.watch(r,a,o,a)).limit()}handleOrderBook(e,t){const i=this.safeString(t,"topic").split(":"),s=this.safeString(i,1),r=this.safeSymbol(s),a=this.safeValue(t,"data",{}),n="orderbook:"+r,o=this.safeNumber(t,"ts");let d=this.safeValue(this.orderbooks,r);if(void 0===d&&(d=this.orderBook({}),this.orderbooks[r]=d),"snapshot"===this.safeString(t,"event")){const e=this.parseOrderBook(a,r,o,"bid","ask");d.reset(e)}else{const e=this.safeValue(a,"ask",[]),t=this.safeValue(a,"bid",[]);this.handleDeltas(d.asks,e),this.handleDeltas(d.bids,t),d.timestamp=o,d.datetime=this.iso8601(o)}e.resolve(d,n)}handleDelta(e,t){const i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleMessage(e,t){const i=this.safeString(t,"event"),s={logged_in:this.handleAuthenticationMessage,info:this.handleInfo,subscribed:this.handleSubscribed},a=this.safeValue(s,i);if(void 0!==a)return a.call(this,e,t);if("update"===i||"snapshot"===i){const i=this.safeString(t,"topic");if(void 0!==i){const s=i.split(":"),r=this.safeString(s,0),a={"spot/ticker":this.handleTicker,"spot/wallet":this.handleBalance,"margin/wallet":this.handleBalance,"margin/wallets":this.handleBalance,"spot/trades":this.handleTrades,"margin/trades":this.handleTrades,"spot/order_book_updates":this.handleOrderBook,"spot/user_trades":this.handleMyTrades,"margin/user_trades":this.handleMyTrades},n=this.safeValue(a,r);if(void 0!==n)return n.call(this,e,t)}}throw new r.NotSupported(this.id+" received an unsupported message: "+this.json(t))}handleSubscribed(e,t){return t}handleInfo(e,t){return t}handleAuthenticationMessage(e,t){e.resolve(t,"authenticated")}authenticate(e={}){const t="authenticated",[i,s]=this.handleMarketTypeAndParams("authenticate",void 0,e),r=this.urls.api.ws[i],a=this.client(r);let o=this.safeValue(a.subscriptions,t);if(void 0===o){const e=this.milliseconds();this.checkRequiredCredentials();const i=this.requestId(),d=this.apiKey+e.toString(),c=this.hmac(this.encode(d),this.encode(this.secret),n.o,"base64"),h={method:"login",id:i,api_key:this.apiKey,sign:c,nonce:e},u=this.extend(h,s);o=this.watch(r,t,u),a.subscriptions[t]=o}return o}}},8335:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(7290),r=i(6689),a=i(3020),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchMyTrades:!0,watchOHLCV:!0,watchBalance:!0,watchOrders:!0},urls:{api:{ws:"wss://ws.gate.io/v4",spot:"wss://api.gateio.ws/ws/v4/",swap:{usdt:"wss://fx-ws.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws.gateio.ws/v4/ws/btc"},future:{usdt:"wss://fx-ws.gateio.ws/v4/ws/delivery/usdt",btc:"wss://fx-ws.gateio.ws/v4/ws/delivery/btc"},option:"wss://op-ws.gateio.live/v4/ws"},test:{swap:{usdt:"wss://fx-ws-testnet.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws-testnet.gateio.ws/v4/ws/btc"},future:{usdt:"wss://fx-ws-testnet.gateio.ws/v4/ws/usdt",btc:"wss://fx-ws-testnet.gateio.ws/v4/ws/btc"},option:"wss://op-ws-testnet.gateio.live/v4/ws"}},options:{tradesLimit:1e3,OHLCVLimit:1e3,watchTradesSubscriptions:{},watchTickerSubscriptions:{},watchOrderBookSubscriptions:{},watchTicker:{name:"tickers"},watchOrderBook:{interval:"100ms",snapshotDelay:10,maxRetries:3},watchBalance:{settle:"usdt",spot:"spot.balances"}},exceptions:{ws:{exact:{2:r.BadRequest,4:r.AuthenticationError,6:r.AuthenticationError,11:r.AuthenticationError}}}})}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const r=s.id,[a,n]=this.handleOptionAndParams(i,"watchOrderBook","interval","100ms"),o=this.getTypeByMarket(s)+".order_book_update",d="orderbook:"+e,c=this.getUrlByMarket(s),h=[r,a];if(void 0===t&&(t=100),s.contract){const e=t.toString();h.push(e)}const u={symbol:e,limit:t};return(await this.subscribePublic(c,d,h,o,u,n)).limit()}handleOrderBookSubscription(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");this.orderbooks[s]=this.orderBook({},r)}handleOrderBook(e,t){const i=this.safeString(t,"channel").split("."),s="spot"===this.safeString(i,0),a=s?"spot":"contract",n=this.safeValue(t,"result"),o=this.safeInteger(n,"U"),d=this.safeInteger(n,"u"),c=this.safeString(n,"s"),h=this.safeSymbol(c,void 0,"_",a),u="orderbook:"+h,l=this.safeValue(this.orderbooks,h,this.orderBook({})),p=this.safeInteger(l,"nonce");if(void 0!==p){if(!(p>=d)){if(p>=o-1)this.handleDelta(l,n);else{const t=new r.InvalidNonce(this.id+" orderbook update has a nonce bigger than u");delete e.subscriptions[u],delete this.orderbooks[h],e.reject(t,u)}e.resolve(l,u)}}else{let t=0;void 0!==l&&(t=l.cache.length);const i=this.handleOption("watchOrderBook","snapshotDelay",10);if(t===(s?i:0)){const t=e.subscriptions[u],i=this.safeInteger(t,"limit");this.spawn(this.loadOrderBook,e,u,h,i)}l.cache.push(n)}}getCacheIndex(e,t){const i=this.safeInteger(e,"nonce"),s=t[0];if(i<this.safeInteger(s,"U"))return-1;for(let e=0;e<t.length;e++){const s=t[e],r=this.safeInteger(s,"U"),a=this.safeInteger(s,"u");if(i>=r-1&&i<a)return e}return t.length}handleBidAsks(e,t){for(let i=0;i<t.length;i++){const s=t[i];if(Array.isArray(s))e.storeArray(this.parseBidAsk(s));else{const t=this.safeFloat(s,"p"),i=this.safeFloat(s,"s");e.store(t,i)}}}handleDelta(e,t){const i=this.safeInteger(t,"t");e.timestamp=i,e.datetime=this.iso8601(i),e.nonce=this.safeInteger(t,"u");const s=this.safeValue(t,"b",[]),r=this.safeValue(t,"a",[]),a=e.bids,n=e.asks;this.handleBidAsks(a,s),this.handleBidAsks(n,r)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s=i.id,r=this.getUrlByMarket(i),a=this.getTypeByMarket(i),[n,o]=this.handleOptionAndParams(t,"watchTicker","method","tickers"),d=a+"."+n,c="ticker:"+e,h=[s];return await this.subscribePublic(r,c,h,d,void 0,o)}async watchTickers(e=undefined,t={}){if(await this.loadMarkets(),void 0===(e=this.marketSymbols(e)))throw new r.ArgumentsRequired(this.id+" watchTickers requires symbols");const i=this.market(e[0]),s=this.getTypeByMarket(i),a=this.marketIds(e),[n,o]=this.handleOptionAndParams(t,"watchTicker","method","tickers"),d=s+"."+n,c=this.getUrlByMarket(i),h=await this.subscribePublic(c,"tickers",a,d,void 0,o);let u={};return this.newUpdates?u[h.symbol]=h:u=this.tickers,this.filterByArray(u,"symbol",e,!0)}handleTicker(e,t){const i=this.safeString(t,"channel").split("."),s="futures"===this.safeString(i,0)?"contract":"spot";let r=this.safeValue(t,"result");Array.isArray(r)||(r=[r]);for(let t=0;t<r.length;t++){const i=r[t],a=this.safeString(i,"s"),n=this.safeMarket(a,void 0,"_",s),o=this.parseTicker(i,n),d=o.symbol;this.tickers[d]=o;const c="ticker:"+d;e.resolve(o,c),e.resolve(o,"tickers")}}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=r.id,n=this.getTypeByMarket(r)+".trades",o="trades:"+e,d=this.getUrlByMarket(r),c=[a],h=await this.subscribePublic(d,o,c,n,void 0,s);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,t,i,"timestamp",!0)}handleTrades(e,t){let i=this.safeValue(t,"result");Array.isArray(i)||(i=[i]);const s=this.parseTrades(i);for(let t=0;t<s.length;t++){const i=s[t],r=i.symbol;let n=this.safeValue(this.trades,r);if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new a.ZL(e),this.trades[r]=n}n.append(i);const o="trades:"+r;e.resolve(n,o)}}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=a.id,o=this.safeString(this.timeframes,t,t),d=this.getTypeByMarket(a)+".candlesticks",c="candles:"+o+":"+a.symbol,h=this.getUrlByMarket(a),u=[o,n],l=await this.subscribePublic(h,c,u,d,void 0,r);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"channel").split("."),s="spot"===this.safeString(i,0)?"spot":"contract";let r=this.safeValue(t,"result");Array.isArray(r)||(r=[r]);const n={};for(let e=0;e<r.length;e++){const t=r[e],i=this.safeString(t,"n",""),o=i.split("_"),d=this.safeString(o,0),c=d+"_",h=i.replace(c,""),u=this.safeSymbol(h,void 0,"_",s),l=this.parseOHLCV(t);let p=this.safeValue(this.ohlcvs,u);if(void 0===p){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);p=new a.Py(e),this.ohlcvs[u]=p}p.append(l),n[u]=d}const o=Object.keys(n);for(let t=0;t<o.length;t++){const i=o[t],s=n[i],r="candles:"+this.findTimeframe(s)+":"+i,a=this.safeValue(this.ohlcvs,i);e.resolve(a,r)}}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r,a;await this.loadMarkets();let n,o="!all";void 0!==e&&(n=this.market(e),o=n.id),[a,s]=this.handleMarketTypeAndParams("watchMyTrades",n,s),[r,s]=this.handleSubTypeAndParams("watchMyTrades",n,s);const d=this.getSupportedMapping(a,{spot:"spot",margin:"spot",future:"futures",swap:"futures",option:"options"})+".usertrades";let c="myTrades";void 0!==e&&(c+=":"+e);const h="inverse"===r,u=this.getUrlByMarketType(a,h),l=[o],p="spot"!==a,f=await this.subscribePrivate(u,c,l,d,s,p);return this.newUpdates&&(i=f.getLimit(e,i)),this.filterBySymbolSinceLimit(f,e,t,i,!0)}handleMyTrades(e,t){const i=this.safeValue(t,"result",[]);if(0===i.length)return;let s=this.myTrades;if(void 0===s){const e=this.safeInteger(this.options,"tradesLimit",1e3);s=new a.hl(e),this.myTrades=s}const r=this.parseTrades(i),n={};for(let e=0;e<r.length;e++){const t=r[e];s.append(t),n[t.symbol]=!0}const o=Object.keys(n);for(let t=0;t<o.length;t++){const i="myTrades:"+o[t];e.resolve(s,i)}e.resolve(s,"myTrades")}async watchBalance(e={}){let t,i;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),[i,e]=this.handleSubTypeAndParams("watchBalance",void 0,e);const s="inverse"===i,r=this.getUrlByMarketType(t,s),a="spot"!==t,n=this.getSupportedMapping(t,{spot:"spot",margin:"spot",future:"futures",swap:"futures",option:"options"})+".balances",o=t+".balance";return await this.subscribePrivate(r,o,void 0,n,e,a)}handleBalance(e,t){const i=this.safeValue(t,"result",[]),s=this.safeInteger(t,"time");this.balance.info=i,this.balance.timestamp=s,this.balance.datetime=this.iso8601(s);for(let e=0;e<i.length;e++){const t=i[e],s=this.account(),r=this.safeString(t,"currency","USDT"),a=this.safeCurrencyCode(r);s.free=this.safeString(t,"available"),s.total=this.safeString2(t,"total","balance"),this.balance[a]=s}const r=this.safeString(t,"channel").split("."),a=this.safeString(r,0),n=this.getSupportedMapping(a,{spot:"spot",futures:"swap",options:"option"})+".balance";this.balance=this.safeBalance(this.balance),e.resolve(this.balance,n)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){let r,a,n;await this.loadMarkets(),void 0!==e&&(r=this.market(e),e=r.symbol),[a,n]=this.handleMarketTypeAndParams("watchOrders",r,s);const o=this.getSupportedMapping(a,{spot:"spot",margin:"spot",future:"futures",swap:"futures",option:"options"})+".orders";let d,c="orders",h=["!all"];void 0!==e&&(c+=":"+r.id,h=[r.id]),[d,n]=this.handleSubTypeAndParams("watchOrders",r,n);const u="inverse"===d,l=this.getUrlByMarketType(a,u),p="spot"!==a,f=await this.subscribePrivate(l,c,h,o,n,p);return this.newUpdates&&(i=f.getLimit(e,i)),this.filterBySinceLimit(f,t,i,"timestamp",!0)}handleOrder(e,t){const i=this.safeValue(t,"result",[]),s=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new a.hl(s));const r=this.orders,n={},o=this.parseOrders(i);for(let e=0;e<o.length;e++){const t=o[e],i=this.safeValue(t,"info"),s=this.safeString(i,"event");"put"===s?t.status="open":"finish"===s&&(t.status="closed"),r.append(t);const a=t.symbol;n[this.market(a).id]=!0}const d=Object.keys(n);for(let t=0;t<d.length;t++){const i="orders:"+d[t];e.resolve(this.orders,i)}e.resolve(this.orders,"orders")}handleErrorMessage(e,t){const i=this.safeValue(t,"error",{}),s=this.safeInteger(i,"code");if(void 0!==s){const i=this.safeString(t,"id"),r=this.indexBy(e.subscriptions,"id"),a=this.safeValue(r,i);if(void 0!==a)try{this.throwExactlyMatchedException(this.exceptions.ws.exact,s,this.json(t))}catch(t){const s=this.safeString(a,"messageHash");e.reject(t,s),i in e.subscriptions&&delete e.subscriptions[i]}}}handleBalanceSubscription(e,t,i=undefined){this.balance={}}handleSubscriptionStatus(e,t){const i=this.safeString(t,"channel",""),s={balance:this.handleBalanceSubscription,order_book:this.handleOrderBookSubscription},r=this.safeInteger(t,"id"),a=this.indexBy(e.subscriptions,"id"),n=this.safeValue(a,r);if(void 0!==n){const r=Object.keys(s);for(let a=0;a<r.length;a++){const o=r[a];i.indexOf(o)>=0&&s[o].call(this,e,t,n)}}}handleMessage(e,t){if(this.handleErrorMessage(e,t),"subscribe"===this.safeString(t,"event"))return void this.handleSubscriptionStatus(e,t);const i=this.safeString(t,"channel","").split("."),s=this.safeValue(i,1),r={usertrades:this.handleMyTrades,candlesticks:this.handleOHLCV,orders:this.handleOrder,tickers:this.handleTicker,book_ticker:this.handleTicker,trades:this.handleTrades,order_book_update:this.handleOrderBook,balances:this.handleBalance},a=this.safeValue(r,s);void 0!==a&&a.call(this,e,t)}getUrlByMarket(e){const t=this.urls.api[e.type];return e.contract?e.linear?t.usdt:t.btc:t}getTypeByMarket(e){return e.spot?"spot":e.option?"options":"futures"}getUrlByMarketType(e,t=!1){if("spot"===e){const t=this.urls.api.spot;if(void 0===t)throw new r.NotSupported(this.id+" does not have a testnet for the "+e+" market type.");return t}if("swap"===e){const e=this.urls.api.swap;return t?e.btc:e.usdt}if("future"===e){const e=this.urls.api.future;return t?e.btc:e.usdt}if("option"===e)return this.urls.api.option}requestId(){const e=this.sum(this.safeInteger(this.options,"reqid",0),1);return this.options.reqid=e,e}async subscribePublic(e,t,i,s,r,a={}){const n=this.requestId(),o={id:n,time:this.seconds(),channel:s,event:"subscribe",payload:i};void 0===r&&(r={}),r=this.extend(r,{id:n,messageHash:t});const d=this.extend(o,a);return await this.watch(e,t,d,t,r)}async subscribePrivate(e,t,i,s,a,o=!1){if(this.checkRequiredCredentials(),o){if(void 0===this.uid||0===this.uid.length)throw new r.ArgumentsRequired(this.id+" requires uid to subscribe");const e=[this.uid];i=void 0===i?e:this.arrayConcat(e,i)}const d=this.seconds(),c="channel="+s+"&event=subscribe&time="+d.toString(),h=this.hmac(this.encode(c),this.encode(this.secret),n.o,"hex"),u={method:"api_key",KEY:this.apiKey,SIGN:h},l=this.requestId(),p={id:l,time:d,channel:s,event:"subscribe",auth:u};void 0!==i&&(p.payload=i);const f=this.extend(p,a),m={id:l,messageHash:t};return await this.watch(e,t,f,t,m)}}},1465:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(8335);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"gateio"})}}},9488:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(6743),r=i(3020),a=i(6689),n=i(7110);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchTicker:!1,watchTickers:!1,watchTrades:!0,watchMyTrades:!1,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},hostname:"api.gemini.com",urls:{api:{ws:"wss://api.gemini.com"},test:{ws:"wss://api.sandbox.gemini.com"}}})}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a="trades:"+r.symbol,n={type:"subscribe",subscriptions:[{name:"l2",symbols:[r.id.toUpperCase()]}]},o="l2:"+r.symbol,d=this.urls.api.ws+"/v2/marketdata",c=await this.watch(d,a,n,o);return this.newUpdates&&(i=c.getLimit(r.symbol,i)),this.filterBySinceLimit(c,t,i,"timestamp",!0)}parseWsTrade(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"event_id"),r=this.safeString(e,"price"),a=this.safeString(e,"quantity"),n=this.safeStringLower(e,"side"),o=this.safeStringLower(e,"symbol"),d=this.safeSymbol(o,t);return this.safeTrade({id:s,order:void 0,info:e,timestamp:i,datetime:this.iso8601(i),symbol:d,type:void 0,side:n,takerOrMaker:void 0,price:r,cost:void 0,amount:a,fee:void 0},t)}handleTrade(e,t){const i=this.parseWsTrade(t),s=i.symbol,a=this.safeInteger(this.options,"tradesLimit",1e3);let n=this.safeValue(this.trades,s);void 0===n&&(n=new r.ZL(a),this.trades[s]=n),n.append(i);const o="trades:"+s;e.resolve(n,o)}handleTrades(e,t){const i=this.safeStringLower(t,"symbol"),s=this.safeMarket(i),a=this.safeValue(t,"trades");if(void 0!==a){const t=s.symbol,i=this.safeInteger(this.options,"tradesLimit",1e3);let n=this.safeValue(this.trades,t);void 0===n&&(n=new r.ZL(i),this.trades[t]=n);for(let e=0;e<a.length;e++){const t=this.parseWsTrade(a[e],s);n.append(t)}const o="trades:"+t;e.resolve(n,o)}}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(this.timeframes,t,t),o={type:"subscribe",subscriptions:[{name:"candles_"+n,symbols:[a.id.toUpperCase()]}]},d="ohlcv:"+a.symbol+":"+n,c=this.urls.api.ws+"/v2/marketdata",h=await this.watch(c,d,o,d);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t){let i=this.safeString(t,"type","").slice(8);const s=i.indexOf("_");i=i.slice(0,s);const a=this.safeString(t,"symbol","").toLowerCase(),n=this.safeMarket(a),o=this.safeSymbol(a,n),d=this.safeValue(t,"changes",[]),c=this.findTimeframe(i);void 0===this.safeValue(this.ohlcvs,o)&&(this.ohlcvs[o]={});let h=this.safeValue(this.ohlcvs[o],c);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new r.Py(e),this.ohlcvs[o][c]=h}const u=d.length;for(let e=0;e<u;e++){const t=u-e-1,i=this.parseOHLCV(d[t],n);h.append(i)}const l="ohlcv:"+o+":"+i;return e.resolve(h,l),t}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r="orderbook:"+s.symbol,a={type:"subscribe",subscriptions:[{name:"l2",symbols:[s.id.toUpperCase()]}]},n="l2:"+s.symbol,o=this.urls.api.ws+"/v2/marketdata";return(await this.watch(o,r,a,n)).limit()}handleOrderBook(e,t){const i=this.safeValue(t,"changes",[]),s=this.safeStringLower(t,"symbol"),r=this.safeMarket(s).symbol,a="orderbook:"+r;let n=this.safeValue(this.orderbooks,r);void 0===n&&(n=this.orderBook());for(let e=0;e<i.length;e++){const t=i[e],s=this.safeNumber(t,1),r=this.safeNumber(t,2),a="buy"===t[0]?"bids":"asks",o=n[a];o.store(s,r),n[a]=o}n.symbol=r,this.orderbooks[r]=n,e.resolve(n,a)}handleL2Updates(e,t){this.handleOrderBook(e,t),this.handleTrades(e,t)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){const r=this.urls.api.ws+"/v1/order/events?eventTypeFilter=initial&eventTypeFilter=accepted&eventTypeFilter=rejected&eventTypeFilter=fill&eventTypeFilter=cancelled&eventTypeFilter=booked";await this.loadMarkets();const a={url:r};await this.authenticate(a),void 0!==e&&(e=this.market(e).symbol);const n="orders",o=await this.watch(r,n,void 0,n);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleHeartbeat(e,t){return t}handleSubscription(e,t){return t}handleOrder(e,t){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new r.hl(e)}const i=this.orders;for(let e=0;e<t.length;e++){const s=this.parseWsOrder(t[e]);i.append(s)}e.resolve(this.orders,"orders")}parseWsOrder(e,t=undefined){const i=this.safeNumber(e,"timestampms"),s=this.safeString(e,"type"),r=this.safeString(e,"symbol"),a=this.safeString(e,"order_type"),n=this.safeString(e,"behavior");let o="GTC",d=!1;return"immediate-or-cancel"===n?o="IOC":"fill-or-kill"===n?o="FOK":"maker-or-cancel"===n&&(o="PO",d=!0),this.safeOrder({id:this.safeString(e,"order_id"),clientOrderId:this.safeString(e,"client_order_id"),info:e,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:this.parseWsOrderStatus(s),symbol:this.safeSymbol(r,t),type:this.parseWsOrderType(a),timeInForce:o,postOnly:d,side:this.safeString(e,"side"),price:this.safeNumber(e,"price"),stopPrice:void 0,average:this.safeNumber(e,"avg_execution_price"),cost:void 0,amount:this.safeNumber(e,"original_amount"),filled:this.safeNumber(e,"executed_amount"),remaining:this.safeNumber(e,"remaining_amount"),fee:void 0,trades:void 0},t)}parseWsOrderStatus(e){return this.safeString({accepted:"open",booked:"open",fill:"closed",cancelled:"canceled",cancel_rejected:"rejected",rejected:"rejected"},e,e)}parseWsOrderType(e){return this.safeString({"exchange limit":"limit","market buy":"market","market sell":"market"},e,e)}handleError(e,t){throw new a.ExchangeError(this.json(t))}handleMessage(e,t){if(Array.isArray(t))return this.handleOrder(e,t);"error"===this.safeString(t,"reason")&&this.handleError(e,t);const i={l2_updates:this.handleL2Updates,trade:this.handleTrade,subscription_ack:this.handleSubscription,heartbeat:this.handleHeartbeat},s=this.safeString(t,"type","");if(s.indexOf("candles")>=0)return this.handleOHLCV(e,t);const r=this.safeValue(i,s);void 0!==r&&r.call(this,e,t)}async authenticate(e={}){const t=this.safeString(e,"url");if(void 0!==this.clients&&t in this.clients)return;this.checkRequiredCredentials();const i=this.urls.api.ws.length,s=t.indexOf("?"),r=t.length,a=s>=0?s:r,o={request:t.slice(i,a),nonce:this.nonce()},d=this.stringToBase64(this.json(o)),c=this.hmac(d,this.encode(this.secret),n.iC,"hex");this.options=this.extend({ws:{options:{headers:{}}}},this.options);const h=this.options.ws.options.headers,u={"X-GEMINI-APIKEY":this.apiKey,"X-GEMINI-PAYLOAD":d,"X-GEMINI-SIGNATURE":c};this.options.ws.options.headers=u,this.client(t),this.options.ws.options.headers=h}}},5189:(e,t,i)=>{i.d(t,{Z:()=>a});var s=i(4714),r=i(3020);class a extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchOrderBook:!0,watchBalance:!1,watchOHLCV:!0},urls:{api:{ws:"wss://api.hitbtc.com/api/2/ws"}},options:{tradesLimit:1e3,methods:{orderbook:"subscribeOrderbook",ticker:"subscribeTicker",trades:"subscribeTrades",ohlcv:"subscribeCandles"}}})}async watchPublic(e,t,i=undefined,s={}){await this.loadMarkets();const r=this.marketId(e),a=this.urls.api.ws;let n=t+":"+r;void 0!==i&&(n+=":"+i);const o=this.safeValue(this.options,"methods",{}),d={method:this.safeString(o,t,t),params:{symbol:r},id:this.nonce()},c=this.deepExtend(d,s);return await this.watch(a,n,c,n)}async watchOrderBook(e,t=undefined,i={}){return(await this.watchPublic(e,"orderbook",void 0,i)).limit()}handleOrderBookSnapshot(e,t){const i=this.safeValue(t,"params",{}),s=this.safeString(i,"symbol"),r=this.safeMarket(s).symbol,a=this.parse8601(this.safeString(i,"timestamp")),n=this.safeInteger(i,"sequence");r in this.orderbooks&&delete this.orderbooks[r];const o=this.parseOrderBook(i,r,a,"bid","ask","price","size"),d=this.orderBook(o);d.nonce=n,this.orderbooks[r]=d;const c="orderbook:"+s;e.resolve(d,c)}handleOrderBookUpdate(e,t){const i=this.safeValue(t,"params",{}),s=this.safeString(i,"symbol"),r=this.safeMarket(s).symbol;if(r in this.orderbooks){const t=this.parse8601(this.safeString(i,"timestamp")),a=this.safeInteger(i,"sequence"),n=this.orderbooks[r],o=this.safeValue(i,"ask",[]),d=this.safeValue(i,"bid",[]);this.handleDeltas(n.asks,o),this.handleDeltas(n.bids,d),n.timestamp=t,n.datetime=this.iso8601(t),n.nonce=a,this.orderbooks[r]=n;const c="orderbook:"+s;e.resolve(n,c)}}handleDelta(e,t){const i=this.safeFloat(t,"price"),s=this.safeFloat(t,"size");e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTicker(e,t={}){return await this.watchPublic(e,"ticker",void 0,t)}handleTicker(e,t){const i=this.safeValue(t,"params"),s=this.safeValue(i,"symbol"),r=this.safeMarket(s),a=r.symbol,n=this.parseTicker(i,r);this.tickers[a]=n;const o=this.safeValue(t,"method")+":"+s;e.resolve(n,o)}async watchTrades(e,t=undefined,i=undefined,s={}){const r=await this.watchPublic(e,"trades",void 0,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",[]),a=this.safeString(i,"symbol"),n=this.safeMarket(a),o=n.symbol,d="trades:"+a,c=this.safeInteger(this.options,"tradesLimit",1e3);let h=this.safeValue(this.trades,o);if(void 0===h&&(h=new r.ZL(c),this.trades[o]=h),Array.isArray(s)){const e=this.parseTrades(s,n);for(let t=0;t<e.length;t++)h.append(e[t])}else{const e=this.parseTrade(t,n);h.append(e)}return e.resolve(h,d),t}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){const a=this.safeString(this.timeframes,t,t),n={params:{period:a}},o=this.deepExtend(n,r),d=await this.watchPublic(e,"ohlcv",a,o);return this.newUpdates&&(s=d.getLimit(e,s)),this.filterBySinceLimit(d,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"params",{}),s=this.safeValue(i,"data",[]),a=this.safeString(i,"symbol"),n=this.safeMarket(a),o=n.symbol,d=this.safeString(i,"period"),c=this.findTimeframe(d),h="ohlcv:"+a+":"+d;for(let t=0;t<s.length;t++){const i=s[t],a=this.parseOHLCV(i,n);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let d=this.safeValue(this.ohlcvs[o],c);if(void 0===d){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new r.Py(e),this.ohlcvs[o][c]=d}d.append(a),e.resolve(d,h)}return t}handleNotification(e,t){return t}handleMessage(e,t){const i={snapshotOrderbook:this.handleOrderBookSnapshot,updateOrderbook:this.handleOrderBookUpdate,ticker:this.handleTicker,snapshotTrades:this.handleTrades,updateTrades:this.handleTrades,snapshotCandles:this.handleOHLCV,updateCandles:this.handleOHLCV},s=this.safeString(t,"method"),r=this.safeValue(i,s);void 0===r?this.handleNotification(e,t):r.call(this,e,t)}}},8559:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(8422),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!1,watchOHLCV:!1,watchOrderBook:!0,watchOrders:!0,watchTicker:!1,watchTickers:!1,watchTrades:!0},urls:{api:{ws:"wss://api.hollaex.com/stream"},test:{ws:"wss://api.sandbox.hollaex.com/stream"}},options:{watchBalance:{},watchOrders:{}},streaming:{ping:this.ping},exceptions:{ws:{exact:{"Bearer or HMAC authentication required":r.BadSymbol,"Error: wrong input":r.BadRequest}}}})}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s="orderbook:"+this.market(e).id;return(await this.watchPublic(s,i)).limit()}handleOrderBook(e,t){const i=this.safeString(t,"symbol"),s=this.safeString(t,"topic"),r=this.safeMarket(i).symbol,a=this.safeValue(t,"data"),n=this.safeString(a,"timestamp"),o=this.parse8601(n),d=this.parseOrderBook(a,r,o);let c;r in this.orderbooks?(c=this.orderbooks[r],c.reset(d)):(c=this.orderBook(d),this.orderbooks[r]=c);const h=s+":"+i;e.resolve(c,h)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="trade:"+r.id,n=await this.watchPublic(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySinceLimit(n,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeString(t,"topic"),s=this.safeString(t,"symbol"),r=this.safeMarket(s),n=r.symbol;let o=this.safeValue(this.trades,n);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new a.ZL(e),this.trades[n]=o}const d=this.safeValue(t,"data",[]),c=this.parseTrades(d,r);for(let e=0;e<c.length;e++)o.append(c[e]);const h=i+":"+s;e.resolve(o,h),e.resolve(o,i)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r,a="usertrade";void 0!==e&&(r=this.market(e),e=r.symbol,a+=":"+r.id);const n=await this.watchPrivate(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleMyTrades(e,t,i=undefined){const s=this.safeString(t,"topic"),r=this.safeValue(t,"data");if(0===r.length)return 0;if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new a.ZL(e)}const n=this.myTrades,o={};for(let e=0;e<r.length;e++){const t=r[e],i=this.parseTrade(t);n.append(i);const s=t.symbol;o[this.market(s).id]=!0}e.resolve(this.myTrades,s);const d=Object.keys(o);for(let t=0;t<d.length;t++){const i=s+":"+d[t];e.resolve(this.myTrades,i)}}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r,a="order";void 0!==e&&(r=this.market(e),e=r.symbol,a+=":"+r.id);const n=await this.watchPrivate(a,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleOrder(e,t,i=undefined){const s=this.safeString(t,"topic"),r=this.safeValue(t,"data",{});if(0===r.length)return 0;if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const n=this.orders;let o;o=Array.isArray(r)?r:[r];const d={};for(let e=0;e<o.length;e++){const t=o[e],i=this.parseOrder(t);n.append(i);const s=t.symbol;d[this.market(s).id]=!0}e.resolve(this.orders,s);const c=Object.keys(d);for(let t=0;t<c.length;t++){const i=s+":"+c[t];e.resolve(this.orders,i)}}async watchBalance(e={}){return await this.watchPrivate("wallet",e)}handleBalance(e,t){const i=this.safeString(t,"topic"),s=this.safeValue(t,"data"),r=Object.keys(s),a=this.safeIntegerProduct(t,"time",1e3);this.balance.info=s,this.balance.timestamp=a,this.balance.datetime=this.iso8601(a);for(let e=0;e<r.length;e++){const t=r[e],i=t.split("_"),a=this.safeString(i,0),n=this.safeCurrencyCode(a),o=n in this.balance?this.balance[n]:this.account();o["available"===this.safeString(i,1)?"free":"total"]=this.safeString(s,t),this.balance[n]=o}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,i)}async watchPublic(e,t={}){const i=this.urls.api.ws,s={op:"subscribe",args:[e]},r=this.extend(s,t);return await this.watch(i,e,r,e)}async watchPrivate(e,t={}){this.checkRequiredCredentials();let i=this.safeString(this.options,"ws-expires");if(void 0===i){const e=parseInt((this.timeout/1e3).toString());i=this.sum(this.seconds(),e),i=i.toString(),this.options["ws-expires"]=i}const s=this.urls.api.ws,r="CONNECT/stream"+i,a=this.hmac(this.encode(r),this.encode(this.secret),n.J),o={"api-key":this.apiKey,"api-signature":a,"api-expires":i},d=s+"?"+this.urlencode(o),c={op:"subscribe",args:[e]},h=this.extend(c,t);return await this.watch(d,e,h,e)}handleErrorMessage(e,t){const i=this.safeInteger(t,"error");try{if(void 0!==i){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.ws.exact,i,e)}}catch(e){if(e instanceof r.AuthenticationError)return!1}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===this.safeString(t,"message"))return void this.handlePong(e,t);const i={trade:this.handleTrades,orderbook:this.handleOrderBook,order:this.handleOrder,wallet:this.handleBalance,usertrade:this.handleMyTrades},s=this.safeValue(t,"topic"),r=this.safeValue(i,s);void 0!==r&&r.call(this,e,t)}ping(e){return{op:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}onError(e,t){this.options["ws-expires"]=void 0,this.onError(e,t)}onClose(e,t){this.options["ws-expires"]=void 0,this.onClose(e,t)}}},8384:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(8146),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchMyTrades:!0,watchBalance:!0,watchOHLCV:!0},urls:{api:{ws:{api:{spot:{public:"wss://{hostname}/ws",private:"wss://{hostname}/ws/v2"},future:{linear:{public:"wss://api.hbdm.com/linear-swap-ws",private:"wss://api.hbdm.com/linear-swap-notification"},inverse:{public:"wss://api.hbdm.com/ws",private:"wss://api.hbdm.com/notification"}},swap:{inverse:{public:"wss://api.hbdm.com/swap-ws",private:"wss://api.hbdm.com/swap-notification"},linear:{public:"wss://api.hbdm.com/linear-swap-ws",private:"wss://api.hbdm.com/linear-swap-notification"}}},"api-aws":{spot:{public:"wss://api-aws.huobi.pro/ws",private:"wss://api-aws.huobi.pro/ws/v2"},future:{linear:{public:"wss://api.hbdm.vn/linear-swap-ws",private:"wss://api.hbdm.vn/linear-swap-notification"},inverse:{public:"wss://api.hbdm.vn/ws",private:"wss://api.hbdm.vn/notification"}},swap:{inverse:{public:"wss://api.hbdm.vn/swap-ws",private:"wss://api.hbdm.vn/swap-notification"},linear:{public:"wss://api.hbdm.vn/linear-swap-ws",private:"wss://api.hbdm.vn/linear-swap-notification"}}}}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,api:"api",maxOrderBookSyncAttempts:3,ws:{gunzip:!0},watchTicker:{name:"market.{marketId}.detail"}},exceptions:{ws:{exact:{"bad-request":r.BadRequest,2002:r.AuthenticationError,2021:r.BadRequest,2001:r.BadSymbol,2011:r.BadSymbol,2040:r.BadRequest}}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s=this.safeValue(this.options,"watchTicker",{}),a=this.safeString(s,"name","market.{marketId}.detail");if("market.{marketId}.ticker"===a&&"spot"!==i.type)throw new r.BadRequest(this.id+" watchTicker() with name market.{marketId}.ticker is only allowed for spot markets, use market.{marketId}.detail instead");const n=this.implodeParams(a,{marketId:i.id}),o=this.getUrlByMarketType(i.type,i.linear);return await this.subscribePublic(o,e,n,void 0,t)}handleTicker(e,t){const i=this.safeValue(t,"tick",{}),s=this.safeString(t,"ch"),r=s.split("."),a=this.safeString(r,1),n=this.safeMarket(a),o=this.parseTicker(i,n),d=this.safeValue(t,"ts");o.timestamp=d,o.datetime=this.iso8601(d);const c=o.symbol;return this.tickers[c]=o,e.resolve(o,s),t}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="market."+r.id+".trade.detail",n=this.getUrlByMarketType(r.type,r.linear),o=await this.subscribePublic(n,e,a,void 0,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"tick",{}),s=this.safeValue(i,"data",{}),r=this.safeString(t,"ch"),n=r.split("."),o=this.safeString(n,1),d=this.safeMarket(o),c=d.symbol;let h=this.safeValue(this.trades,c);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a.ZL(e),this.trades[c]=h}for(let e=0;e<s.length;e++){const t=this.parseTrade(s[e],d);h.append(t)}return e.resolve(h,r),t}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.safeString(this.timeframes,t,t),o="market."+a.id+".kline."+n,d=this.getUrlByMarketType(a.type,a.linear),c=await this.subscribePublic(d,e,o,void 0,r);return this.newUpdates&&(s=c.getLimit(e,s)),this.filterBySinceLimit(c,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"ch"),s=i.split("."),r=this.safeString(s,1),n=this.safeMarket(r),o=n.symbol,d=this.safeString(s,3),c=this.findTimeframe(d);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let h=this.safeValue(this.ohlcvs[o],c);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new a.Py(e),this.ohlcvs[o][c]=h}const u=this.safeValue(t,"tick"),l=this.parseOHLCV(u,n);h.append(l),e.resolve(h,i)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);if(e=s.symbol,t=void 0===t?150:t,s.spot&&!this.inArray(t,[150]))throw new r.ExchangeError(this.id+" watchOrderBook spot market accepts limits of 150 only");if(!s.spot&&!this.inArray(t,[20,150]))throw new r.ExchangeError(this.id+" watchOrderBook swap market accepts limits of 20 and 150 only");let a;a=s.spot?"market."+s.id+".mbp."+t.toString():"market."+s.id+".depth.size_"+t.toString()+".high_freq";const n=this.getUrlByMarketType(s.type,s.linear);let o=this.handleOrderBookSubscription;return s.spot||(i.data_type="incremental",o=void 0),(await this.subscribePublic(n,e,a,o,i)).limit()}handleOrderBookSnapshot(e,t,i){const s=this.safeString(i,"symbol"),a=this.safeString(i,"messageHash"),n=this.safeString(t,"id");try{const o=this.orderbooks[s],d=this.safeValue(t,"data"),c=o.cache,h=this.safeValue(c,0,{}),u=this.parseOrderBook(d,s),l=this.safeValue(h,"tick"),p=this.safeInteger(l,"seqNum"),f=this.safeInteger(d,"seqNum");u.nonce=f;const m=this.safeInteger(i,"limit"),v=this.orderBook(u,m);if(e.resolve(v,n),void 0!==p&&f<p){const n=this.safeInteger(this.options,"maxOrderBookSyncAttempts",3);let o=this.safeInteger(i,"numAttempts",0);if(!(o<n))throw new r.InvalidNonce(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+s+" in "+n.toString()+" attempts");a in e.subscriptions&&(o=this.sum(o,1),i.numAttempts=o,e.subscriptions[a]=i,this.spawn(this.watchOrderBookSnapshot,e,t,i))}else{o.reset(u);for(let t=0;t<c.length;t++){const i=c[t];this.handleOrderBookMessage(e,i,o)}this.orderbooks[s]=o,e.resolve(o,a)}}catch(t){e.reject(t,a)}}async watchOrderBookSnapshot(e,t,i){const s=this.safeString(i,"messageHash");try{const e=this.safeString(i,"symbol"),t=this.safeInteger(i,"limit"),r=this.safeValue(i,"params"),a=this.safeInteger(i,"numAttempts",0),n=this.market(e),o=this.getUrlByMarketType(n.type,n.linear),d=this.requestId(),c={req:s,id:d},h={id:d,messageHash:s,symbol:e,limit:t,params:r,numAttempts:a,method:this.handleOrderBookSnapshot};return(await this.watch(o,d,c,d,h)).limit()}catch(t){delete e.subscriptions[s],e.reject(t,s)}}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){const s=this.safeValue(t,"ch").split("."),r=this.safeString(s,1),a=this.safeSymbol(r),n=this.safeValue(t,"tick",{}),o=this.safeInteger2(n,"seqNum","version"),d=this.safeInteger(n,"prevSeqNum"),c=this.safeString(n,"event"),h=this.safeInteger(t,"ts");if("snapshot"===c){const e=this.parseOrderBook(n,a,h);i.reset(e),i.nonce=o}if((void 0===d||d<=i.nonce)&&o>i.nonce){const e=this.safeValue(n,"asks",[]),t=this.safeValue(n,"bids",[]);this.handleDeltas(i.asks,e),this.handleDeltas(i.bids,t),i.nonce=o,i.timestamp=h,i.datetime=this.iso8601(h)}return i}handleOrderBook(e,t){const i=this.safeValue(t,"tick",{}),s=this.safeString(i,"event"),r=this.safeString(t,"ch"),a=this.safeValue(t,"ch").split("."),n=this.safeString(a,1),o=this.safeSymbol(n);let d=this.safeValue(this.orderbooks,o);if(void 0===d){const e=this.safeString(a,3).split("_"),t=this.safeInteger(e,1);d=this.orderBook({},t)}void 0===d.nonce&&d.cache.push(t),void 0===s&&void 0===d.nonce||(this.orderbooks[o]=this.handleOrderBookMessage(e,t,d),e.resolve(d,r))}handleOrderBookSubscription(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");s in this.orderbooks&&delete this.orderbooks[s],this.orderbooks[s]=this.orderBook({},r),!0===this.markets[s].spot&&this.spawn(this.watchOrderBookSnapshot,e,t,i)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;this.checkRequiredCredentials();let a,n,o,d,c,h="*";if(void 0!==e?(await this.loadMarkets(),a=this.market(e),e=a.symbol,r=a.type,c=a.linear?"linear":"inverse",h=a.lowercaseId):(r=this.safeString(this.options,"defaultType","spot"),r=this.safeString(s,"type",r),c=this.safeString2(this.options,"subType","defaultSubType","linear"),c=this.safeString(s,"subType",c),s=this.omit(s,["type","subType"])),"spot"===r){let e;void 0===e&&(e=this.safeString2(this.options,"watchMyTrades","mode","0"),e=this.safeString(s,"mode",e),s=this.omit(s,"mode")),n="trade.clearing#"+h+"#"+e,o=n}else{const e=this.getOrderChannelAndMessageHash(r,c,a,s);o=this.safeString(e,0),n=this.safeString(e,1)+":trade"}return d=await this.subscribePrivate(o,n,r,c,s),this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}getOrderChannelAndMessageHash(e,t,i=undefined,s={}){let r,a,n=this.safeString(this.options,"orderType","orders");n=this.safeString(s,"orderType",n),s=this.omit(s,"orderType");const o=void 0!==i?i.lowercaseId:void 0,d=void 0!==i?i.lowercaseBaseId:void 0,c=n;if(r=c,"linear"===t){const e="cross"===this.safeString(s,"margin","cross")?c+"_cross":c;r=e,void 0!==o?(r+="."+o,a=r):a=e+".*"}else"future"===e?void 0!==d?(a=c+"."+d,r=a):a=c+".*":void 0!==o?(a=c+"."+o,r=a):a=c+".*";return[a,r]}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){let r,a,n;await this.loadMarkets();let o,d,c="*";if(void 0!==e?(n=this.market(e),e=n.symbol,r=n.type,c=n.lowercaseId,a=n.linear?"linear":"inverse"):(r=this.safeString(this.options,"defaultType","spot"),r=this.safeString(s,"type",r),a=this.safeString2(this.options,"subType","defaultSubType","linear"),a=this.safeString(s,"subType",a),s=this.omit(s,["type","subType"])),"spot"===r)o="orders#"+c,d=o;else{const e=this.getOrderChannelAndMessageHash(r,a,n,s);d=this.safeString(e,0),o=this.safeString(e,1)}const h=await this.subscribePrivate(d,o,r,a,s);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,t,i,"timestamp",!0)}handleOrder(e,t){const i=this.safeString2(t,"ch","topic"),s=this.safeValue(t,"data");let r=this.safeString(t,"contract_code");void 0===r&&(r=this.safeString(s,"symbol"));const n=this.safeMarket(r);let o;if(void 0!==s)if("trade"===this.safeString(s,"eventType")){const e=this.parseOrderTrade(s,n);o={id:this.safeString(e,"order"),trades:[e],status:"closed",symbol:n.symbol}}else o=this.parseWsOrder(s,n);else{o=this.parseWsOrder(t,n);const s=this.safeValue(t,"trade",[]);if(s.length>0){const t={trades:s,ch:i,symbol:r},a={order:this.safeString(o,"id"),type:this.safeString(o,"type"),side:this.safeString(o,"side")};this.handleMyTrade(e,t,a)}}if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}this.orders.append(o),e.resolve(this.orders,i);let d=i.replace("."+n.lowercaseId,"");d=d.replace("."+n.lowercaseBaseId,""),e.resolve(this.orders,d)}parseWsOrder(e,t=undefined){const i=this.safeInteger2(e,"lastActTime","ts"),s=this.safeInteger(e,"orderCreateTime"),r=this.safeString2(e,"contract_code","symbol");t=this.safeMarket(r,t);const a=this.safeSymbol(r,t),n=this.safeString2(e,"orderSize","volume"),o=this.parseOrderStatus(this.safeString2(e,"orderStatus","status")),d=this.safeString2(e,"orderId","order_id"),c=this.safeString2(e,"clientOrderId","client_order_id"),h=this.safeString2(e,"orderPrice","price"),u=this.safeString(e,"execAmt"),l=this.safeString(e,"type"),p=this.safeString(e,"fee");let f;if(void 0!==p){const t=this.safeString(e,"fee_asset");f={cost:p,currency:this.safeCurrencyCode(t)}}const m=this.safeString(e,"trade_avg_price"),v=this.safeValue(e,"trade");let g=[];void 0!==l&&(g=l.split("-"));let y=this.safeStringLower(g,1);void 0===y&&(y=this.safeString(e,"order_price_type"));let b=this.safeStringLower(g,0);void 0===b&&(b=this.safeString(e,"direction"));const w=this.safeString(e,"orderValue");return this.safeOrder({info:e,id:d,clientOrderId:c,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:i,status:o,symbol:a,type:y,timeInForce:void 0,postOnly:void 0,side:b,price:h,amount:n,filled:u,remaining:void 0,cost:w,fee:f,average:m,trades:v},t)}parseOrderTrade(e,t=undefined){const i=(t=this.safeMarket(void 0,t)).symbol,s=this.safeString(e,"tradeId"),r=this.safeString(e,"tradePrice"),a=this.safeString(e,"tradeVolume"),n=this.safeString(e,"orderId"),o=this.safeInteger(e,"tradeTime");let d,c=this.safeString(e,"type");if(void 0!==c){const e=c.split("-");d=e[0],c=e[1]}const h=this.safeValue(e,"aggressor");let u;return void 0!==h&&(u=h?"taker":"maker"),this.safeTrade({info:e,timestamp:o,datetime:this.iso8601(o),symbol:i,id:s,order:n,type:c,takerOrMaker:u,side:d,price:r,amount:a,cost:void 0,fee:void 0},t)}async watchBalance(e={}){let t=this.safeString2(this.options,"watchBalance","defaultType","spot");t=this.safeString(e,"type",t);let i,s,r,a=this.safeString2(this.options,"watchBalance","subType","linear");if(a=this.safeString(e,"subType",a),e=this.omit(e,["type","subType"]),e=this.omit(e,"type"),await this.loadMarkets(),"spot"===t){let t=this.safeString2(this.options,"watchBalance","mode","2");t=this.safeString(e,"mode",t),i="accounts.update#"+t,s=i}else{const n=this.safeString(e,"symbol"),o=this.safeString(e,"currency"),d=void 0!==n?this.market(n):void 0,c=void 0!==o?this.currency(o):void 0;r=this.safeString(e,"margin","cross"),e=this.omit(e,["currency","symbol","margin"]);let h="accounts";i=h,"linear"===a?(h="cross"===r?h+"_cross":h,i=h,"isolated"===r?void 0!==n?(i+="."+d.id,s=i):s=h+".*":void 0!==c?(s=h+"."+c.id,i=s):s=h+".*"):"future"===t?void 0!==c?(i+="."+c.id,s=i):s=h+".*":void 0!==d?(i+="."+d.id,s=i):s=h+".*"}const n={type:t,subType:a,margin:r};return await this.subscribePrivate(s,i,t,a,e,n)}handleBalance(e,t){const i=this.safeString(t,"ch"),s=this.safeInteger(t,"ts");if(this.balance.timestamp=s,this.balance.datetime=this.iso8601(s),this.balance.info=this.safeValue(t,"data"),void 0!==i){const s=this.safeValue(t,"data",{}),r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.total=this.safeString(s,"balance"),this.balance[a]=n,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,i)}else{const i=this.safeValue(t,"data",[]);if(0===i.length)return;const s=this.safeValue(i,0,{});let r=this.safeString(t,"topic"),a=this.safeValue2(e.subscriptions,r,r+".*");void 0===a&&(r+="."+this.safeString(s,"margin_asset").toLowerCase(),a=this.safeValue(e.subscriptions,r));const n=this.safeString(a,"type");if("linear"===this.safeString(a,"subType"))if("cross"===this.safeString(a,"margin")){const e="future"===n?"futures_contract_detail":"contract_detail",t=this.safeValue(s,e,[]);if(t.length>0)for(let e=0;e<t.length;e++){const i=t[e],s=this.safeString2(i,"contract_code","margin_account"),r=this.safeMarket(s),a=this.safeString(i,"margin_asset"),n=this.safeCurrency(a),o=this.safeString(r,"settle",n.code);if(void 0!==o){const e=this.account();e.free=this.safeString2(i,"margin_balance","margin_available"),e.used=this.safeString(i,"margin_frozen");const t={};t[o]=e;const s=r.symbol;this.balance[s]=this.safeBalance(t)}}}else for(let e=0;e<i.length;e++){const t=i[e],s=this.account();s.free=this.safeString(t,"margin_balance","margin_available"),s.used=this.safeString(t,"margin_frozen");const r=this.safeString2(t,"margin_asset","symbol"),a=this.safeCurrencyCode(r);this.balance[a]=s,this.balance=this.safeBalance(this.balance)}else for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"symbol"),r=this.safeCurrencyCode(s),a=this.account();a.free=this.safeString(t,"margin_available"),a.used=this.safeString(t,"margin_frozen"),this.balance[r]=a,this.balance=this.safeBalance(this.balance)}e.resolve(this.balance,r)}}handleSubscriptionStatus(e,t){const i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i);if(void 0!==r){const s=this.safeValue(r,"method");if(void 0!==s)return s.call(this,e,t,r);i in e.subscriptions&&delete e.subscriptions[i]}return t}handleSystemStatus(e,t){return t}handleSubject(e,t){const i=this.safeValue(t,"ch",""),s=i.split(".");if("market"===this.safeString(s,0)){const i=this.safeString(s,2),r={depth:this.handleOrderBook,mbp:this.handleOrderBook,detail:this.handleTicker,bbo:this.handleTicker,ticker:this.handleTicker,trade:this.handleTrades,kline:this.handleOHLCV},a=this.safeValue(r,i);return void 0===a?t:a.call(this,e,t)}const r=i.split("#"),a=this.safeString(r,0,"");if("trade.clearing"!==a)if(-1===a.indexOf("accounts.update"))if("orders"!==a){if("notify"===this.safeString(t,"op")){const i=this.safeString(t,"topic","");-1!==i.indexOf("orders")&&this.handleOrder(e,t),-1!==i.indexOf("account")&&this.handleBalance(e,t)}}else this.handleOrder(e,t);else this.handleBalance(e,t);else this.handleMyTrade(e,t)}async pong(e,t){try{const i=this.safeInteger(t,"ping");if(void 0!==i)return void await e.send({pong:i});if("ping"===this.safeString(t,"action")){const i=this.safeValue(t,"data"),s=this.safeInteger(i,"ts");return void await e.send({action:"pong",data:{ts:s}})}if("ping"===this.safeString(t,"op")){const i=this.safeInteger(t,"ts");await e.send({op:"pong",ts:i})}}catch(t){const i=new r.NetworkError(this.id+" pong failed "+this.json(t));e.reset(i)}}handlePing(e,t){this.spawn(this.pong,e,t)}handleAuthenticate(e,t){return e.resolve(t,"auth"),t}handleErrorMessage(e,t){if("error"===this.safeString(t,"status")){const i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i);if(void 0!==r){const s=this.safeString(t,"err-code");try{this.throwExactlyMatchedException(this.exceptions.ws.exact,s,this.json(t))}catch(t){const s=this.safeString(r,"messageHash");e.reject(t,s),e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}}return!1}const i=this.safeInteger(t,"code");if(void 0!==i&&200!==i){const s=this.id+" "+this.json(t);try{this.throwExactlyMatchedException(this.exceptions.ws.exact,i,s)}catch(t){if(t instanceof r.AuthenticationError){e.reject(t,"auth");const i="auth";return i in e.subscriptions&&delete e.subscriptions[i],!1}e.reject(t)}}return t}handleMessage(e,t){if(this.handleErrorMessage(e,t)){if("id"in t)return void this.handleSubscriptionStatus(e,t);if("action"in t){const i=this.safeString(t,"action");if("ping"===i)return void this.handlePing(e,t);if("sub"===i)return void this.handleSubscriptionStatus(e,t)}if("ch"in t)return"auth"===t.ch?void this.handleAuthenticate(e,t):void this.handleSubject(e,t);if("op"in t){const i=this.safeString(t,"op");if("ping"===i)return void this.handlePing(e,t);if("auth"===i)return void this.handleAuthenticate(e,t);if("sub"===i)return void this.handleSubscriptionStatus(e,t);if("notify"===i)return void this.handleSubject(e,t)}"ping"in t&&this.handlePing(e,t)}}handleMyTrade(e,t,i={}){if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new a.hl(e)}const s=this.myTrades,r=this.safeString(t,"ch");if(void 0!==r){const a=this.safeValue(t,"data");if(void 0!==a){const t=this.parseWsTrade(a);void 0!==this.safeString(t,"symbol")&&(s.append(t),e.resolve(this.myTrades,r))}else{const a=this.safeValue(t,"trades",[]),n=this.safeValue(t,"symbol"),o=this.market(n);for(let e=0;e<a.length;e++){const t=a[e];let r=this.parseTrade(t,o);r=this.extend(r,i),s.append(r)}const d=r+":trade";e.resolve(this.myTrades,d);let c=r.replace("."+o.lowercaseId,"");c=c.replace("."+o.lowercaseBaseId,"");const h=c+":trade";e.resolve(this.myTrades,h)}}}parseWsTrade(e){const t=this.safeSymbol(this.safeString(e,"symbol")),i=this.safeString2(e,"side","orderSide"),s=this.safeString(e,"tradeId"),r=this.safeString(e,"tradePrice"),a=this.safeString(e,"tradeVolume"),n=this.safeString(e,"orderId"),o=this.safeInteger(e,"tradeTime"),d=this.market(t),c=this.safeString(e,"orderType"),h=this.safeValue(e,"aggressor");let u,l;void 0!==h&&(u=h?"taker":"maker");let p,f=[];void 0!==c&&(f=c.split("-"),l=this.safeString(f,1));const m=this.safeCurrencyCode(this.safeString(e,"feeCurrency"));return void 0!==m&&(p={cost:this.safeString(e,"transactFee"),currency:m}),this.safeTrade({info:e,timestamp:o,datetime:this.iso8601(o),symbol:t,id:s,order:n,type:l,takerOrMaker:u,side:i,price:r,amount:a,cost:void 0,fee:p},d)}getUrlByMarketType(e,t=!0,i=!1){const s=this.safeString(this.options,"api","api"),r={hostname:this.hostname};let a,n;if("spot"===e)a=i?this.urls.api.ws[s].spot.private:this.urls.api.ws[s].spot.public,n=this.implodeParams(a,r);else{const r=this.urls.api.ws[s][e],a=t?r.linear:r.inverse;n=i?a.private:a.public}return n}async subscribePublic(e,t,i,s=undefined,r={}){const a=this.requestId(),n={sub:i,id:a},o={id:a,messageHash:i,symbol:t,params:r};return void 0!==s&&(o.method=s),await this.watch(e,i,this.extend(n,r),i,o)}async subscribePrivate(e,t,i,s,r={},a={}){const n=this.nonce(),o={id:n,messageHash:t,params:r},d=this.extend(o,a);let c;c="spot"===i?{action:"sub",ch:e}:{op:"sub",topic:e,cid:n};const h="linear"===s,u=this.getUrlByMarketType(i,h,!0),l={type:i,url:u,hostname:"spot"===i?this.urls.hostnames.spot:this.urls.hostnames.contract};return"spot"===i&&(this.options.ws.gunzip=!1),await this.authenticate(l),await this.watch(u,t,this.extend(c,r),e,d)}async authenticate(e={}){const t=this.safeString(e,"url"),i=this.safeString(e,"hostname"),s=this.safeString(e,"type");if(void 0===t||void 0===i||void 0===s)throw new r.ArgumentsRequired(this.id+" authenticate requires a url, hostname and type argument");this.checkRequiredCredentials();const a="auth",o=t.replace("wss://"+i,""),d=this.client(t);let c=this.safeValue(d.subscriptions,a);if(void 0===c){c=d.future(a);const e=this.ymdhms(this.milliseconds(),"T");let r;r="spot"===s?{accessKey:this.apiKey,signatureMethod:"HmacSHA256",signatureVersion:"2.1",timestamp:e}:{AccessKeyId:this.apiKey,SignatureMethod:"HmacSHA256",SignatureVersion:"2",Timestamp:e},r=this.keysort(r);const h=["GET",i,o,this.urlencode(r)].join("\n"),u=this.hmac(this.encode(h),this.encode(this.secret),n.J,"base64");let l;l="spot"===s?{params:{authType:"api",accessKey:this.apiKey,signatureMethod:"HmacSHA256",signatureVersion:"2.1",timestamp:e,signature:u},action:"req",ch:a}:{op:a,type:"api",AccessKeyId:this.apiKey,SignatureMethod:"HmacSHA256",SignatureVersion:"2",Timestamp:e,Signature:u},await this.watch(t,a,l,a,c)}return await c}}},9021:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(7034),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchBalance:!1,watchOHLCV:!0},urls:{api:{ws:{api:{public:"wss://{hostname}/ws",private:"wss://{hostname}/ws/v2"}}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,api:"api",ws:{gunzip:!0}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e.toString()}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s="market."+i.id+".detail",r=this.safeString(this.options,"api","api"),a={hostname:this.hostname},n=this.implodeParams(this.urls.api.ws[r].public,a),o=this.requestId(),d={sub:s,id:o},c={id:o,messageHash:s,symbol:e,params:t};return await this.watch(n,s,this.extend(d,t),s,c)}handleTicker(e,t){const i=this.safeValue(t,"tick",{}),s=this.safeString(t,"ch"),r=s.split("."),a=this.safeString(r,1),n=this.safeMarket(a),o=this.parseTicker(i,n),d=this.safeValue(t,"ts");o.timestamp=d,o.datetime=this.iso8601(d);const c=o.symbol;return this.tickers[c]=o,e.resolve(o,s),t}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="market."+r.id+".trade.detail",n=this.safeString(this.options,"api","api"),o={hostname:this.hostname},d=this.implodeParams(this.urls.api.ws[n].public,o),c=this.requestId(),h={sub:a,id:c},u={id:c,messageHash:a,symbol:e,params:s},l=await this.watch(d,a,this.extend(h,s),a,u);return this.newUpdates&&(i=l.getLimit(e,i)),this.filterBySinceLimit(l,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"tick",{}),s=this.safeValue(i,"data",{}),r=this.safeString(t,"ch"),n=r.split("."),o=this.safeString(n,1),d=this.safeMarket(o),c=d.symbol;let h=this.safeValue(this.trades,c);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a.ZL(e),this.trades[c]=h}for(let e=0;e<s.length;e++){const t=this.parseTrade(s[e],d);h.append(t)}return e.resolve(h,r),t}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.safeString(this.timeframes,t,t),o="market."+a.id+".kline."+n,d=this.safeString(this.options,"api","api"),c={hostname:this.hostname},h=this.implodeParams(this.urls.api.ws[d].public,c),u=this.requestId(),l={sub:o,id:u},p={id:u,messageHash:o,symbol:e,timeframe:t,params:r},f=await this.watch(h,o,this.extend(l,r),o,p);return this.newUpdates&&(s=f.getLimit(e,s)),this.filterBySinceLimit(f,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"ch"),s=i.split("."),r=this.safeString(s,1),n=this.safeMarket(r),o=n.symbol,d=this.safeString(s,3),c=this.findTimeframe(d);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o,{});let h=this.safeValue(this.ohlcvs[o],c);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new a.Py(e),this.ohlcvs[o][c]=h}const u=this.safeValue(t,"tick"),l=this.parseOHLCV(u,n);h.append(l),e.resolve(h,i)}async watchOrderBook(e,t=undefined,i={}){if(void 0!==t&&150!==t)throw new r.ExchangeError(this.id+" watchOrderBook accepts limit = 150 only");await this.loadMarkets();const s=this.market(e);e=s.symbol,t=void 0===t?150:t;const a="market."+s.id+".mbp."+t.toString(),n=this.safeString(this.options,"api","api"),o={hostname:this.hostname},d=this.implodeParams(this.urls.api.ws[n].public,o),c=this.requestId(),h={sub:a,id:c},u={id:c,messageHash:a,symbol:e,limit:t,params:i,method:this.handleOrderBookSubscription};return(await this.watch(d,a,this.extend(h,i),a,u)).limit()}handleOrderBookSnapshot(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeString(i,"messageHash"),a=this.orderbooks[s],n=this.safeValue(t,"data"),o=this.parseOrderBook(n,s);o.nonce=this.safeInteger(n,"seqNum"),a.reset(o);const d=a.cache;for(let t=0;t<d.length;t++){const i=d[t];this.handleOrderBookMessage(e,i,a)}this.orderbooks[s]=a,e.resolve(a,r)}async watchOrderBookSnapshot(e,t,i){const s=this.safeString(i,"messageHash");try{const e=this.safeString(i,"symbol"),t=this.safeInteger(i,"limit"),r=this.safeValue(i,"params"),a=this.safeString(this.options,"api","api"),n={hostname:this.hostname},o=this.implodeParams(this.urls.api.ws[a].public,n),d=this.requestId(),c={req:s,id:d},h={id:d,messageHash:s,symbol:e,limit:t,params:r,method:this.handleOrderBookSnapshot};return(await this.watch(o,d,c,d,h)).limit()}catch(t){delete e.subscriptions[s],e.reject(t,s)}}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){const s=this.safeValue(t,"tick",{}),r=this.safeInteger(s,"seqNum");if(this.safeInteger(s,"prevSeqNum")<=i.nonce&&r>i.nonce){const e=this.safeValue(s,"asks",[]),a=this.safeValue(s,"bids",[]);this.handleDeltas(i.asks,e),this.handleDeltas(i.bids,a),i.nonce=r;const n=this.safeInteger(t,"ts");i.timestamp=n,i.datetime=this.iso8601(n)}return i}handleOrderBook(e,t){const i=this.safeString(t,"ch"),s=this.safeValue(t,"ch").split("."),r=this.safeString(s,1),a=this.safeSymbol(r),n=this.orderbooks[a];void 0===n.nonce?n.cache.push(t):(this.handleOrderBookMessage(e,t,n),e.resolve(n,i))}handleOrderBookSubscription(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");s in this.orderbooks&&delete this.orderbooks[s],this.orderbooks[s]=this.orderBook({},r),this.spawn(this.watchOrderBookSnapshot,e,t,i)}handleSubscriptionStatus(e,t){const i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i);if(void 0!==r){const s=this.safeValue(r,"method");if(void 0!==s)return s.call(this,e,t,r);i in e.subscriptions&&delete e.subscriptions[i]}return t}handleSystemStatus(e,t){return t}handleSubject(e,t){const i=this.safeValue(t,"ch").split(".");if("market"===this.safeString(i,0)){const s=this.safeString(i,2),r={mbp:this.handleOrderBook,detail:this.handleTicker,trade:this.handleTrades,kline:this.handleOHLCV},a=this.safeValue(r,s);return void 0===a?t:a.call(this,e,t)}}async pong(e,t){await e.send({pong:this.safeInteger(t,"ping")})}handlePing(e,t){this.spawn(this.pong,e,t)}handleErrorMessage(e,t){if("error"===this.safeString(t,"status")){const i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i);if(void 0!==r){const s=this.safeString(t,"err-code");try{this.throwExactlyMatchedException(this.exceptions.exact,s,this.json(t))}catch(t){const s=this.safeString(r,"messageHash");e.reject(t,s),e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i]}}return!1}return t}handleMessage(e,t){this.handleErrorMessage(e,t)&&(void 0!==this.safeString(t,"id")?this.handleSubscriptionStatus(e,t):void 0!==this.safeString(t,"ch")?this.handleSubject(e,t):void 0!==this.safeString(t,"ping")&&this.handlePing(e,t))}}},4625:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(8384);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"huobipro"})}}},3484:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(8232),r=i(6689),a=i(3020),n=i(2194);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchOHLCV:!0,watchTicker:!0,watchTickers:!1,watchOrders:!0,watchTransactions:!0},urls:{test:{ws:"wss://websocket-matic.idex.io/v1"},api:{}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3,watchOrderBookLimit:1e3,orderBookSubscriptions:{},token:void 0,fetchOrderBookSnapshotMaxAttempts:10,fetchOrderBookSnapshotMaxDelay:1e4}})}async subscribe(e,t,i=!0){const s=this.urls.test.ws,r={method:"subscribe",subscriptions:[e]};return await this.watch(s,t,r,t,i)}async subscribePrivate(e,t){const i=await this.authenticate(),s=this.urls.test.ws,r={method:"subscribe",token:i,subscriptions:[e]};return await this.watch(s,t,r,t)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s="tickers",r={name:s,markets:[i.id]},a=s+":"+i.id;return await this.subscribe(this.extend(r,t),a)}handleTicker(e,t){const i=this.safeString(t,"type"),s=this.safeValue(t,"data"),r=this.safeString(s,"m"),a=this.safeSymbol(r),o=i+":"+r,d=this.safeInteger(s,"t"),c=this.safeString(s,"c"),h=this.safeString(s,"P");let u;void 0!==h&&void 0!==c&&(u=n.O.stringMul(c,h));const l=this.safeTicker({symbol:a,timestamp:d,datetime:this.iso8601(d),high:this.safeString(s,"h"),low:this.safeString(s,"l"),bid:this.safeString(s,"b"),bidVolume:void 0,ask:this.safeString(s,"a"),askVolume:void 0,vwap:void 0,open:this.safeString(s,"o"),close:c,last:c,previousClose:void 0,change:u,percentage:h,average:void 0,baseVolume:this.safeString(s,"v"),quoteVolume:this.safeString(s,"q"),info:t});e.resolve(l,o)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="trades",n={name:a,markets:[r.id]},o=a+":"+r.id,d=await this.subscribe(n,o);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrade(e,t){const i=this.safeString(t,"type"),s=this.safeValue(t,"data"),r=i+":"+this.safeString(s,"m"),n=this.parseWsTrade(s);if(0===Object.keys(this.trades).length){const e=this.safeInteger(this.options,"tradesLimit");this.trades=new a.hl(e)}const o=this.trades;o.append(n),e.resolve(o,r)}parseWsTrade(e){const t=this.safeString(e,"m"),i=this.safeSymbol(t),s=this.safeString(e,"i"),r=this.safeFloat(e,"p"),a=this.safeFloat(e,"q"),n=this.safeFloat(e,"Q"),o=this.safeInteger(e,"t"),d=this.safeString(e,"s"),c={currency:this.safeString(e,"a"),cost:this.safeFloat(e,"f")},h=this.safeString(e,"l");return{info:e,timestamp:o,datetime:this.iso8601(o),symbol:i,id:s,order:void 0,type:void 0,takerOrMaker:h,side:d,price:r,amount:a,cost:n,fee:c}}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n="candles",o=this.safeString(this.timeframes,t,t),d={name:n,markets:[a.id],interval:o},c=n+":"+a.id,h=await this.subscribe(d,c);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"type"),s=this.safeValue(t,"data"),r=this.safeString(s,"m"),n=i+":"+r,o=[this.safeInteger(s,"s"),this.safeFloat(s,"o"),this.safeFloat(s,"h"),this.safeFloat(s,"l"),this.safeFloat(s,"c"),this.safeFloat(s,"v")],d=this.safeSymbol(r),c=this.safeString(s,"i"),h=this.findTimeframe(c);this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let u=this.safeValue(this.ohlcvs[d],h);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new a.Py(e),this.ohlcvs[d][h]=u}u.append(o),e.resolve(u,n)}handleSubscribeMessage(e,t){const i=this.safeValue(t,"subscriptions");for(let t=0;t<i.length;t++){const s=i[t];if("l2orderbook"===this.safeString(s,"name")){const t=this.safeValue(s,"markets");for(let i=0;i<t.length;i++){const s=t[i];if(!(s in this.safeValue(this.options,"orderBookSubscriptions",{}))){const t=this.safeSymbol(s);if(!(t in this.orderbooks)){const e=this.countedOrderBook({});e.cache=[],this.orderbooks[t]=e}this.spawn(this.fetchOrderBookSnapshot,e,t)}}break}}}async fetchOrderBookSnapshot(e,t,i={}){const s=this.orderbooks[t],a="l2orderbook:"+this.market(t).id,n=e.subscriptions[a];n.fetchingOrderBookSnapshot||(n.startTime=this.milliseconds()),n.fetchingOrderBookSnapshot=!0;const o=this.safeInteger(this.options,"fetchOrderBookSnapshotMaxAttempts",10),d=this.safeInteger(this.options,"fetchOrderBookSnapshotMaxDelay",1e4);try{const i=this.safeInteger(n,"limit",0),c=await this.fetchOrderBook(t,i),h=this.safeValue(s.cache,0),u=this.safeValue(h,"data"),l=this.safeInteger(u,"u"),p=s.cache.length,f=this.safeValue(s.cache,p-1),m=this.safeValue(f,"data"),v=this.safeInteger(m,"u");if(void 0!==l&&void 0!==v&&l<=c.nonce+1&&v>c.nonce){s.reset(c);for(let t=0;t<s.cache.length;t++){const i=s.cache[t],r=this.safeValue(i,"data");this.safeInteger(r,"u")>s.nonce&&this.handleOrderBookMessage(e,i,s)}n.fetchingOrderBookSnapshot=!1,e.resolve(s,a)}else{n.numAttempts=n.numAttempts+1;const i=this.milliseconds()-n.startTime,s=n.numAttempts<o;if(!(s&&i<d)){const e=s?" after "+d.toString()+" milliseconds":" in "+o.toString()+" attempts";throw new r.InvalidNonce(this.id+" failed to synchronize WebSocket feed with the snapshot for symbol "+t+e)}this.delay(this.rateLimit,this.fetchOrderBookSnapshot,e,t)}}catch(t){n.fetchingOrderBookSnapshot=!1,e.reject(t,a)}}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r="l2orderbook",a={name:r,markets:[s.id]},n=r+":"+s.id,o={fetchingOrderBookSnapshot:!1,numAttempts:0,startTime:void 0};return o.limit=void 0===t?1e3:t,(await this.subscribe(a,n,o)).limit()}handleOrderBook(e,t){const i=this.safeValue(t,"data"),s=this.safeString(i,"m"),r=this.safeSymbol(s),a=this.orderbooks[r];void 0===a.nonce?a.cache.push(t):this.handleOrderBookMessage(e,t,a)}handleOrderBookMessage(e,t,i){const s=this.safeString(t,"type"),r=this.safeValue(t,"data"),a=s+":"+this.safeString(r,"m"),n=this.safeInteger(r,"u"),o=this.safeInteger(r,"t"),d=this.safeValue(r,"b"),c=this.safeValue(r,"a");this.handleDeltas(i.bids,d),this.handleDeltas(i.asks,c),i.nonce=n,i.timestamp=o,i.datetime=this.iso8601(o),e.resolve(i,a)}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1),r=this.safeInteger(t,2);e.store(i,s,r)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async authenticate(e={}){const t=this.seconds();if(t-this.safeInteger(this.options,"lastAuthenticatedTime",0)>900){const i={wallet:this.walletAddress,nonce:this.uuidv1()},s=await this.privateGetWsToken(this.extend(i,e));this.options.lastAuthenticatedTime=t,this.options.token=this.safeString(s,"token")}return this.options.token}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r="orders",a={name:r};let n=r;if(void 0!==e){e=this.symbol(e);const t=this.marketId(e);a.markets=[t],n=r+":"+t}const o=await this.subscribePrivate(a,n);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleOrder(e,t){const i=this.safeString(t,"type"),s=this.safeValue(t,"data"),r=this.safeString(s,"m"),n=this.safeSymbol(r),o=this.safeInteger(s,"t"),d=this.safeValue(s,"F"),c=[];for(let e=0;e<d.length;e++)c.push(this.parseWsTrade(d[e]));const h=this.safeString(s,"i"),u=this.safeString(s,"s"),l=this.safeString(s,"o"),p=this.safeFloat(s,"q"),f=this.safeFloat(s,"z");let m;void 0!==p&&void 0!==f&&(m=p-f);const v=this.safeFloat(s,"v"),g=this.safeFloat(s,"price",v);let y;void 0!==p&&void 0!==g&&(y=p*g);const b=this.safeString(s,"X"),w=this.parseOrderStatus(b),S={currency:void 0,cost:void 0};let P;for(let e=0;e<c.length;e++)P=c[e],S.currency=P.fee.currency,S.cost=this.sum(S.cost,P.fee.cost);const k=this.safeInteger(P,"timestamp"),O={info:t,id:h,clientOrderId:void 0,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:k,symbol:n,type:l,side:u,price:g,stopPrice:void 0,triggerPrice:void 0,amount:p,cost:y,average:v,filled:f,remaining:m,status:w,fee:S,trades:c};if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const T=this.orders;T.append(O);const A=i+":"+r;e.resolve(T,A),e.resolve(T,i)}async watchTransactions(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r="balances",a={name:r};let n=r;void 0!==e&&(n=r+":"+e);const o=await this.subscribePrivate(a,n);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTransaction(e,t){const i=this.safeString(t,"type"),s=this.safeValue(t,"data"),r=this.safeString(s,"a"),n=i+":"+r,o=this.safeCurrencyCode(r),d={info:t,id:void 0,currency:o,amount:void 0,address:this.safeString(s,"w"),addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,status:"ok",type:void 0,updated:void 0,txid:void 0,timestamp:void 0,datetime:void 0,fee:void 0};if(!(o in this.transactions)){const e=this.safeInteger(this.options,"transactionsLimit",1e3);this.transactions[o]=new a.ZL(e)}const c=this.transactions[o];c.append(d),e.resolve(c,n),e.resolve(c,i)}handleMessage(e,t){const i=this.safeString(t,"type"),s={tickers:this.handleTicker,trades:this.handleTrade,subscriptions:this.handleSubscribeMessage,candles:this.handleOHLCV,l2orderbook:this.handleOrderBook,balances:this.handleTransaction,orders:this.handleOrder};i in s&&s[i].call(this,e,t)}}},1311:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(9570),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchTicker:!1,watchTickers:!1,watchTrades:!0,watchMyTrades:!1,watchOrders:!1,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:"wss://websockets.independentreserve.com"}},options:{checksum:!1},streaming:{},exceptions:{}})}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=this.urls.api.ws+"?subscribe=ticker-"+r.base+"-"+r.quote,n="trades:"+e,o=await this.watch(a,n,void 0,n);return this.filterBySinceLimit(o,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"Data",{}),s=this.safeString(i,"Pair"),r=this.safeSymbol(s,void 0,"-"),n="trades:"+r;let o=this.safeValue(this.trades,r);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new a.ZL(e),this.trades[r]=o}const d=this.parseWsTrade(i);o.append(d),this.trades[r]=o,e.resolve(this.trades[r],n)}parseWsTrade(e,t=undefined){const i=this.safeString(e,"TradeDate"),s=this.safeString(t,"Pair");return this.safeTrade({info:e,id:this.safeString(e,"TradeGuid"),order:this.safeString(e,"orderNo"),symbol:this.safeSymbol(s,t,"-"),side:this.safeStringLower(e,"Side"),type:void 0,takerOrMaker:void 0,price:this.safeString(e,"Price"),amount:this.safeString(e,"Volume"),cost:void 0,fee:void 0,timestamp:this.parse8601(i),datetime:i},t)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol,void 0===t&&(t=100),t=this.numberToString(t);const r=this.urls.api.ws+"/orderbook/"+t+"?subscribe="+s.base+"-"+s.quote,a="orderbook:"+e+":"+t;return(await this.watch(r,a,void 0,a,{receivedSnapshot:!1})).limit()}handleOrderBook(e,t){const i=this.safeString(t,"Event"),s=this.safeString(t,"Channel").split("/"),a=this.safeString(s,1),n=this.safeString(s,2),o=this.safeString(s,3),d=this.safeCurrencyCode(n)+"/"+this.safeCurrencyCode(o),c=this.safeValue(t,"Data",{}),h="orderbook:"+d+":"+a,u=this.safeValue(e.subscriptions,h,{}),l=this.safeValue(u,"receivedSnapshot",!1),p=this.safeInteger(t,"Time");let f=this.safeValue(this.orderbooks,d);if(void 0===f&&(f=this.orderBook({}),this.orderbooks[d]=f),"OrderBookSnapshot"===i){const e=this.parseOrderBook(c,d,p,"Bids","Offers","Price","Volume");f.reset(e),u.receivedSnapshot=!0}else{const e=this.safeValue(c,"Offers",[]),t=this.safeValue(c,"Bids",[]);this.handleDeltas(f.asks,e),this.handleDeltas(f.bids,t),f.timestamp=p,f.datetime=this.iso8601(p)}if(this.safeValue(this.options,"checksum",!0)&&l){const t=f.asks,i=f.bids,s=t.length,a=i.length;let n="";for(let e=0;e<10;e++)e<a&&(n=n+this.valueToChecksum(i[e][0])+this.valueToChecksum(i[e][1]));for(let e=0;e<10;e++)e<s&&(n=n+this.valueToChecksum(t[e][0])+this.valueToChecksum(t[e][1]));if(this.crc32(n,!0)!==this.safeInteger(c,"Crc32")){const t=new r.InvalidNonce(this.id+" invalid checksum");e.reject(t,h)}}l&&e.resolve(f,h)}valueToChecksum(e){let t=e.toFixed(8);return t=t.replace(".",""),t=this.parseNumber(t),t=this.numberToString(t),t}handleDelta(e,t){const i=this.parseBidAsk(t,"Price","Volume");e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleHeartbeat(e,t){return t}handleSubscriptions(e,t){return t}handleMessage(e,t){const i=this.safeString(t,"Event"),s={Subscriptions:this.handleSubscriptions,Heartbeat:this.handleHeartbeat,Trade:this.handleTrades,OrderBookSnapshot:this.handleOrderBook,OrderBookChange:this.handleOrderBook},a=this.safeValue(s,i);if(void 0!==a)return a.call(this,e,t);throw new r.NotSupported(this.id+" received an unsupported message: "+this.json(t))}}},736:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(9922),r=i(6689),a=i(3020),n=i(2194);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{api:{ws:{public:"wss://ws.kraken.com",private:"wss://ws-auth.kraken.com",beta:"wss://beta-ws.kraken.com"}}},options:{tradesLimit:1e3,OHLCVLimit:1e3,ordersLimit:1e3,symbolsByOrderId:{},checksum:!0},exceptions:{ws:{exact:{"Event(s) not found":r.BadRequest},broad:{"Currency pair not in ISO 4217-A3 format":r.BadSymbol}}}})}handleTicker(e,t,i){const s=t[3],r="ticker:"+s,a=this.safeValue(this.options.marketsByWsName,s).symbol,o=t[1],d=this.safeString(o.p,0);let c;const h=this.safeString(o.v,0);void 0!==h&&void 0!==d&&(c=n.O.stringMul(h,d));const u=this.safeString(o.c,0),l=this.milliseconds(),p=this.safeTicker({symbol:a,timestamp:l,datetime:this.iso8601(l),high:this.safeString(o.h,0),low:this.safeString(o.l,0),bid:this.safeString(o.b,0),bidVolume:this.safeString(o.b,2),ask:this.safeString(o.a,0),askVolume:this.safeString(o.a,2),vwap:d,open:this.safeString(o.o,0),close:u,last:u,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:h,quoteVolume:c,info:o});this.tickers[a]=p,e.resolve(p,r)}handleTrades(e,t,i){const s=this.safeString(t,3),r=this.safeString(t,2)+":"+s,n=this.safeValue(this.options.marketsByWsName,s),o=n.symbol;let d=this.safeValue(this.trades,o);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new a.ZL(e),this.trades[o]=d}const c=this.safeValue(t,1,[]),h=this.parseTrades(c,n);for(let e=0;e<h.length;e++)d.append(h[e]);e.resolve(d,r)}handleOHLCV(e,t,i){const s=this.safeValue(i,"subscription",{}),r=this.safeInteger(s,"interval"),n=this.safeString(s,"name"),o=this.safeString(t,3),d=this.safeValue(this.options.marketsByWsName,o).symbol,c=this.findTimeframe(r),h=this.parseTimeframe(c);if(void 0!==c){const i=this.safeValue(t,1),s=n+":"+c+":"+o;let r=this.safeFloat(i,1);r-=h;const u=[this.parseToInt(1e3*r),this.safeFloat(i,2),this.safeFloat(i,3),this.safeFloat(i,4),this.safeFloat(i,5),this.safeFloat(i,7)];this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let l=this.safeValue(this.ohlcvs[d],c);if(void 0===l){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new a.Py(e),this.ohlcvs[d][c]=l}l.append(u),e.resolve(l,s)}}requestId(){const e=this.sum(this.safeInteger(this.options,"reqid",0),1);return this.options.reqid=e,e}async watchPublic(e,t,i={}){await this.loadMarkets();const s=this.market(t),r=this.safeValue(s.info,"wsname"),a=e+":"+r,n=this.urls.api.ws.public,o={event:"subscribe",reqid:this.requestId(),pair:[r],subscription:{name:e}},d=this.deepExtend(o,i);return await this.watch(n,a,d,a)}async watchTicker(e,t={}){return await this.watchPublic("ticker",e,t)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.watchPublic("trade",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrderBook(e,t=undefined,i={}){const s={};if(void 0!==t){if(10!==t&&25!==t&&100!==t&&500!==t&&1e3!==t)throw new r.NotSupported(this.id+" watchOrderBook accepts limit values of 10, 25, 100, 500 and 1000 only");s.subscription={depth:t}}return(await this.watchPublic("book",e,this.extend(s,i))).limit()}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a="ohlc",n=this.market(e);e=n.symbol;const o=this.safeValue(n.info,"wsname"),d=a+":"+t+":"+o,c=this.urls.api.ws.public,h={event:"subscribe",reqid:this.requestId(),pair:[o],subscription:{name:a,interval:this.safeString(this.timeframes,t,t)}},u=this.deepExtend(h,r),l=await this.watch(c,d,u,d);return this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}async loadMarkets(e=!1,t={}){const i=await super.loadMarkets(e,t);let s=this.safeValue(this.options,"marketsByWsName");if(void 0===s||e){s={};for(let e=0;e<this.symbols.length;e++){const t=this.symbols[e],i=this.markets[t];if(i.darkpool){const e=this.safeValue(i,"info",{}),t=this.safeString(e,"altname");s[t.slice(0,3)+"/"+t.slice(3)]=i}else{const e=this.safeValue(i,"info",{});s[this.safeString(e,"wsname")]=i}}this.options.marketsByWsName=s}return i}async watchHeartbeat(e={}){await this.loadMarkets();const t=this.urls.api.ws.public;return await this.watch(t,"heartbeat")}handleHeartbeat(e,t){const i=this.safeString(t,"event");e.resolve(t,i)}handleOrderBook(e,t,i){const s=t.length,a=t[s-1],n=t[s-2].split("-"),o=this.safeInteger(n,1,10),d=this.safeValue(this.options.marketsByWsName,a).symbol;let c;const h="book:"+a;if("as"in t[1]){this.orderbooks[d]=this.orderBook({},o);const i=this.orderbooks[d],s={as:"asks",bs:"bids"},r=Object.keys(s);for(let e=0;e<r.length;e++){const a=r[e],n=i[s[a]],o=this.safeValue(t[1],a,[]);c=this.handleDeltas(n,o,c)}i.symbol=d,i.timestamp=c,i.datetime=this.iso8601(c),e.resolve(i,h)}else{const i=this.orderbooks[d];let a,n,o;5===s?(a=this.safeValue(t[1],"a",[]),n=this.safeValue(t[2],"b",[]),o=this.safeInteger(t[1],"c"),o=this.safeInteger(t[2],"c",o)):(o=this.safeInteger(t[1],"c"),"a"in t[1]?a=this.safeValue(t[1],"a",[]):n=this.safeValue(t[1],"b",[]));const u=i.asks,l=i.bids;let p;if(void 0!==a&&(c=this.handleDeltas(u,a,c),p=this.safeValue(a,0)),void 0!==n&&(c=this.handleDeltas(l,n,c),p=this.safeValue(n,0)),i.limit(),this.safeValue(this.options,"checksum",!0)){const t=this.safeString(p,0),i=this.safeString(p,1),s=t.split("."),a=i.split("."),n=s[1].length-0,d=a[1].length-0,c=[];if(void 0!==o){for(let e=0;e<10;e++){const t=this.formatNumber(u[e][0],n)+this.formatNumber(u[e][1],d);c.push(t)}for(let e=0;e<10;e++){const t=this.formatNumber(l[e][0],n)+this.formatNumber(l[e][1],d);c.push(t)}}const f=c.join("");if(this.crc32(f,!1)!==o){const t=new r.InvalidNonce(this.id+" invalid checksum");e.reject(t,h)}}i.symbol=d,i.timestamp=c,i.datetime=this.iso8601(c),e.resolve(i,h)}}formatNumber(e,t){const i=this.numberToString(e).split("."),s=this.safeString(i,0)+this.safeString(i,1,"").padEnd(t,"0");let r=0;for(;"0"===s[r];)r+=1;return r>0?s.slice(r):s}handleDeltas(e,t,i=undefined){for(let s=0;s<t.length;s++){const r=t[s],a=this.parseNumber(r[0]),n=this.parseNumber(r[1]),o=i||0;i=Math.max(o,this.parseToInt(1e3*parseFloat(r[2]))),e.store(a,n)}return i}handleSystemStatus(e,t){return t}async authenticate(e={}){const t=this.urls.api.ws.private,i=this.client(t),s="authenticated";let r=this.safeValue(i.subscriptions,s);if(void 0===r){const t=await this.privatePostGetWebSocketsToken(e);r=this.safeValue(t,"result"),i.subscriptions[s]=r}return this.safeString(r,"token")}async watchPrivate(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a=await this.authenticate(),n=e;let o=e;void 0!==t&&(o+=":"+(t=this.symbol(t)));const d=this.urls.api.ws.private,c={event:"subscribe",reqid:this.requestId(),subscription:{name:e,token:a}},h=this.deepExtend(c,r),u=await this.watch(d,o,h,n);return this.newUpdates&&(s=u.getLimit(t,s)),this.filterBySymbolSinceLimit(u,t,i,s,!0)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){return await this.watchPrivate("ownTrades",e,t,i,s)}handleMyTrades(e,t,i=undefined){const s=this.safeValue(t,0,[]);if(s.length>0){if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new a.ZL(e)}const t=this.myTrades,i={};for(let e=0;e<s.length;e++){const r=this.safeValue(s,e,{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const s=a[e],n=r[s],o=this.parseWsTrade(this.extend({id:s},n));t.append(o),i[o.symbol]=!0}}const r="ownTrades";e.resolve(this.myTrades,r);const n=Object.keys(i);for(let t=0;t<n.length;t++){const i=r+":"+n[t];e.resolve(this.myTrades,i)}}}parseWsTrade(e,t=undefined){const i=this.safeString(e,"pair");let s;t=this.safeValue(this.options.marketsByWsName,i,t);const r=this.safeString(e,"ordertxid"),a=this.safeString2(e,"id","postxid"),n=this.safeTimestamp(e,"time"),o=this.safeString(e,"type"),d=this.safeString(e,"ordertype"),c=this.safeFloat(e,"price"),h=this.safeFloat(e,"vol");let u,l;if("fee"in e){let i;void 0!==t&&(i=t.quote),l={cost:this.safeFloat(e,"fee"),currency:i}}return void 0!==t&&(s=t.symbol),void 0!==c&&void 0!==h&&(u=c*h),{id:a,order:r,info:e,timestamp:n,datetime:this.iso8601(n),symbol:s,type:d,side:o,takerOrMaker:void 0,price:c,amount:h,cost:u,fee:l}}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.watchPrivate("openOrders",e,t,i,s)}handleOrders(e,t,i=undefined){const s=this.safeValue(t,0,[]);if(s.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new a.hl(t));const i=this.orders,r={};for(let e=0;e<s.length;e++){const a=this.safeValue(s,e,{}),n=Object.keys(a);for(let e=0;e<n.length;e++){const s=n[e],o=a[s],d=this.parseWsOrder(o);let c;d.id=s;const h=this.safeValue(this.options,"symbolsByOrderId",{});void 0!==d.symbol?(c=d.symbol,h[s]=c,this.options.symbolsByOrderId=h):c=this.safeString(h,s);const u=this.safeValue(i.hashmap,c),l=this.safeValue(u,s);let p=d;if(void 0!==l){const e=this.extend(l.info,p.info);p=this.parseWsOrder(e),p.id=s}if(i.length===t&&void 0===l){const e=i[0];e.id in h&&delete h[e.id]}i.append(p),r[c]=!0}}const n="openOrders";e.resolve(this.orders,n);const o=Object.keys(r);for(let t=0;t<o.length;t++){const i=n+":"+o[t];e.resolve(this.orders,i)}}}parseWsOrder(e,t=undefined){const i=this.safeValue(e,"descr",{}),s=this.safeString(i,"order");let r,a,o,d,c,h;if(void 0!==s){const e=s.split(" ");r=this.safeString(e,0),c=this.safeString(e,1),o=this.safeString(e,2),a=this.safeString(e,4),d=this.safeString(e,5)}r=this.safeString(i,"type",r),a=this.safeString(i,"ordertype",a),o=this.safeString(i,"pair",o),t=this.safeValue(this.options.marketsByWsName,o,t);const u=this.safeTimestamp(e,"opentm");c=this.safeString(e,"vol",c);const l=this.safeString(e,"vol_exec");let p;const f=this.safeString(e,"cost");d=this.safeString(i,"price",d),(void 0===d||n.O.stringEq(d,"0.0"))&&(d=this.safeString(i,"price2")),(void 0===d||n.O.stringEq(d,"0.0"))&&(d=this.safeString(e,"price",d));const m=this.safeString2(e,"avg_price","price");if(void 0!==t&&(h=t.symbol,"fee"in e)){const i=e.oflags;p={cost:this.safeString(e,"fee"),rate:void 0},i.indexOf("fciq")>=0?p.currency=t.quote:i.indexOf("fcib")>=0&&(p.currency=t.base)}const v=this.parseOrderStatus(this.safeString(e,"status"));let g=this.safeString(e,"id");if(void 0===g){const t=this.safeValue(e,"txid");g=this.safeString(t,0)}const y=this.safeString(e,"userref"),b=this.safeValue(e,"trades");let w;void 0!==b&&(w=this.parseTrades(b,t,void 0,void 0,{order:g}));const S=this.safeNumber(e,"stopprice");return this.safeOrder({id:g,clientOrderId:y,info:e,timestamp:u,datetime:this.iso8601(u),lastTradeTimestamp:void 0,status:v,symbol:h,type:a,timeInForce:void 0,postOnly:void 0,side:r,price:d,stopPrice:S,triggerPrice:S,cost:f,amount:c,filled:l,average:m,remaining:void 0,fee:p,trades:w})}handleSubscriptionStatus(e,t){const i=this.safeString(t,"channelID");void 0!==i&&(e.subscriptions[i]=t)}handleErrorMessage(e,t){const i=this.safeValue(t,"errorMessage");if(void 0!==i){const s=this.safeValue(t,"reqid");if(void 0!==s){const t=this.exceptions.ws.broad,a=this.findBroadlyMatchedKey(t,i);let n;return n=void 0===a?new r.ExchangeError(i):new t[a](i),e.reject(n,s),!1}}return!0}handleMessage(e,t){if(Array.isArray(t)){const i=this.safeString(t,0),s=this.safeValue(e.subscriptions,i,{}),r=this.safeValue(s,"subscription",{}),a=t.length,n=this.safeString(t,a-2),o=this.safeString(r,"name"),d={book:this.handleOrderBook,ohlc:this.handleOHLCV,ticker:this.handleTicker,trade:this.handleTrades,openOrders:this.handleOrders,ownTrades:this.handleMyTrades},c=this.safeValue2(d,o,n);return void 0===c?t:c.call(this,e,t,s)}if(this.handleErrorMessage(e,t)){const i=this.safeString(t,"event"),s={heartbeat:this.handleHeartbeat,systemStatus:this.handleSystemStatus,subscriptionStatus:this.handleSubscriptionStatus},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}}}},2387:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(3583),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchOrders:!0,watchMyTrades:!0,watchTickers:!1,watchTicker:!0,watchTrades:!0,watchBalance:!0,watchOHLCV:!0},options:{tradesLimit:1e3,watchTicker:{name:"market/snapshot"},watchOrderBook:{snapshotDelay:5,maxRetries:3}},streaming:{ping:this.ping}})}negotiate(e,t={}){const i=e?"private":"public",s=this.safeValue(this.options,"urls",{});return i in s||(s[i]=this.spawn(this.negotiateHelper,e,t),this.options.urls=s),s[i]}async negotiateHelper(e,t={}){let i;const s=e?"private":"public";i=e?await this.privatePostBulletPrivate(t):await this.publicPostBulletPublic(t);const r=this.safeValue(i,"data",{}),a=this.safeValue(r,"instanceServers",[]),n=this.safeValue(a,0),o=this.safeInteger(n,"pingInterval"),d=this.safeString(n,"endpoint"),c=this.safeString(r,"token"),h=d+"?"+this.urlencode({token:c,privateChannel:e,connectId:s});return this.client(h).keepAlive=o,h}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async subscribe(e,t,i,s,r={}){const a=this.requestId().toString(),n={id:a,type:"subscribe",topic:i,response:!0},o=this.extend(n,r),d={id:a};return s=void 0===s?d:this.extend(d,s),await this.watch(e,t,o,i,s)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s=await this.negotiate(!1),[r,a]=this.handleOptionAndParams(t,"watchTicker","method","/market/snapshot"),n=r+":"+i.id,o="ticker:"+e;return await this.subscribe(s,o,n,void 0,a)}handleTicker(e,t){const i=this.safeString(t,"topic");let s;if(void 0!==i){const e=i.split(":"),t=this.safeString(e,1);s=this.safeMarket(t,s,"-")}const r=this.safeValue(t,"data",{}),a=this.safeValue(r,"data",r),n=this.parseTicker(a,s),o=n.symbol;this.tickers[o]=n;const d="ticker:"+o;e.resolve(n,d)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=await this.negotiate(!1),n=this.market(e);e=n.symbol;const o=this.safeString(this.timeframes,t,t),d="/market/candles:"+n.id+"_"+o,c="candles:"+e+":"+t,h=await this.subscribe(a,c,d,void 0,r);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(i,"symbol"),r=this.safeValue(i,"candles",[]),n=this.safeString(t,"topic").split("_"),o=this.safeString(n,1),d=this.findTimeframe(o),c=this.safeMarket(s),h=c.symbol,u="candles:"+h+":"+d;this.ohlcvs[h]=this.safeValue(this.ohlcvs,h,{});let l=this.safeValue(this.ohlcvs[h],d);if(void 0===l){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new a.Py(e),this.ohlcvs[h][d]=l}const p=this.parseOHLCV(r,c);l.append(p),e.resolve(l,u)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.negotiate(!1),a=this.market(e);e=a.symbol;const n="/market/match:"+a.id,o="trades:"+e,d=await this.subscribe(r,o,n,void 0,s);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrade(e,t){const i=this.safeValue(t,"data",{}),s=this.parseTrade(i),r=s.symbol,n="trades:"+r;let o=this.safeValue(this.trades,r);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new a.ZL(e),this.trades[r]=o}o.append(s),e.resolve(o,n)}async watchOrderBook(e,t=undefined,i={}){if(void 0!==t&&20!==t&&100!==t)throw new r.ExchangeError(this.id+" watchOrderBook 'limit' argument must be undefined, 20 or 100");await this.loadMarkets();const s=await this.negotiate(!1),a=this.market(e);e=a.symbol;const n="/market/level2:"+a.id,o="orderbook:"+e,d={method:this.handleOrderBookSubscription,symbol:e,limit:t};return(await this.subscribe(s,o,n,d,i)).limit()}handleOrderBook(e,t){const i=this.safeValue(t,"data"),s=this.safeString(i,"symbol"),r=this.safeSymbol(s,void 0,"-"),a="orderbook:"+r,n=this.orderbooks[r],o=this.safeInteger(n,"nonce"),d=this.safeInteger(i,"sequenceEnd");if(void 0===o){const s=n.cache.length,o=this.safeString(t,"topic"),d=e.subscriptions[o],c=this.safeInteger(d,"limit");return s===this.handleOption("watchOrderBook","snapshotDelay",5)&&this.spawn(this.loadOrderBook,e,a,r,c),void n.cache.push(i)}o>=d||(this.handleDelta(n,i),e.resolve(n,a))}getCacheIndex(e,t){const i=this.safeValue(t,0),s=this.safeInteger(e,"nonce");if(s<this.safeInteger(i,"sequenceStart")-1)return-1;for(let e=0;e<t.length;e++){const i=t[e],r=this.safeInteger(i,"sequenceStart"),a=this.safeInteger(i,"sequenceEnd");if(s>=r-1&&s<a)return e}return t.length}handleDelta(e,t){e.nonce=this.safeInteger(t,"sequenceEnd");const i=this.safeInteger(t,"time");e.timestamp=i,e.datetime=this.iso8601(i);const s=this.safeValue(t,"changes"),r=this.safeValue(s,"bids",[]),a=this.safeValue(s,"asks",[]),n=e.bids,o=e.asks;this.handleBidAsks(n,r),this.handleBidAsks(o,a)}handleBidAsks(e,t){for(let i=0;i<t.length;i++){const s=this.parseBidAsk(t[i]);e.storeArray(s)}}handleOrderBookSubscription(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");this.orderbooks[s]=this.orderBook({},r)}handleSubscriptionStatus(e,t){const i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i,{}),a=this.safeValue(r,"method");return void 0!==a&&a.call(this,e,t,r),t}handleSystemStatus(e,t){return t}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.negotiate(!0);let a="orders";void 0!==e&&(a=a+":"+(e=this.market(e).symbol));const n=await this.subscribe(r,a,"/spotMarket/tradeOrders",void 0,this.extend({privateChannel:!0},s));return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}parseWsOrderStatus(e){return this.safeString({open:"open",filled:"closed",match:"open",update:"open",canceled:"canceled"},e,e)}parseWsOrder(e,t=undefined){const i=this.safeString(e,"orderId"),s=this.safeString(e,"clientOid"),r=this.safeStringLower(e,"orderType"),a=this.safeString(e,"price"),n=this.safeString(e,"filledSize"),o=this.safeString(e,"size"),d=this.safeString(e,"type"),c=this.parseWsOrderStatus(d),h=this.safeIntegerProduct(e,"orderTime",1e-6),u=this.safeString(e,"symbol"),l=(t=this.safeMarket(u,t)).symbol,p=this.safeStringLower(e,"side");return this.safeOrder({info:e,symbol:l,id:i,clientOrderId:s,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,type:r,timeInForce:void 0,postOnly:void 0,side:p,price:a,stopPrice:void 0,triggerPrice:void 0,amount:o,cost:void 0,average:void 0,filled:n,remaining:void 0,status:c,fee:void 0,trades:void 0},t)}handleOrder(e,t){const i="orders",s=this.safeValue(t,"data"),r=this.parseWsOrder(s),n=this.safeString(r,"symbol"),o=this.safeString(r,"id");if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const d=this.orders,c=this.safeValue(d.hashmap,n,{}),h=this.safeValue(c,o);if(void 0!==h){const e=this.safeValue(h,"stopPrice");void 0!==e&&(r.stopPrice=e),"closed"===h.status&&(r.status="closed")}d.append(r),e.resolve(this.orders,i);const u=i+":"+n;e.resolve(this.orders,u)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.negotiate(!0);let a="myTrades";if(void 0!==e){const t=this.market(e);e=t.symbol,a=a+":"+t.symbol}const n=await this.subscribe(r,a,"/spot/tradeFills",void 0,this.extend({privateChannel:!0},s));return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i)}handleMyTrade(e,t){let i=this.myTrades;if(void 0===i){const e=this.safeInteger(this.options,"tradesLimit",1e3);i=new a.hl(e)}const s=this.safeValue(t,"data"),r=this.parseWsTrade(s);i.append(r);const n="myTrades";e.resolve(i,n);const o=n+":"+r.symbol;e.resolve(i,o)}parseWsTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t,"-")).symbol,r=this.safeString(e,"orderType"),a=this.safeString(e,"side"),n=this.safeString(e,"tradeId"),o=this.safeString(e,"price"),d=this.safeString(e,"size"),c=this.safeString(e,"orderId"),h=this.safeIntegerProduct(e,"time",1e-6),u=t.quote,l=this.safeString(e,"feeRate"),p={cost:this.safeString(e,"fee"),rate:l,currency:u};return this.safeTrade({info:e,timestamp:h,datetime:this.iso8601(h),symbol:s,id:n,order:c,type:r,takerOrMaker:void 0,side:a,price:o,amount:d,cost:void 0,fee:p},t)}async watchBalance(e={}){await this.loadMarkets();const t=await this.negotiate(!0);return await this.subscribe(t,"balance","/account/balance",void 0,this.extend({privateChannel:!0},e))}handleBalance(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(i,"currency"),r=this.safeString(i,"relationEvent");let a;if(void 0!==r){const e=r.split(".");a=this.safeString(e,0)}const n=this.safeString2(this.options,"watchBalance","defaultType","trade"),o=this.safeValue(this.options,"accountsByType"),d=this.safeString(o,a,"trade");d in this.balance||(this.balance[d]={}),this.balance[d].info=i;const c=this.safeInteger(i,"time");this.balance[d].timestamp=c,this.balance[d].datetime=this.iso8601(c);const h=this.safeCurrencyCode(s),u=this.account();u.free=this.safeString(i,"available"),u.used=this.safeString(i,"hold"),u.total=this.safeString(i,"total"),this.balance[d][h]=u,this.balance[d]=this.safeBalance(this.balance[d]),d===n&&e.resolve(this.balance[d],"balance")}handleSubject(e,t){const i=this.safeString(t,"subject"),s={"trade.l2update":this.handleOrderBook,"trade.ticker":this.handleTicker,"trade.snapshot":this.handleTicker,"trade.l3match":this.handleTrade,"trade.candles.update":this.handleOHLCV,"account.balance":this.handleBalance,"/spot/tradeFills":this.handleMyTrade,orderChange:this.handleOrder},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}ping(e){return{id:this.requestId().toString(),type:"ping"}}handlePong(e,t){e.lastPong=this.milliseconds()}handleErrorMessage(e,t){return t}handleMessage(e,t){const i=this.safeString(t,"type"),s={welcome:this.handleSystemStatus,ack:this.handleSubscriptionStatus,message:this.handleSubject,pong:this.handlePong},r=this.safeValue(s,i);if(void 0!==r)return r.call(this,e,t)}}},7181:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(1924),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTrades:!0,watchOrderBook:!0,watchOrders:!0,watchBalance:!0},options:{accountsByType:{swap:"future",cross:"margin"},tradesLimit:1e3,watchOrderBook:{snapshotDelay:20,maxRetries:3},watchTicker:{name:"contractMarket/tickerV2"}},streaming:{ping:this.ping}})}negotiate(e,t={}){const i=e?"private":"public",s=this.safeValue(this.options,"urls",{});return i in s||(s[i]=this.spawn(this.negotiateHelper,e,t),this.options.urls=s),s[i]}async negotiateHelper(e,t={}){let i;const s=e?"private":"public";i=e?await this.futuresPrivatePostBulletPrivate(t):await this.futuresPublicPostBulletPublic(t);const r=this.safeValue(i,"data",{}),a=this.safeValue(r,"instanceServers",[]),n=this.safeValue(a,0),o=this.safeInteger(n,"pingInterval"),d=this.safeString(n,"endpoint"),c=this.safeString(r,"token"),h=d+"?"+this.urlencode({token:c,privateChannel:e,connectId:s});return this.client(h).keepAlive=o,h}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async subscribe(e,t,i,s,r={}){const a=this.requestId().toString(),n={id:a,type:"subscribe",topic:i,response:!0},o=this.extend(n,r),d={id:a};return s=void 0===s?d:this.extend(d,s),await this.watch(e,t,o,i,s)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s=await this.negotiate(!1),r=this.safeValue(this.options,"watchTicker",{}),a="/"+this.safeString(r,"name","contractMarket/tickerV2")+":"+i.id,n="ticker:"+e;return await this.subscribe(s,n,a,void 0,t)}handleTicker(e,t){const i=this.safeValue(t,"data",{}),s=this.safeValue(i,"symbol"),r=this.safeMarket(s,void 0,"-"),a=this.parseTicker(i,r);this.tickers[r.symbol]=a;const n="ticker:"+r.symbol;return e.resolve(a,n),t}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.negotiate(!1),a=this.market(e);e=a.symbol;const n="/contractMarket/execution:"+a.id,o="trades:"+e,d=await this.subscribe(r,o,n,void 0,s);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrade(e,t){const i=this.safeValue(t,"data",{}),s=this.parseTrade(i),r=s.symbol;let n=this.safeValue(this.trades,r);if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new a.ZL(e),this.trades[r]=n}n.append(s);const o="trades:"+r;return e.resolve(n,o),t}async watchOrderBook(e,t=undefined,i={}){if(void 0!==t&&20!==t&&100!==t)throw new r.ExchangeError(this.id+" watchOrderBook 'limit' argument must be undefined, 20 or 100");await this.loadMarkets();const s=await this.negotiate(!1),a=this.market(e);e=a.symbol;const n="/contractMarket/level2:"+a.id,o="orderbook:"+e,d={method:this.handleOrderBookSubscription,symbol:e,limit:t};return(await this.subscribe(s,o,n,d,i)).limit()}handleDelta(e,t){e.nonce=this.safeInteger(t,"sequence");const i=this.safeInteger(t,"timestamp");e.timestamp=i,e.datetime=this.iso8601(i);const s=this.safeValue(t,"change",{}).split(","),r=this.safeNumber(s,0),a=this.safeString(s,1),n=[r,this.safeNumber(s,2)];"bids"==("buy"===a?"bids":"asks")?e.bids.storeArray(n):e.asks.storeArray(n)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){const i=this.safeValue(t,"data"),s=this.safeString(t,"topic").split(":"),r=this.safeString(s,1),a=this.safeSymbol(r,void 0,"-"),n="orderbook:"+a,o=this.orderbooks[a],d=this.safeInteger(o,"nonce"),c=this.safeInteger(i,"sequence");if(void 0===d){const s=o.cache.length,r=this.safeString(t,"topic"),d=e.subscriptions[r],c=this.safeInteger(d,"limit");return s===this.handleOption("watchOrderBook","snapshotDelay",5)&&this.spawn(this.loadOrderBook,e,n,a,c),void o.cache.push(i)}d>=c||(this.handleDelta(o,i),e.resolve(o,n))}getCacheIndex(e,t){const i=this.safeValue(t,0),s=this.safeInteger(e,"nonce");if(s<this.safeInteger(i,"sequence")-1)return-1;for(let e=0;e<t.length;e++){const i=t[e];if(s<this.safeInteger(i,"sequence")-1)return e}return t.length}handleOrderBookSubscription(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeInteger(i,"limit");this.orderbooks[s]=this.orderBook({},r)}handleSubscriptionStatus(e,t){const i=this.safeString(t,"id"),s=this.indexBy(e.subscriptions,"id"),r=this.safeValue(s,i,{}),a=this.safeValue(r,"method");return void 0!==a&&a.call(this,e,t,r),t}handleSystemStatus(e,t){return t}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.negotiate(!0);let a="orders";void 0!==e&&(a=a+":"+(e=this.market(e).symbol));const n=await this.subscribe(r,a,"/contractMarket/tradeOrders",void 0,this.extend({privateChannel:!0},s));return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}parseWsOrderStatus(e){return this.safeString({open:"open",filled:"closed",match:"open",update:"open",canceled:"canceled"},e,e)}parseWsOrder(e,t=undefined){const i=this.safeString(e,"orderId"),s=this.safeString(e,"clientOid"),r=this.safeStringLower(e,"orderType"),a=this.safeString(e,"price"),n=this.safeString(e,"filledSize"),o=this.safeString(e,"size"),d=this.safeString(e,"type"),c=this.parseWsOrderStatus(d),h=this.safeIntegerProduct(e,"orderTime",1e-6),u=this.safeString(e,"symbol"),l=(t=this.safeMarket(u,t)).symbol,p=this.safeStringLower(e,"side");return this.safeOrder({info:e,symbol:l,id:i,clientOrderId:s,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,type:r,timeInForce:void 0,postOnly:void 0,side:p,price:a,stopPrice:void 0,amount:o,cost:void 0,average:void 0,filled:n,remaining:void 0,status:c,fee:void 0,trades:void 0},t)}handleOrder(e,t){const i="orders",s=this.safeValue(t,"data"),r=this.parseWsOrder(s),n=this.safeString(r,"symbol"),o=this.safeString(r,"id");if(void 0!==n){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const t=this.orders,s=this.safeValue(t.hashmap,n,{}),d=this.safeValue(s,o);if(void 0!==d){const e=this.safeValue(d,"stopPrice");void 0!==e&&(r.stopPrice=e),"closed"===d.status&&(r.status="closed")}t.append(r),e.resolve(this.orders,i);const c=i+":"+n;e.resolve(this.orders,c)}}async watchBalance(e={}){const t=await this.negotiate(!0),i={method:this.handleBalanceSubscription};return await this.subscribe(t,"balance","/contractAccount/wallet",i,this.extend({privateChannel:!0},e))}handleBalance(e,t){const i=this.safeValue(t,"data",{});this.balance.info=i;const s=this.safeString(i,"currency"),r=this.safeCurrencyCode(s),a=this.account();a.free=this.safeString(i,"availableBalance"),a.used=this.safeString(i,"holdBalance"),this.balance[r]=a,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}handleBalanceSubscription(e,t,i){this.spawn(this.fetchBalanceSnapshot,e,t)}async fetchBalanceSnapshot(e,t){await this.loadMarkets(),this.checkRequiredCredentials();const i={type:this.safeString2(this.options,"watchBalance","defaultType","swap")},s=await this.fetchBalance(i),r=Object.keys(s);for(let e=0;e<r.length;e++){const t=r[e];"free"!==t&&"used"!==t&&"total"!==t&&"timestamp"!==t&&"datetime"!==t&&"info"!==t&&(this.balance[t]=s[t])}this.balance.info=this.safeValue(s,"info",{}),e.resolve(this.balance,"balance")}handleSubject(e,t){const i=this.safeString(t,"subject"),s={level2:this.handleOrderBook,tickerV2:this.handleTicker,"availableBalance.change":this.handleBalance,match:this.handleTrade,orderChange:this.handleOrder,orderUpdated:this.handleOrder},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}ping(e){return{id:this.requestId().toString(),type:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){return t}handleMessage(e,t){if(this.handleErrorMessage(e,t)){const i=this.safeString(t,"type"),s={welcome:this.handleSystemStatus,ack:this.handleSubscriptionStatus,message:this.handleSubject,pong:this.handlePong},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}}}},627:(e,t,i)=>{i.d(t,{Z:()=>a});var s=i(1758),r=i(3020);class a extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!1,watchTickers:!1,watchTrades:!0,watchMyTrades:!1,watchOrders:void 0,watchOrderBook:!0,watchOHLCV:!1},urls:{api:{ws:"wss://ws.luno.com/api/1"}},options:{sequenceNumbers:{}},streaming:{},exceptions:{}})}async watchTrades(e,t=undefined,i=undefined,s={}){await this.checkRequiredCredentials(),await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="/stream/"+r.id,n={symbol:e},o=this.urls.api.ws+a,d="trades:"+e,c={api_key_id:this.apiKey,api_key_secret:this.secret},h=this.deepExtend(c,s),u=await this.watch(o,d,h,a,n);return this.newUpdates&&(i=u.getLimit(e,i)),this.filterBySinceLimit(u,t,i,"timestamp",!0)}handleTrades(e,t,i){const s=this.safeValue(t,"trade_updates",[]);if(0===s.length)return;const a=i.symbol,n=this.market(a),o="trades:"+a;let d=this.safeValue(this.trades,a);if(void 0===d){const e=this.safeInteger(this.options,"tradesLimit",1e3);d=new r.ZL(e),this.trades[a]=d}for(let e=0;e<s.length;e++){const t=s[e],i=this.parseTrade(t,n);d.append(i)}this.trades[a]=d,e.resolve(this.trades[a],o)}parseTrade(e,t=undefined){return this.safeTrade({info:e,id:void 0,timestamp:void 0,datetime:void 0,symbol:t.symbol,order:void 0,type:void 0,side:void 0,takerOrMaker:void 0,price:void 0,amount:this.safeString(e,"base"),cost:this.safeString(e,"counter"),fee:void 0},t)}async watchOrderBook(e,t=undefined,i={}){await this.checkRequiredCredentials(),await this.loadMarkets();const s=this.market(e);e=s.symbol;const r="/stream/"+s.id,a={symbol:e},n=this.urls.api.ws+r,o="orderbook:"+e,d={api_key_id:this.apiKey,api_key_secret:this.secret},c=this.deepExtend(d,i);return(await this.watch(n,o,c,r,a)).limit()}handleOrderBook(e,t,i){const s=i.symbol,r="orderbook:"+s,a=this.safeString(t,"timestamp");let n=this.safeValue(this.orderbooks,s);if(void 0===n&&(n=this.indexedOrderBook({}),this.orderbooks[s]=n),void 0!==this.safeValue(t,"asks")){const e=this.customParseOrderBook(t,s,a,"bids","asks","price","volume","id");n.reset(e)}else this.handleDelta(n,t),n.timestamp=a,n.datetime=this.iso8601(a);const o=this.safeInteger(t,"sequence");n.nonce=o,e.resolve(n,r)}customParseOrderBook(e,t,i=undefined,s="bids",r="asks",a="price",n="volume",o=undefined){const d=this.parseBidsAsks(this.safeValue(e,s,[]),a,n,o),c=this.parseBidsAsks(this.safeValue(e,r,[]),a,n,o);return{symbol:t,bids:this.sortBy(d,0,!0),asks:this.sortBy(c,0),timestamp:i,datetime:this.iso8601(i),nonce:void 0}}parseBidsAsks(e,t="price",i="volume",s=undefined){e=this.toArray(e);const r=[];for(let a=0;a<e.length;a++)r.push(this.customParseBidAsk(e[a],t,i,s));return r}customParseBidAsk(e,t="price",i="volume",s=undefined){const r=[this.safeNumber(e,t),this.safeNumber(e,i)];if(void 0!==s){const t=this.safeString(e,s);r.push(t)}return r}handleDelta(e,t){const i=this.safeValue(t,"create_update"),s=e.asks,r=e.bids;if(void 0!==i){const e=this.customParseBidAsk(i,"price","volume","order_id"),t=this.safeString(i,"type");"ASK"===t?s.storeArray(e):"BID"===t&&r.storeArray(e)}const a=this.safeValue(t,"delete_update");if(void 0!==a){const e=this.safeString(a,"order_id");s.storeArray(0,0,e),r.storeArray(0,0,e)}return t}handleMessage(e,t){if(""===t)return;const i=Object.values(e.subscriptions),s=[this.handleOrderBook,this.handleTrades];for(let r=0;r<s.length;r++)s[r].call(this,e,t,i[0]);return t}}},6484:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6641),r=i(6689),a=i(3020),n=i(1372),o=i(7311);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0},urls:{api:{ws:{spot:"wss://wbs.mexc.com/raw/ws",swap:"wss://contract.mexc.com/ws"}}},options:{timeframes:{"1m":"Min1","5m":"Min5","15m":"Min15","30m":"Min30","1h":"Min60","4h":"Hour4","8h":"Hour8","1d":"Day1","1w":"Week1","1M":"Month1"}},streaming:{ping:this.ping,keepAlive:1e4},exceptions:{ws:{exact:{"signature validation failed":r.AuthenticationError},broad:{"Contract not exists":r.BadSymbol}}}})}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s="ticker:"+(e=i.symbol),a={symbol:i.id};if("spot"===i.type)throw new r.NotSupported(this.id+" watchTicker does not support spot markets");return await this.watchSwapPublic(s,"sub.ticker",a,t)}handleTicker(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(t,"symbol"),r=this.safeMarket(s),a=r.symbol,n=this.parseTicker(i,r);this.tickers[a]=n;const o="ticker:"+a;return e.resolve(n,o),t}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={};e=a.symbol;const o=a.type,d=this.safeValue(this.options,"timeframes",{}),c=this.safeString(d,t),h="sub.kline",u="kline:"+c+":"+e;let l;return n.symbol=a.id,n.interval=c,void 0!==i&&(n.start=i),l="spot"===o?await this.watchSpotPublic(u,h,n,r):await this.watchSwapPublic(u,h,n,r),this.newUpdates&&(s=l.getLimit(e,s)),this.filterBySinceLimit(l,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol,n=this.safeValue(t,"data",{}),o=this.safeString(n,"interval"),d="kline:"+o+":"+r,c=this.safeValue(this.options,"timeframes",{}),h=this.findTimeframe(o,c),u=this.parseWsOHLCV(n,s);this.ohlcvs[r]=this.safeValue(this.ohlcvs,r,{});let l=this.safeValue(this.ohlcvs[r],h);if(void 0===l){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);l=new a.Py(e),this.ohlcvs[r][h]=l}return l.append(u),e.resolve(l,d),t}parseWsOHLCV(e,t=undefined){return[this.safeIntegerProduct(e,"t",1e3),this.safeNumber(e,"o"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"c"),this.safeNumber2(e,"v","q")]}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),a="orderbook:"+(e=s.symbol),n={symbol:s.id};if(void 0!==t){if(5!==t&&10!==t&&20!==t)throw new r.BadRequest(this.id+" watchOrderBook limit parameter cannot be different from 5, 10 or 20")}else t=20;let o;if("swap"===s.type){const e="sub.depth";n.compress=!0,n.limit=t,o=await this.watchSwapPublic(a,e,n,i)}else{const e="sub.limit.depth";n.depth=t,o=await this.watchSpotPublic(a,e,n,i)}return o.limit()}handleOrderBook(e,t){const i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol,a=this.safeValue(t,"data"),n=this.safeInteger(t,"ts"),o=this.parseOrderBook(a,r,n);let d=this.safeNumber(a,"end");void 0===d&&(d=this.safeNumber(t,"version")),o.nonce=d;let c=this.safeValue(this.orderbooks,r);void 0===c?(c=this.orderBook(o),this.orderbooks[r]=c):"spot"===s.type?c.reset(o):this.handleOrderBookMessage(e,t,c);const h="orderbook:"+r;e.resolve(c,h)}handleOrderBookMessage(e,t,i){const s=this.safeValue(t,"data",{}),r=this.safeNumber(s,"end"),a=this.safeValue(s,"asks",[]),n=this.safeValue(s,"bids",[]);this.handleDeltas(i.asks,a),this.handleDeltas(i.bids,n);const o=this.safeInteger(t,"ts"),d=this.safeString(t,"symbol"),c=this.safeSymbol(d);return i.nonce=r,i.symbol=c,i.timestamp=o,i.datetime=this.iso8601(o),i}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a="sub.deal",n="trades:"+(e=r.symbol),o={symbol:r.id};let d;return d="spot"===r.type?await this.watchSpotPublic(n,a,o,s):await this.watchSwapPublic(n,a,o,s),this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol;let n=this.safeValue(this.trades,r);if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new a.ZL(e),this.trades[r]=n}const o=this.safeValue(t,"data",{});let d;d="deals"in o?this.safeValue(o,"deals",[]):[o];for(let e=0;e<d.length;e++){const t=this.parseWsTrade(d[e],s);n.append(t)}const c="trades:"+r;e.resolve(n,c)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let a,n,o,d="trade";if(void 0!==e&&(a=this.market(e),e=a.symbol,d+=":"+a.symbol),[n,s]=this.handleMarketTypeAndParams("watchMyTrades",a,s),"spot"===n)throw new r.NotSupported(this.id+" watchMyTrades does not support spot markets");return o=await this.watchSwapPrivate(d,s),this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleMyTrade(e,t,i=undefined){const s=this.safeValue(t,"data",{}),r=this.safeString(s,"symbol"),n=this.safeMarket(r),o=this.parseWsTrade(s,n);if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new a.hl(e)}const d=this.myTrades;d.append(o);let c="trade";e.resolve(d,c),c+=":"+n.symbol,e.resolve(d,c)}parseWsTrade(e,t=undefined){const i=this.safeInteger2(e,"timestamp","t"),s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t,"_")).symbol,a=this.safeString2(e,"price","p");let n=this.safeString2(e,"vol","q");void 0===n&&(n=this.safeString(e,"v"));let o,d=this.safeString(e,"T");void 0===d?(d=this.safeString(e,"side"),o=this.parseSwapSide(d)):o="1"===d?"buy":"sell";let c=this.safeString(e,"id");void 0===c&&(c=i.toString()+"-"+t.id+"-"+n);const h=this.safeString(e,"fee");let u;if(void 0!==h){const t=this.safeString(e,"feeCurrency");u={cost:h,currency:this.safeCurrencyCode(t)}}const l=this.safeString(e,"orderId"),p=this.safeValue(e,"taker",!0)?"taker":"maker";return this.safeTrade({info:e,id:c,order:l,timestamp:i,datetime:this.iso8601(i),symbol:r,type:void 0,side:o,takerOrMaker:p,price:a,amount:n,cost:void 0,fee:u},t)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r,a,n,o="order";return void 0!==e&&(r=this.market(e),e=r.symbol,o+=":"+r.symbol),[a,s]=this.handleMarketTypeAndParams("watchOrders",r,s),n="spot"===a?await this.watchSpotPrivate(o,s):await this.watchSwapPrivate(o,s),this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleOrder(e,t,i=undefined){const s=this.safeValue(t,"data",{});let r=this.safeString(t,"symbol");void 0===r&&(r=this.safeString(s,"symbol"));const n=this.safeMarket(r),o=this.parseWSOrder(s,n);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const d=this.orders;d.append(o);let c="order";e.resolve(d,c),c+=":"+n.symbol,e.resolve(d,c)}parseWSOrder(e,t=undefined){const i=this.safeString2(e,"orderId","id"),s=this.safeString2(e,"state","status"),r=this.safeInteger(e,"createTime"),a=this.safeString(e,"price"),n=this.safeString2(e,"quantity","vol"),o=this.safeString(e,"remainQuantity"),d=this.safeString(e,"dealVol"),c=this.safeString(e,"amount"),h=this.safeString(e,"dealAvgPrice"),u=this.safeString2(e,"symbol","symbolDisplay"),l=this.safeSymbol(u,t,"_"),p=this.safeString(e,"side");let f=this.parseSwapSide(p);if(void 0===f){const t=this.safeStringLower(e,"tradeType");f="ask"===t||"2"===t?"sell":"bid"===t||"1"===t?"buy":t}const m=this.parseWsOrderStatus(s,t);let v=this.safeString2(e,"client_order_id","orderId");""===v&&(v=void 0);const g=this.safeString(e,"orderType"),y="3"===g||"5"===g?"market":"limit";return this.safeOrder({id:i,clientOrderId:v,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:this.safeInteger(e,"updateTime"),status:m,symbol:l,type:y,timeInForce:void 0,side:f,price:a,stopPrice:void 0,triggerPrice:void 0,average:h,amount:n,cost:c,filled:d,remaining:o,fee:void 0,trades:void 0,info:e},t)}parseSwapSide(e){return this.safeString({1:"open long",2:"close short",3:"open short",4:"close long"},e)}parseWsOrderStatus(e,t=undefined){let i={};return i="spot"===t.type?{1:"open",2:"closed",3:"open",4:"canceled",5:"open",NEW:"open",FILLED:"closed",PARTIALLY_FILLED:"open",CANCELED:"canceled",PARTIALLY_CANCELED:"canceled"}:{2:"open",3:"closed",4:"canceled"},this.safeString(i,e,e)}async watchBalance(e={}){let t;if(await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e),"spot"===t)throw new r.NotSupported(this.id+" watchBalance does not support spot markets");return this.watchSwapPrivate("balance",e)}handleBalance(e,t){const i=this.safeValue(t,"data"),s=this.safeInteger(t,"ts");this.balance.info=i,this.balance.timestamp=s,this.balance.datetime=this.iso8601(s);const r=this.safeString(i,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(i,"availableBalance"),n.used=this.safeString(i,"frozenBalance"),this.balance[a]=n,this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}async watchSwapPublic(e,t,i,s={}){const r=this.urls.api.ws.swap,a={method:t,param:i},n=this.extend(a,s);return await this.watch(r,e,n,e)}async watchSpotPublic(e,t,i,s={}){const r=this.urls.api.ws.spot,a={op:t},n=this.extend(a,i),o=this.extend(n,s);return await this.watch(r,e,o,e)}async watchSpotPrivate(e,t={}){this.checkRequiredCredentials();const i="sub.personal",s=this.urls.api.ws.spot,r=this.milliseconds().toString(),a={op:i,api_key:this.apiKey,req_time:r},n=this.keysort(a);n.api_secret=this.secret;const d=this.urlencode(n),c=this.hash(this.encode(d),o.F);a.sign=c;const h=this.extend(a,t);return await this.watch(s,e,h,i)}async watchSwapPrivate(e,t={}){this.checkRequiredCredentials();const i="login",s=this.urls.api.ws.swap,r=this.milliseconds().toString(),a=this.apiKey+r,o=this.hmac(this.encode(a),this.encode(this.secret),n.J),d={method:i,param:{apiKey:this.apiKey,signature:o,reqTime:r}},c=this.extend(d,t),h=this.extend(c,t);return await this.watch(s,e,h,i)}handleErrorMessage(e,t){const i=this.safeString(t,"channel");try{const e=this.id+" "+this.json(t);if(i.indexOf("error")>=0){const i=this.safeValue(t,"data");"string"==typeof i&&(this.throwExactlyMatchedException(this.exceptions.ws.exact,i,e),this.throwBroadlyMatchedException(this.exceptions.ws.broad,i,e))}if("sub.personal"===i){const i=this.safeString(t,"msg");this.throwExactlyMatchedException(this.exceptions.ws.exact,i,e)}}catch(e){if(e instanceof r.AuthenticationError)return!1}return t}handleAuthenticate(e,t){return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===t)return void this.handlePong(e,t);const i=this.safeString(t,"channel"),s={pong:this.handlePong,"rs.login":this.handleAuthenticate,"push.deal":this.handleTrades,orderbook:this.handleOrderBook,"push.kline":this.handleOHLCV,"push.ticker":this.handleTicker,"push.depth":this.handleOrderBook,"push.limit.depth":this.handleOrderBook,"push.personal.order":this.handleOrder,"push.personal.trigger.order":this.handleOrder,"push.personal.plan.order":this.handleOrder,"push.personal.order.deal":this.handleMyTrade,"push.personal.asset":this.handleBalance},r=this.safeValue(s,i);void 0!==r&&r.call(this,e,t)}ping(e){return"spot"===this.safeString(this.options,"defaultType","spot")?"ping":{method:"ping"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}}},8080:(e,t,i)=>{i.d(t,{Z:()=>a});var s=i(4531),r=i(3020);class a extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchTicker:!0,watchOHLCV:!0},urls:{test:{ws:"wss://ndaxmarginstaging.cdnhop.net:10456/WSAdminGatewa/"},api:{ws:"wss://api.ndax.io/WSGateway"}}})}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}async watchTicker(e,t={}){const i=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const s=this.market(e),r="SubscribeLevel1",a=r+":"+s.id,n=this.urls.api.ws,o=this.requestId(),d={OMSId:i,InstrumentId:parseInt(s.id)},c={m:0,i:o,n:r,o:this.json(d)},h=this.extend(c,t);return await this.watch(n,a,h,a)}handleTicker(e,t){const i=this.safeValue(t,"o",{}),s=this.parseTicker(i),r=s.symbol,a=this.market(r);this.tickers[r]=s;const n="SubscribeLevel1:"+a.id;e.resolve(s,n)}async watchTrades(e,t=undefined,i=undefined,s={}){const r=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const a=this.market(e);e=a.symbol;const n="SubscribeTrades",o=n+":"+a.id,d=this.urls.api.ws,c=this.requestId(),h={OMSId:r,InstrumentId:parseInt(a.id),IncludeLastCount:100},u={m:0,i:c,n,o:this.json(h)},l=this.extend(u,s),p=await this.watch(d,o,l,o);return this.newUpdates&&(i=p.getLimit(e,i)),this.filterBySinceLimit(p,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"o",[]),s={};for(let e=0;e<i.length;e++){const t=this.parseTrade(i[e]),a=t.symbol;let n=this.safeValue(this.trades,a);if(void 0===n){const e=this.safeInteger(this.options,"tradesLimit",1e3);n=new r.ZL(e)}n.append(t),this.trades[a]=n,s[a]=!0}const a=Object.keys(s);for(let t=0;t<a.length;t++){const i=a[t],s="SubscribeTrades:"+this.market(i).id,r=this.safeValue(this.trades,i);e.resolve(r,s)}}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){const a=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const n=this.market(e);e=n.symbol;const o="SubscribeTicker",d=o+":"+t+":"+n.id,c=this.urls.api.ws,h=this.requestId(),u={OMSId:a,InstrumentId:parseInt(n.id),Interval:parseInt(this.safeString(this.timeframes,t,t)),IncludeLastCount:100},l={m:0,i:h,n:o,o:this.json(u)},p=this.extend(l,r),f=await this.watch(c,d,p,d);return this.newUpdates&&(s=f.getLimit(e,s)),this.filterBySinceLimit(f,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"o",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,8),a=this.safeMarket(r).symbol;s[r]={},this.ohlcvs[a]=this.safeValue(this.ohlcvs,a,{});const n=Object.keys(this.timeframes);for(let e=0;e<n.length;e++){const i=n[e],o=this.safeString(this.timeframes,i,i),d=1e3*parseInt(o),c=this.safeInteger(t,0),h=[parseInt((c/d*d).toString()),this.safeFloat(t,3),this.safeFloat(t,1),this.safeFloat(t,2),this.safeFloat(t,4),this.safeFloat(t,5)],u=this.safeValue(this.ohlcvs[a],i,[]),l=u.length;if(l&&h[0]===u[l-1][0]){const e=u[l-1];u[l-1]=[h[0],e[1],Math.max(h[1],e[1]),Math.min(h[2],e[2]),h[4],this.sum(h[5],e[5])],s[r][i]=!0}else{if(l&&h[0]<u[l-1][0])continue;u.push(h),l>=this.safeInteger(this.options,"OHLCVLimit",1e3)&&u.shift(),s[r][i]=!0}this.ohlcvs[a][i]=u}}const r=Object.keys(s);for(let t=0;t<r.length;t++){const i=r[t],a=Object.keys(s[i]);for(let t=0;t<a.length;t++){const s=a[t],r="SubscribeTicker:"+s+":"+i,n=this.safeMarket(i).symbol,o=this.safeValue(this.ohlcvs[n],s,[]);e.resolve(o,r)}}}async watchOrderBook(e,t=undefined,i={}){const s=this.safeInteger(this.options,"omsId",1);await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="SubscribeLevel2",n=a+":"+r.id,o=this.urls.api.ws,d=this.requestId();t=void 0===t?100:t;const c={OMSId:s,InstrumentId:parseInt(r.id),Depth:t},h={m:0,i:d,n:a,o:this.json(c)},u={id:d,messageHash:n,name:a,symbol:e,marketId:r.id,method:this.handleOrderBookSubscription,limit:t,params:i},l=this.extend(h,i);return(await this.watch(o,n,l,n,u)).limit()}handleOrderBook(e,t){const i=this.safeValue(t,"o",[]),s=this.safeValue(i,0,[]),r=this.safeString(s,7);if(void 0===r)return t;const a=this.safeMarket(r).symbol,n=this.safeValue(this.orderbooks,a);if(void 0===n)return t;let o,d;for(let e=0;e<i.length;e++){const t=i[e];if(void 0===o)o=this.safeInteger(t,2);else{const e=this.safeInteger(t,2);o=Math.max(o,e)}if(void 0===d)d=this.safeInteger(t,0);else{const e=this.safeInteger(t,0);d=Math.max(d,e)}const s=this.safeInteger(t,3),r=this.safeFloat(t,6),a=this.safeFloat(t,8),c=0===this.safeInteger(t,9)?n.bids:n.asks;0===s||1===s?c.store(r,a):2===s&&c.store(r,0)}n.nonce=d,n.timestamp=o,n.datetime=this.iso8601(o);const c="SubscribeLevel2:"+r;this.orderbooks[a]=n,e.resolve(n,c)}handleOrderBookSubscription(e,t,i){const s=this.safeValue(t,"o",[]),r=this.safeString(i,"symbol"),a=this.parseOrderBook(s,r),n=this.safeInteger(i,"limit"),o=this.orderBook(a,n);this.orderbooks[r]=o;const d=this.safeString(i,"messageHash");e.resolve(o,d)}handleSubscriptionStatus(e,t){const i=this.indexBy(e.subscriptions,"id"),s=this.safeInteger(t,"i"),r=this.safeValue(i,s);if(void 0!==r){const i=this.safeValue(r,"method");return void 0===i?t:i.call(this,e,t,r)}}handleMessage(e,t){const i=this.safeString(t,"o");if(void 0===i)return t;t.o=JSON.parse(i);const s={SubscribeLevel2:this.handleSubscriptionStatus,SubscribeLevel1:this.handleTicker,Level2UpdateEvent:this.handleOrderBook,Level1UpdateEvent:this.handleTicker,SubscribeTrades:this.handleTrades,TradeDataUpdateEvent:this.handleTrades,SubscribeTicker:this.handleOHLCV,TickerDataUpdateEvent:this.handleOHLCV},r=this.safeString(t,"n"),a=this.safeValue(s,r);return void 0===a?t:a.call(this,e,t)}}},7105:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(3007),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchOrderBook:!0,watchOrders:!0,watchTrades:!0,watchBalance:!0,watchOHLCV:!0},urls:{api:{ws:"wss://real.okcoin.com:8443/ws/v3"},logo:"https://user-images.githubusercontent.com/1294454/27766791-89ffb502-5ee5-11e7-8a5b-c5950b68ac65.jpg",www:"https://www.okcoin.com",doc:"https://www.okcoin.com/docs/en/",fees:"https://www.okcoin.com/coin-fees",referral:"https://www.okcoin.com/account/register?flag=activity&channelId=600001513"},options:{fetchMarkets:["spot"],watchOrders:"order",watchOrderBook:{limit:400,type:"spot",depth:"depth_l2_tbt"},watchBalance:"spot",ws:{inflate:!0}},streaming:{ping:this.ping,keepAlive:2e4}})}async subscribe(e,t,i={}){await this.loadMarkets();const s=this.market(t),r=this.urls.api.ws,a=s.type+"/"+e+":"+s.id,n={op:"subscribe",args:[a]};return await this.watch(r,a,this.deepExtend(n,i),a)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.subscribe("trade",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.authenticate(),void 0!==e&&(e=this.symbol(e));const r=this.safeString(this.options,"watchOrders","order"),a=await this.subscribe(r,e,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}handleOrders(e,t,i=undefined){const s=this.safeString(t,"table"),r=this.safeValue(t,"data",[]);if(r.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new a.hl(t));const i=this.orders,n={},o=this.parseOrders(r);for(let e=0;e<o.length;e++){const t=o[e];i.append(t);const s=t.symbol;n[this.market(s).id]=!0}const d=Object.keys(n);for(let t=0;t<d.length;t++){const i=s+":"+d[t];e.resolve(this.orders,i)}}}async watchTicker(e,t={}){return await this.subscribe("ticker",e,t)}handleTrade(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]),r=this.safeInteger(this.options,"tradesLimit",1e3);for(let t=0;t<s.length;t++){const n=this.parseTrade(s[t]),o=n.symbol,d=i+":"+this.safeString(n.info,"instrument_id");let c=this.safeValue(this.trades,o);void 0===c&&(c=new a.ZL(r),this.trades[o]=c),c.append(n),e.resolve(c,d)}return t}handleTicker(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]);for(let t=0;t<s.length;t++){const r=this.parseTicker(s[t]),a=r.symbol,n=i+":"+this.safeString(r.info,"instrument_id");this.tickers[a]=r,e.resolve(r,n)}return t}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets(),e=this.symbol(e);const a="candle"+this.safeString(this.timeframes,t,t)+"s",n=await this.subscribe(a,e,r);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeString(t,"table"),s=this.safeValue(t,"data",[]),r=i.split("/");let n=this.safeString(r,1).replace("candle","");n=n.replace("s","");const o=this.findTimeframe(n);for(let t=0;t<s.length;t++){const r=this.safeString(s[t],"instrument_id"),n=this.safeValue(s[t],"candle"),d=this.safeMarket(r),c=d.symbol,h=this.parseOHLCV(n,d);this.ohlcvs[c]=this.safeValue(this.ohlcvs,c,{});let u=this.safeValue(this.ohlcvs[c],o);if(void 0===u){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);u=new a.Py(e),this.ohlcvs[c][o]=u}u.append(h);const l=i+":"+r;e.resolve(u,l)}}async watchOrderBook(e,t=undefined,i={}){const s=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(s,"depth","depth_l2_tbt");return(await this.subscribe(r,e,i)).limit()}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i){const s=this.safeValue(t,"asks",[]),r=this.safeValue(t,"bids",[]);this.handleDeltas(i.asks,s),this.handleDeltas(i.bids,r);const a=this.parse8601(this.safeString(t,"timestamp"));return i.timestamp=a,i.datetime=this.iso8601(a),i}handleOrderBook(e,t){const i=this.safeString(t,"action"),s=this.safeValue(t,"data",[]),r=this.safeString(t,"table");if("partial"===i)for(let t=0;t<s.length;t++){const i=s[t],a=this.safeString(i,"instrument_id"),n=this.safeMarket(a).symbol,o=this.safeValue(this.options,"watchOrderBook",{}),d=this.safeInteger(o,"limit",400),c=this.orderBook({},d);this.orderbooks[n]=c,this.handleOrderBookMessage(e,i,c);const h=r+":"+a;e.resolve(c,h)}else for(let t=0;t<s.length;t++){const i=s[t],a=this.safeString(i,"instrument_id"),n=this.safeMarket(a).symbol;if(n in this.orderbooks){const t=this.orderbooks[n];this.handleOrderBookMessage(e,i,t);const s=r+":"+a;e.resolve(t,s)}}return t}async authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws,i="login",s=this.client(t);let r=this.safeValue(s.subscriptions,i);if(void 0===r){r=s.future("authenticated");const e=this.seconds().toString(),a=e+"GET/users/self/verify",o=this.hmac(this.encode(a),this.encode(this.secret),n.J,"base64"),d={op:i,args:[this.apiKey,this.password,e,o]};this.spawn(this.watch,t,i,d,i,r)}return await r}async watchBalance(e={}){const t=this.safeString2(this.options,"watchBalance","defaultType");if(void 0===this.safeString(e,"type",t))throw new r.ArgumentsRequired(this.id+" watchBalance requires a type parameter (one of 'spot', 'margin', 'futures', 'swap')");const i=await this.authenticate();return await this.subscribeToUserAccount(i,e)}async subscribeToUserAccount(e,t={}){const i=this.safeString2(this.options,"watchBalance","defaultType"),s=this.safeString(t,"type",i);if(void 0===s)throw new r.ArgumentsRequired(this.id+" watchBalance requires a type parameter (one of 'spot', 'margin', 'futures', 'swap')");await this.loadMarkets();const a=this.safeString(t,"currency"),n=this.safeString(t,"code",this.safeCurrencyCode(a));let o;void 0!==n&&(o=this.currency(n));const d=this.safeString(t,"symbol"),c=this.market(d),h=void 0===c,u=void 0===o;if("spot"===s){if(u)throw new r.ArgumentsRequired(this.id+" watchBalance requires a 'currency' (id) or a unified 'code' parameter for "+s+" accounts")}else if("margin"===s||"swap"===s||"option"===s){if(h)throw new r.ArgumentsRequired(this.id+" watchBalance requires a 'instrument_id' (id) or a unified 'symbol' parameter for "+s+" accounts")}else if("futures"===s&&u&&h)throw new r.ArgumentsRequired(this.id+" watchBalance requires a 'currency' (id), or unified 'code', or 'instrument_id' (id), or unified 'symbol' parameter for "+s+" accounts");let l;u?h||(l=c.id):l=o.id;const p=("margin"===s?"spot":s)+"/"+("margin"===s?"margin_account":"account"),f=p+":"+l,m=this.urls.api.ws,v={op:"subscribe",args:[f]},g=this.omit(t,["currency","code","instrument_id","symbol","type"]);return await this.watch(m,p,this.deepExtend(v,g),f)}handleBalance(e,t){const i=this.safeString(t,"table"),s=i.split("/"),r=this.safeValue(t,"data",[]);this.balance.info=r;let a=this.safeString(s,0);"spot"===a&&"margin_account"===this.safeString(s,1)&&(a="margin");for(let t=0;t<r.length;t++){const t=this.parseBalanceByType(a,r),s=this.safeValue(this.balance,a,{}),n=this.deepExtend(s,t);this.balance[a]=this.safeBalance(n),e.resolve(this.balance[a],i)}}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){return e.resolve(t,"authenticated"),t}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){const i=this.safeString(t,"errorCode");try{if(void 0!==i){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);const s=this.safeValue(t,"message");void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}}catch(t){if(t instanceof r.AuthenticationError){e.reject(t,"authenticated");const i="login";return i in e.subscriptions&&delete e.subscriptions[i],!1}}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===t)return this.handlePong(e,t);const i=this.safeString(t,"table");if(void 0!==i){const s=i.split("/"),r=this.safeString(s,1),a={depth:this.handleOrderBook,depth5:this.handleOrderBook,depth_l2_tbt:this.handleOrderBook,ticker:this.handleTicker,trade:this.handleTrade,account:this.handleBalance,margin_account:this.handleBalance,order:this.handleOrders};let n=this.safeValue(a,r);return r.indexOf("candle")>=0&&(n=this.handleOHLCV),void 0===n?t:n.call(this,e,t)}{const i=this.safeString(t,"event");if(void 0!==i){const s={login:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}}}}},1530:(e,t,i)=>{i.d(t,{Z:()=>r});var s=i(2214);class r extends s.Z{describe(){return this.deepExtend(super.describe(),{alias:!0,id:"okex"})}}},2214:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(4042),r=i(6689),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchOrderBook:!0,watchTrades:!0,watchBalance:!0,watchOHLCV:!0,watchOrders:!0},urls:{api:{ws:{public:"wss://ws.okx.com:8443/ws/v5/public",private:"wss://ws.okx.com:8443/ws/v5/private"}},test:{ws:{public:"wss://wspap.okx.com:8443/ws/v5/public?brokerId=9999",private:"wss://wspap.okx.com:8443/ws/v5/private?brokerId=9999"}}},options:{watchOrderBook:{depth:"books"},watchBalance:"spot",ws:{},checksum:!0},streaming:{ping:this.ping,keepAlive:2e4}})}async subscribe(e,t,i,s={}){await this.loadMarkets();const r=this.urls.api.ws[e];let a=t;const n={channel:t};if(void 0!==i){const e=this.market(i);a+=":"+e.id,n.instId=e.id}const o={op:"subscribe",args:[this.deepExtend(n,s)]};return await this.watch(r,a,o,a)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.subscribe("public","trades",e,s);return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r=this.safeValue(t,"data",[]),n=this.safeInteger(this.options,"tradesLimit",1e3);for(let t=0;t<r.length;t++){const i=this.parseTrade(r[t]),o=i.symbol,d=s+":"+this.safeString(i.info,"instId");let c=this.safeValue(this.trades,o);void 0===c&&(c=new a.ZL(n),this.trades[o]=c),c.append(i),e.resolve(c,d)}return t}async watchTicker(e,t={}){return await this.subscribe("public","tickers",e,t)}handleTicker(e,t){const i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r=this.safeValue(t,"data",[]);for(let t=0;t<r.length;t++){const i=this.parseTicker(r[t]),a=i.symbol,n=s+":"+this.safeString(i.info,"instId");this.tickers[a]=i,e.resolve(i,n)}return t}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets(),e=this.symbol(e);const a="candle"+this.safeString(this.timeframes,t,t),n=await this.subscribe("public",a,e,r);return this.newUpdates&&(s=n.getLimit(e,s)),this.filterBySinceLimit(n,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r=this.safeValue(t,"data",[]),n=this.safeString(i,"instId"),o=this.safeMarket(n),d=o.id,c=s.replace("candle",""),h=this.findTimeframe(c);for(let t=0;t<r.length;t++){const i=this.parseOHLCV(r[t],o);this.ohlcvs[d]=this.safeValue(this.ohlcvs,d,{});let c=this.safeValue(this.ohlcvs[d],h);if(void 0===c){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);c=new a.Py(e),this.ohlcvs[d][h]=c}c.append(i);const u=s+":"+n;e.resolve(c,u)}}async watchOrderBook(e,t=undefined,i={}){const s=this.safeValue(this.options,"watchOrderBook",{}),r=this.safeString(s,"depth","books");return"books-l2-tbt"!==r&&"books50-l2-tbt"!==r||await this.authenticate({access:"public"}),(await this.subscribe("public",r,e,i)).limit()}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBookMessage(e,t,i,s){const a=this.safeValue(t,"asks",[]),n=this.safeValue(t,"bids",[]),o=i.asks,d=i.bids;if(this.handleDeltas(o,a),this.handleDeltas(d,n),this.safeValue(this.options,"checksum",!0)){const i=o.length,a=d.length,n=[];for(let e=0;e<25;e++)e<a&&(n.push(this.numberToString(d[e][0])),n.push(this.numberToString(d[e][1]))),e<i&&(n.push(this.numberToString(o[e][0])),n.push(this.numberToString(o[e][1])));const c=n.join(":");if(this.safeInteger(t,"checksum")!==this.crc32(c,!0)){const t=new r.InvalidNonce(this.id+" invalid checksum");e.reject(t,s)}}const c=this.safeInteger(t,"ts");return i.timestamp=c,i.datetime=this.iso8601(c),i}handleOrderBook(e,t){const i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r=this.safeString(t,"action"),a=this.safeValue(t,"data",[]),n=this.safeString(i,"instId"),o=this.safeMarket(n).symbol,d=this.safeInteger({"bbo-tbt":1,books:400,books5:5,"books-l2-tbt":400,"books50-l2-tbt":50},s),c=s+":"+n;if("snapshot"===r)for(let t=0;t<a.length;t++){const i=a[t],s=this.orderBook({},d);this.orderbooks[o]=s,s.symbol=o,this.handleOrderBookMessage(e,i,s,c),e.resolve(s,c)}else if("update"===r){if(o in this.orderbooks){const t=this.orderbooks[o];for(let i=0;i<a.length;i++){const s=a[i];this.handleOrderBookMessage(e,s,t,c),e.resolve(t,c)}}}else if("books5"===s||"bbo-tbt"===s){let t=this.safeValue(this.orderbooks,o);void 0===t&&(t=this.orderBook({},d)),this.orderbooks[o]=t;for(let i=0;i<a.length;i++){const s=a[i],r=this.safeInteger(s,"ts"),n=this.parseOrderBook(s,o,r,"bids","asks",0,1);t.reset(n),e.resolve(t,c)}}return t}authenticate(e={}){this.checkRequiredCredentials();const t=this.safeString(e,"access","private");e=this.omit(e,["access"]);const i=this.urls.api.ws[t],s="authenticated",r=this.client(i);let a=this.safeValue(r.subscriptions,s);if(void 0===a){const t=this.seconds().toString(),o=t+"GET/users/self/verify",d=this.hmac(this.encode(o),this.encode(this.secret),n.J,"base64"),c={op:"login",args:[{apiKey:this.apiKey,passphrase:this.password,timestamp:t,sign:d}]},h=this.extend(c,e);a=this.watch(i,s,h),r.subscriptions[s]=a}return a}async watchBalance(e={}){return await this.loadMarkets(),await this.authenticate(),await this.subscribe("private","account",void 0,e)}handleBalance(e,t){const i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r="spot",a=this.parseTradingBalance(t),n=this.safeValue(this.balance,r,{}),o=this.deepExtend(n,a);this.balance[r]=this.safeBalance(o),e.resolve(this.balance[r],s)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),await this.authenticate();const r=this.safeValue(this.options,"watchOrders",{});let a=this.safeString(r,"type","ANY");a=this.safeString(s,"type",a);const n=this.safeValue(s,"stop",!1);let o;s=this.omit(s,["type","stop"]),void 0!==e&&(o=this.market(e),e=o.symbol,a=o.type),"future"===a&&(a="futures");const d={instType:a.toUpperCase()},c=n?"orders-algo":"orders",h=await this.subscribe("private",c,e,this.extend(d,s));return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySymbolSinceLimit(h,e,t,i,!0)}handleOrders(e,t,i=undefined){const s=this.safeValue(t,"arg",{}),r=this.safeString(s,"channel"),n=this.safeValue(t,"data",[]);if(n.length>0){const t=this.safeInteger(this.options,"ordersLimit",1e3);void 0===this.orders&&(this.orders=new a.hl(t));const i=this.orders,s=[],o=this.parseOrders(n);for(let e=0;e<o.length;e++){const t=o[e];i.append(t);const r=t.symbol,a=this.market(r);s.push(a.id)}e.resolve(this.orders,r);for(let t=0;t<s.length;t++){const i=r+":"+s[t];e.resolve(this.orders,i)}}}handleSubscriptionStatus(e,t){return t}handleAuthenticate(e,t){e.resolve(t,"authenticated")}ping(e){return"ping"}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleErrorMessage(e,t){const i=this.safeInteger(t,"code");try{if(i){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);const s=this.safeValue(t,"message");void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}}catch(t){if(t instanceof r.AuthenticationError){const i="authenticated";return e.reject(t,i),i in e.subscriptions&&delete e.subscriptions[i],!1}}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;if("pong"===t)return this.handlePong(e,t);const i=this.safeString(t,"event");if(void 0!==i){const s={login:this.handleAuthenticate,subscribe:this.handleSubscriptionStatus},r=this.safeValue(s,i);return void 0===r?t:r.call(this,e,t)}{const i=this.safeValue(t,"arg",{}),s=this.safeString(i,"channel"),r={"bbo-tbt":this.handleOrderBook,books:this.handleOrderBook,books5:this.handleOrderBook,"books50-l2-tbt":this.handleOrderBook,"books-l2-tbt":this.handleOrderBook,tickers:this.handleTicker,trades:this.handleTrades,account:this.handleBalance,orders:this.handleOrders,"orders-algo":this.handleOrders},a=this.safeValue(r,s);if(void 0!==a)return a.call(this,e,t);if(0!==s.indexOf("candle"))return t;this.handleOHLCV(e,t)}}}},4360:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(79),r=i(2194),a=i(3020),n=i(1372);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchTicker:!0,watchTickers:!1,watchTrades:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{test:{ws:"wss://testnet.phemex.com/ws"},api:{ws:"wss://phemex.com/ws"}},options:{tradesLimit:1e3,OHLCVLimit:1e3},streaming:{keepAlive:2e4}})}fromEn(e,t){if(void 0===e)return;const i=new r.O(e);return i.decimals=this.sum(i.decimals,t),i.reduce(),i.toString()}fromEp(e,t=undefined){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"priceScale"))}fromEv(e,t=undefined){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"valueScale"))}fromEr(e,t=undefined){return void 0===e||void 0===t?e:this.fromEn(e,this.safeInteger(t,"ratioScale"))}requestId(){const e=this.sum(this.safeInteger(this.options,"requestId",0),1);return this.options.requestId=e,e}parseSwapTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,a=this.safeIntegerProduct(e,"timestamp",1e-6),n=this.fromEp(this.safeString(e,"close"),t),o=this.parseNumber(n),d=this.parseNumber(this.fromEv(this.safeString(e,"turnover"),t)),c=this.parseNumber(this.fromEv(this.safeString(e,"volume"),t));let h,u,l;const p=this.omitZero(this.fromEp(this.safeString(e,"open"),t)),f=this.parseNumber(p);return void 0!==p&&void 0!==n&&(h=this.parseNumber(r.O.stringSub(n,p)),l=this.parseNumber(r.O.stringDiv(r.O.stringAdd(n,p),"2")),u=this.parseNumber(r.O.stringMul(r.O.stringSub(r.O.stringDiv(n,p),"1"),"100"))),{symbol:s,timestamp:a,datetime:this.iso8601(a),high:this.parseNumber(this.fromEp(this.safeString(e,"high"),t)),low:this.parseNumber(this.fromEp(this.safeString(e,"low"),t)),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:f,close:o,last:o,previousClose:void 0,change:h,percentage:u,average:l,baseVolume:c,quoteVolume:d,info:e}}handleTicker(e,t){let i,s="market24h",r=this.safeValue(t,s);void 0===r?(s="spot_market24h",r=this.safeValue(t,s),i=this.parseTicker(r)):i=this.parseSwapTicker(r);const a=i.symbol,n=s+":"+a,o=this.safeIntegerProduct(t,"timestamp",1e-6);i.timestamp=o,i.datetime=this.iso8601(o),this.tickers[a]=i,e.resolve(i,n)}async watchBalance(e={}){await this.loadMarkets();const[t,i]=this.handleMarketTypeAndParams("watchBalance",void 0,e),s=t+":balance";return await this.subscribePrivate(t,s,i)}handleBalance(e,t,i){this.balance.info=i;for(let e=0;e<i.length;e++){const t=i[e],s=this.safeString(t,"currency"),a=this.safeCurrencyCode(s),n=this.safeValue(this.currencies,a,{}),o=this.safeInteger(n,"valueScale",8),d=this.account();let c=this.safeString(t,"totalUsedBalanceEv");if(void 0===c){const e=this.safeString(t,"lockedTradingBalanceEv"),i=this.safeString(t,"lockedWithdrawEv");c=r.O.stringAdd(e,i)}const h=this.safeString2(t,"accountBalanceEv","balanceEv");d.used=this.fromEn(c,o),d.total=this.fromEn(h,o),this.balance[a]=d,this.balance=this.safeBalance(this.balance)}const s=e+":balance";t.resolve(this.balance,s)}handleTrades(e,t){const i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol,n="trade:"+r;let o=this.safeValue(this.trades,r);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new a.ZL(e),this.trades[r]=o}const d=this.safeValue(t,"trades",[]),c=this.parseTrades(d,s);for(let e=0;e<c.length;e++)o.append(c[e]);e.resolve(o,n)}handleOHLCV(e,t){const i="kline",s=this.safeString(t,"symbol"),r=this.safeMarket(s),n=r.symbol,o=this.safeValue(t,i,[]),d=this.safeValue(o,0,[]),c=this.safeString(d,1),h=this.findTimeframe(c);if(void 0!==h){const t=i+":"+h+":"+n,s=this.parseOHLCVs(o,r);this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let d=this.safeValue(this.ohlcvs[n],h);if(void 0===d){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new a.Py(e),this.ohlcvs[n][h]=d}for(let e=0;e<s.length;e++){const t=s[e];d.append(t)}e.resolve(d,t)}}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s=i.spot?"spot_market24h":"market24h",r=this.urls.api.ws,a=s+".subscribe",n=s+":"+e,o={method:a,id:this.requestId(),params:[]},d=this.deepExtend(o,t);return await this.watch(r,n,d,a)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=this.urls.api.ws,n="trade",o=n+":"+e,d={method:n+".subscribe",id:this.requestId(),params:[r.id]},c=this.deepExtend(d,s),h=await this.watch(a,o,c,o);return this.newUpdates&&(i=h.getLimit(e,i)),this.filterBySinceLimit(h,t,i,"timestamp",!0)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const r=this.urls.api.ws,a="orderbook",n=a+":"+e,o={method:a+".subscribe",id:this.requestId(),params:[s.id]},d=this.deepExtend(o,i);return(await this.watch(r,n,d,n)).limit()}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.urls.api.ws,o="kline",d=o+":"+t+":"+e,c={method:o+".subscribe",id:this.requestId(),params:[a.id,this.safeInteger(this.timeframes,t)]},h=this.deepExtend(c,r),u=await this.watch(n,d,h,d);return this.newUpdates&&(s=u.getLimit(e,s)),this.filterBySinceLimit(u,i,s,0,!0)}handleDelta(e,t,i=undefined){const s=this.parseBidAsk(t,0,1,i);e.storeArray(s)}handleDeltas(e,t,i=undefined){for(let s=0;s<t.length;s++)this.handleDelta(e,t[s],i)}handleOrderBook(e,t){const i=this.safeString(t,"symbol"),s=this.safeMarket(i),r=s.symbol,a=this.safeString(t,"type"),n=this.safeInteger(t,"depth"),o="orderbook:"+r,d=this.safeInteger(t,"sequence"),c=this.safeIntegerProduct(t,"timestamp",1e-6);if("snapshot"===a){const i=this.safeValue(t,"book",{}),a=this.customParseOrderBook(i,r,c,"bids","asks",0,1,s);a.nonce=d;const h=this.orderBook(a,n);this.orderbooks[r]=h,e.resolve(h,o)}else{const i=this.safeValue(this.orderbooks,r);if(void 0!==i){const a=this.safeValue(t,"book",{}),n=this.safeValue(a,"asks",[]),h=this.safeValue(a,"bids",[]);this.handleDeltas(i.asks,n,s),this.handleDeltas(i.bids,h,s),i.nonce=d,i.timestamp=c,i.datetime=this.iso8601(c),this.orderbooks[r]=i,e.resolve(i,o)}}}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r,a,n="trades";void 0!==e&&(r=this.market(e),e=r.symbol,n=n+":"+r.symbol),[a,s]=this.handleMarketTypeAndParams("watchMyTrades",r,s),void 0===e&&(n=n+":"+a);const o=await this.subscribePrivate(a,n,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleMyTrades(e,t){const i="trades";if(0===t.length)return;let s=this.myTrades;if(void 0===s){const e=this.safeInteger(this.options,"tradesLimit",1e3);s=new a.hl(e)}const r={};let n;for(let e=0;e<t.length;e++){const i=t[e],a=this.safeString(i,"symbol"),o=this.safeMarket(a),d=this.parseTrade(i);s.append(d);const c=d.symbol;void 0===n&&(n=o.type),r[c]=!0}const o=Object.keys(r);for(let t=0;t<o.length;t++){const r=i+":"+o[t];e.resolve(s,r)}const d=i+":"+n;e.resolve(s,d)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();let r,a,n="orders";void 0!==e&&(r=this.market(e),e=r.symbol,n=n+":"+r.symbol),[a,s]=this.handleMarketTypeAndParams("watchOrders",r,s),void 0===e&&(n=n+":"+a);const o=await this.subscribePrivate(a,n,s);return this.newUpdates&&(i=o.getLimit(e,i)),this.filterBySymbolSinceLimit(o,e,t,i,!0)}handleOrders(e,t){let i=[];const s=[];if("closed"in t||"fills"in t||"open"in t){const e=this.safeValue(t,"closed",[]),r=this.safeValue(t,"open",[]),a=this.arrayConcat(r,e);if(0===a.length)return;i=this.safeValue(t,"fills",[]);for(let e=0;e<a.length;e++){const t=a[e],i=this.parseOrder(t);s.push(i)}}else for(let e=0;e<t.length;e++){const r=t[e],a=this.safeString(r,"action");void 0!==a&&"Cancel"!==a&&i.push(r);const n=this.parseWSSwapOrder(r);s.push(n)}this.handleMyTrades(e,i);const r=this.safeInteger(this.options,"ordersLimit",1e3),n={};let o;void 0===this.orders&&(this.orders=new a.hl(r));const d=this.orders;for(let e=0;e<s.length;e++){const t=s[e];d.append(t);const i=t.symbol,r=this.market(i);void 0===o&&(o=r.type),n[i]=!0}const c=Object.keys(n);for(let t=0;t<c.length;t++){const i="orders:"+c[t];e.resolve(this.orders,i)}const h="orders:"+o;e.resolve(this.orders,h)}parseWSSwapOrder(e,t=undefined){const i=this.safeString(e,"orderID");let s=this.safeString(e,"clOrdID");void 0!==s&&s.length<1&&(s=void 0);const r=this.safeString(e,"symbol"),a=(t=this.safeMarket(r,t)).symbol,n=this.parseOrderStatus(this.safeString(e,"ordStatus")),o=this.safeStringLower(e,"side"),d=this.parseOrderType(this.safeString(e,"ordType")),c=this.parseNumber(this.fromEp(this.safeString(e,"priceEp"),t)),h=this.safeString(e,"orderQty"),u=this.safeString(e,"cumQty"),l=this.safeString(e,"leavesQty"),p=this.safeIntegerProduct(e,"actionTimeNs",1e-6),f=this.safeString(e,"cumValueEv"),m=this.fromEv(f,t);let v=this.safeIntegerProduct(e,"transactTimeNs",1e-6);0===v&&(v=void 0);const g=this.parseTimeInForce(this.safeString(e,"timeInForce")),y=this.safeString(e,"stopPx"),b="PO"===g;return this.safeOrder({info:e,id:i,clientOrderId:s,datetime:this.iso8601(p),timestamp:p,lastTradeTimestamp:v,symbol:a,type:d,timeInForce:g,postOnly:b,side:o,price:c,stopPrice:y,triggerPrice:y,amount:h,filled:u,remaining:l,cost:m,average:void 0,status:n,fee:void 0,trades:void 0},t)}handleMessage(e,t){const i=this.safeInteger(t,"id");if(void 0!==i){const s=e.subscriptions,r=Object.values(s);for(let s=0;s<r.length;s++){const a=r[s];if(!0!==a){const s=this.safeInteger(a,"id");if(void 0!==s&&s===i){const i=this.safeValue(a,"method");if(void 0!==i)return void i.call(this,e,t)}}}}if("market24h"in t||"spot_market24h"in t)return this.handleTicker(e,t);if("trades"in t)return this.handleTrades(e,t);if("kline"in t)return this.handleOHLCV(e,t);if("book"in t)return this.handleOrderBook(e,t);if("orders"in t){const i=this.safeValue(t,"orders",{});this.handleOrders(e,i)}if("accounts"in t||"wallets"in t){const i="accounts"in t?"swap":"spot",s=this.safeValue2(t,"accounts","wallets",[]);this.handleBalance(i,e,s)}}handleAuthenticate(e,t){return e.futures.authenticated.resolve(1),t}async subscribePrivate(e,t,i={}){await this.loadMarkets(),await this.authenticate();const s=this.urls.api.ws,r=this.seconds(),a="spot"===e?"wo.subscribe":"aop.subscribe";let n={id:r,method:a,params:[]};n=this.extend(n,i);const o={id:r,messageHash:t};return await this.watch(s,t,n,a,o)}async authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws,i=this.client(t),s=this.seconds(),r="authenticated",a=i.future(r);if(void 0===this.safeValue(i.subscriptions,r)){const e=this.safeInteger(this.options,"expires",120),i=this.seconds()+e,a=this.apiKey+i.toString(),o=this.hmac(this.encode(a),this.encode(this.secret),n.J),d={method:"user.auth",params:["API",this.apiKey,o,i],id:s},c={id:s,method:this.handleAuthenticate};this.spawn(this.watch,t,r,d,r,c)}return await a}}},7283:(e,t,i)=>{i.d(t,{Z:()=>a});var s=i(1320),r=i(3020);class a extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTrades:!0,watchTicker:!0},urls:{api:{ws:"wss://api.exchange.ripio.com/ws/v2/consumer/non-persistent/public/default/"}},options:{tradesLimit:1e3,uuid:this.uuid()}})}async watchTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a="trades",n=a+"_"+r.id.toLowerCase(),o=this.urls.api.ws+n+"/"+this.options.uuid,d={name:a,symbol:e,messageHash:n,method:this.handleTrade},c=await this.watch(o,n,void 0,n,d);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,t,i,"timestamp",!0)}handleTrade(e,t,i){const s=this.safeString(t,"payload");if(void 0===s)return t;const a=JSON.parse(this.base64ToString(s)),n=this.safeString(i,"symbol"),o=this.safeString(i,"messageHash"),d=this.market(n),c=this.parseTrade(a,d);let h=this.safeValue(this.trades,n);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new r.ZL(e),this.trades[n]=h}h.append(c),e.resolve(h,o)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);e=i.symbol;const s="rate",r=s+"_"+i.id.toLowerCase(),a=this.urls.api.ws+r+"/"+this.options.uuid,n={name:s,symbol:e,messageHash:r,method:this.handleTicker};return await this.watch(a,r,void 0,r,n)}handleTicker(e,t,i){const s=this.safeString(t,"payload");if(void 0===s)return t;const r=JSON.parse(this.base64ToString(s)),a=this.parseTicker(r),n=this.parse8601(this.safeString(t,"publishTime"));a.timestamp=n,a.datetime=this.iso8601(n);const o=a.symbol;this.tickers[o]=a;const d=this.safeString(i,"messageHash");return void 0!==d&&e.resolve(a,d),t}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const r="orderbook",a=r+"_"+s.id.toLowerCase(),n=this.urls.api.ws+a+"/"+this.options.uuid,o=this.client(n),d={name:r,symbol:e,messageHash:a,method:this.handleOrderBook};if(!(a in o.subscriptions)){this.orderbooks[e]=this.orderBook({}),o.subscriptions[a]=d;const t=this.safeValue(this.options,"fetchOrderBookSnapshot",{}),i=this.safeInteger(t,"delay",this.rateLimit);this.delay(i,this.fetchOrderBookSnapshot,o,d)}return(await this.watch(n,a,void 0,a,d)).limit()}async fetchOrderBookSnapshot(e,t){const i=this.safeString(t,"symbol"),s=this.safeString(t,"messageHash");try{const t=await this.fetchOrderBook(i),r=this.orderbooks[i],a=r.cache;r.reset(t);for(let t=0;t<a.length;t++){const i=a[t];this.handleOrderBookMessage(e,i,r)}this.orderbooks[i]=r,e.resolve(r,s)}catch(t){e.reject(t,s)}}handleOrderBook(e,t,i){const s=this.safeString(i,"messageHash"),r=this.safeString(i,"symbol"),a=this.safeValue(this.orderbooks,r);return void 0===a||(void 0===a.nonce?a.cache.push(t):(this.handleOrderBookMessage(e,t,a),e.resolve(a,s))),t}handleOrderBookMessage(e,t,i){const s=this.safeString(t,"payload");if(void 0===s)return t;const r=JSON.parse(this.base64ToString(s)),a=this.safeInteger(r,"updated_id");if(a>i.nonce){const e=this.safeValue(r,"sell",[]),s=this.safeValue(r,"buy",[]);this.handleDeltas(i.asks,e),this.handleDeltas(i.bids,s),i.nonce=a;const n=this.parse8601(this.safeString(t,"publishTime"));i.timestamp=n,i.datetime=this.iso8601(n)}return i}handleDelta(e,t){const i=this.safeFloat(t,"price"),s=this.safeFloat(t,"amount");e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async ack(e,t){await e.send({messageId:t})}handleMessage(e,t){const i=this.safeString(t,"messageId");void 0!==i&&this.spawn(this.ack,e,i);const s=Object.keys(e.subscriptions),r=this.safeString(s,0),a=this.safeValue(e.subscriptions,r,{}),n=this.safeValue(a,"method");return void 0!==n?n.call(this,e,t,a):t}}},7614:(e,t,i)=>{i.d(t,{Z:()=>a});var s=i(7584),r=i(3020);class a extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTicker:!0,watchTrades:!0},urls:{api:{ws:"wss://api.upbit.com/websocket/v1"}},options:{tradesLimit:1e3}})}async watchPublic(e,t,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const r=s.id,a=this.urls.api.ws;this.options[t]=this.safeValue(this.options,t,{}),this.options[t][e]=!0;const n=Object.keys(this.options[t]),o=this.marketIds(n),d=[{ticket:this.uuid()},{type:t,codes:o}],c=t+":"+r;return await this.watch(a,c,d,c)}async watchTicker(e,t={}){return await this.watchPublic(e,"ticker")}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets(),e=this.symbol(e);const r=await this.watchPublic(e,"trade");return this.newUpdates&&(i=r.getLimit(e,i)),this.filterBySinceLimit(r,t,i,"timestamp",!0)}async watchOrderBook(e,t=undefined,i={}){return(await this.watchPublic(e,"orderbook")).limit()}handleTicker(e,t){const i="ticker:"+this.safeString(t,"code"),s=this.parseTicker(t),r=s.symbol;this.tickers[r]=s,e.resolve(s,i)}handleOrderBook(e,t){const i=this.safeString(t,"code"),s=this.safeSymbol(i,void 0,"-"),r=this.safeString(t,"stream_type"),a=this.safeValue(this.options,"watchOrderBook",{}),n=this.safeInteger(a,"limit",15);"SNAPSHOT"===r&&(this.orderbooks[s]=this.orderBook({},n));const o=this.orderbooks[s];o.reset({}),o.symbol=s;const d=o.bids,c=o.asks,h=this.safeValue(t,"orderbook_units",[]);for(let e=0;e<h.length;e++){const t=h[e],i=this.safeFloat(t,"ask_price"),s=this.safeFloat(t,"ask_size"),r=this.safeFloat(t,"bid_price"),a=this.safeFloat(t,"bid_size");c.store(i,s),d.store(r,a)}const u=this.safeInteger(t,"timestamp"),l=this.iso8601(u);o.timestamp=u,o.datetime=l;const p="orderbook:"+i;e.resolve(o,p)}handleTrades(e,t){const i=this.parseTrade(t),s=i.symbol;let a=this.safeValue(this.trades,s);if(void 0===a){const e=this.safeInteger(this.options,"tradesLimit",1e3);a=new r.ZL(e),this.trades[s]=a}a.append(i);const n="trade:"+this.safeString(t,"code");e.resolve(a,n)}handleMessage(e,t){const i={ticker:this.handleTicker,orderbook:this.handleOrderBook,trade:this.handleTrades},s=this.safeString(t,"type"),r=this.safeValue(i,s);r&&r.call(this,e,t)}}},4828:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(6536),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0,watchMyTrades:!0,watchOrders:!0,watchOrderBook:!0,watchOHLCV:!0},urls:{api:{ws:"wss://stream.wazirx.com/stream"}},options:{},streaming:{},exceptions:{},api:{private:{post:{create_auth_token:1}}}})}async watchBalance(e={}){await this.loadMarkets();const t=await this.authenticate(e),i="balance",s=this.urls.api.ws,r={event:"subscribe",streams:["outboundAccountPosition"],auth_key:t},a=this.deepExtend(r,e);return await this.watch(s,i,a,i)}handleBalance(e,t){const i=this.safeValue(t,"data",{}),s=this.safeValue(i,"B",[]),r=this.safeInteger(i,"E");this.balance.info=s,this.balance.timestamp=r,this.balance.datetime=this.iso8601(r);for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"a"),r=this.safeCurrencyCode(i),a=this.safeNumber(t,"b"),n=this.safeNumber(t,"l"),o=this.account();o.free=a,o.used=n,this.balance[r]=o}this.balance=this.safeBalance(this.balance),e.resolve(this.balance,"balance")}parseWSTrade(e,t=undefined){const i=this.safeInteger(e,"E"),s=this.safeString(e,"s");t=this.safeMarket(s,t);const r=this.safeString(e,"f"),a=this.safeString(e,"U"),n=!0===this.safeValue(e,"m");let o;return void 0!==r&&(o={cost:r,currency:this.safeCurrencyCode(a),rate:void 0}),this.safeTrade({id:this.safeString(e,"t"),info:e,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:this.safeStringN(e,["o"]),type:void 0,side:this.safeString(e,"S"),takerOrMaker:n?"maker":"taker",price:this.safeString(e,"p"),amount:this.safeString(e,"q"),cost:void 0,fee:o},t)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s=this.urls.api.ws,r="ticker:"+i.symbol,a=this.deepExtend({event:"subscribe",streams:["!ticker@arr"]},t);return await this.watch(s,r,a,"tickers")}async watchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=this.urls.api.ws,s="tickers",r=this.deepExtend({event:"subscribe",streams:["!ticker@arr"]},t),a=await this.watch(i,s,r,s);return this.filterByArray(a,"symbol",e,!1)}handleTicker(e,t){const i=this.safeValue(t,"data",[]);for(let t=0;t<i.length;t++){const s=i[t],r=this.parseWSTicker(s),a=r.symbol;this.tickers[a]=r;const n="ticker:"+a;e.resolve(r,n)}e.resolve(this.tickers,"tickers")}parseWSTicker(e,t=undefined){const i=this.safeString(e,"s"),s=this.safeInteger(e,"E");return this.safeTicker({symbol:this.safeSymbol(i,t),timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"h"),low:this.safeString(e,"l"),bid:this.safeNumber(e,"b"),bidVolume:void 0,ask:this.safeNumber(e,"a"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"o"),close:void 0,last:this.safeString(e,"l"),previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:void 0,quoteVolume:this.safeString(e,"q"),info:e},t)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);e=r.symbol;const a=r.id+"@trades",n=this.urls.api.ws,o={event:"subscribe",streams:[a]},d=this.extend(o,s),c=await this.watch(n,a,d,a);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySinceLimit(c,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"data",{}),s=this.safeValue(i,"trades",[]),r=this.safeString(t,"stream"),n=r.split("@"),o=this.safeString(n,0),d=this.safeMarket(o),c=this.safeSymbol(o,d);let h=this.safeValue(this.trades,c);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a.ZL(e),this.trades[c]=h}for(let e=0;e<s.length;e++){const t=this.parseWSTrade(s[e],d);h.append(t)}e.resolve(h,r)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.authenticate(s);void 0!==e&&(e=this.market(e).symbol);const a=this.urls.api.ws,n="myTrades",o={event:"subscribe",streams:["ownTrade"],auth_key:r},d=this.deepExtend(o,s),c=await this.watch(a,n,d,n);return this.newUpdates&&(i=c.getLimit(e,i)),this.filterBySymbolSinceLimit(c,e,t,i,!0)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.urls.api.ws,o="ohlcv:"+e+":"+t,d={event:"subscribe",streams:[a.id+"@kline_"+t]},c=this.deepExtend(d,r),h=await this.watch(n,o,c,o);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"data",{}),s=this.safeString(i,"s"),r=this.safeMarket(s),n=this.safeSymbol(s,r),o=this.safeString(i,"i");this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let d=this.safeValue(this.ohlcvs[n],o);if(void 0===d){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);d=new a.Py(e),this.ohlcvs[n][o]=d}const c=this.parseWsOHLCV(i,r);d.append(c);const h="ohlcv:"+n+":"+o;e.resolve(d,h)}parseWsOHLCV(e,t=undefined){return[this.safeInteger(e,"t"),this.safeNumber(e,"o"),this.safeNumber(e,"c"),this.safeNumber(e,"h"),this.safeNumber(e,"l"),this.safeNumber(e,"v")]}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);e=s.symbol;const r=this.urls.api.ws,a="orderbook:"+e,n={event:"subscribe",streams:[s.id+"@depth"]},o=this.deepExtend(n,i);return(await this.watch(r,a,o,a)).limit()}handleDelta(e,t){const i=this.parseBidAsk(t,0,1);e.storeArray(i)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleOrderBook(e,t){const i=this.safeValue(t,"data",{}),s=this.safeInteger(i,"E"),r=this.safeString(i,"s"),a=this.safeMarket(r).symbol,n="orderbook:"+a,o=this.safeValue(this.orderbooks,a);if(void 0===o){const e=this.parseOrderBook(i,a,s,"b","a"),t=this.orderBook(e);this.orderbooks[a]=t}else{const e=this.safeValue(i,"a",[]),t=this.safeValue(i,"b",[]);this.handleDeltas(o.asks,e),this.handleDeltas(o.bids,t),o.nonce=s,o.timestamp=s,o.datetime=this.iso8601(s),this.orderbooks[a]=o}e.resolve(this.orderbooks[a],n)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),void 0!==e&&(e=this.market(e).symbol);const r="orders",a={event:"subscribe",streams:["orderUpdate"],auth_key:await this.authenticate(s)},n=this.urls.api.ws,o=this.deepExtend(a,s),d=await this.watch(n,r,o,r,o);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}handleOrder(e,t){const i=this.safeValue(t,"data",{}),s=this.parseWSOrder(i);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}this.orders.append(s);let r="orders";e.resolve(this.orders,r),r+=":"+s.symbol,e.resolve(this.orders,r)}parseWSOrder(e){const t=this.safeInteger(e,"O"),i=this.safeString(e,"s"),s=this.safeString(e,"X"),r=this.safeMarket(i);return this.safeOrder({info:e,id:this.safeString(e,"i"),clientOrderId:this.safeString(e,"c"),datetime:this.iso8601(t),timestamp:t,lastTradeTimestamp:void 0,symbol:r.symbol,type:this.safeValue(e,"m")?"limit":"market",timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"o"),price:this.safeString(e,"p"),stopPrice:void 0,triggerPrice:void 0,amount:this.safeString(e,"V"),filled:void 0,remaining:this.safeString(e,"q"),cost:void 0,average:this.safeString(e,"v"),status:this.parseOrderStatus(s),fee:void 0,trades:void 0},r)}handleMyTrades(e,t){const i=this.safeValue(t,"data",{});let s;if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);s=new a.hl(e),this.myTrades=s}else s=this.myTrades;const r=this.parseWSTrade(i);s.append(r),e.resolve(s,"myTrades")}handleConnected(e,t){return t}handleSubscribed(e,t){return t}handleError(e,t){throw new r.ExchangeError(this.id+" "+this.json(t))}handleMessage(e,t){if("error"===this.safeString(t,"status"))return this.handleError(e,t);const i=this.safeString(t,"event"),s={error:this.handleError,connected:this.handleConnected,subscribed:this.handleSubscribed},a=this.safeValue(s,i);if(void 0!==a)return a.call(this,e,t);const n=this.safeString(t,"stream",""),o={"ticker@arr":this.handleTicker,"@depth":this.handleOrderBook,"@kline":this.handleOHLCV,"@trades":this.handleTrades,outboundAccountPosition:this.handleBalance,orderUpdate:this.handleOrder,ownTrade:this.handleMyTrades},d=Object.keys(o);for(let i=0;i<d.length;i++)if(this.inArray(d[i],n))return o[d[i]].call(this,e,t);throw new r.NotSupported(this.id+" this message type is not supported yet. Message: "+this.json(t))}async authenticate(e={}){const t=this.urls.api.ws,i=this.client(t),s="authenticated",r=this.milliseconds();let a=this.safeValue(i.subscriptions,s);const n=this.safeInteger(a,"expires");return(void 0===a||r>n)&&(a=await this.privatePostCreateAuthToken(),a.expires=r+1e3*this.safeInteger(a,"timeout_duration"),i.subscriptions[s]=a),this.safeString(a,"auth_key")}}},5630:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(5467),r=i(2194),a=i(6689),n=i(3020);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!0,watchMyTrades:!0,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTrades:!0},urls:{api:{ws:"wss://api.whitebit.com/ws"}},options:{timeframes:{"1m":"60","5m":"300","15m":"900","30m":"1800","1h":"3600","4h":"14400","8h":"28800","1d":"86400","1w":"604800"},watchOrderBook:{priceInterval:0}},streaming:{ping:this.ping},exceptions:{ws:{exact:{1:a.BadRequest,2:a.BadRequest,4:a.BadRequest,6:a.AuthenticationError}}}})}async watchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e);e=a.symbol;const n=this.safeValue(this.options,"timeframes",{}),o=this.safeInteger(n,t),d="candles:"+e,c=[a.id,o],h=await this.watchPublic(d,"candles_subscribe",c,r);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"params",[]);for(let t=0;t<i.length;t++){const s=i[t],r=this.safeString(s,7),a=this.safeMarket(r),o=a.symbol,d="candles:"+o,c=this.parseOHLCV(s,a);this.ohlcvs[o]=this.safeValue(this.ohlcvs,o);let h=this.ohlcvs[o];if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new n.Py(e),this.ohlcvs[o]=h}h.append(c),e.resolve(h,d)}return t}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e);void 0===t&&(t=10);const r="orderbook:"+s.symbol,a=this.safeValue(this.options,"watchOrderBook",{}),n=this.safeString(a,"priceInterval","0"),o=this.safeString(i,"priceInterval",n);i=this.omit(i,"priceInterval");const d=[s.id,t,o,!0];return(await this.watchPublic(r,"depth_subscribe",d,i)).limit()}handleOrderBook(e,t){const i=this.safeValue(t,"params",[]),s=this.safeValue(i,0),r=this.safeString(i,2),a=this.safeMarket(r).symbol,n=this.safeValue(i,1);let o;if(a in this.orderbooks?o=this.orderbooks[a]:(o=this.orderBook(),this.orderbooks[a]=o),s){const e=this.parseOrderBook(n,a);o.reset(e)}else{const e=this.safeValue(n,"asks",[]),t=this.safeValue(n,"bids",[]);this.handleDeltas(o.asks,e),this.handleDeltas(o.bids,t)}const d="orderbook:"+a;e.resolve(o,d)}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}async watchTicker(e,t={}){await this.loadMarkets();const i="ticker:"+(e=this.market(e).symbol);return await this.watchMultipleSubscription(i,"market_subscribe",e,!1,t)}handleTicker(e,t){const i=this.safeValue(t,"params",[]),s=this.safeString(i,0),r=this.safeMarket(s,void 0),a=r.symbol,n=this.safeValue(i,1,{}),o="ticker:"+a,d=this.parseTicker(n,r);this.tickers[a]=d,e.resolve(d,o);const c=Object.keys(e.futures);for(let t=0;t<c.length;t++){const i=c[t];i.indexOf("tickers")>=0&&i.indexOf(a)>=0&&e.resolve(d,i)}return t}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r="trades:"+(e=this.market(e).symbol),a=await this.watchMultipleSubscription(r,"trades_subscribe",e,!1,s);return this.newUpdates&&(i=a.getLimit(e,i)),this.filterBySinceLimit(a,t,i,"timestamp",!0)}handleTrades(e,t){const i=this.safeValue(t,"params",[]),s=this.safeString(i,0),r=this.safeMarket(s),a=r.symbol;let o=this.safeValue(this.trades,a);if(void 0===o){const e=this.safeInteger(this.options,"tradesLimit",1e3);o=new n.ZL(e),this.trades[a]=o}const d=this.safeValue(i,1,[]),c=this.parseTrades(d,r);for(let e=0;e<c.length;e++)o.append(c[e]);const h="trades:"+r.symbol;e.resolve(o,h)}async watchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" watchMyTrades requires a symbol argument");await this.loadMarkets(),await this.authenticate();const r="myTrades:"+(e=this.market(e).symbol),n=await this.watchMultipleSubscription(r,"deals_subscribe",e,!0,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleMyTrades(e,t,i=undefined){const s=this.safeValue(t,"params");if(void 0===this.myTrades){const e=this.safeInteger(this.options,"tradesLimit",1e3);this.myTrades=new n.ZL(e)}const r=this.myTrades,a=this.parseWsTrade(s);r.append(a);const o="myTrades:"+a.symbol;e.resolve(r,o)}parseWsTrade(e,t=undefined){const i=this.safeString(e,3),s=this.safeTimestamp(e,1),r=this.safeString(e,0),a=this.safeString(e,4),n=this.safeString(e,5),o=this.safeString(e,2);let d;t=this.safeMarket(o,t);const c=this.safeString(e,6);return void 0!==c&&(d={cost:c,currency:t.quote}),this.safeTrade({id:r,info:e,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,order:i,type:void 0,side:void 0,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:d},t)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" watchOrders requires a symbol argument");await this.loadMarkets(),await this.authenticate();const r="orders:"+(e=this.market(e).symbol),n=await this.watchMultipleSubscription(r,"ordersPending_subscribe",e,!1,s);return this.newUpdates&&(i=n.getLimit(e,i)),this.filterBySymbolSinceLimit(n,e,t,i,!0)}handleOrder(e,t,i=undefined){const s=this.safeValue(t,"params",[]),r=this.safeValue(s,1);if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new n.hl(e)}const a=this.orders,o=this.safeInteger(s,0),d=this.parseWsOrder(r,o);a.append(d);const c="orders:"+d.symbol;e.resolve(this.orders,c)}parseWsOrder(e,t,i=undefined){const s=this.safeString(e,"market");i=this.safeMarket(s,i);const a=this.safeString(e,"id"),n=this.omitZero(this.safeString(e,"client_order_id")),o=this.safeString(e,"price"),d=this.safeString(e,"deal_stock"),c=this.safeString(e,"deal_money"),h=this.safeString(e,"activation_price"),u=this.safeString(e,"type"),l=this.parseWsOrderType(u);let p,f;"market"===l?(p=this.safeString(e,"deal_stock"),f="0"):(f=this.safeString(e,"left"),p=this.safeString(e,"amount"));const m=this.safeTimestamp(e,"ctime"),v=this.safeTimestamp(e,"mtime"),g=i.symbol,y=1===this.safeInteger(e,"side")?"sell":"buy",b=this.safeString(e,"deal_fee");let w;return void 0!==b&&(w={cost:this.parseNumber(b),currency:i.quote}),t=1===t||2===t?"open":r.O.stringEquals(f,"0")?"closed":"canceled",this.safeOrder({info:e,symbol:g,id:a,clientOrderId:n,timestamp:m,datetime:this.iso8601(m),lastTradeTimestamp:v,type:l,timeInForce:void 0,postOnly:void 0,side:y,price:o,stopPrice:h,triggerPrice:h,amount:p,cost:c,average:void 0,filled:d,remaining:f,status:t,fee:w,trades:void 0},i)}parseWsOrderType(e){return this.safeString({1:"limit",2:"market",202:"market",3:"limit",4:"market",5:"limit",6:"market",8:"limit",10:"market"},e,e)}async watchBalance(e={}){let t;await this.loadMarkets(),[t,e]=this.handleMarketTypeAndParams("watchBalance",void 0,e);let i,s="wallet:";"spot"===t?(i="balanceSpot_subscribe",s+="spot"):(i="balanceMargin_subscribe",s+="margin");const r=Object.keys(this.currencies);return await this.watchPrivate(s,i,r,e)}handleBalance(e,t){const i=this.safeString(t,"method"),s=this.safeValue(t,"params"),r=this.safeValue(s,0);this.balance.info=r;const a=Object.keys(r),n=this.safeValue(a,0),o=this.safeValue(r,n),d=this.safeCurrencyCode(n),c=this.account();c.free=this.safeString(o,"available"),c.used=this.safeString(o,"freeze"),this.balance[d]=c,this.balance=this.safeBalance(this.balance);let h="wallet:";i.indexOf("Spot")>=0?h+="spot":h+="margin",e.resolve(this.balance,h)}async watchPublic(e,t,i=[],s={}){const r=this.urls.api.ws,a={id:this.nonce(),method:t,params:i},n=this.extend(a,s);return await this.watch(r,e,n,e)}async watchMultipleSubscription(e,t,i,s=!1,r={}){await this.loadMarkets();const a=this.urls.api.ws,n=this.nonce(),o=this.safeValue(this.clients,a);let d,c=[];if(void 0===o){const o={},h=this.market(i).id;o[h]=!0,c=[h],s&&(c=[c]),d={id:n,method:t,params:c};const u=this.extend(d,r);return await this.watch(a,e,u,t,o)}{const r=this.safeValue(o.subscriptions,t,{});let c=!0;const h=this.market(i).id;if(this.safeValue(r,h,!1)||(r[h]=!0,c=!1),c)return await this.watch(a,e,d,t,r);{let i=[];i=Object.keys(r),s&&(i=[i]);const d={id:n,method:t,params:i};return t in o.subscriptions&&delete o.subscriptions[t],await this.watch(a,e,d,t,r)}}}async watchPrivate(e,t,i=[],s={}){this.checkRequiredCredentials(),await this.authenticate();const r=this.urls.api.ws,a={id:this.nonce(),method:t,params:i},n=this.extend(a,s);return await this.watch(r,e,n,e)}async authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws,i="authenticated",s=this.client(t),r=s.future("authenticated");if(void 0===this.safeValue(s.subscriptions,i)){const e=await this.v4PrivatePostProfileWebsocketToken(),a=this.safeString(e,"websocket_token"),n=this.nonce(),o={id:n,method:"authorize",params:[a,"public"]},d={id:n,method:this.handleAuthenticate};try{await this.watch(t,i,o,i,d)}catch(e){delete s.subscriptions[i],r.reject(e)}}return await r}handleAuthenticate(e,t){return e.futures.authenticated.resolve(1),t}handleErrorMessage(e,t){const i=this.safeValue(t,"error");try{if(void 0!==i){const e=this.safeString(t,"code"),i=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.ws.exact,e,i)}}catch(t){if(t instanceof a.AuthenticationError)return e.reject(t,"authenticated"),"authenticated"in e.subscriptions&&delete e.subscriptions.authenticated,!1}return t}handleMessage(e,t){if(!this.handleErrorMessage(e,t))return;const i=this.safeValue(t,"result",{});if(void 0!==i&&"pong"===i)return void this.handlePong(e,t);const s=this.safeInteger(t,"id");if(void 0!==s)return void this.handleSubscriptionStatus(e,t,s);const r={market_update:this.handleTicker,trades_update:this.handleTrades,depth_update:this.handleOrderBook,candles_update:this.handleOHLCV,ordersPending_update:this.handleOrder,ordersExecuted_update:this.handleOrder,balanceSpot_update:this.handleBalance,balanceMargin_update:this.handleBalance,deals_update:this.handleMyTrades},a=this.safeValue(t,"method"),n=this.safeValue(r,a);void 0!==n&&n.call(this,e,t)}handleSubscriptionStatus(e,t,i){const s=e.subscriptions,r=Object.values(s);for(let s=0;s<r.length;s++){const a=r[s];if(!0!==a){const s=this.safeInteger(a,"id");if(void 0!==s&&s===i){const i=this.safeValue(a,"method");if(void 0!==i)return void i.call(this,e,t)}}}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}ping(e){return{id:0,method:"ping",params:[]}}}},3910:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(517),r=i(6689),a=i(3020),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchBalance:!1,watchMyTrades:!1,watchOHLCV:!0,watchOrderBook:!0,watchOrders:!0,watchTicker:!0,watchTickers:!0,watchTrades:!0},urls:{api:{ws:{public:"wss://wss.woo.org/ws/stream",private:"wss://wss.woo.network/v2/ws/private/stream"}},test:{ws:{public:"wss://wss.staging.woo.org/ws/stream",private:"wss://wss.staging.woo.org/v2/ws/private/stream"}}},requiredCredentials:{apiKey:!0,secret:!0,uid:!0},options:{tradesLimit:1e3,ordersLimit:1e3,requestId:{}},streaming:{ping:this.ping,keepAlive:1e4}})}requestId(e){const t=this.safeValue(this.options,"requestId",{}),i=this.safeInteger(t,e,0),s=this.sum(i,1);return this.options.requestId[e]=s,s}async watchPublic(e,t){this.checkRequiredUid();const i=this.urls.api.ws.public+"/"+this.uid,s={id:this.requestId(i)},r=this.extend(s,t);return await this.watch(i,e,r,e,s)}async watchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e).id+"@orderbook",r={event:"subscribe",topic:s},a=this.extend(r,i);return(await this.watchPublic(s,a)).limit()}handleOrderBook(e,t){const i=this.safeValue(t,"data"),s=this.safeString(i,"symbol"),r=this.safeMarket(s).symbol,a=this.safeString(t,"topic");let n=this.safeValue(this.orderbooks,r);void 0===n&&(n=this.orderBook({}));const o=this.safeInteger(t,"ts"),d=this.parseOrderBook(i,r,o,"bids","asks");n.reset(d),e.resolve(n,a)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e).id+"@ticker",s={event:"subscribe",topic:i},r=this.extend(s,t);return await this.watchPublic(i,r)}parseWsTicker(e,t=undefined){const i=this.safeInteger(e,"date",this.milliseconds());return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:this.safeString(e,"close"),last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"amount"),info:e},t)}handleTicker(e,t){const i=this.safeValue(t,"data"),s=this.safeValue(t,"topic"),r=this.safeString(i,"symbol"),a=this.safeMarket(r),n=this.safeInteger(t,"ts");i.date=n;const o=this.parseWsTicker(i,a);return o.symbol=a.symbol,this.tickers[a.symbol]=o,e.resolve(o,s),t}async watchTickers(e=undefined,t={}){await this.loadMarkets();const i="tickers",s={event:"subscribe",topic:i},r=this.extend(s,t),a=await this.watchPublic(i,r);return this.filterByArray(a,"symbol",e)}handleTickers(e,t){const i=this.safeValue(t,"topic"),s=this.safeValue(t,"data"),r=this.safeInteger(t,"ts"),a=[];for(let e=0;e<s.length;e++){const t=this.safeString(s[e],"symbol"),i=this.safeMarket(t),n=this.parseWsTicker(this.extend(s[e],{date:r}),i);this.tickers[i.symbol]=n,a.push(n)}e.resolve(a,i)}async watchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){if(await this.loadMarkets(),"1m"!==t&&"5m"!==t&&"15m"!==t&&"30m"!==t&&"1h"!==t&&"1d"!==t&&"1w"!==t&&"1M"!==t)throw new r.ExchangeError(this.id+" watchOHLCV timeframe argument must be 1m, 5m, 15m, 30m, 1h, 1d, 1w, 1M");const n=this.market(e),o=this.safeString(this.timeframes,t,t),d=n.id+"@kline_"+o,c={event:"subscribe",topic:d},h=this.extend(c,a),u=await this.watchPublic(d,h);return this.newUpdates&&(s=u.getLimit(n.symbol,s)),this.filterBySinceLimit(u,i,s,0,!0)}handleOHLCV(e,t){const i=this.safeValue(t,"data"),s=this.safeValue(t,"topic"),r=this.safeString(i,"symbol"),n=this.safeMarket(r).symbol,o=this.safeString(i,"type"),d=this.findTimeframe(o),c=[this.safeInteger(i,"startTime"),this.safeFloat(i,"open"),this.safeFloat(i,"high"),this.safeFloat(i,"low"),this.safeFloat(i,"close"),this.safeFloat(i,"volume")];this.ohlcvs[n]=this.safeValue(this.ohlcvs,n,{});let h=this.safeValue(this.ohlcvs[n],d);if(void 0===h){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);h=new a.Py(e),this.ohlcvs[n][d]=h}h.append(c),e.resolve(h,s)}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a=r.id+"@trade",n={event:"subscribe",topic:a},o=this.extend(n,s),d=await this.watchPublic(a,o);return this.newUpdates&&(i=d.getLimit(r.symbol,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}handleTrade(e,t){const i=this.safeString(t,"topic"),s=this.safeInteger(t,"ts"),r=this.safeValue(t,"data"),n=this.safeString(r,"symbol"),o=this.safeMarket(n),d=o.symbol,c=this.parseWsTrade(this.extend(r,{timestamp:s}),o);let h=this.safeValue(this.trades,d);if(void 0===h){const e=this.safeInteger(this.options,"tradesLimit",1e3);h=new a.ZL(e)}h.append(c),this.trades[d]=h,e.resolve(h,i)}parseWsTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString(e,"price"),a=this.safeString(e,"size"),o=n.O.stringMul(r,a),d=this.safeStringLower(e,"side"),c=this.safeInteger(e,"timestamp");return this.safeTrade({id:void 0,timestamp:c,datetime:this.iso8601(c),symbol:s,side:d,price:r,amount:a,cost:o,order:void 0,takerOrMaker:void 0,type:void 0,fee:void 0,info:e},t)}checkRequiredUid(e=!0){if(!this.uid){if(e)throw new r.AuthenticationError(this.id+" requires `uid` credential");return!1}return!0}authenticate(e={}){this.checkRequiredCredentials();const t=this.urls.api.ws.private+"/"+this.uid,i=this.client(t),s="authenticated";let r=this.safeValue(i.subscriptions,s);if(void 0===r){const a=this.nonce().toString(),n="|"+a,d=this.hmac(this.encode(n),this.encode(this.secret),o.J),c={event:"auth",params:{apikey:this.apiKey,sign:d,timestamp:a}},h=this.extend(c,e);r=this.watch(t,s,h),i.subscriptions[s]=r}return r}async watchPrivate(e,t,i={}){await this.authenticate(i);const s=this.urls.api.ws.private+"/"+this.uid,r={id:this.requestId(s)},a=this.extend(r,t);return await this.watch(s,e,a,e,r)}async watchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r="executionreport";let a=r;void 0!==e&&(a+=":"+(e=this.market(e).symbol));const n={event:"subscribe",topic:r},o=this.extend(n,s),d=await this.watchPrivate(a,o);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySymbolSinceLimit(d,e,t,i,!0)}parseWsOrder(e,t=undefined){const i=this.safeString(e,"orderId"),s=this.safeString(e,"symbol"),r=this.market(s).symbol,a=this.safeInteger(e,"timestamp"),n=this.safeString(e,"totalFee"),o={cost:n,currency:this.safeString(e,"feeAsset")},d=this.safeFloat(e,"price"),c=this.safeFloat(e,"quantity"),h=this.safeStringLower(e,"side"),u=this.safeStringLower(e,"type"),l=this.safeFloat(e,"executedQuantity"),p=this.safeFloat(e,"totalExecutedQuantity");let f=c;c>=p&&(f-=p);const m=this.safeString(e,"status"),v=this.parseOrderStatus(m);return{info:e,symbol:r,id:i,clientOrderId:this.safeString(e,"clientOrderId"),timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:a,type:u,timeInForce:void 0,postOnly:void 0,side:h,price:d,stopPrice:void 0,triggerPrice:void 0,amount:c,cost:n,average:void 0,filled:l,remaining:f,status:v,fee:o,trades:void 0}}handleOrderUpdate(e,t){const i=this.safeValue(t,"data");this.handleOrder(e,i)}handleOrder(e,t){const i="executionreport",s=this.parseWsOrder(t),r=this.safeString(s,"symbol"),n=this.safeString(s,"id");if(void 0!==r){if(void 0===this.orders){const e=this.safeInteger(this.options,"ordersLimit",1e3);this.orders=new a.hl(e)}const t=this.orders,o=this.safeValue(t.hashmap,r,{}),d=this.safeValue(o,n);if(void 0!==d){const e=this.safeValue(d,"fee");void 0!==e&&(s.fee=e);const t=this.safeValue(d,"fees");void 0!==t&&(s.fees=t),s.trades=this.safeValue(d,"trades"),s.timestamp=this.safeInteger(d,"timestamp"),s.datetime=this.safeString(d,"datetime")}t.append(s),e.resolve(this.orders,i);const c=i+":"+r;e.resolve(this.orders,c)}}handleMessage(e,t){const i={ping:this.handlePing,pong:this.handlePong,subscribe:this.handleSubscribe,orderbook:this.handleOrderBook,ticker:this.handleTicker,tickers:this.handleTickers,kline:this.handleOHLCV,auth:this.handleAuth,executionreport:this.handleOrderUpdate,trade:this.handleTrade},s=this.safeString(t,"event");let r=this.safeValue(i,s);if(void 0!==r)return r.call(this,e,t);const a=this.safeString(t,"topic");if(void 0!==a){if(r=this.safeValue(i,a),void 0!==r)return r.call(this,e,t);const s=a.split("@");if(2===s.length){const a=this.safeString(s,1);if(r=this.safeValue(i,a),void 0!==r)return r.call(this,e,t);const n=a.split("_");if(2===s.length&&(r=this.safeValue(i,this.safeString(n,0)),void 0!==r))return r.call(this,e,t)}}return t}ping(e){return{event:"ping"}}handlePing(e,t){return{event:"pong"}}handlePong(e,t){return e.lastPong=this.milliseconds(),t}handleSubscribe(e,t){return t}handleAuth(e,t){const i="authenticated";if(this.safeValue(t,"success"))e.resolve(t,i);else{const s=new r.AuthenticationError(this.json(t));e.reject(s,i),i in e.subscriptions&&delete e.subscriptions.authenticated}}}},9571:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(5143),r=i(6689),a=i(3020);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{has:{ws:!0,watchOrderBook:!0,watchTicker:!0,watchTrades:!0,watchOHLCV:!0},urls:{api:{ws:{spot:"wss://api.{hostname}/websocket",contract:"wss://fapi.{hostname}/ws/public/v1"}}},options:{tradesLimit:1e3,ordersLimit:1e3,OHLCVLimit:1e3}})}async watchPublic(e,t,i,s,r=undefined,a={}){let n;await this.loadMarkets();const o=void 0!==r;"spot"==(this.market(i).spot?"spot":"contract")?(n={event:"addChannel",channel:t},o&&(n.length=r)):(n={action:"subscribe",channel:t},o&&(n.size=r));const d=this.extend(n,a),c={symbol:i,messageHash:t,method:s};return o&&(c.limit=r),await this.watch(e,t,d,t,c)}async watchTicker(e,t={}){await this.loadMarkets();const i=this.market(e);let s;const r=i.spot?"spot":"contract";s="spot"===r?i.baseId+i.quoteId+"_ticker":i.id+".Ticker";const a=this.implodeHostname(this.urls.api.ws[r]);return await this.watchPublic(a,s,e,this.handleTicker,void 0,t)}parseWsTicker(e,t=undefined){const i=this.safeInteger(e,6),s=this.safeString(e,3);return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:i,datetime:void 0,high:this.safeString(e,1),low:this.safeString(e,2),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,0),close:s,last:s,previousClose:void 0,change:void 0,percentage:this.safeString(e,5),average:void 0,baseVolume:this.safeString(e,4),quoteVolume:void 0,info:e},t)}handleTicker(e,t,i){const s=this.safeString(i,"symbol"),r=this.safeString(t,"channel"),a=this.market(s);let n,o=this.safeValue(t,"ticker");return void 0===o?(o=this.safeValue(t,"data",[]),n=this.parseWsTicker(o,a)):(o.date=this.safeValue(t,"date"),n=this.parseTicker(o,a)),n.symbol=s,this.tickers[s]=n,e.resolve(n,r),t}async watchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e);if(n.spot)throw new r.NotSupported(this.id+" watchOHLCV() supports contract markets only");(void 0===s||s>1440)&&(s=100);const o=this.safeString(this.timeframes,t,t),d=n.id+".KLine_"+o,c=this.implodeHostname(this.urls.api.ws.contract),h=await this.watchPublic(c,d,e,this.handleOHLCV,s,a);return this.newUpdates&&(s=h.getLimit(e,s)),this.filterBySinceLimit(h,i,s,0,!0)}handleOHLCV(e,t,i){const s=this.safeValue(t,"data",[]),r=this.safeString(t,"channel",""),n=r.split("_"),o=n.length,d=this.safeString(n,o-1),c=this.findTimeframe(d),h=this.safeString(i,"symbol"),u=this.market(h);for(let t=0;t<s.length;t++){const i=s[t],n=this.parseOHLCV(i,u);this.ohlcvs[h]=this.safeValue(this.ohlcvs,h,{});let o=this.safeValue(this.ohlcvs[h],c);if(void 0===o){const e=this.safeInteger(this.options,"OHLCVLimit",1e3);o=new a.Py(e),this.ohlcvs[h][c]=o}o.append(n),e.resolve(o,r)}return t}async watchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);let a;const n=r.spot?"spot":"contract";a="spot"===n?r.baseId+r.quoteId+"_trades":r.id+".Trade";const o=this.implodeHostname(this.urls.api.ws[n]),d=await this.watchPublic(o,a,e,this.handleTrades,i,s);return this.newUpdates&&(i=d.getLimit(e,i)),this.filterBySinceLimit(d,t,i,"timestamp",!0)}handleTrades(e,t,i){const s=this.safeValue(t,"channel"),r=this.safeString(i,"symbol"),n=this.market(r),o=this.safeValue(t,"data");let d=[];if("Whole"===this.safeString(t,"type"))for(let e=0;e<o.length;e++){const t=o[e],i=this.parseWsTrade(t,n);d.push(i)}else d=this.parseTrades(o,n);let c=this.safeValue(this.trades,r);if(void 0===c){const e=this.safeInteger(this.options,"tradesLimit",1e3);c=new a.ZL(e)}for(let e=0;e<d.length;e++)c.append(d[e]);this.trades[r]=c,e.resolve(c,s)}async watchOrderBook(e,t=undefined,i={}){if(void 0!==t){if(5!==t&&10!==t)throw new r.ExchangeError(this.id+" watchOrderBook limit argument must be undefined, 5, or 10")}else t=5;await this.loadMarkets();const s=this.market(e),a=s.spot?"spot":"contract";let n,o=this.implodeHostname(this.urls.api.ws[a]);return"spot"===a?(o+="/"+s.baseId,n=s.baseId+s.quoteId+"_quick_depth"):n=s.id+".Depth",(await this.watchPublic(o,n,e,this.handleOrderBook,t,i)).limit()}parseWsTrade(e,t=undefined){const i=this.safeTimestamp(e,3),s=this.safeString(e,0),r=this.safeString(e,1);t=this.safeMarket(void 0,t);const a=1===this.safeInteger(e,2)?"buy":"sell";return this.safeTrade({id:void 0,timestamp:i,datetime:this.iso8601(i),symbol:t.symbol,order:void 0,type:void 0,side:a,takerOrMaker:void 0,price:s,amount:r,cost:void 0,fee:void 0,info:e},t)}handleOrderBook(e,t,i){const s=this.safeString2(t,"type","dataType"),r=this.safeString(t,"channel"),a=this.safeString(i,"symbol");let n=this.safeValue(this.orderbooks,a);if(void 0!==s){const o="Whole"===s,d=o?this.safeValue(t,"data"):t,c=this.safeInteger2(d,"lastTime","time"),h=o?"asks":"listUp",u=o?"bids":"listDown",l=this.parseOrderBook(d,a,c,u,h);if(a in this.orderbooks)n=this.orderbooks[a],n.reset(l);else{const e=this.safeInteger(this.options,"watchOrderBookLimit",1e3),t=this.safeInteger(i,"limit",e);n=this.orderBook(l,t),this.orderbooks[a]=n}n.symbol=a,e.resolve(n,r)}else this.handleOrderBookMessage(e,t,n),e.resolve(n,r)}handleOrderBookMessage(e,t,i){const s=this.safeValue(t,"data",{}),r=this.safeInteger(s,"time"),a=this.safeValue(s,"asks",[]),n=this.safeValue(s,"bids",[]);return this.handleDeltas(i.asks,a),this.handleDeltas(i.bids,n),i.timestamp=r,i.datetime=this.iso8601(r),i}handleDelta(e,t){const i=this.safeFloat(t,0),s=this.safeFloat(t,1);e.store(i,s)}handleDeltas(e,t){for(let i=0;i<t.length;i++)this.handleDelta(e,t[i])}handleMessage(e,t){const i=this.safeString(t,"channel"),s=this.safeValue(e.subscriptions,i);if(void 0!==s){const i=this.safeValue(s,"method");if(void 0!==i)return i.call(this,e,t,s)}return t}handleErrorMessage(e,t){const i=this.safeString(t,"errorCode");try{if(void 0!==i){const e=this.id+" "+this.json(t);this.throwExactlyMatchedException(this.exceptions.exact,i,e);const s=this.safeValue(t,"message");void 0!==s&&this.throwBroadlyMatchedException(this.exceptions.broad,s,e)}}catch(t){if(t instanceof r.AuthenticationError){e.reject(t,"authenticated");const i="login";return i in e.subscriptions&&delete e.subscriptions[i],!1}}return t}}},3657:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(7875),r=i(6689),a=i(2194),n=i(9292);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"probit",name:"ProBit",countries:["SC","KR"],rateLimit:50,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","10m":"10m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","6h":"6h","12h":"12h","1d":"1D","1w":"1W","1M":"1M"},version:"v1",urls:{logo:"https://user-images.githubusercontent.com/51840849/79268032-c4379480-7ea2-11ea-80b3-dd96bb29fd0d.jpg",api:{accounts:"https://accounts.probit.com",public:"https://api.probit.com/api/exchange",private:"https://api.probit.com/api/exchange"},www:"https://www.probit.com",doc:["https://docs-en.probit.com","https://docs-ko.probit.com"],fees:"https://support.probit.com/hc/en-us/articles/360020968611-Trading-Fees",referral:"https://www.probit.com/r/34608773"},api:{public:{get:{market:1,currency:1,currency_with_platform:1,time:1,ticker:1,order_book:1,trade:1,candle:1}},private:{post:{new_order:2,cancel_order:1,withdrawal:2},get:{balance:1,order:1,open_order:1,order_history:1,trade_history:1,deposit_address:1}},accounts:{post:{token:1}}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},exceptions:{exact:{UNAUTHORIZED:r.AuthenticationError,INVALID_ARGUMENT:r.BadRequest,TRADING_UNAVAILABLE:r.ExchangeNotAvailable,NOT_ENOUGH_BALANCE:r.InsufficientFunds,NOT_ALLOWED_COMBINATION:r.BadRequest,INVALID_ORDER:r.InvalidOrder,RATE_LIMIT_EXCEEDED:r.RateLimitExceeded,MARKET_UNAVAILABLE:r.ExchangeNotAvailable,INVALID_MARKET:r.BadSymbol,MARKET_CLOSED:r.BadSymbol,MARKET_NOT_FOUND:r.BadSymbol,INVALID_CURRENCY:r.BadRequest,TOO_MANY_OPEN_ORDERS:r.DDoSProtection,DUPLICATE_ADDRESS:r.InvalidAddress,invalid_grant:r.AuthenticationError}},requiredCredentials:{apiKey:!0,secret:!0},precisionMode:n.sh,options:{createMarketBuyOrderRequiresPrice:!0,timeInForce:{limit:"gtc",market:"ioc"},networks:{BEP20:"BSC",ERC20:"ETH",TRC20:"TRON"},networksById:{BSC:"BEP20",ETH:"ERC20",TRON:"TRC20"}},commonCurrencies:{AUTO:"Cube",AZU:"Azultec",BCC:"BCC",BDP:"BidiPass",BIRD:"Birdchain",BTCBEAR:"BEAR",BTCBULL:"BULL",CBC:"CryptoBharatCoin",CHE:"Chellit",CLR:"Color Platform",CTK:"Cryptyk",CTT:"Castweet",DIP:"Dipper",DKT:"DAKOTA",EGC:"EcoG9coin",EPS:"Epanus",FX:"Fanzy",GDT:"Gorilla Diamond",GM:"GM Holding",GOGOL:"GOL",GOL:"Goldofir",GRB:"Global Reward Bank",HBC:"Hybrid Bank Cash",HUSL:"The Hustle App",LAND:"Landbox",LBK:"Legal Block",ORC:"Oracle System",PXP:"PIXSHOP COIN",PYE:"CreamPYE",ROOK:"Reckoon",SOC:"Soda Coin",SST:"SocialSwap",TCT:"Top Coin Token",TOR:"Torex",TPAY:"Tetra Pay",UNI:"UNICORN Token",UNISWAP:"UNI"}})}async fetchMarkets(e={}){const t=await this.publicGetMarket(e),i=this.safeValue(t,"data",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"id"),n=this.safeString(t,"base_currency_id"),o=this.safeString(t,"quote_currency_id"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=this.safeValue(t,"closed",!1),u=this.safeString(t,"taker_fee_rate"),l=a.O.stringDiv(u,"100"),p=this.safeString(t,"maker_fee_rate"),f=a.O.stringDiv(p,"100");s.push({id:r,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!h,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(l),maker:this.parseNumber(f),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"quantity_precision"))),price:this.safeNumber(t,"price_increment"),cost:this.parseNumber(this.parsePrecision(this.safeString(t,"cost_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_quantity"),max:this.safeNumber(t,"max_quantity")},price:{min:this.safeNumber(t,"min_price"),max:this.safeNumber(t,"max_price")},cost:{min:this.safeNumber(t,"min_cost"),max:this.safeNumber(t,"max_cost")}},info:t})}return s}async fetchCurrencies(e={}){const t=await this.publicGetCurrencyWithPlatform(e),i=this.safeValue(t,"data",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"id"),a=this.safeCurrencyCode(r),n=this.safeValue(t,"display_name"),o=this.safeString(n,"en-us"),d=this.safeValue(t,"platform",[]),c=this.sortBy(d,"priority"),h=this.safeValue(c,0,{}),u=!this.safeValue(h,"deposit_suspended"),l=!this.safeValue(h,"withdrawal_suspended"),p=u&&l,f=this.safeValue(h,"withdrawal_fee",{}),m=[];for(let e=0;e<f.length;e++){const t=f[e],i=this.safeNumber(t,"amount"),s=this.safeInteger(t,"priority");void 0!==i&&void 0!==s&&m.push(t)}const v=this.sortBy(m,"priority"),g=this.safeValue(v,0,{}),y=this.safeNumber(g,"amount");s[a]={id:r,code:a,info:t,name:o,active:p,deposit:u,withdraw:l,fee:y,precision:this.parseNumber(this.parsePrecision(this.safeString(h,"precision"))),limits:{amount:{min:void 0,max:void 0},deposit:{min:this.safeNumber(h,"min_deposit_amount"),max:void 0},withdraw:{min:this.safeNumber(h,"min_withdrawal_amount"),max:void 0}}}}return s}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeString(s,"currency_id"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"total"),n.free=this.safeString(s,"available"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={market_id:s.id},a=await this.publicGetOrderBook(this.extend(r,i)),n=this.safeValue(a,"data",[]),o=this.groupBy(n,"side");return this.parseOrderBook(o,s.symbol,void 0,"buy","sell","price","quantity")}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i={};if(void 0!==e){const t=this.marketIds(e);i.market_ids=t.join(",")}const s=await this.publicGetTicker(this.extend(i,t)),r=this.safeValue(s,"data",[]);return this.parseTickers(r,e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={market_ids:i.id},a=await this.publicGetTicker(this.extend(s,t)),n=this.safeValue(a,"data",[]),o=this.safeValue(n,0);if(void 0===o)throw new r.BadResponse(this.id+" fetchTicker() returned an empty response");return this.parseTicker(o,i)}parseTicker(e,t=undefined){const i=this.parse8601(this.safeString(e,"time")),s=this.safeString(e,"market_id"),r=this.safeSymbol(s,t,"-"),a=this.safeString(e,"last"),n=this.safeString(e,"change"),o=this.safeString(e,"base_volume"),d=this.safeString(e,"quote_volume");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:n,percentage:void 0,average:void 0,baseVolume:o,quoteVolume:d,info:e},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={limit:100,start_time:this.iso8601(0),end_time:this.iso8601(this.milliseconds())};void 0!==e&&(r=this.market(e),a.market_id=r.id),void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==i&&(a.limit=i);const n=await this.privateGetTradeHistory(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market_id:r.id,limit:100,start_time:"1970-01-01T00:00:00.000Z",end_time:this.iso8601(this.milliseconds())};void 0!==t&&(a.start_time=this.iso8601(t)),void 0!==i&&(a.limit=i);const n=await this.publicGetTrade(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}parseTrade(e,t=undefined){const i=this.parse8601(this.safeString(e,"time")),s=this.safeString(e,"id");let r;if(void 0!==s){const e=s.split(":");r=this.safeString(e,0)}r=this.safeString(e,"market_id",r);const a=this.safeSymbol(r,t,"-"),n=this.safeString(e,"side"),o=this.safeString(e,"price"),d=this.safeString(e,"quantity"),c=this.safeString(e,"order_id"),h=this.safeString(e,"fee_amount");let u;if(void 0!==h){const t=this.safeString(e,"fee_currency_id");u={cost:h,currency:this.safeCurrencyCode(t)}}return this.safeTrade({id:s,info:e,timestamp:i,datetime:this.iso8601(i),symbol:a,order:c,type:void 0,side:n,takerOrMaker:void 0,price:o,amount:d,cost:void 0,fee:u},t)}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.parse8601(this.safeString(t,"data"))}normalizeOHLCVTimestamp(e,t,i=!1){const s=this.parseTimeframe(t);if("1M"===t){const t=this.iso8601(e).split("-"),s=this.safeString(t,0),r=this.safeInteger(t,1);let a;return i&&(a=this.sum(r,1).toString()),r<10&&(a="0"+r.toString()),s+"-"+a+"-01T00:00:00.000Z"}if("1w"===t){const t=259200,r=(e=this.parseToInt(e/1e3))-t,a=Math.floor(r/s);let n=this.sum(t,a*s);return i&&(n=this.sum(n,s)),this.iso8601(1e3*n)}return e=this.parseToInt(e/1e3),e=s*this.parseToInt(e/s),i&&(e=this.sum(e,s)),this.iso8601(1e3*e)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(this.timeframes,t,t);s=void 0===s?100:s;let o=this.sum(s,1);o=Math.min(1e3,o);const d={market_ids:a.id,interval:n,sort:"asc",limit:o},c=this.milliseconds(),h=this.parseTimeframe(t);let u=i,l=c;void 0===i?(void 0===s&&(s=o),u=c-s*h*1e3):l=void 0===s?c:this.sum(i,this.sum(s,1)*h*1e3);const p=this.normalizeOHLCVTimestamp(u,t),f=this.normalizeOHLCVTimestamp(l,t,!0);d.start_time=p,d.end_time=f;const m=await this.publicGetCandle(this.extend(d,r)),v=this.safeValue(m,"data",[]);return this.parseOHLCVs(v,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,"start_time")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"base_volume")]}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets(),t=this.parse8601(t);const r={};let a;void 0!==e&&(a=this.market(e),r.market_id=a.id);const n=await this.privateGetOpenOrder(this.extend(r,s)),o=this.safeValue(n,"data");return this.parseOrders(o,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={start_time:this.iso8601(0),end_time:this.iso8601(this.milliseconds()),limit:100};let a;void 0!==e&&(a=this.market(e),r.market_id=a.id),t&&(r.start_time=this.iso8601(t)),i&&(r.limit=i);const n=await this.privateGetOrderHistory(this.extend(r,s)),o=this.safeValue(n,"data");return this.parseOrders(o,a,t,i)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={market_id:s.id},n=this.safeString2(i,"clientOrderId","client_order_id");void 0!==n?a.client_order_id=n:a.order_id=e;const o=this.omit(i,["clientOrderId","client_order_id"]),d=await this.privateGetOrder(this.extend(a,o)),c=this.safeValue(d,"data",[]),h=this.safeValue(c,0);return this.parseOrder(h,s)}parseOrderStatus(e){return this.safeString({open:"open",cancelled:"canceled",filled:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.parseOrderStatus(this.safeString(e,"status")),s=this.safeString(e,"id"),r=this.safeString(e,"type"),n=this.safeString(e,"side"),o=this.safeString(e,"market_id"),d=this.safeSymbol(o,t,"-"),c=this.parse8601(this.safeString(e,"time"));let h=this.safeString(e,"limit_price");const u=this.safeString(e,"filled_quantity");let l=this.safeString(e,"open_quantity");const p=this.safeString(e,"cancelled_quantity");void 0!==p&&(l=a.O.stringAdd(l,p));const f=this.safeString(e,"quantity",a.O.stringAdd(u,l)),m=this.safeString2(e,"filled_cost","cost");"market"===r&&(h=void 0);const v=this.safeString(e,"client_order_id"),g=this.safeStringUpper(e,"time_in_force");return this.safeOrder({id:s,info:e,clientOrderId:v,timestamp:c,datetime:this.iso8601(c),lastTradeTimestamp:void 0,symbol:d,type:r,timeInForce:g,side:n,status:i,price:h,stopPrice:void 0,triggerPrice:void 0,amount:f,filled:u,remaining:l,average:void 0,cost:m,fee:void 0,trades:void 0},t)}costToPrecision(e,t){return this.decimalToPrecision(t,n.tk,this.markets[e].precision.cost,this.precisionMode)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=this.safeValue(this.options,"timeInForce"),c=this.safeValue(d,t),h=this.safeString2(n,"timeInForce","time_in_force",c),u={market_id:o.id,type:t,side:i,time_in_force:h},l=this.safeString2(n,"clientOrderId","client_order_id");let p;if(void 0!==l&&(u.client_order_id=l),"limit"===t)u.limit_price=this.priceToPrecision(e,a),u.quantity=this.amountToPrecision(e,s);else if("market"===t)if("buy"===i){let t=this.safeNumber(n,"cost");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0)){if(void 0!==a)void 0===t&&(t=s*a);else if(void 0===t)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false and supply the total cost value in the 'amount' argument or in the 'cost' extra parameter (the exchange-specific behaviour)")}else t=void 0===t?s:t;p=this.costToPrecision(e,t),u.cost=p}else u.quantity=this.amountToPrecision(e,s);const f=this.omit(n,["timeInForce","time_in_force","clientOrderId","client_order_id"]),m=await this.privatePostNewOrder(this.extend(u,f)),v=this.safeValue(m,"data"),g=this.parseOrder(v,o);return"market"===t&&"buy"===i&&(g.amount=void 0,g.cost=this.parseNumber(p),g.remaining=void 0),g}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s={market_id:this.market(t).id,order_id:e},a=await this.privatePostCancelOrder(this.extend(s,i)),n=this.safeValue(a,"data");return this.parseOrder(n)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"address"),s=this.safeString(e,"destination_tag"),r=this.safeString(e,"currency_id"),a=(t=this.safeCurrency(r,t)).code,n=this.safeString(e,"platform_id");return this.checkAddress(i),{currency:a,address:i,tag:s,network:n,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency_id:i.id},a=this.safeValue(this.options,"networks",{});let n=this.safeStringUpper(t,"network");n=this.safeString(a,n,n),void 0!==n&&(s.platform_id=n,t=this.omit(t,"platform_id"));const o=await this.privateGetDepositAddress(this.extend(s,t)),d=this.safeValue(o,"data",[]),c=this.safeValue(d,0);if(void 0===c)throw new r.InvalidAddress(this.id+" fetchDepositAddress() returned an empty response");return this.parseDepositAddress(c,i)}async fetchDepositAddresses(e=undefined,t={}){await this.loadMarkets();const i={};if(e){const t=[];for(let i=0;i<e.length;i++){const s=this.currency(e[i]);t.push(s.id)}i.currency_id=e.join(",")}const s=await this.privateGetDepositAddress(this.extend(i,t)),r=this.safeValue(s,"data",[]);return this.parseDepositAddresses(r,e)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e);void 0===s&&(s="");const n={currency_id:a.id,address:i,destination_tag:s,amount:this.numberToString(t)},o=this.safeValue(this.options,"networks",{});let d=this.safeStringUpper(r,"network");d=this.safeString(o,d,d),void 0!==d&&(n.platform_id=d,r=this.omit(r,"network"));const c=await this.privatePostWithdrawal(this.extend(n,r)),h=this.safeValue(c,"data");return this.parseTransaction(h,a)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeNumber(e,"amount"),r=this.safeString(e,"address"),a=this.safeString(e,"destination_tag"),n=this.safeString(e,"hash"),o=this.parse8601(this.safeString(e,"time")),d=this.safeString(e,"type"),c=this.safeString(e,"currency_id"),h=this.safeCurrencyCode(c),u=this.parseTransactionStatus(this.safeString(e,"status")),l=this.safeNumber(e,"fee");let p;return void 0!==l&&0!==l&&(p={currency:h,cost:l}),{id:i,currency:h,amount:s,network:void 0,addressFrom:void 0,address:r,addressTo:r,tagFrom:void 0,tag:a,tagTo:a,status:u,type:d,txid:n,timestamp:o,datetime:this.iso8601(o),updated:void 0,fee:p,info:e}}parseTransactionStatus(e){return this.safeString({requested:"pending",pending:"pending",confirming:"pending",confirmed:"pending",applying:"pending",done:"ok",cancelled:"canceled",cancelling:"canceled"},e,e)}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetCurrencyWithPlatform(t),s=this.safeValue(i,"data");return this.parseDepositWithdrawFees(s,e,"id")}parseDepositWithdrawFee(e,t=undefined){const i=this.depositWithdrawFee({}),s=this.safeValue(e,"platform",[]),r={fee:void 0,percentage:void 0};for(let e=0;e<s.length;e++){const a=s[e],n=this.safeString(a,"id"),o=this.networkIdToCode(n,t.code),d=this.safeValue(a,"withdrawal_fee",{}),c=this.safeNumber(d[0],"amount");if(d.length>0){const t={fee:c,percentage:void 0===c&&void 0};0===e&&(i.withdraw=t),i.networks[o]={withdraw:t,deposit:r}}}return i.info=e,i}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},a=undefined,n=undefined){let o=this.urls.api[t]+"/";const d=this.omit(s,this.extractParams(e));if("accounts"===t){this.checkRequiredCredentials(),o+=this.implodeParams(e,s);const t=this.apiKey+":"+this.secret;a={Authorization:"Basic "+this.stringToBase64(t),"Content-Type":"application/json"},Object.keys(d).length&&(n=this.json(d))}else if(o+=this.version+"/","public"===t)o+=this.implodeParams(e,s),Object.keys(d).length&&(o+="?"+this.urlencode(d));else if("private"===t){const t=this.milliseconds();this.checkRequiredCredentials();const c=this.safeInteger(this.options,"expires");if(void 0===c||c<t)throw new r.AuthenticationError(this.id+" access token expired, call signIn() method");a={Authorization:"Bearer "+this.safeString(this.options,"accessToken")},o+=this.implodeParams(e,s),"GET"===i?Object.keys(d).length&&(o+="?"+this.urlencode(d)):Object.keys(d).length&&(n=this.json(d),a["Content-Type"]="application/json")}return{url:o,method:i,body:n,headers:a}}async signIn(e={}){this.checkRequiredCredentials();const t=await this.accountsPostToken(this.extend({grant_type:"client_credentials"},e)),i=this.safeInteger(t,"expires_in"),s=this.safeString(t,"access_token");return this.options.accessToken=s,this.options.expires=this.sum(this.milliseconds(),1e3*i),t}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"errorCode"in o){const e=this.safeString(o,"errorCode"),t=this.safeString(o,"message");if(void 0!==e){const i=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,t,i),this.throwBroadlyMatchedException(this.exceptions.exact,e,i),new r.ExchangeError(i)}}}}},1320:(e,t,i)=>{i.d(t,{Z:()=>n});var s=i(9433),r=i(6689),a=i(9292);class n extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"ripio",name:"Ripio",countries:["AR","BR"],rateLimit:50,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/94507548-a83d6a80-0218-11eb-9998-28b9cec54165.jpg",api:{public:"https://api.exchange.ripio.com/api",private:"https://api.exchange.ripio.com/api"},www:"https://exchange.ripio.com",doc:["https://exchange.ripio.com/en/api/"],fees:"https://exchange.ripio.com/en/fee"},api:{public:{get:["rate/all/","rate/{pair}/","orderbook/{pair}/","tradehistory/{pair}/","pair/","currency/","orderbook/{pair}/depth/"]},private:{get:["balances/exchange_balances/","order/{pair}/{order_id}/","order/{pair}/","trade/{pair}/"],post:["order/{pair}/","order/{pair}/{order_id}/cancel/"]}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0"),maker:this.parseNumber("0.0")}},precisionMode:a.sh,requiredCredentials:{apiKey:!0,secret:!1},exceptions:{exact:{},broad:{"Authentication credentials were not provided":r.AuthenticationError,"Disabled pair":r.BadSymbol,"Invalid order type":r.InvalidOrder,"Your balance is not enough":r.InsufficientFunds,"Order couldn't be created":r.ExchangeError,"not found":r.OrderNotFound,"Invalid pair":r.BadSymbol,"amount must be a number":r.BadRequest,"Total must be at least":r.InvalidOrder,"Account not found":r.BadRequest,"Wrong password provided":r.AuthenticationError,"User tokens limit":r.DDoSProtection,"Something unexpected ocurred":r.ExchangeError,account_balance:r.BadRequest}}})}async fetchMarkets(e={}){const t=await this.publicGetPair(e),i=[],s=this.safeValue(t,"results",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"base"),a=this.safeString(t,"quote"),n=this.safeString(t,"symbol"),o=this.safeCurrencyCode(r),d=this.safeCurrencyCode(a),c=this.safeValue(t,"fees",[]),h=this.safeValue(c,0,{});i.push({id:n,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"enabled",!0),contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(h,"taker_fee",0),maker:this.safeNumber(h,"maker_fee",0),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"min_amount"),price:this.safeNumber(t,"price_tick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_amount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(t,"min_value"),max:void 0}},info:t})}return i}async fetchCurrencies(e={}){const t=await this.publicGetCurrency(e),i=this.safeValue(t,"results",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"currency"),a=this.safeCurrencyCode(r),n=this.safeString(t,"name"),o=this.safeValue(t,"enabled",!0);s[a]={id:r,code:a,name:n,info:t,active:o,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.parseNumber(this.parsePrecision(this.safeString(t,"decimal_places"))),limits:{amount:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}}}}return s}parseTicker(e,t=undefined){const i=this.parse8601(this.safeString(e,"created_at")),s=this.safeString(e,"pair"),r=(t=this.safeMarket(s,t,"_")).symbol,a=this.safeString(e,"last_price"),n=this.safeString(e,"avg");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:this.safeString(e,"bid_volume"),ask:this.safeString(e,"ask"),askVolume:this.safeString(e,"ask_volume"),vwap:void 0,open:void 0,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:n,baseVolume:void 0,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetRatePair(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.publicGetRateAll(t),s={};for(let e=0;e<i.length;e++){const t=this.parseTicker(i[e]);s[t.symbol]=t}return this.filterByArray(s,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id},a=await this.publicGetOrderbookPair(this.extend(r,i)),n=this.parseOrderBook(a,s.symbol,void 0,"buy","sell","price","amount");return n.nonce=this.safeInteger(a,"updated_id"),n}parseTrade(e,t=undefined){const i=this.safeString(e,"id");let s=this.safeInteger(e,"timestamp");s=this.safeTimestamp(e,"created_at",s);let r=this.safeString(e,"side");const a=this.safeString(e,"taker_side")===r?"taker":"maker";void 0!==r&&(r=r.toLowerCase());const n=this.safeString2(e,"price","match_price"),o=this.safeString2(e,"amount","exchanged"),d=this.safeString(e,"pair");t=this.safeMarket(d,t);const c=this.safeString(e,a+"_fee"),h=this.safeString(e,a);let u;return void 0!==c&&(u={cost:c,currency:"buy"===r?t.base:t.quote}),this.safeTrade({id:i,order:h,timestamp:s,datetime:this.iso8601(s),symbol:t.symbol,type:void 0,side:r,price:n,amount:o,cost:void 0,takerOrMaker:a,fee:u,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id},n=await this.publicGetTradehistoryPair(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetPair(e),i=this.safeValue(t,"results",[]),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),a=this.safeSymbol(r,void 0,"_"),n=this.safeValue(t,"fees",[]),o=this.safeValue(n,0,{});s[a]={info:t,symbol:a,maker:this.safeNumber(o,"maker_fee"),taker:this.safeNumber(o,"taker_fee"),tierBased:!1}}return s}parseBalance(e){const t={info:e};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"symbol"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"available"),n.used=this.safeString(s,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetBalancesExchangeBalances(e);return this.parseBalance(t)}async createOrder(e,t,i,s,r=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=t.toUpperCase(),d=i.toUpperCase(),c={pair:n.id,order_type:o,side:d,amount:this.amountToPrecision(e,s)};"LIMIT"===o&&(c.limit_price=this.priceToPrecision(e,r));const h=await this.privatePostOrderPair(this.extend(c,a));return this.parseOrder(h,n)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={pair:s.id,order_id:e},n=await this.privatePostOrderPairOrderIdCancel(this.extend(a,i));return this.parseOrder(n,s)}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a={pair:s.id,order_id:e},n=await this.privateGetOrderPairOrderId(this.extend(a,i));return this.parseOrder(n,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id};void 0!==i&&(n.offset=i);const o=await this.privateGetOrderPair(this.extend(n,s)),d=this.safeValue(o,"results",{}),c=this.safeValue(d,"data",[]);return this.parseOrders(c,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"OPEN,PART"},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({status:"CLOS,CANC,COMP"},s))}parseOrderStatus(e){return this.safeString({OPEN:"open",PART:"open",CLOS:"canceled",CANC:"canceled",COMP:"closed"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"order_id"),s=this.safeString(e,"amount"),r=this.safeString(e,"notional"),a=this.safeStringLower(e,"order_type"),n="market"===a?"fill_price":"limit_price",o=this.safeString(e,n),d=this.safeStringLower(e,"side"),c=this.parseOrderStatus(this.safeString(e,"status")),h=this.safeTimestamp(e,"created_at"),u=this.safeString(e,"fill_price"),l=this.safeString(e,"filled"),p=this.safeValue(e,"fills"),f=this.safeString(e,"pair");return this.safeOrder({info:e,id:i,clientOrderId:void 0,timestamp:h,datetime:this.iso8601(h),lastTradeTimestamp:void 0,symbol:this.safeSymbol(f,t,"_"),type:a,timeInForce:void 0,postOnly:void 0,side:d,price:o,stopPrice:this.safeString(e,"stop_price"),triggerPrice:this.safeString(e,"stop_price"),amount:s,cost:r,average:u,filled:l,remaining:void 0,status:c,fee:void 0,trades:p},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id};void 0!==i&&(n.limit=i);const o=await this.privateGetTradePair(this.extend(n,s)),d=this.safeValue(o,"results",{}),c=this.safeValue(d,"data",[]);return this.parseTrades(c,a,t,i)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n="/"+this.version+"/"+this.implodeParams(e,s);let o=this.urls.api[t]+n;const d=this.omit(s,this.extractParams(e));return"public"===t?Object.keys(d).length&&(o+="?"+this.urlencode(d)):"private"===t&&(this.checkRequiredCredentials(),"POST"===i?a=this.json(d):Object.keys(d).length&&(o+="?"+this.urlencode(d)),r={"Content-Type":"application/json",Authorization:"Bearer "+this.apiKey}),{url:o,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"detail");if(void 0!==h){const e=this.id+" "+n;this.throwBroadlyMatchedException(this.exceptions.broad,h,e)}const u=this.safeValue(o,"errors");if(void 0!==u){const e=this.id+" "+n,t=Object.keys(u);for(let i=0;i<t.length;i++){const s=t[i],r=this.safeValue(u,s,[]),a=this.safeString(r,0);this.throwBroadlyMatchedException(this.exceptions.broad,a,e)}throw new r.ExchangeError(e)}}}},9026:(e,t,i)=>{i.d(t,{X:()=>n});var s=i(6007),r=i(9093);const a="undefined"!=typeof process?process.env?.npm_package_version:void 0;class n{constructor(e={}){e=e||{},this.default_key_size=e.default_key_size?parseInt(e.default_key_size,10):1024,this.default_public_exponent=e.default_public_exponent||"010001",this.log=e.log||!1,this.key=null}setKey(e){this.log&&this.key&&console.warn("A key was already set, overriding existing."),this.key=new r.Q(e)}setPrivateKey(e){this.setKey(e)}setPublicKey(e){this.setKey(e)}decrypt(e){try{return this.getKey().decrypt((0,s.GV)(e))}catch(e){return!1}}encrypt(e){try{return(0,s.t9)(this.getKey().encrypt(e))}catch(e){return!1}}sign(e,t,i){try{return(0,s.t9)(this.getKey().sign(e,t,i))}catch(e){return!1}}verify(e,t,i){try{return this.getKey().verify(e,(0,s.GV)(t),i)}catch(e){return!1}}getKey(e){if(!this.key){if(this.key=new r.Q,e&&"[object Function]"==={}.toString.call(e))return void this.key.generateAsync(this.default_key_size,this.default_public_exponent,e);this.key.generate(this.default_key_size,this.default_public_exponent)}return this.key}getPrivateKey(){return this.getKey().getPrivateKey()}getPrivateKeyB64(){return this.getKey().getPrivateBaseKeyB64()}getPublicKey(){return this.getKey().getPublicKey()}getPublicKeyB64(){return this.getKey().getPublicBaseKeyB64()}}n.version=a},9093:(e,t,i)=>{i.d(t,{Q:()=>h});var s=i(6007),r=i(3377),a=i(9285),n=i(1728),o=i(4493),d=i(2833),c=i(6294);class h extends o.z{constructor(e){super(),e&&("string"==typeof e?this.parseKey(e):(h.hasPrivateKeyProperty(e)||h.hasPublicKeyProperty(e))&&this.parsePropertiesFrom(e))}parseKey(e){try{let i=0,s=0;const o=/^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/.test(e)?r.p.decode(e):a.D.unarmor(e);let c=n.lj.decode(o);if(3===c.sub.length&&(c=c.sub[2].sub[0]),9===c.sub.length){i=c.sub[1].getHexStringValue(),this.n=(0,d.BF)(i,16),s=c.sub[2].getHexStringValue(),this.e=parseInt(s,16);const e=c.sub[3].getHexStringValue();this.d=(0,d.BF)(e,16);const t=c.sub[4].getHexStringValue();this.p=(0,d.BF)(t,16);const r=c.sub[5].getHexStringValue();this.q=(0,d.BF)(r,16);const a=c.sub[6].getHexStringValue();this.dmp1=(0,d.BF)(a,16);const n=c.sub[7].getHexStringValue();this.dmq1=(0,d.BF)(n,16);const o=c.sub[8].getHexStringValue();this.coeff=(0,d.BF)(o,16)}else{if(2!==c.sub.length)return!1;if(c.sub[0].sub){var t=c.sub[1].sub[0];i=t.sub[0].getHexStringValue(),this.n=(0,d.BF)(i,16),s=t.sub[1].getHexStringValue(),this.e=parseInt(s,16)}else i=c.sub[0].getHexStringValue(),this.n=(0,d.BF)(i,16),s=c.sub[1].getHexStringValue(),this.e=parseInt(s,16)}return!0}catch(e){return!1}}getPrivateBaseKey(){const e={array:[new c.f.asn1.DERInteger({int:0}),new c.f.asn1.DERInteger({bigint:this.n}),new c.f.asn1.DERInteger({int:this.e}),new c.f.asn1.DERInteger({bigint:this.d}),new c.f.asn1.DERInteger({bigint:this.p}),new c.f.asn1.DERInteger({bigint:this.q}),new c.f.asn1.DERInteger({bigint:this.dmp1}),new c.f.asn1.DERInteger({bigint:this.dmq1}),new c.f.asn1.DERInteger({bigint:this.coeff})]};return new c.f.asn1.DERSequence(e).getEncodedHex()}getPrivateBaseKeyB64(){return(0,s.t9)(this.getPrivateBaseKey())}getPublicBaseKey(){const e=new c.f.asn1.DERSequence({array:[new c.f.asn1.DERObjectIdentifier({oid:"1.2.840.113549.1.1.1"}),new c.f.asn1.DERNull]}),t=new c.f.asn1.DERSequence({array:[new c.f.asn1.DERInteger({bigint:this.n}),new c.f.asn1.DERInteger({int:this.e})]}),i=new c.f.asn1.DERBitString({hex:"00"+t.getEncodedHex()});return new c.f.asn1.DERSequence({array:[e,i]}).getEncodedHex()}getPublicBaseKeyB64(){return(0,s.t9)(this.getPublicBaseKey())}static wordwrap(e,t){if(!e)return e;const i="(.{1,"+(t=t||64)+"})( +|$\n?)|(.{1,"+t+"})";return e.match(RegExp(i,"g")).join("\n")}getPrivateKey(){let e="-----BEGIN RSA PRIVATE KEY-----\n";return e+=h.wordwrap(this.getPrivateBaseKeyB64())+"\n",e+="-----END RSA PRIVATE KEY-----",e}getPublicKey(){let e="-----BEGIN PUBLIC KEY-----\n";return e+=h.wordwrap(this.getPublicBaseKeyB64())+"\n",e+="-----END PUBLIC KEY-----",e}static hasPublicKeyProperty(e){return(e=e||{}).hasOwnProperty("n")&&e.hasOwnProperty("e")}static hasPrivateKeyProperty(e){return(e=e||{}).hasOwnProperty("n")&&e.hasOwnProperty("e")&&e.hasOwnProperty("d")&&e.hasOwnProperty("p")&&e.hasOwnProperty("q")&&e.hasOwnProperty("dmp1")&&e.hasOwnProperty("dmq1")&&e.hasOwnProperty("coeff")}parsePropertiesFrom(e){this.n=e.n,this.e=e.e,e.hasOwnProperty("d")&&(this.d=e.d,this.p=e.p,this.q=e.q,this.dmp1=e.dmp1,this.dmq1=e.dmq1,this.coeff=e.coeff)}}},1728:(e,t,i)=>{i.d(t,{lj:()=>c});var s=i(4638);const r="…",a=/^(\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/,n=/^(\d\d\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;function o(e,t){return e.length>t&&(e=e.substring(0,t)+r),e}class d{constructor(e,t){this.hexDigits="0123456789ABCDEF",e instanceof d?(this.enc=e.enc,this.pos=e.pos):(this.enc=e,this.pos=t)}get(e){if(void 0===e&&(e=this.pos++),e>=this.enc.length)throw new Error(`Requesting byte offset ${e} on a stream of length ${this.enc.length}`);return"string"==typeof this.enc?this.enc.charCodeAt(e):this.enc[e]}hexByte(e){return this.hexDigits.charAt(e>>4&15)+this.hexDigits.charAt(15&e)}hexDump(e,t,i){let s="";for(let r=e;r<t;++r)if(s+=this.hexByte(this.get(r)),!0!==i)switch(15&r){case 7:s+="  ";break;case 15:s+="\n";break;default:s+=" "}return s}isASCII(e,t){for(let i=e;i<t;++i){const e=this.get(i);if(e<32||e>176)return!1}return!0}parseStringISO(e,t){let i="";for(let s=e;s<t;++s)i+=String.fromCharCode(this.get(s));return i}parseStringUTF(e,t){let i="";for(let s=e;s<t;){const e=this.get(s++);i+=e<128?String.fromCharCode(e):e>191&&e<224?String.fromCharCode((31&e)<<6|63&this.get(s++)):String.fromCharCode((15&e)<<12|(63&this.get(s++))<<6|63&this.get(s++))}return i}parseStringBMP(e,t){let i,s,r="";for(let a=e;a<t;)i=this.get(a++),s=this.get(a++),r+=String.fromCharCode(i<<8|s);return r}parseTime(e,t,i){let s=this.parseStringISO(e,t);const r=(i?a:n).exec(s);return r?(i&&(r[1]=+r[1],r[1]+=+r[1]<70?2e3:1900),s=r[1]+"-"+r[2]+"-"+r[3]+" "+r[4],r[5]&&(s+=":"+r[5],r[6]&&(s+=":"+r[6],r[7]&&(s+="."+r[7]))),r[8]&&(s+=" UTC","Z"!=r[8]&&(s+=r[8],r[9]&&(s+=":"+r[9]))),s):"Unrecognized time: "+s}parseInteger(e,t){let i=this.get(e);const r=i>127,a=r?255:0;let n,o="";for(;i==a&&++e<t;)i=this.get(e);if(n=t-e,0===n)return r?-1:0;if(n>4){for(o=i,n<<=3;0==(128&(+o^a));)o=+o<<1,--n;o="("+n+" bit)\n"}r&&(i-=256);const d=new s.P(i);for(let i=e+1;i<t;++i)d.mulAdd(256,this.get(i));return o+d.toString()}parseBitString(e,t,i){const s=this.get(e),r="("+((t-e-1<<3)-s)+" bit)\n";let a="";for(let n=e+1;n<t;++n){const e=this.get(n),d=n==t-1?s:0;for(let t=7;t>=d;--t)a+=e>>t&1?"1":"0";if(a.length>i)return r+o(a,i)}return r+a}parseOctetString(e,t,i){if(this.isASCII(e,t))return o(this.parseStringISO(e,t),i);const s=t-e;let a="("+s+" byte)\n";s>(i/=2)&&(t=e+i);for(let i=e;i<t;++i)a+=this.hexByte(this.get(i));return s>i&&(a+=r),a}parseOID(e,t,i){let r="",a=new s.P,n=0;for(let d=e;d<t;++d){const e=this.get(d);if(a.mulAdd(128,127&e),n+=7,!(128&e)){if(""===r)if(a=a.simplify(),a instanceof s.P)a.sub(80),r="2."+a.toString();else{const e=a<80?a<40?0:1:2;r=e+"."+(a-40*e)}else r+="."+a.toString();if(r.length>i)return o(r,i);a=new s.P,n=0}}return n>0&&(r+=".incomplete"),r}}class c{constructor(e,t,i,s,r){if(!(s instanceof h))throw new Error("Invalid tag value.");this.stream=e,this.header=t,this.length=i,this.tag=s,this.sub=r}typeName(){switch(this.tag.tagClass){case 0:switch(this.tag.tagNumber){case 0:return"EOC";case 1:return"BOOLEAN";case 2:return"INTEGER";case 3:return"BIT_STRING";case 4:return"OCTET_STRING";case 5:return"NULL";case 6:return"OBJECT_IDENTIFIER";case 7:return"ObjectDescriptor";case 8:return"EXTERNAL";case 9:return"REAL";case 10:return"ENUMERATED";case 11:return"EMBEDDED_PDV";case 12:return"UTF8String";case 16:return"SEQUENCE";case 17:return"SET";case 18:return"NumericString";case 19:return"PrintableString";case 20:return"TeletexString";case 21:return"VideotexString";case 22:return"IA5String";case 23:return"UTCTime";case 24:return"GeneralizedTime";case 25:return"GraphicString";case 26:return"VisibleString";case 27:return"GeneralString";case 28:return"UniversalString";case 30:return"BMPString"}return"Universal_"+this.tag.tagNumber.toString();case 1:return"Application_"+this.tag.tagNumber.toString();case 2:return"["+this.tag.tagNumber.toString()+"]";case 3:return"Private_"+this.tag.tagNumber.toString()}}content(e){if(void 0===this.tag)return null;void 0===e&&(e=1/0);const t=this.posContent(),i=Math.abs(this.length);if(!this.tag.isUniversal())return null!==this.sub?"("+this.sub.length+" elem)":this.stream.parseOctetString(t,t+i,e);switch(this.tag.tagNumber){case 1:return 0===this.stream.get(t)?"false":"true";case 2:return this.stream.parseInteger(t,t+i);case 3:return this.sub?"("+this.sub.length+" elem)":this.stream.parseBitString(t,t+i,e);case 4:return this.sub?"("+this.sub.length+" elem)":this.stream.parseOctetString(t,t+i,e);case 6:return this.stream.parseOID(t,t+i,e);case 16:case 17:return null!==this.sub?"("+this.sub.length+" elem)":"(no elem)";case 12:return o(this.stream.parseStringUTF(t,t+i),e);case 18:case 19:case 20:case 21:case 22:case 26:return o(this.stream.parseStringISO(t,t+i),e);case 30:return o(this.stream.parseStringBMP(t,t+i),e);case 23:case 24:return this.stream.parseTime(t,t+i,23==this.tag.tagNumber)}return null}toString(){return this.typeName()+"@"+this.stream.pos+"[header:"+this.header+",length:"+this.length+",sub:"+(null===this.sub?"null":this.sub.length)+"]"}toPrettyString(e){void 0===e&&(e="");let t=e+this.typeName()+" @"+this.stream.pos;if(this.length>=0&&(t+="+"),t+=this.length,this.tag.tagConstructed?t+=" (constructed)":!this.tag.isUniversal()||3!=this.tag.tagNumber&&4!=this.tag.tagNumber||null===this.sub||(t+=" (encapsulates)"),t+="\n",null!==this.sub){e+="  ";for(let i=0,s=this.sub.length;i<s;++i)t+=this.sub[i].toPrettyString(e)}return t}posStart(){return this.stream.pos}posContent(){return this.stream.pos+this.header}posEnd(){return this.stream.pos+this.header+Math.abs(this.length)}toHexString(){return this.stream.hexDump(this.posStart(),this.posEnd(),!0)}static decodeLength(e){let t=e.get();const i=127&t;if(i==t)return i;if(i>6)throw new Error("Length over 48 bits not supported at position "+(e.pos-1));if(0===i)return null;t=0;for(let s=0;s<i;++s)t=256*t+e.get();return t}getHexStringValue(){const e=this.toHexString(),t=2*this.header,i=2*this.length;return e.substr(t,i)}static decode(e){let t;t=e instanceof d?e:new d(e,0);const i=new d(t),s=new h(t);let r=c.decodeLength(t);const a=t.pos,n=a-i.pos;let o=null;const u=function(){const e=[];if(null!==r){const i=a+r;for(;t.pos<i;)e[e.length]=c.decode(t);if(t.pos!=i)throw new Error("Content size is not correct for container starting at offset "+a)}else try{for(;;){const i=c.decode(t);if(i.tag.isEOC())break;e[e.length]=i}r=a-t.pos}catch(e){throw new Error("Exception while decoding undefined length content: "+e)}return e};if(s.tagConstructed)o=u();else if(s.isUniversal()&&(3==s.tagNumber||4==s.tagNumber))try{if(3==s.tagNumber&&0!=t.get())throw new Error("BIT STRINGs with unused bits cannot encapsulate.");o=u();for(let e=0;e<o.length;++e)if(o[e].tag.isEOC())throw new Error("EOC is not supposed to be actual content.")}catch(e){o=null}if(null===o){if(null===r)throw new Error("We can't skip over an invalid tag with undefined length at offset "+a);t.pos=a+Math.abs(r)}return new c(i,n,r,s,o)}}class h{constructor(e){let t=e.get();if(this.tagClass=t>>6,this.tagConstructed=0!=(32&t),this.tagNumber=31&t,31==this.tagNumber){const i=new s.P;do{t=e.get(),i.mulAdd(128,127&t)}while(128&t);this.tagNumber=i.simplify()}}isUniversal(){return 0===this.tagClass}isEOC(){return 0===this.tagClass&&0===this.tagNumber}}},9285:(e,t,i)=>{let s;i.d(t,{D:()=>r});const r={decode(e){let t;if(void 0===s){const e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",i="= \f\n\r\t \u2028\u2029";for(s=Object.create(null),t=0;t<64;++t)s[e.charAt(t)]=t;for(s["-"]=62,s._=63,t=0;t<i.length;++t)s[i.charAt(t)]=-1}const i=[];let r=0,a=0;for(t=0;t<e.length;++t){let n=e.charAt(t);if("="==n)break;if(n=s[n],-1!=n){if(void 0===n)throw new Error("Illegal character at offset "+t);r|=n,++a>=4?(i[i.length]=r>>16,i[i.length]=r>>8&255,i[i.length]=255&r,r=0,a=0):r<<=6}}switch(a){case 1:throw new Error("Base64 encoding incomplete: at least 2 bits missing");case 2:i[i.length]=r>>10;break;case 3:i[i.length]=r>>16,i[i.length]=r>>8&255}return i},re:/-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/,unarmor(e){const t=r.re.exec(e);if(t)if(t[1])e=t[1];else{if(!t[2])throw new Error("RegExp out of sync");e=t[2]}return r.decode(e)}}},3377:(e,t,i)=>{let s;i.d(t,{p:()=>r});const r={decode(e){let t;if(void 0===s){let e="0123456789ABCDEF";const i=" \f\n\r\t \u2028\u2029";for(s={},t=0;t<16;++t)s[e.charAt(t)]=t;for(e=e.toLowerCase(),t=10;t<16;++t)s[e.charAt(t)]=t;for(t=0;t<i.length;++t)s[i.charAt(t)]=-1}const i=[];let r=0,a=0;for(t=0;t<e.length;++t){let n=e.charAt(t);if("="==n)break;if(n=s[n],-1!=n){if(void 0===n)throw new Error("Illegal character at offset "+t);r|=n,++a>=2?(i[i.length]=r,r=0,a=0):r<<=4}}if(a)throw new Error("Hex encoding incomplete: 4 bits missing");return i}}},4638:(e,t,i)=>{i.d(t,{P:()=>r});const s=1e13;class r{constructor(e){this.buf=[+e||0]}mulAdd(e,t){const i=this.buf,r=i.length;let a,n;for(a=0;a<r;++a)n=i[a]*e+t,n<s?t=0:n-=(t=0|n/s)*s,i[a]=n;t>0&&(i[a]=t)}sub(e){const t=this.buf,i=t.length;let r,a;for(r=0;r<i;++r)a=t[r]-e,a<0?(a+=s,e=1):e=0,t[r]=a;for(;0===t[t.length-1];)t.pop()}toString(e){if(10!=(e||10))throw new Error("only base 10 is supported");const t=this.buf;let i=t[t.length-1].toString();for(let e=t.length-2;e>=0;--e)i+=(s+t[e]).toString().substring(1);return i}valueOf(){const e=this.buf;let t=0;for(let i=e.length-1;i>=0;--i)t=t*s+e[i];return t}simplify(){const e=this.buf;return 1==e.length?e[0]:this}}},6007:(e,t,i)=>{i.d(t,{GV:()=>a,t9:()=>r});var s=i(9651);function r(e){return s.US.encode(s.YU.decode(e))}function a(e){return s.YU.encode(s.US.decode(e))}},2833:(e,t,i)=>{i.d(t,{BF:()=>p,Jh:()=>o,cR:()=>l});var s=i(9242);let r;const a=[2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997],n=(1<<26)/a[a.length-1];class o{constructor(e,t,i){null!=e&&("number"==typeof e?this.fromNumber(e,t,i):null==t&&"string"!=typeof e?this.fromString(e,256):this.fromString(e,t))}toString(e){if(this.s<0)return"-"+this.negate().toString(e);let t;if(16==e)t=4;else if(8==e)t=3;else if(2==e)t=1;else if(32==e)t=5;else{if(4!=e)return this.toRadix(e);t=2}const i=(1<<t)-1;let r,a=!1,n="",o=this.t,d=this.DB-o*this.DB%t;if(o-- >0)for(d<this.DB&&(r=this[o]>>d)>0&&(a=!0,n=(0,s.vL)(r));o>=0;)d<t?(r=(this[o]&(1<<d)-1)<<t-d,r|=this[--o]>>(d+=this.DB-t)):(r=this[o]>>(d-=t)&i,d<=0&&(d+=this.DB,--o)),r>0&&(a=!0),a&&(n+=(0,s.vL)(r));return a?n:"0"}negate(){const e=l();return o.ZERO.subTo(this,e),e}abs(){return this.s<0?this.negate():this}compareTo(e){let t=this.s-e.s;if(0!=t)return t;let i=this.t;if(t=i-e.t,0!=t)return this.s<0?-t:t;for(;--i>=0;)if(0!=(t=this[i]-e[i]))return t;return 0}bitLength(){return this.t<=0?0:this.DB*(this.t-1)+w(this[this.t-1]^this.s&this.DM)}mod(e){const t=l();return this.abs().divRemTo(e,null,t),this.s<0&&t.compareTo(o.ZERO)>0&&e.subTo(t,t),t}modPowInt(e,t){let i;return i=e<256||t.isEven()?new c(t):new h(t),this.exp(e,i)}clone(){const e=l();return this.copyTo(e),e}intValue(){if(this.s<0){if(1==this.t)return this[0]-this.DV;if(0==this.t)return-1}else{if(1==this.t)return this[0];if(0==this.t)return 0}return(this[1]&(1<<32-this.DB)-1)<<this.DB|this[0]}byteValue(){return 0==this.t?this.s:this[0]<<24>>24}shortValue(){return 0==this.t?this.s:this[0]<<16>>16}signum(){return this.s<0?-1:this.t<=0||1==this.t&&this[0]<=0?0:1}toByteArray(){let e=this.t;const t=[];t[0]=this.s;let i,s=this.DB-e*this.DB%8,r=0;if(e-- >0)for(s<this.DB&&(i=this[e]>>s)!=(this.s&this.DM)>>s&&(t[r++]=i|this.s<<this.DB-s);e>=0;)s<8?(i=(this[e]&(1<<s)-1)<<8-s,i|=this[--e]>>(s+=this.DB-8)):(i=this[e]>>(s-=8)&255,s<=0&&(s+=this.DB,--e)),0!=(128&i)&&(i|=-256),0==r&&(128&this.s)!=(128&i)&&++r,(r>0||i!=this.s)&&(t[r++]=i);return t}equals(e){return 0==this.compareTo(e)}min(e){return this.compareTo(e)<0?this:e}max(e){return this.compareTo(e)>0?this:e}and(e){const t=l();return this.bitwiseTo(e,s.E2,t),t}or(e){const t=l();return this.bitwiseTo(e,s.QL,t),t}xor(e){const t=l();return this.bitwiseTo(e,s.rL,t),t}andNot(e){const t=l();return this.bitwiseTo(e,s.dG,t),t}not(){const e=l();for(let t=0;t<this.t;++t)e[t]=this.DM&~this[t];return e.t=this.t,e.s=~this.s,e}shiftLeft(e){const t=l();return e<0?this.rShiftTo(-e,t):this.lShiftTo(e,t),t}shiftRight(e){const t=l();return e<0?this.lShiftTo(-e,t):this.rShiftTo(e,t),t}getLowestSetBit(){for(let e=0;e<this.t;++e)if(0!=this[e])return e*this.DB+(0,s.WP)(this[e]);return this.s<0?this.t*this.DB:-1}bitCount(){let e=0;const t=this.s&this.DM;for(let i=0;i<this.t;++i)e+=(0,s.O2)(this[i]^t);return e}testBit(e){const t=Math.floor(e/this.DB);return t>=this.t?0!=this.s:0!=(this[t]&1<<e%this.DB)}setBit(e){return this.changeBit(e,s.QL)}clearBit(e){return this.changeBit(e,s.dG)}flipBit(e){return this.changeBit(e,s.rL)}add(e){const t=l();return this.addTo(e,t),t}subtract(e){const t=l();return this.subTo(e,t),t}multiply(e){const t=l();return this.multiplyTo(e,t),t}divide(e){const t=l();return this.divRemTo(e,t,null),t}remainder(e){const t=l();return this.divRemTo(e,null,t),t}divideAndRemainder(e){const t=l(),i=l();return this.divRemTo(e,t,i),[t,i]}modPow(e,t){let i,s,r=e.bitLength(),a=b(1);if(r<=0)return a;i=r<18?1:r<48?3:r<144?4:r<768?5:6,s=r<8?new c(t):t.isEven()?new u(t):new h(t);const n=[];let o=3;const d=i-1,p=(1<<i)-1;if(n[1]=s.convert(this),i>1){const e=l();for(s.sqrTo(n[1],e);o<=p;)n[o]=l(),s.mulTo(e,n[o-2],n[o]),o+=2}let f,m,v=e.t-1,g=!0,y=l();for(r=w(e[v])-1;v>=0;){for(r>=d?f=e[v]>>r-d&p:(f=(e[v]&(1<<r+1)-1)<<d-r,v>0&&(f|=e[v-1]>>this.DB+r-d)),o=i;0==(1&f);)f>>=1,--o;if((r-=o)<0&&(r+=this.DB,--v),g)n[f].copyTo(a),g=!1;else{for(;o>1;)s.sqrTo(a,y),s.sqrTo(y,a),o-=2;o>0?s.sqrTo(a,y):(m=a,a=y,y=m),s.mulTo(y,n[f],a)}for(;v>=0&&0==(e[v]&1<<r);)s.sqrTo(a,y),m=a,a=y,y=m,--r<0&&(r=this.DB-1,--v)}return s.revert(a)}modInverse(e){const t=e.isEven();if(this.isEven()&&t||0==e.signum())return o.ZERO;const i=e.clone(),s=this.clone(),r=b(1),a=b(0),n=b(0),d=b(1);for(;0!=i.signum();){for(;i.isEven();)i.rShiftTo(1,i),t?(r.isEven()&&a.isEven()||(r.addTo(this,r),a.subTo(e,a)),r.rShiftTo(1,r)):a.isEven()||a.subTo(e,a),a.rShiftTo(1,a);for(;s.isEven();)s.rShiftTo(1,s),t?(n.isEven()&&d.isEven()||(n.addTo(this,n),d.subTo(e,d)),n.rShiftTo(1,n)):d.isEven()||d.subTo(e,d),d.rShiftTo(1,d);i.compareTo(s)>=0?(i.subTo(s,i),t&&r.subTo(n,r),a.subTo(d,a)):(s.subTo(i,s),t&&n.subTo(r,n),d.subTo(a,d))}return 0!=s.compareTo(o.ONE)?o.ZERO:d.compareTo(e)>=0?d.subtract(e):d.signum()<0?(d.addTo(e,d),d.signum()<0?d.add(e):d):d}pow(e){return this.exp(e,new d)}gcd(e){let t=this.s<0?this.negate():this.clone(),i=e.s<0?e.negate():e.clone();if(t.compareTo(i)<0){const e=t;t=i,i=e}let s=t.getLowestSetBit(),r=i.getLowestSetBit();if(r<0)return t;for(s<r&&(r=s),r>0&&(t.rShiftTo(r,t),i.rShiftTo(r,i));t.signum()>0;)(s=t.getLowestSetBit())>0&&t.rShiftTo(s,t),(s=i.getLowestSetBit())>0&&i.rShiftTo(s,i),t.compareTo(i)>=0?(t.subTo(i,t),t.rShiftTo(1,t)):(i.subTo(t,i),i.rShiftTo(1,i));return r>0&&i.lShiftTo(r,i),i}isProbablePrime(e){let t;const i=this.abs();if(1==i.t&&i[0]<=a[a.length-1]){for(t=0;t<a.length;++t)if(i[0]==a[t])return!0;return!1}if(i.isEven())return!1;for(t=1;t<a.length;){let e=a[t],s=t+1;for(;s<a.length&&e<n;)e*=a[s++];for(e=i.modInt(e);t<s;)if(e%a[t++]==0)return!1}return i.millerRabin(e)}copyTo(e){for(let t=this.t-1;t>=0;--t)e[t]=this[t];e.t=this.t,e.s=this.s}fromInt(e){this.t=1,this.s=e<0?-1:0,e>0?this[0]=e:e<-1?this[0]=e+this.DV:this.t=0}fromString(e,t){let i;if(16==t)i=4;else if(8==t)i=3;else if(256==t)i=8;else if(2==t)i=1;else if(32==t)i=5;else{if(4!=t)return void this.fromRadix(e,t);i=2}this.t=0,this.s=0;let s=e.length,r=!1,a=0;for(;--s>=0;){const t=8==i?255&+e[s]:y(e,s);t<0?"-"==e.charAt(s)&&(r=!0):(r=!1,0==a?this[this.t++]=t:a+i>this.DB?(this[this.t-1]|=(t&(1<<this.DB-a)-1)<<a,this[this.t++]=t>>this.DB-a):this[this.t-1]|=t<<a,a+=i,a>=this.DB&&(a-=this.DB))}8==i&&0!=(128&+e[0])&&(this.s=-1,a>0&&(this[this.t-1]|=(1<<this.DB-a)-1<<a)),this.clamp(),r&&o.ZERO.subTo(this,this)}clamp(){const e=this.s&this.DM;for(;this.t>0&&this[this.t-1]==e;)--this.t}dlShiftTo(e,t){let i;for(i=this.t-1;i>=0;--i)t[i+e]=this[i];for(i=e-1;i>=0;--i)t[i]=0;t.t=this.t+e,t.s=this.s}drShiftTo(e,t){for(let i=e;i<this.t;++i)t[i-e]=this[i];t.t=Math.max(this.t-e,0),t.s=this.s}lShiftTo(e,t){const i=e%this.DB,s=this.DB-i,r=(1<<s)-1,a=Math.floor(e/this.DB);let n=this.s<<i&this.DM;for(let e=this.t-1;e>=0;--e)t[e+a+1]=this[e]>>s|n,n=(this[e]&r)<<i;for(let e=a-1;e>=0;--e)t[e]=0;t[a]=n,t.t=this.t+a+1,t.s=this.s,t.clamp()}rShiftTo(e,t){t.s=this.s;const i=Math.floor(e/this.DB);if(i>=this.t)return void(t.t=0);const s=e%this.DB,r=this.DB-s,a=(1<<s)-1;t[0]=this[i]>>s;for(let e=i+1;e<this.t;++e)t[e-i-1]|=(this[e]&a)<<r,t[e-i]=this[e]>>s;s>0&&(t[this.t-i-1]|=(this.s&a)<<r),t.t=this.t-i,t.clamp()}subTo(e,t){let i=0,s=0;const r=Math.min(e.t,this.t);for(;i<r;)s+=this[i]-e[i],t[i++]=s&this.DM,s>>=this.DB;if(e.t<this.t){for(s-=e.s;i<this.t;)s+=this[i],t[i++]=s&this.DM,s>>=this.DB;s+=this.s}else{for(s+=this.s;i<e.t;)s-=e[i],t[i++]=s&this.DM,s>>=this.DB;s-=e.s}t.s=s<0?-1:0,s<-1?t[i++]=this.DV+s:s>0&&(t[i++]=s),t.t=i,t.clamp()}multiplyTo(e,t){const i=this.abs(),s=e.abs();let r=i.t;for(t.t=r+s.t;--r>=0;)t[r]=0;for(r=0;r<s.t;++r)t[r+i.t]=i.am(0,s[r],t,r,0,i.t);t.s=0,t.clamp(),this.s!=e.s&&o.ZERO.subTo(t,t)}squareTo(e){const t=this.abs();let i=e.t=2*t.t;for(;--i>=0;)e[i]=0;for(i=0;i<t.t-1;++i){const s=t.am(i,t[i],e,2*i,0,1);(e[i+t.t]+=t.am(i+1,2*t[i],e,2*i+1,s,t.t-i-1))>=t.DV&&(e[i+t.t]-=t.DV,e[i+t.t+1]=1)}e.t>0&&(e[e.t-1]+=t.am(i,t[i],e,2*i,0,1)),e.s=0,e.clamp()}divRemTo(e,t,i){const s=e.abs();if(s.t<=0)return;const r=this.abs();if(r.t<s.t)return null!=t&&t.fromInt(0),void(null!=i&&this.copyTo(i));null==i&&(i=l());const a=l(),n=this.s,d=e.s,c=this.DB-w(s[s.t-1]);c>0?(s.lShiftTo(c,a),r.lShiftTo(c,i)):(s.copyTo(a),r.copyTo(i));const h=a.t,u=a[h-1];if(0==u)return;const p=u*(1<<this.F1)+(h>1?a[h-2]>>this.F2:0),f=this.FV/p,m=(1<<this.F1)/p,v=1<<this.F2;let g=i.t,y=g-h;const b=null==t?l():t;for(a.dlShiftTo(y,b),i.compareTo(b)>=0&&(i[i.t++]=1,i.subTo(b,i)),o.ONE.dlShiftTo(h,b),b.subTo(a,a);a.t<h;)a[a.t++]=0;for(;--y>=0;){let e=i[--g]==u?this.DM:Math.floor(i[g]*f+(i[g-1]+v)*m);if((i[g]+=a.am(0,e,i,y,0,h))<e)for(a.dlShiftTo(y,b),i.subTo(b,i);i[g]<--e;)i.subTo(b,i)}null!=t&&(i.drShiftTo(h,t),n!=d&&o.ZERO.subTo(t,t)),i.t=h,i.clamp(),c>0&&i.rShiftTo(c,i),n<0&&o.ZERO.subTo(i,i)}invDigit(){if(this.t<1)return 0;const e=this[0];if(0==(1&e))return 0;let t=3&e;return t=t*(2-(15&e)*t)&15,t=t*(2-(255&e)*t)&255,t=t*(2-((65535&e)*t&65535))&65535,t=t*(2-e*t%this.DV)%this.DV,t>0?this.DV-t:-t}isEven(){return 0==(this.t>0?1&this[0]:this.s)}exp(e,t){if(e>4294967295||e<1)return o.ONE;let i=l(),s=l();const r=t.convert(this);let a=w(e)-1;for(r.copyTo(i);--a>=0;)if(t.sqrTo(i,s),(e&1<<a)>0)t.mulTo(s,r,i);else{const e=i;i=s,s=e}return t.revert(i)}chunkSize(e){return Math.floor(Math.LN2*this.DB/Math.log(e))}toRadix(e){if(null==e&&(e=10),0==this.signum()||e<2||e>36)return"0";const t=this.chunkSize(e),i=Math.pow(e,t),s=b(i),r=l(),a=l();let n="";for(this.divRemTo(s,r,a);r.signum()>0;)n=(i+a.intValue()).toString(e).substr(1)+n,r.divRemTo(s,r,a);return a.intValue().toString(e)+n}fromRadix(e,t){this.fromInt(0),null==t&&(t=10);const i=this.chunkSize(t),s=Math.pow(t,i);let r=!1,a=0,n=0;for(let o=0;o<e.length;++o){const d=y(e,o);d<0?"-"==e.charAt(o)&&0==this.signum()&&(r=!0):(n=t*n+d,++a>=i&&(this.dMultiply(s),this.dAddOffset(n,0),a=0,n=0))}a>0&&(this.dMultiply(Math.pow(t,a)),this.dAddOffset(n,0)),r&&o.ZERO.subTo(this,this)}fromNumber(e,t,i){if("number"==typeof t)if(e<2)this.fromInt(1);else for(this.fromNumber(e,i),this.testBit(e-1)||this.bitwiseTo(o.ONE.shiftLeft(e-1),s.QL,this),this.isEven()&&this.dAddOffset(1,0);!this.isProbablePrime(t);)this.dAddOffset(2,0),this.bitLength()>e&&this.subTo(o.ONE.shiftLeft(e-1),this);else{const i=[],s=7&e;i.length=1+(e>>3),t.nextBytes(i),s>0?i[0]&=(1<<s)-1:i[0]=0,this.fromString(i,256)}}bitwiseTo(e,t,i){let s,r;const a=Math.min(e.t,this.t);for(s=0;s<a;++s)i[s]=t(this[s],e[s]);if(e.t<this.t){for(r=e.s&this.DM,s=a;s<this.t;++s)i[s]=t(this[s],r);i.t=this.t}else{for(r=this.s&this.DM,s=a;s<e.t;++s)i[s]=t(r,e[s]);i.t=e.t}i.s=t(this.s,e.s),i.clamp()}changeBit(e,t){const i=o.ONE.shiftLeft(e);return this.bitwiseTo(i,t,i),i}addTo(e,t){let i=0,s=0;const r=Math.min(e.t,this.t);for(;i<r;)s+=this[i]+e[i],t[i++]=s&this.DM,s>>=this.DB;if(e.t<this.t){for(s+=e.s;i<this.t;)s+=this[i],t[i++]=s&this.DM,s>>=this.DB;s+=this.s}else{for(s+=this.s;i<e.t;)s+=e[i],t[i++]=s&this.DM,s>>=this.DB;s+=e.s}t.s=s<0?-1:0,s>0?t[i++]=s:s<-1&&(t[i++]=this.DV+s),t.t=i,t.clamp()}dMultiply(e){this[this.t]=this.am(0,e-1,this,0,0,this.t),++this.t,this.clamp()}dAddOffset(e,t){if(0!=e){for(;this.t<=t;)this[this.t++]=0;for(this[t]+=e;this[t]>=this.DV;)this[t]-=this.DV,++t>=this.t&&(this[this.t++]=0),++this[t]}}multiplyLowerTo(e,t,i){let s=Math.min(this.t+e.t,t);for(i.s=0,i.t=s;s>0;)i[--s]=0;for(const t=i.t-this.t;s<t;++s)i[s+this.t]=this.am(0,e[s],i,s,0,this.t);for(const r=Math.min(e.t,t);s<r;++s)this.am(0,e[s],i,s,0,t-s);i.clamp()}multiplyUpperTo(e,t,i){--t;let s=i.t=this.t+e.t-t;for(i.s=0;--s>=0;)i[s]=0;for(s=Math.max(t-this.t,0);s<e.t;++s)i[this.t+s-t]=this.am(t-s,e[s],i,0,0,this.t+s-t);i.clamp(),i.drShiftTo(1,i)}modInt(e){if(e<=0)return 0;const t=this.DV%e;let i=this.s<0?e-1:0;if(this.t>0)if(0==t)i=this[0]%e;else for(let s=this.t-1;s>=0;--s)i=(t*i+this[s])%e;return i}millerRabin(e){const t=this.subtract(o.ONE),i=t.getLowestSetBit();if(i<=0)return!1;const s=t.shiftRight(i);(e=e+1>>1)>a.length&&(e=a.length);const r=l();for(let n=0;n<e;++n){r.fromInt(a[Math.floor(Math.random()*a.length)]);let e=r.modPow(s,this);if(0!=e.compareTo(o.ONE)&&0!=e.compareTo(t)){let s=1;for(;s++<i&&0!=e.compareTo(t);)if(e=e.modPowInt(2,this),0==e.compareTo(o.ONE))return!1;if(0!=e.compareTo(t))return!1}}return!0}square(){const e=l();return this.squareTo(e),e}gcda(e,t){let i=this.s<0?this.negate():this.clone(),s=e.s<0?e.negate():e.clone();if(i.compareTo(s)<0){const e=i;i=s,s=e}let r=i.getLowestSetBit(),a=s.getLowestSetBit();if(a<0)return void t(i);r<a&&(a=r),a>0&&(i.rShiftTo(a,i),s.rShiftTo(a,s));const n=function(){(r=i.getLowestSetBit())>0&&i.rShiftTo(r,i),(r=s.getLowestSetBit())>0&&s.rShiftTo(r,s),i.compareTo(s)>=0?(i.subTo(s,i),i.rShiftTo(1,i)):(s.subTo(i,s),s.rShiftTo(1,s)),i.signum()>0?setTimeout(n,0):(a>0&&s.lShiftTo(a,s),setTimeout((function(){t(s)}),0))};setTimeout(n,10)}fromNumberAsync(e,t,i,r){if("number"==typeof t)if(e<2)this.fromInt(1);else{this.fromNumber(e,i),this.testBit(e-1)||this.bitwiseTo(o.ONE.shiftLeft(e-1),s.QL,this),this.isEven()&&this.dAddOffset(1,0);const a=this,n=function(){a.dAddOffset(2,0),a.bitLength()>e&&a.subTo(o.ONE.shiftLeft(e-1),a),a.isProbablePrime(t)?setTimeout((function(){r()}),0):setTimeout(n,0)};setTimeout(n,0)}else{const i=[],s=7&e;i.length=1+(e>>3),t.nextBytes(i),s>0?i[0]&=(1<<s)-1:i[0]=0,this.fromString(i,256)}}}class d{constructor(){}convert(e){return e}revert(e){return e}mulTo(e,t,i){e.multiplyTo(t,i)}sqrTo(e,t){e.squareTo(t)}}class c{constructor(e){this.m=e}convert(e){return e.s<0||e.compareTo(this.m)>=0?e.mod(this.m):e}revert(e){return e}reduce(e){e.divRemTo(this.m,null,e)}mulTo(e,t,i){e.multiplyTo(t,i),this.reduce(i)}sqrTo(e,t){e.squareTo(t),this.reduce(t)}}class h{constructor(e){this.m=e,this.mp=e.invDigit(),this.mpl=32767&this.mp,this.mph=this.mp>>15,this.um=(1<<e.DB-15)-1,this.mt2=2*e.t}convert(e){const t=l();return e.abs().dlShiftTo(this.m.t,t),t.divRemTo(this.m,null,t),e.s<0&&t.compareTo(o.ZERO)>0&&this.m.subTo(t,t),t}revert(e){const t=l();return e.copyTo(t),this.reduce(t),t}reduce(e){for(;e.t<=this.mt2;)e[e.t++]=0;for(let t=0;t<this.m.t;++t){let i=32767&e[t];const s=i*this.mpl+((i*this.mph+(e[t]>>15)*this.mpl&this.um)<<15)&e.DM;for(i=t+this.m.t,e[i]+=this.m.am(0,s,e,t,0,this.m.t);e[i]>=e.DV;)e[i]-=e.DV,e[++i]++}e.clamp(),e.drShiftTo(this.m.t,e),e.compareTo(this.m)>=0&&e.subTo(this.m,e)}mulTo(e,t,i){e.multiplyTo(t,i),this.reduce(i)}sqrTo(e,t){e.squareTo(t),this.reduce(t)}}class u{constructor(e){this.m=e,this.r2=l(),this.q3=l(),o.ONE.dlShiftTo(2*e.t,this.r2),this.mu=this.r2.divide(e)}convert(e){if(e.s<0||e.t>2*this.m.t)return e.mod(this.m);if(e.compareTo(this.m)<0)return e;{const t=l();return e.copyTo(t),this.reduce(t),t}}revert(e){return e}reduce(e){for(e.drShiftTo(this.m.t-1,this.r2),e.t>this.m.t+1&&(e.t=this.m.t+1,e.clamp()),this.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3),this.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);e.compareTo(this.r2)<0;)e.dAddOffset(1,this.m.t+1);for(e.subTo(this.r2,e);e.compareTo(this.m)>=0;)e.subTo(this.m,e)}mulTo(e,t,i){e.multiplyTo(t,i),this.reduce(i)}sqrTo(e,t){e.squareTo(t),this.reduce(t)}}function l(){return new o(null)}function p(e,t){return new o(e,t)}const f="undefined"!=typeof navigator;f&&"Microsoft Internet Explorer"==navigator.appName?(o.prototype.am=function(e,t,i,s,r,a){const n=32767&t,o=t>>15;for(;--a>=0;){let t=32767&this[e];const a=this[e++]>>15,d=o*t+a*n;t=n*t+((32767&d)<<15)+i[s]+(1073741823&r),r=(t>>>30)+(d>>>15)+o*a+(r>>>30),i[s++]=1073741823&t}return r},r=30):f&&"Netscape"!=navigator.appName?(o.prototype.am=function(e,t,i,s,r,a){for(;--a>=0;){const a=t*this[e++]+i[s]+r;r=Math.floor(a/67108864),i[s++]=67108863&a}return r},r=26):(o.prototype.am=function(e,t,i,s,r,a){const n=16383&t,o=t>>14;for(;--a>=0;){let t=16383&this[e];const a=this[e++]>>14,d=o*t+a*n;t=n*t+((16383&d)<<14)+i[s]+r,r=(t>>28)+(d>>14)+o*a,i[s++]=268435455&t}return r},r=28),o.prototype.DB=r,o.prototype.DM=(1<<r)-1,o.prototype.DV=1<<r,o.prototype.FV=Math.pow(2,52),o.prototype.F1=52-r,o.prototype.F2=2*r-52;const m=[];let v,g;for(v="0".charCodeAt(0),g=0;g<=9;++g)m[v++]=g;for(v="a".charCodeAt(0),g=10;g<36;++g)m[v++]=g;for(v="A".charCodeAt(0),g=10;g<36;++g)m[v++]=g;function y(e,t){const i=m[e.charCodeAt(t)];return null==i?-1:i}function b(e){const t=l();return t.fromInt(e),t}function w(e){let t,i=1;return 0!=(t=e>>>16)&&(e=t,i+=16),0!=(t=e>>8)&&(e=t,i+=8),0!=(t=e>>4)&&(e=t,i+=4),0!=(t=e>>2)&&(e=t,i+=2),0!=(t=e>>1)&&(e=t,i+=1),i}o.ZERO=b(0),o.ONE=b(1)},4612:(e,t,i)=>{i.d(t,{P7:()=>r,Si:()=>a});class s{constructor(){this.i=0,this.j=0,this.S=[]}init(e){let t,i,s;for(t=0;t<256;++t)this.S[t]=t;for(i=0,t=0;t<256;++t)i=i+this.S[t]+e[t%e.length]&255,s=this.S[t],this.S[t]=this.S[i],this.S[i]=s;this.i=0,this.j=0}next(){let e;return this.i=this.i+1&255,this.j=this.j+this.S[this.i]&255,e=this.S[this.i],this.S[this.i]=this.S[this.j],this.S[this.j]=e,this.S[e+this.S[this.i]&255]}}function r(){return new s}let a=256},2491:(e,t,i)=>{i.d(t,{C:()=>c});var s=i(4612);let r,a,n=null;if(null==n){let e;if(n=[],a=0,"undefined"!=typeof window&&window.crypto&&window.crypto.getRandomValues){const t=new Uint32Array(256);for(window.crypto.getRandomValues(t),e=0;e<t.length;++e)n[a++]=255&t[e]}var o=0;const t=function(e){if((o=o||0)>=256||a>=s.Si)window.removeEventListener?window.removeEventListener("mousemove",t,!1):window.detachEvent&&window.detachEvent("onmousemove",t);else try{const t=e.x+e.y;n[a++]=255&t,o+=1}catch(e){}};"undefined"!=typeof window&&(window.addEventListener?window.addEventListener("mousemove",t,!1):window.attachEvent&&window.attachEvent("onmousemove",t))}function d(){if(null==r){for(r=(0,s.P7)();a<s.Si;){const e=Math.floor(65536*Math.random());n[a++]=255&e}for(r.init(n),a=0;a<n.length;++a)n[a]=0;a=0}return r.next()}class c{nextBytes(e){for(let t=0;t<e.length;++t)e[t]=d()}}},4493:(e,t,i)=>{i.d(t,{z:()=>a});var s=i(2833),r=i(2491);class a{constructor(){this.n=null,this.e=0,this.d=null,this.p=null,this.q=null,this.dmp1=null,this.dmq1=null,this.coeff=null}doPublic(e){return e.modPowInt(this.e,this.n)}doPrivate(e){if(null==this.p||null==this.q)return e.modPow(this.d,this.n);let t=e.mod(this.p).modPow(this.dmp1,this.p);const i=e.mod(this.q).modPow(this.dmq1,this.q);for(;t.compareTo(i)<0;)t=t.add(this.p);return t.subtract(i).multiply(this.coeff).mod(this.p).multiply(this.q).add(i)}setPublic(e,t){null!=e&&null!=t&&e.length>0&&t.length>0?(this.n=(0,s.BF)(e,16),this.e=parseInt(t,16)):console.error("Invalid RSA public key")}encrypt(e){const t=this.n.bitLength()+7>>3,i=function(e,t){if(t<e.length+11)return console.error("Message too long for RSA"),null;const i=[];let a=e.length-1;for(;a>=0&&t>0;){const s=e.charCodeAt(a--);s<128?i[--t]=s:s>127&&s<2048?(i[--t]=63&s|128,i[--t]=s>>6|192):(i[--t]=63&s|128,i[--t]=s>>6&63|128,i[--t]=s>>12|224)}i[--t]=0;const n=new r.C,o=[];for(;t>2;){for(o[0]=0;0==o[0];)n.nextBytes(o);i[--t]=o[0]}return i[--t]=2,i[--t]=0,new s.Jh(i)}(e,t);if(null==i)return null;const a=this.doPublic(i);if(null==a)return null;let n=a.toString(16),o=n.length;for(let e=0;e<2*t-o;e++)n="0"+n;return n}setPrivate(e,t,i){null!=e&&null!=t&&e.length>0&&t.length>0?(this.n=(0,s.BF)(e,16),this.e=parseInt(t,16),this.d=(0,s.BF)(i,16)):console.error("Invalid RSA private key")}setPrivateEx(e,t,i,r,a,n,o,d){null!=e&&null!=t&&e.length>0&&t.length>0?(this.n=(0,s.BF)(e,16),this.e=parseInt(t,16),this.d=(0,s.BF)(i,16),this.p=(0,s.BF)(r,16),this.q=(0,s.BF)(a,16),this.dmp1=(0,s.BF)(n,16),this.dmq1=(0,s.BF)(o,16),this.coeff=(0,s.BF)(d,16)):console.error("Invalid RSA private key")}generate(e,t){const i=new r.C,a=e>>1;this.e=parseInt(t,16);const n=new s.Jh(t,16);for(;;){for(;this.p=new s.Jh(e-a,1,i),0!=this.p.subtract(s.Jh.ONE).gcd(n).compareTo(s.Jh.ONE)||!this.p.isProbablePrime(10););for(;this.q=new s.Jh(a,1,i),0!=this.q.subtract(s.Jh.ONE).gcd(n).compareTo(s.Jh.ONE)||!this.q.isProbablePrime(10););if(this.p.compareTo(this.q)<=0){const e=this.p;this.p=this.q,this.q=e}const t=this.p.subtract(s.Jh.ONE),r=this.q.subtract(s.Jh.ONE),o=t.multiply(r);if(0==o.gcd(n).compareTo(s.Jh.ONE)){this.n=this.p.multiply(this.q),this.d=n.modInverse(o),this.dmp1=this.d.mod(t),this.dmq1=this.d.mod(r),this.coeff=this.q.modInverse(this.p);break}}}decrypt(e){const t=(0,s.BF)(e,16),i=this.doPrivate(t);return null==i?null:function(e,t){const i=e.toByteArray();let s=0;for(;s<i.length&&0==i[s];)++s;if(i.length-s!=t-1||2!=i[s])return null;for(++s;0!=i[s];)if(++s>=i.length)return null;let r="";for(;++s<i.length;){const e=255&i[s];e<128?r+=String.fromCharCode(e):e>191&&e<224?(r+=String.fromCharCode((31&e)<<6|63&i[s+1]),++s):(r+=String.fromCharCode((15&e)<<12|(63&i[s+1])<<6|63&i[s+2]),s+=2)}return r}(i,this.n.bitLength()+7>>3)}generateAsync(e,t,i){const a=new r.C,n=e>>1;this.e=parseInt(t,16);const o=new s.Jh(t,16),d=this,c=function(){const t=function(){if(d.p.compareTo(d.q)<=0){const e=d.p;d.p=d.q,d.q=e}const e=d.p.subtract(s.Jh.ONE),t=d.q.subtract(s.Jh.ONE),r=e.multiply(t);0==r.gcd(o).compareTo(s.Jh.ONE)?(d.n=d.p.multiply(d.q),d.d=o.modInverse(r),d.dmp1=d.d.mod(e),d.dmq1=d.d.mod(t),d.coeff=d.q.modInverse(d.p),setTimeout((function(){i()}),0)):setTimeout(c,0)},r=function(){d.q=(0,s.cR)(),d.q.fromNumberAsync(n,1,a,(function(){d.q.subtract(s.Jh.ONE).gcda(o,(function(e){0==e.compareTo(s.Jh.ONE)&&d.q.isProbablePrime(10)?setTimeout(t,0):setTimeout(r,0)}))}))},h=function(){d.p=(0,s.cR)(),d.p.fromNumberAsync(e-n,1,a,(function(){d.p.subtract(s.Jh.ONE).gcda(o,(function(e){0==e.compareTo(s.Jh.ONE)&&d.p.isProbablePrime(10)?setTimeout(r,0):setTimeout(h,0)}))}))};setTimeout(h,0)};setTimeout(c,0)}sign(e,t,i){const r=function(e,t){if(t<e.length+22)return console.error("Message too long for RSA"),null;const i=t-e.length-6;let r="";for(let e=0;e<i;e+=2)r+="ff";const a="0001"+r+"00"+e;return(0,s.BF)(a,16)}((n[i]||"")+t(e).toString(),this.n.bitLength()/4);if(null==r)return null;const a=this.doPrivate(r);if(null==a)return null;const o=a.toString(16);return 0==(1&o.length)?o:"0"+o}verify(e,t,i){const r=(0,s.BF)(t,16),a=this.doPublic(r);return null==a?null:function(e){for(const t in n)if(n.hasOwnProperty(t)){const i=n[t],s=i.length;if(e.substr(0,s)==i)return e.substr(s)}return e}(a.toString(16).replace(/^1f+00/,""))==i(e).toString()}}const n={md2:"3020300c06082a864886f70d020205000410",md5:"3020300c06082a864886f70d020505000410",sha1:"3021300906052b0e03021a05000414",sha224:"302d300d06096086480165030402040500041c",sha256:"3031300d060960864801650304020105000420",sha384:"3041300d060960864801650304020205000430",sha512:"3051300d060960864801650304020305000440",ripemd160:"3021300906052b2403020105000414"}},9242:(e,t,i)=>{i.d(t,{E2:()=>a,O2:()=>h,QL:()=>n,WP:()=>c,dG:()=>d,rL:()=>o,vL:()=>r});const s="0123456789abcdefghijklmnopqrstuvwxyz";function r(e){return s.charAt(e)}function a(e,t){return e&t}function n(e,t){return e|t}function o(e,t){return e^t}function d(e,t){return e&~t}function c(e){if(0==e)return-1;let t=0;return 0==(65535&e)&&(e>>=16,t+=16),0==(255&e)&&(e>>=8,t+=8),0==(15&e)&&(e>>=4,t+=4),0==(3&e)&&(e>>=2,t+=2),0==(1&e)&&++t,t}function h(e){let t=0;for(;0!=e;)e&=e-1,++t;return t}},77:(e,t,i)=>{i.d(t,{_:()=>o});var s=i(138),r=i(8006),a=i(9270);function n(e){return{hash:e,hmac:(t,...i)=>(0,s.b)(e,t,(0,r.eV)(...i)),randomBytes:r.O6}}function o(e,t){const i=t=>(0,a.e4)({...e,...n(t)});return Object.freeze({...i(t),create:i})}},8265:(e,t,i)=>{i.d(t,{K:()=>d,M:()=>o});var s=i(111),r=i(2773);const a=BigInt(0),n=BigInt(1);function o(e,t){const i=(e,t)=>{const i=t.negate();return e?i:t},s=e=>({windows:Math.ceil(t/e)+1,windowSize:2**(e-1)});return{constTimeNegate:i,unsafeLadder(t,i){let s=e.ZERO,r=t;for(;i>a;)i&n&&(s=s.add(r)),r=r.double(),i>>=n;return s},precomputeWindow(e,t){const{windows:i,windowSize:r}=s(t),a=[];let n=e,o=n;for(let e=0;e<i;e++){o=n,a.push(o);for(let e=1;e<r;e++)o=o.add(n),a.push(o);n=o.double()}return a},wNAF(t,r,a){const{windows:o,windowSize:d}=s(t);let c=e.ZERO,h=e.BASE;const u=BigInt(2**t-1),l=2**t,p=BigInt(t);for(let e=0;e<o;e++){const t=e*d;let s=Number(a&u);a>>=p,s>d&&(s-=l,a+=n);const o=t,f=t+Math.abs(s)-1,m=e%2!=0,v=s<0;0===s?h=h.add(i(m,r[o])):c=c.add(i(v,r[f]))}return{p:c,f:h}},wNAFCached(e,t,i,s){const r=e._WINDOW_SIZE||1;let a=t.get(e);return a||(a=this.precomputeWindow(e,r),1!==r&&t.set(e,s(a))),this.wNAF(r,a,i)}}}function d(e){return(0,s.OP)(e.Fp),(0,r.validateObject)(e,{n:"bigint",h:"bigint",Gx:"field",Gy:"field"},{nBitLength:"isSafeInteger",nByteLength:"isSafeInteger"}),Object.freeze({...(0,s.kK)(e.n,e.nBitLength),...e})}},6753:(e,t,i)=>{i.d(t,{e:()=>h});var s=i(111),r=i(2773),a=i(8265);const n=BigInt(0),o=BigInt(1),d=BigInt(2),c=BigInt(8);function h(e){const t=function(e){const t=(0,a.K)(e);return r.validateObject(e,{hash:"function",a:"bigint",d:"bigint",randomBytes:"function"},{adjustScalarBytes:"function",domain:"function",uvRatio:"function",mapToCurve:"function"}),Object.freeze({...t})}(e),{Fp:i,n:h,preHash:u,hash:l,randomBytes:p,nByteLength:f,h:m}=t,v=d**BigInt(8*f),g=i.create,y=t.uvRatio||((e,t)=>{try{return{isValid:!0,value:i.sqrt(e*i.inv(t))}}catch(e){return{isValid:!1,value:n}}}),b=t.adjustScalarBytes||(e=>e),w=t.domain||((e,t,i)=>{if(t.length||i)throw new Error("Contexts/pre-hash are not supported");return e}),S=e=>"bigint"==typeof e&&0n<e,P=(e,t)=>S(e)&&S(t)&&e<t,k=e=>e===n||P(e,v);function O(e,t){if(P(e,t))return e;throw new Error(`Expected valid scalar < ${t}, got ${typeof e} ${e}`)}function T(e){return e===n?e:O(e,h)}const A=new Map;function G(e){if(!(e instanceof I))throw new Error("ExtendedPoint expected")}class I{constructor(e,t,i,s){if(this.ex=e,this.ey=t,this.ez=i,this.et=s,!k(e))throw new Error("x required");if(!k(t))throw new Error("y required");if(!k(i))throw new Error("z required");if(!k(s))throw new Error("t required")}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static fromAffine(e){if(e instanceof I)throw new Error("extended point not allowed");const{x:t,y:i}=e||{};if(!k(t)||!k(i))throw new Error("invalid affine point");return new I(t,i,o,g(t*i))}static normalizeZ(e){const t=i.invertBatch(e.map((e=>e.ez)));return e.map(((e,i)=>e.toAffine(t[i]))).map(I.fromAffine)}_setWindowSize(e){this._WINDOW_SIZE=e,A.delete(this)}assertValidity(){const{a:e,d:i}=t;if(this.is0())throw new Error("bad point: ZERO");const{ex:s,ey:r,ez:a,et:n}=this,o=g(s*s),d=g(r*r),c=g(a*a),h=g(c*c),u=g(o*e);if(g(c*g(u+d))!==g(h+g(i*g(o*d))))throw new Error("bad point: equation left != right (1)");if(g(s*r)!==g(a*n))throw new Error("bad point: equation left != right (2)")}equals(e){G(e);const{ex:t,ey:i,ez:s}=this,{ex:r,ey:a,ez:n}=e,o=g(t*n),d=g(r*s),c=g(i*n),h=g(a*s);return o===d&&c===h}is0(){return this.equals(I.ZERO)}negate(){return new I(g(-this.ex),this.ey,this.ez,g(-this.et))}double(){const{a:e}=t,{ex:i,ey:s,ez:r}=this,a=g(i*i),n=g(s*s),o=g(d*g(r*r)),c=g(e*a),h=i+s,u=g(g(h*h)-a-n),l=c+n,p=l-o,f=c-n,m=g(u*p),v=g(l*f),y=g(u*f),b=g(p*l);return new I(m,v,b,y)}add(e){G(e);const{a:i,d:s}=t,{ex:r,ey:a,ez:o,et:c}=this,{ex:h,ey:u,ez:l,et:p}=e;if(i===BigInt(-1)){const e=g((a-r)*(u+h)),t=g((a+r)*(u-h)),i=g(t-e);if(i===n)return this.double();const s=g(o*d*p),f=g(c*d*l),m=f+s,v=t+e,y=f-s,b=g(m*i),w=g(v*y),S=g(m*y),P=g(i*v);return new I(b,w,P,S)}const f=g(r*h),m=g(a*u),v=g(c*s*p),y=g(o*l),b=g((r+a)*(h+u)-f-m),w=y-v,S=y+v,P=g(m-i*f),k=g(b*w),O=g(S*P),T=g(b*P),A=g(w*S);return new I(k,O,A,T)}subtract(e){return this.add(e.negate())}wNAF(e){return x.wNAFCached(this,A,e,I.normalizeZ)}multiply(e){const{p:t,f:i}=this.wNAF(O(e,h));return I.normalizeZ([t,i])[0]}multiplyUnsafe(e){let t=T(e);return t===n?M:this.equals(M)||t===o?this:this.equals(C)?this.wNAF(t).p:x.unsafeLadder(this,t)}isSmallOrder(){return this.multiplyUnsafe(m).is0()}isTorsionFree(){return x.unsafeLadder(this,h).is0()}toAffine(e){const{ex:t,ey:s,ez:r}=this,a=this.is0();null==e&&(e=a?c:i.inv(r));const d=g(t*e),h=g(s*e),u=g(r*e);if(a)return{x:n,y:o};if(u!==o)throw new Error("invZ was invalid");return{x:d,y:h}}clearCofactor(){const{h:e}=t;return e===o?this:this.multiplyUnsafe(e)}static fromHex(e,s=!0){const{d:a,a:d}=t,c=i.BYTES,h=(e=(0,r.ensureBytes)("pointHex",e,c)).slice(),u=e[c-1];h[c-1]=-129&u;const l=r.bytesToNumberLE(h);l===n||O(l,s?i.ORDER:v);const p=g(l*l),f=g(p-o),m=g(a*p-d);let{isValid:b,value:w}=y(f,m);if(!b)throw new Error("Point.fromHex: invalid y coordinate");return 0!=(128&u)!=((w&o)===o)&&(w=g(-w)),I.fromAffine({x:w,y:l})}static fromPrivateKey(e){return B(e).point}toRawBytes(){const{x:e,y:t}=this.toAffine(),s=r.numberToBytesLE(t,i.BYTES);return s[s.length-1]|=e&o?128:0,s}toHex(){return r.bytesToHex(this.toRawBytes())}}I.BASE=new I(t.Gx,t.Gy,o,g(t.Gx*t.Gy)),I.ZERO=new I(n,o,o,n);const{BASE:C,ZERO:M}=I,x=(0,a.M)(I,8*f);function V(e){return(0,s.wQ)(e,h)}function E(e){return V(r.bytesToNumberLE(e))}function B(e){const t=f;e=(0,r.ensureBytes)("private key",e,t);const i=(0,r.ensureBytes)("hashed private key",l(e),2*t),s=b(i.slice(0,t)),a=i.slice(t,2*t),n=E(s),o=C.multiply(n),d=o.toRawBytes();return{head:s,prefix:a,scalar:n,point:o,pointBytes:d}}function _(e=new Uint8Array,...t){const i=r.concatBytes(...t);return E(l(w(i,(0,r.ensureBytes)("context",e),!!u)))}return C._setWindowSize(8),{CURVE:t,getPublicKey:function(e){return B(e).pointBytes},sign:function(e,t,s){e=(0,r.ensureBytes)("message",e);const a=(0,r.ensureBytes)("privKey",t),n=r.bytesToNumberLE(a),o=C.multiply(V(n)).toRawBytes(),d=128&o[31],c=_(s,a,e),h=C.multiply(c).toRawBytes(),u=V(c+_(s,h,o,e)*n);T(u);const l=r.numberToBytesLE(u,i.BYTES);l[31]|=d;const p=r.concatBytes(h,l);return(0,r.ensureBytes)("result",p,2*f)},verify:function(e,t,s,a){const n=i.BYTES;e=(0,r.ensureBytes)("signature",e,2*n),t=(0,r.ensureBytes)("message",t),u&&(t=u(t));const o=I.fromHex(s,!1),d=I.fromHex(e.slice(0,n),!1),c=r.bytesToNumberLE(e.slice(n,2*n)),h=C.multiplyUnsafe(c),l=_(a,d.toRawBytes(),o.toRawBytes(),t);return d.add(o.multiplyUnsafe(l)).subtract(h).clearCofactor().equals(I.ZERO)},ExtendedPoint:I,utils:{getExtendedPublicKey:B,randomPrivateKey:()=>p(i.BYTES),precompute:(e=8,t=I.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)}}}},4945:(e,t,i)=>{i.d(t,{V1:()=>l,i:()=>u});var s=i(111),r=i(2773);const a=r.bytesToNumberBE;function n(e,t){if(e<0||e>=1<<8*t)throw new Error(`bad I2OSP call: value=${e} length=${t}`);const i=Array.from({length:t}).fill(0);for(let s=t-1;s>=0;s--)i[s]=255&e,e>>>=8;return new Uint8Array(i)}function o(e,t){const i=new Uint8Array(e.length);for(let s=0;s<e.length;s++)i[s]=e[s]^t[s];return i}function d(e){if(!(e instanceof Uint8Array))throw new Error("Uint8Array expected")}function c(e){if(!Number.isSafeInteger(e))throw new Error("number expected")}function h(e,t,i){(0,r.validateObject)(i,{DST:"string",p:"bigint",m:"isSafeInteger",k:"isSafeInteger",hash:"hash"});const{p:h,k:u,m:l,hash:p,expand:f,DST:m}=i;d(e),c(t);const v=function(e){if(e instanceof Uint8Array)return e;if("string"==typeof e)return(0,r.utf8ToBytes)(e);throw new Error("DST must be Uint8Array or string")}(m),g=h.toString(2).length,y=Math.ceil((g+u)/8),b=t*l*y;let w;if("xmd"===f)w=function(e,t,i,s){d(e),d(t),c(i),t.length>255&&(t=s((0,r.concatBytes)((0,r.utf8ToBytes)("H2C-OVERSIZE-DST-"),t)));const{outputLen:a,blockLen:h}=s,u=Math.ceil(i/a);if(u>255)throw new Error("Invalid xmd length");const l=(0,r.concatBytes)(t,n(t.length,1)),p=n(0,h),f=n(i,2),m=new Array(u),v=s((0,r.concatBytes)(p,e,f,n(0,1),l));m[0]=s((0,r.concatBytes)(v,n(1,1),l));for(let e=1;e<=u;e++){const t=[o(v,m[e-1]),n(e+1,1),l];m[e]=s((0,r.concatBytes)(...t))}return(0,r.concatBytes)(...m).slice(0,i)}(e,v,b,p);else if("xof"===f)w=function(e,t,i,s,a){if(d(e),d(t),c(i),t.length>255){const e=Math.ceil(2*s/8);t=a.create({dkLen:e}).update((0,r.utf8ToBytes)("H2C-OVERSIZE-DST-")).update(t).digest()}if(i>65535||t.length>255)throw new Error("expand_message_xof: invalid lenInBytes");return a.create({dkLen:i}).update(e).update(n(i,2)).update(t).update(n(t.length,1)).digest()}(e,v,b,u,p);else{if(void 0!==f)throw new Error('expand must be "xmd", "xof" or undefined');w=e}const S=new Array(t);for(let e=0;e<t;e++){const t=new Array(l);for(let i=0;i<l;i++){const r=y*(i+e*l),n=w.subarray(r,r+y);t[i]=(0,s.wQ)(a(n),h)}S[e]=t}return S}function u(e,t){const i=t.map((e=>Array.from(e).reverse()));return(t,s)=>{const[r,a,n,o]=i.map((i=>i.reduce(((i,s)=>e.add(e.mul(i,t),s)))));return t=e.div(r,a),s=e.mul(s,e.div(n,o)),{x:t,y:s}}}function l(e,t,i){if("function"!=typeof t)throw new Error("mapToCurve() must be defined");return{hashToCurve(s,r){const a=h(s,2,{...i,DST:i.DST,...r}),n=e.fromAffine(t(a[0])),o=e.fromAffine(t(a[1])),d=n.add(o).clearCofactor();return d.assertValidity(),d},encodeToCurve(s,r){const a=h(s,1,{...i,DST:i.encodeDST,...r}),n=e.fromAffine(t(a[0])).clearCofactor();return n.assertValidity(),n}}}},111:(e,t,i)=>{i.d(t,{DV:()=>w,Fp:()=>b,OP:()=>g,Pu:()=>S,Tu:()=>m,U_:()=>f,kK:()=>y,oA:()=>p,sQ:()=>l,wQ:()=>u});var s=i(2773);const r=BigInt(0),a=BigInt(1),n=BigInt(2),o=BigInt(3),d=BigInt(4),c=BigInt(5),h=BigInt(8);function u(e,t){const i=e%t;return i>=r?i:t+i}function l(e,t,i){if(i<=r||t<r)throw new Error("Expected power/modulo > 0");if(i===a)return r;let s=a;for(;t>r;)t&a&&(s=s*e%i),e=e*e%i,t>>=a;return s}function p(e,t,i){let s=e;for(;t-- >r;)s*=s,s%=i;return s}function f(e,t){if(e===r||t<=r)throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);let i=u(e,t),s=t,n=r,o=a,d=a,c=r;for(;i!==r;){const e=s/i,t=s%i,r=n-d*e,a=o-c*e;s=i,i=t,n=d,o=c,d=r,c=a}if(s!==a)throw new Error("invert: does not exist");return u(n,t)}BigInt(9),BigInt(16);const m=(e,t)=>(u(e,t)&a)===a,v=["create","isValid","is0","neg","inv","sqrt","sqr","eql","add","sub","mul","pow","div","addN","subN","mulN","sqrN"];function g(e){const t=v.reduce(((e,t)=>(e[t]="function",e)),{ORDER:"bigint",MASK:"bigint",BYTES:"isSafeInteger",BITS:"isSafeInteger"});return(0,s.validateObject)(e,t)}function y(e,t){const i=void 0!==t?t:e.toString(2).length;return{nBitLength:i,nByteLength:Math.ceil(i/8)}}function b(e,t,i=!1,p={}){if(e<=r)throw new Error(`Expected Fp ORDER > 0, got ${e}`);const{nBitLength:m,nByteLength:v}=y(e,t);if(v>2048)throw new Error("Field lengths over 2048 bytes are not supported");const g=function(e){if(e%d===o){const t=(e+a)/d;return function(e,i){const s=e.pow(i,t);if(!e.eql(e.sqr(s),i))throw new Error("Cannot find square root");return s}}if(e%h===c){const t=(e-c)/h;return function(e,i){const s=e.mul(i,n),r=e.pow(s,t),a=e.mul(i,r),o=e.mul(e.mul(a,n),r),d=e.mul(a,e.sub(o,e.ONE));if(!e.eql(e.sqr(d),i))throw new Error("Cannot find square root");return d}}return function(e){const t=(e-a)/n;let i,s,o;for(i=e-a,s=0;i%n===r;i/=n,s++);for(o=n;o<e&&l(o,t,e)!==e-a;o++);if(1===s){const t=(e+a)/d;return function(e,i){const s=e.pow(i,t);if(!e.eql(e.sqr(s),i))throw new Error("Cannot find square root");return s}}const c=(i+a)/n;return function(e,r){if(e.pow(r,t)===e.neg(e.ONE))throw new Error("Cannot find square root");let n=s,d=e.pow(e.mul(e.ONE,o),i),h=e.pow(r,c),u=e.pow(r,i);for(;!e.eql(u,e.ONE);){if(e.eql(u,e.ZERO))return e.ZERO;let t=1;for(let i=e.sqr(u);t<n&&!e.eql(i,e.ONE);t++)i=e.sqr(i);const i=e.pow(d,a<<BigInt(n-t-1));d=e.sqr(i),h=e.mul(h,i),u=e.mul(u,d),n=t}return h}}(e)}(e),b=Object.freeze({ORDER:e,BITS:m,BYTES:v,MASK:(0,s.bitMask)(m),ZERO:r,ONE:a,create:t=>u(t,e),isValid:t=>{if("bigint"!=typeof t)throw new Error("Invalid field element: expected bigint, got "+typeof t);return r<=t&&t<e},is0:e=>e===r,isOdd:e=>(e&a)===a,neg:t=>u(-t,e),eql:(e,t)=>e===t,sqr:t=>u(t*t,e),add:(t,i)=>u(t+i,e),sub:(t,i)=>u(t-i,e),mul:(t,i)=>u(t*i,e),pow:(e,t)=>function(e,t,i){if(i<r)throw new Error("Expected power > 0");if(i===r)return e.ONE;if(i===a)return t;let s=e.ONE,n=t;for(;i>r;)i&a&&(s=e.mul(s,n)),n=e.sqr(n),i>>=1n;return s}(b,e,t),div:(t,i)=>u(t*f(i,e),e),sqrN:e=>e*e,addN:(e,t)=>e+t,subN:(e,t)=>e-t,mulN:(e,t)=>e*t,inv:t=>f(t,e),sqrt:p.sqrt||(e=>g(b,e)),invertBatch:e=>function(e,t){const i=new Array(t.length),s=t.reduce(((t,s,r)=>e.is0(s)?t:(i[r]=t,e.mul(t,s))),e.ONE),r=e.inv(s);return t.reduceRight(((t,s,r)=>e.is0(s)?t:(i[r]=e.mul(t,i[r]),e.mul(t,s))),r),i}(b,e),cmov:(e,t,i)=>i?t:e,toBytes:e=>i?(0,s.numberToBytesLE)(e,v):(0,s.numberToBytesBE)(e,v),fromBytes:e=>{if(e.length!==v)throw new Error(`Fp.fromBytes: expected ${v}, got ${e.length}`);return i?(0,s.bytesToNumberLE)(e):(0,s.bytesToNumberBE)(e)}});return Object.freeze(b)}function w(e,t){if(!e.isOdd)throw new Error("Field doesn't have isOdd");const i=e.sqrt(t);return e.isOdd(i)?e.neg(i):i}function S(e,t,i=!1){const r=(e=(0,s.ensureBytes)("privateHash",e)).length,n=y(t).nByteLength+8;if(n<24||r<n||r>1024)throw new Error(`hashToPrivateScalar: expected ${n}-1024 bytes of input, got ${r}`);return u(i?(0,s.bytesToNumberLE)(e):(0,s.bytesToNumberBE)(e),t-a)+a}},2917:(e,t,i)=>{i.d(t,{I:()=>o});var s=i(111),r=i(2773);const a=BigInt(0),n=BigInt(1);function o(e){const t=(i=e,(0,r.validateObject)(i,{a:"bigint"},{montgomeryBits:"isSafeInteger",nByteLength:"isSafeInteger",adjustScalarBytes:"function",domain:"function",powPminus2:"function",Gu:"bigint"}),Object.freeze({...i}));var i;const{P:o}=t,d=e=>(0,s.wQ)(e,o),c=t.montgomeryBits,h=Math.ceil(c/8),u=t.nByteLength,l=t.adjustScalarBytes||(e=>e),p=t.powPminus2||(e=>(0,s.sQ)(e,o-BigInt(2),o));function f(e,t,i){const s=d(e*(t-i));return[t=d(t-s),i=d(i+s)]}function m(e){if("bigint"==typeof e&&a<=e&&e<o)return e;throw new Error("Expected valid scalar 0 < scalar < CURVE.P")}const v=(t.a-BigInt(2))/BigInt(4);function g(e){return(0,r.numberToBytesLE)(d(e),h)}function y(e,t){const i=function(e){const t=(0,r.ensureBytes)("u coordinate",e,h);return u===h&&(t[u-1]&=127),(0,r.bytesToNumberLE)(t)}(t),s=function(e,t){const i=m(e),s=m(t),r=i;let o,h=n,u=a,l=i,g=n,y=a;for(let e=BigInt(c-1);e>=a;e--){const t=s>>e&n;y^=t,o=f(y,h,l),h=o[0],l=o[1],o=f(y,u,g),u=o[0],g=o[1],y=t;const i=h+u,a=d(i*i),c=h-u,p=d(c*c),m=a-p,b=l+g,w=d((l-g)*i),S=d(b*c),P=w+S,k=w-S;l=d(P*P),g=d(r*d(k*k)),h=d(a*p),u=d(m*(a+d(v*m)))}o=f(y,h,l),h=o[0],l=o[1],o=f(y,u,g),u=o[0],g=o[1];const b=p(u);return d(h*b)}(i,function(e){const t=(0,r.ensureBytes)("scalar",e);if(t.length!==h&&t.length!==u)throw new Error(`Expected ${h} or ${u} bytes, got ${t.length}`);return(0,r.bytesToNumberLE)(l(t))}(e));if(s===a)throw new Error("Invalid private or public key received");return g(s)}const b=g(t.Gu);function w(e){return y(e,b)}return{scalarMult:y,scalarMultBase:w,getSharedSecret:(e,t)=>y(e,t),getPublicKey:e=>w(e),utils:{randomPrivateKey:()=>t.randomBytes(t.nByteLength)},GuBytes:b}}},2773:(e,t,i)=>{i.r(t),i.d(t,{bitGet:()=>P,bitLen:()=>S,bitMask:()=>O,bitSet:()=>k,bytesToHex:()=>d,bytesToNumberBE:()=>l,bytesToNumberLE:()=>p,concatBytes:()=>y,createHmacDrbg:()=>G,ensureBytes:()=>g,equalBytes:()=>b,hexToBytes:()=>u,hexToNumber:()=>h,numberToBytesBE:()=>f,numberToBytesLE:()=>m,numberToHexUnpadded:()=>c,numberToVarBytesBE:()=>v,utf8ToBytes:()=>w,validateObject:()=>C});const s=BigInt(0),r=BigInt(1),a=BigInt(2),n=e=>e instanceof Uint8Array,o=Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));function d(e){if(!n(e))throw new Error("Uint8Array expected");let t="";for(let i=0;i<e.length;i++)t+=o[e[i]];return t}function c(e){const t=e.toString(16);return 1&t.length?`0${t}`:t}function h(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);return BigInt(""===e?"0":`0x${e}`)}function u(e){if("string"!=typeof e)throw new Error("hex string expected, got "+typeof e);if(e.length%2)throw new Error("hex string is invalid: unpadded "+e.length);const t=new Uint8Array(e.length/2);for(let i=0;i<t.length;i++){const s=2*i,r=e.slice(s,s+2),a=Number.parseInt(r,16);if(Number.isNaN(a)||a<0)throw new Error("invalid byte sequence");t[i]=a}return t}function l(e){return h(d(e))}function p(e){if(!n(e))throw new Error("Uint8Array expected");return h(d(Uint8Array.from(e).reverse()))}const f=(e,t)=>u(e.toString(16).padStart(2*t,"0")),m=(e,t)=>f(e,t).reverse(),v=e=>u(c(e));function g(e,t,i){let s;if("string"==typeof t)try{s=u(t)}catch(i){throw new Error(`${e} must be valid hex string, got "${t}". Cause: ${i}`)}else{if(!n(t))throw new Error(`${e} must be hex string or Uint8Array`);s=Uint8Array.from(t)}const r=s.length;if("number"==typeof i&&r!==i)throw new Error(`${e} expected ${i} bytes, got ${r}`);return s}function y(...e){const t=new Uint8Array(e.reduce(((e,t)=>e+t.length),0));let i=0;return e.forEach((e=>{if(!n(e))throw new Error("Uint8Array expected");t.set(e,i),i+=e.length})),t}function b(e,t){if(e.length!==t.length)return!1;for(let i=0;i<e.length;i++)if(e[i]!==t[i])return!1;return!0}function w(e){if("string"!=typeof e)throw new Error("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}function S(e){let t;for(t=0;e>0n;e>>=r,t+=1);return t}const P=(e,t)=>e>>BigInt(t)&1n,k=(e,t,i)=>e|(i?r:s)<<BigInt(t),O=e=>(a<<BigInt(e-1))-r,T=e=>new Uint8Array(e),A=e=>Uint8Array.from(e);function G(e,t,i){if("number"!=typeof e||e<2)throw new Error("hashLen must be a number");if("number"!=typeof t||t<2)throw new Error("qByteLen must be a number");if("function"!=typeof i)throw new Error("hmacFn must be a function");let s=T(e),r=T(e),a=0;const n=()=>{s.fill(1),r.fill(0),a=0},o=(...e)=>i(r,s,...e),d=(e=T())=>{r=o(A([0]),e),s=o(),0!==e.length&&(r=o(A([1]),e),s=o())},c=()=>{if(a++>=1e3)throw new Error("drbg: tried 1000 values");let e=0;const i=[];for(;e<t;){s=o();const t=s.slice();i.push(t),e+=s.length}return y(...i)};return(e,t)=>{let i;for(n(),d(e);!(i=t(c()));)d();return n(),i}}const I={bigint:e=>"bigint"==typeof e,function:e=>"function"==typeof e,boolean:e=>"boolean"==typeof e,string:e=>"string"==typeof e,isSafeInteger:e=>Number.isSafeInteger(e),array:e=>Array.isArray(e),field:(e,t)=>t.Fp.isValid(e),hash:e=>"function"==typeof e&&Number.isSafeInteger(e.outputLen)};function C(e,t,i={}){const s=(t,i,s)=>{const r=I[i];if("function"!=typeof r)throw new Error(`Invalid validator "${i}", expected function`);const a=e[t];if(!(s&&void 0===a||r(a,e)))throw new Error(`Invalid param ${String(t)}=${a} (${typeof a}), expected ${i}`)};for(const[e,i]of Object.entries(t))s(e,i,!1);for(const[e,t]of Object.entries(i))s(e,t,!0);return e}},9270:(e,t,i)=>{i.d(t,{L4:()=>l,e4:()=>u});var s=i(111),r=i(2773),a=i(8265);const{bytesToNumberBE:n,hexToBytes:o}=r,d={Err:class extends Error{constructor(e=""){super(e)}},_parseInt(e){const{Err:t}=d;if(e.length<2||2!==e[0])throw new t("Invalid signature integer tag");const i=e[1],s=e.subarray(2,i+2);if(!i||s.length!==i)throw new t("Invalid signature integer: wrong length");if(0===s[0]&&s[1]<=127)throw new t("Invalid signature integer: trailing length");return{d:n(s),l:e.subarray(i+2)}},toSig(e){const{Err:t}=d,i="string"==typeof e?o(e):e;if(!(i instanceof Uint8Array))throw new Error("ui8a expected");let s=i.length;if(s<2||48!=i[0])throw new t("Invalid signature tag");if(i[1]!==s-2)throw new t("Invalid signature: incorrect length");const{d:r,l:a}=d._parseInt(i.subarray(2)),{d:n,l:c}=d._parseInt(a);if(c.length)throw new t("Invalid signature: left bytes after parsing");return{r,s:n}},hexFromSig(e){const t=e=>Number.parseInt(e[0],16)>=8?"00"+e:e,i=e=>{const t=e.toString(16);return 1&t.length?`0${t}`:t},s=t(i(e.s)),r=t(i(e.r)),a=s.length/2,n=r.length/2,o=i(a),d=i(n);return`30${i(n+a+4)}02${d}${r}02${o}${s}`}},c=BigInt(0),h=BigInt(1);function u(e){const t=function(e){const t=(0,a.K)(e);return r.validateObject(t,{hash:"hash",hmac:"function",randomBytes:"function"},{bits2int:"function",bits2int_modN:"function",lowS:"boolean"}),Object.freeze({lowS:!0,...t})}(e),i=t.n,n=t.Fp,o=n.BYTES+1,u=2*n.BYTES+1;function l(e){return s.wQ(e,i)}function p(e){return s.U_(e,i)}const{ProjectivePoint:f,normPrivateKeyToScalar:m,weierstrassEquation:v,isWithinCurveOrder:g}=function(e){const t=function(e){const t=(0,a.K)(e);r.validateObject(t,{a:"field",b:"field",fromBytes:"function",toBytes:"function"},{allowedPrivateKeyLengths:"array",wrapPrivateKey:"boolean",isTorsionFree:"function",clearCofactor:"function",allowInfinityPoint:"boolean"});const{endo:i,Fp:s,a:n}=t;if(i){if(!s.eql(n,s.ZERO))throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");if("object"!=typeof i||"bigint"!=typeof i.beta||"function"!=typeof i.splitScalar)throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")}return Object.freeze({...t})}(e),{Fp:i}=t;function n(e){const{a:s,b:r}=t,a=i.sqr(e),n=i.mul(a,e);return i.add(i.add(n,i.mul(e,s)),r)}function o(e){return"bigint"==typeof e&&c<e&&e<t.n}function d(e){if(!o(e))throw new Error("Expected valid bigint: 0 < bigint < curve.n")}function u(e){const{allowedPrivateKeyLengths:i,nByteLength:a,wrapPrivateKey:n,n:o}=t;if(i&&"bigint"!=typeof e){if(e instanceof Uint8Array&&(e=r.bytesToHex(e)),"string"!=typeof e||!i.includes(e.length))throw new Error("Invalid key");e=e.padStart(2*a,"0")}let c;try{c="bigint"==typeof e?e:r.bytesToNumberBE((0,r.ensureBytes)("private key",e,a))}catch(t){throw new Error(`private key must be ${a} bytes, hex or bigint, not ${typeof e}`)}return n&&(c=s.wQ(c,o)),d(c),c}const l=new Map;function p(e){if(!(e instanceof f))throw new Error("ProjectivePoint expected")}class f{constructor(e,t,s){if(this.px=e,this.py=t,this.pz=s,null==e||!i.isValid(e))throw new Error("x required");if(null==t||!i.isValid(t))throw new Error("y required");if(null==s||!i.isValid(s))throw new Error("z required")}static fromAffine(e){const{x:t,y:s}=e||{};if(!e||!i.isValid(t)||!i.isValid(s))throw new Error("invalid affine point");if(e instanceof f)throw new Error("projective point not allowed");const r=e=>i.eql(e,i.ZERO);return r(t)&&r(s)?f.ZERO:new f(t,s,i.ONE)}get x(){return this.toAffine().x}get y(){return this.toAffine().y}static normalizeZ(e){const t=i.invertBatch(e.map((e=>e.pz)));return e.map(((e,i)=>e.toAffine(t[i]))).map(f.fromAffine)}static fromHex(e){const i=f.fromAffine(t.fromBytes((0,r.ensureBytes)("pointHex",e)));return i.assertValidity(),i}static fromPrivateKey(e){return f.BASE.multiply(u(e))}_setWindowSize(e){this._WINDOW_SIZE=e,l.delete(this)}assertValidity(){if(this.is0()){if(t.allowInfinityPoint)return;throw new Error("bad point: ZERO")}const{x:e,y:s}=this.toAffine();if(!i.isValid(e)||!i.isValid(s))throw new Error("bad point: x or y not FE");const r=i.sqr(s),a=n(e);if(!i.eql(r,a))throw new Error("bad point: equation left != right");if(!this.isTorsionFree())throw new Error("bad point: not in prime-order subgroup")}hasEvenY(){const{y:e}=this.toAffine();if(i.isOdd)return!i.isOdd(e);throw new Error("Field doesn't support isOdd")}equals(e){p(e);const{px:t,py:s,pz:r}=this,{px:a,py:n,pz:o}=e,d=i.eql(i.mul(t,o),i.mul(a,r)),c=i.eql(i.mul(s,o),i.mul(n,r));return d&&c}negate(){return new f(this.px,i.neg(this.py),this.pz)}double(){const{a:e,b:s}=t,r=i.mul(s,3n),{px:a,py:n,pz:o}=this;let d=i.ZERO,c=i.ZERO,h=i.ZERO,u=i.mul(a,a),l=i.mul(n,n),p=i.mul(o,o),m=i.mul(a,n);return m=i.add(m,m),h=i.mul(a,o),h=i.add(h,h),d=i.mul(e,h),c=i.mul(r,p),c=i.add(d,c),d=i.sub(l,c),c=i.add(l,c),c=i.mul(d,c),d=i.mul(m,d),h=i.mul(r,h),p=i.mul(e,p),m=i.sub(u,p),m=i.mul(e,m),m=i.add(m,h),h=i.add(u,u),u=i.add(h,u),u=i.add(u,p),u=i.mul(u,m),c=i.add(c,u),p=i.mul(n,o),p=i.add(p,p),u=i.mul(p,m),d=i.sub(d,u),h=i.mul(p,l),h=i.add(h,h),h=i.add(h,h),new f(d,c,h)}add(e){p(e);const{px:s,py:r,pz:a}=this,{px:n,py:o,pz:d}=e;let c=i.ZERO,h=i.ZERO,u=i.ZERO;const l=t.a,m=i.mul(t.b,3n);let v=i.mul(s,n),g=i.mul(r,o),y=i.mul(a,d),b=i.add(s,r),w=i.add(n,o);b=i.mul(b,w),w=i.add(v,g),b=i.sub(b,w),w=i.add(s,a);let S=i.add(n,d);return w=i.mul(w,S),S=i.add(v,y),w=i.sub(w,S),S=i.add(r,a),c=i.add(o,d),S=i.mul(S,c),c=i.add(g,y),S=i.sub(S,c),u=i.mul(l,w),c=i.mul(m,y),u=i.add(c,u),c=i.sub(g,u),u=i.add(g,u),h=i.mul(c,u),g=i.add(v,v),g=i.add(g,v),y=i.mul(l,y),w=i.mul(m,w),g=i.add(g,y),y=i.sub(v,y),y=i.mul(l,y),w=i.add(w,y),v=i.mul(g,w),h=i.add(h,v),v=i.mul(S,w),c=i.mul(b,c),c=i.sub(c,v),v=i.mul(b,g),u=i.mul(S,u),u=i.add(u,v),new f(c,h,u)}subtract(e){return this.add(e.negate())}is0(){return this.equals(f.ZERO)}wNAF(e){return v.wNAFCached(this,l,e,(e=>{const t=i.invertBatch(e.map((e=>e.pz)));return e.map(((e,i)=>e.toAffine(t[i]))).map(f.fromAffine)}))}multiplyUnsafe(e){const s=f.ZERO;if(e===c)return s;if(d(e),e===h)return this;const{endo:r}=t;if(!r)return v.unsafeLadder(this,e);let{k1neg:a,k1:n,k2neg:o,k2:u}=r.splitScalar(e),l=s,p=s,m=this;for(;n>c||u>c;)n&h&&(l=l.add(m)),u&h&&(p=p.add(m)),m=m.double(),n>>=h,u>>=h;return a&&(l=l.negate()),o&&(p=p.negate()),p=new f(i.mul(p.px,r.beta),p.py,p.pz),l.add(p)}multiply(e){d(e);let s,r,a=e;const{endo:n}=t;if(n){const{k1neg:e,k1:t,k2neg:o,k2:d}=n.splitScalar(a);let{p:c,f:h}=this.wNAF(t),{p:u,f:l}=this.wNAF(d);c=v.constTimeNegate(e,c),u=v.constTimeNegate(o,u),u=new f(i.mul(u.px,n.beta),u.py,u.pz),s=c.add(u),r=h.add(l)}else{const{p:e,f:t}=this.wNAF(a);s=e,r=t}return f.normalizeZ([s,r])[0]}multiplyAndAddUnsafe(e,t,i){const s=f.BASE,r=(e,t)=>t!==c&&t!==h&&e.equals(s)?e.multiply(t):e.multiplyUnsafe(t),a=r(this,t).add(r(e,i));return a.is0()?void 0:a}toAffine(e){const{px:t,py:s,pz:r}=this,a=this.is0();null==e&&(e=a?i.ONE:i.inv(r));const n=i.mul(t,e),o=i.mul(s,e),d=i.mul(r,e);if(a)return{x:i.ZERO,y:i.ZERO};if(!i.eql(d,i.ONE))throw new Error("invZ was invalid");return{x:n,y:o}}isTorsionFree(){const{h:e,isTorsionFree:i}=t;if(e===h)return!0;if(i)return i(f,this);throw new Error("isTorsionFree() has not been declared for the elliptic curve")}clearCofactor(){const{h:e,clearCofactor:i}=t;return e===h?this:i?i(f,this):this.multiplyUnsafe(t.h)}toRawBytes(e=!0){return this.assertValidity(),t.toBytes(f,this,e)}toHex(e=!0){return r.bytesToHex(this.toRawBytes(e))}}f.BASE=new f(t.Gx,t.Gy,i.ONE),f.ZERO=new f(i.ZERO,i.ONE,i.ZERO);const m=t.nBitLength,v=(0,a.M)(f,t.endo?Math.ceil(m/2):m);return{ProjectivePoint:f,normPrivateKeyToScalar:u,weierstrassEquation:n,isWithinCurveOrder:o}}({...t,toBytes(e,t,i){const s=t.toAffine(),a=n.toBytes(s.x),o=r.concatBytes;return i?o(Uint8Array.from([t.hasEvenY()?2:3]),a):o(Uint8Array.from([4]),a,n.toBytes(s.y))},fromBytes(e){const t=e.length,i=e[0],s=e.subarray(1);if(t!==o||2!==i&&3!==i){if(t===u&&4===i)return{x:n.fromBytes(s.subarray(0,n.BYTES)),y:n.fromBytes(s.subarray(n.BYTES,2*n.BYTES))};throw new Error(`Point of length ${t} was invalid. Expected ${o} compressed bytes or ${u} uncompressed bytes`)}{const e=r.bytesToNumberBE(s);if(!(c<(a=e)&&a<n.ORDER))throw new Error("Point is not on curve");const t=v(e);let o=n.sqrt(t);return 1==(1&i)!=((o&h)===h)&&(o=n.neg(o)),{x:e,y:o}}var a}}),y=e=>r.bytesToHex(r.numberToBytesBE(e,t.nByteLength));function b(e){return e>i>>h}const w=(e,t,i)=>r.bytesToNumberBE(e.slice(t,i));class S{constructor(e,t,i){this.r=e,this.s=t,this.recovery=i,this.assertValidity()}static fromCompact(e){const i=t.nByteLength;return e=(0,r.ensureBytes)("compactSignature",e,2*i),new S(w(e,0,i),w(e,i,2*i))}static fromDER(e){const{r:t,s:i}=d.toSig((0,r.ensureBytes)("DER",e));return new S(t,i)}assertValidity(){if(!g(this.r))throw new Error("r must be 0 < r < CURVE.n");if(!g(this.s))throw new Error("s must be 0 < s < CURVE.n")}addRecoveryBit(e){return new S(this.r,this.s,e)}recoverPublicKey(e){const{r:i,s,recovery:a}=this,o=T((0,r.ensureBytes)("msgHash",e));if(null==a||![0,1,2,3].includes(a))throw new Error("recovery id invalid");const d=2===a||3===a?i+t.n:i;if(d>=n.ORDER)throw new Error("recovery id 2 or 3 invalid");const c=0==(1&a)?"02":"03",h=f.fromHex(c+y(d)),u=p(d),m=l(-o*u),v=l(s*u),g=f.BASE.multiplyAndAddUnsafe(h,m,v);if(!g)throw new Error("point at infinify");return g.assertValidity(),g}hasHighS(){return b(this.s)}normalizeS(){return this.hasHighS()?new S(this.r,l(-this.s),this.recovery):this}toDERRawBytes(){return r.hexToBytes(this.toDERHex())}toDERHex(){return d.hexFromSig({r:this.r,s:this.s})}toCompactRawBytes(){return r.hexToBytes(this.toCompactHex())}toCompactHex(){return y(this.r)+y(this.s)}}const P={isValidPrivateKey(e){try{return m(e),!0}catch(e){return!1}},normPrivateKeyToScalar:m,randomPrivateKey:()=>{const e=t.randomBytes(n.BYTES+8),a=s.Pu(e,i);return r.numberToBytesBE(a,t.nByteLength)},precompute:(e=8,t=f.BASE)=>(t._setWindowSize(e),t.multiply(BigInt(3)),t)};function k(e){const t=e instanceof Uint8Array,i="string"==typeof e,s=(t||i)&&e.length;return t?s===o||s===u:i?s===2*o||s===2*u:e instanceof f}const O=t.bits2int||function(e){const i=r.bytesToNumberBE(e),s=8*e.length-t.nBitLength;return s>0?i>>BigInt(s):i},T=t.bits2int_modN||function(e){return l(O(e))},A=r.bitMask(t.nBitLength);function G(e){if("bigint"!=typeof e)throw new Error("bigint expected");if(!(c<=e&&e<A))throw new Error(`bigint expected < 2^${t.nBitLength}`);return r.numberToBytesBE(e,t.nByteLength)}const I={lowS:t.lowS,prehash:!1},C={lowS:t.lowS,prehash:!1};return f.BASE._setWindowSize(8),{CURVE:t,getPublicKey:function(e,t=!0){return f.fromPrivateKey(e).toRawBytes(t)},getSharedSecret:function(e,t,i=!0){if(k(e))throw new Error("first arg must be private key");if(!k(t))throw new Error("second arg must be public key");return f.fromHex(t).multiply(m(e)).toRawBytes(i)},sign:function(e,i,s=I){const{seed:a,k2sig:o}=function(e,i,s=I){if(["recovered","canonical"].some((e=>e in s)))throw new Error("sign() legacy options not supported");const{hash:a,randomBytes:o}=t;let{lowS:d,prehash:u,extraEntropy:v}=s;null==d&&(d=!0),e=(0,r.ensureBytes)("msgHash",e),u&&(e=(0,r.ensureBytes)("prehashed msgHash",a(e)));const y=T(e),w=m(i),P=[G(w),G(y)];if(null!=v){const e=!0===v?o(n.BYTES):v;P.push((0,r.ensureBytes)("extraEntropy",e,n.BYTES))}const k=r.concatBytes(...P),A=y;return{seed:k,k2sig:function(e){const t=O(e);if(!g(t))return;const i=p(t),s=f.BASE.multiply(t).toAffine(),r=l(s.x);if(r===c)return;const a=l(i*l(A+r*w));if(a===c)return;let n=(s.x===r?0:2)|Number(s.y&h),o=a;return d&&b(a)&&(o=function(e){return b(e)?l(-e):e}(a),n^=1),new S(r,o,n)}}}(e,i,s);return r.createHmacDrbg(t.hash.outputLen,t.nByteLength,t.hmac)(a,o)},verify:function(e,i,s,a=C){const n=e;if(i=(0,r.ensureBytes)("msgHash",i),s=(0,r.ensureBytes)("publicKey",s),"strict"in a)throw new Error("options.strict was renamed to lowS");const{lowS:o,prehash:c}=a;let h,u;try{if("string"==typeof n||n instanceof Uint8Array)try{h=S.fromDER(n)}catch(e){if(!(e instanceof d.Err))throw e;h=S.fromCompact(n)}else{if("object"!=typeof n||"bigint"!=typeof n.r||"bigint"!=typeof n.s)throw new Error("PARSE");{const{r:e,s:t}=n;h=new S(e,t)}}u=f.fromHex(s)}catch(e){if("PARSE"===e.message)throw new Error("signature must be Signature instance, Uint8Array or hex string");return!1}if(o&&h.hasHighS())return!1;c&&(i=t.hash(i));const{r:m,s:v}=h,g=T(i),y=p(v),b=l(g*y),w=l(m*y),P=f.BASE.multiplyAndAddUnsafe(u,b,w)?.toAffine();return!!P&&l(P.x)===m},ProjectivePoint:f,Signature:S,utils:P}}function l(e,t){if(s.OP(e),!e.isValid(t.A)||!e.isValid(t.B)||!e.isValid(t.Z))throw new Error("mapToCurveSimpleSWU: invalid opts");const i=function(e,t){const i=e.ORDER;let s=0n;for(let e=i-1n;e%2n===0n;e/=2n)s+=1n;const r=s,a=(i-1n)/2n**r,n=(a-1n)/2n,o=2n**r-1n,d=2n**(r-1n),c=e.pow(t,a),h=e.pow(t,(a+1n)/2n);let u=(t,i)=>{let s=c,a=e.pow(i,o),u=e.sqr(a);u=e.mul(u,i);let l=e.mul(t,u);l=e.pow(l,n),l=e.mul(l,a),a=e.mul(l,i),u=e.mul(l,t);let p=e.mul(u,a);l=e.pow(p,d);let f=e.eql(l,e.ONE);a=e.mul(u,h),l=e.mul(p,s),u=e.cmov(a,u,f),p=e.cmov(l,p,f);for(let t=r;t>1;t--){let i=2n**(t-2n),r=e.pow(p,i);const n=e.eql(r,e.ONE);a=e.mul(u,s),s=e.mul(s,s),r=e.mul(p,s),u=e.cmov(a,u,n),p=e.cmov(r,p,n)}return{isValid:f,value:u}};if(e.ORDER%4n===3n){const i=(e.ORDER-3n)/4n,s=e.sqrt(e.neg(t));u=(t,r)=>{let a=e.sqr(r);const n=e.mul(t,r);a=e.mul(a,n);let o=e.pow(a,i);o=e.mul(o,n);const d=e.mul(o,s),c=e.mul(e.sqr(o),r),h=e.eql(c,t);return{isValid:h,value:e.cmov(d,o,h)}}}return u}(e,t.Z);if(!e.isOdd)throw new Error("Fp.isOdd is not implemented!");return s=>{let r,a,n,o,d,c,h,u;r=e.sqr(s),r=e.mul(r,t.Z),a=e.sqr(r),a=e.add(a,r),n=e.add(a,e.ONE),n=e.mul(n,t.B),o=e.cmov(t.Z,e.neg(a),!e.eql(a,e.ZERO)),o=e.mul(o,t.A),a=e.sqr(n),c=e.sqr(o),d=e.mul(c,t.A),a=e.add(a,d),a=e.mul(a,n),c=e.mul(c,o),d=e.mul(c,t.B),a=e.add(a,d),h=e.mul(r,n);const{isValid:l,value:p}=i(a,c);u=e.mul(r,s),u=e.mul(u,p),h=e.cmov(h,n,l),u=e.cmov(u,p,l);const f=e.isOdd(s)===e.isOdd(u);return u=e.cmov(e.neg(u),u,f),h=e.div(h,o),{x:h,y:u}}}},8817:(e,t,i)=>{i.d(t,{UN:()=>T});var s=i(7110),r=i(8006),a=i(6753),n=i(2917),o=i(111),d=i(2773),c=i(4945);const h=BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949"),u=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),l=BigInt(0),p=BigInt(1),f=BigInt(2),m=BigInt(5),v=BigInt(10),g=BigInt(20),y=BigInt(40),b=BigInt(80);function w(e){const t=h,i=e*e%t*e%t,s=(0,o.oA)(i,f,t)*i%t,r=(0,o.oA)(s,p,t)*e%t,a=(0,o.oA)(r,m,t)*r%t,n=(0,o.oA)(a,v,t)*a%t,d=(0,o.oA)(n,g,t)*n%t,c=(0,o.oA)(d,y,t)*d%t,u=(0,o.oA)(c,b,t)*c%t,l=(0,o.oA)(u,b,t)*c%t,w=(0,o.oA)(l,v,t)*a%t;return{pow_p_5_8:(0,o.oA)(w,f,t)*e%t,b2:i}}function S(e){return e[0]&=248,e[31]&=127,e[31]|=64,e}function P(e,t){const i=h,s=(0,o.wQ)(t*t*t,i),r=w(e*(0,o.wQ)(s*s*t,i)).pow_p_5_8;let a=(0,o.wQ)(e*s*r,i);const n=(0,o.wQ)(t*a*a,i),d=a,c=(0,o.wQ)(a*u,i),l=n===e,p=n===(0,o.wQ)(-e,i),f=n===(0,o.wQ)(-e*u,i);return l&&(a=d),(p||f)&&(a=c),(0,o.Tu)(a,i)&&(a=(0,o.wQ)(-a,i)),{isValid:l||p,value:a}}const k=(0,o.Fp)(h,void 0,!0),O={a:BigInt(-1),d:BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"),Fp:k,n:BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"),h:BigInt(8),Gx:BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"),Gy:BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"),hash:s.o,randomBytes:r.O6,adjustScalarBytes:S,uvRatio:P},T=(0,a.e)(O);function A(e,t,i){if(t.length>255)throw new Error("Context is too big");return(0,r.eV)((0,r.iY)("SigEd25519 no Ed25519 collisions"),new Uint8Array([i?1:0,t.length]),t,e)}(0,a.e)({...O,domain:A}),(0,a.e)({...O,domain:A,preHash:s.o}),(0,n.I)({P:h,a:BigInt(486662),montgomeryBits:255,nByteLength:32,Gu:BigInt(9),powPminus2:e=>{const t=h,{pow_p_5_8:i,b2:s}=w(e);return(0,o.wQ)((0,o.oA)(i,BigInt(3),t)*s,t)},adjustScalarBytes:S,randomBytes:r.O6});const G=(k.ORDER+BigInt(3))/BigInt(8),I=k.pow(f,G),C=k.sqrt(k.neg(k.ONE)),M=(k.ORDER-BigInt(5))/BigInt(8),x=BigInt(486662),V=(0,o.DV)(k,k.neg(BigInt(486664)));const{hashToCurve:E,encodeToCurve:B}=c.V1(T.ExtendedPoint,(e=>function(e){const{xMn:t,xMd:i,yMn:s,yMd:r}=function(e){let t=k.sqr(e);t=k.mul(t,f);let i=k.add(t,k.ONE),s=k.neg(x),r=k.sqr(i),a=k.mul(r,i),n=k.mul(t,x);n=k.mul(n,s),n=k.add(n,r),n=k.mul(n,s);let o=k.sqr(a);r=k.sqr(o),o=k.mul(o,a),o=k.mul(o,n),r=k.mul(r,o);let d=k.pow(r,M);d=k.mul(d,o);let c=k.mul(d,C);r=k.sqr(d),r=k.mul(r,a);let h=k.eql(r,n),u=k.cmov(c,d,h),l=k.mul(s,t),p=k.mul(d,e);p=k.mul(p,I);let m=k.mul(p,C),v=k.mul(n,t);r=k.sqr(p),r=k.mul(r,a);let g=k.eql(r,v),y=k.cmov(m,p,g);r=k.sqr(u),r=k.mul(r,a);let b=k.eql(r,n),w=k.cmov(l,s,b),S=k.cmov(y,u,b),P=k.isOdd(S);return S=k.cmov(S,k.neg(S),b!==P),{xMn:w,xMd:i,yMn:S,yMd:1n}}(e);let a=k.mul(t,r);a=k.mul(a,V);let n=k.mul(i,s),o=k.sub(t,i),d=k.add(t,i),c=k.mul(n,d),h=k.eql(c,k.ZERO);a=k.cmov(a,k.ZERO,h),n=k.cmov(n,k.ONE,h),o=k.cmov(o,k.ONE,h),d=k.cmov(d,k.ONE,h);const u=k.invertBatch([n,d]);return{x:k.mul(a,u[0]),y:k.mul(o,u[1])}}(e[0])),{DST:"edwards25519_XMD:SHA-512_ELL2_RO_",encodeDST:"edwards25519_XMD:SHA-512_ELL2_NU_",p:k.ORDER,m:1,k:128,expand:"xmd",hash:s.o});function _(e){if(!(e instanceof K))throw new Error("RistrettoPoint expected")}const R=BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752"),N=BigInt("25063068953384623474111414158702152701244531502492656460079210482610430750235"),L=BigInt("54469307008909316920995813868745141605393597292927456921205312896311721017578"),D=BigInt("1159843021668779879193775521855586647937357759715417654439879720876111806838"),F=BigInt("40440834346308536858101042469323190826248399146238708352240133220865137265952"),q=e=>P(p,e),H=BigInt("0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),U=e=>T.CURVE.Fp.create((0,d.bytesToNumberLE)(e)&H);function W(e){const{d:t}=T.CURVE,i=T.CURVE.Fp.ORDER,s=T.CURVE.Fp.create,r=s(R*e*e),a=s((r+p)*D);let n=BigInt(-1);const d=s((n-t*r)*s(r+t));let{isValid:c,value:h}=P(a,d),u=s(h*e);(0,o.Tu)(u,i)||(u=s(-u)),c||(h=u),c||(n=r);const l=s(n*(r-p)*F-d),f=h*h,m=s((h+h)*d),v=s(l*N),g=s(p-f),y=s(p+f);return new T.ExtendedPoint(s(m*y),s(g*v),s(v*y),s(m*g))}class K{constructor(e){this.ep=e}static fromAffine(e){return new K(T.ExtendedPoint.fromAffine(e))}static hashToCurve(e){e=(0,d.ensureBytes)("ristrettoHash",e,64);const t=W(U(e.slice(0,32))),i=W(U(e.slice(32,64)));return new K(t.add(i))}static fromHex(e){e=(0,d.ensureBytes)("ristrettoHex",e,32);const{a:t,d:i}=T.CURVE,s=T.CURVE.Fp.ORDER,r=T.CURVE.Fp.create,a="RistrettoPoint.fromHex: the hex is not valid encoding of RistrettoPoint",n=U(e);if(!(0,d.equalBytes)((0,d.numberToBytesLE)(n,32),e)||(0,o.Tu)(n,s))throw new Error(a);const c=r(n*n),h=r(p+t*c),u=r(p-t*c),f=r(h*h),m=r(u*u),v=r(t*i*f-m),{isValid:g,value:y}=q(r(v*m)),b=r(y*u),w=r(y*b*v);let S=r((n+n)*b);(0,o.Tu)(S,s)&&(S=r(-S));const P=r(h*w),k=r(S*P);if(!g||(0,o.Tu)(k,s)||P===l)throw new Error(a);return new K(new T.ExtendedPoint(S,P,p,k))}toRawBytes(){let{ex:e,ey:t,ez:i,et:s}=this.ep;const r=T.CURVE.Fp.ORDER,a=T.CURVE.Fp.create,n=a(a(i+t)*a(i-t)),c=a(e*t),h=a(c*c),{value:u}=q(a(n*h)),l=a(u*n),p=a(u*c),f=a(l*p*s);let m;if((0,o.Tu)(s*f,r)){let i=a(t*R),s=a(e*R);e=i,t=s,m=a(l*L)}else m=p;(0,o.Tu)(e*f,r)&&(t=a(-t));let v=a((i-t)*m);return(0,o.Tu)(v,r)&&(v=a(-v)),(0,d.numberToBytesLE)(v,32)}toHex(){return(0,d.bytesToHex)(this.toRawBytes())}toString(){return this.toHex()}equals(e){_(e);const{ex:t,ey:i}=this.ep,{ex:s,ey:r}=e.ep,a=T.CURVE.Fp.create,n=a(t*r)===a(i*s),o=a(i*r)===a(t*s);return n||o}add(e){return _(e),new K(this.ep.add(e.ep))}subtract(e){return _(e),new K(this.ep.subtract(e.ep))}multiply(e){return new K(this.ep.multiply(e))}multiplyUnsafe(e){return new K(this.ep.multiplyUnsafe(e))}}K.BASE=new K(T.ExtendedPoint.BASE),K.ZERO=new K(T.ExtendedPoint.ZERO)},1339:(e,t,i)=>{i.d(t,{kA:()=>v});var s=i(1372),r=(i(8006),i(111)),a=i(9270),n=i(2773),o=i(4945),d=i(77);const c=BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),h=BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),u=BigInt(1),l=BigInt(2),p=(e,t)=>(e+t/l)/t;function f(e){const t=c,i=BigInt(3),s=BigInt(6),a=BigInt(11),n=BigInt(22),o=BigInt(23),d=BigInt(44),h=BigInt(88),u=e*e*e%t,p=u*u*e%t,f=(0,r.oA)(p,i,t)*p%t,v=(0,r.oA)(f,i,t)*p%t,g=(0,r.oA)(v,l,t)*u%t,y=(0,r.oA)(g,a,t)*g%t,b=(0,r.oA)(y,n,t)*y%t,w=(0,r.oA)(b,d,t)*b%t,S=(0,r.oA)(w,h,t)*w%t,P=(0,r.oA)(S,d,t)*b%t,k=(0,r.oA)(P,i,t)*p%t,O=(0,r.oA)(k,o,t)*y%t,T=(0,r.oA)(O,s,t)*u%t,A=(0,r.oA)(T,l,t);if(!m.eql(m.sqr(A),e))throw new Error("Cannot find square root");return A}const m=(0,r.Fp)(c,void 0,void 0,{sqrt:f}),v=(0,d._)({a:BigInt(0),b:BigInt(7),Fp:m,n:h,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),h:BigInt(1),lowS:!0,endo:{beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar:e=>{const t=h,i=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),s=-u*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),a=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),n=i,o=BigInt("0x100000000000000000000000000000000"),d=p(n*e,t),c=p(-s*e,t);let l=(0,r.wQ)(e-d*i-c*a,t),f=(0,r.wQ)(-d*s-c*n,t);const m=l>o,v=f>o;if(m&&(l=t-l),v&&(f=t-f),l>o||f>o)throw new Error("splitScalar: Endomorphism failed, k="+e);return{k1neg:m,k1:l,k2neg:v,k2:f}}}},s.J);BigInt(0);v.ProjectivePoint;v.utils.randomPrivateKey,n.numberToBytesBE,n.bytesToNumberBE,r.wQ;const g=o.i(m,[["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7","0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581","0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262","0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b","0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14","0x0000000000000000000000000000000000000000000000000000000000000001"],["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c","0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3","0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931","0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b","0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573","0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f","0x0000000000000000000000000000000000000000000000000000000000000001"]].map((e=>e.map((e=>BigInt(e)))))),y=(0,a.L4)(m,{A:BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),B:BigInt("1771"),Z:m.create(BigInt("-11"))}),{hashToCurve:b,encodeToCurve:w}=o.V1(v.ProjectivePoint,(e=>{const{x:t,y:i}=y(m.create(e[0]));return g(t,i)}),{DST:"secp256k1_XMD:SHA-256_SSWU_RO_",encodeDST:"secp256k1_XMD:SHA-256_SSWU_NU_",p:m.ORDER,m:1,k:128,expand:"xmd",hash:s.J})},3373:(e,t,i)=>{function s(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function r(e,...t){if(!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}i.d(t,{ZP:()=>a});const a={number:s,bool:function(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)},bytes:r,hash:function(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");s(e.outputLen),s(e.blockLen)},exists:function(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")},output:function(e,t){r(e);const i=t.outputLen;if(e.length<i)throw new Error(`digestInto() expects output buffer of length at least ${i}`)}}},3993:(e,t,i)=>{i.d(t,{N:()=>a});var s=i(3373),r=i(8006);class a extends r.kb{constructor(e,t,i,s){super(),this.blockLen=e,this.outputLen=t,this.padOffset=i,this.isLE=s,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(e),this.view=(0,r.GL)(this.buffer)}update(e){s.ZP.exists(this);const{view:t,buffer:i,blockLen:a}=this,n=(e=(0,r.O0)(e)).length;for(let s=0;s<n;){const o=Math.min(a-this.pos,n-s);if(o!==a)i.set(e.subarray(s,s+o),this.pos),this.pos+=o,s+=o,this.pos===a&&(this.process(t,0),this.pos=0);else{const t=(0,r.GL)(e);for(;a<=n-s;s+=a)this.process(t,s)}}return this.length+=e.length,this.roundClean(),this}digestInto(e){s.ZP.exists(this),s.ZP.output(e,this),this.finished=!0;const{buffer:t,view:i,blockLen:a,isLE:n}=this;let{pos:o}=this;t[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>a-o&&(this.process(i,0),o=0);for(let e=o;e<a;e++)t[e]=0;!function(e,t,i,s){if("function"==typeof e.setBigUint64)return e.setBigUint64(t,i,s);const r=BigInt(32),a=BigInt(4294967295),n=Number(i>>r&a),o=Number(i&a),d=s?4:0,c=s?0:4;e.setUint32(t+d,n,s),e.setUint32(t+c,o,s)}(i,a-8,BigInt(8*this.length),n),this.process(i,0);const d=(0,r.GL)(e),c=this.outputLen;if(c%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const h=c/4,u=this.get();if(h>u.length)throw new Error("_sha2: outputLen bigger than state");for(let e=0;e<h;e++)d.setUint32(4*e,u[e],n)}digest(){const{buffer:e,outputLen:t}=this;this.digestInto(e);const i=e.slice(0,t);return this.destroy(),i}_cloneInto(e){e||(e=new this.constructor),e.set(...this.get());const{blockLen:t,buffer:i,length:s,finished:r,destroyed:a,pos:n}=this;return e.length=s,e.pos=n,e.finished=r,e.destroyed=a,s%t&&e.buffer.set(i),e}}},1682:(e,t,i)=>{i.d(t,{ZP:()=>n});const s=BigInt(2**32-1),r=BigInt(32);function a(e,t=!1){return t?{h:Number(e&s),l:Number(e>>r&s)}:{h:0|Number(e>>r&s),l:0|Number(e&s)}}const n={fromBig:a,split:function(e,t=!1){let i=new Uint32Array(e.length),s=new Uint32Array(e.length);for(let r=0;r<e.length;r++){const{h:n,l:o}=a(e[r],t);[i[r],s[r]]=[n,o]}return[i,s]},toBig:(e,t)=>BigInt(e>>>0)<<r|BigInt(t>>>0),shrSH:(e,t,i)=>e>>>i,shrSL:(e,t,i)=>e<<32-i|t>>>i,rotrSH:(e,t,i)=>e>>>i|t<<32-i,rotrSL:(e,t,i)=>e<<32-i|t>>>i,rotrBH:(e,t,i)=>e<<64-i|t>>>i-32,rotrBL:(e,t,i)=>e>>>i-32|t<<64-i,rotr32H:(e,t)=>t,rotr32L:(e,t)=>e,rotlSH:(e,t,i)=>e<<i|t>>>32-i,rotlSL:(e,t,i)=>t<<i|e>>>32-i,rotlBH:(e,t,i)=>t<<i-32|e>>>64-i,rotlBL:(e,t,i)=>e<<i-32|t>>>64-i,add:function(e,t,i,s){const r=(t>>>0)+(s>>>0);return{h:e+i+(r/2**32|0)|0,l:0|r}},add3L:(e,t,i)=>(e>>>0)+(t>>>0)+(i>>>0),add3H:(e,t,i,s)=>t+i+s+(e/2**32|0)|0,add4L:(e,t,i,s)=>(e>>>0)+(t>>>0)+(i>>>0)+(s>>>0),add4H:(e,t,i,s,r)=>t+i+s+r+(e/2**32|0)|0,add5H:(e,t,i,s,r,a)=>t+i+s+r+a+(e/2**32|0)|0,add5L:(e,t,i,s,r)=>(e>>>0)+(t>>>0)+(i>>>0)+(s>>>0)+(r>>>0)}},9362:(e,t,i)=>{i.d(t,{e:()=>s});const s="object"==typeof globalThis&&"crypto"in globalThis?globalThis.crypto:void 0},138:(e,t,i)=>{i.d(t,{b:()=>n});var s=i(3373),r=i(8006);class a extends r.kb{constructor(e,t){super(),this.finished=!1,this.destroyed=!1,s.ZP.hash(e);const i=(0,r.O0)(t);if(this.iHash=e.create(),"function"!=typeof this.iHash.update)throw new TypeError("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const a=this.blockLen,n=new Uint8Array(a);n.set(i.length>a?e.create().update(i).digest():i);for(let e=0;e<n.length;e++)n[e]^=54;this.iHash.update(n),this.oHash=e.create();for(let e=0;e<n.length;e++)n[e]^=106;this.oHash.update(n),n.fill(0)}update(e){return s.ZP.exists(this),this.iHash.update(e),this}digestInto(e){s.ZP.exists(this),s.ZP.bytes(e,this.outputLen),this.finished=!0,this.iHash.digestInto(e),this.oHash.update(e),this.oHash.digestInto(e),this.destroy()}digest(){const e=new Uint8Array(this.oHash.outputLen);return this.digestInto(e),e}_cloneInto(e){e||(e=Object.create(Object.getPrototypeOf(this),{}));const{oHash:t,iHash:i,finished:s,destroyed:r,blockLen:a,outputLen:n}=this;return e.finished=s,e.destroyed=r,e.blockLen=a,e.outputLen=n,e.oHash=t._cloneInto(e.oHash),e.iHash=i._cloneInto(e.iHash),e}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy()}}const n=(e,t,i)=>new a(e,t).update(i).digest();n.create=(e,t)=>new a(e,t)},7311:(e,t,i)=>{i.d(t,{F:()=>d});var s=i(8006);function r(e,t){var i=e[0],s=e[1],r=e[2],a=e[3];s=((s+=((r=((r+=((a=((a+=((i=((i+=(s&r|~s&a)+t[0]-680876936|0)<<7|i>>>25)+s|0)&s|~i&r)+t[1]-389564586|0)<<12|a>>>20)+i|0)&i|~a&s)+t[2]+606105819|0)<<17|r>>>15)+a|0)&a|~r&i)+t[3]-1044525330|0)<<22|s>>>10)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s&r|~s&a)+t[4]-176418897|0)<<7|i>>>25)+s|0)&s|~i&r)+t[5]+1200080426|0)<<12|a>>>20)+i|0)&i|~a&s)+t[6]-1473231341|0)<<17|r>>>15)+a|0)&a|~r&i)+t[7]-45705983|0)<<22|s>>>10)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s&r|~s&a)+t[8]+1770035416|0)<<7|i>>>25)+s|0)&s|~i&r)+t[9]-1958414417|0)<<12|a>>>20)+i|0)&i|~a&s)+t[10]-42063|0)<<17|r>>>15)+a|0)&a|~r&i)+t[11]-1990404162|0)<<22|s>>>10)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s&r|~s&a)+t[12]+1804603682|0)<<7|i>>>25)+s|0)&s|~i&r)+t[13]-40341101|0)<<12|a>>>20)+i|0)&i|~a&s)+t[14]-1502002290|0)<<17|r>>>15)+a|0)&a|~r&i)+t[15]+1236535329|0)<<22|s>>>10)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s&a|r&~a)+t[1]-165796510|0)<<5|i>>>27)+s|0)&r|s&~r)+t[6]-1069501632|0)<<9|a>>>23)+i|0)&s|i&~s)+t[11]+643717713|0)<<14|r>>>18)+a|0)&i|a&~i)+t[0]-373897302|0)<<20|s>>>12)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s&a|r&~a)+t[5]-701558691|0)<<5|i>>>27)+s|0)&r|s&~r)+t[10]+38016083|0)<<9|a>>>23)+i|0)&s|i&~s)+t[15]-660478335|0)<<14|r>>>18)+a|0)&i|a&~i)+t[4]-405537848|0)<<20|s>>>12)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s&a|r&~a)+t[9]+568446438|0)<<5|i>>>27)+s|0)&r|s&~r)+t[14]-1019803690|0)<<9|a>>>23)+i|0)&s|i&~s)+t[3]-187363961|0)<<14|r>>>18)+a|0)&i|a&~i)+t[8]+1163531501|0)<<20|s>>>12)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s&a|r&~a)+t[13]-1444681467|0)<<5|i>>>27)+s|0)&r|s&~r)+t[2]-51403784|0)<<9|a>>>23)+i|0)&s|i&~s)+t[7]+1735328473|0)<<14|r>>>18)+a|0)&i|a&~i)+t[12]-1926607734|0)<<20|s>>>12)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s^r^a)+t[5]-378558|0)<<4|i>>>28)+s|0)^s^r)+t[8]-2022574463|0)<<11|a>>>21)+i|0)^i^s)+t[11]+1839030562|0)<<16|r>>>16)+a|0)^a^i)+t[14]-35309556|0)<<23|s>>>9)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s^r^a)+t[1]-1530992060|0)<<4|i>>>28)+s|0)^s^r)+t[4]+1272893353|0)<<11|a>>>21)+i|0)^i^s)+t[7]-155497632|0)<<16|r>>>16)+a|0)^a^i)+t[10]-1094730640|0)<<23|s>>>9)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s^r^a)+t[13]+681279174|0)<<4|i>>>28)+s|0)^s^r)+t[0]-358537222|0)<<11|a>>>21)+i|0)^i^s)+t[3]-722521979|0)<<16|r>>>16)+a|0)^a^i)+t[6]+76029189|0)<<23|s>>>9)+r|0,s=((s+=((r=((r+=((a=((a+=((i=((i+=(s^r^a)+t[9]-640364487|0)<<4|i>>>28)+s|0)^s^r)+t[12]-421815835|0)<<11|a>>>21)+i|0)^i^s)+t[15]+530742520|0)<<16|r>>>16)+a|0)^a^i)+t[2]-995338651|0)<<23|s>>>9)+r|0,s=((s+=((a=((a+=(s^((i=((i+=(r^(s|~a))+t[0]-198630844|0)<<6|i>>>26)+s|0)|~r))+t[7]+1126891415|0)<<10|a>>>22)+i|0)^((r=((r+=(i^(a|~s))+t[14]-1416354905|0)<<15|r>>>17)+a|0)|~i))+t[5]-57434055|0)<<21|s>>>11)+r|0,s=((s+=((a=((a+=(s^((i=((i+=(r^(s|~a))+t[12]+1700485571|0)<<6|i>>>26)+s|0)|~r))+t[3]-1894986606|0)<<10|a>>>22)+i|0)^((r=((r+=(i^(a|~s))+t[10]-1051523|0)<<15|r>>>17)+a|0)|~i))+t[1]-2054922799|0)<<21|s>>>11)+r|0,s=((s+=((a=((a+=(s^((i=((i+=(r^(s|~a))+t[8]+1873313359|0)<<6|i>>>26)+s|0)|~r))+t[15]-30611744|0)<<10|a>>>22)+i|0)^((r=((r+=(i^(a|~s))+t[6]-1560198380|0)<<15|r>>>17)+a|0)|~i))+t[13]+1309151649|0)<<21|s>>>11)+r|0,s=((s+=((a=((a+=(s^((i=((i+=(r^(s|~a))+t[4]-145523070|0)<<6|i>>>26)+s|0)|~r))+t[11]-1120210379|0)<<10|a>>>22)+i|0)^((r=((r+=(i^(a|~s))+t[2]+718787259|0)<<15|r>>>17)+a|0)|~i))+t[9]-343485551|0)<<21|s>>>11)+r|0,e[0]=i+e[0]|0,e[1]=s+e[1]|0,e[2]=r+e[2]|0,e[3]=a+e[3]|0}function a(e){var t,i=[];for(t=0;t<64;t+=4)i[t>>2]=e[t]+(e[t+1]<<8)+(e[t+2]<<16)+(e[t+3]<<24);return i}const n=new Uint32Array([1732584193,-271733879,-1732584194,271733878]);class o extends s.kb{constructor(){super(...arguments),this.blockLen=64,this.outputLen=16,this._buffer=new Uint8Array}digest(){const e=function(e){var t,i,s,o,d,c,h=e.length,u=new Uint32Array(n);for(t=64;t<=h;t+=64)r(u,a(e.subarray(t-64,t)));for(i=(e=t-64<h?e.subarray(t-64):new Uint8Array(0)).length,s=[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],t=0;t<i;t+=1)s[t>>2]|=e[t]<<(t%4<<3);if(s[t>>2]|=128<<(t%4<<3),t>55)for(r(u,s),t=0;t<16;t+=1)s[t]=0;o=(o=8*h).toString(16).match(/(.*?)(.{0,8})$/),d=parseInt(o[2],16),c=parseInt(o[1],16)||0,s[14]=d,s[15]=c,r(u,s);const l=new Uint8Array(4*u.length);for(let e=0;e<s.length;e++){const t=4*e;l[t]=255&u[e],l[t+1]=u[e]>>8&255,l[t+2]=u[e]>>16&255,l[t+3]=u[e]>>24}return l}(this._buffer);return this.destroy(),e}digestInto(e){const t=this.digest();for(let i=0;i<t.length;i++)e[i]=t[i]}_cloneInto(e){return this}destroy(){this._buffer=new Uint8Array}update(e){return this._buffer=(0,s.eV)(this._buffer,(0,s.O0)(e)),this}}let d;d=(0,s.hE)((()=>new o))},3307:(e,t,i)=>{i.d(t,{q:()=>h});var s=i(3993),r=i(8006);const a=(e,t)=>e<<t|e>>>32-t>>>0,n=(e,t,i)=>e&t^e&i^t&i,o=new Uint32Array([1732584193,4023233417,2562383102,271733878,3285377520]),d=new Uint32Array(80);class c extends s.N{constructor(){super(64,20,8,!1),this.A=0|o[0],this.B=0|o[1],this.C=0|o[2],this.D=0|o[3],this.E=0|o[4]}get(){const{A:e,B:t,C:i,D:s,E:r}=this;return[e,t,i,s,r]}set(e,t,i,s,r){this.A=0|e,this.B=0|t,this.C=0|i,this.D=0|s,this.E=0|r}process(e,t){for(let i=0;i<16;i++,t+=4)d[i]=e.getUint32(t,!1);for(let e=16;e<80;e++)d[e]=a(d[e-3]^d[e-8]^d[e-14]^d[e-16],1);let{A:i,B:s,C:r,D:o,E:c}=this;for(let e=0;e<80;e++){let t,u;e<20?(t=(h=s)&r^~h&o,u=1518500249):e<40?(t=s^r^o,u=1859775393):e<60?(t=n(s,r,o),u=2400959708):(t=s^r^o,u=3395469782);const l=a(i,5)+t+c+u+d[e]|0;c=o,o=r,r=a(s,30),s=i,i=l}var h;i=i+this.A|0,s=s+this.B|0,r=r+this.C|0,o=o+this.D|0,c=c+this.E|0,this.set(i,s,r,o,c)}roundClean(){d.fill(0)}destroy(){this.set(0,0,0,0,0),this.buffer.fill(0)}}const h=(0,r.hE)((()=>new c))},1372:(e,t,i)=>{i.d(t,{J:()=>u});var s=i(3993),r=i(8006);const a=(e,t,i)=>e&t^e&i^t&i,n=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),o=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),d=new Uint32Array(64);class c extends s.N{constructor(){super(64,32,8,!1),this.A=0|o[0],this.B=0|o[1],this.C=0|o[2],this.D=0|o[3],this.E=0|o[4],this.F=0|o[5],this.G=0|o[6],this.H=0|o[7]}get(){const{A:e,B:t,C:i,D:s,E:r,F:a,G:n,H:o}=this;return[e,t,i,s,r,a,n,o]}set(e,t,i,s,r,a,n,o){this.A=0|e,this.B=0|t,this.C=0|i,this.D=0|s,this.E=0|r,this.F=0|a,this.G=0|n,this.H=0|o}process(e,t){for(let i=0;i<16;i++,t+=4)d[i]=e.getUint32(t,!1);for(let e=16;e<64;e++){const t=d[e-15],i=d[e-2],s=(0,r.np)(t,7)^(0,r.np)(t,18)^t>>>3,a=(0,r.np)(i,17)^(0,r.np)(i,19)^i>>>10;d[e]=a+d[e-7]+s+d[e-16]|0}let{A:i,B:s,C:o,D:c,E:h,F:u,G:l,H:p}=this;for(let e=0;e<64;e++){const t=p+((0,r.np)(h,6)^(0,r.np)(h,11)^(0,r.np)(h,25))+((f=h)&u^~f&l)+n[e]+d[e]|0,m=((0,r.np)(i,2)^(0,r.np)(i,13)^(0,r.np)(i,22))+a(i,s,o)|0;p=l,l=u,u=h,h=c+t|0,c=o,o=s,s=i,i=t+m|0}var f;i=i+this.A|0,s=s+this.B|0,o=o+this.C|0,c=c+this.D|0,h=h+this.E|0,u=u+this.F|0,l=l+this.G|0,p=p+this.H|0,this.set(i,s,o,c,h,u,l,p)}roundClean(){d.fill(0)}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0)}}class h extends c{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28}}const u=(0,r.hE)((()=>new c));(0,r.hE)((()=>new h))},6739:(e,t,i)=>{i.d(t,{fr:()=>S});var s=i(3373),r=i(1682),a=i(8006);const[n,o,d]=[[],[],[]],c=BigInt(0),h=BigInt(1),u=BigInt(2),l=BigInt(7),p=BigInt(256),f=BigInt(113);for(let e=0,t=h,i=1,s=0;e<24;e++){[i,s]=[s,(2*i+3*s)%5],n.push(2*(5*s+i)),o.push((e+1)*(e+2)/2%64);let r=c;for(let e=0;e<7;e++)t=(t<<h^(t>>l)*f)%p,t&u&&(r^=h<<(h<<BigInt(e))-h);d.push(r)}const[m,v]=r.ZP.split(d,!0),g=(e,t,i)=>i>32?r.ZP.rotlBH(e,t,i):r.ZP.rotlSH(e,t,i),y=(e,t,i)=>i>32?r.ZP.rotlBL(e,t,i):r.ZP.rotlSL(e,t,i);class b extends a.kb{constructor(e,t,i,r=!1,n=24){if(super(),this.blockLen=e,this.suffix=t,this.outputLen=i,this.enableXOF=r,this.rounds=n,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,s.ZP.number(i),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=(0,a.Jq)(this.state)}keccak(){!function(e,t=24){const i=new Uint32Array(10);for(let s=24-t;s<24;s++){for(let t=0;t<10;t++)i[t]=e[t]^e[t+10]^e[t+20]^e[t+30]^e[t+40];for(let t=0;t<10;t+=2){const s=(t+8)%10,r=(t+2)%10,a=i[r],n=i[r+1],o=g(a,n,1)^i[s],d=y(a,n,1)^i[s+1];for(let i=0;i<50;i+=10)e[t+i]^=o,e[t+i+1]^=d}let t=e[2],r=e[3];for(let i=0;i<24;i++){const s=o[i],a=g(t,r,s),d=y(t,r,s),c=n[i];t=e[c],r=e[c+1],e[c]=a,e[c+1]=d}for(let t=0;t<50;t+=10){for(let s=0;s<10;s++)i[s]=e[t+s];for(let s=0;s<10;s++)e[t+s]^=~i[(s+2)%10]&i[(s+4)%10]}e[0]^=m[s],e[1]^=v[s]}i.fill(0)}(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){s.ZP.exists(this);const{blockLen:t,state:i}=this,r=(e=(0,a.O0)(e)).length;for(let s=0;s<r;){const a=Math.min(t-this.pos,r-s);for(let t=0;t<a;t++)i[this.pos++]^=e[s++];this.pos===t&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;const{state:e,suffix:t,pos:i,blockLen:s}=this;e[i]^=t,0!=(128&t)&&i===s-1&&this.keccak(),e[s-1]^=128,this.keccak()}writeInto(e){s.ZP.exists(this,!1),s.ZP.bytes(e),this.finish();const t=this.state,{blockLen:i}=this;for(let s=0,r=e.length;s<r;){this.posOut>=i&&this.keccak();const a=Math.min(i-this.posOut,r-s);e.set(t.subarray(this.posOut,this.posOut+a),s),this.posOut+=a,s+=a}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return s.ZP.number(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(s.ZP.output(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){const{blockLen:t,suffix:i,outputLen:s,rounds:r,enableXOF:a}=this;return e||(e=new b(t,i,s,a,r)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=r,e.suffix=i,e.outputLen=s,e.enableXOF=a,e.destroyed=this.destroyed,e}}const w=(e,t,i)=>(0,a.hE)((()=>new b(t,e,i))),S=(w(6,144,28),w(6,136,32),w(6,104,48),w(6,72,64),w(1,144,28),w(1,136,32)),P=(w(1,104,48),w(1,72,64),(e,t,i)=>(0,a.K$)(((s={})=>new b(t,e,void 0===s.dkLen?i:s.dkLen,!0))));P(31,168,16),P(31,136,32)},7110:(e,t,i)=>{i.d(t,{iC:()=>m,o:()=>f});var s=i(3993),r=i(1682),a=i(8006);const[n,o]=r.ZP.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((e=>BigInt(e)))),d=new Uint32Array(80),c=new Uint32Array(80);class h extends s.N{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209}get(){const{Ah:e,Al:t,Bh:i,Bl:s,Ch:r,Cl:a,Dh:n,Dl:o,Eh:d,El:c,Fh:h,Fl:u,Gh:l,Gl:p,Hh:f,Hl:m}=this;return[e,t,i,s,r,a,n,o,d,c,h,u,l,p,f,m]}set(e,t,i,s,r,a,n,o,d,c,h,u,l,p,f,m){this.Ah=0|e,this.Al=0|t,this.Bh=0|i,this.Bl=0|s,this.Ch=0|r,this.Cl=0|a,this.Dh=0|n,this.Dl=0|o,this.Eh=0|d,this.El=0|c,this.Fh=0|h,this.Fl=0|u,this.Gh=0|l,this.Gl=0|p,this.Hh=0|f,this.Hl=0|m}process(e,t){for(let i=0;i<16;i++,t+=4)d[i]=e.getUint32(t),c[i]=e.getUint32(t+=4);for(let e=16;e<80;e++){const t=0|d[e-15],i=0|c[e-15],s=r.ZP.rotrSH(t,i,1)^r.ZP.rotrSH(t,i,8)^r.ZP.shrSH(t,i,7),a=r.ZP.rotrSL(t,i,1)^r.ZP.rotrSL(t,i,8)^r.ZP.shrSL(t,i,7),n=0|d[e-2],o=0|c[e-2],h=r.ZP.rotrSH(n,o,19)^r.ZP.rotrBH(n,o,61)^r.ZP.shrSH(n,o,6),u=r.ZP.rotrSL(n,o,19)^r.ZP.rotrBL(n,o,61)^r.ZP.shrSL(n,o,6),l=r.ZP.add4L(a,u,c[e-7],c[e-16]),p=r.ZP.add4H(l,s,h,d[e-7],d[e-16]);d[e]=0|p,c[e]=0|l}let{Ah:i,Al:s,Bh:a,Bl:h,Ch:u,Cl:l,Dh:p,Dl:f,Eh:m,El:v,Fh:g,Fl:y,Gh:b,Gl:w,Hh:S,Hl:P}=this;for(let e=0;e<80;e++){const t=r.ZP.rotrSH(m,v,14)^r.ZP.rotrSH(m,v,18)^r.ZP.rotrBH(m,v,41),k=r.ZP.rotrSL(m,v,14)^r.ZP.rotrSL(m,v,18)^r.ZP.rotrBL(m,v,41),O=m&g^~m&b,T=v&y^~v&w,A=r.ZP.add5L(P,k,T,o[e],c[e]),G=r.ZP.add5H(A,S,t,O,n[e],d[e]),I=0|A,C=r.ZP.rotrSH(i,s,28)^r.ZP.rotrBH(i,s,34)^r.ZP.rotrBH(i,s,39),M=r.ZP.rotrSL(i,s,28)^r.ZP.rotrBL(i,s,34)^r.ZP.rotrBL(i,s,39),x=i&a^i&u^a&u,V=s&h^s&l^h&l;S=0|b,P=0|w,b=0|g,w=0|y,g=0|m,y=0|v,({h:m,l:v}=r.ZP.add(0|p,0|f,0|G,0|I)),p=0|u,f=0|l,u=0|a,l=0|h,a=0|i,h=0|s;const E=r.ZP.add3L(I,M,V);i=r.ZP.add3H(E,G,C,x),s=0|E}({h:i,l:s}=r.ZP.add(0|this.Ah,0|this.Al,0|i,0|s)),({h:a,l:h}=r.ZP.add(0|this.Bh,0|this.Bl,0|a,0|h)),({h:u,l}=r.ZP.add(0|this.Ch,0|this.Cl,0|u,0|l)),({h:p,l:f}=r.ZP.add(0|this.Dh,0|this.Dl,0|p,0|f)),({h:m,l:v}=r.ZP.add(0|this.Eh,0|this.El,0|m,0|v)),({h:g,l:y}=r.ZP.add(0|this.Fh,0|this.Fl,0|g,0|y)),({h:b,l:w}=r.ZP.add(0|this.Gh,0|this.Gl,0|b,0|w)),({h:S,l:P}=r.ZP.add(0|this.Hh,0|this.Hl,0|S,0|P)),this.set(i,s,a,h,u,l,p,f,m,v,g,y,b,w,S,P)}roundClean(){d.fill(0),c.fill(0)}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0)}}class u extends h{constructor(){super(),this.Ah=-1942145080,this.Al=424955298,this.Bh=1944164710,this.Bl=-1982016298,this.Ch=502970286,this.Cl=855612546,this.Dh=1738396948,this.Dl=1479516111,this.Eh=258812777,this.El=2077511080,this.Fh=2011393907,this.Fl=79989058,this.Gh=1067287976,this.Gl=1780299464,this.Hh=286451373,this.Hl=-1848208735,this.outputLen=28}}class l extends h{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32}}class p extends h{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48}}const f=(0,a.hE)((()=>new h)),m=((0,a.hE)((()=>new u)),(0,a.hE)((()=>new l)),(0,a.hE)((()=>new p)))},8006:(e,t,i)=>{i.d(t,{GL:()=>a,Jq:()=>r,K$:()=>l,O0:()=>d,O6:()=>p,eV:()=>c,hE:()=>u,iY:()=>o,kb:()=>h,np:()=>n});var s=i(9362);const r=e=>new Uint32Array(e.buffer,e.byteOffset,Math.floor(e.byteLength/4)),a=e=>new DataView(e.buffer,e.byteOffset,e.byteLength),n=(e,t)=>e<<32-t|e>>>t;if(68!==new Uint8Array(new Uint32Array([287454020]).buffer)[0])throw new Error("Non little-endian hardware is not supported");function o(e){if("string"!=typeof e)throw new TypeError("utf8ToBytes expected string, got "+typeof e);return(new TextEncoder).encode(e)}function d(e){if("string"==typeof e&&(e=o(e)),!(e instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof e})`);return e}function c(...e){if(!e.every((e=>e instanceof Uint8Array)))throw new Error("Uint8Array list expected");if(1===e.length)return e[0];const t=e.reduce(((e,t)=>e+t.length),0),i=new Uint8Array(t);for(let t=0,s=0;t<e.length;t++){const r=e[t];i.set(r,s),s+=r.length}return i}Array.from({length:256},((e,t)=>t.toString(16).padStart(2,"0")));class h{clone(){return this._cloneInto()}}function u(e){const t=t=>e().update(d(t)).digest(),i=e();return t.outputLen=i.outputLen,t.blockLen=i.blockLen,t.create=()=>e(),t}function l(e){const t=(t,i)=>e(i).update(d(t)).digest(),i=e({});return t.outputLen=i.outputLen,t.blockLen=i.blockLen,t.create=t=>e(t),t}function p(e=32){if(s.e&&"function"==typeof s.e.getRandomValues)return s.e.getRandomValues(new Uint8Array(e));throw new Error("crypto.getRandomValues must be defined")}},9651:(e,t,i)=>{function s(e){if(!Number.isSafeInteger(e))throw new Error(`Wrong integer: ${e}`)}function r(...e){const t=(e,t)=>i=>e(t(i));return{encode:Array.from(e).reverse().reduce(((e,i)=>e?t(e,i.encode):i.encode),void 0),decode:e.reduce(((e,i)=>e?t(e,i.decode):i.decode),void 0)}}function a(e){return{encode:t=>{if(!Array.isArray(t)||t.length&&"number"!=typeof t[0])throw new Error("alphabet.encode input should be an array of numbers");return t.map((t=>{if(s(t),t<0||t>=e.length)throw new Error(`Digit index outside alphabet: ${t} (alphabet: ${e.length})`);return e[t]}))},decode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("alphabet.decode input should be array of strings");return t.map((t=>{if("string"!=typeof t)throw new Error(`alphabet.decode: not string element=${t}`);const i=e.indexOf(t);if(-1===i)throw new Error(`Unknown letter: "${t}". Allowed: ${e}`);return i}))}}}function n(e=""){if("string"!=typeof e)throw new Error("join separator should be string");return{encode:t=>{if(!Array.isArray(t)||t.length&&"string"!=typeof t[0])throw new Error("join.encode input should be array of strings");for(let e of t)if("string"!=typeof e)throw new Error(`join.encode: non-string input=${e}`);return t.join(e)},decode:t=>{if("string"!=typeof t)throw new Error("join.decode input should be string");return t.split(e)}}}function o(e,t="="){if(s(e),"string"!=typeof t)throw new Error("padding chr should be string");return{encode(i){if(!Array.isArray(i)||i.length&&"string"!=typeof i[0])throw new Error("padding.encode input should be array of strings");for(let e of i)if("string"!=typeof e)throw new Error(`padding.encode: non-string input=${e}`);for(;i.length*e%8;)i.push(t);return i},decode(i){if(!Array.isArray(i)||i.length&&"string"!=typeof i[0])throw new Error("padding.encode input should be array of strings");for(let e of i)if("string"!=typeof e)throw new Error(`padding.decode: non-string input=${e}`);let s=i.length;if(s*e%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;s>0&&i[s-1]===t;s--)if(!((s-1)*e%8))throw new Error("Invalid padding: string has too much padding");return i.slice(0,s)}}}function d(e){if("function"!=typeof e)throw new Error("normalize fn should be function");return{encode:e=>e,decode:t=>e(t)}}function c(e,t,i){if(t<2)throw new Error(`convertRadix: wrong from=${t}, base cannot be less than 2`);if(i<2)throw new Error(`convertRadix: wrong to=${i}, base cannot be less than 2`);if(!Array.isArray(e))throw new Error("convertRadix: data should be array");if(!e.length)return[];let r=0;const a=[],n=Array.from(e);for(n.forEach((e=>{if(s(e),e<0||e>=t)throw new Error(`Wrong integer: ${e}`)}));;){let e=0,s=!0;for(let a=r;a<n.length;a++){const o=n[a],d=t*e+o;if(!Number.isSafeInteger(d)||t*e/t!==e||d-o!=t*e)throw new Error("convertRadix: carry overflow");if(e=d%i,n[a]=Math.floor(d/i),!Number.isSafeInteger(n[a])||n[a]*i+e!==d)throw new Error("convertRadix: carry overflow");s&&(n[a]?s=!1:r=a)}if(a.push(e),s)break}for(let t=0;t<e.length-1&&0===e[t];t++)a.push(0);return a.reverse()}i.d(t,{Jq:()=>w,KA:()=>I,US:()=>g,YU:()=>m,pJ:()=>v});const h=(e,t)=>t?h(t,e%t):e,u=(e,t)=>e+(t-h(e,t));function l(e,t,i,r){if(!Array.isArray(e))throw new Error("convertRadix2: data should be array");if(t<=0||t>32)throw new Error(`convertRadix2: wrong from=${t}`);if(i<=0||i>32)throw new Error(`convertRadix2: wrong to=${i}`);if(u(t,i)>32)throw new Error(`convertRadix2: carry overflow from=${t} to=${i} carryBits=${u(t,i)}`);let a=0,n=0;const o=2**i-1,d=[];for(const r of e){if(s(r),r>=2**t)throw new Error(`convertRadix2: invalid data word=${r} from=${t}`);if(a=a<<t|r,n+t>32)throw new Error(`convertRadix2: carry overflow pos=${n} from=${t}`);for(n+=t;n>=i;n-=i)d.push((a>>n-i&o)>>>0);a&=2**n-1}if(a=a<<i-n&o,!r&&n>=t)throw new Error("Excess padding");if(!r&&a)throw new Error(`Non-zero padding: ${a}`);return r&&n>0&&d.push(a>>>0),d}function p(e,t=!1){if(s(e),e<=0||e>32)throw new Error("radix2: bits should be in (0..32]");if(u(8,e)>32||u(e,8)>32)throw new Error("radix2: carry overflow");return{encode:i=>{if(!(i instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return l(Array.from(i),8,e,!t)},decode:i=>{if(!Array.isArray(i)||i.length&&"number"!=typeof i[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(l(i,e,8,t))}}}function f(e){if("function"!=typeof e)throw new Error("unsafeWrapper fn should be function");return function(...t){try{return e.apply(null,t)}catch(e){}}}const m=r(p(4),a("0123456789abcdef"),n("")),v=r(p(5),a("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),o(5),n("")),g=(r(p(5),a("0123456789ABCDEFGHIJKLMNOPQRSTUV"),o(5),n("")),r(p(5),a("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),n(""),d((e=>e.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1")))),r(p(6),a("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),o(6),n(""))),y=r(p(6),a("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),o(6),n("")),b=e=>{return r((s(t=58),{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return c(Array.from(e),256,t)},decode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(c(e,t,256))}}),a(e),n(""));var t},w=b("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"),S=(b("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"),b("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"),[0,2,3,5,6,7,9,10,11]),P={encode(e){let t="";for(let i=0;i<e.length;i+=8){const s=e.subarray(i,i+8);t+=w.encode(s).padStart(S[s.length],"1")}return t},decode(e){let t=[];for(let i=0;i<e.length;i+=11){const s=e.slice(i,i+11),r=S.indexOf(s.length),a=w.decode(s);for(let e=0;e<a.length-r;e++)if(0!==a[e])throw new Error("base58xmr: wrong padding");t=t.concat(Array.from(a.slice(a.length-r)))}return Uint8Array.from(t)}},k=r(a("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),n("")),O=[996825010,642813549,513874426,1027748829,705979059];function T(e){const t=e>>25;let i=(33554431&e)<<5;for(let e=0;e<O.length;e++)1==(t>>e&1)&&(i^=O[e]);return i}function A(e,t,i=1){const s=e.length;let r=1;for(let t=0;t<s;t++){const i=e.charCodeAt(t);if(i<33||i>126)throw new Error(`Invalid prefix (${e})`);r=T(r)^i>>5}r=T(r);for(let t=0;t<s;t++)r=T(r)^31&e.charCodeAt(t);for(let e of t)r=T(r)^e;for(let e=0;e<6;e++)r=T(r);return r^=i,k.encode(l([r%2**30],30,5,!1))}function G(e){const t="bech32"===e?1:734539939,i=p(5),s=i.decode,r=i.encode,a=f(s);function n(e,i=90){if("string"!=typeof e)throw new Error("bech32.decode input should be string, not "+typeof e);if(e.length<8||!1!==i&&e.length>i)throw new TypeError(`Wrong string length: ${e.length} (${e}). Expected (8..${i})`);const s=e.toLowerCase();if(e!==s&&e!==e.toUpperCase())throw new Error("String must be lowercase or uppercase");const r=(e=s).lastIndexOf("1");if(0===r||-1===r)throw new Error('Letter "1" must be present between prefix and data only');const a=e.slice(0,r),n=e.slice(r+1);if(n.length<6)throw new Error("Data must be at least 6 characters long");const o=k.decode(n).slice(0,-6),d=A(a,o,t);if(!n.endsWith(d))throw new Error(`Invalid checksum in ${e}: expected "${d}"`);return{prefix:a,words:o}}return{encode:function(e,i,s=90){if("string"!=typeof e)throw new Error("bech32.encode prefix should be string, not "+typeof e);if(!Array.isArray(i)||i.length&&"number"!=typeof i[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof i);const r=e.length+7+i.length;if(!1!==s&&r>s)throw new TypeError(`Length ${r} exceeds limit ${s}`);return`${e=e.toLowerCase()}1${k.encode(i)}${A(e,i,t)}`},decode:n,decodeToBytes:function(e){const{prefix:t,words:i}=n(e,!1);return{prefix:t,words:i,bytes:s(i)}},decodeUnsafe:f(n),fromWords:s,fromWordsUnsafe:a,toWords:r}}G("bech32"),G("bech32m");const I={encode:e=>(new TextDecoder).decode(e),decode:e=>(new TextEncoder).encode(e)},C=r(p(4),a("0123456789abcdef"),n(""),d((e=>{if("string"!=typeof e||e.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof e} with length ${e.length}`);return e.toLowerCase()}))),M={utf8:I,hex:C,base16:m,base32:v,base64:g,base64url:y,base58:w,base58xmr:P};Object.keys(M).join(", ")},2152:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(4757),r=i(6689),a=i(2194),n=i(9292);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"stex",name:"STEX",countries:["EE"],rateLimit:1e3/3,certified:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!0,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrder:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactionFees:!0,fetchWithdrawal:!0,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},version:"v3",urls:{logo:"https://user-images.githubusercontent.com/1294454/69680782-03fd0b80-10bd-11ea-909e-7f603500e9cc.jpg",api:{rest:"https://api3.stex.com"},www:"https://www.stex.com",doc:["https://apidocs.stex.com/","https://help.stex.com/en/collections/1593608-api-v3-documentation"],fees:"https://app.stex.com/en/pairs-specification",referral:"https://app.stex.com?ref=36416021"},requiredCredentials:{apiKey:!1,secret:!1,token:!0},timeframes:{"1m":"1","5m":"5","30m":"30","1h":"60","4h":"240","12h":"720","1d":"1D"},api:{public:{get:{currencies:1,"currencies/{currencyId}":1,markets:1,"pairs-groups":1,"currency_pairs/list/{code}":1,"currency_pairs/group/{currencyPairGroupId}":1,"currency_pairs/{currencyPairId}":1,ticker:1,"ticker/{currencyPairId}":1,"trades/{currencyPairId}":1,"orderbook/{currencyPairId}":1,"chart/{currencyPairId}/{candlesType}":1,"deposit-statuses":1,"deposit-statuses/{statusId}":1,"withdrawal-statuses":1,"withdrawal-statuses/{statusId}":1,ping:1,"mobile-versions":1,twitter:1}},trading:{get:{"fees/{currencyPairId}":1,orders:12,"orders/{currencyPairId}":6,"order/{orderId}":12},post:{"orders/{currencyPairId}":1.5,"orders/bulk/{currencyPairId}":12},delete:{orders:30,"orders/{currencyPairId}":12,"order/{orderId}":1.5}},reports:{get:{currencies:12,currency_pairs:12,orders:12,"orders/{orderId}":12,"trades/{currencyPairId}":12,"background/{listMode}":12,"background/{id}":12,"background/download/{id}":12},post:{"background/create":12},delete:{"background/{id}":12}},profile:{get:{info:3,wallets:3,"wallets/{walletId}":3,"wallets/address/{walletId}":3,deposits:3,"deposits/{id}":3,rewards:3,"rewards/{id}":3,addressbook:3,"addressbook/{itemId}":3,withdrawals:3,"withdrawals/{id}":3,notifications:3,"notifications/price":3,"favorite/currency_pairs":3,"token-scopes":3},post:{"wallets/burn/{walletId}":3,"wallets/{walletId}/hold_amount":3,"wallets/{currencyId}":3,"wallets/address/{walletId}":3,"addressbook/disable_item/{itemId}":3,"addressbook/enable_item/{itemId}":3,"addressbook/enable_strict_wd":3,"addressbook/disable_strict_wd":3,withdraw:30,"notifications/price":3,"referral/program":3,"referral/insert/{code}":3,"referral/bonus_transfer/{currencyId}":3},put:{"favorite/currency_pairs/set":3},delete:{"addressbook/{itemId}":3,"withdraw/{withdrawalId}":30,"notifications/price/{priceAlertId}":3}},verification:{get:{countries:1,status:1,"fractal/url":1,"smart-id":1,stex:1,"cryptonomica/code":1},post:{"smart-id":1,stex:1,cryptonomica:1}},settings:{get:{"notifications/{event}":1,notifications:1},put:{notifications:1,"notifications/set":1}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.002"),maker:this.parseNumber("0.002")}},commonCurrencies:{BC:"Bitcoin Confidential",BITS:"Bitcoinus",BITSW:"BITS",BHD:"Bithold",BTH:"Bithereum",MPH:"Chasyr Token",SBTC:"SBTCT"},options:{parseOrderToPrecision:!1,networks:{ERC20:5,ETH:5,OMNI:10,XLM:20,BEP2:22,TRC20:24,TRX:24,SOL:25,BEP20:501},accountsByType:{spot:"spot",hold:"hold",funding:"funding",referal:"referal"},transfer:{fillResponseFromRequest:!0}},precisionMode:n.sh,exceptions:{exact:{"Wrong parameters":r.BadRequest,"Unauthenticated.":r.AuthenticationError,"Server Error":r.ExchangeError,"This feature is only enabled for users verifies by Cryptonomica":r.PermissionDenied,"Too Many Attempts.":r.DDoSProtection,"Selected Pair is disabled":r.BadSymbol,"Invalid scope(s) provided.":r.PermissionDenied,"The maximum amount of open orders with the same price cannot exceed 10":r.InvalidOrder,"Your account not verified!":r.AccountSuspended},broad:{"Not enough":r.InsufficientFunds}}})}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),i={},s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"id"),a=this.safeInteger(t,"id"),n=this.safeCurrencyCode(this.safeString(t,"code")),o=this.parseNumber(this.parsePrecision(this.safeString(t,"precision"))),d=this.safeNumber(t,"withdrawal_fee_const"),c=this.safeValue(t,"active",!0);i[n]={id:r,numericId:a,code:n,info:t,type:void 0,name:this.safeString(t,"name"),active:c,deposit:void 0,withdraw:void 0,fee:d,precision:o,limits:{amount:{min:o,max:void 0},deposit:{min:this.safeNumber(t,"minimum_deposit_amount"),max:void 0},withdraw:{min:this.safeNumber(t,"minimum_withdrawal_amount"),max:void 0}}}}return i}async fetchMarkets(e={}){const t=await this.publicGetCurrencyPairsListCode(this.extend({code:"ALL"},e)),i=[],s=this.safeValue(t,"data",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"id"),n=this.safeInteger(t,"id"),o=this.safeString(t,"currency_id"),d=this.safeString(t,"market_currency_id"),c=this.safeInteger(t,"currency_id"),h=this.safeInteger(t,"market_currency_id"),u=this.safeCurrencyCode(this.safeString(t,"currency_code")),l=this.safeCurrencyCode(this.safeString(t,"market_code")),p=this.safeString(t,"min_buy_price"),f=this.safeString(t,"min_sell_price"),m=a.O.stringMax(p,f),v=a.O.stringDiv(this.safeString(t,"buy_fee_percent"),"100"),g=a.O.stringDiv(this.safeString(t,"sell_fee_percent"),"100"),y=a.O.stringMax(v,g);i.push({id:r,numericId:n,symbol:u+"/"+l,base:u,quote:l,settle:void 0,baseId:o,quoteId:d,settleId:void 0,baseNumericId:c,quoteNumericId:h,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:this.safeValue(t,"active"),contract:!1,linear:void 0,inverse:void 0,taker:y,maker:y,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"currency_precision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"market_precision")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"min_order_amount"),max:void 0},price:{min:m,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return i}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={currencyPairId:i.id},r=await this.publicGetTickerCurrencyPairId(this.extend(s,t)),a=this.safeValue(r,"data",{});return this.parseTicker(a,i)}async fetchTime(e={}){const t=await this.publicGetPing(e),i=this.safeValue(t,"data",{}),s=this.safeValue(i,"server_datetime",{});return this.parse8601(this.safeString(s,"date"))}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={currencyPairId:this.market(e).id};void 0!==t&&(s.limit_bids=t,s.limit_asks=t);const r=await this.publicGetOrderbookCurrencyPairId(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseOrderBook(a,e,void 0,"bid","ask","price","amount")}parseTicker(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString2(e,"id","symbol"),r=this.safeSymbol(s,t,"_"),a=this.safeString(e,"last"),n=this.safeString(e,"open");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volumeQuote"),quoteVolume:this.safeString(e,"volume"),info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTicker(t),s=this.safeValue(i,"data",[]);return this.parseTickers(s,e)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,"time"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={currencyPairId:a.id,candlesType:this.safeString(this.timeframes,t,t)};void 0===s?s=100:n.limit=s;const o=s*this.parseTimeframe(t);void 0===i?(n.timeEnd=this.seconds(),n.timeStart=n.timeEnd-o):(n.timeStart=this.parseToInt(i/1e3),n.timeEnd=this.sum(n.timeStart,o));const d=await this.publicGetChartCurrencyPairIdCandlesType(this.extend(n,r)),c=this.safeValue(d,"data",[]);return this.parseOHLCVs(c,a,t,i,s)}parseTrade(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"price"),a=this.safeString(e,"amount");let n;void 0===n&&void 0!==t&&(n=t.symbol);const o=this.safeStringLower2(e,"type","trade_type");return this.safeTrade({info:e,timestamp:s,datetime:this.iso8601(s),symbol:n,id:i,order:void 0,type:void 0,takerOrMaker:void 0,side:o,price:r,amount:a,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={currencyPairId:r.id};void 0!==i&&(a.limit=i),void 0!==t&&(a.sort="ASC",a.from=this.parseToInt(t/1e3));const n=await this.publicGetTradesCurrencyPairId(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTrades(o,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={currencyPairId:i.id},r=await this.tradingGetFeesCurrencyPairId(this.extend(s,t)),a=this.safeValue(r,"data");return{info:r,symbol:i.symbol,maker:this.safeNumber(a,"sell_fee"),taker:this.safeNumber(a,"buy_fee"),percentage:!0,tierBased:!0}}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0},i=this.safeValue(e,"data",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeCurrencyCode(this.safeString(s,"currency_id")),a=this.account();a.free=this.safeString(s,"balance"),a.used=this.safeString(s,"frozen_balance"),t[r]=a}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.profileGetWallets(e);return this.parseBalance(t)}parseOrderStatus(e){return this.safeString({PROCESSING:"open",PENDING:"open",PARTIAL:"open",FINISHED:"closed",CANCELLED:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.parseOrderStatus(this.safeString(e,"status")),r=this.safeString2(e,"currency_pair_id","currency_pair_name"),n=this.safeSymbol(r,t,"_"),o=this.safeTimestamp(e,"timestamp"),d=this.safeString(e,"price"),c=this.safeString(e,"initial_amount"),h=this.safeString(e,"processed_amount");let u,l;void 0!==h&&(void 0!==c&&(u=a.O.stringSub(c,h),this.options.parseOrderToPrecision&&(u=this.amountToPrecision(n,u)),u=a.O.stringMax(u,"0.0")),void 0!==d&&void 0===l&&(l=a.O.stringMul(d,h)));let p=this.safeString(e,"original_type");"BUY"!==p&&"SELL"!==p||(p=void 0);const f=this.safeStringLower(e,"type"),m=this.safeValue(e,"trades"),v=this.safeNumber(e,"trigger_price"),g={info:e,id:i,clientOrderId:void 0,timestamp:o,datetime:this.iso8601(o),lastTradeTimestamp:void 0,symbol:n,type:p,timeInForce:void 0,postOnly:void 0,side:f,price:d,stopPrice:v,triggerPrice:v,amount:c,cost:l,average:void 0,filled:h,remaining:u,status:s,trades:m},y=this.safeValue(e,"fees");if(void 0===y)g.fee=void 0;else if(y.length>0){g.fees=[];for(let e=0;e<y.length;e++){const t=this.safeString(y[e],"amount");if(void 0!==t){const i=this.safeString(y[e],"currency_id"),s=this.safeCurrencyCode(i);g.fees.push({cost:t,currency:s})}}}else g.fee=void 0;return this.safeOrder(g,t)}async createOrder(e,t,i,s,a=undefined,n={}){if("market"===t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e);"limit"===t&&(t=i);const d={currencyPairId:o.id,type:t.toUpperCase(),amount:parseFloat(this.amountToPrecision(e,s)),price:parseFloat(this.priceToPrecision(e,a))},c=await this.tradingPostOrdersCurrencyPairId(this.extend(d,n)),h=this.safeValue(c,"data",{});return this.parseOrder(h,o)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderId:e},r=await this.tradingGetOrderOrderId(this.extend(s,i)),a=this.safeValue(r,"data",{});let n;return void 0!==t&&(n=this.market(t)),this.parseOrder(a,n)}async fetchClosedOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderId:e},r=await this.reportsGetOrdersOrderId(this.extend(s,i)),a=this.safeValue(r,"data",{});let n;return void 0!==t&&(n=this.market(t)),this.parseOrder(a,n)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){return(await this.fetchClosedOrder(e,t,r)).trades}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();let a="tradingGetOrders";const n={};void 0!==e&&(a="tradingGetOrdersCurrencyPairId",r=this.market(e),n.currencyPairId=r.id),void 0!==i&&(n.limit=i);const o=await this[a](this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseOrders(d,r,t,i)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderId:e},a=await this.tradingDeleteOrderOrderId(this.extend(s,i)),n=this.safeValue(a,"data",{}),o=this.safeValue(n,"put_into_processing_queue",[]),d=this.safeValue(n,"not_put_into_processing_queue",[]),c=o.length,h=d.length;if(c<1){if(h<1)throw new r.OrderNotFound(this.id+" cancelOrder() received an empty response: "+this.json(a));return this.parseOrder(d[0])}if(h<1)return this.parseOrder(o[0]);throw new r.OrderNotFound(this.id+" cancelOrder() received an empty response: "+this.json(a))}async cancelAllOrders(e=undefined,t={}){await this.loadMarkets();const i={};let s="tradingDeleteOrders";if(void 0!==e){const t=this.market(e);i.currencyPairId=t.id,s="tradingDeleteOrdersCurrencyPairId"}return await this[s](this.extend(i,t))}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={currencyPairId:a.id};void 0!==t&&(n.timeStart=this.iso8601(t)),void 0!==i&&(n.limit=i);const o=await this.reportsGetTradesCurrencyPairId(this.extend(n,s)),d=this.safeValue(o,"data",[]);return this.parseTrades(d,a,t,i)}async createDepositAddress(e,t={}){await this.loadMarkets();const i={currencyId:this.currency(e).id},s=await this.profilePostWalletsCurrencyId(this.extend(i,t)),r=this.safeValue(s,"data",{}),a=this.safeValue(r,"deposit_address",{}),n=this.safeString(a,"address"),o=this.safeString(a,"additional_address_parameter");return this.checkAddress(n),{currency:e,address:n,tag:o,info:s}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=await this.fetchBalance(),s=this.safeValue(i.info,"data",[]),a=this.indexBy(s,"currency_id"),n=this.currency(e),o=this.safeValue(a,n.id);if(void 0===o)throw new r.ExchangeError(this.id+" fetchDepositAddress() could not find the wallet id for currency code "+e+", try to call createDepositAddress() first");const d=this.safeInteger(o,"id");if(void 0===d)throw new r.ExchangeError(this.id+" fetchDepositAddress() could not find the wallet id for currency code "+e+", try to call createDepositAddress() first");const c={walletId:d},h=await this.profileGetWalletsWalletId(this.extend(c,t)),u=this.safeValue(h,"data",[]),l=this.safeValue(u,"deposit_address",{}),p=this.safeString(l,"address"),f=this.safeString(l,"additional_address_parameter");return this.checkAddress(p),{currency:e,address:p,tag:f,network:void 0,info:h}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+t+"/"+this.implodeParams(e,s);const o=this.omit(s,this.extractParams(e));return"public"===t?Object.keys(o).length&&(n+="?"+this.urlencode(o)):(this.checkRequiredCredentials(),r={Authorization:"Bearer "+this.token},"GET"===i||"DELETE"===i?Object.keys(o).length&&(n+="?"+this.urlencode(o)):(a=this.json(o),Object.keys(o).length&&(r["Content-Type"]="application/json"))),{url:n,method:i,body:a,headers:r}}parseTransactionStatus(e){return this.safeString({processing:"pending","checking by system":"pending",hodl:"pending","amount too low":"failed","not confirmed":"pending","cancelled by user":"canceled",approved:"pending",finished:"ok","withdrawal error":"failed","deposit error":"failed","cancelled by admin":"canceled",awaiting:"pending"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeValue(e,"withdrawal_address",{}),r=this.safeString(s,"address"),a=this.safeString(s,"additional_address_parameter"),n=this.safeString(e,"currency_id");let o;n in this.currencies_by_id?t=this.currencies_by_id[n]:o=this.commonCurrencyCode(this.safeString(e,"currency_code")),void 0===o&&void 0!==t&&(o=t.code);const d="deposit_status_id"in e?"deposit":"withdrawal",c=this.safeNumber(e,"amount"),h=this.parseTransactionStatus(this.safeStringLower(e,"status")),u=this.safeTimestamp2(e,"timestamp","created_ts"),l=this.safeTimestamp(e,"updated_ts"),p=this.safeString(e,"txid");let f;const m=this.safeNumber(e,"fee");if(void 0!==m){const t=this.safeString2(e,"fee_currency_id","deposit_fee_currency_id");f={cost:m,currency:this.safeCurrencyCode(t)}}const v=this.safeString(s,"protocol_name");return{info:e,id:i,txid:p,timestamp:u,datetime:this.iso8601(u),network:v,addressFrom:void 0,address:r,addressTo:r,tagFrom:void 0,tag:a,tagTo:a,type:d,amount:c,currency:o,status:h,updated:l,fee:f}}async fetchDeposit(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.profileGetDepositsId(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseTransaction(a)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currencyId=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.timeStart=t);const n=await this.profileGetDeposits(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,r,t,i)}async fetchWithdrawal(e,t=undefined,i={}){await this.loadMarkets();const s={id:e},r=await this.profileGetWithdrawalsId(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseTransaction(a)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.currency(e),a.currencyId=r.id),void 0!==i&&(a.limit=i),void 0!==t&&(a.timeStart=t);const n=await this.profileGetWithdrawals(this.extend(a,s)),o=this.safeValue(n,"data",[]);return this.parseTransactions(o,r,t,i)}async transfer(e,t,i,s,n={}){await this.loadMarkets();const o=this.currency(e);let d;const c={};if("referal"===i&&"spot"===s)c.currencyId=o.id,d="profilePostReferralBonusTransferCurrencyId";else if("hold"===s)c.walletId=i,t=this.currencyToPrecision(e,t),t=a.O.stringNeg(t),c.amount=t,d="profilePostWalletsWalletIdHoldAmount";else{if("hold"!==i)throw new r.ExchangeError(this.id+" transfer() only allows transfers of referal to spot and between a walletId and funding");c.walletId=s,c.amount=t,d="profilePostWalletsWalletIdHoldAmount"}const h=await this[d](this.extend(c,n)),u=this.safeValue(h,"data",{}),l=this.parseTransfer(u,o),p=this.safeValue(this.options,"transfer",{});return this.safeValue(p,"fillResponseFromRequest",!0)&&(l.fromAccount=i,l.toAccount=s,"string"==typeof t&&a.O.stringLt(t,"0")&&(t=this.parseNumber(a.O.stringNeg(t))),l.amount=t,void 0===l.currency&&(l.currency=e)),l}parseTransfer(e,t=undefined){const i=this.safeString(e,"currency_id");let s;return i in this.currencies_by_id?t=this.currencies_by_id[i]:s=this.commonCurrencyCode(this.safeString(e,"currency_code")),void 0===s&&(s=this.safeValue(t,"code")),{info:e,id:this.safeString(e,"id"),timestamp:void 0,datetime:void 0,currency:s,amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={currency_id:a.id,amount:parseFloat(this.currencyToPrecision(e,t)),address:i};void 0!==s&&(n.additional_address_parameter=s);const o=this.safeValue(this.options,"networks",{}),d=this.safeStringUpper(r,"network"),c=this.safeInteger(o,d,this.parseToInt(d));void 0!==c&&(n.protocol_id=c,r=this.omit(r,"network"));const h=await this.profilePostWithdraw(this.extend(n,r)),u=this.safeValue(h,"data",{});return this.parseTransaction(u,a)}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=Object.keys(this.currencies),s={};for(let t=0;t<i.length;t++){const r=i[t],a=this.currencies[r];if(void 0!==e&&!this.inArray(r,e))continue;const n=this.safeValue(a,"info");s[r]={withdraw:this.safeNumber(a,"fee"),deposit:this.safeNumber(n,"deposit_fee_const"),info:n}}return s}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetCurrencies(t),s=this.safeValue(i,"data");return this.parseDepositWithdrawFees(s,e,"code")}parseDepositWithdrawFee(e,t=undefined){const i={withdraw:{fee:this.safeNumber(e,"withdrawal_fee_const"),percentage:!1},deposit:{fee:this.safeNumber(e,"deposit_fee_const"),percentage:!1},networks:{}},s=this.safeValue(e,"protocol_specific_settings",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"protocol_name"),a=this.networkIdToCode(r);i.networks[a]={withdraw:{fee:this.safeNumber(t,"withdrawal_fee_const"),percentage:!1},deposit:{fee:void 0,percentage:void 0}}}return i}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&!this.safeValue(o,"success",!1)){const e=this.safeString(o,"message"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,t),this.throwBroadlyMatchedException(this.exceptions.broad,e,t),new r.ExchangeError(t)}}}},4224:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(6057),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"tidex",name:"Tidex",countries:["UK"],rateLimit:2e3,version:"3",userAgent:this.userAgents.chrome,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchCurrencies:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/30781780-03149dc4-a12e-11e7-82bb-313b269d24d4.jpg",api:{web:"https://gate.tidex.com/api",public:"https://api.tidex.com/api/3",private:"https://api.tidex.com/tapi"},www:"https://tidex.com",doc:"https://tidex.com/exchange/public-api",referral:"https://tidex.com/exchange",fees:["https://tidex.com/exchange/assets-spec","https://tidex.com/exchange/pairs-spec"]},api:{web:{get:["currency","pairs","tickers","orders","ordershistory","trade-data","trade-data/{id}"]},public:{get:["info","ticker/{pair}","depth/{pair}","trades/{pair}"]},private:{post:["getInfoExt","getInfo","Trade","ActiveOrders","OrderInfo","CancelOrder","TradeHistory","getDepositAddress","createWithdraw","getWithdraw"]}},fees:{trading:{feeSide:"get",tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},commonCurrencies:{DSH:"DASH",EMGO:"MGO",MGO:"WMGO"},precisionMode:n.sh,exceptions:{exact:{803:r.InvalidOrder,804:r.InvalidOrder,805:r.InvalidOrder,806:r.InvalidOrder,807:r.InvalidOrder,831:r.InsufficientFunds,832:r.InsufficientFunds,833:r.OrderNotFound},broad:{"Invalid pair name":r.ExchangeError,"invalid api key":r.AuthenticationError,"invalid sign":r.AuthenticationError,"api key dont have trade permission":r.AuthenticationError,"invalid parameter":r.InvalidOrder,"invalid order":r.InvalidOrder,"Requests too often":r.DDoSProtection,"not available":r.ExchangeNotAvailable,"data unavailable":r.ExchangeNotAvailable,"external service unavailable":r.ExchangeNotAvailable,"IP restricted":r.PermissionDenied}},options:{fetchTickersMaxLength:2048},orders:{}})}async fetchCurrencies(e={}){const t=await this.webGetCurrency(e),i={};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"symbol"),a=this.safeCurrencyCode(r);let n=!0===this.safeValue(s,"visible");const o=this.safeValue(s,"withdrawEnable",!0),d=this.safeValue(s,"depositEnable",!0);o&&d||(n=!1);const c=this.safeString(s,"name"),h=this.safeNumber(s,"withdrawFee");i[a]={id:r,code:a,name:c,active:n,deposit:d,withdraw:o,precision:this.parseNumber(this.parsePrecision(this.safeString(s,"amountPoint"))),funding:{withdraw:{active:o,fee:h},deposit:{active:d,fee:this.parseNumber("0")}},limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(s,"withdrawMinAmount"),max:void 0},deposit:{min:this.safeNumber(s,"depositMinAmount"),max:void 0}},info:s}}return i}async fetchMarkets(e={}){const t=(await this.publicGetInfo(e)).pairs,i=Object.keys(t),s=[];for(let e=0;e<i.length;e++){const r=i[e],n=t[r],[o,d]=r.split("_"),c=this.safeCurrencyCode(o),h=this.safeCurrencyCode(d),u=this.safeInteger(n,"hidden");let l=this.safeString(n,"fee");l=a.O.stringDiv(l,"100"),s.push({id:r,symbol:c+"/"+h,base:c,quote:h,settle:void 0,baseId:o,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:0===u,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(l),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(n,"decimal_places"))),price:this.parseNumber(this.parsePrecision(this.safeString(n,"decimal_places")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"min_amount"),max:this.safeNumber(n,"max_amount")},price:{min:this.safeNumber(n,"min_price"),max:this.safeNumber(n,"max_price")},cost:{min:this.safeNumber(n,"min_total"),max:void 0}},info:n})}return s}parseBalance(e){const t=this.safeValue(e,"return"),i=this.safeTimestamp(t,"server_time"),s={info:e,timestamp:i,datetime:this.iso8601(i)},r=this.safeValue(t,"funds",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],i=this.safeCurrencyCode(t),n=this.safeValue(r,t,{}),o=this.account();o.free=this.safeString(n,"value"),o.used=this.safeString(n,"inOrders"),s[i]=o}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetInfoExt(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),a={pair:s.id};void 0!==t&&(a.limit=t);const n=await this.publicGetDepthPair(this.extend(a,i));if(!(s.id in n))throw new r.ExchangeError(this.id+" "+s.symbol+" order book is empty or not available");const o=n[s.id];return this.parseOrderBook(o,e)}async fetchOrderBooks(e=undefined,t=undefined,i={}){let s;if(await this.loadMarkets(),void 0===e){if(s=this.ids.join("-"),s.length>2048){const e=this.ids.length;throw new r.ExchangeError(this.id+" fetchOrderBooks() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else s=this.marketIds(e),s=s.join("-");const a={pair:s};void 0!==t&&(a.limit=t);const n=await this.publicGetDepthPair(this.extend(a,i)),o={};s=Object.keys(n);for(let e=0;e<s.length;e++){const t=s[e],i=this.safeSymbol(t);o[i]=this.parseOrderBook(n[t],i)}return o}parseTicker(e,t=undefined){const i=this.safeTimestamp(e,"updated");t=this.safeMarket(void 0,t);const s=this.safeString(e,"last");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"avg"),baseVolume:this.safeString(e,"vol_cur"),quoteVolume:this.safeString(e,"vol"),info:e},t)}async fetchTickers(e=undefined,t={}){let i;if(await this.loadMarkets(),void 0===(e=this.marketSymbols(e))){const e=this.ids.length;if(i=this.ids.join("-"),i.length>this.options.fetchTickersMaxLength){const t=this.safeInteger(this.options,"fetchTickersMaxLength",2048);throw new r.ArgumentsRequired(this.id+" fetchTickers() has "+e.toString()+" markets exceeding max URL length for this endpoint ("+t.toString()+" characters), please, specify a list of symbols of interest in the first argument to fetchTickers")}}else i=this.marketIds(e).join("-");const s={pair:i},a=await this.publicGetTickerPair(this.extend(s,t)),n={},o=Object.keys(a);for(let e=0;e<o.length;e++){const t=o[e],i=this.safeMarket(t);n[i.symbol]=this.parseTicker(a[t],i)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){return(await this.fetchTickers([e],t))[e]}parseTrade(e,t=undefined){const i=this.safeTimestamp(e,"timestamp");let s=this.safeString(e,"type");"ask"===s?s="sell":"bid"===s&&(s="buy");const r=this.safeString2(e,"rate","price"),n=this.safeString2(e,"trade_id","tid"),o=this.safeString(e,"order_id"),d=this.safeString(e,"pair"),c=this.safeSymbol(d,t),h=this.safeString(e,"amount"),u=this.parseNumber(r),l=this.parseNumber(h),p=this.parseNumber(a.O.stringMul(r,h)),f="limit";let m,v;const g=this.safeNumber(e,"commission");if(void 0!==g){const t=this.safeString(e,"commissionCurrency");v={cost:g,currency:this.safeCurrencyCode(t)}}const y=this.safeValue(e,"is_your_order");return void 0!==y&&(m="taker",y&&(m="maker"),void 0===v&&(v=this.calculateFee(c,f,s,l,u,m))),{id:n,order:o,timestamp:i,datetime:this.iso8601(i),symbol:c,type:f,side:s,takerOrMaker:m,price:u,amount:l,cost:p,fee:v,info:e}}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetTradesPair(this.extend(a,s));return Array.isArray(n)&&0===n.length?[]:this.parseTrades(n[r.id],r,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){if("market"===t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");const o=s.toString(),d=a.toString();await this.loadMarkets();const c=this.market(e),h={pair:c.id,type:i,amount:this.amountToPrecision(e,s),rate:this.priceToPrecision(e,a)},u=await this.privatePostTrade(this.extend(h,n));let l,p="open",f="0.0",m=o;const v=this.safeValue(u,"return");void 0!==v&&(l=this.safeString(v,"order_id"),"0"===l&&(l=this.safeString(v,"init_order_id"),p="closed"),f=this.safeString(v,"received",f),m=this.safeString(v,"remains",o));const g=this.milliseconds();return this.safeOrder({id:l,timestamp:g,datetime:this.iso8601(g),lastTradeTimestamp:void 0,status:p,symbol:e,type:t,side:i,price:d,cost:void 0,amount:o,remaining:m,filled:f,fee:void 0,info:u,clientOrderId:void 0,average:void 0,trades:void 0},c)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:parseInt(e)};return await this.privatePostCancelOrder(this.extend(s,i))}parseOrderStatus(e){return this.safeString({0:"open",1:"closed",2:"canceled",3:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.parseOrderStatus(this.safeString(e,"status")),r=this.safeTimestamp(e,"timestamp_created"),a=this.safeString(e,"pair"),n=this.safeSymbol(a,t);let o,d;const c=this.safeString(e,"rate");return"start_amount"in e?(d=this.safeString(e,"start_amount"),o=this.safeString(e,"amount")):o=this.safeString(e,"amount"),this.safeOrder({info:e,id:i,clientOrderId:void 0,symbol:n,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,type:"limit",timeInForce:void 0,postOnly:void 0,side:this.safeString(e,"type"),price:c,stopPrice:void 0,triggerPrice:void 0,cost:void 0,amount:d,remaining:o,filled:void 0,status:s,fee:void 0,average:void 0,trades:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:parseInt(e)},r=await this.privatePostOrderInfo(this.extend(s,i));e=e.toString();const a=this.safeValue(r,"return",{}),n=this.safeValue(a,e);return this.parseOrder(this.extend({id:e},n))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.pair=a.id);const n=await this.privatePostActiveOrders(this.extend(r,s)),o=this.safeValue(n,"return",[]);return this.parseOrders(o,a,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.pair=r.id),void 0!==i&&(a.count=parseInt(i)),void 0!==t&&(a.since=this.parseToInt(t/1e3));const n=await this.privatePostTradeHistory(this.extend(a,s)),o=this.safeValue(n,"return",[]);return this.parseTrades(o,r,t,i)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={asset:a.id,amount:parseFloat(t),address:i};void 0!==s&&(n.memo=s);const o=await this.privatePostCreateWithdraw(this.extend(n,r)),d=this.safeValue(o,"return",{}),c=this.safeValue(d,"withdraw_info",{});return this.parseTransaction(c,a)}parseTransaction(e,t=undefined){return t=this.safeCurrency(void 0,t),{id:this.safeString(e,"id"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t];const d=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();const t=this.nonce();a=this.urlencode(this.extend({nonce:t,method:e},d));const i=this.hmac(this.encode(a),this.encode(this.secret),o.o);r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:i}}else"public"===t?(n+="/"+this.implodeParams(e,s),Object.keys(d).length&&(n+="?"+this.urlencode(d))):(n+="/"+this.implodeParams(e,s),"GET"===i?Object.keys(d).length&&(n+="?"+this.urlencode(d)):Object.keys(d).length&&(a=this.json(d),r={"Content-Type":"application/json"}));return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"success"in o){let e=this.safeValue(o,"success",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){const e=this.safeString(o,"code"),t=this.safeString(o,"error"),i=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwExactlyMatchedException(this.exceptions.exact,t,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new r.ExchangeError(i)}}}}},1067:(e,t,i)=>{i.d(t,{Z:()=>o});var s=i(1696),r=i(6689),a=i(2194),n=i(9292);class o extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"timex",name:"TimeX",countries:["AU"],version:"v1",rateLimit:1500,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,cancelOrders:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,editOrder:!0,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchWithdrawal:!1,fetchWithdrawals:!0,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1},timeframes:{"1m":"I1","5m":"I5","15m":"I15","30m":"I30","1h":"H1","2h":"H2","4h":"H4","6h":"H6","12h":"H12","1d":"D1","1w":"W1"},urls:{logo:"https://user-images.githubusercontent.com/1294454/70423869-6839ab00-1a7f-11ea-8f94-13ae72c31115.jpg",api:{rest:"https://plasma-relay-backend.timex.io"},www:"https://timex.io",doc:"https://docs.timex.io",referral:"https://timex.io/?refcode=1x27vNkTbP1uwkCck"},api:{addressbook:{get:["me"],post:["","id/{id}","id/{id}/remove"]},custody:{get:["credentials","credentials/h/{hash}","credentials/k/{key}","credentials/me","credentials/me/address","deposit-addresses","deposit-addresses/h/{hash}"]},history:{get:["orders","orders/details","orders/export/csv","trades","trades/export/csv"]},currencies:{get:["a/{address}","i/{id}","s/{symbol}"],post:["perform","prepare","remove/perform","s/{symbol}/remove/prepare","s/{symbol}/update/perform","s/{symbol}/update/prepare"]},manager:{get:["deposits","transfers","withdrawals"]},markets:{get:["i/{id}","s/{symbol}"],post:["perform","prepare","remove/perform","s/{symbol}/remove/prepare","s/{symbol}/update/perform","s/{symbol}/update/prepare"]},public:{get:["candles","currencies","markets","orderbook","orderbook/raw","orderbook/v2","tickers","trades"]},statistics:{get:["address"]},trading:{get:["balances","fees","orders"],post:["orders","orders/json"],put:["orders","orders/json"],delete:["orders","orders/json"]},tradingview:{get:["config","history","symbol_info","time"]}},precisionMode:n.sh,exceptions:{exact:{0:r.ExchangeError,1:r.NotSupported,4e3:r.BadRequest,4001:r.BadRequest,4002:r.InsufficientFunds,4003:r.AuthenticationError,4004:r.AuthenticationError,4005:r.BadRequest,4006:r.BadRequest,4007:r.BadRequest,4300:r.PermissionDenied,4100:r.AuthenticationError,4400:r.OrderNotFound,5001:r.InvalidOrder,5002:r.ExchangeError,400:r.BadRequest,401:r.AuthenticationError,403:r.PermissionDenied,404:r.OrderNotFound,429:r.RateLimitExceeded,500:r.ExchangeError,503:r.ExchangeNotAvailable},broad:{Insufficient:r.InsufficientFunds}},options:{expireIn:31536e3,fetchTickers:{period:"1d"},fetchTrades:{sort:"timestamp,asc"},fetchMyTrades:{sort:"timestamp,asc"},fetchOpenOrders:{sort:"createdAt,asc"},fetchClosedOrders:{sort:"createdAt,asc"},defaultSort:"timestamp,asc",defaultSortOrders:"createdAt,asc"}})}async fetchMarkets(e={}){const t=await this.publicGetMarkets(e),i=[];for(let e=0;e<t.length;e++)i.push(this.parseMarket(t[e]));return i}async fetchCurrencies(e={}){const t=await this.publicGetCurrencies(e),i=[];for(let e=0;e<t.length;e++){const s=t[e];i.push(this.parseCurrency(s))}return this.indexBy(i,"code")}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){const a=this.safeString(s,"address");if(s=this.omit(s,"address"),void 0===a)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires an address parameter");const n={address:a},o=await this.managerGetDeposits(this.extend(n,s));return this.parseTransactions(o,e,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){const a=this.safeString(s,"address");if(s=this.omit(s,"address"),void 0===a)throw new r.ArgumentsRequired(this.id+" fetchDeposits() requires an address parameter");const n={address:a},o=await this.managerGetWithdrawals(this.extend(n,s));return this.parseTransactions(o,e,t,i)}getCurrencyByAddress(e){const t=this.currencies;for(let i=0;i<t.length;i++){const s=t[i],r=this.safeValue(s,"info",{});if(this.safeString(r,"address")===e)return s}}parseTransaction(e,t=undefined){const i=this.safeString(e,"timestamp"),s=this.safeString(e,"token","");return t=this.getCurrencyByAddress(s),{info:e,id:this.safeString(e,"transferHash"),txid:this.safeString(e,"txid"),timestamp:this.parse8601(i),datetime:i,network:void 0,address:void 0,addressTo:this.safeString(e,"to"),addressFrom:this.safeString(e,"from"),tag:void 0,tagTo:void 0,tagFrom:void 0,type:void 0,amount:this.safeNumber(e,"value"),currency:this.safeCurrencyCode(void 0,t),status:"ok",updated:void 0,fee:void 0}}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=this.safeString(this.options.fetchTickers,"period","1d"),s={period:this.timeframes[i]},r=await this.publicGetTickers(this.extend(s,t));return this.parseTickers(r,e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s=this.safeString(this.options.fetchTickers,"period","1d"),r={market:i.id,period:this.timeframes[s]},a=await this.publicGetTickers(this.extend(r,t)),n=this.safeValue(a,0);return this.parseTicker(n,i)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={market:this.market(e).id};void 0!==t&&(s.limit=t);const r=await this.publicGetOrderbookV2(this.extend(s,i)),a=this.parse8601(this.safeString(r,"timestamp"));return this.parseOrderBook(r,e,a,"bid","ask","price","baseTokenAmount")}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a=this.safeValue(this.options,"fetchTrades",{}),n=this.safeValue(a,"sort","timestamp,asc"),o=this.safeString(s,"sort",n),d=this.omit(s,"sort"),c={market:r.id,sort:o};void 0!==t&&(c.from=this.iso8601(t)),void 0!==i&&(c.size=i);const h=await this.publicGetTrades(this.extend(c,d));return this.parseTrades(h,r,t,i)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,period:this.safeString(this.timeframes,t,t)},o=this.parseTimeframe(t);if(void 0===s&&(s=1e3),void 0!==i)n.from=this.iso8601(i),n.till=this.iso8601(this.sum(i,this.sum(s,1)*o*1e3));else{const e=this.milliseconds();n.till=this.iso8601(e),n.from=this.iso8601(e-s*o*1e3-1)}const d=await this.publicGetCandles(this.extend(n,r));return this.parseOHLCVs(d,a,t,i,s)}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.total=this.safeString(s,"totalBalance"),n.used=this.safeString(s,"lockedBalance"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.tradingGetBalances(e);return this.parseBalance(t)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=i.toUpperCase();let c=t.toUpperCase();this.safeValue(n,"postOnly",!1)&&(c="POST_ONLY",n=this.omit(n,["postOnly"]));const h={symbol:o.id,quantity:this.amountToPrecision(e,s),side:d,orderTypes:c};let u=n;if("LIMIT"===c||"POST_ONLY"===c){h.price=this.priceToPrecision(e,a);const i=this.safeInteger(this.options,"expireIn"),s=this.safeValue(n,"expireTime"),o=this.safeValue(n,"expireIn",i);if(void 0!==s)h.expireTime=s;else{if(void 0===o)throw new r.InvalidOrder(this.id+" createOrder() method requires a expireTime or expireIn param for a "+t+" order, you can also set the expireIn exchange-wide option");h.expireIn=o}u=this.omit(n,["expireTime","expireIn"])}else h.price=0;const l=await this.tradingPostOrders(this.extend(h,u)),p=this.safeValue(l,"orders",[]),f=this.safeValue(p,0,{});return this.parseOrder(f,o)}async editOrder(e,t,i,s,r=undefined,a=undefined,n={}){await this.loadMarkets();const o=this.market(t),d={id:e};void 0!==r&&(d.quantity=this.amountToPrecision(t,r)),void 0!==a&&(d.price=this.priceToPrecision(t,a));const c=await this.tradingPutOrders(this.extend(d,n));if("unchangedOrders"in c){const e=this.safeValue(c,"unchangedOrders",[]);return{id:this.safeString(e,0),info:c}}const h=this.safeValue(c,"changedOrders",[]),u=this.safeValue(h,0,{}),l=this.safeValue(u,"newOrder",{});return this.parseOrder(l,o)}async cancelOrder(e,t=undefined,i={}){return await this.loadMarkets(),await this.cancelOrders([e],t,i)}async cancelOrders(e,t=undefined,i={}){await this.loadMarkets();const s={id:e};return await this.tradingDeleteOrders(this.extend(s,i))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={orderHash:e},r=await this.historyGetOrdersDetails(s),a=this.safeValue(r,"order",{}),n=this.safeValue(r,"trades",[]);return this.parseOrder(this.extend(a,{trades:n}))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.safeValue(this.options,"fetchOpenOrders",{}),a=this.safeValue(r,"sort","createdAt,asc"),n=this.safeString(s,"sort",a),o=this.omit(s,"sort"),d={sort:n};let c;void 0!==e&&(c=this.market(e),d.symbol=c.id),void 0!==i&&(d.size=i);const h=await this.tradingGetOrders(this.extend(d,o)),u=this.safeValue(h,"orders",[]);return this.parseOrders(u,c,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.safeValue(this.options,"fetchClosedOrders",{}),a=this.safeValue(r,"sort","createdAt,asc"),n=this.safeString(s,"sort",a),o=this.omit(s,"sort"),d={sort:n,side:"BUY"};let c;void 0!==e&&(c=this.market(e),d.symbol=c.id),void 0!==t&&(d.from=this.iso8601(t)),void 0!==i&&(d.size=i);const h=await this.historyGetOrders(this.extend(d,o)),u=this.safeValue(h,"orders",[]);return this.parseOrders(u,c,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.safeValue(this.options,"fetchMyTrades",{}),a=this.safeValue(r,"sort","timestamp,asc"),n=this.safeString(s,"sort",a),o=this.omit(s,"sort"),d={sort:n};let c;void 0!==e&&(c=this.market(e),d.symbol=c.id),void 0!==t&&(d.from=this.iso8601(t)),void 0!==i&&(d.size=i);const h=await this.historyGetTrades(this.extend(d,o)),u=this.safeValue(h,"trades",[]);return this.parseTrades(u,c,t,i)}parseTradingFee(e,t=undefined){const i=this.safeString(e,"market"),s=this.safeNumber(e,"fee");return{info:e,symbol:this.safeSymbol(i,t),maker:s,taker:s}}async fetchTradingFee(e,t={}){await this.loadMarkets();const i=this.market(e),s={markets:i.id},r=await this.tradingGetFees(this.extend(s,t)),a=this.safeValue(r,0,{});return this.parseTradingFee(a,i)}parseMarket(e){const t=this.safeValue(e,"locked"),i=this.safeString(e,"symbol"),s=this.safeString(e,"baseCurrency"),r=this.safeString(e,"quoteCurrency"),n=this.safeCurrencyCode(s),o=this.safeCurrencyCode(r),d=this.safeString(e,"quantityIncrement"),c=this.safeString(e,"baseMinSize"),h=a.O.stringMax(d,c),u=this.safeString(e,"tickSize"),l=this.safeString(e,"quoteMinSize");return{id:i,symbol:n+"/"+o,base:n,quote:o,settle:void 0,baseId:s,quoteId:r,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!t,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(e,"takerFee"),maker:this.safeNumber(e,"makerFee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(e,"quantityIncrement"),price:this.safeNumber(e,"tickSize")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.parseNumber(h),max:void 0},price:{min:this.parseNumber(u),max:void 0},cost:{min:l,max:void 0}},info:e}}parseCurrency(e){const t=this.safeString(e,"symbol"),i=this.safeCurrencyCode(t),s=this.safeString(e,"name"),r=this.safeValue(e,"depositEnabled"),a=this.safeValue(e,"withdrawalEnabled"),n=this.safeValue(e,"active"),o=r&&a&&n,d=this.safeString(e,"withdrawalFee"),c=this.safeInteger(e,"tradeDecimals");let h;if(void 0!==d&&void 0!==c){const e=d.length-c;if(e>0){const t=d.slice(0,e),i=d.slice(-e);h=this.parseNumber(t+"."+i)}else{let t=".";for(let i=0;i<-e;i++)t+="0";h=this.parseNumber(t+d)}}return{id:i,code:i,info:e,type:void 0,name:s,active:o,deposit:r,withdraw:a,fee:h,precision:this.parseNumber(this.parsePrecision(this.safeString(e,"decimals"))),limits:{withdraw:{min:h,max:void 0},amount:{min:void 0,max:void 0}}}}parseTicker(e,t=undefined){const i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"/"),r=this.parse8601(this.safeString(e,"timestamp")),a=this.safeString(e,"last"),n=this.safeString(e,"open");return this.safeTicker({symbol:s,info:e,timestamp:r,datetime:this.iso8601(r),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:n,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"volume"),quoteVolume:this.safeString(e,"volumeQuote")},t)}parseTrade(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.parse8601(this.safeString(e,"timestamp")),n=this.safeString(e,"price"),o=this.safeString(e,"quantity"),d=this.parseNumber(n),c=this.parseNumber(o),h=this.parseNumber(a.O.stringMul(n,o)),u=this.safeString(e,"id"),l=this.safeStringLower2(e,"direction","side"),p=this.safeStringLower(e,"makerOrTaker");let f,m;void 0!==p&&(f=this.safeString(e,p+"OrderId"));const v=this.safeNumber(e,"fee"),g=this.safeCurrencyCode(this.safeString(e,"feeToken"));return void 0!==v&&(m={cost:v,currency:g}),{info:e,id:u,timestamp:r,datetime:this.iso8601(r),symbol:s,order:f,type:void 0,side:l,price:d,amount:c,cost:h,takerOrMaker:p,fee:m}}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,"timestamp")),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}parseOrder(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeStringLower(e,"type"),r=this.safeStringLower(e,"side"),n=this.safeString(e,"symbol"),o=this.safeSymbol(n,t),d=this.parse8601(this.safeString(e,"createdAt")),c=this.safeString(e,"price"),h=this.safeString(e,"quantity"),u=this.safeString(e,"filledQuantity"),l=this.omitZero(this.safeString(e,"cancelledQuantity"));let p;p=a.O.stringEquals(u,h)?"closed":void 0!==l?"canceled":"open";const f=this.safeValue(e,"trades",[]),m=this.safeString(e,"clientOrderId");return this.safeOrder({info:e,id:i,clientOrderId:m,timestamp:d,datetime:this.iso8601(d),lastTradeTimestamp:void 0,symbol:o,type:s,timeInForce:void 0,postOnly:void 0,side:r,price:c,stopPrice:void 0,triggerPrice:void 0,amount:h,cost:void 0,average:void 0,filled:u,remaining:void 0,status:p,fee:void 0,trades:f},t)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+t+"/"+e;return Object.keys(s).length&&(n+="?"+this.urlencodeWithArrayRepeat(s)),"public"!==t&&(this.checkRequiredCredentials(),r={authorization:"Basic "+this.stringToBase64(this.apiKey+":"+this.secret)}),{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&e>=400){const e=this.id+" "+n;let t=this.safeValue(o,"error");void 0===t&&(t=o);const i=this.safeString2(t,"code","status"),s=this.safeString2(t,"message","debugMessage");throw this.throwBroadlyMatchedException(this.exceptions.broad,s,e),this.throwExactlyMatchedException(this.exceptions.exact,i,e),this.throwExactlyMatchedException(this.exceptions.exact,s,e),new r.ExchangeError(e)}}}},5261:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(58),r=i(9292),a=i(6689),n=i(2194),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"tokocrypto",name:"Tokocrypto",countries:["ID"],certified:!1,pro:!1,version:"v1",has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,addMargin:void 0,borrowMargin:void 0,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:void 0,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:void 0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!0,fetchAccounts:!1,fetchBalance:!0,fetchBidsAsks:!0,fetchBorrowInterest:void 0,fetchBorrowRate:void 0,fetchBorrowRateHistories:void 0,fetchBorrowRateHistory:void 0,fetchBorrowRates:void 0,fetchBorrowRatesPerSymbol:void 0,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:"emulated",fetchCurrencies:!1,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchL3OrderBook:!1,fetchLedger:void 0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:"emulated",fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchOrders:!0,fetchOrderTrades:!1,fetchPosition:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!1,fetchTickers:!1,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTradingLimits:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawal:!1,fetchWithdrawals:!0,fetchWithdrawalWhitelist:!1,reduceMargin:!1,repayMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,signIn:!1,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/183870484-d3398d0c-f6a1-4cce-91b8-d58792308716.jpg",api:{rest:{public:"https://www.tokocrypto.com",binance:"https://api.binance.com/api/v3",private:"https://www.tokocrypto.com"}},www:"https://tokocrypto.com",doc:"https://www.tokocrypto.com/apidocs/",fees:"https://www.tokocrypto.com/fees/newschedule"},api:{binance:{get:{ping:1,time:1,depth:{cost:1,byLimit:[[100,1],[500,5],[1e3,10],[5e3,50]]},trades:1,aggTrades:1,historicalTrades:5,klines:1,"ticker/24hr":{cost:1,noSymbol:40},"ticker/price":{cost:1,noSymbol:2},"ticker/bookTicker":{cost:1,noSymbol:2},exchangeInfo:10},put:{userDataStream:1},post:{userDataStream:1},delete:{userDataStream:1}},public:{get:{"open/v1/common/time":1,"open/v1/common/symbols":1,"open/v1/market/depth":1,"open/v1/market/trades":1,"open/v1/market/agg-trades":1,"open/v1/market/klines":1}},private:{get:{"open/v1/orders/detail":1,"open/v1/orders":1,"open/v1/account/spot":1,"open/v1/account/spot/asset":1,"open/v1/orders/trades":1,"open/v1/withdraws":1,"open/v1/deposits":1,"open/v1/deposits/address":1},post:{"open/v1/orders":1,"open/v1/orders/cancel":1,"open/v1/orders/oco":1,"open/v1/withdraws":1,"open/v1/user-data-stream":1}}},fees:{trading:{tierBased:!0,percentage:!0,taker:this.parseNumber("0.0075"),maker:this.parseNumber("0.0075")}},precisionMode:r.nr,options:{defaultTimeInForce:"GTC",hasAlreadyAuthenticatedSuccessfully:!1,warnOnFetchOpenOrdersWithoutSymbol:!0,recvWindow:5e3,timeDifference:0,adjustForTimeDifference:!1,newOrderRespType:{market:"FULL",limit:"FULL"},quoteOrderQty:!1,networks:{ERC20:"ETH",TRC20:"TRX",BEP2:"BNB",BEP20:"BSC",OMNI:"OMNI",EOS:"EOS",SPL:"SOL"},reverseNetworks:{"tronscan.org":"TRC20","etherscan.io":"ERC20","bscscan.com":"BSC","explorer.binance.org":"BEP2","bithomp.com":"XRP","bloks.io":"EOS","stellar.expert":"XLM","blockchair.com/bitcoin":"BTC","blockchair.com/bitcoin-cash":"BCH","blockchair.com/ecash":"XEC","explorer.litecoin.net":"LTC","explorer.avax.network":"AVAX","solscan.io":"SOL","polkadot.subscan.io":"DOT","dashboard.internetcomputer.org":"ICP","explorer.chiliz.com":"CHZ","cardanoscan.io":"ADA","mainnet.theoan.com":"AION","algoexplorer.io":"ALGO","explorer.ambrosus.com":"AMB","viewblock.io/zilliqa":"ZIL","viewblock.io/arweave":"AR","explorer.ark.io":"ARK","atomscan.com":"ATOM","www.mintscan.io":"CTK","explorer.bitcoindiamond.org":"BCD","btgexplorer.com":"BTG","bts.ai":"BTS","explorer.celo.org":"CELO","explorer.nervos.org":"CKB","cerebro.cortexlabs.ai":"CTXC","chainz.cryptoid.info":"VIA","explorer.dcrdata.org":"DCR","digiexplorer.info":"DGB","dock.subscan.io":"DOCK","dogechain.info":"DOGE","explorer.elrond.com":"EGLD","blockscout.com":"ETC","explore-fetchhub.fetch.ai":"FET","filfox.info":"FIL","fio.bloks.io":"FIO","explorer.firo.org":"FIRO","neoscan.io":"NEO","ftmscan.com":"FTM","explorer.gochain.io":"GO","block.gxb.io":"GXS","hash-hash.info":"HBAR","www.hiveblockexplorer.com":"HIVE","explorer.helium.com":"HNT","tracker.icon.foundation":"ICX","www.iostabc.com":"IOST","explorer.iota.org":"IOTA","iotexscan.io":"IOTX","irishub.iobscan.io":"IRIS","kava.mintscan.io":"KAVA","scope.klaytn.com":"KLAY","kmdexplorer.io":"KMD","kusama.subscan.io":"KSM","explorer.lto.network":"LTO","polygonscan.com":"POLYGON","explorer.ont.io":"ONT","minaexplorer.com":"MINA","nanolooker.com":"NANO","explorer.nebulas.io":"NAS","explorer.nbs.plus":"NBS","explorer.nebl.io":"NEBL","nulscan.io":"NULS","nxscan.com":"NXS","explorer.harmony.one":"ONE","explorer.poa.network":"POA","qtum.info":"QTUM","explorer.rsk.co":"RSK","www.oasisscan.com":"ROSE","ravencoin.network":"RVN","sc.tokenview.com":"SC","secretnodes.com":"SCRT","explorer.skycoin.com":"SKY","steemscan.com":"STEEM","explorer.stacks.co":"STX","www.thetascan.io":"THETA","scan.tomochain.com":"TOMO","explore.vechain.org":"VET","explorer.vite.net":"VITE","www.wanscan.org":"WAN","wavesexplorer.com":"WAVES","wax.eosx.io":"WAXP","waltonchain.pro":"WTC","chain.nem.ninja":"XEM","verge-blockchain.info":"XVG","explorer.yoyow.org":"YOYOW","explorer.zcha.in":"ZEC","explorer.zensystem.io":"ZEN"},impliedNetworks:{ETH:{ERC20:"ETH"},TRX:{TRC20:"TRX"}},legalMoney:{MXN:!0,UGX:!0,SEK:!0,CHF:!0,VND:!0,AED:!0,DKK:!0,KZT:!0,HUF:!0,PEN:!0,PHP:!0,USD:!0,TRY:!0,EUR:!0,NGN:!0,PLN:!0,BRL:!0,ZAR:!0,KES:!0,ARS:!0,RUB:!0,AUD:!0,NOK:!0,CZK:!0,GBP:!0,UAH:!0,GHS:!0,HKD:!0,CAD:!0,INR:!0,JPY:!0,NZD:!0}},exceptions:{exact:{"System is under maintenance.":a.OnMaintenance,"System abnormality":a.ExchangeError,"You are not authorized to execute this request.":a.PermissionDenied,"API key does not exist":a.AuthenticationError,"Order would trigger immediately.":a.OrderImmediatelyFillable,"Stop price would trigger immediately.":a.OrderImmediatelyFillable,"Order would immediately match and take.":a.OrderImmediatelyFillable,"Account has insufficient balance for requested action.":a.InsufficientFunds,"Rest API trading is not enabled.":a.ExchangeNotAvailable,"You don't have permission.":a.PermissionDenied,"Market is closed.":a.ExchangeNotAvailable,"Too many requests. Please try again later.":a.DDoSProtection,"This action disabled is on this account.":a.AccountSuspended,"-1000":a.ExchangeNotAvailable,"-1001":a.ExchangeNotAvailable,"-1002":a.AuthenticationError,"-1003":a.RateLimitExceeded,"-1004":a.DDoSProtection,"-1005":a.PermissionDenied,"-1006":a.BadResponse,"-1007":a.RequestTimeout,"-1010":a.BadResponse,"-1011":a.PermissionDenied,"-1013":a.InvalidOrder,"-1014":a.InvalidOrder,"-1015":a.RateLimitExceeded,"-1016":a.ExchangeNotAvailable,"-1020":a.BadRequest,"-1021":a.InvalidNonce,"-1022":a.AuthenticationError,"-1023":a.BadRequest,"-1099":a.AuthenticationError,"-1100":a.BadRequest,"-1101":a.BadRequest,"-1102":a.BadRequest,"-1103":a.BadRequest,"-1104":a.BadRequest,"-1105":a.BadRequest,"-1106":a.BadRequest,"-1108":a.BadRequest,"-1109":a.AuthenticationError,"-1110":a.BadRequest,"-1111":a.BadRequest,"-1112":a.InvalidOrder,"-1113":a.BadRequest,"-1114":a.BadRequest,"-1115":a.BadRequest,"-1116":a.BadRequest,"-1117":a.BadRequest,"-1118":a.BadRequest,"-1119":a.BadRequest,"-1120":a.BadRequest,"-1121":a.BadSymbol,"-1125":a.AuthenticationError,"-1127":a.BadRequest,"-1128":a.BadRequest,"-1130":a.BadRequest,"-1131":a.BadRequest,"-1136":a.BadRequest,"-2008":a.AuthenticationError,"-2010":a.ExchangeError,"-2011":a.OrderNotFound,"-2013":a.OrderNotFound,"-2014":a.AuthenticationError,"-2015":a.AuthenticationError,"-2016":a.BadRequest,"-2018":a.InsufficientFunds,"-2019":a.InsufficientFunds,"-2020":a.OrderNotFillable,"-2021":a.OrderImmediatelyFillable,"-2022":a.InvalidOrder,"-2023":a.InsufficientFunds,"-2024":a.InsufficientFunds,"-2025":a.InvalidOrder,"-2026":a.InvalidOrder,"-2027":a.InvalidOrder,"-2028":a.InsufficientFunds,"-3000":a.ExchangeError,"-3001":a.AuthenticationError,"-3002":a.BadSymbol,"-3003":a.BadRequest,"-3004":a.ExchangeError,"-3005":a.InsufficientFunds,"-3006":a.InsufficientFunds,"-3007":a.ExchangeError,"-3008":a.InsufficientFunds,"-3009":a.BadRequest,"-3010":a.ExchangeError,"-3011":a.BadRequest,"-3012":a.ExchangeError,"-3013":a.BadRequest,"-3014":a.AccountSuspended,"-3015":a.ExchangeError,"-3016":a.BadRequest,"-3017":a.ExchangeError,"-3018":a.AccountSuspended,"-3019":a.AccountSuspended,"-3020":a.InsufficientFunds,"-3021":a.BadRequest,"-3022":a.AccountSuspended,"-3023":a.BadRequest,"-3024":a.ExchangeError,"-3025":a.BadRequest,"-3026":a.BadRequest,"-3027":a.BadSymbol,"-3028":a.BadSymbol,"-3029":a.ExchangeError,"-3036":a.AccountSuspended,"-3037":a.ExchangeError,"-3038":a.BadRequest,"-3041":a.InsufficientFunds,"-3042":a.BadRequest,"-3043":a.BadRequest,"-3044":a.DDoSProtection,"-3045":a.ExchangeError,"-3999":a.ExchangeError,"-4001":a.BadRequest,"-4002":a.BadRequest,"-4003":a.BadRequest,"-4004":a.AuthenticationError,"-4005":a.RateLimitExceeded,"-4006":a.BadRequest,"-4007":a.BadRequest,"-4008":a.BadRequest,"-4010":a.BadRequest,"-4011":a.BadRequest,"-4012":a.BadRequest,"-4013":a.AuthenticationError,"-4014":a.PermissionDenied,"-4015":a.ExchangeError,"-4016":a.PermissionDenied,"-4017":a.PermissionDenied,"-4018":a.BadSymbol,"-4019":a.BadSymbol,"-4021":a.BadRequest,"-4022":a.BadRequest,"-4023":a.ExchangeError,"-4024":a.InsufficientFunds,"-4025":a.InsufficientFunds,"-4026":a.InsufficientFunds,"-4027":a.ExchangeError,"-4028":a.BadRequest,"-4029":a.BadRequest,"-4030":a.ExchangeError,"-4031":a.ExchangeError,"-4032":a.ExchangeError,"-4033":a.BadRequest,"-4034":a.ExchangeError,"-4035":a.PermissionDenied,"-4036":a.BadRequest,"-4037":a.ExchangeError,"-4038":a.ExchangeError,"-4039":a.BadRequest,"-4040":a.BadRequest,"-4041":a.ExchangeError,"-4042":a.ExchangeError,"-4043":a.BadRequest,"-4044":a.BadRequest,"-4045":a.ExchangeError,"-4046":a.AuthenticationError,"-4047":a.BadRequest,"-5001":a.BadRequest,"-5002":a.InsufficientFunds,"-5003":a.InsufficientFunds,"-5004":a.BadRequest,"-5005":a.InsufficientFunds,"-5006":a.BadRequest,"-5007":a.BadRequest,"-5008":a.InsufficientFunds,"-5009":a.BadRequest,"-5010":a.ExchangeError,"-5011":a.BadRequest,"-5012":a.ExchangeError,"-5013":a.InsufficientFunds,"-5021":a.BadRequest,"-6001":a.BadRequest,"-6003":a.BadRequest,"-6004":a.ExchangeError,"-6005":a.InvalidOrder,"-6006":a.BadRequest,"-6007":a.BadRequest,"-6008":a.BadRequest,"-6009":a.RateLimitExceeded,"-6011":a.BadRequest,"-6012":a.InsufficientFunds,"-6013":a.ExchangeError,"-6014":a.BadRequest,"-6015":a.BadRequest,"-6016":a.BadRequest,"-6017":a.BadRequest,"-6018":a.BadRequest,"-6019":a.AuthenticationError,"-6020":a.BadRequest,"-7001":a.BadRequest,"-7002":a.BadRequest,"-9000":a.InsufficientFunds,"-10017":a.BadRequest,"-11008":a.InsufficientFunds,"-12014":a.RateLimitExceeded,"-13000":a.BadRequest,"-13001":a.BadRequest,"-13002":a.BadRequest,"-13003":a.BadRequest,"-13004":a.BadRequest,"-13005":a.BadRequest,"-13006":a.InvalidOrder,"-13007":a.AuthenticationError,"-21001":a.BadRequest,"-21002":a.BadRequest,"-21003":a.BadRequest,100001003:a.BadRequest,2202:a.InsufficientFunds,3210:a.InvalidOrder,3203:a.InvalidOrder,3211:a.InvalidOrder,3207:a.InvalidOrder,3218:a.OrderNotFound},broad:{"has no operation privilege":a.PermissionDenied,MAX_POSITION:a.InvalidOrder}}})}nonce(){return this.milliseconds()-this.options.timeDifference}async fetchTime(e={}){const t=await this.publicGetOpenV1CommonTime(e);return this.safeInteger(t,"serverTime")}async fetchMarkets(e={}){const t=await this.publicGetOpenV1CommonSymbols(e);this.options.adjustForTimeDifference&&await this.loadTimeDifference();const i=this.safeValue(t,"data",{}),s=this.safeValue(i,"list",[]),r=[];for(let e=0;e<s.length;e++){const t=s[e],i=this.safeString(t,"baseAsset"),a=this.safeString(t,"quoteAsset"),n=this.safeString(t,"symbol"),o=this.safeStringLower(t,"symbol"),d=this.safeString(t,"marginAsset"),c=this.safeCurrencyCode(i),h=this.safeCurrencyCode(a),u=this.safeCurrencyCode(d),l=c+"/"+h,p=this.safeValue(t,"filters",[]),f=this.indexBy(p,"filterType");let m="TRADING"===this.safeString2(t,"status","contractStatus");const v=this.safeValue(t,"permissions",[]);for(let e=0;e<v.length;e++)if("TRD_GRP_003"===v[e]){m=!1;break}const g={id:n,lowercaseId:o,symbol:l,base:c,quote:h,settle:u,baseId:i,quoteId:a,settleId:d,type:"spot",spot:!0,margin:this.safeValue(t,"isMarginTradingAllowed",!1),swap:!1,future:!1,delivery:!1,option:!1,active:m,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeInteger(t,"quantityPrecision"),price:this.safeInteger(t,"pricePrecision"),base:this.safeInteger(t,"baseAssetPrecision"),quote:this.safeInteger(t,"quotePrecision")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t};if("PRICE_FILTER"in f){const e=this.safeValue(f,"PRICE_FILTER",{}),t=this.safeString(e,"tickSize");g.precision.price=this.precisionFromString(t),g.limits.price={min:this.safeNumber(e,"minPrice"),max:this.safeNumber(e,"maxPrice")},g.precision.price=this.precisionFromString(e.tickSize)}if("LOT_SIZE"in f){const e=this.safeValue(f,"LOT_SIZE",{}),t=this.safeString(e,"stepSize");g.precision.amount=this.precisionFromString(t),g.limits.amount={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MARKET_LOT_SIZE"in f){const e=this.safeValue(f,"MARKET_LOT_SIZE",{});g.limits.market={min:this.safeNumber(e,"minQty"),max:this.safeNumber(e,"maxQty")}}if("MIN_NOTIONAL"in f){const e=this.safeValue(f,"MIN_NOTIONAL",{});g.limits.cost.min=this.safeNumber2(e,"minNotional","notional")}r.push(g)}return r}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.baseId+s.quoteId};void 0!==t&&(r.limit=t);const a=await this.binanceGetDepth(this.extend(r,i)),n=this.safeInteger(a,"T"),o=this.parseOrderBook(a,e,n);return o.nonce=this.safeInteger(a,"lastUpdateId"),o}parseTrade(e,t=undefined){const i=this.safeInteger2(e,"T","time"),s=this.safeString2(e,"p","price"),r=this.safeString2(e,"q","qty"),a=this.safeString2(e,"quoteQty","baseQty"),n=this.safeString(e,"symbol"),o=this.safeSymbol(n,t);let d,c=this.safeString2(e,"t","a");c=this.safeString2(e,"id","tradeId",c);const h=this.safeString(e,"orderId"),u=this.safeValue2(e,"m","isBuyerMaker");let l,p;return void 0!==u?(d=u?"sell":"buy",l="taker"):"side"in e?d=this.safeStringLower(e,"side"):"isBuyer"in e&&(d=e.isBuyer?"buy":"sell"),"commission"in e&&(p={cost:this.safeString(e,"commission"),currency:this.safeCurrencyCode(this.safeString(e,"commissionAsset"))}),"isMaker"in e&&(l=e.isMaker?"maker":"taker"),"maker"in e&&(l=e.maker?"maker":"taker"),this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:o,id:c,order:h,type:void 0,side:d,takerOrMaker:l,price:s,amount:r,cost:a,fee:p},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.baseId+r.quoteId},n=this.safeString(this.options,"fetchTradesMethod","binanceGetTrades");"binanceGetAggTrades"===n&&void 0!==t&&(a.startTime=t,a.endTime=this.sum(t,36e5)),void 0!==i&&(a.limit=i);const o=await this[n](this.extend(a,s));return this.parseTrades(o,r,t,i)}parseTicker(e,t=undefined){const i=this.safeInteger(e,"closeTime"),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeString(e,"lastPrice");let n,o;return"baseVolume"in e?(n=this.safeString(e,"baseVolume"),o=this.safeString(e,"volume")):(n=this.safeString(e,"volume"),o=this.safeString(e,"quoteVolume")),this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"highPrice"),low:this.safeString(e,"lowPrice"),bid:this.safeString(e,"bidPrice"),bidVolume:this.safeString(e,"bidQty"),ask:this.safeString(e,"askPrice"),askVolume:this.safeString(e,"askQty"),vwap:this.safeString(e,"weightedAvgPrice"),open:this.safeString(e,"openPrice"),close:a,last:a,previousClose:this.safeString(e,"prevClosePrice"),change:this.safeString(e,"priceChange"),percentage:this.safeString(e,"priceChangePercent"),average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=this.safeString(this.options,"fetchTickersMethod","binanceGetTicker24hr"),s=await this[i](t);return this.parseTickers(s,e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.baseId+i.quoteId},r=await this.binanceGetTicker24hr(this.extend(s,t));if(Array.isArray(r)){const e=this.safeValue(r,0,{});return this.parseTicker(e,i)}return this.parseTicker(r,i)}async fetchBidsAsks(e=undefined,t={}){await this.loadMarkets();const i=await this.binanceGetTickerBookTicker(t);return this.parseTickers(i,e)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.safeString(r,"price"),o=this.safeInteger(r,"until");r=this.omit(r,["price","until"]),s=void 0===s?500:Math.min(s,1500);const d={interval:this.safeString(this.timeframes,t,t),limit:s};"index"===n?d.pair=a.id:d.symbol=a.baseId+a.quoteId,void 0!==i&&(d.startTime=i),void 0!==o&&(d.endTime=o);const c=await this.binanceGetKlines(this.extend(d,r));return this.parseOHLCVs(c,a,t,i,s)}async fetchBalance(e={}){await this.loadMarkets();const t=this.safeString2(this.options,"fetchBalance","defaultType","spot"),i=this.safeString(e,"type",t),s=this.safeString2(this.options,"marginMode","defaultMarginMode"),r=this.safeStringLower(e,"marginMode",s),a=await this.privateGetOpenV1AccountSpot(this.extend({},e));return this.parseBalance(a,i,r)}parseBalance(e,t=undefined,i=undefined){const s=this.safeInteger(e,"updateTime"),r={info:e,timestamp:s,datetime:this.iso8601(s)},a=this.safeValue(e,"data",{}),n=this.safeValue(a,"accountAssets",[]);for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"asset"),s=this.safeCurrencyCode(i),a=this.account();a.free=this.safeString(t,"free"),a.used=this.safeString(t,"locked"),r[s]=a}return this.safeBalance(r)}parseOrderStatus(e){return this.safeString({"-2":"open",0:"open",1:"open",2:"closed",3:"canceled",4:"canceling",5:"rejected",6:"expired",NEW:"open",PARTIALLY_FILLED:"open",FILLED:"closed",CANCELED:"canceled",PENDING_CANCEL:"canceling",REJECTED:"rejected",EXPIRED:"expired"},e,e)}parseOrder(e,t=undefined){const i=this.parseOrderStatus(this.safeString(e,"status")),s=this.safeString(e,"symbol"),r=this.safeSymbol(s,t),a=this.safeString(e,"executedQty","0"),n=this.safeInteger(e,"createTime"),o=this.safeString(e,"avgPrice"),d=this.safeString(e,"price"),c=this.safeString(e,"origQty");let h=this.safeString2(e,"cummulativeQuoteQty","cumQuote");h=this.safeString(e,"cumBase",h);const u=this.safeString(e,"orderId");let l=this.safeStringLower(e,"type"),p=this.safeStringLower(e,"side");"0"===p?p="buy":"1"===p&&(p="sell");const f=this.safeValue(e,"fills",[]),m=this.safeString(e,"clientOrderId");let v=this.safeString(e,"timeInForce");"GTX"===v&&(v="PO");const g="limit_maker"===l||"PO"===v;"limit_maker"===l&&(l="limit");const y=this.safeString(e,"stopPrice"),b=this.parseNumber(this.omitZero(y));return this.safeOrder({info:e,id:u,clientOrderId:m,timestamp:n,datetime:this.iso8601(n),lastTradeTimestamp:void 0,symbol:r,type:l,timeInForce:v,postOnly:g,reduceOnly:this.safeValue(e,"reduceOnly"),side:p,price:d,stopPrice:b,triggerPrice:b,amount:c,cost:h,average:o,filled:a,remaining:void 0,status:i,fee:void 0,trades:f},t)}async createOrder(e,t,i,s,n=undefined,o={}){await this.loadMarkets();const d=this.market(e),c=this.safeString2(o,"clientOrderId","clientId");this.safeValue(o,"postOnly",!1)&&(t="LIMIT_MAKER"),o=this.omit(o,["clientId","clientOrderId"]);const h=t.toUpperCase();let u=h;const l=this.safeValue2(o,"triggerPrice","stopPrice");void 0!==l&&(o=this.omit(o,["triggerPrice","stopPrice"]),"MARKET"===u?u="STOP_LOSS":"LIMIT"===u&&(u="STOP_LOSS_LIMIT"));const p=this.safeValue(d.info,"orderTypes");if(!this.inArray(u,p))throw h!==u?new a.InvalidOrder(this.id+" stopPrice parameter is not allowed for "+e+" "+t+" orders"):new a.InvalidOrder(this.id+" "+t+" is not a valid order type for the "+e+" market");const f={symbol:d.baseId+"_"+d.quoteId,type:this.safeString({LIMIT:1,MARKET:2,STOP_LOSS:3,STOP_LOSS_LIMIT:4,TAKE_PROFIT:5,TAKE_PROFIT_LIMIT:6,LIMIT_MAKER:7},u)};if("buy"===i?f.side=0:"sell"===i&&(f.side=1),void 0===c){const e=this.safeValue(this.options,"broker");if(void 0!==e){const t=this.safeString(e,"marketType");void 0!==t&&(f.clientId=t+this.uuid22())}}else f.clientId=c;let m=!1,v=!1,g=!1;if("MARKET"===u)if(this.safeValue(this.options,"quoteOrderQty",!0)){const e=this.safeValue2(o,"quoteOrderQty","cost"),t=d.precision.price;void 0!==e?(f.quoteOrderQty=this.decimalToPrecision(e,r.tk,t,this.precisionMode),o=this.omit(o,["quoteOrderQty","cost"])):void 0!==n?f.quoteOrderQty=this.decimalToPrecision(s*n,r.tk,t,this.precisionMode):g=!0}else g=!0;else"LIMIT"===u?(m=!0,g=!0):"STOP_LOSS"===u||"TAKE_PROFIT"===u?(v=!0,g=!0,(d.linear||d.inverse)&&(m=!0)):"STOP_LOSS_LIMIT"===u||"TAKE_PROFIT_LIMIT"===u?(g=!0,v=!0,m=!0):"LIMIT_MAKER"===u&&(m=!0,g=!0);if(g&&(f.quantity=this.amountToPrecision(e,s)),m){if(void 0===n)throw new a.InvalidOrder(this.id+" createOrder() requires a price argument for a "+t+" order");f.price=this.priceToPrecision(e,n)}if(v){if(void 0===l)throw new a.InvalidOrder(this.id+" createOrder() requires a stopPrice extra param for a "+t+" order");f.stopPrice=this.priceToPrecision(e,l)}const y=await this.privatePostOpenV1Orders(this.extend(f,o)),b=this.safeValue(y,"data",{});return this.parseOrder(b,d)}async fetchOrder(e,t=undefined,i={}){const s={orderId:e},r=await this.privateGetOpenV1Orders(this.extend(s,i)),a=this.safeValue(r,"data",{}),n=this.safeValue(a,"list",[]),o=this.safeValue(n,0,{});return this.parseOrder(o)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={symbol:r.id};void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const o=await this.privateGetOpenV1Orders(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"list",[]);return this.parseOrders(c,r,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({type:1},s))}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrders(e,t,i,this.extend({type:2},s))}async cancelOrder(e,t=undefined,i={}){const s={orderId:e},r=await this.privatePostOpenV1OrdersCancel(this.extend(s,i)),a=this.safeValue(r,"data",{});return this.parseOrder(a)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new a.ArgumentsRequired(this.id+" fetchMyTrades() requires a symbol argument");await this.loadMarkets();const r=this.market(e),n={symbol:r.id},o=this.safeInteger2(s,"until","endTime");if(void 0!==t){const e=parseInt(t);n.startTime=e}void 0!==o&&(n.endTime=o,s=this.omit(s,["endTime","until"])),void 0!==i&&(n.limit=i);const d=await this.privateGetOpenV1OrdersTrades(this.extend(n,s)),c=this.safeValue(d,"data",{}),h=this.safeValue(c,"list",[]);return this.parseTrades(h,r,t,i)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={asset:this.currency(e).id},s=this.safeValue(this.options,"networks",{});let r=this.safeStringUpper(t,"network");r=this.safeString(s,r,r),void 0!==r&&(i.network=r,t=this.omit(t,"network"));const a=await this.privateGetOpenV1DepositsAddress(this.extend(i,t)),n=this.safeValue(a,"data",{}),o=this.safeString(n,"address");let d=this.safeString(n,"addressTag","");return 0===d.length&&(d=void 0),this.checkAddress(o),{currency:e,address:o,tag:d,network:this.safeString(n,"network"),info:a}}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={},n=this.safeInteger(s,"until");if(void 0!==e&&(r=this.currency(e),a.coin=r.id),void 0!==t){a.startTime=t;let e=this.sum(t,7776e6);void 0!==n&&(e=Math.min(e,n)),a.endTime=e}void 0!==i&&(a.limit=i);const o=await this.privateGetOpenV1Deposits(this.extend(a,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"list",[]);return this.parseTransactions(c,r,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.coin=a.id),void 0!==t&&(r.startTime=t,r.endTime=this.sum(t,7776e6)),void 0!==i&&(r.limit=i);const n=await this.privateGetOpenV1Withdraws(this.extend(r,s)),o=this.safeValue(n,"data",{}),d=this.safeValue(o,"list",[]);return this.parseTransactions(d,a,t,i)}parseTransactionStatusByType(e,t=undefined){const i=this.safeValue({deposit:{0:"pending",1:"ok"},withdrawal:{0:"pending",1:"canceled",2:"pending",3:"failed",4:"pending",5:"failed",10:"ok"}},t,{});return this.safeString(i,e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"address");let s=this.safeString(e,"addressTag");void 0!==s&&s.length<1&&(s=void 0);let r=this.safeString(e,"txId");void 0!==r&&r.indexOf("Internal transfer ")>=0&&(r=r.slice(18));const a=this.safeString2(e,"coin","fiatCurrency"),n=this.safeCurrencyCode(a,t);let o;const d=this.safeInteger(e,"insertTime"),c=this.safeInteger2(e,"createTime","timestamp");let h=this.safeString(e,"type");void 0===h&&(void 0!==d&&void 0===c?(h="deposit",o=d):void 0===d&&void 0!==c&&(h="withdrawal",o=c));const u=this.safeNumber2(e,"transactionFee","totalFee"),l={currency:void 0,cost:void 0,rate:void 0};void 0!==u&&(l.currency=n,l.cost=u);let p=!1;void 0!==this.safeInteger(e,"transferType")&&(p=!0);let f=this.safeString(e,"id");if(void 0===f){const t=this.safeValue(e,"data",{});f=this.safeString(t,"withdrawId"),h="withdrawal"}return{info:e,id:f,txid:r,type:h,currency:n,network:this.safeString(e,"network"),amount:this.safeNumber(e,"amount"),status:this.parseTransactionStatusByType(this.safeString(e,"status"),h),timestamp:o,datetime:this.iso8601(o),address:i,addressFrom:void 0,addressTo:i,tag:s,tagFrom:void 0,tagTo:s,updated:this.safeInteger2(e,"successTime","updateTime"),comment:void 0,internal:p,fee:l}}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),await this.loadMarkets(),this.checkAddress(i);const a=this.currency(e),n={asset:a.id,address:i,amount:this.numberToString(t)};void 0!==s&&(n.addressTag=s);const[o,d]=this.handleNetworkCodeAndParams(r),c=this.networkCodeToId(o);void 0!==c&&(n.network=c.toUpperCase());const h=await this.privatePostOpenV1Withdraws(this.extend(n,d));return this.parseTransaction(h,a)}sign(e,t="public",i="GET",s={},r=undefined,n=undefined){if(!(t in this.urls.api.rest))throw new a.NotSupported(this.id+" does not have a testnet/sandbox URL for "+t+" endpoints");let d=this.urls.api.rest[t];if(d+="/"+e,"wapi"===t&&(d+=".html"),"userDataStream"===e||"listenKey"===e){if(!this.apiKey)throw new a.AuthenticationError(this.id+" userDataStream endpoint requires `apiKey` credential");r={"X-MBX-APIKEY":this.apiKey,"Content-Type":"application/x-www-form-urlencoded"},"GET"!==i&&(n=this.urlencode(s))}else if("private"===t||"sapi"===t&&"system/status"!==e||"sapiV3"===t||"wapi"===t&&"systemStatus"!==e||"dapiPrivate"===t||"dapiPrivateV2"===t||"fapiPrivate"===t||"fapiPrivateV2"===t){let a;this.checkRequiredCredentials();const c=this.safeInteger(this.options,"recvWindow"),h=this.extend({timestamp:this.nonce()},s);void 0!==c&&(h.recvWindow=c);const u=this.safeInteger(s,"recvWindow");void 0!==u&&(h.recvWindow=u),a="sapi"===t&&"asset/dust"===e?this.urlencodeWithArrayRepeat(h):"batchOrders"===e||e.indexOf("sub-account")>=0||"capital/withdraw/apply"===e||e.indexOf("staking")>=0?this.rawencode(h):this.urlencode(h),a+="&signature="+this.hmac(this.encode(a),this.encode(this.secret),o.J),r={"X-MBX-APIKEY":this.apiKey},"GET"===i||"DELETE"===i||"wapi"===t?d+="?"+a:(n=a,r["Content-Type"]="application/x-www-form-urlencoded")}else Object.keys(s).length&&(d+="?"+this.urlencode(s));return{url:d,method:i,body:n,headers:r}}handleErrors(e,t,i,s,r,o,d,c,h){if(418===e||429===e)throw new a.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+o);if(e>=400){if(o.indexOf("Price * QTY is zero or less")>=0)throw new a.InvalidOrder(this.id+" order cost = amount * price is zero or less "+o);if(o.indexOf("LOT_SIZE")>=0)throw new a.InvalidOrder(this.id+" order amount should be evenly divisible by lot size "+o);if(o.indexOf("PRICE_FILTER")>=0)throw new a.InvalidOrder(this.id+" order price is invalid, i.e. exceeds allowed price precision, exceeds min price or max price limits or is invalid value in general, use this.priceToPrecision (symbol, amount) "+o)}if(void 0===d)return;const u=this.safeValue(d,"success",!0);if(!u){const e=this.safeString(d,"msg");let t;if(void 0!==e){try{t=JSON.parse(e)}catch(e){t=void 0}void 0!==t&&(d=t)}}const l=this.safeString(d,"msg");void 0!==l&&(this.throwExactlyMatchedException(this.exceptions.exact,l,this.id+" "+l),this.throwBroadlyMatchedException(this.exceptions.broad,l,this.id+" "+l));const p=this.safeString(d,"code");if(void 0!==p){if("200"===p||n.O.stringEquals(p,"0"))return;if("-2015"===p&&this.options.hasAlreadyAuthenticatedSuccessfully)throw new a.DDoSProtection(this.id+" "+o);const e=this.id+" "+o;if("No need to change margin type."===l)throw new a.MarginModeAlreadySet(e);throw this.throwExactlyMatchedException(this.exceptions.exact,p,e),new a.ExchangeError(e)}if(!u)throw new a.ExchangeError(this.id+" "+o)}calculateRateLimiterCost(e,t,i,s,r={},a={}){if("noCoin"in r&&!("coin"in s))return r.noCoin;if("noSymbol"in r&&!("symbol"in s))return r.noSymbol;if("noPoolId"in r&&!("poolId"in s))return r.noPoolId;if("byLimit"in r&&"limit"in s){const e=s.limit,t=r.byLimit;for(let i=0;i<t.length;i++){const s=t[i];if(e<=s[0])return s[1]}}return this.safeInteger(r,"cost",1)}}},7584:(e,t,i)=>{i.d(t,{Z:()=>h});var s=i(2120),r=i(6689),a=i(2194),n=i(9292),o=i(7110),d=i(1372),c=i(5981);class h extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"upbit",name:"Upbit",countries:["KR"],version:"v1",rateLimit:1e3,pro:!0,has:{CORS:!0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!0,createOrder:!0,fetchBalance:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchOrders:!1,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!0,fetchTradingFees:!1,fetchTransactions:!1,fetchWithdrawals:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"minutes","3m":"minutes","5m":"minutes","15m":"minutes","30m":"minutes","1h":"minutes","4h":"minutes","1d":"days","1w":"weeks","1M":"months"},hostname:"api.upbit.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/49245610-eeaabe00-f423-11e8-9cba-4b0aed794799.jpg",api:{public:"https://{hostname}",private:"https://{hostname}"},www:"https://upbit.com",doc:"https://docs.upbit.com/docs/%EC%9A%94%EC%B2%AD-%EC%88%98-%EC%A0%9C%ED%95%9C",fees:"https://upbit.com/service_center/guide"},api:{public:{get:["market/all","candles/{timeframe}","candles/{timeframe}/{unit}","candles/minutes/{unit}","candles/minutes/1","candles/minutes/3","candles/minutes/5","candles/minutes/15","candles/minutes/30","candles/minutes/60","candles/minutes/240","candles/days","candles/weeks","candles/months","trades/ticks","ticker","orderbook"]},private:{get:["accounts","orders/chance","order","orders","withdraws","withdraw","withdraws/chance","deposits","deposit","deposits/coin_addresses","deposits/coin_address"],post:["orders","withdraws/coin","withdraws/krw","deposits/generate_coin_address"],delete:["order"]}},fees:{trading:{tierBased:!1,percentage:!0,maker:this.parseNumber("0.0025"),taker:this.parseNumber("0.0025")},funding:{tierBased:!1,percentage:!1,withdraw:{},deposit:{}}},precisionMode:n.sh,exceptions:{exact:{"This key has expired.":r.AuthenticationError,"Missing request parameter error. Check the required parameters!":r.BadRequest,"side is missing, side does not have a valid value":r.InvalidOrder},broad:{thirdparty_agreement_required:r.PermissionDenied,out_of_scope:r.PermissionDenied,order_not_found:r.OrderNotFound,insufficient_funds:r.InsufficientFunds,invalid_access_key:r.AuthenticationError,jwt_verification:r.AuthenticationError,create_ask_error:r.ExchangeError,create_bid_error:r.ExchangeError,volume_too_large:r.InvalidOrder,invalid_funds:r.InvalidOrder}},options:{createMarketBuyOrderRequiresPrice:!0,fetchTickersMaxLength:4096,fetchOrderBooksMaxLength:4096,tradingFeesByQuoteCurrency:{KRW:5e-4}},commonCurrencies:{TON:"Tokamak Network"}})}async fetchCurrency(e,t={}){await this.loadMarkets();const i=this.currency(e);return await this.fetchCurrencyById(i.id,t)}async fetchCurrencyById(e,t={}){const i={currency:e},s=await this.privateGetWithdrawsChance(this.extend(i,t)),r=this.safeValue(s,"member_level",{}),a=this.safeValue(s,"currency",{}),n=this.safeValue(s,"withdraw_limit",{}),o=this.safeValue(n,"can_withdraw"),d=this.safeString(a,"wallet_state"),c=this.safeValue(r,"wallet_locked"),h=this.safeValue(r,"locked");let u=!0;void 0===o||o?("working"!==d||void 0!==c&&c||void 0!==h&&h)&&(u=!1):u=!1;const l=this.safeNumber(n,"onetime"),p=this.safeNumber(n,"daily",l),f=this.safeNumber(n,"remaining_daily",p);let m;m=f>0?f:p;const v=this.safeString(a,"code"),g=this.safeCurrencyCode(v);return{info:s,id:v,code:g,name:g,active:u,fee:this.safeNumber(a,"withdraw_fee"),precision:void 0,limits:{withdraw:{min:this.safeNumber(n,"minimum"),max:m}}}}async fetchMarket(e,t={}){await this.loadMarkets();const i=this.market(e);return await this.fetchMarketById(i.id,t)}async fetchMarketById(e,t={}){const i={market:e},s=await this.privateGetOrdersChance(this.extend(i,t)),r=this.safeValue(s,"market"),a=this.safeValue(r,"bid"),n=this.safeValue(r,"ask"),o=this.safeString(r,"id"),d=this.safeString(n,"currency"),c=this.safeString(a,"currency"),h=this.safeCurrencyCode(d),u=this.safeCurrencyCode(c),l=this.safeString(r,"state"),p=this.safeNumber(s,"bid_fee"),f=this.safeNumber(s,"ask_fee"),m=Math.max(p,f);return{id:o,symbol:h+"/"+u,base:h,quote:u,settle:void 0,baseId:d,quoteId:c,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:"active"===l,contract:!1,linear:void 0,inverse:void 0,taker:m,maker:m,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber("1e-8"),price:this.parseNumber("1e-8")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"min_total"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(a,"min_total"),max:this.safeNumber(r,"max_total")},info:s}}}async fetchMarkets(e={}){const t=await this.publicGetMarketAll(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"market"),[a,n]=r.split("-"),o=this.safeCurrencyCode(n),d=this.safeCurrencyCode(a);i.push({id:r,symbol:o+"/"+d,base:o,quote:d,settle:void 0,baseId:n,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:!0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(this.options.tradingFeesByQuoteCurrency,d,this.fees.trading.taker),maker:this.safeNumber(this.options.tradingFeesByQuoteCurrency,d,this.fees.trading.maker),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{price:this.parseNumber("1e-8"),amount:this.parseNumber("1e-8")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:s})}return i}parseBalance(e){const t={info:e,timestamp:void 0,datetime:void 0};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"balance"),n.used=this.safeString(s,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetAccounts(e);return this.parseBalance(t)}async fetchOrderBooks(e=undefined,t=undefined,i={}){let s;if(await this.loadMarkets(),void 0===e){if(s=this.ids.join(","),s.length>this.options.fetchOrderBooksMaxLength){const e=this.ids.length;throw new r.ExchangeError(this.id+" fetchOrderBooks() has "+e.toString()+" symbols ("+s.length.toString()+" characters) exceeding max URL length ("+this.options.fetchOrderBooksMaxLength.toString()+" characters), you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else s=this.marketIds(e),s=s.join(",");const a={markets:s},n=await this.publicGetOrderbook(this.extend(a,i)),o={};for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"market"),s=this.safeSymbol(i,void 0,"-"),r=this.safeInteger(t,"timestamp");o[s]={symbol:s,bids:this.sortBy(this.parseBidsAsks(t.orderbook_units,"bid_price","bid_size"),0,!0),asks:this.sortBy(this.parseBidsAsks(t.orderbook_units,"ask_price","ask_size"),0),timestamp:r,datetime:this.iso8601(r),nonce:void 0}}return o}async fetchOrderBook(e,t=undefined,i={}){const s=await this.fetchOrderBooks([e],t,i);return this.safeValue(s,e)}parseTicker(e,t=undefined){const i=this.safeInteger(e,"trade_timestamp"),s=this.safeString2(e,"market","code");t=this.safeMarket(s,t,"-");const r=this.safeString(e,"trade_price");return this.safeTicker({symbol:t.symbol,timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high_price"),low:this.safeString(e,"low_price"),bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:this.safeString(e,"opening_price"),close:r,last:r,previousClose:this.safeString(e,"prev_closing_price"),change:this.safeString(e,"signed_change_price"),percentage:this.safeString(e,"signed_change_rate"),average:void 0,baseVolume:this.safeString(e,"acc_trade_volume_24h"),quoteVolume:this.safeString(e,"acc_trade_price_24h"),info:e},t)}async fetchTickers(e=undefined,t={}){let i;if(await this.loadMarkets(),void 0===(e=this.marketSymbols(e))){if(i=this.ids.join(","),i.length>this.options.fetchTickersMaxLength){const e=this.ids.length;throw new r.ExchangeError(this.id+" fetchTickers() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchTickers")}}else i=this.marketIds(e),i=i.join(",");const s={markets:i},a=await this.publicGetTicker(this.extend(s,t)),n={};for(let e=0;e<a.length;e++){const t=this.parseTicker(a[e]);n[t.symbol]=t}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){const i=await this.fetchTickers([e],t);return this.safeValue(i,e)}parseTrade(e,t=undefined){const i=this.safeString2(e,"sequential_id","uuid");let s,r=this.safeInteger(e,"timestamp");void 0===r&&(r=this.parse8601(this.safeString(e,"created_at")));const a=this.safeStringLower2(e,"ask_bid","side");"ask"===a?s="sell":"bid"===a&&(s="buy");const n=this.safeString(e,"funds"),o=this.safeString2(e,"trade_price","price"),d=this.safeString2(e,"trade_volume","volume"),c=this.safeString2(e,"market","code");let h;t=this.safeMarket(c,t,"-");const u=this.safeString(e,a+"_fee");return void 0!==u&&(h={currency:t.quote,cost:u}),this.safeTrade({id:i,info:e,order:void 0,timestamp:r,datetime:this.iso8601(r),symbol:t.symbol,type:void 0,side:s,takerOrMaker:void 0,price:o,amount:d,cost:n,fee:h},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e);void 0===i&&(i=200);const a={market:r.id,count:i},n=await this.publicGetTradesTicks(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchTradingFee(e,t={}){await this.loadMarkets();const i={market:this.market(e).id},s=await this.privateGetOrdersChance(this.extend(i,t)),r=this.safeString(s,"ask_fee"),n=this.safeString(s,"bid_fee"),o=a.O.stringMax(r,n),d=this.safeString(s,"maker_ask_fee"),c=this.safeString(s,"maker_bid_fee"),h=a.O.stringMax(d,c);return{info:s,symbol:e,maker:this.parseNumber(h),taker:this.parseNumber(o),percentage:!0,tierBased:!1}}parseOHLCV(e,t=undefined){return[this.parse8601(this.safeString(e,"candle_date_time_utc")),this.safeNumber(e,"opening_price"),this.safeNumber(e,"high_price"),this.safeNumber(e,"low_price"),this.safeNumber(e,"trade_price"),this.safeNumber(e,"candle_acc_trade_volume")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n=this.parseTimeframe(t),o=this.safeString(this.timeframes,t,t);void 0===s&&(s=200);const d={market:a.id,timeframe:o,count:s};let c="publicGetCandlesTimeframe";if("minutes"===o){const e=Math.round(n/60);d.unit=e,c+="Unit"}void 0!==i&&(d.to=this.iso8601(this.sum(i,n*s*1e3)));const h=await this[c](this.extend(d,r));return this.parseOHLCVs(h,a,t,i,s)}async createOrder(e,t,i,s,a=undefined,n={}){if("market"===t&&"buy"===i&&this.options.createMarketBuyOrderRequiresPrice){if(void 0===a)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument with market buy orders to calculate total order cost (amount to spend), where cost = amount * price. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or, alternatively, add .options['createMarketBuyOrderRequiresPrice'] = false to supply the cost in the amount argument (the exchange-specific behaviour)");s*=a}let o;if("buy"===i)o="bid";else{if("sell"!==i)throw new r.InvalidOrder(this.id+" createOrder() allows buy or sell side only!");o="ask"}await this.loadMarkets();const d={market:this.market(e).id,side:o};"limit"===t?(d.volume=this.amountToPrecision(e,s),d.price=this.priceToPrecision(e,a),d.ord_type=t):"market"===t&&("buy"===i?(d.ord_type="price",d.price=this.priceToPrecision(e,s)):"sell"===i&&(d.ord_type=t,d.volume=this.amountToPrecision(e,s)));const c=this.safeString2(n,"clientOrderId","identifier");void 0!==c&&(d.identifier=c),n=this.omit(n,["clientOrderId","identifier"]);const h=await this.privatePostOrders(this.extend(d,n));return this.parseOrder(h)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={uuid:e},r=await this.privateDeleteOrder(this.extend(s,i));return this.parseOrder(r)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.limit=i);const n=await this.privateGetDeposits(this.extend(r,s));return this.parseTransactions(n,a,t,i)}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.limit=i);const n=await this.privateGetWithdraws(this.extend(r,s));return this.parseTransactions(n,a,t,i)}parseTransactionStatus(e){return this.safeString({submitting:"pending",submitted:"pending",almost_accepted:"pending",rejected:"failed",accepted:"pending",processing:"pending",done:"ok",canceled:"canceled"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"uuid"),s=this.safeNumber(e,"amount"),r=this.safeString(e,"txid"),a=this.safeString(e,"done_at"),n=this.parse8601(a),o=this.parse8601(this.safeString(e,"created_at",a));let d=this.safeString(e,"type");"withdraw"===d&&(d="withdrawal");const c=this.safeString(e,"currency"),h=this.safeCurrencyCode(c),u=this.parseTransactionStatus(this.safeStringLower(e,"state")),l=this.safeNumber(e,"fee");return{info:e,id:i,currency:h,amount:s,network:void 0,address:void 0,addressTo:void 0,addressFrom:void 0,tag:void 0,tagTo:void 0,tagFrom:void 0,status:u,type:d,updated:n,txid:r,timestamp:o,datetime:this.iso8601(o),fee:{currency:h,cost:l}}}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"uuid");let s=this.safeString(e,"side");s="bid"===s?"buy":"sell";let r=this.safeString(e,"ord_type");const a=this.parse8601(this.safeString(e,"created_at")),n=this.parseOrderStatus(this.safeString(e,"state"));let o,d=this.safeNumber(e,"price");const c=this.safeNumber(e,"volume"),h=this.safeNumber(e,"remaining_volume"),u=this.safeNumber(e,"executed_volume");let l,p,f;"price"===r&&(r="market",l=d,d=void 0);let m=this.safeNumber(e,"paid_fee");const v=this.safeString(e,"market");t=this.safeMarket(v,t);let g=this.safeValue(e,"trades",[]);g=this.parseTrades(g,t,void 0,void 0,{order:i,type:r});const y=g.length;if(y>0){o=g[y-1].timestamp;let e=!1;void 0===m&&(e=!0,m=0),l=0;for(let t=0;t<y;t++){const i=g[t];if(l=this.sum(l,i.cost),e){const e=this.safeValue(g[t],"fee",{}),i=this.safeNumber(e,"cost");void 0!==i&&(m=this.sum(m,i))}}p=l/u}return void 0!==m&&(f={currency:t.quote,cost:m}),{info:e,id:i,clientOrderId:void 0,timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:o,symbol:t.symbol,type:r,timeInForce:void 0,postOnly:void 0,side:s,price:d,stopPrice:void 0,triggerPrice:void 0,cost:l,average:p,amount:c,filled:u,remaining:h,status:n,fee:f,trades:g}}async fetchOrdersByState(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={state:e};let n;void 0!==t&&(n=this.market(t),a.market=n.id);const o=await this.privateGetOrders(this.extend(a,r));return this.parseOrders(o,n,i,s)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("wait",e,t,i,s)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("done",e,t,i,s)}async fetchCanceledOrders(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchOrdersByState("cancel",e,t,i,s)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={uuid:e},r=await this.privateGetOrder(this.extend(s,i));return this.parseOrder(r)}async fetchDepositAddresses(e=undefined,t={}){await this.loadMarkets();const i=await this.privateGetDepositsCoinAddresses(t);return this.parseDepositAddresses(i,e)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"deposit_address"),s=this.safeString(e,"secondary_address"),r=this.safeString(e,"currency"),a=this.safeCurrencyCode(r);return this.checkAddress(i),{currency:a,address:i,tag:s,network:void 0,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s=await this.privateGetDepositsCoinAddress(this.extend({currency:i.id},t));return this.parseDepositAddress(s)}async createDepositAddress(e,t={}){await this.loadMarkets();const i={currency:this.currency(e).id},s=await this.privatePostDepositsGenerateCoinAddress(this.extend(i,t));if(void 0!==this.safeString(s,"message"))throw new r.AddressPending(this.id+" is generating "+e+" deposit address, call fetchDepositAddress or createDepositAddress one more time later to retrieve the generated address");return this.parseDepositAddress(s)}async withdraw(e,t,i,s=undefined,r={}){[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const a=this.currency(e),n={amount:t};let o="privatePostWithdraws";"KRW"!==e?(o+="Coin",n.currency=a.id,n.address=i,void 0!==s&&(n.secondary_address=s)):o+="Krw";const d=await this[o](this.extend(n,r));return this.parseTransaction(d)}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.implodeParams(this.urls.api[t],{hostname:this.hostname});n+="/"+this.version+"/"+this.implodeParams(e,s);const h=this.omit(s,this.extractParams(e));if("POST"!==i&&Object.keys(h).length&&(n+="?"+this.urlencode(h)),"private"===t){this.checkRequiredCredentials();const e=this.nonce(),t={access_key:this.apiKey,nonce:e};if(Object.keys(h).length){const e=this.urlencode(h),i=this.hash(this.encode(e),o.o);t.query_hash=i,t.query_hash_alg="SHA512"}r={Authorization:"Bearer "+(0,c.F)(t,this.encode(this.secret),d.J)},"GET"!==i&&"DELETE"!==i&&(a=this.json(s),r["Content-Type"]="application/json")}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeValue(o,"error");if(void 0!==h){const e=this.safeString(h,"message"),t=this.safeString(h,"name"),i=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwExactlyMatchedException(this.exceptions.exact,t,i),this.throwBroadlyMatchedException(this.exceptions.broad,e,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new r.ExchangeError(i)}}}},3853:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(8888),r=i(6689),a=i(2194),n=i(8817),o=i(6890);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"wavesexchange",name:"Waves.Exchange",countries:["CH"],certified:!0,pro:!1,has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createMarketOrder:!0,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchClosedOrders:!0,fetchDepositAddress:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTransfer:!1,fetchTransfers:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,signIn:!0,transfer:!1,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","3h":"3h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/84547058-5fb27d80-ad0b-11ea-8711-78ac8b3c7f31.jpg",test:{matcher:"https://matcher-testnet.waves.exchange",node:"https://nodes-testnet.wavesnodes.com",public:"https://api-testnet.wavesplatform.com/v0",private:"https://api-testnet.waves.exchange/v1",forward:"https://testnet.waves.exchange/api/v1/forward/matcher",market:"https://testnet.waves.exchange/api/v1/forward/marketdata/api/v1"},api:{matcher:"https://matcher.waves.exchange",node:"https://nodes.waves.exchange",public:"https://api.wavesplatform.com/v0",private:"https://api.waves.exchange/v1",forward:"https://waves.exchange/api/v1/forward/matcher",market:"https://waves.exchange/api/v1/forward/marketdata/api/v1"},doc:"https://docs.waves.exchange",www:"https://waves.exchange"},api:{matcher:{get:["matcher","matcher/settings","matcher/settings/rates","matcher/balance/reserved/{publicKey}","matcher/debug/allSnashotOffsets","matcher/debug/currentOffset","matcher/debug/lastOffset","matcher/debug/oldestSnapshotOffset","matcher/orderbook","matcher/orderbook/{amountAsset}/{priceAsset}","matcher/orderbook/{baseId}/{quoteId}/publicKey/{publicKey}","matcher/orderbook/{baseId}/{quoteId}/{orderId}","matcher/orderbook/{baseId}/{quoteId}/info","matcher/orderbook/{baseId}/{quoteId}/status","matcher/orderbook/{baseId}/{quoteId}/tradeableBalance/{address}","matcher/orderbook/{publicKey}","matcher/orderbook/{publicKey}/{orderId}","matcher/orders/{address}","matcher/orders/{address}/{orderId}","matcher/transactions/{orderId}"],post:["matcher/orderbook","matcher/orderbook/market","matcher/orderbook/cancel","matcher/orderbook/{baseId}/{quoteId}/cancel","matcher/orderbook/{amountAsset}/{priceAsset}/calculateFee","matcher/debug/saveSnapshots","matcher/orders/{address}/cancel","matcher/orders/cancel/{orderId}"],delete:["matcher/orderbook/{baseId}/{quoteId}","matcher/settings/rates/{assetId}"],put:["matcher/settings/rates/{assetId}"]},node:{get:["addresses","addresses/balance/{address}","addresses/balance/{address}/{confirmations}","addresses/balance/details/{address}","addresses/data/{address}","addresses/data/{address}/{key}","addresses/effectiveBalance/{address}","addresses/effectiveBalance/{address}/{confirmations}","addresses/publicKey/{publicKey}","addresses/scriptInfo/{address}","addresses/scriptInfo/{address}/meta","addresses/seed/{address}","addresses/seq/{from}/{to}","addresses/validate/{address}","alias/by-address/{address}","alias/by-alias/{alias}","assets/{assetId}/distribution/{height}/{limit}","assets/balance/{address}","assets/balance/{address}/{assetId}","assets/details/{assetId}","assets/nft/{address}/limit/{limit}","blockchain/rewards","blockchain/rewards/height","blocks/address/{address}/{from}/{to}/","blocks/at/{height}","blocks/delay/{signature}/{blockNum}","blocks/first","blocks/headers/last","blocks/headers/seq/{from}/{to}","blocks/height","blocks/height/{signature}","blocks/last","blocks/seq/{from}/{to}","blocks/signature/{signature}","consensus/algo","consensus/basetarget","consensus/basetarget/{blockId}","consensus/{generatingbalance}/address","consensus/generationsignature","consensus/generationsignature/{blockId}","debug/balances/history/{address}","debug/blocks/{howMany}","debug/configInfo","debug/historyInfo","debug/info","debug/minerInfo","debug/portfolios/{address}","debug/state","debug/stateChanges/address/{address}","debug/stateChanges/info/{id}","debug/stateWaves/{height}","leasing/active/{address}","node/state","node/version","peers/all","peers/blacklisted","peers/connected","peers/suspended","transactions/address/{address}/limit/{limit}","transactions/info/{id}","transactions/status","transactions/unconfirmed","transactions/unconfirmed/info/{id}","transactions/unconfirmed/size","utils/seed","utils/seed/{length}","utils/time","wallet/seed"],post:["addresses","addresses/data/{address}","addresses/sign/{address}","addresses/signText/{address}","addresses/verify/{address}","addresses/verifyText/{address}","debug/blacklist","debug/print","debug/rollback","debug/validate","node/stop","peers/clearblacklist","peers/connect","transactions/broadcast","transactions/calculateFee","tranasctions/sign","transactions/sign/{signerAddress}","tranasctions/status","utils/hash/fast","utils/hash/secure","utils/script/compileCode","utils/script/compileWithImports","utils/script/decompile","utils/script/estimate","utils/sign/{privateKey}","utils/transactionsSerialize"],delete:["addresses/{address}","debug/rollback-to/{signature}"]},public:{get:["assets","pairs","candles/{baseId}/{quoteId}","transactions/exchange"]},private:{get:["deposit/addresses/{currency}","deposit/addresses/{currency}/{platform}","platforms","deposit/currencies","withdraw/currencies","withdraw/addresses/{currency}/{address}"],post:["oauth2/token"]},forward:{get:["matcher/orders/{address}","matcher/orders/{address}/{orderId}"],post:["matcher/orders/{wavesAddress}/cancel"]},market:{get:["tickers"]}},currencies:{WX:{id:"EMAMLxDnv3xiz8RXg8Btj33jcEw3wLczL3JKYYmuubpc",numericId:void 0,code:"WX",precision:8}},options:{allowedCandles:1440,accessToken:void 0,createMarketBuyOrderRequiresPrice:!0,matcherPublicKey:void 0,quotes:void 0,createOrderDefaultExpiry:24192e5,wavesAddress:void 0,withdrawFeeUSDN:7420,withdrawFeeWAVES:1e5,wavesPrecision:8,messagePrefix:"W",networks:{ERC20:"ETH",BEP20:"BSC"},reverseNetworks:{ETH:"ERC20",BSC:"BEP20"}},commonCurrencies:{EGG:"Waves Ducks"},requiresEddsa:!0,exceptions:{3147270:r.InsufficientFunds,112:r.InsufficientFunds,4:r.ExchangeError,13:r.ExchangeNotAvailable,14:r.ExchangeNotAvailable,3145733:r.AccountSuspended,3148040:r.DuplicateOrderId,3148801:r.AuthenticationError,9440512:r.AuthenticationError,9440771:r.BadSymbol,9441026:r.InvalidOrder,9441282:r.InvalidOrder,9441286:r.InvalidOrder,9441295:r.InvalidOrder,9441540:r.InvalidOrder,9441542:r.InvalidOrder,106954752:r.AuthenticationError,106954769:r.AuthenticationError,106957828:r.AuthenticationError,106960131:r.AuthenticationError,106981137:r.AuthenticationError,9437184:r.BadRequest,9437193:r.OrderNotFound,1048577:r.BadRequest,1051904:r.AuthenticationError}})}setSandboxMode(e){return this.options.messagePrefix=e?"T":"W",super.setSandboxMode(e)}async getFeesForAsset(e,t,i,s,r={}){await this.loadMarkets();const a=this.market(e);i=this.customAmountToPrecision(e,i),s=this.customPriceToPrecision(e,s);const n=this.extend({amountAsset:a.baseId,priceAsset:a.quoteId,orderType:t,amount:i,price:s},r);return await this.matcherPostMatcherOrderbookAmountAssetPriceAssetCalculateFee(n)}async customCalculateFee(e,t,i,s,r,n="taker",o={}){const d=await this.getFeesForAsset(e,i,s,r);let c;c=this.safeValue(o,"isDiscountFee",!1)?this.safeValue(d,"discount"):this.safeValue(d,"base");const h=this.safeString(c,"matcherFee"),u=this.safeString(c,"feeAssetId"),l=this.safeCurrencyCode(u),p=this.currencyFromPrecision(l,h),f=this.numberToString(s),m=this.numberToString(r),v=this.feeToPrecision(e,this.parseNumber(p)),g=a.O.stringDiv(p,a.O.stringMul(f,m));return{type:n,currency:l,rate:this.parseNumber(g),cost:this.parseNumber(v)}}async getQuotes(){let e=this.safeValue(this.options,"quotes");if(e)return e;{const t=await this.matcherGetMatcherSettings();e={};const i=this.safeValue(t,"priceAssets");for(let t=0;t<i.length;t++)e[i[t]]=!0;return this.options.quotes=e,e}}async fetchMarkets(e={}){const t=await this.marketGetTickers(),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"amountAssetID"),a=this.safeString(s,"priceAssetID"),n=r+"/"+a,o=this.safeString(s,"symbol");let[d,c]=o.split("/");d=this.safeCurrencyCode(d),c=this.safeCurrencyCode(c);const h=d+"/"+c;i.push({id:n,symbol:h,base:d,quote:c,settle:void 0,baseId:r,quoteId:a,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeInteger(s,"amountAssetDecimals"),price:this.safeInteger(s,"priceAssetDecimals")},limits:{leverage:{min:void 0,max:void 0},amount:{min:void 0,max:void 0},price:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:s})}return i}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r=this.extend({amountAsset:s.baseId,priceAsset:s.quoteId},i),a=await this.matcherGetMatcherOrderbookAmountAssetPriceAsset(r),n=this.safeInteger(a,"timestamp");return{symbol:e,bids:this.parseOrderBookSide(this.safeValue(a,"bids"),s,t),asks:this.parseOrderBookSide(this.safeValue(a,"asks"),s,t),timestamp:n,datetime:this.iso8601(n),nonce:void 0}}parseOrderBookSide(e,t=undefined,i=undefined){const s=t.precision,r=this.safeInteger(this.options,"wavesPrecision",8),a=Math.pow(10,s.amount),n=s.amount-s.price,o=Math.pow(10,r-n),d=[];for(let t=0;t<e.length;t++){const s=e[t],r=this.safeInteger(s,"price",0)/o,n=this.safeInteger(s,"amount",0)/a;if(void 0!==i&&t>i)break;d.push([r,n])}return d}checkRequiredKeys(){if(void 0===this.apiKey)throw new r.AuthenticationError(this.id+" requires apiKey credential");if(void 0===this.secret)throw new r.AuthenticationError(this.id+" requires secret credential");let e,t;try{e=this.base58ToBinary(this.apiKey)}catch(e){throw new r.AuthenticationError(this.id+" apiKey must be a base58 encoded public key")}try{t=this.base58ToBinary(this.secret)}catch(e){throw new r.AuthenticationError(this.id+" secret must be a base58 encoded private key")}const i=this.binaryToBase16(e),s=this.binaryToBase16(t);if(64!==i.length)throw new r.AuthenticationError(this.id+" apiKey must be a base58 encoded public key");if(64!==s.length)throw new r.AuthenticationError(this.id+" secret must be a base58 encoded private key")}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.omit(s,this.extractParams(e)),o="matcher/orders/{wavesAddress}/cancel"===e;e=this.implodeParams(e,s);let d=this.urls.api[t]+"/"+e,c=this.urlencodeWithArrayRepeat(n);if("private"===t||"forward"===t){r={Accept:"application/json"};const e=this.safeString(this.options,"accessToken");e&&(r.Authorization="Bearer "+e),r["content-type"]="POST"===i?"application/json":"application/x-www-form-urlencoded",o&&(a=this.json([n.orderId]),c=""),c.length>0&&(d+="?"+c)}else"matcher"===t?"POST"===i?(r={Accept:"application/json","Content-Type":"application/json"},a=this.json(n)):r=n:"POST"===i?(r={"content-type":"application/json"},a=this.json(n)):(r={"content-type":"application/x-www-form-urlencoded"},c.length>0&&(d+="?"+c));return{url:d,method:i,body:a,headers:r}}async signIn(e={}){if(!this.safeString(this.options,"accessToken")){const e="ffffff01",t=604800;let i=this.sum(this.seconds(),t);i=i.toString();const s="waves.exchange",r=this.safeString(this.options,"messagePrefix","W")+":"+s+":"+i,a=e+this.binaryToBase16(this.encode(r)),d=this.binaryToBase16(this.base58ToBinary(this.secret)),c=(0,o.UZ)(a,d,n.UN),h={grant_type:"password",scope:"general",username:this.apiKey,password:i+":"+c,client_id:s},u=await this.privatePostOauth2Token(h);return this.options.accessToken=this.safeString(u,"access_token"),this.options.accessToken}}parseTicker(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString(e,"symbol"),r=(t=this.safeMarket(s,t,"/")).symbol,a=this.safeString2(e,"24h_close","lastPrice"),n=this.safeString2(e,"24h_low","low"),o=this.safeString2(e,"24h_high","high"),d=this.safeString2(e,"24h_vwap","weightedAveragePrice"),c=this.safeString2(e,"24h_volume","volume"),h=this.safeString2(e,"24h_priceVolume","quoteVolume"),u=this.safeString2(e,"24h_open","firstPrice");return this.safeTicker({symbol:r,timestamp:i,datetime:this.iso8601(i),high:o,low:n,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:d,open:u,close:a,last:a,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:c,quoteVolume:h,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pairs:i.id},r=await this.publicGetPairs(this.extend(s,t)),a=this.safeValue(r,"data",[]),n=this.safeValue(a,0,{}),o=this.safeValue(n,"data",{});return this.parseTicker(o,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.marketGetTickers(t);return this.parseTickers(i,e)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={baseId:a.baseId,quoteId:a.quoteId,interval:this.safeString(this.timeframes,t,t)},o=this.safeInteger(this.options,"allowedCandles",1440);void 0===s&&(s=o),s=Math.min(o,s);const d=1e3*this.parseTimeframe(t);if(void 0===i){const e=this.parseToInt(this.milliseconds()/d)*d-(s-1)*d;n.timeStart=e.toString()}else{n.timeStart=i.toString();const e=this.sum(i,d*s);n.timeEnd=e.toString()}const c=await this.publicGetCandlesBaseIdQuoteId(this.extend(n,r)),h=this.safeValue(c,"data",[]);let u,l=this.parseOHLCVs(h,a,t,i,s);l=this.filterFutureCandles(l);const p=l.length;for(let e=0;e<l.length;e++){const t=p-e-1,i=l[t];void 0===i[1]&&(i[1]=u,i[2]=u,i[3]=u,i[4]=u,l[t]=i),u=i[4]}return l}filterFutureCandles(e){const t=[],i=this.milliseconds();for(let s=0;s<e.length&&!(e[s][0]>i);s++)t.push(e[s]);return t}parseOHLCV(e,t=undefined){const i=this.safeValue(e,"data",{});return[this.parse8601(this.safeString(i,"time")),this.safeNumber(i,"open"),this.safeNumber(i,"high"),this.safeNumber(i,"low"),this.safeNumber(i,"close"),this.safeNumber(i,"volume",0)]}async fetchDepositAddress(e,t={}){await this.signIn();const i=this.safeValue(this.options,"networks",{}),s=this.safeStringUpper(t,"network"),a=this.safeString(i,s,s);t=this.omit(t,["network"]);const n=await this.privateGetPlatforms(),o={},d={},c=this.safeValue(n,"items",[]);for(let e=0;e<c.length;e++){const t=c[e],i=this.safeString(t,"id"),s=this.safeValue(t,"currencies",[]);for(let e=0;e<s.length;e++){const t=this.safeString(s,e);o[t]=!0,t in d||(d[t]={}),d[t][i]=!0}}if(!(e in o)){const t=Object.keys(o);throw new r.ExchangeError(this.id+" fetchDepositAddress() "+e+" not supported. Currency code must be one of "+t.join(", "))}let h;if(void 0===a){const i={currency:e};h=await this.privateGetDepositAddressesCurrency(this.extend(i,t))}else{const i=d[e];if(!(a in i)){const t=Object.keys(i);throw new r.ExchangeError(this.id+" "+a+" network "+e+" deposit address not supported. Network must be one of "+t.join(", "))}if("WAVES"===a){const t={publicKey:this.apiKey},i=await this.nodeGetAddressesPublicKeyPublicKey(this.extend(t,t));return{address:this.safeString(i,"address"),code:e,currency:e,network:a,tag:void 0,info:i}}{const i={currency:e,platform:a};h=await this.privateGetDepositAddressesCurrencyPlatform(this.extend(i,t))}}const u=this.safeValue(h,"currency"),l=this.safeString(u,"platform_id"),p=this.safeValue(this.options,"reverseNetworks",{}),f=this.safeString(p,l,l),m=this.safeValue(h,"deposit_addresses");return{address:this.safeString(m,0),code:e,currency:e,tag:void 0,network:f,info:h}}async getMatcherPublicKey(){const e=this.safeString(this.options,"matcherPublicKey");if(e)return e;{const e=await this.matcherGetMatcher();return this.options.matcherPublicKey=e.slice(1,e.length-1),this.options.matcherPublicKey}}getAssetBytes(e){return"WAVES"===e?this.numberToBE(0,1):this.binaryConcat(this.numberToBE(1,1),this.base58ToBinary(e))}getAssetId(e){return"WAVES"===e?"":e}customPriceToPrecision(e,t){const i=this.markets[e],s=this.safeInteger(this.options,"wavesPrecision",8),r=i.precision.amount-i.precision.price;return this.parseToInt(parseFloat(this.toPrecision(t,s-r)))}customAmountToPrecision(e,t){return this.parseToInt(parseFloat(this.toPrecision(t,this.markets[e].precision.amount)))}currencyToPrecision(e,t,i=undefined){return this.parseToInt(parseFloat(this.toPrecision(t,this.currencies[e].precision)))}fromPrecision(e,t){if(void 0===e)return;const i=new a.O(e);return i.decimals=this.sum(i.decimals,t),i.reduce(),i.toString()}toPrecision(e,t){const i=e.toString(),s=new a.O(i);return s.decimals=s.decimals-t,s.reduce(),s.toString()}currencyFromPrecision(e,t){const i=this.currencies[e].precision;return this.fromPrecision(t,i)}priceFromPrecision(e,t){const i=this.markets[e],s=this.safeInteger(this.options,"wavesPrecision",8),r=this.sum(s,i.precision.price)-i.precision.amount;return this.fromPrecision(t,r)}safeGetDynamic(e){const t=this.safeValue(e,"orderFee");return"dynamic"in t?this.safeValue(t,"dynamic"):this.safeValue(t.composite.default,"dynamic")}safeGetRates(e){const t=this.safeValue(e,"rates");return void 0===t?{WAVES:1}:t}async createOrder(e,t,i,s,a=undefined,d={}){this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets();const c=this.market(e),h=await this.getMatcherPublicKey(),u=this.getAssetId(c.baseId),l=this.getAssetId(c.quoteId),p="market"===t;if(p&&void 0===a)throw new r.InvalidOrder(this.id+" createOrder() requires a price argument for "+t+" orders to determine the max price for buy and the min price for sell");const f="buy"===i?0:1,m=this.milliseconds(),v=this.safeInteger(this.options,"createOrderDefaultExpiry",24192e5),g=this.sum(m,v),y=await this.getFeesForAsset(e,i,s,a),b=this.safeValue(y,"base"),w=this.safeString(b,"feeAssetId"),S=this.safeCurrencyCode(w),P=this.safeString(b,"matcherFee"),k=this.safeValue(y,"discount"),O=this.safeString(k,"feeAssetId"),T=this.safeCurrencyCode(O),A=this.safeString(k,"matcherFee");let G,I;if("feeAsset"in d||"feeAsset"in this.options){const e=this.safeString(d,"feeAsset",this.safeString(this.options,"feeAsset")),t=this.currency(e);G=this.safeString(t,"id")}const C=await this.fetchBalance();if(void 0!==G){if(w!==G&&O!==G)throw new r.InvalidOrder(this.id+" asset fee must be "+S+" or "+T);const e=this.safeCurrencyCode(G),t=G===w?P:A,i=parseFloat(this.currencyFromPrecision(e,t));if(!(e in C&&C[e].free>=i))throw new r.InsufficientFunds(this.id+" not enough funds of the selected asset fee");I=parseInt(t)}if(void 0===G){const e=parseFloat(this.currencyFromPrecision(S,P));if(S in C&&C[S].free>=e)G=w,I=parseInt(P);else{const e=parseFloat(this.currencyFromPrecision(T,A));T in C&&C[T].free>=e&&(G=O,I=parseInt(A))}}if(void 0===G)throw new r.InsufficientFunds(this.id+" not enough funds on none of the eligible asset fees");s=this.customAmountToPrecision(e,s),a=this.customPriceToPrecision(e,a);const M=[this.numberToBE(3,1),this.base58ToBinary(this.apiKey),this.base58ToBinary(h),this.getAssetBytes(c.baseId),this.getAssetBytes(c.quoteId),this.numberToBE(f,1),this.numberToBE(a,8),this.numberToBE(s,8),this.numberToBE(m,8),this.numberToBE(g,8),this.numberToBE(I,8),this.getAssetBytes(G)],x=this.binaryConcatArray(M),V=(0,o.UZ)(this.binaryToBase16(x),this.binaryToBase16(this.base58ToBinary(this.secret)),n.UN),E={amountAsset:u,priceAsset:l},B={senderPublicKey:this.apiKey,matcherPublicKey:h,assetPair:E,orderType:i,price:a,amount:s,timestamp:m,expiration:g,matcherFee:parseInt(I),signature:V,version:3};if("WAVES"!==G&&(B.matcherFeeAssetId=G),p){const e=await this.matcherPostMatcherOrderbookMarket(B),t=this.safeValue(e,"message");return this.parseOrder(t,c)}{const e=await this.matcherPostMatcherOrderbook(B),t=this.safeValue(e,"message");return this.parseOrder(t,c)}}async cancelOrder(e,t=undefined,i={}){this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.signIn();const s=await this.getWavesAddress(),r=await this.forwardPostMatcherOrdersWavesAddressCancel({wavesAddress:s,orderId:e}),a=this.safeValue(r,"message"),n=this.safeValue(a,0),o=this.safeValue(n,0);return{info:r,id:this.safeString(o,"orderId"),clientOrderId:void 0,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,symbol:t,type:void 0,side:void 0,price:void 0,amount:void 0,cost:void 0,average:void 0,filled:void 0,remaining:void 0,status:void 0,fee:void 0,trades:void 0}}async fetchOrder(e,t=undefined,i={}){let s;this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets(),void 0!==t&&(s=this.market(t));const r=this.milliseconds(),a=[this.base58ToBinary(this.apiKey),this.numberToBE(r,8)],d=this.binaryConcatArray(a),c=this.binaryToBase16(this.base58ToBinary(this.secret)),h=(0,o.UZ)(this.binaryToBase16(d),c,n.UN),u={Timestamp:r.toString(),Signature:h,publicKey:this.apiKey,orderId:e},l=await this.matcherGetMatcherOrderbookPublicKeyOrderId(this.extend(u,i));return this.parseOrder(l,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(this.checkRequiredDependencies(),this.checkRequiredKeys(),void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires symbol argument");await this.loadMarkets();const a=this.market(e),d=this.milliseconds(),c=[this.base58ToBinary(this.apiKey),this.numberToBE(d,8)],h=this.binaryConcatArray(c),u=this.binaryToBase16(this.base58ToBinary(this.secret)),l=(0,o.UZ)(this.binaryToBase16(h),u,n.UN),p={Accept:"application/json",Timestamp:d.toString(),Signature:l,publicKey:this.apiKey,baseId:a.baseId,quoteId:a.quoteId},f=await this.matcherGetMatcherOrderbookBaseIdQuoteIdPublicKeyPublicKey(this.extend(p,s));return this.parseOrders(f,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),await this.signIn(),void 0!==e&&(r=this.market(e));const a={address:await this.getWavesAddress(),activeOnly:!0},n=await this.forwardGetMatcherOrdersAddress(a);return this.parseOrders(n,r,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets(),await this.signIn(),void 0!==e&&(r=this.market(e));const a={address:await this.getWavesAddress(),closedOnly:!0},n=await this.forwardGetMatcherOrdersAddress(a);return this.parseOrders(n,r,t,i)}parseOrderStatus(e){return this.safeString({Cancelled:"canceled",Accepted:"open",Filled:"closed",PartiallyFilled:"open"},e,e)}getSymbolFromAssetPair(e){const t=this.safeString(e,"amountAsset","WAVES"),i=this.safeString(e,"priceAsset","WAVES");return this.safeCurrencyCode(t)+"/"+this.safeCurrencyCode(i)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"timestamp"),s=this.safeString2(e,"type","orderType");let r="limit";"type"in e&&(r=this.safeString(e,"orderType",r));const a=this.safeString(e,"id"),n=this.safeString(e,"filled"),o=this.safeString(e,"price"),d=this.safeString(e,"amount"),c=this.safeValue(e,"assetPair");let h;void 0!==c?h=this.getSymbolFromAssetPair(c):void 0!==t&&(h=t.symbol);const u=this.safeCurrencyCode(this.safeString(c,"amountAsset","WAVES")),l=this.priceFromPrecision(h,o),p=this.currencyFromPrecision(u,d),f=this.currencyFromPrecision(u,n),m=this.priceFromPrecision(h,this.safeString(e,"avgWeighedPrice")),v=this.parseOrderStatus(this.safeString(e,"status"));let g;if("type"in e){const t=this.safeCurrencyCode(this.safeString(e,"feeAsset"));g={currency:t,fee:this.parseNumber(this.currencyFromPrecision(t,this.safeString(e,"filledFee")))}}else{const t=this.safeCurrencyCode(this.safeString(e,"matcherFeeAssetId","WAVES"));g={currency:t,fee:this.parseNumber(this.currencyFromPrecision(t,this.safeString(e,"matcherFee")))}}return this.safeOrder({info:e,id:a,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,symbol:h,type:r,timeInForce:void 0,postOnly:void 0,side:s,price:l,stopPrice:void 0,triggerPrice:void 0,amount:p,cost:void 0,average:m,filled:f,remaining:void 0,status:v,fee:g,trades:void 0},t)}async getWavesAddress(){const e=this.safeString(this.options,"wavesAddress");if(void 0===e){const e={publicKey:this.apiKey},t=await this.nodeGetAddressesPublicKeyPublicKey(e);return this.options.wavesAddress=this.safeString(t,"address"),this.options.wavesAddress}return e}async fetchBalance(e={}){this.checkRequiredDependencies(),this.checkRequiredKeys(),await this.loadMarkets();const t=await this.getWavesAddress(),i={address:t},s=await this.nodeGetAssetsBalanceAddress(i),r=this.safeValue(s,"balances",[]),a={};let d;const c=[],h=[];for(let e=0;e<r.length;e++){const t=r[e],i=this.safeInteger(t,"timestamp");d=void 0===d?i:Math.max(d,i);const s=this.safeValue(t,"issueTransaction"),n=this.safeString(t,"assetId"),o=this.safeString(t,"balance");if(void 0===s){c.push(n),h.push(o);continue}const u=this.safeInteger(s,"decimals");let l;n in this.currencies_by_id&&(l=this.safeCurrencyCode(n),a[l]=this.account(),a[l].total=this.fromPrecision(o,u))}if(c.length){const e={ids:c},t=await this.publicGetAssets(e),i=this.safeValue(t,"data",[]);for(let e=0;e<i.length;e++){const t=i[e],s=h[e],r=this.safeValue(t,"data"),n=this.safeInteger(r,"precision"),o=this.safeString(r,"ticker"),d=this.safeCurrencyCode(o);a[d]=this.account(),a[d].total=this.fromPrecision(s,n)}}const u=this.milliseconds(),l=[this.base58ToBinary(this.apiKey),this.numberToBE(u,8)],p=this.binaryConcatArray(l),f=this.binaryToBase16(this.base58ToBinary(this.secret)),m=(0,o.UZ)(this.binaryToBase16(p),f,n.UN),v={publicKey:this.apiKey,signature:m,timestamp:u.toString()},g=await this.matcherGetMatcherBalanceReservedPublicKey(v),y=Object.keys(g);for(let e=0;e<y.length;e++){const t=y[e],i=this.safeCurrencyCode(t);i in a||(a[i]=this.account());const s=this.safeString(g,t);i in this.currencies?a[i].used=this.currencyFromPrecision(i,s):a[i].used=s}const b={address:t},w=await this.nodeGetAddressesBalanceAddress(b);a.WAVES=this.safeValue(a,"WAVES",{}),a.WAVES.total=this.currencyFromPrecision("WAVES",this.safeString(w,"balance"));const S=Object.keys(a);for(let e=0;e<S.length;e++){const t=S[e];void 0===this.safeValue(a[t],"used")&&(a[t].used="0")}return a.timestamp=d,a.datetime=this.iso8601(d),this.safeBalance(a)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={sender:await this.getWavesAddress()};let a;void 0!==e&&(a=this.market(e),r.amountAsset=a.baseId,r.priceAsset=a.quoteId);const n=await this.publicGetTransactionsExchange(r),o=this.safeValue(n,"data");return this.parseTrades(o,a,t,i)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={amountAsset:r.baseId,priceAsset:r.quoteId};void 0!==i&&(a.limit=i),void 0!==t&&(a.timeStart=t);const n=await this.publicGetTransactionsExchange(a),o=this.safeValue(n,"data");return this.parseTrades(o,r,t,i)}parseTrade(e,t=undefined){const i=this.safeValue(e,"data"),s=this.safeString(i,"timestamp"),r=this.parse8601(s),a=this.safeString(i,"id"),n=this.safeString(i,"price"),o=this.safeString(i,"amount"),d=this.safeValue(i,"order1"),c=this.safeValue(i,"order2");let h,u;h=this.safeString(d,"senderPublicKey")===this.apiKey?d:c;const l=this.safeValue(h,"assetPair");void 0!==l?u=this.getSymbolFromAssetPair(l):void 0!==t&&(u=t.symbol);const p=this.safeString(h,"orderType"),f=this.safeString(h,"id"),m={cost:this.safeString(h,"matcherFee"),currency:this.safeCurrencyCode(this.safeString(h,"matcherFeeAssetId","WAVES"))};return this.safeTrade({info:e,timestamp:r,datetime:s,symbol:u,id:a,order:f,type:void 0,side:p,takerOrMaker:void 0,price:n,amount:o,cost:void 0,fee:m},t)}handleErrors(e,t,i,s,a,n,o,d,c){const h=this.safeString(o,"error"),u=this.safeValue(o,"success",!0),l=this.safeValue(this.exceptions,h);if(void 0!==l){const e=this.safeString(o,"message");throw new l(this.id+" "+e)}if("Validation Error"===this.safeString(o,"message"))throw new r.BadRequest(this.id+" "+n);if(!u)throw new r.ExchangeError(this.id+" "+n)}async withdraw(e,t,i,s=undefined,a={}){if([s,a]=this.handleWithdrawTagAndParams(s,a),"WAVES"!==e){const t=await this.privateGetWithdrawCurrencies(),i={},s=this.safeValue(t,"items",[]);for(let e=0;e<s.length;e++){const t=s[e];i[this.safeString(t,"id")]=!0}if(!(e in i)){const t=Object.keys(i);throw new r.ExchangeError(this.id+" withdraw() "+e+" not supported. Currency code must be one of "+t.toString())}}await this.loadMarkets();const d=["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"],c={};for(let e=0;e<d.length;e++)c[d[e]]=!0;let h=!0;const u=this.remove0xPrefix(i).toLowerCase();for(let e=0;e<u.length;e++)if(!(u[e]in c)){h=!1;break}let l;if(await this.signIn(),"WAVES"!==e||h){const s={address:i,currency:e},a=await this.privateGetWithdrawAddressesCurrencyAddress(s),n=this.safeValue(a,"currency"),o=this.safeValue(n,"allowed_amount"),d=this.safeNumber(o,"min");if(t<=d)throw new r.BadRequest(this.id+" "+e+" withdraw failed, amount "+t.toString()+" must be greater than the minimum allowed amount of "+d.toString());const c=this.safeValue(a,"proxy_addresses",[]);l=this.safeString(c,0)}else l=i;const p=this.safeInteger(this.options,"withdrawFeeWAVES",1e5),f="WAVES",m=this.currencyToPrecision(e,t),v=this.currency(e),g=this.milliseconds(),y=[this.numberToBE(4,1),this.numberToBE(2,1),this.base58ToBinary(this.apiKey),this.getAssetBytes(v.id),this.getAssetBytes(f),this.numberToBE(g,8),this.numberToBE(m,8),this.numberToBE(p,8),this.base58ToBinary(l),this.numberToBE(0,2)],b=this.binaryConcatArray(y),w=this.binaryToBase16(this.base58ToBinary(this.secret)),S=(0,o.UZ)(this.binaryToBase16(b),w,n.UN),P={senderPublicKey:this.apiKey,amount:m,fee:p,type:4,version:2,attachment:"",feeAssetId:this.getAssetId(f),proofs:[S],assetId:this.getAssetId(v.id),recipient:l,timestamp:g,signature:S},k=await this.nodePostTransactionsBroadcast(P);return this.parseTransaction(k,v)}parseTransaction(e,t=undefined){return{id:void 0,txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:(t=this.safeCurrency(void 0,t)).code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}}},6536:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(9564),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"wazirx",name:"WazirX",countries:["IN"],version:"v2",rateLimit:1e3,pro:!0,has:{CORS:!1,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelAllOrders:!0,cancelOrder:!0,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBidsAsks:!1,fetchClosedOrders:!1,fetchCurrencies:!1,fetchDepositAddress:!1,fetchDepositAddressesByNetwork:!1,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!1,fetchOrderBook:!0,fetchOrders:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchStatus:!0,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFees:!1,fetchTransactions:!1,fetchTransfers:!1,fetchWithdrawals:!1,transfer:!1,withdraw:!1},urls:{logo:"https://user-images.githubusercontent.com/1294454/148647666-c109c20b-f8ac-472f-91c3-5f658cb90f49.jpeg",api:{rest:"https://api.wazirx.com/sapi/v1"},www:"https://wazirx.com",doc:"https://docs.wazirx.com/#public-rest-api-for-wazirx",fees:"https://wazirx.com/fees",referral:"https://wazirx.com/invite/k7rrnks5"},api:{public:{get:{exchangeInfo:1,depth:1,ping:1,systemStatus:1,"tickers/24hr":1,"ticker/24hr":1,time:1,trades:1,klines:1}},private:{get:{account:1,allOrders:1,funds:1,historicalTrades:1,openOrders:1,order:1,myTrades:1},post:{order:1,"order/test":1},delete:{order:1,openOrders:1}}},fees:{WRX:{maker:this.parseNumber("0.0"),taker:this.parseNumber("0.0")}},precisionMode:n.sh,exceptions:{exact:{"-1121":r.BadSymbol,1999:r.BadRequest,2002:r.InsufficientFunds,2005:r.BadRequest,2078:r.PermissionDenied,2098:r.BadRequest,2031:r.InvalidOrder,2113:r.BadRequest,2115:r.BadRequest,2136:r.RateLimitExceeded,94001:r.InvalidOrder}},timeframes:{"1m":"1m","5m":"5m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","1w":"1w"},options:{recvWindow:1e4}})}async fetchMarkets(e={}){const t=await this.publicGetExchangeInfo(e),i=this.safeValue(t,"symbols",[]),s=[];for(let e=0;e<i.length;e++){const t=i[e],r=this.safeString(t,"symbol"),n=this.safeString(t,"baseAsset"),o=this.safeString(t,"quoteAsset"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=this.safeValue(t,"isSpotTradingAllowed"),u=this.safeValue(t,"filters");let l;for(let e=0;e<u.length;e++){const t=u[e];"PRICE_FILTER"===this.safeString(t,"filterType")&&(l=this.safeNumber(t,"minPrice"))}const p=this.safeValue(this.fees,c,{});let f=this.safeString(p,"taker","0.2");f=a.O.stringDiv(f,"100");let m=this.safeString(p,"maker","0.2");m=a.O.stringDiv(m,"100");const v=this.safeString(t,"status");s.push({id:r,symbol:d+"/"+c,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:h,margin:!1,swap:!1,future:!1,option:!1,active:"trading"===v,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(f),maker:this.parseNumber(m),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(t,"baseAssetPrecision"))),price:this.parseNumber(this.parsePrecision(this.safeString(t,"quoteAssetPrecision")))},limits:{leverage:{min:void 0,max:void 0},price:{min:l,max:void 0},amount:{min:void 0,max:void 0},cost:{min:void 0,max:void 0}},info:t})}return s}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,interval:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=s);const o=this.safeInteger(r,"until");r=this.omit(r,["until"]),void 0!==i&&(n.startTime=this.parseToInt(i/1e3)),void 0!==o&&(n.endTime=o);const d=await this.publicGetKlines(this.extend(n,r));return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id};void 0!==t&&(s.limit=t);const r=await this.publicGetDepth(this.extend(s,i)),a=this.safeInteger(r,"timestamp");return this.parseOrderBook(r,e,a)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.publicGetTicker24hr(this.extend(s,t));return this.parseTicker(r,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.publicGetTickers24hr(),s={};for(let e=0;e<i.length;e++){const t=i[e],r=this.parseTicker(t);s[r.symbol]=r}return s}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.id};void 0!==i&&(a.limit=i);const n=this.safeString(this.options,"fetchTradesMethod","publicGetTrades"),o=await this[n](this.extend(a,s));return this.parseTrades(o,r,t,i)}parseTrade(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeInteger(e,"time"),r=this.iso8601(s);t=this.safeMarket(void 0,t);const a=this.safeValue(e,"isBuyerMaker")?"sell":"buy",n=this.safeNumber(e,"price"),o=this.safeNumber(e,"qty"),d=this.safeNumber(e,"quoteQty");return this.safeTrade({info:e,id:i,timestamp:s,datetime:r,symbol:t.symbol,order:i,type:void 0,side:a,takerOrMaker:void 0,price:n,amount:o,cost:d,fee:void 0},t)}async fetchStatus(e={}){const t=await this.publicGetSystemStatus(e);return{status:"normal"===this.safeString(t,"status")?"ok":"maintenance",updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){const t=await this.publicGetTime(e);return this.safeInteger(t,"serverTime")}parseTicker(e,t=undefined){const i=this.safeString(e,"symbol"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString(e,"lastPrice"),a=this.safeString(e,"openPrice"),n=this.safeString(e,"highPrice"),o=this.safeString(e,"lowPrice"),d=this.safeString(e,"volume"),c=this.safeString(e,"bidPrice"),h=this.safeString(e,"askPrice"),u=this.safeInteger(e,"at");return this.safeTicker({symbol:s,timestamp:u,datetime:this.iso8601(u),high:n,low:o,bid:c,bidVolume:void 0,ask:h,askVolume:void 0,vwap:void 0,open:a,close:r,last:r,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:d,quoteVolume:void 0,info:e},t)}parseBalance(e){const t={};for(let i=0;i<e.length;i++){const s=e[i],r=this.safeString(s,"asset"),a=this.safeCurrencyCode(r),n=this.account();n.free=this.safeString(s,"free"),n.used=this.safeString(s,"locked"),t[a]=n}return this.safeBalance(t)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privateGetFunds(e);return this.parseBalance(t)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a `symbol` argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==t&&(n.startTime=t),void 0!==i&&(n.limit=i);const o=await this.privateGetAllOrders(this.extend(n,s));let d=this.parseOrders(o,a,t,i);return d=this.filterBy(d,"symbol",e),d}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id);const n=await this.privateGetOpenOrders(this.extend(r,s));return this.parseOrders(n,a,t,i)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a `symbol` argument");await this.loadMarkets();const i={symbol:this.market(e).id};return await this.privateDeleteOpenOrders(this.extend(i,t))}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a `symbol` argument");await this.loadMarkets();const s={symbol:this.market(t).id,orderId:e},a=await this.privateDeleteOrder(this.extend(s,i));return this.parseOrder(a)}async createOrder(e,t,i,s,a=undefined,n={}){if("limit"!==(t=t.toLowerCase())&&"stop_limit"!==t)throw new r.ExchangeError(this.id+" createOrder() supports limit and stop_limit orders only");if(void 0===a)throw new r.ExchangeError(this.id+" createOrder() requires a price argument");await this.loadMarkets();const o=this.market(e),d={symbol:o.id,side:i,quantity:s,type:"limit"};d.price=this.priceToPrecision(e,a),void 0!==this.safeString(n,"stopPrice")&&(d.type="stop_limit");const c=await this.privatePostOrder(this.extend(d,n));return this.parseOrder(c,o)}parseOrder(e,t=undefined){const i=this.safeInteger(e,"createdTime"),s=this.safeInteger(e,"updatedTime"),r=this.safeString(e,"symbol"),a=this.safeSymbol(r,t),n=this.safeString(e,"quantity"),o=this.safeString(e,"executedQty"),d=this.parseOrderStatus(this.safeString(e,"status")),c=this.safeString(e,"id"),h=this.safeString(e,"price"),u=this.safeStringLower(e,"type"),l=this.safeStringLower(e,"side");return this.safeOrder({info:e,id:c,clientOrderId:void 0,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:s,status:d,symbol:a,type:u,timeInForce:void 0,postOnly:void 0,side:l,price:h,amount:n,filled:o,remaining:void 0,cost:void 0,fee:void 0,average:void 0,trades:[]},t)}parseOrderStatus(e){return this.safeString({wait:"open",done:"closed",cancel:"canceled"},e,e)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/"+e;if("public"===t&&Object.keys(s).length&&(n+="?"+this.urlencode(s)),"private"===t){this.checkRequiredCredentials();const e=this.milliseconds();let t=this.extend({recvWindow:this.options.recvWindow,timestamp:e},s);t=this.keysort(t);const i=this.hmac(this.encode(this.urlencode(t)),this.encode(this.secret),o.J);n+="?"+this.urlencode(t),n+="&signature="+i,r={"Content-Type":"application/x-www-form-urlencoded","X-Api-Key":this.apiKey}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.safeString(o,"code");if(void 0!==h){const e=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,h,e),new r.ExchangeError(e)}}}},5467:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5307),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"whitebit",name:"WhiteBit",version:"v4",countries:["EE"],rateLimit:500,has:{CORS:void 0,spot:!0,margin:!0,swap:!1,future:!1,option:!1,borrowMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,createOrder:!0,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,editOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDeposit:!0,fetchDepositAddress:!0,fetchDeposits:!0,fetchDepositWithdrawFee:"emulated",fetchDepositWithdrawFees:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrderTrades:!0,fetchPositionMode:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactionFees:!0,repayMargin:!1,setLeverage:!0,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","8h":"8h","12h":"12h","1d":"1d","3d":"3d","1w":"1w","1M":"1M"},urls:{logo:"https://user-images.githubusercontent.com/1294454/66732963-8eb7dd00-ee66-11e9-849b-10d9282bb9e0.jpg",api:{v1:{public:"https://whitebit.com/api/v1/public",private:"https://whitebit.com/api/v1"},v2:{public:"https://whitebit.com/api/v2/public"},v4:{public:"https://whitebit.com/api/v4/public",private:"https://whitebit.com/api/v4"}},www:"https://www.whitebit.com",doc:"https://github.com/whitebit-exchange/api-docs",fees:"https://whitebit.com/fee-schedule",referral:"https://whitebit.com/referral/d9bdf40e-28f2-4b52-b2f9-cd1415d82963"},api:{web:{get:["v1/healthcheck"]},v1:{public:{get:["markets","tickers","ticker","symbols","depth/result","history","kline"]},private:{post:["account/balance","order/new","order/cancel","orders","account/order_history","account/executed_history","account/executed_history/all","account/order"]}},v2:{public:{get:["markets","ticker","assets","fee","depth/{market}","trades/{market}"]}},v4:{public:{get:["assets","collateral/markets","fee","orderbook/{market}","ticker","trades/{market}","time","ping","markets"]},private:{post:["collateral-account/balance","collateral-account/positions/history","collateral-account/leverage","collateral-account/positions/open","collateral-account/summary","main-account/address","main-account/balance","main-account/create-new-address","main-account/codes","main-account/codes/apply","main-account/codes/my","main-account/codes/history","main-account/fiat-deposit-url","main-account/history","main-account/withdraw","main-account/withdraw-pay","main-account/transfer","trade-account/balance","trade-account/executed-history","trade-account/order","trade-account/order/history","order/collateral/limit","order/collateral/market","order/collateral/trigger_market","order/new","order/market","order/stock_market","order/stop_limit","order/stop_market","order/cancel","orders","profile/websocket_token"]}}},fees:{trading:{tierBased:!1,percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0.001")}},options:{fiatCurrencies:["EUR","USD","RUB","UAH"],fetchBalance:{account:"spot"},accountsByType:{main:"main",spot:"spot",margin:"collateral",trade:"spot"},networksById:{BEP20:"BSC"},defaultType:"spot",brokerId:"ccxt"},precisionMode:n.sh,exceptions:{exact:{"Unauthorized request.":r.AuthenticationError,"The market format is invalid.":r.BadSymbol,"Market is not available":r.BadSymbol,"Invalid payload.":r.BadRequest,"Amount must be greater than 0":r.InvalidOrder,"Not enough balance.":r.InsufficientFunds,"The order id field is required.":r.InvalidOrder,"Not enough balance":r.InsufficientFunds,"This action is unauthorized.":r.PermissionDenied,"This API Key is not authorized to perform this action.":r.PermissionDenied,"Unexecuted order was not found.":r.OrderNotFound,"The selected from is invalid.":r.BadRequest,503:r.ExchangeNotAvailable,422:r.OrderNotFound},broad:{"Given amount is less than min amount":r.InvalidOrder,"Total is less than":r.InvalidOrder,"fee must be no less than":r.InvalidOrder,"Enable your key in API settings":r.PermissionDenied,"You don't have such amount for transfer":r.InsufficientFunds}}})}async fetchMarkets(e={}){const t=await this.v4PublicGetMarkets(),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"name"),a=this.safeString(s,"stock");let n=this.safeString(s,"money");n="PERP"===n?"USDT":n;const o=this.safeCurrencyCode(a),d=this.safeCurrencyCode(n),c=this.safeValue(s,"tradesEnabled"),h=this.safeValue(s,"isCollateral");let u,l,p,f=o+"/"+d;const m="futures"===this.safeString(s,"type"),v=h&&!m;m?(p=n,l=this.safeCurrencyCode(p),f=f+":"+l,u="swap"):u="spot";const g={id:r,symbol:f,base:o,quote:d,settle:l,baseId:a,quoteId:n,settleId:p,type:u,spot:!m,margin:v,swap:m,future:!1,option:!1,active:c,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(s,"makerFee"),maker:this.safeNumber(s,"takerFee"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(s,"stockPrec"))),price:this.parseNumber(this.parsePrecision(this.safeString(s,"moneyPrec")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"minAmount"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(s,"minTotal"),max:void 0}},info:s};i.push(g)}return i}async fetchCurrencies(e={}){const t=await this.v4PublicGetAssets(e),i=Object.keys(t),s={};for(let e=0;e<i.length;e++){const r=i[e],a=t[r],n=this.safeValue(a,"can_deposit",!0),o=this.safeValue(a,"can_withdraw",!0),d=n&&o,c=this.safeCurrencyCode(r);s[c]={id:r,code:c,info:a,name:void 0,active:d,deposit:n,withdraw:o,fee:void 0,precision:void 0,limits:{amount:{min:void 0,max:void 0},withdraw:{min:this.safeNumber(a,"min_withdraw"),max:this.safeNumber(a,"max_withdraw")}}}}return s}async fetchTransactionFees(e=undefined,t={}){await this.loadMarkets();const i=await this.v4PublicGetFee(t),s=Object.keys(i),r={},a={};for(let e=0;e<s.length;e++){const t=s[e],n=i[t],o=this.safeCurrencyCode(t),d=this.safeValue(n,"withdraw",{});r[o]=this.safeString(d,"fixed");const c=this.safeValue(n,"deposit",{});a[o]=this.safeString(c,"fixed")}return{withdraw:r,deposit:a,info:i}}async fetchDepositWithdrawFees(e=undefined,t={}){await this.loadMarkets();const i=await this.v4PublicGetFee(t);return this.parseDepositWithdrawFees(i,e)}parseDepositWithdrawFees(e,t=undefined,i=undefined){const s={};t=this.marketCodes(t);const r=Object.keys(e);for(let i=0;i<r.length;i++){const a=r[i],n=a.split(" "),o=n[0],d=e[a],c=this.safeCurrencyCode(o);if(void 0===t||this.inArray(c,t)){void 0===this.safeValue(s,c)&&(s[c]=this.depositWithdrawFee({})),s[c].info[a]=d;let e=this.safeString(n,1);const t=this.safeValue(d,"withdraw"),i=this.safeValue(d,"deposit"),r=this.safeNumber(t,"fixed"),o=this.safeNumber(i,"fixed"),h={fee:r,percentage:void 0===r&&void 0},u={fee:o,percentage:void 0===o&&void 0};if(void 0!==e){const t=e.length;e=e.slice(1,t-1);const i=this.networkIdToCode(e);s[c].networks[i]={withdraw:h,deposit:u}}else s[c].withdraw=h,s[c].deposit=u}}const a=Object.keys(s);for(let e=0;e<a.length;e++){const t=a[e],i=this.currency(t);s[t]=this.assignDefaultDepositWithdrawFees(s[t],i)}return s}async fetchTradingFees(e={}){const t=await this.v4PublicGetAssets(e),i={};for(let e=0;e<this.symbols.length;e++){const s=this.symbols[e],r=this.market(s),n=this.safeValue(t,r.baseId,{});let o=this.safeString(n,"maker_fee"),d=this.safeString(n,"taker_fee");o=a.O.stringDiv(o,"100"),d=a.O.stringDiv(d,"100"),i[s]={info:n,symbol:r.symbol,percentage:!0,tierBased:!1,maker:this.parseNumber(o),taker:this.parseNumber(d)}}return i}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={market:i.id},r=await this.v1PublicGetTicker(this.extend(s,t)),a=this.safeValue(r,"result",{});return this.parseTicker(a,i)}parseTicker(e,t=undefined){t=this.safeMarket(void 0,t);const i=this.safeString(e,"last_price");return this.safeTicker({symbol:t.symbol,timestamp:void 0,datetime:void 0,high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:i,last:i,previousClose:void 0,change:void 0,percentage:this.safeString(e,"change"),average:void 0,baseVolume:this.safeString2(e,"base_volume","volume"),quoteVolume:this.safeString2(e,"quote_volume","deal"),info:e},t)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.v4PublicGetTicker(t),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){const t=s[e],a=this.safeMarket(t),n=this.parseTicker(i[t],a);r[n.symbol]=n}return this.filterByArray(r,"symbol",e)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={market:this.market(e).id};void 0!==t&&(s.depth=t);const r=await this.v4PublicGetOrderbookMarket(this.extend(s,i)),n=this.parseNumber(a.O.stringMul(this.safeString(r,"timestamp"),"1000"));return this.parseOrderBook(r,e,n)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={market:r.id},n=await this.v4PublicGetTradesMarket(this.extend(a,s));return this.parseTrades(n,r,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.market=r.id);const n=await this.v4PrivatePostTradeAccountExecutedHistory(this.extend(a,s));if(Array.isArray(n))return this.parseTrades(n,r,t,i);{let e=[];const s=Object.keys(n);for(let r=0;r<s.length;r++){const a=s[r],o=this.safeMarket(a,void 0,"_"),d=this.safeValue(n,a,[]),c=this.parseTrades(d,o,t,i);e=this.arrayConcat(e,c)}e=this.sortBy2(e,"timestamp","id");const r=void 0===t;return this.filterBySinceLimit(e,t,i,"timestamp",r)}}parseTrade(e,t=undefined){t=this.safeMarket(void 0,t);const i=this.safeTimestamp2(e,"time","trade_timestamp"),s=this.safeString2(e,"dealOrderId","orderId"),r=this.safeString(e,"deal"),a=this.safeString(e,"price"),n=this.safeString2(e,"amount","quote_volume"),o=this.safeString2(e,"id","tradeID"),d=this.safeString2(e,"type","side"),c=t.symbol,h=this.safeInteger(e,"role");let u,l;void 0!==h&&(u=1===h?"maker":"taker");const p=this.safeString(e,"fee");return void 0!==p&&(l={cost:p,currency:t.quote}),this.safeTrade({info:e,timestamp:i,datetime:this.iso8601(i),symbol:c,id:o,order:s,type:void 0,takerOrMaker:u,side:d,price:a,amount:n,cost:r,fee:l},t)}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={market:a.id,interval:this.safeString(this.timeframes,t,t)};if(void 0!==i){const e=1440;void 0===s&&(s=e),s=Math.min(s,e);const r=this.parseToInt(i/1e3),a=this.parseTimeframe(t),o=this.sum(r,a*s);n.start=r,n.end=o}void 0!==s&&(n.limit=Math.min(s,1440));const o=await this.v1PublicGetKline(this.extend(n,r)),d=this.safeValue(o,"result",[]);return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeTimestamp(e,0),this.safeNumber(e,1),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,2),this.safeNumber(e,5)]}async fetchStatus(e={}){const t=await this.v4PublicGetPing(e),i=this.safeString(t,0);return{status:"pong"===i?"ok":i,updated:void 0,eta:void 0,url:void 0,info:t}}async fetchTime(e={}){const t=await this.v4PublicGetTime(e);return this.safeInteger(t,"time")}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d={market:o.id,side:i,amount:this.amountToPrecision(e,s)},c=this.safeString2(n,"clOrdId","clientOrderId");if(void 0===c){const e=this.safeString(this.options,"brokerId");void 0!==e&&(d.clientOrderId=e+this.uuid16())}else d.clientOrderId=c,n=this.omit(n,["clientOrderId"]);const h=this.safeString(o,"type"),u="limit"===t,l="market"===t,p=this.safeNumberN(n,["triggerPrice","stopPrice","activation_price"]),f=void 0!==p,m=this.isPostOnly(l,!1,n),[v,g]=this.handleMarginModeAndParams("createOrder",n);let y;if(m&&(d.postOnly=!0),void 0!==v&&"cross"!==v)throw new r.NotSupported(this.id+" createOrder() is only available for cross margin");const b=void 0!==v||"swap"===h;f?(d.activation_price=this.priceToPrecision(e,p),u?(y="v4PrivatePostOrderStopLimit",d.price=this.priceToPrecision(e,a)):(y="v4PrivatePostOrderStopMarket",b&&(y="v4PrivatePostOrderCollateralTriggerMarket"))):u?(y="v4PrivatePostOrderNew",b&&(y="v4PrivatePostOrderCollateralLimit"),d.price=this.priceToPrecision(e,a)):(y="v4PrivatePostOrderStockMarket",b&&(y="v4PrivatePostOrderCollateralMarket")),n=this.omit(g,["postOnly","triggerPrice","stopPrice"]);const w=await this[y](this.extend(d,n));return this.parseOrder(w)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s={market:this.market(t).id,orderId:parseInt(e)};return await this.v4PrivatePostOrderCancel(this.extend(s,i))}parseBalance(e){const t=Object.keys(e),i={};for(let s=0;s<t.length;s++){const r=t[s],a=this.safeCurrencyCode(r),n=e[r];if("object"==typeof n&&void 0!==n){const e=this.account();e.free=this.safeString(n,"available"),e.used=this.safeString(n,"freeze"),e.total=this.safeString(n,"main_balance"),i[a]=e}else{const e=this.account();e.total=n,i[a]=e}}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const[t,i]=this.handleMarketTypeAndParams("fetchBalance",void 0,e);let s;if("swap"===t)s="v4PrivatePostCollateralAccountBalance";else{const t=this.safeValue(this.options,"fetchBalance",{}),i=this.safeString(t,"account"),r=this.safeString(e,"account",i);e=this.omit(e,"account"),s="main"===r?"v4PrivatePostMainAccountBalance":"v4PrivatePostTradeAccountBalance"}const r=await this[s](i);return this.parseBalance(r)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={market:a.id};void 0!==i&&(n.limit=Math.min(i,100));const o=await this.v4PrivatePostOrders(this.extend(n,s));return this.parseOrders(o,a,t,i,{status:"open"})}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),e=a.symbol,r.market=a.id),void 0!==i&&(r.limit=Math.min(i,100));const n=await this.v4PrivatePostTradeAccountOrderHistory(this.extend(r,s)),o=Object.keys(n);let d=[];for(let e=0;e<o.length;e++){const t=o[e],i=this.safeMarket(t,void 0,"_"),s=n[t];for(let e=0;e<s.length;e++){const t=this.parseOrder(s[e],i);d.push(this.extend(t,{status:"closed"}))}}return d=this.sortBy(d,"timestamp"),d=this.filterBySymbolSinceLimit(d,e,t,i),d}parseOrderType(e){return this.safeString({limit:"limit",market:"market","stop market":"market","stop limit":"limit","stock market":"market","margin limit":"limit","margin market":"market"},e,e)}parseOrder(e,t=undefined){const i=this.safeString(e,"market"),s=(t=this.safeMarket(i,t,"_")).symbol,r=this.safeString(e,"side"),a=this.safeString(e,"dealStock"),n=this.safeString(e,"left");let o=this.safeString(e,"clientOrderId");""===o&&(o=void 0);const d=this.safeString(e,"price"),c=this.safeNumber(e,"activation_price"),h=this.safeString2(e,"orderId","id"),u=this.safeString(e,"type");let l=this.safeString(e,"amount");const p=this.safeString(e,"dealMoney");"buy"!==r||"market"!==u&&"stop market"!==u||(l=a);const f=this.safeString(e,"dealFee");let m;void 0!==f&&(m={cost:this.parseNumber(f),currency:t.quote});const v=this.safeTimestamp2(e,"ctime","timestamp"),g=this.safeTimestamp(e,"ftime");return this.safeOrder({info:e,id:h,symbol:s,clientOrderId:o,timestamp:v,datetime:this.iso8601(v),lastTradeTimestamp:g,timeInForce:void 0,postOnly:void 0,status:void 0,side:r,price:d,type:this.parseOrderType(u),stopPrice:c,triggerPrice:c,amount:l,filled:a,remaining:n,average:void 0,cost:p,fee:m,trades:void 0},t)}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={orderId:parseInt(e)};let n;void 0!==t&&(n=this.market(t),a.market=n.id),void 0!==s&&(a.limit=Math.min(s,100));const o=await this.v4PrivatePostTradeAccountOrder(this.extend(a,r)),d=this.safeValue(o,"records",[]);return this.parseTrades(d,n)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i={ticker:this.currency(e).id};let s="v4PrivatePostMainAccountAddress";if(this.isFiat(e)){s="v4PrivatePostMainAccountFiatDepositUrl";const e=this.safeNumber(t,"provider");if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchDepositAddress() requires a provider when the ticker is fiat");i.provider=e;const a=this.safeNumber(t,"amount");if(void 0===a)throw new r.ArgumentsRequired(this.id+" fetchDepositAddress() requires an amount when the ticker is fiat");if(i.amount=a,void 0===this.safeValue(t,"uniqueId"))throw new r.ArgumentsRequired(this.id+" fetchDepositAddress() requires an uniqueId when the ticker is fiat")}const a=await this[s](this.extend(i,t)),n=this.safeString(a,"url"),o=this.safeValue(a,"account",{}),d=this.safeString(o,"address",n),c=this.safeString(o,"memo");return this.checkAddress(d),{currency:e,address:d,tag:c,network:void 0,info:a}}async setLeverage(e,t=undefined,i={}){if(await this.loadMarkets(),void 0!==t)throw new r.NotSupported(this.id+" setLeverage() does not allow to set per symbol");if(e<1||e>20)throw new r.BadRequest(this.id+" setLeverage() leverage should be between 1 and 20");const s={leverage:e};return await this.v4PrivatePostCollateralAccountLeverage(this.extend(s,i))}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n=this.safeValue(this.options,"accountsByType"),o=this.safeString(n,i,i),d=this.safeString(n,s,s),c=this.currencyToPrecision(e,t),h={ticker:a.id,amount:c,from:o,to:d},u=await this.v4PrivatePostMainAccountTransfer(this.extend(h,r));return this.parseTransfer(u,a)}parseTransfer(e,t=undefined){return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async withdraw(e,t,i,s=undefined,a={}){await this.loadMarkets();const n=this.currency(e),o={ticker:n.id,amount:this.currencyToPrecision(e,t),address:i};let d=this.safeValue(a,"uniqueId");if(void 0===d&&(d=this.uuid22()),o.uniqueId=d,void 0!==s&&(o.memo=s),this.isFiat(e)){const e=this.safeValue(a,"provider");if(void 0===e)throw new r.ArgumentsRequired(this.id+" withdraw() requires a provider when the ticker is fiat");o.provider=e}const c=await this.v4PrivatePostMainAccountWithdraw(this.extend(o,a));return this.extend({id:d},this.parseTransaction(c,n))}parseTransaction(e,t=undefined){t=this.safeCurrency(void 0,t);const i=this.safeString(e,"address"),s=this.safeTimestamp(e,"createdAt"),r=this.safeString(e,"ticker"),a=this.safeString(e,"status"),n=this.safeString(e,"method");return{id:this.safeString(e,"uniqueId"),txid:this.safeString(e,"transactionHash"),timestamp:s,datetime:this.iso8601(s),network:this.safeString(e,"network"),addressFrom:"1"===n?i:void 0,address:i,addressTo:"2"===n?i:void 0,amount:this.safeNumber(e,"amount"),type:"1"===n?"deposit":"withdrawal",currency:this.safeCurrencyCode(r,t),status:this.parseTransactionStatus(a),updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:this.safeString(e,"description"),fee:{cost:this.safeNumber(e,"fee"),currency:this.safeCurrencyCode(r,t)},info:e}}parseTransactionStatus(e){return this.safeString({1:"pending",2:"pending",3:"ok",4:"canceled",5:"pending",6:"pending",7:"ok",9:"canceled",10:"pending",11:"pending",12:"pending",13:"pending",14:"pending",15:"pending",16:"pending",17:"pending"},e,e)}async fetchDeposit(e,t=undefined,i={}){let s;await this.loadMarkets();const r={transactionMethod:1,uniqueId:e,limit:1,offset:0};void 0!==t&&(s=this.currency(t),r.ticker=s.id);const a=await this.v4PrivatePostMainAccountHistory(this.extend(r,i)),n=this.safeValue(a,"records",[]),o=this.safeValue(n,0,{});return this.parseTransaction(o,s)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={transactionMethod:1,limit:100,offset:0};void 0!==e&&(r=this.currency(e),a.ticker=r.id),void 0!==i&&(a.limit=Math.min(i,100));const n=await this.v4PrivatePostMainAccountHistory(this.extend(a,s)),o=this.safeValue(n,"records",[]);return this.parseTransactions(o,r,t,i)}async fetchBorrowInterest(e=undefined,t=undefined,i=undefined,s=undefined,r={}){await this.loadMarkets();const a={};let n;void 0!==t&&(n=this.market(t),a.market=n.id);const o=await this.v4PrivatePostCollateralAccountPositionsOpen(this.extend(a,r)),d=this.parseBorrowInterests(o,n);return this.filterByCurrencySinceLimit(d,e,i,s)}parseBorrowInterest(e,t=undefined){const i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"_"),r=this.safeTimestamp(e,"modifyDate");return{symbol:s,marginMode:"cross",currency:"USDT",interest:this.safeNumber(e,"unrealizedFunding"),interestRate:98e-5,amountBorrowed:this.safeNumber(e,"amount"),timestamp:r,datetime:this.iso8601(r),info:e}}isFiat(e){const t=this.safeValue(this.options,"fiatCurrencies",[]);return this.inArray(e,t)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=this.omit(s,this.extractParams(e)),d=this.safeValue(t,0),c=this.safeValue(t,1),h="/"+this.implodeParams(e,s);let u=this.urls.api[d][c]+h;if("public"===c&&Object.keys(n).length&&(u+="?"+this.urlencode(n)),"private"===c){this.checkRequiredCredentials();const e=this.nonce().toString(),t=this.encode(this.secret),i="/api/"+d+h;a=this.json(this.extend({request:i,nonce:e},s));const n=this.stringToBase64(a),c=this.hmac(n,t,o.o);r={"Content-Type":"application/json","X-TXC-APIKEY":this.apiKey,"X-TXC-PAYLOAD":n,"X-TXC-SIGNATURE":c}}return{url:u,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(418===e||429===e)throw new r.DDoSProtection(this.id+" "+e.toString()+" "+t+" "+n);if(404===e)throw new r.ExchangeError(this.id+" "+e.toString()+" endpoint not found");if(void 0!==o){const e=this.safeString(o,"status"),t=this.safeString(o,"message"),i=this.safeInteger(o,"code"),s=void 0!==e&&"200"!==e;if(s||void 0!==i){const i=this.id+" "+n;let a=t;if(s)a=e;else{const e=this.safeValue(o,"errors");if(void 0!==e){const t=Object.keys(e)[0],i=this.safeValue(e,t,[]);a=i.length>0?i[0]:n}}throw this.throwExactlyMatchedException(this.exceptions.exact,a,i),this.throwBroadlyMatchedException(this.exceptions.broad,n,i),new r.ExchangeError(i)}}}}},517:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(3771),r=i(6689),a=i(2194),n=i(9292),o=i(1372);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"woo",name:"WOO X",countries:["KY"],rateLimit:100,version:"v1",certified:!1,pro:!0,hostname:"woo.org",has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:!1,option:!1,addMargin:!1,borrowMargin:!1,cancelAllOrders:!0,cancelOrder:!0,cancelWithdraw:!1,createDepositAddress:!1,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!0,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchAccounts:!0,fetchBalance:!0,fetchCanceledOrders:!1,fetchClosedOrder:!1,fetchClosedOrders:!1,fetchCurrencies:!0,fetchDepositAddress:!1,fetchDeposits:!0,fetchFundingHistory:!0,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!0,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!1,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchOrderTrades:!0,fetchPosition:!0,fetchPositionMode:!1,fetchPositions:!0,fetchPremiumIndexOHLCV:!1,fetchStatus:!1,fetchTicker:!1,fetchTickers:!1,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!0,fetchTransfers:!0,fetchWithdrawals:!0,reduceMargin:!1,repayMargin:!0,setLeverage:!0,setMargin:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","4h":"4h","12h":"12h","1d":"1d","1w":"1w","1M":"1mon","1y":"1y"},urls:{logo:"https://user-images.githubusercontent.com/1294454/150730761-1a00e5e0-d28c-480f-9e65-089ce3e6ef3b.jpg",api:{pub:"https://api-pub.woo.org",public:"https://api.{hostname}",private:"https://api.{hostname}"},test:{pub:"https://api-pub.staging.woo.org",public:"https://api.staging.woo.org",private:"https://api.staging.woo.org"},www:"https://woo.org/",doc:["https://docs.woo.org/"],fees:["https://support.woo.org/hc/en-001/articles/4404611795353--Trading-Fees"],referral:"https://referral.woo.org/BAJS6oNmZb3vi3RGA"},api:{v1:{pub:{get:{"hist/kline":10,"hist/trades":1}},public:{get:{info:1,"info/{symbol}":1,system_info:1,market_trades:1,token:1,token_network:1,funding_rates:1,"funding_rate/{symbol}":1,funding_rate_history:1,futures:1,"futures/{symbol}":1}},private:{get:{"client/token":1,"order/{oid}":1,"client/order/{client_order_id}":1,orders:1,"orderbook/{symbol}":1,kline:1,"client/trade/{tid}":1,"order/{oid}/trades":1,"client/trades":1,"client/info":60,"asset/deposit":10,"asset/history":60,"sub_account/all":60,"sub_account/assets":60,token_interest:60,"token_interest/{token}":60,"interest/history":60,"interest/repay":60,"funding_fee/history":30,positions:3.33,"position/{symbol}":3.33},post:{order:5,"asset/main_sub_transfer":30,"asset/withdraw":30,"interest/repay":60,"client/account_mode":120,"client/leverage":120},delete:{order:1,"client/order":1,orders:1,"asset/withdraw":120}}},v2:{private:{get:{"client/holding":1}}},v3:{private:{get:{"algo/order/{oid}":1,"algo/orders":1,balances:1,accountinfo:60,positions:3.33,buypower:1},post:{"algo/order":5},put:{"order/{oid}":2,"order/client/{oid}":2,"algo/order/{oid}":2,"algo/order/client/{oid}":2},delete:{"algo/order/{oid}":1,"algo/orders/pending":1,"algo/orders/pending/{symbol}":1,"orders/pending":1}}}},fees:{trading:{tierBased:!0,percentage:!0,maker:this.parseNumber("0.0002"),taker:this.parseNumber("0.0005")}},options:{createMarketBuyOrderRequiresPrice:!0,"network-aliases-for-tokens":{HT:"ERC20",OMG:"ERC20",UATOM:"ATOM",ZRX:"ZRX"},networks:{TRX:"TRON",TRC20:"TRON",ERC20:"ETH",BEP20:"BSC"},defaultNetworkCodeForCurrencies:{},transfer:{fillResponseFromRequest:!0}},commonCurrencies:{},exceptions:{exact:{"-1000":r.ExchangeError,"-1001":r.AuthenticationError,"-1002":r.AuthenticationError,"-1003":r.RateLimitExceeded,"-1004":r.BadRequest,"-1005":r.BadRequest,"-1006":r.BadRequest,"-1007":r.BadRequest,"-1008":r.InvalidOrder,"-1009":r.BadRequest,"-1011":r.ExchangeError,"-1012":r.BadRequest,"-1101":r.InvalidOrder,"-1102":r.InvalidOrder,"-1103":r.InvalidOrder,"-1104":r.InvalidOrder,"-1105":r.InvalidOrder},broad:{"symbol must not be blank":r.BadRequest,"The token is not supported":r.BadRequest,"Your order and symbol are not valid or already canceled":r.BadRequest,"Insufficient WOO. Please enable margin trading for leverage trading":r.BadRequest}},precisionMode:n.sh})}async fetchMarkets(e={}){const t=await this.v1PublicGetInfo(e),i=[],s=this.safeValue(t,"rows",[]);for(let e=0;e<s.length;e++){const t=s[e],r=this.safeString(t,"symbol"),a=r.split("_");let n=this.safeStringLower(a,0);const o="spot"===n,d="perp"===n,c=this.safeString(a,1),h=this.safeString(a,2),u=this.safeCurrencyCode(c),l=this.safeCurrencyCode(h);let p,f,m,v,g=u+"/"+l;d&&(p=this.safeString(a,2),f=this.safeCurrencyCode(p),g=u+"/"+l+":"+f,m=this.parseNumber("1"),n="swap",v=!0),i.push({id:r,symbol:g,base:u,quote:l,settle:f,baseId:c,quoteId:h,settleId:p,type:n,spot:o,margin:!0,swap:d,future:!1,option:!1,active:void 0,contract:d,linear:v,inverse:void 0,contractSize:m,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(t,"base_tick"),price:this.safeNumber(t,"quote_tick")},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(t,"base_min"),max:this.safeNumber(t,"base_max")},price:{min:this.safeNumber(t,"quote_min"),max:this.safeNumber(t,"quote_max")},cost:{min:this.safeNumber(t,"min_notional"),max:void 0}},info:t})}return i}async fetchTrades(e,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n={symbol:a.id};void 0!==i&&(n.limit=i);const o=await this.v1PublicGetMarketTrades(this.extend(n,s)),d=this.safeValue(o,"rows",{});return this.parseTrades(d,a,t,i)}parseTrade(e,t=undefined){const i="id"in e,s=this.safeTimestamp(e,"executed_timestamp"),r=this.safeString(e,"symbol"),n=(t=this.safeMarket(r,t)).symbol,o=this.safeString(e,"executed_price"),d=this.safeString(e,"executed_quantity"),c=this.safeString(e,"order_id"),h=this.parseTokenAndFeeTemp(e,"fee_asset","fee"),u=a.O.stringMul(o,d),l=this.safeStringLower(e,"side"),p=this.safeString(e,"id");let f;return i&&(f="1"===this.safeString(e,"is_maker")?"maker":"taker"),this.safeTrade({id:p,timestamp:s,datetime:this.iso8601(s),symbol:n,side:l,price:o,amount:d,cost:u,order:c,takerOrMaker:f,type:void 0,fee:h,info:e},t)}parseTokenAndFeeTemp(e,t,i){const s=this.safeString(e,i);let r;if(void 0!==s){const i=this.safeString(e,t);r={cost:s,currency:this.safeCurrencyCode(i)}}return r}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.v3PrivateGetAccountinfo(e),i=this.safeValue(t,"data",{}),s=this.safeString(i,"makerFeeRate"),r=this.safeString(i,"takerFeeRate"),n={};for(let e=0;e<this.symbols.length;e++){const i=this.symbols[e];n[i]={info:t,symbol:i,maker:this.parseNumber(a.O.stringDiv(s,"10000")),taker:this.parseNumber(a.O.stringDiv(r,"10000")),percentage:!0,tierBased:!0}}return n}async fetchCurrencies(e={}){const t={},i=await this.v1PublicGetToken(e),s=this.safeValue(i,"rows",[]),r=this.groupBy(s,"balance_token"),n=Object.keys(r);for(let e=0;e<n.length;e++){const i=n[e],s=r[i],o=this.safeCurrencyCode(i);let d,c;const h={};for(let e=0;e<s.length;e++){const t=s[e];d=this.safeString(t,"fullname");const i=this.safeString(t,"token"),r=i.split("_")[0],n=this.parsePrecision(this.safeString(t,"decimals"));void 0!==n&&(c=void 0===c?n:a.O.stringMin(n,c)),h[r]={id:i,network:r,limits:{withdraw:{min:void 0,max:void 0},deposit:{min:void 0,max:void 0}},active:void 0,deposit:void 0,withdraw:void 0,fee:void 0,precision:this.parseNumber(n),info:t}}t[o]={id:i,name:d,code:o,precision:this.parseNumber(c),active:void 0,fee:void 0,networks:h,deposit:void 0,withdraw:void 0,limits:{deposit:{min:void 0,max:void 0},withdraw:{min:void 0,max:void 0}},info:s}}return t}async createOrder(e,t,i,s,n=undefined,o={}){const d=this.safeValue(o,"reduceOnly"),c=t.toUpperCase();if(void 0!==d&&"LIMIT"!==c)throw new r.InvalidOrder(this.id+" createOrder() only support reduceOnly for limit orders");await this.loadMarkets();const h=this.market(e),u=i.toUpperCase(),l={symbol:h.id,order_type:c,side:u},p="MARKET"===c,f=this.safeStringLower(o,"timeInForce");if(this.isPostOnly(p,void 0,o)?l.order_type="POST_ONLY":"fok"===f?l.order_type="FOK":"ioc"===f&&(l.order_type="IOC"),d&&(l.reduce_only=d),void 0!==n&&(l.order_price=this.priceToPrecision(e,n)),p)if(h.spot&&"BUY"===u){const t=this.safeNumber(o,"cost");if(this.safeValue(this.options,"createMarketBuyOrderRequiresPrice",!0))if(void 0===t){if(void 0===n)throw new r.InvalidOrder(this.id+" createOrder() requires the price argument for market buy orders to calculate total order cost. Supply a price argument to createOrder() call if you want the cost to be calculated for you from price and amount, or alternatively, supply the total cost value in the 'order_amount' in  exchange-specific parameters");{const t=this.numberToString(s),i=this.numberToString(n),r=a.O.stringMul(t,i);l.order_amount=this.costToPrecision(e,r)}}else l.order_amount=this.costToPrecision(e,t);else l.order_amount=this.costToPrecision(e,s)}else l.order_quantity=this.amountToPrecision(e,s);else l.order_quantity=this.amountToPrecision(e,s);const m=this.safeString2(o,"clOrdID","clientOrderId");void 0!==m&&(l.client_order_id=m),o=this.omit(o,["clOrdID","clientOrderId","postOnly","timeInForce"]);const v=await this.v1PrivatePostOrder(this.extend(l,o));return this.extend(this.parseOrder(v,h),{type:t})}async editOrder(e,t,i,s,r,a=undefined,n={}){await this.loadMarkets();const o=this.market(t),d={oid:e};void 0!==a&&(d.price=this.priceToPrecision(t,a)),void 0!==r&&(d.quantity=this.amountToPrecision(t,r));const c=await this.v3PrivatePutOrderOid(this.extend(d,n)),h=this.safeValue(c,"data",{});return this.parseOrder(h,o)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s={},a=this.safeString2(i,"clOrdID","clientOrderId"),n=this.safeString2(i,"client_order_id",a),o=void 0!==n;let d;o?(s.client_order_id=n,i=this.omit(i,["clOrdID","clientOrderId","client_order_id"])):s.order_id=e,void 0!==t&&(d=this.market(t)),s.symbol=d.id;const c=await this.v1PrivateDeleteOrder(this.extend(s,i)),h={symbol:t};return o?h.client_order_id=n:h.id=e,this.extend(this.parseOrder(c),h)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" canelOrders() requires a symbol argument");await this.loadMarkets();const i={symbol:this.market(e).id};return await this.v1PrivateDeleteOrders(this.extend(i,t))}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s=void 0!==t?this.market(t):void 0,r={},a=this.safeString2(i,"clOrdID","clientOrderId");let n;a?(n="v1PrivateGetClientOrderClientOrderId",r.client_order_id=a):(n="v1PrivateGetOrderOid",r.oid=e);const o=await this[n](this.extend(r,i));return this.parseOrder(o,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.start_t=t);const n=await this.v1PrivateGetOrders(this.extend(r,s)),o=this.safeValue(n,"rows");return this.parseOrders(o,a,t,i,s)}parseTimeInForce(e){return this.safeString({ioc:"IOC",fok:"FOK",post_only:"PO"},e,void 0)}parseOrder(e,t=undefined){const i=this.safeTimestamp2(e,"timestamp","created_time"),s=this.safeString(e,"order_id"),r=this.safeString(e,"client_order_id"),n=this.safeString(e,"symbol"),o=(t=this.safeMarket(n,t)).symbol,d=this.safeString2(e,"order_price","price"),c=this.safeString2(e,"order_quantity","quantity"),h=this.safeString2(e,"order_amount","amount"),u=this.safeStringLower2(e,"order_type","type"),l=this.safeValue(e,"status"),p=this.safeStringLower(e,"side"),f=this.safeValue(e,"executed"),m=this.safeString(e,"average_executed_price"),v=a.O.stringSub(h,f),g=this.safeValue(e,"total_fee"),y=this.safeString(e,"fee_asset"),b=this.safeValue(e,"Transactions");return this.safeOrder({id:s,clientOrderId:r,timestamp:i,datetime:this.iso8601(i),lastTradeTimestamp:void 0,status:this.parseOrderStatus(l),symbol:o,type:u,timeInForce:this.parseTimeInForce(u),postOnly:void 0,reduceOnly:this.safeValue(e,"reduce_only"),side:p,price:d,stopPrice:void 0,triggerPrice:void 0,average:m,amount:c,filled:f,remaining:v,cost:h,trades:b,fee:{cost:g,currency:y},info:e},t)}parseOrderStatus(e){if(void 0!==e){const t={NEW:"open",FILLED:"closed",CANCEL_SENT:"canceled",CANCEL_ALL_SENT:"canceled",CANCELLED:"canceled",PARTIAL_FILLED:"open",REJECTED:"rejected",INCOMPLETE:"open",COMPLETED:"closed"};return this.safeString(t,e,e)}return e}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s={symbol:this.market(e).id};void 0!==t&&(t=Math.min(t,1e3),s.max_level=t);const r=await this.v1PrivateGetOrderbookSymbol(this.extend(s,i)),a=this.safeInteger(r,"timestamp");return this.parseOrderBook(r,e,a,"bids","asks","price","quantity")}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.id,type:this.safeString(this.timeframes,t,t)};void 0!==s&&(n.limit=Math.min(s,1e3));const o=await this.v1PrivateGetKline(this.extend(n,r)),d=this.safeValue(o,"rows",[]);return this.parseOHLCVs(d,a,t,i,s)}parseOHLCV(e,t=undefined){return[this.safeInteger(e,"start_timestamp"),this.safeNumber(e,"open"),this.safeNumber(e,"high"),this.safeNumber(e,"low"),this.safeNumber(e,"close"),this.safeNumber(e,"volume")]}async fetchOrderTrades(e,t=undefined,i=undefined,s=undefined,r={}){let a;await this.loadMarkets(),void 0!==t&&(a=this.market(t));const n={oid:e},o=await this.v1PrivateGetOrderOidTrades(this.extend(n,r)),d=this.safeValue(o,"rows",[]);return this.parseTrades(d,a,i,s,r)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.start_t=t);const n=await this.v1PrivateGetClientTrades(this.extend(r,s)),o=this.safeValue(n,"rows",[]);return this.parseTrades(o,a,t,i,s)}async fetchAccounts(e={}){const t=await this.v1PrivateGetSubAccountAssets(e),i=this.safeValue(t,"rows",[]);return this.parseAccounts(i,e)}parseAccount(e){const t=this.safeString(e,"account");return{info:e,id:this.safeString(e,"application_id"),name:t,code:void 0,type:"Main"===t?"main":"subaccount"}}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v3PrivateGetBalances(e),i=this.safeValue(t,"data");return this.parseBalance(i)}parseBalance(e){const t={info:e},i=this.safeValue(e,"holding",[]);for(let e=0;e<i.length;e++){const s=i[e],r=this.safeCurrencyCode(this.safeString(s,"token")),a=this.account();a.total=this.safeString(s,"holding"),a.free=this.safeString(s,"availableBalance"),t[r]=a}return this.safeBalance(t)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s=this.defaultNetworkCodeForCurrency(e),r=this.safeString(t,"network",s);t=this.omit(t,"network");const a={token:r+"_"+i.code},n=await this.v1PrivateGetAssetDeposit(this.extend(a,t)),o=this.safeString(n,"extra"),d=this.safeString(n,"address");return this.checkAddress(d),{currency:e,address:d,tag:o,network:r,info:n}}async getAssetHistoryRows(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.balance_token=a.id),void 0!==t&&(r.start_t=t),void 0!==i&&(r.pageSize=i);const n=this.safeString(s,"type");s=this.omit(s,"type"),void 0!==n&&(r.type=n);const o=await this.v1PrivateGetAssetHistory(this.extend(r,s));return[a,this.safeValue(o,"rows",{})]}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){const[r,a]=await this.getAssetHistoryRows(e,t,i,s);return this.parseLedger(a,r,t,i,s)}parseLedgerEntry(e,t=undefined){const i=this.safeString(e,"token"),s=this.getCurrencyFromChaincode(i,t).code,r=this.safeNumber(e,"amount"),a="DEPOSIT"===this.safeString(e,"token_side")?"in":"out",n=this.safeTimestamp(e,"created_time"),o=this.parseTokenAndFeeTemp(e,"fee_token","fee_amount");return{id:this.safeString(e,"id"),currency:s,account:this.safeString(e,"account"),referenceAccount:void 0,referenceId:this.safeString(e,"tx_id"),status:this.parseTransactionStatus(this.safeString(e,"status")),amount:r,before:void 0,after:void 0,fee:o,direction:a,timestamp:n,datetime:this.iso8601(n),type:this.parseLedgerEntryType(this.safeString(e,"type")),info:e}}parseLedgerEntryType(e){return this.safeString({BALANCE:"transaction",COLLATERAL:"transfer"},e,e)}getCurrencyFromChaincode(e,t){if(void 0!==t)return t;{const i=e.split("_"),s=i.length,r=this.safeString(i,0);let a=this.safeString(i,1,r);s>2&&(a+="_"+this.safeString(i,2)),t=this.safeCurrency(a)}return t}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactions(e,t,i,this.extend({token_side:"DEPOSIT"},s))}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){return await this.fetchTransactions(e,t,i,this.extend({token_side:"WITHDRAW"},s))}async fetchTransactions(e=undefined,t=undefined,i=undefined,s={}){const[r,a]=await this.getAssetHistoryRows(e,t,i,this.extend({type:"BALANCE"},s));return this.parseTransactions(a,r,t,i,s)}parseTransaction(e,t=undefined){const i=this.safeString(e,"token"),s=this.getCurrencyFromChaincode(i,t).code;let r=this.safeStringLower(e,"token_side");"withdraw"===r&&(r="withdrawal");const a=this.parseTokenAndFeeTemp(e,"fee_token","fee_amount"),n=this.safeString(e,"target_address"),o=this.safeString(e,"source_address"),d=this.safeTimestamp(e,"created_time");return{id:this.safeString2(e,"id","withdraw_id"),txid:this.safeString(e,"tx_id"),timestamp:d,datetime:this.iso8601(d),address:void 0,addressFrom:o,addressTo:n,tag:this.safeString(e,"extra"),type:r,amount:this.safeNumber(e,"amount"),currency:s,status:this.parseTransactionStatus(this.safeString(e,"status")),updated:this.safeTimestamp(e,"updated_time"),fee:a,info:e}}parseTransactionStatus(e){return this.safeString({NEW:"pending",CONFIRMING:"pending",PROCESSING:"pending",COMPLETED:"ok",CANCELED:"canceled"},e,e)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n={token:a.id,amount:this.parseNumber(t),from_application_id:i,to_application_id:s},o=await this.v1PrivatePostAssetMainSubTransfer(this.extend(n,r)),d=this.parseTransfer(o,a),c=this.safeValue(this.options,"transfer",{});return this.safeValue(c,"fillResponseFromRequest",!0)&&(d.amount=t,d.fromAccount=i,d.toAccount=s),d}async fetchTransfers(e=undefined,t=undefined,i=undefined,s={}){const[r,a]=await this.getAssetHistoryRows(e,t,i,this.extend({type:"COLLATERAL"},s));return this.parseTransfers(a,r,t,i,s)}parseTransfer(e,t=undefined){const i=this.safeString(e,"token"),s=this.getCurrencyFromChaincode(i,t).code;let r,a,n=this.safeStringLower(e,"token_side");"withdraw"===n&&(n="withdrawal"),"withdraw"===n?(r=void 0,a="spot"):"deposit"===n&&(r="spot",a=void 0);const o=this.safeTimestamp(e,"created_time"),d=this.safeValue(e,"success");let c;return void 0!==d&&(c=d?"ok":"failed"),{id:this.safeString(e,"id"),timestamp:o,datetime:this.iso8601(o),currency:s,amount:this.safeNumber(e,"amount"),fromAccount:r,toAccount:a,status:this.parseTransferStatus(this.safeString(e,"status",c)),info:e}}parseTransferStatus(e){return this.safeString({NEW:"pending",CONFIRMING:"pending",PROCESSING:"pending",COMPLETED:"ok",CANCELED:"canceled"},e,e)}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),await this.loadMarkets(),this.checkAddress(i);const n=this.currency(e),o={amount:t,address:i};void 0!==s&&(o.extra=s);const d=this.safeValue(this.options,"networks",{}),c=this.safeValue(n,"networks",{}),h=this.safeStringUpper(a,"network"),u=this.safeString(d,h,h),l=this.safeValue(c,u,{}),p=this.safeString(l,"id");if(void 0===p)throw new r.BadRequest(this.id+" withdraw() require network parameter");o.token=p;const f=await this.v1PrivatePostAssetWithdraw(this.extend(o,a));return this.parseTransaction(f,n)}async repayMargin(e,t,i=undefined,s={}){let r;await this.loadMarkets(),void 0!==i&&(r=this.market(i),i=r.symbol);const a=this.currency(e),n={token:a.id,amount:this.currencyToPrecision(e,t)},o=await this.v1PrivatePostInterestRepay(this.extend(n,s)),d=this.parseMarginLoan(o,a);return this.extend(d,{amount:t,symbol:i})}parseMarginLoan(e,t=undefined){return{id:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const n=t[0],d=t[1],c=this.implodeParams(e,s);let h=this.implodeHostname(this.urls.api[d]);if(h+="/"+n+"/",s=this.omit(s,this.extractParams(e)),s=this.keysort(s),"public"===d)h+=d+"/"+c,Object.keys(s).length&&(h+="?"+this.urlencode(s));else{this.checkRequiredCredentials();let e="";const t=this.nonce().toString();if(h+=c,r={"x-api-key":this.apiKey,"x-api-timestamp":t},"v3"===n){if(e=t+i+"/"+n+"/"+c,"POST"===i||"PUT"===i||"DELETE"===i)e+=a=this.json(s);else if(Object.keys(s).length){const t=this.urlencode(s);h+="?"+t,e+="?"+t}r["content-type"]="application/json"}else e=this.urlencode(s),"POST"===i||"PUT"===i||"DELETE"===i?a=e:h+="?"+e,e+="|"+t,r["content-type"]="application/x-www-form-urlencoded";r["x-api-signature"]=this.hmac(this.encode(e),this.encode(this.secret),o.J)}return{url:h,method:i,body:a,headers:r}}handleErrors(e,t,i,s,r,a,n,o,d){if(!n)return;const c=this.safeValue(n,"success"),h=this.safeString(n,"code");if(!c){const e=this.id+" "+this.json(n);this.throwBroadlyMatchedException(this.exceptions.broad,a,e),this.throwExactlyMatchedException(this.exceptions.exact,h,e)}}parseIncome(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeNumber(e,"funding_fee"),a=this.safeCurrencyCode("USD"),n=this.safeString(e,"id"),o=this.safeTimestamp(e,"updated_time"),d=this.safeNumber(e,"funding_rate");return{info:e,symbol:s,code:a,timestamp:o,datetime:this.iso8601(o),id:n,amount:r,rate:d}}async fetchFundingHistory(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.market(e),r.symbol=a.id),void 0!==t&&(r.start_t=t);const n=await this.v1PrivateGetFundingFeeHistory(this.extend(r,s)),o=this.safeValue(n,"rows",[]);return this.parseIncomes(o,a,t,i)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"symbol");t=this.market(i);const s=this.safeInteger(e,"next_funding_time"),r=this.safeInteger(e,"est_funding_rate_timestamp"),a=this.safeInteger(e,"last_funding_rate_timestamp");return{info:e,symbol:t.symbol,markPrice:void 0,indexPrice:void 0,interestRate:this.parseNumber("0"),estimatedSettlePrice:void 0,timestamp:r,datetime:this.iso8601(r),fundingRate:this.safeNumber(e,"est_funding_rate"),fundingTimestamp:s,fundingDatetime:this.iso8601(s),nextFundingRate:void 0,nextFundingTimestamp:void 0,nextFundingDatetime:void 0,previousFundingRate:this.safeNumber(e,"last_funding_rate"),previousFundingTimestamp:a,previousFundingDatetime:this.iso8601(a)}}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.v1PublicGetFundingRateSymbol(this.extend(s,t));return this.parseFundingRate(r,i)}async fetchFundingRates(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.v1PublicGetFundingRates(t),s=this.safeValue(i,"rows",{}),r=this.parseFundingRates(s);return this.filterByArray(r,"symbol",e)}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.market(e);e=t.symbol,r.symbol=t.id}void 0!==t&&(r.start_t=this.parseToInt(t/1e3));const a=await this.v1PublicGetFundingRateHistory(this.extend(r,s)),n=this.safeValue(a,"rows"),o=[];for(let e=0;e<n.length;e++){const t=n[e],i=this.safeString(t,"symbol"),s=this.safeInteger(t,"funding_rate_timestamp");o.push({info:t,symbol:this.safeSymbol(i),fundingRate:this.safeNumber(t,"funding_rate"),timestamp:s,datetime:this.iso8601(s)})}const d=this.sortBy(o,"timestamp");return this.filterBySymbolSinceLimit(d,e,t,i)}async fetchLeverage(e,t={}){await this.loadMarkets();const i=await this.v3PrivateGetAccountinfo(t),s=this.safeValue(i,"data");return{info:i,leverage:this.safeNumber(s,"leverage")}}async setLeverage(e,t=undefined,i={}){if(await this.loadMarkets(),e<1||e>20)throw new r.BadRequest(this.id+" leverage should be between 1 and 20");const s={leverage:e};return await this.v1PrivatePostClientLeverage(this.extend(s,i))}async fetchPosition(e=undefined,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.v1PrivateGetPositionSymbol(this.extend(s,t));return this.parsePosition(r,i)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.v3PrivateGetPositions(t),s=this.safeValue(i,"data",{}),r=this.safeValue(s,"positions",[]);return this.parsePositions(r,e)}parsePosition(e,t=undefined){const i=this.safeString(e,"symbol");t=this.safeMarket(i,t);let s,r=this.safeString(e,"holding");s=a.O.stringGt(r,"0")?"long":"short";const n=this.safeString(t,"contractSize"),o=this.safeString(e,"markPrice"),d=this.safeTimestamp(e,"timestamp"),c=this.safeString(e,"averageOpenPrice"),h=a.O.stringSub(o,c),u=a.O.stringMul(h,r);r=a.O.stringAbs(r);const l=a.O.stringMul(r,o);return{info:e,id:void 0,symbol:this.safeString(t,"symbol"),timestamp:d,datetime:this.iso8601(d),initialMargin:void 0,initialMarginPercentage:void 0,maintenanceMargin:void 0,maintenanceMarginPercentage:void 0,entryPrice:this.parseNumber(c),notional:this.parseNumber(l),leverage:void 0,unrealizedPnl:this.parseNumber(u),contracts:this.parseNumber(r),contractSize:this.parseNumber(n),marginRatio:void 0,liquidationPrice:this.safeNumber(e,"estLiqPrice"),markPrice:this.parseNumber(o),collateral:void 0,marginMode:"cross",marginType:void 0,side:s,percentage:void 0}}defaultNetworkCodeForCurrency(e){const t=this.currency(e).networks,i=Object.keys(t);for(let e=0;e<i.length;e++){const t=i[e];if("ETH"===t)return t}return this.safeValue(i,0)}}},3850:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5790),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"yobit",name:"YoBit",countries:["RU"],rateLimit:2e3,version:"3",has:{CORS:void 0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelOrder:!0,createDepositAddress:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!1,createStopMarketOrder:!1,createStopOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDepositAddress:!0,fetchDeposits:!1,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrderBooks:!0,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!0,fetchTransactions:!1,fetchTransfer:!1,fetchTransfers:!1,fetchWithdrawals:!1,reduceMargin:!1,setLeverage:!1,setMarginMode:!1,setPositionMode:!1,transfer:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766910-cdcbfdae-5eea-11e7-9859-03fea873272d.jpg",api:{public:"https://yobit.net/api",private:"https://yobit.net/tapi"},www:"https://www.yobit.net",doc:"https://www.yobit.net/en/api/",fees:"https://www.yobit.net/en/fees/"},api:{public:{get:{"depth/{pair}":1,info:1,"ticker/{pair}":1,"trades/{pair}":1}},private:{post:{ActiveOrders:1,CancelOrder:1,GetDepositAddress:1,getInfo:1,OrderInfo:1,Trade:1,TradeHistory:1,WithdrawCoinsToAddress:1}}},fees:{trading:{maker:.002,taker:.002},funding:{withdraw:{}}},commonCurrencies:{AIR:"AirCoin",ANI:"ANICoin",ANT:"AntsCoin",ATMCHA:"ATM",ASN:"Ascension",AST:"Astral",ATM:"Autumncoin",AUR:"AuroraCoin",BAB:"Babel",BAN:"BANcoin",BCC:"BCH",BCS:"BitcoinStake",BITS:"Bitstar",BLN:"Bulleon",BNS:"Benefit Bonus Coin",BOT:"BOTcoin",BON:"BONES",BPC:"BitcoinPremium",BST:"BitStone",BTS:"Bitshares2",CAT:"BitClave",CBC:"CryptoBossCoin",CMT:"CometCoin",COIN:"Coin.com",COV:"Coven Coin",COVX:"COV",CPC:"Capricoin",CREDIT:"Creditbit",CS:"CryptoSpots",DCT:"Discount",DFT:"DraftCoin",DGD:"DarkGoldCoin",DIRT:"DIRTY",DROP:"FaucetCoin",DSH:"DASH",EGC:"EverGreenCoin",EGG:"EggCoin",EKO:"EkoCoin",ENTER:"ENTRC",EPC:"ExperienceCoin",ESC:"EdwardSnowden",EUROPE:"EUROP",EXT:"LifeExtension",FUND:"FUNDChains",FUNK:"FUNKCoin",FX:"FCoin",GCC:"GlobalCryptocurrency",GEN:"Genstake",GENE:"Genesiscoin",GMR:"Gimmer",GOLD:"GoldMint",GOT:"Giotto Coin",GSX:"GlowShares",GT:"GTcoin",HTML5:"HTML",HYPERX:"HYPER",ICN:"iCoin",INSANE:"INSN",JNT:"JointCoin",JPC:"JupiterCoin",JWL:"Jewels",KNC:"KingN Coin",LBTCX:"LiteBitcoin",LIZI:"LiZi",LOC:"LocoCoin",LOCX:"LOC",LUNYR:"LUN",LUN:"LunarCoin",LUNA:"Luna Coin",MASK:"Yobit MASK",MDT:"Midnight",MEME:"Memez Token",MIS:"MIScoin",MM:"MasterMint",NAV:"NavajoCoin",NBT:"NiceBytes",OMG:"OMGame",ONX:"Onix",PAC:"$PAC",PLAY:"PlayCoin",PIVX:"Darknet",PRS:"PRE",PURE:"PurePOS",PUTIN:"PutinCoin",SPACE:"Spacecoin",STK:"StakeCoin",SUB:"Subscriptio",PAY:"EPAY",PLC:"Platin Coin",RAI:"RaiderCoin",RCN:"RCoin",REP:"Republicoin",RUR:"RUB",SBTC:"Super Bitcoin",SMC:"SmartCoin",SOLO:"SoloCoin",SOUL:"SoulCoin",STAR:"StarCoin",SUPER:"SuperCoin",TNS:"Transcodium",TTC:"TittieCoin",UNI:"Universe",UST:"Uservice",VOL:"VolumeCoin",XIN:"XINCoin",XMT:"SummitCoin",XRA:"Ratecoin"},options:{fetchOrdersRequiresSymbol:!0,fetchTickersMaxLength:512,networks:{ETH:"ERC20",TRX:"TRC20",BSC:"BEP20"}},precisionMode:n.sh,exceptions:{exact:{803:r.InvalidOrder,804:r.InvalidOrder,805:r.InvalidOrder,806:r.InvalidOrder,807:r.InvalidOrder,831:r.InsufficientFunds,832:r.InsufficientFunds,833:r.OrderNotFound},broad:{"Invalid pair name":r.ExchangeError,"invalid api key":r.AuthenticationError,"invalid sign":r.AuthenticationError,"api key dont have trade permission":r.AuthenticationError,"invalid parameter":r.InvalidOrder,"invalid order":r.InvalidOrder,"The given order has already been cancelled":r.InvalidOrder,"Requests too often":r.DDoSProtection,"not available":r.ExchangeNotAvailable,"data unavailable":r.ExchangeNotAvailable,"external service unavailable":r.ExchangeNotAvailable,"Total transaction amount":r.InvalidOrder,"The given order has already been closed and cannot be cancelled":r.InvalidOrder,"Insufficient funds":r.InsufficientFunds,"invalid key":r.AuthenticationError,"invalid nonce":r.InvalidNonce,"Total order amount is less than minimal amount":r.InvalidOrder,"Rate Limited":r.RateLimitExceeded}},orders:{}})}parseBalance(e){const t=this.safeValue(e,"return",{}),i=this.safeInteger(t,"server_time"),s={info:e,timestamp:i,datetime:this.iso8601(i)},r=this.safeValue(t,"funds",{}),a=this.safeValue(t,"funds_incl_orders",{}),n=Object.keys(this.extend(r,a));for(let e=0;e<n.length;e++){const t=n[e],i=this.safeCurrencyCode(t),o=this.account();o.free=this.safeString(r,t),o.total=this.safeString(a,t),s[i]=o}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchMarkets(e={}){const t=await this.publicGetInfo(e),i=this.safeValue(t,"pairs",{}),s=Object.keys(i),r=[];for(let e=0;e<s.length;e++){const t=s[e],n=i[t],[o,d]=t.split("_");let c=o.toUpperCase(),h=d.toUpperCase();c=this.safeCurrencyCode(c),h=this.safeCurrencyCode(h);const u=this.safeInteger(n,"hidden");let l=this.safeString(n,"fee");l=a.O.stringDiv(l,"100"),r.push({id:t,symbol:c+"/"+h,base:c,quote:h,settle:void 0,baseId:o,quoteId:d,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:0===u,contract:!1,linear:void 0,inverse:void 0,taker:this.parseNumber(l),maker:this.parseNumber(l),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(n,"decimal_places"))),price:this.parseNumber(this.parsePrecision(this.safeString(n,"decimal_places")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(n,"min_amount"),max:this.safeNumber(n,"max_amount")},price:{min:this.safeNumber(n,"min_price"),max:this.safeNumber(n,"max_price")},cost:{min:this.safeNumber(n,"min_total"),max:void 0}},info:n})}return r}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),a={pair:s.id};void 0!==t&&(a.limit=t);const n=await this.publicGetDepthPair(this.extend(a,i));if(!(s.id in n))throw new r.ExchangeError(this.id+" "+s.symbol+" order book is empty or not available");const o=n[s.id];return this.parseOrderBook(o,e)}async fetchOrderBooks(e=undefined,t=undefined,i={}){let s;if(await this.loadMarkets(),void 0===e){if(s=this.ids.join("-"),s.length>2048){const e=this.ids.length;throw new r.ExchangeError(this.id+" fetchOrderBooks() has "+e.toString()+" symbols exceeding max URL length, you are required to specify a list of symbols in the first argument to fetchOrderBooks")}}else s=this.marketIds(e),s=s.join("-");const a={pair:s};void 0!==t&&(a.limit=t);const n=await this.publicGetDepthPair(this.extend(a,i)),o={};s=Object.keys(n);for(let e=0;e<s.length;e++){const t=s[e],i=this.safeSymbol(t);o[i]=this.parseOrderBook(n[t],i)}return o}parseTicker(e,t=undefined){const i=this.safeTimestamp(e,"updated"),s=this.safeString(e,"last");return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:void 0,close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:this.safeString(e,"avg"),baseVolume:this.safeString(e,"vol_cur"),quoteVolume:this.safeString(e,"vol"),info:e},t)}async fetchTickers(e=undefined,t={}){let i;if(await this.loadMarkets(),void 0===(e=this.marketSymbols(e))){const e=this.ids.length;i=i.join("-");const t=this.safeInteger(this.options,"fetchTickersMaxLength",2048);if(i.length>this.options.fetchTickersMaxLength)throw new r.ArgumentsRequired(this.id+" fetchTickers() has "+e.toString()+" markets exceeding max URL length for this endpoint ("+t.toString()+" characters), please, specify a list of symbols of interest in the first argument to fetchTickers")}else i=this.marketIds(e).join("-");const s={pair:i},a=await this.publicGetTickerPair(this.extend(s,t)),n={},o=Object.keys(a);for(let e=0;e<o.length;e++){const t=o[e],i=a[t],s=this.safeMarket(t);n[s.symbol]=this.parseTicker(i,s)}return this.filterByArray(n,"symbol",e)}async fetchTicker(e,t={}){return(await this.fetchTickers([e],t))[e]}parseTrade(e,t=undefined){const i=this.safeTimestamp(e,"timestamp");let s=this.safeString(e,"type");"ask"===s?s="sell":"bid"===s&&(s="buy");const r=this.safeString2(e,"rate","price"),a=this.safeString2(e,"trade_id","tid"),n=this.safeString(e,"order_id"),o=this.safeString(e,"pair"),d=this.safeSymbol(o,t),c=this.safeString(e,"amount"),h=this.parseNumber(r),u=this.parseNumber(c),l="limit";let p;const f=this.safeNumber(e,"commission");if(void 0!==f){const t=this.safeString(e,"commissionCurrency");p={cost:f,currency:this.safeCurrencyCode(t)}}if(void 0!==this.safeValue(e,"is_your_order")&&void 0===p){const e=this.calculateFee(d,l,s,u,h,"taker");p={currency:this.safeString(e,"currency"),cost:this.safeString(e,"cost"),rate:this.safeString(e,"rate")}}return this.safeTrade({id:a,order:n,timestamp:i,datetime:this.iso8601(i),symbol:d,type:l,side:s,takerOrMaker:void 0,price:r,amount:c,cost:void 0,fee:p,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};void 0!==i&&(a.limit=i);const n=await this.publicGetTradesPair(this.extend(a,s));if(Array.isArray(n)&&0===n.length)return[];const o=this.safeValue(n,r.id,[]);return this.parseTrades(o,r,t,i)}async fetchTradingFees(e={}){await this.loadMarkets();const t=await this.publicGetInfo(e),i=this.safeValue(t,"pairs",{}),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){const t=s[e],n=this.safeValue(i,t,{}),o=this.safeSymbol(t,void 0,"_"),d=this.safeString(n,"fee_buyer"),c=this.safeString(n,"fee_seller"),h=this.parseNumber(a.O.stringDiv(d,"100")),u=this.parseNumber(a.O.stringDiv(c,"100"));r[o]={info:n,symbol:o,taker:h,maker:u,percentage:!0,tierBased:!1}}return r}async createOrder(e,t,i,s,a=undefined,n={}){if("market"===t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");await this.loadMarkets();const o=this.market(e),d={pair:o.id,type:i,amount:this.amountToPrecision(e,s),rate:this.priceToPrecision(e,a)},c=await this.privatePostTrade(this.extend(d,n)),h=this.safeValue(c,"return");return this.parseOrder(h,o)}async cancelOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:parseInt(e)},r=await this.privatePostCancelOrder(this.extend(s,i)),a=this.safeValue(r,"return",{});return this.parseOrder(a)}parseOrderStatus(e){return this.safeString({0:"open",1:"closed",2:"canceled",3:"open"},e,e)}parseOrder(e,t=undefined){let i=this.safeString2(e,"id","order_id"),s=this.parseOrderStatus(this.safeString(e,"status","open"));"0"===i&&(i=this.safeString(e,"init_order_id"),s="closed");const r=this.safeTimestamp2(e,"timestamp_created","server_time"),a=this.safeString(e,"pair"),n=this.safeSymbol(a,t),o=this.safeString(e,"start_amount"),d=this.safeString2(e,"amount","remains"),c=this.safeString(e,"received","0.0"),h=this.safeString(e,"rate"),u=this.safeString(e,"type");return this.safeOrder({info:e,id:i,clientOrderId:void 0,symbol:n,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,type:"limit",timeInForce:void 0,postOnly:void 0,side:u,price:h,stopPrice:void 0,triggerPrice:void 0,cost:void 0,amount:o,remaining:d,filled:c,status:s,fee:void 0,average:void 0,trades:void 0},t)}async fetchOrder(e,t=undefined,i={}){await this.loadMarkets();const s={order_id:parseInt(e)},r=await this.privatePostOrderInfo(this.extend(s,i));e=e.toString();const a=this.safeValue(r,"return",{});return this.parseOrder(this.extend({id:e},a[e]))}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a={};if(void 0!==e){const t=this.market(e);a.pair=t.id}const n=await this.privatePostActiveOrders(this.extend(a,s)),o=this.safeValue(n,"return",{});return this.parseOrders(o,void 0,t,i)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchMyTrades() requires a `symbol` argument");await this.loadMarkets();const a=this.market(e),n={pair:a.id};void 0!==i&&(n.count=parseInt(i)),void 0!==t&&(n.since=this.parseToInt(t/1e3));const o=await this.privatePostTradeHistory(this.extend(n,s)),d=this.safeValue(o,"return",{}),c=Object.keys(d),h=[];for(let e=0;e<c.length;e++){const t=c[e],i=this.parseTrade(this.extend(d[t],{trade_id:t}),a);h.push(i)}return this.filterBySymbolSinceLimit(h,a.symbol,t,i)}async createDepositAddress(e,t={}){const i=await this.fetchDepositAddress(e,this.extend({need_new:1},t)),s=this.safeString(i,"address");return this.checkAddress(s),{currency:e,address:s,tag:void 0,info:i.info}}async fetchDepositAddress(e,t={}){await this.loadMarkets();let i=this.currency(e).id;const s=this.safeValue(this.options,"networks",{});let r=this.safeStringUpper(t,"network");r=this.safeString(s,r,r),void 0!==r&&("ERC20"!==r&&(i+=r.toLowerCase()),t=this.omit(t,"network"));const a={coinName:i,need_new:0},n=await this.privatePostGetDepositAddress(this.extend(a,t)),o=this.safeString(n.return,"address");return this.checkAddress(o),{currency:e,address:o,tag:void 0,network:void 0,info:n}}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n={coinName:this.currency(e).id,amount:t,address:i};if(void 0!==s)throw new r.ExchangeError(this.id+" withdraw() does not support the tag argument yet due to a lack of docs on withdrawing with tag/memo on behalf of the exchange.");return{info:await this.privatePostWithdrawCoinsToAddress(this.extend(n,a)),id:void 0}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api[t];const d=this.omit(s,this.extractParams(e));if("private"===t){this.checkRequiredCredentials();const t=this.nonce();a=this.urlencode(this.extend({nonce:t,method:e},d));const i=this.hmac(this.encode(a),this.encode(this.secret),o.o);r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:i}}else"public"===t?(n+="/"+this.version+"/"+this.implodeParams(e,s),Object.keys(d).length&&(n+="?"+this.urlencode(d))):(n+="/"+this.implodeParams(e,s),"GET"===i?Object.keys(d).length&&(n+="?"+this.urlencode(d)):Object.keys(d).length&&(a=this.json(d),r={"Content-Type":"application/json"}));return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"success"in o){let e=this.safeValue(o,"success",!1);if("string"==typeof e&&(e="true"===e||"1"===e),!e){const e=this.safeString(o,"code"),t=this.safeString(o,"error"),i=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions.exact,e,i),this.throwExactlyMatchedException(this.exceptions.exact,t,i),this.throwBroadlyMatchedException(this.exceptions.broad,t,i),new r.ExchangeError(i)}}}}},5934:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(5224),r=i(6689),a=i(2194),n=i(9292),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"zaif",name:"Zaif",countries:["JP"],rateLimit:100,version:"1",has:{CORS:void 0,spot:!0,margin:void 0,swap:!1,future:!1,option:!1,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,fetchBalance:!0,fetchClosedOrders:!0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchOpenInterestHistory:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,withdraw:!0},urls:{logo:"https://user-images.githubusercontent.com/1294454/27766927-39ca2ada-5eeb-11e7-972f-1b4199518ca6.jpg",api:{rest:"https://api.zaif.jp"},www:"https://zaif.jp",doc:["https://techbureau-api-document.readthedocs.io/ja/latest/index.html","https://corp.zaif.jp/api-docs","https://corp.zaif.jp/api-docs/api_links","https://www.npmjs.com/package/zaif.jp","https://github.com/you21979/node-zaif"],fees:"https://zaif.jp/fee?lang=en"},fees:{trading:{percentage:!0,taker:this.parseNumber("0.001"),maker:this.parseNumber("0")}},api:{public:{get:{"depth/{pair}":1,"currencies/{pair}":1,"currencies/all":1,"currency_pairs/{pair}":1,"currency_pairs/all":1,"last_price/{pair}":1,"ticker/{pair}":1,"trades/{pair}":1}},private:{post:{active_orders:5,cancel_order:5,deposit_history:5,get_id_info:5,get_info:10,get_info2:5,get_personal_info:5,trade:5,trade_history:50,withdraw:5,withdraw_history:5}},ecapi:{post:{createInvoice:1,getInvoice:1,getInvoiceIdsByOrderNumber:1,cancelInvoice:1}},tlapi:{post:{get_positions:66,position_history:66,active_positions:5,create_position:33,change_position:33,cancel_position:33}},fapi:{get:{"groups/{group_id}":1,"last_price/{group_id}/{pair}":1,"ticker/{group_id}/{pair}":1,"trades/{group_id}/{pair}":1,"depth/{group_id}/{pair}":1}}},options:{fees:{"BTC/JPY":{maker:this.parseNumber("0"),taker:this.parseNumber("0.001")},"BCH/JPY":{maker:this.parseNumber("0"),taker:this.parseNumber("0.003")},"BCH/BTC":{maker:this.parseNumber("0"),taker:this.parseNumber("0.003")},"PEPECASH/JPY":{maker:this.parseNumber("0"),taker:this.parseNumber("0.0001")},"PEPECASH/BT":{maker:this.parseNumber("0"),taker:this.parseNumber("0.0001")}}},precisionMode:n.sh,exceptions:{exact:{"unsupported currency_pair":r.BadRequest},broad:{}}})}async fetchMarkets(e={}){const t=await this.publicGetCurrencyPairsAll(e),i=[];for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency_pair"),a=this.safeString(s,"name"),[n,o]=a.split("/"),d=this.safeCurrencyCode(n),c=this.safeCurrencyCode(o),h=d+"/"+c,u=this.safeValue(this.options.fees,h,this.fees.trading);i.push({id:r,symbol:h,base:d,quote:c,settle:void 0,baseId:n,quoteId:o,settleId:void 0,type:"spot",spot:!0,margin:void 0,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:u.taker,maker:u.maker,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.safeNumber(s,"item_unit_step"),price:this.parseNumber(this.parsePrecision(this.safeString(s,"aux_unit_point")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(s,"item_unit_min"),max:void 0},price:{min:this.safeNumber(s,"aux_unit_min"),max:void 0},cost:{min:void 0,max:void 0}},info:s})}return i}parseBalance(e){const t=this.safeValue(e,"return",{}),i=this.safeValue(t,"deposit"),s={info:e,timestamp:void 0,datetime:void 0},r=this.safeValue(t,"funds",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],n=this.safeCurrencyCode(t),o=this.safeString(r,t),d=this.account();d.free=o,d.total=o,void 0!==i&&t in i&&(d.total=this.safeString(i,t)),s[n]=d}return this.safeBalance(s)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.privatePostGetInfo(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={pair:s.id},a=await this.publicGetDepthPair(this.extend(r,i));return this.parseOrderBook(a,s.symbol)}parseTicker(e,t=undefined){const i=this.safeSymbol(void 0,t),s=this.milliseconds(),r=this.safeString(e,"vwap"),n=this.safeString(e,"volume"),o=a.O.stringMul(n,r),d=this.safeString(e,"last");return this.safeTicker({symbol:i,timestamp:s,datetime:this.iso8601(s),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"bid"),bidVolume:void 0,ask:this.safeString(e,"ask"),askVolume:void 0,vwap:r,open:void 0,close:d,last:d,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:n,quoteVolume:o,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={pair:i.id},r=await this.publicGetTickerPair(this.extend(s,t));return this.parseTicker(r,i)}parseTrade(e,t=undefined){let i=this.safeString(e,"trade_type");i="bid"===i?"buy":"sell";const s=this.safeTimestamp(e,"date"),r=this.safeString2(e,"id","tid"),a=this.safeString(e,"price"),n=this.safeString(e,"amount"),o=this.safeString(e,"currency_pair"),d=this.safeSymbol(o,t,"_");return this.safeTrade({id:r,info:e,timestamp:s,datetime:this.iso8601(s),symbol:d,type:void 0,side:i,order:void 0,takerOrMaker:void 0,price:a,amount:n,cost:void 0,fee:void 0},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={pair:r.id};let n=await this.publicGetTradesPair(this.extend(a,s));if(1===n.length){const e=n[0];Object.keys(e).length||(n=[])}return this.parseTrades(n,r,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){if(await this.loadMarkets(),"limit"!==t)throw new r.ExchangeError(this.id+" createOrder() allows limit orders only");const o=this.market(e),d={currency_pair:o.id,action:"buy"===i?"bid":"ask",amount:s,price:a},c=await this.privatePostTrade(this.extend(d,n));return this.safeOrder({info:c,id:c.return.order_id.toString()},o)}async cancelOrder(e,t=undefined,i={}){const s={order_id:e};return await this.privatePostCancelOrder(this.extend(s,i))}parseOrder(e,t=undefined){let i=this.safeString(e,"action");i="bid"===i?"buy":"sell";const s=this.safeTimestamp(e,"timestamp"),r=this.safeString(e,"currency_pair"),a=this.safeSymbol(r,t,"_"),n=this.safeString(e,"price"),o=this.safeString(e,"amount"),d=this.safeString(e,"id");return this.safeOrder({id:d,clientOrderId:void 0,timestamp:s,datetime:this.iso8601(s),lastTradeTimestamp:void 0,status:"open",symbol:a,type:"limit",timeInForce:void 0,postOnly:void 0,side:i,price:n,stopPrice:void 0,triggerPrice:void 0,cost:void 0,amount:o,filled:void 0,remaining:void 0,trades:void 0,fee:void 0,info:e,average:void 0},t)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.currency_pair=r.id);const n=await this.privatePostActiveOrders(this.extend(a,s));return this.parseOrders(n.return,r,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=undefined,s={}){let r;await this.loadMarkets();const a={};void 0!==e&&(r=this.market(e),a.currency_pair=r.id);const n=await this.privatePostTradeHistory(this.extend(a,s));return this.parseOrders(n.return,r,t,i)}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e);if("JPY"===e)throw new r.ExchangeError(this.id+" withdraw() does not allow "+e+" withdrawals");const o={currency:n.id,amount:t,address:i};void 0!==s&&(o.message=s);const d=await this.privatePostWithdraw(this.extend(o,a)),c=this.safeValue(d,"return");return this.parseTransaction(c,n)}parseTransaction(e,t=undefined){let i;t=this.safeCurrency(void 0,t);const s=this.safeValue(e,"fee");return void 0!==s&&(i={cost:s,currency:t.code}),{id:this.safeString(e,"id"),txid:this.safeString(e,"txid"),timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:i,info:e}}customNonce(){const e=(this.milliseconds()/1e3).toString();return parseFloat(e).toFixed(8)}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.urls.api.rest+"/";if("public"===t)n+="api/"+this.version+"/"+this.implodeParams(e,s);else if("fapi"===t)n+="fapi/"+this.version+"/"+this.implodeParams(e,s);else{this.checkRequiredCredentials(),n+="ecapi"===t?"ecapi":"tlapi"===t?"tlapi":"tapi";const i=this.customNonce();a=this.urlencode(this.extend({method:e,nonce:i},s)),r={"Content-Type":"application/x-www-form-urlencoded",Key:this.apiKey,Sign:this.hmac(this.encode(a),this.encode(this.secret),o.o)}}return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0===o)return;const h=this.id+" "+n,u=this.safeString(o,"error");if(void 0!==u)throw this.throwExactlyMatchedException(this.exceptions.exact,u,h),this.throwBroadlyMatchedException(this.exceptions.broad,u,h),new r.ExchangeError(h);if(!this.safeValue(o,"success",!0))throw new r.ExchangeError(h)}}},5143:(e,t,i)=>{i.d(t,{Z:()=>h});var s=i(307),r=i(6689),a=i(2194),n=i(9292),o=i(1372),d=i(3307),c=i(7311);class h extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"zb",name:"ZB",countries:["CN"],rateLimit:6,version:"v1",pro:!0,has:{CORS:void 0,spot:!0,margin:!0,swap:!0,future:void 0,option:void 0,addMargin:!0,borrowMargin:!0,cancelAllOrders:!0,cancelOrder:!0,createMarketOrder:!1,createOrder:!0,createReduceOnlyOrder:!1,createStopLimitOrder:!0,createStopMarketOrder:!0,createStopOrder:!0,fetchBalance:!0,fetchBorrowRate:!0,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!0,fetchCanceledOrders:!0,fetchClosedOrders:!0,fetchCurrencies:!0,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDeposits:!0,fetchFundingHistory:!1,fetchFundingRate:!0,fetchFundingRateHistory:!0,fetchFundingRates:!0,fetchIndexOHLCV:!0,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarketLeverageTiers:!1,fetchMarkets:!0,fetchMarkOHLCV:!0,fetchOHLCV:!0,fetchOpenOrders:!0,fetchOrder:!0,fetchOrderBook:!0,fetchOrders:!0,fetchPosition:!0,fetchPositions:!0,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchWithdrawals:!0,reduceMargin:!0,setLeverage:!0,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"1m","3m":"3m","5m":"5m","15m":"15m","30m":"30m","1h":"1h","2h":"2h","4h":"4h","6h":"6h","12h":"12h","1d":"1d","3d":"3d","5d":"5d","1w":"1w"},hostname:"zb.com",urls:{logo:"https://user-images.githubusercontent.com/1294454/32859187-cd5214f0-ca5e-11e7-967d-96568e2e2bd1.jpg",api:{spot:{v1:{public:"https://api.{hostname}/data",private:"https://trade.{hostname}/api"}},contract:{v1:{public:"https://fapi.{hostname}/api/public"},v2:{public:"https://fapi.{hostname}/Server/api",private:"https://fapi.{hostname}/Server/api"}}},www:"https://www.zb.com",doc:"https://www.zb.com/i/developer",fees:"https://www.zb.com/i/rate",referral:{url:"https://www.zb.com/en/register?ref=4301lera",discount:.16}},api:{spot:{v1:{public:{get:{markets:16.667,ticker:16.667,allTicker:16.667,depth:16.667,trades:16.667,kline:166.667,getGroupMarkets:16.667,getFeeInfo:16.667}},private:{get:{order:1,orderMoreV2:1,cancelOrder:1,cancelAllOrdersAfter:1,getOrder:1,getOrders:1,getOrdersNew:16.667,getOrdersIgnoreTradeType:1,getUnfinishedOrdersIgnoreTradeType:1,getFinishedAndPartialOrders:1,getAccountInfo:16.667,getUserAddress:16.667,getPayinAddress:16.667,getWithdrawAddress:16.667,getWithdrawRecord:16.667,getChargeRecord:16.667,getCnyWithdrawRecord:16.667,getCnyChargeRecord:16.667,withdraw:16.667,addSubUser:16.667,getSubUserList:16.667,doTransferFunds:16.667,createSubUserKey:16.667,getLeverAssetsInfo:16.667,getLeverBills:16.667,transferInLever:16.667,transferOutLever:16.667,loan:16.667,cancelLoan:16.667,getLoans:16.667,getLoanRecords:16.667,borrow:16.667,autoBorrow:16.667,repay:16.667,doAllRepay:16.667,getRepayments:16.667,getFinanceRecords:16.667,changeInvestMark:16.667,changeLoop:16.667,getCrossAssets:16.667,getCrossBills:16.667,transferInCross:16.667,transferOutCross:16.667,doCrossLoan:16.667,doCrossRepay:16.667,getCrossRepayRecords:16.667}}}},contract:{v1:{public:{get:{depth:16.667,fundingRate:16.667,indexKline:16.667,indexPrice:16.667,kline:16.667,markKline:16.667,markPrice:16.667,ticker:16.667,trade:16.667}}},v2:{public:{get:{allForceOrders:3.334,"config/marketList":3.334,topLongShortAccountRatio:3.334,topLongShortPositionRatio:3.334,fundingRate:3.334,premiumIndex:3.334}},private:{get:{"Fund/balance":3.334,"Fund/getAccount":3.334,"Fund/getBill":3.334,"Fund/getBillTypeList":3.334,"Fund/marginHistory":3.334,"Positions/getPositions":3.334,"Positions/getNominalValue":3.334,"Positions/marginInfo":3.334,"setting/get":3.334,"trade/getAllOrders":3.334,"trade/getOrder":3.334,"trade/getOrderAlgos":3.334,"trade/getTradeList":3.334,"trade/getUndoneOrders":3.334,"trade/tradeHistory":3.334},post:{"activity/buyTicket":3.334,"Fund/transferFund":3.334,"Positions/setMarginCoins":3.334,"Positions/updateAppendUSDValue":3.334,"Positions/updateMargin":3.334,"setting/setLeverage":3.334,"setting/setPositionsMode":3.334,"trade/batchOrder":3.334,"trade/batchCancelOrder":3.334,"trade/cancelAlgos":3.334,"trade/cancelAllOrders":3.334,"trade/cancelOrder":3.334,"trade/order":3.334,"trade/orderAlgo":3.334,"trade/updateOrderAlgo":3.334}}}}},fees:{funding:{withdraw:{}},trading:{maker:this.parseNumber("0.002"),taker:this.parseNumber("0.002")}},commonCurrencies:{ANG:"Anagram",ENT:"ENTCash",BCHABC:"BCHABC",BCHSV:"BCHSV"},options:{timeframes:{spot:{"1m":"1min","3m":"3min","5m":"5min","15m":"15min","30m":"30min","1h":"1hour","2h":"2hour","4h":"4hour","6h":"6hour","12h":"12hour","1d":"1day","3d":"3day","1w":"1week"},swap:{"1m":"1M","5m":"5M","15m":"15M","30m":"30M","1h":"1H","6h":"6H","1d":"1D","5d":"5D"}}},precisionMode:n.sh,exceptions:{ws:{1001:r.ExchangeError,1002:r.ExchangeError,1003:r.AuthenticationError,1004:r.AuthenticationError,1005:r.AuthenticationError,1006:r.PermissionDenied,1007:r.ExchangeError,1009:r.OnMaintenance,1010:r.ExchangeNotAvailable,1012:r.PermissionDenied,1013:r.ExchangeError,1014:r.ExchangeError,2001:r.InsufficientFunds,2002:r.InsufficientFunds,2003:r.InsufficientFunds,2005:r.InsufficientFunds,2006:r.InsufficientFunds,2007:r.InsufficientFunds,2008:r.InsufficientFunds,2009:r.InsufficientFunds,3001:r.OrderNotFound,3002:r.InvalidOrder,3003:r.InvalidOrder,3004:r.AuthenticationError,3005:r.BadRequest,3006:r.PermissionDenied,3007:r.RequestTimeout,3008:r.ExchangeError,3009:r.InvalidOrder,3010:r.PermissionDenied,3011:r.InvalidOrder,3012:r.InvalidOrder,4001:r.AccountSuspended,4002:r.RateLimitExceeded},exact:{10001:r.ExchangeError,10002:r.PermissionDenied,10003:r.BadResponse,10004:r.BadResponse,10005:r.PermissionDenied,10006:r.BadRequest,10007:r.ExchangeError,10008:r.ExchangeError,10009:r.ExchangeError,1001:r.ExchangeError,10010:r.AuthenticationError,10011:r.AuthenticationError,10012:r.AccountSuspended,10013:r.AuthenticationError,10014:r.AuthenticationError,10015:r.AuthenticationError,10016:r.AuthenticationError,10017:r.PermissionDenied,10018:r.AccountSuspended,10019:r.RequestTimeout,1002:r.ExchangeError,10020:r.BadRequest,10021:r.BadRequest,10022:r.BadRequest,10023:r.RateLimitExceeded,10024:r.AuthenticationError,10025:r.ExchangeError,10026:r.NetworkError,10027:r.RequestTimeout,10028:r.ExchangeNotAvailable,10029:r.DDoSProtection,1003:r.AuthenticationError,10030:r.BadRequest,10031:r.BadRequest,10032:r.BadRequest,10033:r.BadRequest,10034:r.BadRequest,10035:r.BadRequest,10036:r.BadRequest,10037:r.ArgumentsRequired,10038:r.BadRequest,10039:r.BadResponse,1004:r.AuthenticationError,10040:r.BadResponse,10041:r.BadResponse,10042:r.ExchangeError,10043:r.ExchangeError,10044:r.ExchangeError,10045:r.ExchangeError,10046:r.ExchangeError,10047:r.ExchangeError,10048:r.ExchangeError,10049:r.NetworkError,1005:r.AuthenticationError,1006:r.AuthenticationError,1009:r.ExchangeNotAvailable,1010:r.ExchangeNotAvailable,10100:r.OnMaintenance,1012:r.PermissionDenied,1013:r.ExchangeError,1014:r.ExchangeError,11e3:r.ExchangeError,11001:r.ExchangeError,110011:r.ExchangeError,11002:r.ExchangeError,11003:r.ExchangeError,11004:r.InsufficientFunds,11005:r.InvalidOrder,11006:r.InsufficientFunds,11007:r.OrderNotFound,11008:r.ExchangeError,11009:r.ExchangeError,110110:r.ExchangeError,11012:r.InsufficientFunds,11013:r.ExchangeError,11014:r.ExchangeError,11015:r.AuthenticationError,11016:r.AuthenticationError,11017:r.ExchangeError,11018:r.InsufficientFunds,11019:r.ExchangeError,11021:r.InsufficientFunds,11023:r.ExchangeError,11030:r.PermissionDenied,11031:r.ExchangeError,11032:r.ExchangeError,11033:r.ArgumentsRequired,11034:r.ExchangeError,12e3:r.InvalidOrder,12001:r.InvalidOrder,12002:r.InvalidOrder,12003:r.InvalidOrder,12004:r.InvalidOrder,12005:r.InvalidOrder,12006:r.InvalidOrder,12007:r.InvalidOrder,12008:r.InvalidOrder,12009:r.InvalidOrder,12010:r.InvalidOrder,12011:r.InvalidOrder,12012:r.OrderNotFound,12013:r.InvalidOrder,12014:r.InvalidOrder,12015:r.InvalidOrder,12016:r.InvalidOrder,12017:r.InvalidOrder,12018:r.InvalidOrder,12019:r.ArgumentsRequired,12020:r.ExchangeError,12021:r.InvalidOrder,12022:r.InvalidOrder,12023:r.OrderNotFound,12024:r.InvalidOrder,12025:r.InvalidOrder,12026:r.DuplicateOrderId,12027:r.ExchangeNotAvailable,12028:r.InvalidOrder,12029:r.InvalidOrder,12201:r.InvalidOrder,12202:r.InvalidOrder,12203:r.InvalidOrder,12204:r.InvalidOrder,12205:r.InvalidOrder,12206:r.InvalidOrder,12207:r.RateLimitExceeded,13001:r.AuthenticationError,13002:r.PermissionDenied,13003:r.InvalidOrder,13004:r.InvalidOrder,13005:r.RateLimitExceeded,13006:r.ExchangeError,13007:r.ExchangeError,13008:r.ExchangeError,13009:r.ExchangeError,14e3:r.ExchangeError,14001:r.AuthenticationError,14002:r.AuthenticationError,14003:r.ExchangeError,14100:r.ExchangeError,14101:r.RateLimitExceeded,14200:r.ArgumentsRequired,14300:r.ExchangeError,14301:r.ExchangeError,14302:r.ExchangeError,14303:r.ExchangeError,14305:r.ExchangeError,14306:r.ExchangeError,14307:r.InvalidOrder,14308:r.InvalidOrder,14309:r.ExchangeError,14310:r.NotSupported,14311:r.NotSupported,14312:r.ExchangeError,14313:r.PermissionDenied,14314:r.ExchangeError,2001:r.InsufficientFunds,2002:r.InsufficientFunds,2003:r.InsufficientFunds,2005:r.InsufficientFunds,2006:r.InsufficientFunds,2007:r.InsufficientFunds,2008:r.InsufficientFunds,2009:r.InsufficientFunds,3001:r.OrderNotFound,3002:r.InvalidOrder,3003:r.InvalidOrder,3004:r.AuthenticationError,3005:r.BadRequest,3006:r.AuthenticationError,3007:r.AuthenticationError,3008:r.OrderNotFound,3009:r.InvalidOrder,3010:r.PermissionDenied,3011:r.InvalidOrder,3012:r.InvalidOrder,4001:r.ExchangeNotAvailable,4002:r.RateLimitExceeded,9999:r.ExchangeError},broad:{"提币地址有误, 请先添加提币地址。":r.InvalidAddress,"资金不足,无法划账":r.InsufficientFunds,响应超时:r.RequestTimeout}}})}async fetchMarkets(e={}){let t=[this.spotV1PublicGetMarkets(e),this.contractV2PublicGetConfigMarketList(e)];t=await Promise.all(t);const i=t[0],s=t[1],r=this.safeValue(s,"data",[]),a=this.indexBy(r,"marketName"),n=this.deepExtend(a,i),o=Object.keys(n),d=[];for(let e=0;e<o.length;e++){const t=o[e],i=n[t],[s,r]=t.split("_"),a=this.safeCurrencyCode(s),c=this.safeCurrencyCode(r),h=this.safeValue(i,"marginCurrencyName"),u=this.safeCurrencyCode(h),l=void 0===u,p=this.safeValue(i,"futures",!1),f=!!p||void 0;let m=!0,v=a+"/"+c;p&&(m="1"===this.safeString(i,"status"),v=a+"/"+c+":"+u),d.push({id:t,symbol:v,base:a,quote:c,settle:u,baseId:s,quoteId:r,settleId:h,type:p?"swap":"spot",spot:l,margin:!1,swap:p,future:!1,option:!1,active:m,contract:p,linear:f,inverse:p?!f:void 0,contractSize:void 0,expiry:void 0,expiryDatetime:void 0,strike:void 0,optionType:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString2(i,"amountScale","amountDecimal"))),price:this.parseNumber(this.parsePrecision(this.safeString2(i,"priceScale","priceDecimal")))},limits:{leverage:{min:void 0,max:this.safeNumber(i,"maxLeverage")},amount:{min:this.safeNumber(i,"minAmount"),max:this.safeNumber(i,"maxAmount")},price:{min:void 0,max:void 0},cost:{min:this.safeNumber2(i,"minSize","minTradeMoney"),max:this.safeNumber(i,"maxTradeMoney")}},info:i})}return d}async fetchCurrencies(e={}){const t=await this.spotV1PublicGetGetFeeInfo(e),i=this.safeValue(t,"result",{}),s=Object.keys(i),r={};for(let e=0;e<s.length;e++){const t=s[e],a=i[t],n=this.safeCurrencyCode(t);let o=!0,d=!0;const c={};for(let e=0;e<a.length;e++){const t=a[e],i=this.safeString(t,"chainName"),s=this.safeNumber(t,"fee"),r=this.safeValue(t,"canDeposit"),n=this.safeValue(t,"canWithdraw");d=d||r,o=o||n,c[i]=s}const h=o&&d;r[n]={id:t,name:void 0,code:n,precision:void 0,info:a,active:h,deposit:d,withdraw:o,fee:void 0,fees:c,limits:this.limits}}return r}parseBalance(e){const t=this.safeValue(e.result,"coins"),i={info:e};for(let e=0;e<t.length;e++){const s=t[e],r=this.account(),a=this.safeString(s,"key"),n=this.safeCurrencyCode(a);r.free=this.safeString(s,"available"),r.used=this.safeString(s,"freez"),i[n]=r}return this.safeBalance(i)}parseSwapBalance(e){const t={info:e},i=this.safeValue(e,"data",{});for(let e=0;e<i.length;e++){const s=i[e],r=this.safeCurrencyCode(this.safeString(s,"currencyName")),a=this.account();a.total=this.safeString(s,"accountBalance"),a.free=this.safeString(s,"allowTransferOutAmount"),a.used=this.safeString(s,"freezeAmount"),t[r]=a}return this.safeBalance(t)}parseMarginBalance(e,t){const i={info:e};let s;if("isolated"===t){const t=this.safeValue(e,"message",{}),i=this.safeValue(t,"datas",{});s=this.safeValue(i,"levers",[])}else{const t=this.safeValue(e,"result",{});s=this.safeValue(t,"list",[])}for(let e=0;e<s.length;e++){const r=s[e],a=this.account();if("isolated"===t){const e=this.safeCurrencyCode(this.safeString(r,"fShowName"));a.total=this.safeString(r,"fAvailableUSD"),a.free=this.safeString(r,"couldTransferOutFiat"),a.used=this.safeString(r,"fFreeze"),i[e]=a}else{const e=this.safeCurrencyCode(this.safeString(r,"key"));a.total=this.safeString(r,"amount"),a.free=this.safeString(r,"canTransferOut"),a.used=this.safeString(r,"freeze"),i[e]=a}}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const[t,i]=this.handleMarketTypeAndParams("fetchBalance",void 0,e),[s,r]=this.handleMarginModeAndParams("fetchBalance",i),a="swap"===t,n="cross"===s?"spotV1PrivateGetGetCrossAssets":"spotV1PrivateGetGetLeverAssetsInfo";let o=this.getSupportedMapping(t,{spot:"spotV1PrivateGetGetAccountInfo",swap:"contractV2PrivateGetFundBalance",margin:n});"isolated"===s?o="spotV1PrivateGetGetLeverAssetsInfo":"cross"===s&&(o="spotV1PrivateGetGetCrossAssets");const d={};a&&(d.futuresAccountType=1);const c=await this[o](this.extend(d,r));return a?this.parseSwapBalance(c):void 0!==s?this.parseMarginBalance(c,s):this.parseBalance(c)}parseDepositAddress(e,t=undefined){let i,s=this.safeString2(e,"key","address");const r=this.safeString(e,"memo");if(void 0!==r)i=r;else if(s.indexOf("_")>=0){const e=s.split("_");s=e[0],i=e[1]}this.checkAddress(s);const a=this.safeString(e,"blockChain");return{currency:this.safeCurrencyCode(a,t),address:s,tag:i,network:void 0,info:e}}async fetchDepositAddresses(e=undefined,t={}){await this.loadMarkets();const i=await this.spotV1PrivateGetGetPayinAddress(t),s=this.safeValue(i,"message",{}),r=this.safeValue(s,"datas",[]);return this.parseDepositAddresses(r,e)}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.spotV1PrivateGetGetUserAddress(this.extend(s,t)),a=this.safeValue(r,"message",{}),n=this.safeValue(a,"datas",{});return this.parseDepositAddress(n,i)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={};r[s.swap?"symbol":"market"]=s.id;const a=this.getSupportedMapping(s.type,{spot:"spotV1PublicGetDepth",swap:"contractV1PublicGetDepth"});void 0!==t&&(r.size=t);const n=await this[a](this.extend(r,i));let o,d;return"swap"===s.type?(o=this.safeValue(n,"data"),d=this.safeInteger(o,"time")):(o=n,d=this.safeTimestamp(n,"timestamp")),this.parseOrderBook(o,e,d)}async fetchTickers(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.spotV1PublicGetAllTicker(t),s={},r={},a=this.ids;for(let e=0;e<a.length;e++){const t=a[e];r[t.replace("_","")]=t}const n=Object.keys(i);for(let e=0;e<n.length;e++){const t=this.safeValue(r,n[e]),a=this.safeMarket(t,void 0,"_");if(void 0!==a){const t=a.symbol,r=this.safeValue(i,n[e]);void 0!==r&&(s[t]=this.parseTicker(r,a))}}return this.filterByArray(s,"symbol",e)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={};s[i.swap?"symbol":"market"]=i.id;const r=this.getSupportedMapping(i.type,{spot:"spotV1PublicGetTicker",swap:"contractV1PublicGetTicker"}),a=await this[r](this.extend(s,t));let n;if("swap"===i.type){n={};const e=this.safeValue(a,"data"),t=this.safeValue(e,i.id,[]);for(let e=0;e<t.length;e++)n.open=this.safeValue(t,0),n.high=this.safeValue(t,1),n.low=this.safeValue(t,2),n.last=this.safeValue(t,3),n.vol=this.safeValue(t,4),n.riseRate=this.safeValue(t,5)}else n=this.safeValue(a,"ticker",{}),n.date=this.safeValue(a,"date");return this.parseTicker(n,i)}parseTicker(e,t=undefined){const i=this.safeInteger(e,"date",this.milliseconds()),s=this.safeString(e,"last");return this.safeTicker({symbol:this.safeSymbol(void 0,t),timestamp:i,datetime:this.iso8601(i),high:this.safeString(e,"high"),low:this.safeString(e,"low"),bid:this.safeString(e,"buy"),bidVolume:void 0,ask:this.safeString(e,"sell"),askVolume:void 0,vwap:void 0,open:this.safeString(e,"open"),close:s,last:s,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:this.safeString(e,"vol"),quoteVolume:void 0,info:e},t)}parseOHLCV(e,t=undefined){return t.swap?e.length>5?[this.safeTimestamp(e,5),this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4)]:[this.safeTimestamp(e,4),this.safeNumber(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),void 0]:[this.safeInteger(e,0),this.safeNumber(e,1),this.safeNumber(e,2),this.safeNumber(e,3),this.safeNumber(e,4),this.safeNumber(e,5)]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,a={}){await this.loadMarkets();const n=this.market(e),o=n.swap,d=n.spot,c=this.safeValue(this.options,"timeframes",{}),h=this.safeValue(c,n.type,{}),u=this.safeString(h,t);if(void 0===u)throw new r.NotSupported(this.id+" fetchOHLCV() does not support "+t+" timeframe for "+n.type+" markets");void 0===s&&(s=1e3);const l={size:s};l[o?"symbol":"market"]=n.id,l[o?"period":"type"]=u;const p=this.safeString(a,"price");a=this.omit(a,"price");let f=this.getSupportedMapping(n.type,{spot:"spotV1PublicGetKline",swap:"contractV1PublicGetKline"});o?"mark"===p?f="contractV1PublicGetMarkKline":"index"===p&&(f="contractV1PublicGetIndexKline"):d&&void 0!==i&&(l.since=i);const m=await this[f](this.extend(l,a)),v=this.safeValue(m,"data",[]);return this.parseOHLCVs(v,n,t,i,s)}parseTrade(e,t=undefined){const i=t.swap?"side":"trade_type";let s,r=this.safeString(e,i);const a=this.safeValue(e,"maker");let n;void 0!==a&&(s=a?"maker":"taker"),t.spot?r="bid"===r?"buy":"sell":"3"===r?r="sell":"4"===r||"1"===r?r="buy":"2"===r&&(r="sell"),n=t.swap?this.safeInteger(e,"createTime"):this.safeTimestamp(e,"date");const o=this.safeString(e,"price"),d=this.safeString(e,"amount");let c;const h=this.safeString(e,"feeAmount");if(void 0!==h){const t=this.safeString(e,"feeCurrency");c={cost:h,currency:this.safeCurrencyCode(t)}}return t=this.safeMarket(void 0,t),this.safeTrade({info:e,id:this.safeString(e,"tid"),timestamp:n,datetime:this.iso8601(n),symbol:t.symbol,type:void 0,side:r,order:this.safeString(e,"orderId"),takerOrMaker:s,price:o,amount:d,cost:void 0,fee:c},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchTrades() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n=a.swap,o={};void 0!==i&&(o.pageSize=i),void 0!==t&&(o.startTime=t),o[n?"symbol":"market"]=a.id,n&&void 0===s.pageNum&&(o.pageNum=1);const d=this.getSupportedMapping(a.type,{spot:"spotV1PublicGetTrades",swap:"contractV2PrivateGetTradeTradeHistory"});let c=await this[d](this.extend(o,s));if(n){const e=this.safeValue(c,"data");c=this.safeValue(e,"list")}return this.parseTrades(c,a,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),[d,c]=this.handleMarginModeAndParams("createOrder",n),h=o.swap,u=o.spot,l=this.safeString(n,"timeInForce");let p=this.safeValue(n,"reduceOnly");const f=this.safeValue2(n,"triggerPrice","stopPrice"),m=this.safeValue(n,"stopLossPrice"),v=this.safeValue(n,"takeProfitPrice"),g=void 0!==m,y=void 0!==v,b=void 0!==f;if(this.sum(g,y,b))throw new r.ExchangeError(this.id+" createOrder() stopLossPrice and takeProfitPrice cannot both be defined");const w=g||y||b;if(w&&u)throw new r.ExchangeError(this.id+" createOrder() it is not possible to make a stop order on spot markets");if("market"===t)throw new r.InvalidOrder(this.id+" createOrder() on "+o.type+" markets does not allow market orders");let S=this.getSupportedMapping(o.type,{spot:"spotV1PrivateGetOrder",margin:"spotV1PrivateGetOrder",swap:"contractV2PrivatePostTradeOrder"});const P={amount:this.amountToPrecision(e,s)};if(u){const s=1===this.safeInteger(n,"orderType",t),r=this.isPostOnly(!1,s,n);P.tradeType="buy"===i?1:0,P.currency=o.id,r?P.orderType=1:"IOC"===l&&(P.orderType=2),void 0!==a&&(P.price=this.priceToPrecision(e,a)),void 0!==d&&("isolated"===d?P.acctType=1:"cross"===d&&(P.acctType=2))}else if(h){const s=4===this.safeInteger(n,"action",t),r=this.isPostOnly(!1,s,n);(g||y)&&(p=!0),P.side=p?0:"buy"===i?5:6,w?(S="contractV2PrivatePostTradeOrderAlgo",g?(P.orderType=2,P.bizType=2,P.triggerPrice=this.priceToPrecision(e,m)):y?(P.orderType=2,P.bizType=1,P.triggerPrice=this.priceToPrecision(e,v)):b&&(P.orderType=1,P.triggerPrice=this.priceToPrecision(e,f)),P.algoPrice=this.priceToPrecision(e,a),P.pricetype=2):P.action="IOC"===l?3:r?4:"FOK"===l?5:"limit"===t?1:t,void 0!==a&&(P.price=this.priceToPrecision(e,a)),P.symbol=o.id;const d=this.safeString(n,"clientOrderId");void 0!==d&&(P.clientOrderId=d);const c=this.safeValue(n,"extend",void 0);void 0!==c&&(P.extend=c)}n=this.omit(c,["takeProfitPrice","stopLossPrice","stopPrice","reduceOnly","orderType","triggerPrice","priceType","clientOrderId","extend"]);const k=await this[S](this.extend(P,n));let O=k;return h&&!w&&(O=this.safeValue(k,"data")),this.parseOrder(O,o)}async cancelOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" cancelOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t),a=s.swap,n={};n[a?"symbol":"currency"]=this.marketId(t),n[a?"orderId":"id"]=e.toString();const o=this.getSupportedMapping(s.type,{spot:"spotV1PrivateGetCancelOrder",swap:"contractV2PrivatePostTradeCancelOrder"}),d=await this[o](this.extend(n,i));return this.parseOrder(d,s)}async cancelAllOrders(e=undefined,t={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" cancelAllOrders() requires a symbol argument");await this.loadMarkets();const i=this.market(e),s=this.safeValue(t,"stop");if(i.spot)throw new r.NotSupported(this.id+" cancelAllOrders() is not supported on "+i.type+" markets");const a={symbol:i.id};let n="contractV2PrivatePostTradeCancelAllOrders";s&&(n="contractV2PrivatePostTradeCancelAlgos");const o=this.omit(t,"stop");return await this[n](this.extend(a,o))}async fetchOrder(e,t=undefined,i={}){if(void 0===t)throw new r.ArgumentsRequired(this.id+" fetchOrder() requires a symbol argument");await this.loadMarkets();const s=this.market(t);if(void 0!==this.safeInteger(i,"orderType"))throw new r.ExchangeError(this.id+" fetchOrder() it is not possible to fetch a single conditional order, use fetchOrders() instead");const a=s.swap,n={};n[a?"symbol":"currency"]=this.marketId(t),n[a?"orderId":"id"]=e.toString();const o=this.getSupportedMapping(s.type,{spot:"spotV1PrivateGetGetOrder",swap:"contractV2PrivateGetTradeGetOrder"}),d=await this[o](this.extend(n,i));let c=d;return a&&(c=this.safeValue(d,"data")),this.parseOrder(c,s)}async fetchOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n=this.safeInteger(s,"orderType"),o=a.swap,d={pageSize:i};d[a.swap?"symbol":"currency"]=a.id,d[a.swap?"pageNum":"pageIndex"]=1,o&&(d.startTime=t);let c=this.getSupportedMapping(a.type,{spot:"spotV1PrivateGetGetOrdersIgnoreTradeType",swap:"contractV2PrivateGetTradeGetAllOrders"});"tradeType"in s&&(c="spotV1PrivateGetGetOrdersNew"),void 0!==n&&(c="contractV2PrivateGetTradeGetOrderAlgos");const h=await this[c](this.extend(d,s));let u=h;if(o){const e=this.safeValue(h,"data",{});u=this.safeValue(e,"list",[])}return this.parseOrders(u,a,t,i)}async fetchCanceledOrders(e=undefined,t=undefined,i=10,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchCanceledOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n=this.safeValue(s,"reduceOnly"),o=this.safeValue(s,"stop"),d={pageSize:i};d[a.spot?"currency":"symbol"]=a.id,d[a.spot?"pageIndex":"pageNum"]=1;let c,h="spotV1PrivateGetGetOrdersIgnoreTradeType";if(o){h="contractV2PrivateGetTradeGetOrderAlgos";const e=this.safeInteger(s,"orderType");if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchCanceledOrders() requires an orderType parameter for stop orders");const t=this.safeValue(s,"side"),i=this.safeInteger(s,"bizType");"sell"===t&&n?d.side=3:"buy"===t&&n?d.side=4:"buy"===t?d.side=1:"sell"===t?d.side=2:5===t?d.side=5:6===t?d.side=6:0===t&&(d.side=0),1===e?d.orderType=1:(2===e||i)&&(d.orderType=2,d.bizType=i),d.status=2}"tradeType"in s&&(h="spotV1PrivateGetGetOrdersNew");try{c=await this[h](this.extend(d,s))}catch(e){if(e instanceof r.OrderNotFound)return[];throw e}const u=this.omit(s,["reduceOnly","stop","side","orderType","bizType"]);if(c=await this[h](this.extend(d,u)),o){const e=this.safeValue(c,"data",{});c=this.safeValue(e,"list",[])}const l=[];if("spot"===a.type){for(let e=0;e<c.length;e++){const t=c[e];"1"===this.safeString(t,"status")&&l.push(t)}c=l}return this.parseOrders(c,a,t,i)}async fetchClosedOrders(e=undefined,t=undefined,i=10,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchClosedOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n=a.swap,o=this.safeInteger(s,"orderType"),d={pageSize:i};d[a.spot?"currency":"symbol"]=a.id,d[a.spot?"pageIndex":"pageNum"]=1,n&&void 0!==t&&(d.startTime=t);const c=this.getSupportedMapping(a.type,{spot:"spotV1PrivateGetGetFinishedAndPartialOrders",swap:"contractV2PrivateGetTradeGetOrderAlgos"});if(n&&void 0===o)throw new r.ExchangeError(this.id+" fetchClosedOrders() can not fetch swap orders, use fetchOrders instead");n&&(d.status=5);const h=await this[c](this.extend(d,s));let u=h;if(n){const e=this.safeValue(h,"data",{});u=this.safeValue(e,"list",[])}return this.parseOrders(u,a,t,i)}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchOpenOrders() requires a symbol argument");await this.loadMarkets();const a=this.market(e),n=this.safeInteger(s,"orderType"),o=a.swap,d={};void 0!==i&&(d.pageSize=i),d[a.swap?"symbol":"currency"]=a.id,d[a.swap?"pageNum":"pageIndex"]=1,o&&void 0!==t&&(d.startTime=t);let c=this.getSupportedMapping(a.type,{spot:"spotV1PrivateGetGetUnfinishedOrdersIgnoreTradeType",swap:"contractV2PrivateGetTradeGetUndoneOrders"});void 0!==n&&(c="contractV2PrivateGetTradeGetOrderAlgos",d.status=1),"tradeType"in s&&(c="spotV1PrivateGetGetOrdersNew");const h=await this[c](this.extend(d,s));let u=h;if(o){const e=this.safeValue(h,"data",{});u=this.safeValue(e,"list",[])}return this.parseOrders(u,a,t,i)}parseOrder(e,t=undefined){let i=t.swap?this.safeString2(e,"orderId","data"):this.safeString(e,"id");void 0===i&&(i=this.safeValue(e,"id"));const s=this.safeInteger2(e,"type","side");let r;void 0!==s&&(t.spot?r=1===s?"buy":"sell":t.swap&&(0===s?r=void 0:1===s||4===s||5===s?r="buy":2!==s&&3!==s&&6!==s||(r="sell")));let a=this.safeInteger(e,"trade_date");void 0===a&&(a=this.safeInteger(e,"createTime"));const n=this.safeString(e,"currency");t=this.safeMarket(n,t,"_");const o=this.safeString2(e,"price","algoPrice"),d=t.swap?this.safeString(e,"tradeAmount"):this.safeString(e,"trade_amount");let c=this.safeString(e,"total_amount");void 0===c&&(c=this.safeString(e,"amount"));const h=this.safeString(e,"trade_money"),u=this.parseOrderStatus(this.safeString(e,"status"),t),l=this.safeString(e,"timeInForce"),p="PO"===l,f=this.safeNumber(e,"fees");let m;if(void 0!==f){let i;i=!0===this.safeValue(e,"useZbFee")?"ZB":"sell"===r?t.quote:t.base,m={cost:f,currency:i}}return this.safeOrder({info:e,id:i,clientOrderId:this.safeString(e,"userId"),timestamp:a,datetime:this.iso8601(a),lastTradeTimestamp:void 0,symbol:t.symbol,type:"limit",timeInForce:l,postOnly:p,side:r,price:o,stopPrice:this.safeNumber(e,"triggerPrice"),triggerPrice:this.safeNumber(e,"triggerPrice"),average:this.safeString(e,"avgPrice"),cost:h,amount:c,filled:d,remaining:void 0,status:u,fee:m,trades:void 0},t)}parseOrderStatus(e,t=undefined){let i={};return i="spot"===t.type?{0:"open",1:"canceled",2:"closed",3:"open"}:{1:"open",2:"canceled",3:"open",4:"rejected",5:"closed"},this.safeString(i,e,e)}parseTransactionStatus(e){return this.safeString({0:"pending",1:"failed",2:"ok",3:"canceled",5:"ok"},e,e)}parseTransaction(e,t=undefined){const i=this.safeString(e,"id"),s=this.safeString(e,"hash"),r=this.safeNumber(e,"amount");let a=this.parse8601(this.safeString(e,"submit_time"));a=this.safeInteger(e,"submitTime",a);let n,o=this.safeString2(e,"toAddress","address");if(void 0!==o){const e=o.split("_");o=this.safeString(e,0),n=this.safeString(e,1)}const d=this.safeInteger(e,"confirmTimes"),c=this.safeInteger(e,"manageTime");let h;const u=this.safeString(e,"currency"),l=this.safeCurrencyCode(u,t);void 0!==o&&(h=void 0===d?"withdrawal":"deposit");const p=this.parseTransactionStatus(this.safeString(e,"status"));let f;const m=this.safeNumber(e,"fees");return void 0!==m&&(f={cost:m,currency:l}),{info:e,id:i,txid:s,timestamp:a,datetime:this.iso8601(a),network:void 0,addressFrom:void 0,address:o,addressTo:o,tagFrom:void 0,tag:n,tagTo:n,type:h,amount:r,currency:l,status:p,updated:c,fee:f}}async setLeverage(e,t=undefined,i={}){if(await this.loadMarkets(),void 0===t)throw new r.ArgumentsRequired(this.id+" setLeverage() requires a symbol argument");if(e<1||e>125)throw new r.BadRequest(this.id+" setLeverage() leverage should be between 1 and 125");const s=this.market(t);let a;if(!s.swap)throw new r.BadSymbol(this.id+" setLeverage() supports swap contracts only");a=1;const n={symbol:s.id,leverage:e,futuresAccountType:1};return await this.contractV2PrivatePostSettingSetLeverage(this.extend(n,i))}async fetchFundingRateHistory(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};if(void 0!==e){const t=this.market(e);e=t.symbol,r.symbol=t.id}void 0!==t&&(r.startTime=t);const a=this.safeInteger2(s,"until","till");s=this.omit(s,["endTime","till","until"]),void 0!==a&&(r.endTime=a),void 0!==i&&(r.limit=i);const n=await this.contractV2PublicGetFundingRate(this.extend(r,s)),o=this.safeValue(n,"data",[]),d=[];for(let e=0;e<o.length;e++){const t=o[e],i=this.safeString(t,"symbol"),s=this.safeSymbol(i),r=this.safeInteger(t,"fundingTime");d.push({info:t,symbol:s,fundingRate:this.safeNumber(t,"fundingRate"),timestamp:r,datetime:this.iso8601(r)})}const c=this.sortBy(d,"timestamp");return this.filterBySymbolSinceLimit(c,e,t,i)}async fetchFundingRate(e,t={}){await this.loadMarkets();const i=this.market(e);if(!i.swap)throw new r.BadSymbol(this.id+" fetchFundingRate() does not supports contracts only");const s={symbol:i.id},a=await this.contractV1PublicGetFundingRate(this.extend(s,t)),n=this.safeValue(a,"data");return this.parseFundingRate(n,i)}parseFundingRate(e,t=undefined){const i=this.safeString(e,"symbol"),s=this.safeSymbol(i,t),r=this.safeNumber2(e,"fundingRate","lastFundingRate"),a=this.parse8601(this.safeString(e,"nextCalculateTime")),n=this.safeInteger(e,"nextFundingTime");return{info:e,symbol:s,markPrice:this.safeString(e,"markPrice"),indexPrice:this.safeString(e,"indexPrice"),interestRate:void 0,estimatedSettlePrice:void 0,timestamp:void 0,datetime:void 0,fundingRate:r,fundingTimestamp:n,fundingDatetime:this.iso8601(n),nextFundingRate:void 0,nextFundingTimestamp:a,nextFundingDatetime:this.iso8601(a),previousFundingRate:void 0,previousFundingTimestamp:void 0,previousFundingDatetime:void 0}}async fetchFundingRates(e=undefined,t={}){await this.loadMarkets(),e=this.marketSymbols(e);const i=await this.contractV2PublicGetPremiumIndex(t),s=this.safeValue(i,"data",[]),r=this.parseFundingRates(s);return this.filterByArray(r,"symbol",e)}async withdraw(e,t,i,s=undefined,a={}){[s,a]=this.handleWithdrawTagAndParams(s,a);const n=this.safeString(a,"safePwd",this.password);if(void 0===n)throw new r.ArgumentsRequired(this.id+" withdraw() requires exchange.password or a safePwd parameter");const o=this.safeNumber(a,"fees");if(void 0===o)throw new r.ArgumentsRequired(this.id+" withdraw() requires a fees parameter");this.checkAddress(i),await this.loadMarkets();const d=this.currency(e);void 0!==s&&(i+="_"+s);const c={amount:this.currencyToPrecision(e,t),currency:d.id,fees:this.currencyToPrecision(e,o),method:"withdraw",receiveAddr:i,safePwd:n},h=await this.spotV1PrivateGetWithdraw(this.extend(c,a)),u=this.parseTransaction(h,d);return this.extend(u,{type:"withdrawal",address:i,addressTo:i,amount:t})}async fetchWithdrawals(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.pageSize=i);const n=await this.spotV1PrivateGetGetWithdrawRecord(this.extend(r,s)),o=this.safeValue(n,"message",{}),d=this.safeValue(o,"datas",{}),c=this.safeValue(d,"list",[]);return this.parseTransactions(c,a,t,i)}async fetchDeposits(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};let a;void 0!==e&&(a=this.currency(e),r.currency=a.id),void 0!==i&&(r.pageSize=i);const n=await this.spotV1PrivateGetGetChargeRecord(this.extend(r,s)),o=this.safeValue(n,"message",{}),d=this.safeValue(o,"datas",{}),c=this.safeValue(d,"list",[]);return this.parseTransactions(c,a,t,i)}async fetchPosition(e,t={}){let i;await this.loadMarkets(),void 0!==e&&(i=this.market(e));const s=await this.contractV2PrivateGetPositionsGetPositions(this.extend({futuresAccountType:1},t)),r=this.safeValue(s,"data",[]),a=this.safeValue(r,0);return this.parsePosition(a,i)}async fetchPositions(e=undefined,t={}){await this.loadMarkets();const i=await this.contractV2PrivateGetPositionsGetPositions(this.extend({futuresAccountType:1},t)),s=this.safeValue(i,"data",[]);return this.parsePositions(s,e)}parsePosition(e,t=undefined){const i=this.safeString(e,"marketName"),s=(t=this.safeMarket(i,t)).symbol,r=this.safeString(e,"amount"),n=this.safeNumber(e,"avgPrice"),o=this.safeString(e,"margin"),d="1"===this.safeString(e,"side")?"long":"short",c="1"===this.safeString(e,"marginMode")?"isolated":"cross",h=this.safeString(e,"leverage"),u=this.safeNumber(e,"liquidatePrice"),l=this.safeNumber(e,"unrealizedPnl"),p=this.safeNumber(e,"maintainMargin"),f=this.safeNumber(e,"marginRate"),m=this.safeNumber(e,"nominalValue"),v=a.O.stringMul(this.safeString(e,"returnRate"),"100"),g=this.safeNumber(e,"createTime");return{info:e,id:void 0,symbol:s,contracts:this.parseNumber(r),contractSize:void 0,entryPrice:n,collateral:void 0,side:d,unrealizedProfit:l,leverage:this.parseNumber(h),percentage:v,marginMode:c,notional:m,markPrice:void 0,liquidationPrice:u,initialMargin:this.parseNumber(o),initialMarginPercentage:void 0,maintenanceMargin:p,maintenanceMarginPercentage:void 0,marginRatio:f,timestamp:g,datetime:this.iso8601(g)}}parseLedgerEntryType(e){return this.safeString({1:"realized pnl",2:"commission",3:"funding fee subtract",4:"funding fee addition",5:"insurance clear",6:"transfer in",7:"transfer out",8:"margin addition",9:"margin subtraction",10:"commission addition",11:"bill type freeze",12:"bill type unfreeze",13:"system take over margin",14:"transfer",15:"realized pnl collection",16:"funding fee collection",17:"recommender return commission",18:"by level subtract positions",19:"system add",20:"system subtract",23:"trading competition take over fund",24:"trading contest tickets",25:"return of trading contest tickets",26:"experience expired recall",50:"test register gift",51:"register gift",52:"deposit gift",53:"trading volume gift",54:"awards gift",55:"trading volume gift",56:"awards gift expire",201:"open positions",202:"close positions",203:"take over positions",204:"trading competition take over positions",205:"one way open long",206:"one way open short",207:"one way close long",208:"one way close short",301:"coupon deduction service charge",302:"experience deduction",303:"experience expired"},e,e)}parseLedgerEntry(e,t=undefined){const i=this.safeInteger(e,"createTime");let s,r;s=1===this.safeNumber(e,"isIn")?"increase":"reduce";const a=this.safeNumber(e,"fee");return void 0!==a&&(r={cost:a,currency:this.safeCurrencyCode(this.safeString(e,"unit"))}),{id:this.safeString(e,"id"),info:e,timestamp:i,datetime:this.iso8601(i),direction:s,account:this.safeString(e,"userId"),referenceId:void 0,referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeInteger(e,"type")),currency:this.safeCurrencyCode(this.safeString(e,"unit")),amount:this.safeNumber(e,"changeAmount"),before:this.safeNumber(e,"beforeAmount"),after:this.safeNumber(e,"available"),status:void 0,fee:r}}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){if(void 0===e)throw new r.ArgumentsRequired(this.id+" fetchLedger() requires a code argument");await this.loadMarkets();const a=this.currency(e),n={futuresAccountType:1};void 0!==e&&(n.currencyName=a.id),void 0!==t&&(n.startTime=t),void 0!==i&&(n.pageSize=i);const o=await this.contractV2PrivateGetFundGetBill(this.extend(n,s)),d=this.safeValue(o,"data",{}),c=this.safeValue(d,"list",[]);return this.parseLedger(c,a,t,i)}async transfer(e,t,i,s,a={}){await this.loadMarkets();const[n,o]=this.handleMarketTypeAndParams("transfer",void 0,a),[d,c]=this.handleMarginModeAndParams("transfer",o),h=this.currency(e),u="swap"===n,l=this.currencyToPrecision(e,t),p={amount:l};let f,m;if(u)f="contractV2PrivatePostFundTransferFund",m="spot"===i||"future"===s?1:0,p.currencyName=h.id,p.clientId=this.safeString(a,"clientId"),p.side=m;else{if("isolated"===d||"isolated"===s||"isolated"===i){f="spot"===i||"isolated"===s?"spotV1PrivateGetTransferInLever":"spotV1PrivateGetTransferOutLever";const e=this.safeString2(a,"marketName","symbol");if(void 0===e)throw new r.ArgumentsRequired(this.id+" transfer() requires a symbol argument for isolated margin");const t=this.market(e);p.marketName=this.safeSymbol(t.id,t,"_")}else"cross"!==d&&"cross"!==s&&"cross"!==i||(f="spot"===i||"cross"===s?"spotV1PrivateGetTransferInCross":"spotV1PrivateGetTransferOutCross");p.coin=h.id}const v=await this[f](this.extend(p,c));return this.extend(this.parseTransfer(v,h),{amount:this.parseNumber(l),fromAccount:i,toAccount:s})}parseTransfer(e,t=undefined){const i=this.milliseconds();return{id:this.safeString(e,"data"),timestamp:i,datetime:this.iso8601(i),currency:this.safeCurrencyCode(void 0,"currency"),amount:void 0,fromAccount:void 0,toAccount:void 0,status:void 0}}async modifyMarginHelper(e,t,i,s={}){if(void 0===s.positionsId)throw new r.ArgumentsRequired(this.id+" modifyMarginHelper() requires a positionsId argument in the params");await this.loadMarkets();const a=this.market(e);t=this.amountToPrecision(e,t);const n={positionsId:this.safeString(s,"positionsId"),amount:t,type:i,futuresAccountType:1},o=await this.contractV2PrivatePostPositionsUpdateMargin(this.extend(n,s));return this.extend(this.parseMarginModification(o,a),{amount:this.parseNumber(t)})}parseMarginModification(e,t=undefined){const i=this.safeValue(e,"data",{}),s=1===this.safeInteger(i,"side")?"add":"reduce",r=1===this.safeInteger(i,"status")?"ok":"failed";return{info:e,type:s,amount:void 0,code:t.quote,symbol:t.symbol,status:r}}async addMargin(e,t,i={}){if(void 0===i.positionsId)throw new r.ArgumentsRequired(this.id+" addMargin() requires a positionsId argument in the params");return await this.modifyMarginHelper(e,t,1,i)}async reduceMargin(e,t,i={}){if(void 0===i.positionsId)throw new r.ArgumentsRequired(this.id+" reduceMargin() requires a positionsId argument in the params");return await this.modifyMarginHelper(e,t,0,i)}async fetchBorrowRate(e,t={}){await this.loadMarkets();const i={coin:this.currency(e).id},s=await this.spotV1PrivateGetGetLoans(this.extend(i,t)),r=this.milliseconds(),a=this.safeValue(s,"result",[]),n=this.safeValue(a,0,{});return{currency:this.safeCurrencyCode(this.safeString(n,"coinName")),rate:this.safeNumber(n,"interestRateOfDay"),period:this.safeNumber(n,"repaymentDay"),timestamp:r,datetime:this.iso8601(r),info:n}}async fetchBorrowRates(e={}){if(void 0===e.coin)throw new r.ArgumentsRequired(this.id+" fetchBorrowRates() requires a coin argument in the params");await this.loadMarkets();const t={coin:this.currency(this.safeString(e,"coin")).id},i=await this.spotV1PrivateGetGetLoans(this.extend(t,e)),s=this.milliseconds(),a=this.safeValue(i,"result",[]),n=[];for(let e=0;e<a.length;e++){const t=a[e];n.push({currency:this.safeCurrencyCode(this.safeString(t,"coinName")),rate:this.safeNumber(t,"interestRateOfDay"),period:this.safeNumber(t,"repaymentDay"),timestamp:s,datetime:this.iso8601(s),info:t})}return n}async setPositionMode(e,t=undefined,i={}){if(await this.loadMarkets(),void 0===t)throw new r.ArgumentsRequired(this.id+" setPositionMode() requires a symbol argument");const s=this.market(t);let a;if(!s.swap)throw new r.BadSymbol(this.id+" setPositionMode() supports swap contracts only");a=1;const n={marketId:s.id,positionMode:e?2:1,futuresAccountType:1};return await this.contractV2PrivatePostSettingSetPositionsMode(this.extend(n,i))}async borrowMargin(e,t,i=undefined,s={}){let a,n;await this.loadMarkets(),void 0!==i&&(a=this.market(i),i=a.symbol),[n,s]=this.handleMarginModeAndParams("borrowMargin",s),void 0===n&&(n=void 0!==i?"isolated":"cross");const o=this.safeString(s,"safePwd",this.password),d=this.currency(e),c={coin:d.id,amount:this.currencyToPrecision(e,t),safePwd:o};let h;if("isolated"===n){if(void 0===i)throw new r.ArgumentsRequired(this.id+" borrowMargin() requires a symbol argument for isolated margin");const e=this.market(i);c.marketName=this.safeSymbol(e.id,e,"_"),h="spotV1PrivateGetBorrow"}else"cross"===n&&(h="spotV1PrivateGetDoCrossLoan");const u=await this[h](this.extend(c,s)),l=this.parseMarginLoan(u,d);return this.extend(l,{amount:t,symbol:i})}parseMarginLoan(e,t=undefined){return{id:void 0,currency:this.safeCurrencyCode(void 0,t),amount:void 0,symbol:void 0,timestamp:void 0,datetime:void 0,info:e}}nonce(){return this.milliseconds()}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){const[n,h,u]=t;let l=this.implodeHostname(this.urls.api[n][h][u]);if("public"===u)"getFeeInfo"===e?l=this.implodeHostname(this.urls.api[n][h].private)+"/"+e:l+="/"+h+"/"+e,Object.keys(s).length&&(l+="?"+this.urlencode(s));else if("contract"===n){const t=this.milliseconds(),n=this.iso8601(t);let c=n+i+"/Server/api/"+h+"/"+e;if(s=this.keysort(s),r={"ZB-APIKEY":this.apiKey,"ZB-TIMESTAMP":n},l+="/"+h+"/"+e,"POST"===i)r["Content-Type"]="application/json",a=this.json(s),c+=this.urlencode(s);else if(Object.keys(s).length){const e=this.urlencode(s);l+="?"+e,c+=e}const u=this.hash(this.encode(this.secret),d.q),p=this.hmac(this.encode(c),this.encode(u),o.J,"base64");r["ZB-SIGN"]=p}else{let t=this.keysort(this.extend({method:e,accesskey:this.apiKey},s));const i=this.nonce();t=this.keysort(t);const r=this.rawencode(t),a=this.hash(this.encode(this.secret),d.q);l+="/"+e+"?"+r+"&sign="+this.hmac(this.encode(r),this.encode(a),c.F)+"&reqTime="+i.toString()}return{url:l,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o&&"{"===n[0]){const e=this.id+" "+n;if(this.throwBroadlyMatchedException(this.exceptions.broad,n,e),"code"in o){const t=this.safeString(o,"code");if(this.throwExactlyMatchedException(this.exceptions.exact,t,e),"1000"!==t&&"10000"!==t)throw new r.ExchangeError(e)}const t=this.safeValue(o,"result");if(void 0!==t&&!t)throw"服务端忙碌"===this.safeString(o,"message")?new r.ExchangeNotAvailable(e):new r.ExchangeError(e)}}}},5140:(e,t,i)=>{i.d(t,{Z:()=>d});var s=i(3565),r=i(6689),a=i(9292),n=i(2194),o=i(7110);class d extends s.Z{describe(){return this.deepExtend(super.describe(),{id:"zonda",name:"Zonda",countries:["EE"],rateLimit:1e3,has:{CORS:!0,spot:!0,margin:!1,swap:!1,future:!1,option:!1,addMargin:!1,cancelAllOrders:!1,cancelOrder:!0,cancelOrders:!1,createDepositAddress:!1,createOrder:!0,createReduceOnlyOrder:!1,fetchBalance:!0,fetchBorrowRate:!1,fetchBorrowRateHistories:!1,fetchBorrowRateHistory:!1,fetchBorrowRates:!1,fetchBorrowRatesPerSymbol:!1,fetchDeposit:!1,fetchDepositAddress:!0,fetchDepositAddresses:!0,fetchDeposits:void 0,fetchFundingHistory:!1,fetchFundingRate:!1,fetchFundingRateHistory:!1,fetchFundingRates:!1,fetchIndexOHLCV:!1,fetchLedger:!0,fetchLeverage:!1,fetchLeverageTiers:!1,fetchMarginMode:!1,fetchMarkets:!0,fetchMarkOHLCV:!1,fetchMyTrades:!0,fetchOHLCV:!0,fetchOpenInterestHistory:!1,fetchOpenOrder:!1,fetchOpenOrders:!0,fetchOrderBook:!0,fetchOrderBooks:!1,fetchPosition:!1,fetchPositionMode:!1,fetchPositions:!1,fetchPositionsRisk:!1,fetchPremiumIndexOHLCV:!1,fetchTicker:!0,fetchTickers:!0,fetchTime:!1,fetchTrades:!0,fetchTradingFee:!1,fetchTradingFees:!1,fetchTransactionFee:!1,fetchTransactionFees:!1,fetchTransactions:void 0,fetchTransfer:!1,fetchWithdrawal:!1,fetchWithdrawals:void 0,reduceMargin:!1,setLeverage:!1,setMargin:!1,setMarginMode:!1,setPositionMode:!1,transfer:!0,withdraw:!0},timeframes:{"1m":"60","3m":"180","5m":"300","15m":"900","30m":"1800","1h":"3600","2h":"7200","4h":"14400","6h":"21600","12h":"43200","1d":"86400","3d":"259200","1w":"604800"},hostname:"zonda.exchange",urls:{referral:"https://auth.zondaglobal.com/ref/jHlbB4mIkdS1",logo:"https://user-images.githubusercontent.com/1294454/159202310-a0e38007-5e7c-4ba9-a32f-c8263a0291fe.jpg",www:"https://zondaglobal.com",api:{public:"https://{hostname}/API/Public",private:"https://{hostname}/API/Trading/tradingApi.php",v1_01Public:"https://api.{hostname}/rest",v1_01Private:"https://api.{hostname}/rest"},doc:["https://docs.zonda.exchange/","https://github.com/BitBayNet/API"],support:"https://zondaglobal.com/en/helpdesk/zonda-exchange",fees:"https://zondaglobal.com/legal/zonda-exchange/fees"},api:{public:{get:["{id}/all","{id}/market","{id}/orderbook","{id}/ticker","{id}/trades"]},private:{post:["info","trade","cancel","orderbook","orders","transfer","withdraw","history","transactions"]},v1_01Public:{get:["trading/ticker","trading/ticker/{symbol}","trading/stats","trading/stats/{symbol}","trading/orderbook/{symbol}","trading/transactions/{symbol}","trading/candle/history/{symbol}/{resolution}"]},v1_01Private:{get:["api_payments/deposits/crypto/addresses","payments/withdrawal/{detailId}","payments/deposit/{detailId}","trading/offer","trading/stop/offer","trading/config/{symbol}","trading/history/transactions","balances/BITBAY/history","balances/BITBAY/balance","fiat_cantor/rate/{baseId}/{quoteId}","fiat_cantor/history"],post:["trading/offer/{symbol}","trading/stop/offer/{symbol}","trading/config/{symbol}","balances/BITBAY/balance","balances/BITBAY/balance/transfer/{source}/{destination}","fiat_cantor/exchange"],delete:["trading/offer/{symbol}/{id}/{side}/{price}","trading/stop/offer/{symbol}/{id}/{side}/{price}"],put:["balances/BITBAY/balance/{id}"]}},fees:{trading:{maker:this.parseNumber("0.0"),taker:this.parseNumber("0.001"),percentage:!0,tierBased:!1},fiat:{maker:this.parseNumber("0.0030"),taker:this.parseNumber("0.0043"),percentage:!0,tierBased:!0,tiers:{taker:[[this.parseNumber("0.0043"),this.parseNumber("0")],[this.parseNumber("0.0042"),this.parseNumber("1250")],[this.parseNumber("0.0041"),this.parseNumber("3750")],[this.parseNumber("0.0040"),this.parseNumber("7500")],[this.parseNumber("0.0039"),this.parseNumber("10000")],[this.parseNumber("0.0038"),this.parseNumber("15000")],[this.parseNumber("0.0037"),this.parseNumber("20000")],[this.parseNumber("0.0036"),this.parseNumber("25000")],[this.parseNumber("0.0035"),this.parseNumber("37500")],[this.parseNumber("0.0034"),this.parseNumber("50000")],[this.parseNumber("0.0033"),this.parseNumber("75000")],[this.parseNumber("0.0032"),this.parseNumber("100000")],[this.parseNumber("0.0031"),this.parseNumber("150000")],[this.parseNumber("0.0030"),this.parseNumber("200000")],[this.parseNumber("0.0029"),this.parseNumber("250000")],[this.parseNumber("0.0028"),this.parseNumber("375000")],[this.parseNumber("0.0027"),this.parseNumber("500000")],[this.parseNumber("0.0026"),this.parseNumber("625000")],[this.parseNumber("0.0025"),this.parseNumber("875000")]],maker:[[this.parseNumber("0.0030"),this.parseNumber("0")],[this.parseNumber("0.0029"),this.parseNumber("1250")],[this.parseNumber("0.0028"),this.parseNumber("3750")],[this.parseNumber("0.0028"),this.parseNumber("7500")],[this.parseNumber("0.0027"),this.parseNumber("10000")],[this.parseNumber("0.0026"),this.parseNumber("15000")],[this.parseNumber("0.0025"),this.parseNumber("20000")],[this.parseNumber("0.0025"),this.parseNumber("25000")],[this.parseNumber("0.0024"),this.parseNumber("37500")],[this.parseNumber("0.0023"),this.parseNumber("50000")],[this.parseNumber("0.0023"),this.parseNumber("75000")],[this.parseNumber("0.0022"),this.parseNumber("100000")],[this.parseNumber("0.0021"),this.parseNumber("150000")],[this.parseNumber("0.0021"),this.parseNumber("200000")],[this.parseNumber("0.0020"),this.parseNumber("250000")],[this.parseNumber("0.0019"),this.parseNumber("375000")],[this.parseNumber("0.0018"),this.parseNumber("500000")],[this.parseNumber("0.0018"),this.parseNumber("625000")],[this.parseNumber("0.0017"),this.parseNumber("875000")]]}},funding:{withdraw:{}}},options:{fiatCurrencies:["EUR","USD","GBP","PLN"],transfer:{fillResponseFromRequest:!0}},precisionMode:a.sh,exceptions:{400:r.ExchangeError,401:r.InvalidOrder,402:r.InvalidOrder,403:r.InvalidOrder,404:r.InvalidOrder,405:r.InvalidOrder,406:r.InsufficientFunds,408:r.InvalidOrder,501:r.AuthenticationError,502:r.AuthenticationError,503:r.InvalidNonce,504:r.ExchangeError,505:r.AuthenticationError,506:r.AccountSuspended,509:r.ExchangeError,510:r.BadSymbol,FUNDS_NOT_SUFFICIENT:r.InsufficientFunds,OFFER_FUNDS_NOT_EXCEEDING_MINIMUMS:r.InvalidOrder,OFFER_NOT_FOUND:r.OrderNotFound,OFFER_WOULD_HAVE_BEEN_PARTIALLY_FILLED:r.OrderImmediatelyFillable,ACTION_LIMIT_EXCEEDED:r.RateLimitExceeded,UNDER_MAINTENANCE:r.OnMaintenance,REQUEST_TIMESTAMP_TOO_OLD:r.InvalidNonce,PERMISSIONS_NOT_SUFFICIENT:r.PermissionDenied,INVALID_STOP_RATE:r.InvalidOrder},commonCurrencies:{GGC:"Global Game Coin"}})}async fetchMarkets(e={}){const t=await this.v1_01PublicGetTradingTicker(e),i=this.safeValue(this.options,"fiatCurrencies",[]),s=[],r=this.safeValue(t,"items",{}),a=Object.keys(r);for(let e=0;e<a.length;e++){const t=a[e],n=r[t],o=this.safeValue(n,"market",{}),d=this.safeValue(o,"first",{}),c=this.safeValue(o,"second",{}),h=this.safeString(d,"currency"),u=this.safeString(c,"currency"),l=this.safeCurrencyCode(h),p=this.safeCurrencyCode(u);let f=this.safeValue(this.fees,"trading",{});(this.inArray(l,i)||this.inArray(p,i))&&(f=this.safeValue(this.fees,"fiat",{})),s.push({id:t,symbol:l+"/"+p,base:l,quote:p,settle:void 0,baseId:h,quoteId:u,settleId:void 0,type:"spot",spot:!0,margin:!1,swap:!1,future:!1,option:!1,active:void 0,contract:!1,linear:void 0,inverse:void 0,taker:this.safeNumber(f,"taker"),maker:this.safeNumber(f,"maker"),contractSize:void 0,expiry:void 0,expiryDatetime:void 0,optionType:void 0,strike:void 0,precision:{amount:this.parseNumber(this.parsePrecision(this.safeString(d,"scale"))),price:this.parseNumber(this.parsePrecision(this.safeString(c,"scale")))},limits:{leverage:{min:void 0,max:void 0},amount:{min:this.safeNumber(d,"minOffer"),max:void 0},price:{min:void 0,max:void 0},cost:{min:this.safeNumber(c,"minOffer"),max:void 0}},info:n})}return s}async fetchOpenOrders(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=await this.v1_01PrivateGetTradingOffer(this.extend({},s)),a=this.safeValue(r,"items",[]);return this.parseOrders(a,void 0,t,i,{status:"open"})}parseOrder(e,t=undefined){const i=this.safeString(e,"market"),s=this.safeSymbol(i,t,"-"),r=this.safeInteger(e,"time"),a=this.safeString(e,"startAmount"),n=this.safeString(e,"currentAmount"),o=this.safeValue(e,"postOnly");return this.safeOrder({id:this.safeString(e,"id"),clientOrderId:void 0,info:e,timestamp:r,datetime:this.iso8601(r),lastTradeTimestamp:void 0,status:void 0,symbol:s,type:this.safeString(e,"mode"),timeInForce:void 0,postOnly:o,side:this.safeStringLower(e,"offerType"),price:this.safeString(e,"rate"),stopPrice:void 0,triggerPrice:void 0,amount:a,cost:void 0,filled:void 0,remaining:n,average:void 0,fee:void 0,trades:void 0},t)}async fetchMyTrades(e=undefined,t=undefined,i=undefined,s={}){await this.loadMarkets();const r={};if(e){const t=[this.marketId(e)];e=this.symbol(e),r.markets=t}const a={query:this.json(this.extend(r,s))},n=await this.v1_01PrivateGetTradingHistoryTransactions(a),o=this.safeValue(n,"items"),d=this.parseTrades(o,void 0,t,i);return void 0===e?d:this.filterBySymbol(d,e)}parseBalance(e){const t=this.safeValue(e,"balances");if(void 0===t)throw new r.ExchangeError(this.id+" empty balance response "+this.json(e));const i={info:e};for(let e=0;e<t.length;e++){const s=t[e],r=this.safeString(s,"currency"),a=this.safeCurrencyCode(r),n=this.account();n.used=this.safeString(s,"lockedFunds"),n.free=this.safeString(s,"availableFunds"),i[a]=n}return this.safeBalance(i)}async fetchBalance(e={}){await this.loadMarkets();const t=await this.v1_01PrivateGetBalancesBITBAYBalance(e);return this.parseBalance(t)}async fetchOrderBook(e,t=undefined,i={}){await this.loadMarkets();const s=this.market(e),r={symbol:s.id},a=await this.v1_01PublicGetTradingOrderbookSymbol(this.extend(r,i)),n=this.safeValue(a,"buy",[]),o=this.safeValue(a,"sell",[]),d=this.safeInteger(a,"timestamp");return{symbol:s.symbol,bids:this.parseBidsAsks(n,"ra","ca"),asks:this.parseBidsAsks(o,"ra","ca"),timestamp:d,datetime:this.iso8601(d),nonce:this.safeInteger(a,"seqNo")}}parseTicker(e,t=undefined){const i=this.safeString(e,"r24h"),s=this.safeString(e,"h"),r=this.safeString(e,"l"),a=this.safeString(e,"v"),n=this.safeString(e,"m"),o=(t=this.safeMarket(n,t,"-")).symbol;return this.safeTicker({symbol:o,timestamp:void 0,datetime:void 0,high:s,low:r,bid:void 0,bidVolume:void 0,ask:void 0,askVolume:void 0,vwap:void 0,open:i,close:void 0,last:void 0,previousClose:void 0,change:void 0,percentage:void 0,average:void 0,baseVolume:a,quoteVolume:void 0,info:e},t)}async fetchTicker(e,t={}){await this.loadMarkets();const i=this.market(e),s={symbol:i.id},r=await this.v1_01PublicGetTradingStatsSymbol(this.extend(s,t)),a=this.safeValue(r,"stats");return this.parseTicker(a,i)}async fetchTickers(e=undefined,t={}){await this.loadMarkets();const i=await this.v1_01PublicGetTradingStats(t),s=this.safeValue(i,"items");return this.parseTickers(s,e)}async fetchLedger(e=undefined,t=undefined,i=undefined,s={}){const r=[];if(void 0!==e){const t=this.currency(e);r.push(t.id)}let a={balanceCurrencies:r};void 0!==t&&(a.fromTime=t),void 0!==i&&(a.limit=i),a=this.extend(a,s);const n=(await this.v1_01PrivateGetBalancesBITBAYHistory({query:this.json(a)})).items;return this.parseLedger(n,void 0,t,i)}parseLedgerEntry(e,t=undefined){const i=this.safeInteger(e,"time"),s=this.safeValue(e,"balance",{}),r=this.safeString(s,"currency"),a=this.safeValue(e,"change",{});let o=this.safeString(a,"total"),d="in";n.O.stringLt(o,"0")&&(d="out",o=n.O.stringNeg(o));const c=this.safeValue(e,"fundsBefore",{}),h=this.safeValue(e,"fundsAfter",{});return{info:e,id:this.safeString(e,"historyId"),direction:d,account:void 0,referenceId:this.safeString(e,"detailId"),referenceAccount:void 0,type:this.parseLedgerEntryType(this.safeString(e,"type")),currency:this.safeCurrencyCode(r),amount:this.parseNumber(o),before:this.safeNumber(c,"total"),after:this.safeNumber(h,"total"),status:"ok",timestamp:i,datetime:this.iso8601(i),fee:void 0}}parseLedgerEntryType(e){return this.safeString({ADD_FUNDS:"transaction",BITCOIN_GOLD_FORK:"transaction",CREATE_BALANCE:"transaction",FUNDS_MIGRATION:"transaction",WITHDRAWAL_LOCK_FUNDS:"transaction",WITHDRAWAL_SUBTRACT_FUNDS:"transaction",WITHDRAWAL_UNLOCK_FUNDS:"transaction",TRANSACTION_COMMISSION_OUTCOME:"fee",TRANSACTION_COMMISSION_RETURN:"fee",TRANSACTION_OFFER_ABORTED_RETURN:"trade",TRANSACTION_OFFER_COMPLETED_RETURN:"trade",TRANSACTION_POST_INCOME:"trade",TRANSACTION_POST_OUTCOME:"trade",TRANSACTION_PRE_LOCKING:"trade"},e,e)}parseOHLCV(e,t=undefined){const i=this.safeValue(e,1,{});return[this.safeInteger(e,0),this.safeNumber(i,"o"),this.safeNumber(i,"h"),this.safeNumber(i,"l"),this.safeNumber(i,"c"),this.safeNumber(i,"v")]}async fetchOHLCV(e,t="1m",i=undefined,s=undefined,r={}){await this.loadMarkets();const a=this.market(e),n={symbol:a.baseId+"-"+a.quoteId,resolution:this.safeString(this.timeframes,t,t)};void 0===s&&(s=100);const o=s*this.parseTimeframe(t)*1e3;void 0===i?(n.to=this.milliseconds(),n.from=n.to-o):(n.from=parseInt(i),n.to=this.sum(n.from,o));const d=await this.v1_01PublicGetTradingCandleHistorySymbolResolution(this.extend(n,r)),c=this.safeValue(d,"items",[]);return this.parseOHLCVs(c,a,t,i,s)}parseTrade(e,t=undefined){const i=this.safeInteger2(e,"time","t"),s=this.safeStringLower2(e,"userAction","ty"),r=this.safeValue(e,"wasTaker");let a;void 0!==r&&(a=r?"taker":"maker");const n=this.safeString2(e,"rate","r"),o=this.safeString2(e,"amount","a"),d=this.safeString(e,"commissionValue"),c=this.safeString(e,"market"),h=(t=this.safeMarket(c,t,"-")).symbol;let u;void 0!==d&&(u={currency:"buy"===s?t.base:t.quote,cost:d});const l=this.safeString(e,"offerId");let p;return void 0!==l&&(p=l?"limit":"market"),this.safeTrade({id:this.safeString(e,"id"),order:l,timestamp:i,datetime:this.iso8601(i),symbol:h,type:p,side:s,price:n,amount:o,cost:void 0,takerOrMaker:a,fee:u,info:e},t)}async fetchTrades(e,t=undefined,i=undefined,s={}){await this.loadMarkets();const r=this.market(e),a={symbol:r.baseId+"-"+r.quoteId};void 0!==t&&(a.fromTime=t-1),void 0!==i&&(a.limit=i);const n=await this.v1_01PublicGetTradingTransactionsSymbol(this.extend(a,s)),o=this.safeValue(n,"items");return this.parseTrades(o,r,t,i)}async createOrder(e,t,i,s,a=undefined,n={}){await this.loadMarkets();const o=this.market(e),d=o.baseId+"-"+o.quoteId;s=parseFloat(this.amountToPrecision(e,s));const c={symbol:d,offerType:i.toUpperCase(),amount:s},h=this.safeValue2(n,"stopPrice","stopLossPrice"),u=void 0!==h,l="limit"===t,p="market"===t,f="stop-limit"===t||l&&u,m="stop-market"===t||p&&u,v=f||m,g=v?"v1_01PrivatePostTradingStopOfferSymbol":"v1_01PrivatePostTradingOfferSymbol";if(l||f)c.rate=this.priceToPrecision(e,a),c.mode=f?"stop-limit":"limit";else{if(!p&&!m)throw new r.ExchangeError(this.id+" createOrder() invalid type");c.mode=m?"stop-market":"market"}if(v){if(!u)throw new r.ExchangeError(this.id+" createOrder() zonda requires `triggerPrice` or `stopPrice` parameter for stop-limit or stop-market orders");c.stopRate=this.priceToPrecision(e,h)}n=this.omit(n,["stopPrice","stopLossPrice"]);const y=await this[g](this.extend(c,n)),b=this.safeString2(y,"offerId","stopOfferId"),w=this.safeValue(y,"completed",!1)?"closed":"open",S=this.safeValue(y,"transactions");return this.safeOrder({id:b,info:y,timestamp:void 0,datetime:void 0,lastTradeTimestamp:void 0,status:w,symbol:e,type:t,side:i,price:a,amount:s,cost:void 0,filled:void 0,remaining:void 0,average:void 0,fee:void 0,trades:S,clientOrderId:void 0})}async cancelOrder(e,t=undefined,i={}){const s=this.safeString(i,"side");if(void 0===s)throw new r.ExchangeError(this.id+' cancelOrder() requires a `side` parameter ("buy" or "sell")');const a=this.safeValue(i,"price");if(void 0===a)throw new r.ExchangeError(this.id+" cancelOrder() requires a `price` parameter (float or string)");await this.loadMarkets();const n=this.market(t),o={symbol:n.baseId+"-"+n.quoteId,id:e,side:s,price:a};return await this.v1_01PrivateDeleteTradingOfferSymbolIdSidePrice(this.extend(o,i))}isFiat(e){return this.safeValue({USD:!0,EUR:!0,PLN:!0},e,!1)}parseDepositAddress(e,t=undefined){const i=this.safeString(e,"currency"),s=this.safeString(e,"address");return this.checkAddress(s),{currency:this.safeCurrencyCode(i,t),address:s,tag:this.safeString(e,"tag"),network:void 0,info:e}}async fetchDepositAddress(e,t={}){await this.loadMarkets();const i=this.currency(e),s={currency:i.id},r=await this.v1_01PrivateGetApiPaymentsDepositsCryptoAddresses(this.extend(s,t)),a=this.safeValue(r,"data"),n=this.safeValue(a,0);return this.parseDepositAddress(n,i)}async fetchDepositAddresses(e=undefined,t={}){await this.loadMarkets();const i=await this.v1_01PrivateGetApiPaymentsDepositsCryptoAddresses(t),s=this.safeValue(i,"data");return this.parseDepositAddresses(s,e)}async transfer(e,t,i,s,r={}){await this.loadMarkets();const a=this.currency(e),n={source:i,destination:s,currency:e,funds:this.currencyToPrecision(e,t)},o=await this.v1_01PrivatePostBalancesBITBAYBalanceTransferSourceDestination(this.extend(n,r)),d=this.parseTransfer(o,a),c=this.safeValue(this.options,"transfer",{});return this.safeValue(c,"fillResponseFromRequest",!0)&&(d.amount=t),d}parseTransfer(e,t=undefined){const i=this.safeString(e,"status"),s=this.safeValue(e,"from",{}),r=this.safeString(s,"id"),a=this.safeValue(e,"to",{}),n=this.safeString(a,"id"),o=this.safeString(s,"currency");return{info:e,id:void 0,timestamp:void 0,datetime:void 0,currency:this.safeCurrencyCode(o,t),amount:void 0,fromAccount:r,toAccount:n,status:this.parseTransferStatus(i)}}parseTransferStatus(e){return this.safeString({Ok:"ok",Fail:"failed"},e,e)}async withdraw(e,t,i,s=undefined,r={}){let a;[s,r]=this.handleWithdrawTagAndParams(s,r),this.checkAddress(i),await this.loadMarkets();const n=this.currency(e),o={currency:n.id,quantity:t};this.isFiat(e)?a="privatePostWithdraw":(a="privatePostTransfer",void 0!==s&&(i+="?dt="+s.toString()),o.address=i);const d=await this[a](this.extend(o,r)),c=this.safeValue(d,"data");return this.parseTransaction(c,n)}parseTransaction(e,t=undefined){return t=this.safeCurrency(void 0,t),{id:this.safeString(e,"id"),txid:void 0,timestamp:void 0,datetime:void 0,network:void 0,addressFrom:void 0,address:void 0,addressTo:void 0,amount:void 0,type:void 0,currency:t.code,status:void 0,updated:void 0,tagFrom:void 0,tag:void 0,tagTo:void 0,comment:void 0,fee:void 0,info:e}}sign(e,t="public",i="GET",s={},r=undefined,a=undefined){let n=this.implodeHostname(this.urls.api[t]);if("public"===t){const t=this.omit(s,this.extractParams(e));n+="/"+this.implodeParams(e,s)+".json",Object.keys(t).length&&(n+="?"+this.urlencode(t))}else if("v1_01Public"===t){const t=this.omit(s,this.extractParams(e));n+="/"+this.implodeParams(e,s),Object.keys(t).length&&(n+="?"+this.urlencode(t))}else if("v1_01Private"===t){this.checkRequiredCredentials();const t=this.omit(s,this.extractParams(e));n+="/"+this.implodeParams(e,s);const d=this.milliseconds().toString();let c;"POST"!==i?(Object.keys(t).length&&(n+="?"+this.urlencode(t)),c=this.apiKey+d):void 0===a&&(a=this.json(t),c=this.apiKey+d+a),r={"Request-Timestamp":d,"Operation-Id":this.uuid(),"API-Key":this.apiKey,"API-Hash":this.hmac(this.encode(c),this.encode(this.secret),o.o),"Content-Type":"application/json"}}else this.checkRequiredCredentials(),a=this.urlencode(this.extend({method:e,moment:this.nonce()},s)),r={"Content-Type":"application/x-www-form-urlencoded","API-Key":this.apiKey,"API-Hash":this.hmac(this.encode(a),this.encode(this.secret),o.o)};return{url:n,method:i,body:a,headers:r}}handleErrors(e,t,i,s,a,n,o,d,c){if(void 0!==o){if("code"in o){const e=this.safeString(o,"code"),t=this.id+" "+n;throw this.throwExactlyMatchedException(this.exceptions,e,t),new r.ExchangeError(t)}if("status"in o&&"Fail"===this.safeString(o,"status")){const e=this.safeValue(o,"errors"),t=this.id+" "+n;for(let i=0;i<e.length;i++){const s=e[i];this.throwExactlyMatchedException(this.exceptions,s,t)}throw new r.ExchangeError(t)}}}}},7026:e=>{e.exports=function(){throw new Error("ws does not work in the browser. Browser clients must use the native WebSocket object")}},3183:e=>{var t=String.prototype.replace,i=/%20/g;e.exports={default:"RFC3986",formatters:{RFC1738:function(e){return t.call(e,i,"+")},RFC3986:function(e){return e}},RFC1738:"RFC1738",RFC3986:"RFC3986"}},3165:(e,t,i)=>{var s=i(6463),r=i(163),a=i(3183);e.exports={formats:a,parse:r,stringify:s}},163:(e,t,i)=>{var s=i(8584),r=Object.prototype.hasOwnProperty,a={allowDots:!1,allowPrototypes:!1,arrayLimit:20,charset:"utf-8",charsetSentinel:!1,comma:!1,decoder:s.decode,delimiter:"&",depth:5,ignoreQueryPrefix:!1,interpretNumericEntities:!1,parameterLimit:1e3,parseArrays:!0,plainObjects:!1,strictNullHandling:!1},n=function(e){return e.replace(/&#(\d+);/g,(function(e,t){return String.fromCharCode(parseInt(t,10))}))},o=function(e,t,i){if(e){var s=i.allowDots?e.replace(/\.([^.[]+)/g,"[$1]"):e,a=/(\[[^[\]]*])/g,n=/(\[[^[\]]*])/.exec(s),o=n?s.slice(0,n.index):s,d=[];if(o){if(!i.plainObjects&&r.call(Object.prototype,o)&&!i.allowPrototypes)return;d.push(o)}for(var c=0;null!==(n=a.exec(s))&&c<i.depth;){if(c+=1,!i.plainObjects&&r.call(Object.prototype,n[1].slice(1,-1))&&!i.allowPrototypes)return;d.push(n[1])}return n&&d.push("["+s.slice(n.index)+"]"),function(e,t,i){for(var s=t,r=e.length-1;r>=0;--r){var a,n=e[r];if("[]"===n&&i.parseArrays)a=[].concat(s);else{a=i.plainObjects?Object.create(null):{};var o="["===n.charAt(0)&&"]"===n.charAt(n.length-1)?n.slice(1,-1):n,d=parseInt(o,10);i.parseArrays||""!==o?!isNaN(d)&&n!==o&&String(d)===o&&d>=0&&i.parseArrays&&d<=i.arrayLimit?(a=[])[d]=s:a[o]=s:a={0:s}}s=a}return s}(d,t,i)}};e.exports=function(e,t){var i=function(e){if(!e)return a;if(null!==e.decoder&&void 0!==e.decoder&&"function"!=typeof e.decoder)throw new TypeError("Decoder has to be a function.");if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new Error("The charset option must be either utf-8, iso-8859-1, or undefined");var t=void 0===e.charset?a.charset:e.charset;return{allowDots:void 0===e.allowDots?a.allowDots:!!e.allowDots,allowPrototypes:"boolean"==typeof e.allowPrototypes?e.allowPrototypes:a.allowPrototypes,arrayLimit:"number"==typeof e.arrayLimit?e.arrayLimit:a.arrayLimit,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:a.charsetSentinel,comma:"boolean"==typeof e.comma?e.comma:a.comma,decoder:"function"==typeof e.decoder?e.decoder:a.decoder,delimiter:"string"==typeof e.delimiter||s.isRegExp(e.delimiter)?e.delimiter:a.delimiter,depth:"number"==typeof e.depth?e.depth:a.depth,ignoreQueryPrefix:!0===e.ignoreQueryPrefix,interpretNumericEntities:"boolean"==typeof e.interpretNumericEntities?e.interpretNumericEntities:a.interpretNumericEntities,parameterLimit:"number"==typeof e.parameterLimit?e.parameterLimit:a.parameterLimit,parseArrays:!1!==e.parseArrays,plainObjects:"boolean"==typeof e.plainObjects?e.plainObjects:a.plainObjects,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:a.strictNullHandling}}(t);if(""===e||null==e)return i.plainObjects?Object.create(null):{};for(var d="string"==typeof e?function(e,t){var i,o={},d=t.ignoreQueryPrefix?e.replace(/^\?/,""):e,c=t.parameterLimit===1/0?void 0:t.parameterLimit,h=d.split(t.delimiter,c),u=-1,l=t.charset;if(t.charsetSentinel)for(i=0;i<h.length;++i)0===h[i].indexOf("utf8=")&&("utf8=%E2%9C%93"===h[i]?l="utf-8":"utf8=%26%2310003%3B"===h[i]&&(l="iso-8859-1"),u=i,i=h.length);for(i=0;i<h.length;++i)if(i!==u){var p,f,m=h[i],v=m.indexOf("]="),g=-1===v?m.indexOf("="):v+1;-1===g?(p=t.decoder(m,a.decoder,l),f=t.strictNullHandling?null:""):(p=t.decoder(m.slice(0,g),a.decoder,l),f=t.decoder(m.slice(g+1),a.decoder,l)),f&&t.interpretNumericEntities&&"iso-8859-1"===l&&(f=n(f)),f&&t.comma&&f.indexOf(",")>-1&&(f=f.split(",")),r.call(o,p)?o[p]=s.combine(o[p],f):o[p]=f}return o}(e,i):e,c=i.plainObjects?Object.create(null):{},h=Object.keys(d),u=0;u<h.length;++u){var l=h[u],p=o(l,d[l],i);c=s.merge(c,p,i)}return s.compact(c)}},6463:(e,t,i)=>{var s=i(8584),r=i(3183),a=Object.prototype.hasOwnProperty,n={brackets:function(e){return e+"[]"},comma:"comma",indices:function(e,t){return e+"["+t+"]"},repeat:function(e){return e}},o=Array.isArray,d=Array.prototype.push,c=function(e,t){d.apply(e,o(t)?t:[t])},h=Date.prototype.toISOString,u={addQueryPrefix:!1,allowDots:!1,charset:"utf-8",charsetSentinel:!1,delimiter:"&",encode:!0,encoder:s.encode,encodeValuesOnly:!1,formatter:r.formatters[r.default],indices:!1,serializeDate:function(e){return h.call(e)},skipNulls:!1,strictNullHandling:!1},l=function e(t,i,r,a,n,d,h,l,p,f,m,v,g){var y=t;if("function"==typeof h?y=h(i,y):y instanceof Date?y=f(y):"comma"===r&&o(y)&&(y=y.join(",")),null===y){if(a)return d&&!v?d(i,u.encoder,g):i;y=""}if("string"==typeof y||"number"==typeof y||"boolean"==typeof y||s.isBuffer(y))return d?[m(v?i:d(i,u.encoder,g))+"="+m(d(y,u.encoder,g))]:[m(i)+"="+m(String(y))];var b,w=[];if(void 0===y)return w;if(o(h))b=h;else{var S=Object.keys(y);b=l?S.sort(l):S}for(var P=0;P<b.length;++P){var k=b[P];n&&null===y[k]||(o(y)?c(w,e(y[k],"function"==typeof r?r(i,k):i,r,a,n,d,h,l,p,f,m,v,g)):c(w,e(y[k],i+(p?"."+k:"["+k+"]"),r,a,n,d,h,l,p,f,m,v,g)))}return w};e.exports=function(e,t){var i,s=e,d=function(e){if(!e)return u;if(null!==e.encoder&&void 0!==e.encoder&&"function"!=typeof e.encoder)throw new TypeError("Encoder has to be a function.");var t=e.charset||u.charset;if(void 0!==e.charset&&"utf-8"!==e.charset&&"iso-8859-1"!==e.charset)throw new TypeError("The charset option must be either utf-8, iso-8859-1, or undefined");var i=r.default;if(void 0!==e.format){if(!a.call(r.formatters,e.format))throw new TypeError("Unknown format option provided.");i=e.format}var s=r.formatters[i],n=u.filter;return("function"==typeof e.filter||o(e.filter))&&(n=e.filter),{addQueryPrefix:"boolean"==typeof e.addQueryPrefix?e.addQueryPrefix:u.addQueryPrefix,allowDots:void 0===e.allowDots?u.allowDots:!!e.allowDots,charset:t,charsetSentinel:"boolean"==typeof e.charsetSentinel?e.charsetSentinel:u.charsetSentinel,delimiter:void 0===e.delimiter?u.delimiter:e.delimiter,encode:"boolean"==typeof e.encode?e.encode:u.encode,encoder:"function"==typeof e.encoder?e.encoder:u.encoder,encodeValuesOnly:"boolean"==typeof e.encodeValuesOnly?e.encodeValuesOnly:u.encodeValuesOnly,filter:n,formatter:s,serializeDate:"function"==typeof e.serializeDate?e.serializeDate:u.serializeDate,skipNulls:"boolean"==typeof e.skipNulls?e.skipNulls:u.skipNulls,sort:"function"==typeof e.sort?e.sort:null,strictNullHandling:"boolean"==typeof e.strictNullHandling?e.strictNullHandling:u.strictNullHandling}}(t);"function"==typeof d.filter?s=(0,d.filter)("",s):o(d.filter)&&(i=d.filter);var h,p=[];if("object"!=typeof s||null===s)return"";h=t&&t.arrayFormat in n?t.arrayFormat:t&&"indices"in t?t.indices?"indices":"repeat":"indices";var f=n[h];i||(i=Object.keys(s)),d.sort&&i.sort(d.sort);for(var m=0;m<i.length;++m){var v=i[m];d.skipNulls&&null===s[v]||c(p,l(s[v],v,f,d.strictNullHandling,d.skipNulls,d.encode?d.encoder:null,d.filter,d.sort,d.allowDots,d.serializeDate,d.formatter,d.encodeValuesOnly,d.charset))}var g=p.join(d.delimiter),y=!0===d.addQueryPrefix?"?":"";return d.charsetSentinel&&("iso-8859-1"===d.charset?y+="utf8=%26%2310003%3B&":y+="utf8=%E2%9C%93&"),g.length>0?y+g:""}},8584:e=>{var t=Object.prototype.hasOwnProperty,i=Array.isArray,s=function(){for(var e=[],t=0;t<256;++t)e.push("%"+((t<16?"0":"")+t.toString(16)).toUpperCase());return e}(),r=function(e,t){for(var i=t&&t.plainObjects?Object.create(null):{},s=0;s<e.length;++s)void 0!==e[s]&&(i[s]=e[s]);return i};e.exports={arrayToObject:r,assign:function(e,t){return Object.keys(t).reduce((function(e,i){return e[i]=t[i],e}),e)},combine:function(e,t){return[].concat(e,t)},compact:function(e){for(var t=[{obj:{o:e},prop:"o"}],s=[],r=0;r<t.length;++r)for(var a=t[r],n=a.obj[a.prop],o=Object.keys(n),d=0;d<o.length;++d){var c=o[d],h=n[c];"object"==typeof h&&null!==h&&-1===s.indexOf(h)&&(t.push({obj:n,prop:c}),s.push(h))}return function(e){for(;e.length>1;){var t=e.pop(),s=t.obj[t.prop];if(i(s)){for(var r=[],a=0;a<s.length;++a)void 0!==s[a]&&r.push(s[a]);t.obj[t.prop]=r}}}(t),e},decode:function(e,t,i){var s=e.replace(/\+/g," ");if("iso-8859-1"===i)return s.replace(/%[0-9a-f]{2}/gi,unescape);try{return decodeURIComponent(s)}catch(e){return s}},encode:function(e,t,i){if(0===e.length)return e;var r="string"==typeof e?e:String(e);if("iso-8859-1"===i)return escape(r).replace(/%u[0-9a-f]{4}/gi,(function(e){return"%26%23"+parseInt(e.slice(2),16)+"%3B"}));for(var a="",n=0;n<r.length;++n){var o=r.charCodeAt(n);45===o||46===o||95===o||126===o||o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122?a+=r.charAt(n):o<128?a+=s[o]:o<2048?a+=s[192|o>>6]+s[128|63&o]:o<55296||o>=57344?a+=s[224|o>>12]+s[128|o>>6&63]+s[128|63&o]:(n+=1,o=65536+((1023&o)<<10|1023&r.charCodeAt(n)),a+=s[240|o>>18]+s[128|o>>12&63]+s[128|o>>6&63]+s[128|63&o])}return a},isBuffer:function(e){return!(!e||"object"!=typeof e||!(e.constructor&&e.constructor.isBuffer&&e.constructor.isBuffer(e)))},isRegExp:function(e){return"[object RegExp]"===Object.prototype.toString.call(e)},merge:function e(s,a,n){if(!a)return s;if("object"!=typeof a){if(i(s))s.push(a);else{if(!s||"object"!=typeof s)return[s,a];(n&&(n.plainObjects||n.allowPrototypes)||!t.call(Object.prototype,a))&&(s[a]=!0)}return s}if(!s||"object"!=typeof s)return[s].concat(a);var o=s;return i(s)&&!i(a)&&(o=r(s,n)),i(s)&&i(a)?(a.forEach((function(i,r){if(t.call(s,r)){var a=s[r];a&&"object"==typeof a&&i&&"object"==typeof i?s[r]=e(a,i,n):s.push(i)}else s[r]=i})),s):Object.keys(a).reduce((function(i,s){var r=a[s];return t.call(i,s)?i[s]=e(i[s],r,n):i[s]=r,i}),o)}}},7348:(e,t,i)=>{i.d(t,{_Z:()=>E,n:()=>V});var s=Uint8Array,r=Uint16Array,a=Uint32Array,n=new s([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),o=new s([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),d=new s([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),c=function(e,t){for(var i=new r(31),s=0;s<31;++s)i[s]=t+=1<<e[s-1];var n=new a(i[30]);for(s=1;s<30;++s)for(var o=i[s];o<i[s+1];++o)n[o]=o-i[s]<<5|s;return[i,n]},h=c(n,2),u=h[0],l=h[1];u[28]=258,l[258]=28;for(var p=c(o,0),f=p[0],m=(p[1],new r(32768)),v=0;v<32768;++v){var g=(43690&v)>>>1|(21845&v)<<1;g=(61680&(g=(52428&g)>>>2|(13107&g)<<2))>>>4|(3855&g)<<4,m[v]=((65280&g)>>>8|(255&g)<<8)>>>1}var y=function(e,t,i){for(var s=e.length,a=0,n=new r(t);a<s;++a)e[a]&&++n[e[a]-1];var o,d=new r(t);for(a=0;a<t;++a)d[a]=d[a-1]+n[a-1]<<1;if(i){o=new r(1<<t);var c=15-t;for(a=0;a<s;++a)if(e[a])for(var h=a<<4|e[a],u=t-e[a],l=d[e[a]-1]++<<u,p=l|(1<<u)-1;l<=p;++l)o[m[l]>>>c]=h}else for(o=new r(s),a=0;a<s;++a)e[a]&&(o[a]=m[d[e[a]-1]++]>>>15-e[a]);return o},b=new s(288);for(v=0;v<144;++v)b[v]=8;for(v=144;v<256;++v)b[v]=9;for(v=256;v<280;++v)b[v]=7;for(v=280;v<288;++v)b[v]=8;var w=new s(32);for(v=0;v<32;++v)w[v]=5;var S=y(b,9,1),P=y(w,5,1),k=function(e){for(var t=e[0],i=1;i<e.length;++i)e[i]>t&&(t=e[i]);return t},O=function(e,t,i){var s=t/8|0;return(e[s]|e[s+1]<<8)>>(7&t)&i},T=function(e,t){var i=t/8|0;return(e[i]|e[i+1]<<8|e[i+2]<<16)>>(7&t)},A=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],G=function(e,t,i){var s=new Error(t||A[e]);if(s.code=e,Error.captureStackTrace&&Error.captureStackTrace(s,G),!i)throw s;return s},I=function(e,t,i){var c=e.length;if(!c||i&&i.f&&!i.l)return t||new s(0);var h=!t||i,l=!i||i.i;i||(i={}),t||(t=new s(3*c));var p,m=function(e){var i=t.length;if(e>i){var r=new s(Math.max(2*i,e));r.set(t),t=r}},v=i.f||0,g=i.p||0,b=i.b||0,w=i.l,A=i.d,I=i.m,C=i.n,M=8*c;do{if(!w){v=O(e,g,1);var x=O(e,g+1,3);if(g+=3,!x){var V=e[(p=g,(U=4+((p+7)/8|0))-4)]|e[U-3]<<8,E=U+V;if(E>c){l&&G(0);break}h&&m(b+V),t.set(e.subarray(U,E),b),i.b=b+=V,i.p=g=8*E,i.f=v;continue}if(1==x)w=S,A=P,I=9,C=5;else if(2==x){var B=O(e,g,31)+257,_=O(e,g+10,15)+4,R=B+O(e,g+5,31)+1;g+=14;for(var N=new s(R),L=new s(19),D=0;D<_;++D)L[d[D]]=O(e,g+3*D,7);g+=3*_;var F=k(L),q=(1<<F)-1,H=y(L,F,1);for(D=0;D<R;){var U,W=H[O(e,g,q)];if(g+=15&W,(U=W>>>4)<16)N[D++]=U;else{var K=0,j=0;for(16==U?(j=3+O(e,g,3),g+=2,K=N[D-1]):17==U?(j=3+O(e,g,7),g+=3):18==U&&(j=11+O(e,g,127),g+=7);j--;)N[D++]=K}}var z=N.subarray(0,B),Z=N.subarray(B);I=k(z),C=k(Z),w=y(z,I,1),A=y(Z,C,1)}else G(1);if(g>M){l&&G(0);break}}h&&m(b+131072);for(var Q=(1<<I)-1,X=(1<<C)-1,Y=g;;Y=g){var J=(K=w[T(e,g)&Q])>>>4;if((g+=15&K)>M){l&&G(0);break}if(K||G(2),J<256)t[b++]=J;else{if(256==J){Y=g,w=null;break}var $=J-254;if(J>264){var ee=n[D=J-257];$=O(e,g,(1<<ee)-1)+u[D],g+=ee}var te=A[T(e,g)&X],ie=te>>>4;if(te||G(3),g+=15&te,Z=f[ie],ie>3&&(ee=o[ie],Z+=T(e,g)&(1<<ee)-1,g+=ee),g>M){l&&G(0);break}h&&m(b+131072);for(var se=b+$;b<se;b+=4)t[b]=t[b-Z],t[b+1]=t[b+1-Z],t[b+2]=t[b+2-Z],t[b+3]=t[b+3-Z];b=se}}i.l=w,i.p=Y,i.b=b,i.f=v,w&&(v=1,i.m=I,i.d=A,i.n=C)}while(!v);return b==t.length?t:function(e,t,i){(null==t||t<0)&&(t=0),(null==i||i>e.length)&&(i=e.length);var n=new(2==e.BYTES_PER_ELEMENT?r:4==e.BYTES_PER_ELEMENT?a:s)(i-t);return n.set(e.subarray(t,i)),n}(t,0,b)},C=new s(0),M=function(e){31==e[0]&&139==e[1]&&8==e[2]||G(6,"invalid gzip data");var t=e[3],i=10;4&t&&(i+=e[10]|2+(e[11]<<8));for(var s=(t>>3&1)+(t>>4&1);s>0;s-=!e[i++]);return i+(2&t)},x=function(e){var t=e.length;return(e[t-4]|e[t-3]<<8|e[t-2]<<16|e[t-1]<<24)>>>0};function V(e,t=undefined){return I(e,t)}function E(e,t=undefined){return I(e.subarray(M(e),-8),t||new s(x(e)))}var B="undefined"!=typeof TextDecoder&&new TextDecoder;try{B.decode(C,{stream:!0})}catch(e){}"function"==typeof queueMicrotask?queueMicrotask:"function"==typeof setTimeout&&setTimeout},6294:(e,t,i)=>{i.d(t,{f:()=>a});var s=i(2833),r=i(1532),a={};void 0!==a.asn1&&a.asn1||(a.asn1={}),a.asn1.ASN1Util=new function(){this.integerToByteHex=function(e){var t=e.toString(16);return t.length%2==1&&(t="0"+t),t},this.bigIntToMinTwosComplementsHex=function(e){var t=e.toString(16);if("-"!=t.substr(0,1))t.length%2==1?t="0"+t:t.match(/^[0-7]/)||(t="00"+t);else{var i=t.substr(1).length;i%2==1?i+=1:t.match(/^[0-7]/)||(i+=2);for(var r="",a=0;a<i;a++)r+="f";t=new s.Jh(r,16).xor(e).add(s.Jh.ONE).toString(16).replace(/^-/,"")}return t},this.getPEMStringFromHex=function(e,t){return hextopem(e,t)},this.newObject=function(e){var t=a.asn1,i=t.DERBoolean,s=t.DERInteger,r=t.DERBitString,n=t.DEROctetString,o=t.DERNull,d=t.DERObjectIdentifier,c=t.DEREnumerated,h=t.DERUTF8String,u=t.DERNumericString,l=t.DERPrintableString,p=t.DERTeletexString,f=t.DERIA5String,m=t.DERUTCTime,v=t.DERGeneralizedTime,g=t.DERSequence,y=t.DERSet,b=t.DERTaggedObject,w=t.ASN1Util.newObject,S=Object.keys(e);if(1!=S.length)throw"key of param shall be only one.";var P=S[0];if(-1==":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":"+P+":"))throw"undefined key: "+P;if("bool"==P)return new i(e[P]);if("int"==P)return new s(e[P]);if("bitstr"==P)return new r(e[P]);if("octstr"==P)return new n(e[P]);if("null"==P)return new o(e[P]);if("oid"==P)return new d(e[P]);if("enum"==P)return new c(e[P]);if("utf8str"==P)return new h(e[P]);if("numstr"==P)return new u(e[P]);if("prnstr"==P)return new l(e[P]);if("telstr"==P)return new p(e[P]);if("ia5str"==P)return new f(e[P]);if("utctime"==P)return new m(e[P]);if("gentime"==P)return new v(e[P]);if("seq"==P){for(var k=e[P],O=[],T=0;T<k.length;T++){var A=w(k[T]);O.push(A)}return new g({array:O})}if("set"==P){for(k=e[P],O=[],T=0;T<k.length;T++)A=w(k[T]),O.push(A);return new y({array:O})}if("tag"==P){var G=e[P];if("[object Array]"===Object.prototype.toString.call(G)&&3==G.length){var I=w(G[2]);return new b({tag:G[0],explicit:G[1],obj:I})}var C={};if(void 0!==G.explicit&&(C.explicit=G.explicit),void 0!==G.tag&&(C.tag=G.tag),void 0===G.obj)throw"obj shall be specified for 'tag'.";return C.obj=w(G.obj),new b(C)}},this.jsonToASN1HEX=function(e){return this.newObject(e).getEncodedHex()}},a.asn1.ASN1Util.oidHexToInt=function(e){for(var t="",i=parseInt(e.substr(0,2),16),r=(t=Math.floor(i/40)+"."+i%40,""),a=2;a<e.length;a+=2){var n=("00000000"+parseInt(e.substr(a,2),16).toString(2)).slice(-8);r+=n.substr(1,7),"0"==n.substr(0,1)&&(t=t+"."+new s.Jh(r,2).toString(10),r="")}return t},a.asn1.ASN1Util.oidIntToHex=function(e){var t=function(e){var t=e.toString(16);return 1==t.length&&(t="0"+t),t},i=function(e){var i="",r=new s.Jh(e,10).toString(2),a=7-r.length%7;7==a&&(a=0);for(var n="",o=0;o<a;o++)n+="0";for(r=n+r,o=0;o<r.length-1;o+=7){var d=r.substr(o,7);o!=r.length-7&&(d="1"+d),i+=t(parseInt(d,2))}return i};if(!e.match(/^[0-9.]+$/))throw"malformed oid string: "+e;var r="",a=e.split("."),n=40*parseInt(a[0])+parseInt(a[1]);r+=t(n),a.splice(0,2);for(var o=0;o<a.length;o++)r+=i(a[o]);return r},a.asn1.ASN1Object=function(){this.getLengthHexFromValue=function(){if(void 0===this.hV||null==this.hV)throw"this.hV is null or undefined.";if(this.hV.length%2==1)throw"value hex must be even length: n="+"".length+",v="+this.hV;var e=this.hV.length/2,t=e.toString(16);if(t.length%2==1&&(t="0"+t),e<128)return t;var i=t.length/2;if(i>15)throw"ASN.1 length too long to represent by 8x: n = "+e.toString(16);return(128+i).toString(16)+t},this.getEncodedHex=function(){return(null==this.hTLV||this.isModified)&&(this.hV=this.getFreshValueHex(),this.hL=this.getLengthHexFromValue(),this.hTLV=this.hT+this.hL+this.hV,this.isModified=!1),this.hTLV},this.getValueHex=function(){return this.getEncodedHex(),this.hV},this.getFreshValueHex=function(){return""}},a.asn1.DERAbstractString=function(e){a.asn1.DERAbstractString.superclass.constructor.call(this),this.getString=function(){return this.s},this.setString=function(e){this.hTLV=null,this.isModified=!0,this.s=e,this.hV=stohex(this.s)},this.setStringHex=function(e){this.hTLV=null,this.isModified=!0,this.s=null,this.hV=e},this.getFreshValueHex=function(){return this.hV},void 0!==e&&("string"==typeof e?this.setString(e):void 0!==e.str?this.setString(e.str):void 0!==e.hex&&this.setStringHex(e.hex))},r.u.lang.extend(a.asn1.DERAbstractString,a.asn1.ASN1Object),a.asn1.DERAbstractTime=function(e){a.asn1.DERAbstractTime.superclass.constructor.call(this),this.localDateToUTC=function(e){return utc=e.getTime()+6e4*e.getTimezoneOffset(),new Date(utc)},this.formatDate=function(e,t,i){var s=this.zeroPadding,r=this.localDateToUTC(e),a=String(r.getFullYear());"utc"==t&&(a=a.substr(2,2));var n=a+s(String(r.getMonth()+1),2)+s(String(r.getDate()),2)+s(String(r.getHours()),2)+s(String(r.getMinutes()),2)+s(String(r.getSeconds()),2);if(!0===i){var o=r.getMilliseconds();if(0!=o){var d=s(String(o),3);n=n+"."+(d=d.replace(/[0]+$/,""))}}return n+"Z"},this.zeroPadding=function(e,t){return e.length>=t?e:new Array(t-e.length+1).join("0")+e},this.getString=function(){return this.s},this.setString=function(e){this.hTLV=null,this.isModified=!0,this.s=e,this.hV=stohex(e)},this.setByDateValue=function(e,t,i,s,r,a){var n=new Date(Date.UTC(e,t-1,i,s,r,a,0));this.setByDate(n)},this.getFreshValueHex=function(){return this.hV}},r.u.lang.extend(a.asn1.DERAbstractTime,a.asn1.ASN1Object),a.asn1.DERAbstractStructured=function(e){a.asn1.DERAbstractString.superclass.constructor.call(this),this.setByASN1ObjectArray=function(e){this.hTLV=null,this.isModified=!0,this.asn1Array=e},this.appendASN1Object=function(e){this.hTLV=null,this.isModified=!0,this.asn1Array.push(e)},this.asn1Array=new Array,void 0!==e&&void 0!==e.array&&(this.asn1Array=e.array)},r.u.lang.extend(a.asn1.DERAbstractStructured,a.asn1.ASN1Object),a.asn1.DERBoolean=function(){a.asn1.DERBoolean.superclass.constructor.call(this),this.hT="01",this.hTLV="0101ff"},r.u.lang.extend(a.asn1.DERBoolean,a.asn1.ASN1Object),a.asn1.DERInteger=function(e){a.asn1.DERInteger.superclass.constructor.call(this),this.hT="02",this.setByBigInteger=function(e){this.hTLV=null,this.isModified=!0,this.hV=a.asn1.ASN1Util.bigIntToMinTwosComplementsHex(e)},this.setByInteger=function(e){var t=new s.Jh(String(e),10);this.setByBigInteger(t)},this.setValueHex=function(e){this.hV=e},this.getFreshValueHex=function(){return this.hV},void 0!==e&&(void 0!==e.bigint?this.setByBigInteger(e.bigint):void 0!==e.int?this.setByInteger(e.int):"number"==typeof e?this.setByInteger(e):void 0!==e.hex&&this.setValueHex(e.hex))},r.u.lang.extend(a.asn1.DERInteger,a.asn1.ASN1Object),a.asn1.DERBitString=function(e){if(void 0!==e&&void 0!==e.obj){var t=a.asn1.ASN1Util.newObject(e.obj);e.hex="00"+t.getEncodedHex()}a.asn1.DERBitString.superclass.constructor.call(this),this.hT="03",this.setHexValueIncludingUnusedBits=function(e){this.hTLV=null,this.isModified=!0,this.hV=e},this.setUnusedBitsAndHexValue=function(e,t){if(e<0||7<e)throw"unused bits shall be from 0 to 7: u = "+e;var i="0"+e;this.hTLV=null,this.isModified=!0,this.hV=i+t},this.setByBinaryString=function(e){var t=8-(e=e.replace(/0+$/,"")).length%8;8==t&&(t=0);for(var i=0;i<=t;i++)e+="0";var s="";for(i=0;i<e.length-1;i+=8){var r=e.substr(i,8),a=parseInt(r,2).toString(16);1==a.length&&(a="0"+a),s+=a}this.hTLV=null,this.isModified=!0,this.hV="0"+t+s},this.setByBooleanArray=function(e){for(var t="",i=0;i<e.length;i++)1==e[i]?t+="1":t+="0";this.setByBinaryString(t)},this.newFalseArray=function(e){for(var t=new Array(e),i=0;i<e;i++)t[i]=!1;return t},this.getFreshValueHex=function(){return this.hV},void 0!==e&&("string"==typeof e&&e.toLowerCase().match(/^[0-9a-f]+$/)?this.setHexValueIncludingUnusedBits(e):void 0!==e.hex?this.setHexValueIncludingUnusedBits(e.hex):void 0!==e.bin?this.setByBinaryString(e.bin):void 0!==e.array&&this.setByBooleanArray(e.array))},r.u.lang.extend(a.asn1.DERBitString,a.asn1.ASN1Object),a.asn1.DEROctetString=function(e){if(void 0!==e&&void 0!==e.obj){var t=a.asn1.ASN1Util.newObject(e.obj);e.hex=t.getEncodedHex()}a.asn1.DEROctetString.superclass.constructor.call(this,e),this.hT="04"},r.u.lang.extend(a.asn1.DEROctetString,a.asn1.DERAbstractString),a.asn1.DERNull=function(){a.asn1.DERNull.superclass.constructor.call(this),this.hT="05",this.hTLV="0500"},r.u.lang.extend(a.asn1.DERNull,a.asn1.ASN1Object),a.asn1.DERObjectIdentifier=function(e){var t=function(e){var t=e.toString(16);return 1==t.length&&(t="0"+t),t},i=function(e){var i="",r=new s.Jh(e,10).toString(2),a=7-r.length%7;7==a&&(a=0);for(var n="",o=0;o<a;o++)n+="0";for(r=n+r,o=0;o<r.length-1;o+=7){var d=r.substr(o,7);o!=r.length-7&&(d="1"+d),i+=t(parseInt(d,2))}return i};a.asn1.DERObjectIdentifier.superclass.constructor.call(this),this.hT="06",this.setValueHex=function(e){this.hTLV=null,this.isModified=!0,this.s=null,this.hV=e},this.setValueOidString=function(e){if(!e.match(/^[0-9.]+$/))throw"malformed oid string: "+e;var s="",r=e.split("."),a=40*parseInt(r[0])+parseInt(r[1]);s+=t(a),r.splice(0,2);for(var n=0;n<r.length;n++)s+=i(r[n]);this.hTLV=null,this.isModified=!0,this.s=null,this.hV=s},this.setValueName=function(e){var t=a.asn1.x509.OID.name2oid(e);if(""===t)throw"DERObjectIdentifier oidName undefined: "+e;this.setValueOidString(t)},this.getFreshValueHex=function(){return this.hV},void 0!==e&&("string"==typeof e?e.match(/^[0-2].[0-9.]+$/)?this.setValueOidString(e):this.setValueName(e):void 0!==e.oid?this.setValueOidString(e.oid):void 0!==e.hex?this.setValueHex(e.hex):void 0!==e.name&&this.setValueName(e.name))},r.u.lang.extend(a.asn1.DERObjectIdentifier,a.asn1.ASN1Object),a.asn1.DEREnumerated=function(e){a.asn1.DEREnumerated.superclass.constructor.call(this),this.hT="0a",this.setByBigInteger=function(e){this.hTLV=null,this.isModified=!0,this.hV=a.asn1.ASN1Util.bigIntToMinTwosComplementsHex(e)},this.setByInteger=function(e){var t=new s.Jh(String(e),10);this.setByBigInteger(t)},this.setValueHex=function(e){this.hV=e},this.getFreshValueHex=function(){return this.hV},void 0!==e&&(void 0!==e.int?this.setByInteger(e.int):"number"==typeof e?this.setByInteger(e):void 0!==e.hex&&this.setValueHex(e.hex))},r.u.lang.extend(a.asn1.DEREnumerated,a.asn1.ASN1Object),a.asn1.DERUTF8String=function(e){a.asn1.DERUTF8String.superclass.constructor.call(this,e),this.hT="0c"},r.u.lang.extend(a.asn1.DERUTF8String,a.asn1.DERAbstractString),a.asn1.DERNumericString=function(e){a.asn1.DERNumericString.superclass.constructor.call(this,e),this.hT="12"},r.u.lang.extend(a.asn1.DERNumericString,a.asn1.DERAbstractString),a.asn1.DERPrintableString=function(e){a.asn1.DERPrintableString.superclass.constructor.call(this,e),this.hT="13"},r.u.lang.extend(a.asn1.DERPrintableString,a.asn1.DERAbstractString),a.asn1.DERTeletexString=function(e){a.asn1.DERTeletexString.superclass.constructor.call(this,e),this.hT="14"},r.u.lang.extend(a.asn1.DERTeletexString,a.asn1.DERAbstractString),a.asn1.DERIA5String=function(e){a.asn1.DERIA5String.superclass.constructor.call(this,e),this.hT="16"},r.u.lang.extend(a.asn1.DERIA5String,a.asn1.DERAbstractString),a.asn1.DERUTCTime=function(e){a.asn1.DERUTCTime.superclass.constructor.call(this,e),this.hT="17",this.setByDate=function(e){this.hTLV=null,this.isModified=!0,this.date=e,this.s=this.formatDate(this.date,"utc"),this.hV=stohex(this.s)},this.getFreshValueHex=function(){return void 0===this.date&&void 0===this.s&&(this.date=new Date,this.s=this.formatDate(this.date,"utc"),this.hV=stohex(this.s)),this.hV},void 0!==e&&(void 0!==e.str?this.setString(e.str):"string"==typeof e&&e.match(/^[0-9]{12}Z$/)?this.setString(e):void 0!==e.hex?this.setStringHex(e.hex):void 0!==e.date&&this.setByDate(e.date))},r.u.lang.extend(a.asn1.DERUTCTime,a.asn1.DERAbstractTime),a.asn1.DERGeneralizedTime=function(e){a.asn1.DERGeneralizedTime.superclass.constructor.call(this,e),this.hT="18",this.withMillis=!1,this.setByDate=function(e){this.hTLV=null,this.isModified=!0,this.date=e,this.s=this.formatDate(this.date,"gen",this.withMillis),this.hV=stohex(this.s)},this.getFreshValueHex=function(){return void 0===this.date&&void 0===this.s&&(this.date=new Date,this.s=this.formatDate(this.date,"gen",this.withMillis),this.hV=stohex(this.s)),this.hV},void 0!==e&&(void 0!==e.str?this.setString(e.str):"string"==typeof e&&e.match(/^[0-9]{14}Z$/)?this.setString(e):void 0!==e.hex?this.setStringHex(e.hex):void 0!==e.date&&this.setByDate(e.date),!0===e.millis&&(this.withMillis=!0))},r.u.lang.extend(a.asn1.DERGeneralizedTime,a.asn1.DERAbstractTime),a.asn1.DERSequence=function(e){a.asn1.DERSequence.superclass.constructor.call(this,e),this.hT="30",this.getFreshValueHex=function(){for(var e="",t=0;t<this.asn1Array.length;t++)e+=this.asn1Array[t].getEncodedHex();return this.hV=e,this.hV}},r.u.lang.extend(a.asn1.DERSequence,a.asn1.DERAbstractStructured),a.asn1.DERSet=function(e){a.asn1.DERSet.superclass.constructor.call(this,e),this.hT="31",this.sortFlag=!0,this.getFreshValueHex=function(){for(var e=new Array,t=0;t<this.asn1Array.length;t++){var i=this.asn1Array[t];e.push(i.getEncodedHex())}return 1==this.sortFlag&&e.sort(),this.hV=e.join(""),this.hV},void 0!==e&&void 0!==e.sortflag&&0==e.sortflag&&(this.sortFlag=!1)},r.u.lang.extend(a.asn1.DERSet,a.asn1.DERAbstractStructured),a.asn1.DERTaggedObject=function(e){a.asn1.DERTaggedObject.superclass.constructor.call(this),this.hT="a0",this.hV="",this.isExplicit=!0,this.asn1Object=null,this.setASN1Object=function(e,t,i){this.hT=t,this.isExplicit=e,this.asn1Object=i,this.isExplicit?(this.hV=this.asn1Object.getEncodedHex(),this.hTLV=null,this.isModified=!0):(this.hV=null,this.hTLV=i.getEncodedHex(),this.hTLV=this.hTLV.replace(/^../,t),this.isModified=!1)},this.getFreshValueHex=function(){return this.hV},void 0!==e&&(void 0!==e.tag&&(this.hT=e.tag),void 0!==e.explicit&&(this.isExplicit=e.explicit),void 0!==e.obj&&(this.asn1Object=e.obj,this.setASN1Object(this.isExplicit,this.hT,this.asn1Object)))},r.u.lang.extend(a.asn1.DERTaggedObject,a.asn1.ASN1Object)},1532:(e,t,i)=>{i.d(t,{u:()=>s});var s={};s.lang={extend:function(e,t,i){if(!t||!e)throw new Error("YAHOO.lang.extend failed, please check that all dependencies are included.");var s=function(){};if(s.prototype=t.prototype,e.prototype=new s,e.prototype.constructor=e,e.superclass=t.prototype,t.prototype.constructor==Object.prototype.constructor&&(t.prototype.constructor=t),i){var r;for(r in i)e.prototype[r]=i[r];var a=function(){},n=["toString","valueOf"];try{/MSIE/.test(navigator.userAgent)&&(a=function(e,t){for(r=0;r<n.length;r+=1){var i=n[r],s=t[i];"function"==typeof s&&s!=Object.prototype[i]&&(e[i]=s)}})}catch(e){}a(e.prototype,i)}}}}},t={};function i(s){var r=t[s];if(void 0!==r)return r.exports;var a=t[s]={exports:{}};return e[s](a,a.exports,i),a.exports}i.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return i.d(t,{a:t}),t},i.d=(e,t)=>{for(var s in t)i.o(t,s)&&!i.o(e,s)&&Object.defineProperty(e,s,{enumerable:!0,get:t[s]})},i.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),i.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var s={};(()=>{i.r(s),i.d(s,{AccountNotEnabled:()=>a.AccountNotEnabled,AccountSuspended:()=>a.AccountSuspended,AddressPending:()=>a.AddressPending,ArgumentsRequired:()=>a.ArgumentsRequired,AuthenticationError:()=>a.AuthenticationError,BadRequest:()=>a.BadRequest,BadResponse:()=>a.BadResponse,BadSymbol:()=>a.BadSymbol,BaseError:()=>a.BaseError,CancelPending:()=>a.CancelPending,DDoSProtection:()=>a.DDoSProtection,DuplicateOrderId:()=>a.DuplicateOrderId,Exchange:()=>e.e,ExchangeError:()=>a.ExchangeError,ExchangeNotAvailable:()=>a.ExchangeNotAvailable,InsufficientFunds:()=>a.InsufficientFunds,InvalidAddress:()=>a.InvalidAddress,InvalidNonce:()=>a.InvalidNonce,InvalidOrder:()=>a.InvalidOrder,MarginModeAlreadySet:()=>a.MarginModeAlreadySet,NetworkError:()=>a.NetworkError,NotSupported:()=>a.NotSupported,NullResponse:()=>a.NullResponse,OnMaintenance:()=>a.OnMaintenance,OrderImmediatelyFillable:()=>a.OrderImmediatelyFillable,OrderNotCached:()=>a.OrderNotCached,OrderNotFillable:()=>a.OrderNotFillable,OrderNotFound:()=>a.OrderNotFound,PermissionDenied:()=>a.PermissionDenied,Precise:()=>t.O,RateLimitExceeded:()=>a.RateLimitExceeded,RequestTimeout:()=>a.RequestTimeout,ace:()=>n.Z,alpaca:()=>o.Z,ascendex:()=>d.Z,bequant:()=>c.Z,bigone:()=>h.Z,binance:()=>u.Z,binancecoinm:()=>l.Z,binanceus:()=>p.Z,binanceusdm:()=>f.Z,bit2c:()=>m.Z,bitbank:()=>v.Z,bitbay:()=>g.Z,bitbns:()=>y.Z,bitcoincom:()=>b.Z,bitfinex:()=>w.Z,bitfinex2:()=>S.Z,bitflyer:()=>P.Z,bitforex:()=>k.Z,bitget:()=>O.Z,bithumb:()=>T.Z,bitmart:()=>A.Z,bitmex:()=>G.Z,bitopro:()=>I.Z,bitpanda:()=>C.Z,bitrue:()=>M.Z,bitso:()=>x.Z,bitstamp:()=>V.Z,bitstamp1:()=>E.Z,bittrex:()=>B.Z,bitvavo:()=>_.Z,bkex:()=>R.Z,bl3p:()=>N.Z,blockchaincom:()=>L.Z,btcalpha:()=>D.Z,btcbox:()=>F.Z,btcex:()=>q.Z,btcmarkets:()=>H.Z,btctradeua:()=>U.Z,btcturk:()=>W.Z,buda:()=>K.Z,bybit:()=>j.Z,cex:()=>z.Z,coinbase:()=>Z.Z,coinbaseprime:()=>Q.Z,coinbasepro:()=>X.Z,coincheck:()=>Y.Z,coinex:()=>J.Z,coinfalcon:()=>$.Z,coinmate:()=>ee.Z,coinone:()=>te.Z,coinsph:()=>ie.Z,coinspot:()=>se.Z,cryptocom:()=>re.Z,currencycom:()=>ae.Z,default:()=>pi,delta:()=>ne.Z,deribit:()=>oe.Z,digifinex:()=>de.Z,errors:()=>a,exchanges:()=>ui,exmo:()=>ce.Z,flowbtc:()=>he.Z,fmfwio:()=>ue.Z,functions:()=>r,gate:()=>le.Z,gateio:()=>pe.Z,gemini:()=>fe.Z,hitbtc:()=>me.Z,hitbtc3:()=>ve.Z,hollaex:()=>ge.Z,huobi:()=>ye.Z,huobijp:()=>be.Z,huobipro:()=>we.Z,idex:()=>Se.Z,independentreserve:()=>Pe.Z,indodax:()=>ke.Z,itbit:()=>Oe.Z,kraken:()=>Te.Z,krakenfutures:()=>Ae.Z,kucoin:()=>Ge.Z,kucoinfutures:()=>Ie.Z,kuna:()=>Ce.Z,latoken:()=>Me.Z,lbank:()=>xe.Z,lbank2:()=>Ve.Z,luno:()=>Ee.Z,lykke:()=>Be.Z,mercado:()=>_e.Z,mexc:()=>Re.Z,mexc3:()=>Ne.Z,ndax:()=>Le.Z,novadax:()=>De.Z,oceanex:()=>Fe.Z,okcoin:()=>qe.Z,okex:()=>He.Z,okex5:()=>Ue.Z,okx:()=>We.Z,paymium:()=>Ke.Z,phemex:()=>je.Z,poloniex:()=>ze.Z,poloniexfutures:()=>Ze.Z,pro:()=>li,probit:()=>Qe.Z,ripio:()=>Xe.Z,stex:()=>Ye.Z,tidex:()=>Je.Z,timex:()=>$e.Z,tokocrypto:()=>et.Z,upbit:()=>tt.Z,version:()=>hi,wavesexchange:()=>it.Z,wazirx:()=>st.Z,whitebit:()=>rt.Z,woo:()=>at.Z,yobit:()=>nt.Z,zaif:()=>ot.Z,zb:()=>dt.Z,zonda:()=>ct.Z});var e=i(3043),t=i(2194),r=i(7100),a=i(6689),n=i(9869),o=i(5660),d=i(9612),c=i(2049),h=i(7679),u=i(9987),l=i(9212),p=i(2723),f=i(3254),m=i(7691),v=i(7820),g=i(668),y=i(7790),b=i(1819),w=i(6537),S=i(730),P=i(8429),k=i(2035),O=i(9051),T=i(5305),A=i(3718),G=i(7077),I=i(172),C=i(2737),M=i(854),x=i(4388),V=i(4667),E=i(1242),B=i(8963),_=i(9943),R=i(2574),N=i(9476),L=i(182),D=i(6246),F=i(7796),q=i(1393),H=i(1776),U=i(8776),W=i(6304),K=i(5396),j=i(3527),z=i(6445),Z=i(437),Q=i(1741),X=i(8856),Y=i(2117),J=i(332),$=i(5585),ee=i(9816),te=i(7811),ie=i(5782),se=i(7794),re=i(9129),ae=i(3214),ne=i(1753),oe=i(24),de=i(8846),ce=i(1729),he=i(5991),ue=i(5788),le=i(7290),pe=i(7036),fe=i(6743),me=i(4714),ve=i(4815),ge=i(8422),ye=i(8146),be=i(7034),we=i(5547),Se=i(8232),Pe=i(9570),ke=i(1605),Oe=i(1679),Te=i(9922),Ae=i(4470),Ge=i(3583),Ie=i(1924),Ce=i(7732),Me=i(2545),xe=i(3944),Ve=i(8601),Ee=i(1758),Be=i(3803),_e=i(9013),Re=i(6641),Ne=i(2305),Le=i(4531),De=i(2449),Fe=i(6749),qe=i(3007),He=i(5322),Ue=i(7826),We=i(4042),Ke=i(7082),je=i(79),ze=i(8891),Ze=i(6877),Qe=i(3657),Xe=i(1320),Ye=i(2152),Je=i(4224),$e=i(1067),et=i(5261),tt=i(7584),it=i(3853),st=i(6536),rt=i(5467),at=i(517),nt=i(3850),ot=i(5934),dt=i(5143),ct=i(5140),ht=i(2467),ut=i(2383),lt=i(8848),pt=i(8764),ft=i(5078),mt=i(1326),vt=i(1230),gt=i(453),yt=i(9772),bt=i(588),wt=i(1885),St=i(7504),Pt=i(2302),kt=i(2191),Ot=i(3005),Tt=i(3623),At=i(2883),Gt=i(6977),It=i(4463),Ct=i(5030),Mt=i(5272),xt=i(3848),Vt=i(8368),Et=i(204),Bt=i(6820),_t=i(2952),Rt=i(1788),Nt=i(9004),Lt=i(8335),Dt=i(1465),Ft=i(9488),qt=i(5189),Ht=i(8559),Ut=i(8384),Wt=i(9021),Kt=i(4625),jt=i(3484),zt=i(1311),Zt=i(736),Qt=i(2387),Xt=i(7181),Yt=i(627),Jt=i(6484),$t=i(8080),ei=i(7105),ti=i(1530),ii=i(2214),si=i(4360),ri=i(7283),ai=i(7614),ni=i(4828),oi=i(5630),di=i(3910),ci=i(9571);const hi="3.0.37";e.e.ccxtVersion=hi;const ui={ace:n.Z,alpaca:o.Z,ascendex:d.Z,bequant:c.Z,bigone:h.Z,binance:u.Z,binancecoinm:l.Z,binanceus:p.Z,binanceusdm:f.Z,bit2c:m.Z,bitbank:v.Z,bitbay:g.Z,bitbns:y.Z,bitcoincom:b.Z,bitfinex:w.Z,bitfinex2:S.Z,bitflyer:P.Z,bitforex:k.Z,bitget:O.Z,bithumb:T.Z,bitmart:A.Z,bitmex:G.Z,bitopro:I.Z,bitpanda:C.Z,bitrue:M.Z,bitso:x.Z,bitstamp:V.Z,bitstamp1:E.Z,bittrex:B.Z,bitvavo:_.Z,bkex:R.Z,bl3p:N.Z,blockchaincom:L.Z,btcalpha:D.Z,btcbox:F.Z,btcex:q.Z,btcmarkets:H.Z,btctradeua:U.Z,btcturk:W.Z,buda:K.Z,bybit:j.Z,cex:z.Z,coinbase:Z.Z,coinbaseprime:Q.Z,coinbasepro:X.Z,coincheck:Y.Z,coinex:J.Z,coinfalcon:$.Z,coinmate:ee.Z,coinone:te.Z,coinsph:ie.Z,coinspot:se.Z,cryptocom:re.Z,currencycom:ae.Z,delta:ne.Z,deribit:oe.Z,digifinex:de.Z,exmo:ce.Z,flowbtc:he.Z,fmfwio:ue.Z,gate:le.Z,gateio:pe.Z,gemini:fe.Z,hitbtc:me.Z,hitbtc3:ve.Z,hollaex:ge.Z,huobi:ye.Z,huobijp:be.Z,huobipro:we.Z,idex:Se.Z,independentreserve:Pe.Z,indodax:ke.Z,itbit:Oe.Z,kraken:Te.Z,krakenfutures:Ae.Z,kucoin:Ge.Z,kucoinfutures:Ie.Z,kuna:Ce.Z,latoken:Me.Z,lbank:xe.Z,lbank2:Ve.Z,luno:Ee.Z,lykke:Be.Z,mercado:_e.Z,mexc:Re.Z,mexc3:Ne.Z,ndax:Le.Z,novadax:De.Z,oceanex:Fe.Z,okcoin:qe.Z,okex:He.Z,okex5:Ue.Z,okx:We.Z,paymium:Ke.Z,phemex:je.Z,poloniex:ze.Z,poloniexfutures:Ze.Z,probit:Qe.Z,ripio:Xe.Z,stex:Ye.Z,tidex:Je.Z,timex:$e.Z,tokocrypto:et.Z,upbit:tt.Z,wavesexchange:it.Z,wazirx:st.Z,whitebit:rt.Z,woo:at.Z,yobit:nt.Z,zaif:ot.Z,zb:dt.Z,zonda:ct.Z},li={alpaca:ht.Z,ascendex:ut.Z,bequant:lt.Z,binance:pt.Z,binancecoinm:ft.Z,binanceus:mt.Z,binanceusdm:vt.Z,bitcoincom:gt.Z,bitfinex:yt.Z,bitfinex2:bt.Z,bitget:wt.Z,bitmart:St.Z,bitmex:Pt.Z,bitopro:kt.Z,bitrue:Ot.Z,bitstamp:Tt.Z,bittrex:At.Z,bitvavo:Gt.Z,btcex:It.Z,bybit:Ct.Z,cex:Mt.Z,coinbaseprime:xt.Z,coinbasepro:Vt.Z,coinex:Et.Z,cryptocom:Bt.Z,currencycom:_t.Z,deribit:Rt.Z,exmo:Nt.Z,gate:Lt.Z,gateio:Dt.Z,gemini:Ft.Z,hitbtc:qt.Z,hollaex:Ht.Z,huobi:Ut.Z,huobijp:Wt.Z,huobipro:Kt.Z,idex:jt.Z,independentreserve:zt.Z,kraken:Zt.Z,kucoin:Qt.Z,kucoinfutures:Xt.Z,luno:Yt.Z,mexc:Jt.Z,ndax:$t.Z,okcoin:ei.Z,okex:ti.Z,okx:ii.Z,phemex:si.Z,ripio:ri.Z,upbit:ai.Z,wazirx:ni.Z,whitebit:oi.Z,woo:di.Z,zb:ci.Z};for(const e in li);li.exchanges=Object.keys(li),li.Exchange=e.e;const pi=Object.assign({version:hi,Exchange:e.e,Precise:t.O,exchanges:Object.keys(ui),pro:li},ui,r,a)})(),window.ccxt=s})();