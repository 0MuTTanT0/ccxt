<?php
namespace ccxt;
include_once (__DIR__.'/../../ccxt.php');
// ----------------------------------------------------------------------------

// PLEASE DO NOT EDIT THIS FILE, IT IS GENERATED AND WILL BE OVERWRITTEN:
// https://github.com/ccxt/ccxt/blob/master/CONTRIBUTING.md#how-to-contribute-code

// -----------------------------------------------------------------------------

error_reporting(E_ALL | E_STRICT);
date_default_timezone_set('UTC');

use ccxt\Precise;
use React\Async;
use React\Promise;


// // AUTO-TRANSPILE //
function example_proxy_url() {
    return Async\async(function () {
        $my_ex = new \ccxt\async\kucoin();
        $my_ex->proxy_url = 'http://5.75.153.75:8090/proxy.php?url=';
        var_dump(Async\await($my_ex->fetch('https://api.ipify.org/')));
    }) ();
}


function example_http_proxy() {
    return Async\async(function () {
        $my_ex = new \ccxt\async\kucoin();
        $my_ex->https_proxy = 'http://5.75.153.75:8888'; // "httpProxy" or "httpsProxy" (depending on your proxy protocol)
        var_dump(Async\await($my_ex->fetch('https://api.ipify.org/')));
    }) ();
}


function example_socks_proxy() {
    return Async\async(function () {
        $my_ex = new \ccxt\async\kucoin();
        $my_ex->socks_proxy = 'socks5://127.0.0.1:1080'; // socks5 or socks5h
        var_dump(Async\await($my_ex->fetch('https://api.ipify.org/')));
    }) ();
}


function example_web_sockets() {
    return Async\async(function () {
        $my_ex = new \ccxt\async\pro->kucoin();
        Async\await($my_ex->initialize_proxies()); // only needed for WEBSOCKETS in JAVASCRIPT, not in PYTHON or PHP
        $my_ex->http_proxy = 'http://5.75.153.75:8002'; // "httpProxy" or "httpsProxy" (depending on your proxy protocol)
        $my_ex->handle_message = $ws_helper_callback;
        Async\await($my_ex->watch('ws://5.75.153.75:9876', 'test', 'test'));
        var_dump('WS proxy test finished');
    }) ();
}


function ws_helper_callback($client, $message) {
    var_dump('WS received:', $message);
}


// await example_proxyUrl ();
// await example_httpProxy ();
// await example_socksProxy ();
Async\await(example_web_sockets());
